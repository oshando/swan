<org.apache.xalan.lib.sql.XConnection: void disableDefaultConnectionPool()> 
<org.apache.xalan.lib.sql.DefaultConnectionPool: java.sql.Connection createConnection()> 
<org.apache.xalan.lib.sql.XConnection: org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,java.lang.String)> 
<org.apache.xalan.lib.sql.JNDIConnectionPool: boolean testConnection()> 
<org.apache.http.auth.AuthState: void setCredentials(org.apache.http.auth.Credentials)> 
<org.apache.xalan.lib.sql.DefaultConnectionPool: boolean testConnection()> 
<org.apache.xalan.lib.sql.DefaultConnectionPool: java.sql.Connection getConnection()> 
<org.apache.xalan.lib.sql.JNDIConnectionPool: void setMinConnections(int)> 
<org.apache.xalan.lib.sql.XConnection: org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String)> 
<org.apache.http.impl.client.AbstractHttpClient: void setCredentialsProvider(org.apache.http.client.CredentialsProvider)> 
<org.apache.xalan.lib.sql.JNDIConnectionPool: void releaseConnection(java.sql.Connection)> 
<org.apache.xalan.lib.sql.XConnection: void enableDefaultConnectionPool()> 
<org.apache.xalan.lib.sql.DefaultConnectionPool: void addConnection(org.apache.xalan.lib.sql.PooledConnection)> 
<org.apache.http.impl.client.BasicCredentialsProvider: void setCredentials(org.apache.http.auth.AuthScope,org.apache.http.auth.Credentials)> 
<org.apache.xalan.lib.sql.PooledConnection: java.sql.Connection getConnection()> 
<org.apache.xalan.lib.sql.XConnection: org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.Element)> 
<org.apache.xalan.lib.sql.XConnection: org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList)> 
<org.apache.http.impl.conn.DefaultClientConnectionOperator: org.apache.http.conn.OperatedClientConnection createConnection()> 
<org.apache.xalan.lib.sql.DefaultConnectionPool: boolean hasActiveConnections()> 
<org.apache.xalan.lib.sql.XConnection: org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String,org.w3c.dom.Element)> 
<org.apache.xalan.lib.sql.JNDIConnectionPool: boolean hasActiveConnections()> 
<org.apache.http.impl.auth.AuthSchemeBase: org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)> 
<org.apache.http.impl.conn.DefaultClientConnectionOperator: void updateSecureConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)> 
<org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)> 
<org.apache.http.impl.conn.IdleConnectionHandler: void closeExpiredConnections()> 
<org.apache.xalan.lib.sql.JNDIConnectionPool: void releaseConnectionOnError(java.sql.Connection)> 
<org.apache.xmlrpc.common.LocalStreamConnection: org.apache.xmlrpc.common.ServerStreamConnection getServerStreamConnection()> 
<org.apache.http.client.protocol.ClientContextConfigurer: void setCredentialsProvider(org.apache.http.client.CredentialsProvider)> 
<org.apache.xalan.lib.sql.DefaultConnectionPool: void releaseConnectionOnError(java.sql.Connection)> 
<org.apache.xalan.lib.sql.JNDIConnectionPool: java.sql.Connection getConnection()> 
<org.apache.xalan.lib.sql.XConnection: org.apache.xalan.lib.sql.ConnectionPool getConnectionPool()> 
<org.apache.xalan.lib.sql.XConnection: org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> 
<org.apache.xalan.lib.sql.DefaultConnectionPool: void releaseConnection(java.sql.Connection)> 
<org.apache.http.impl.conn.IdleConnectionHandler: void closeIdleConnections(long)> 
<org.apache.xalan.lib.sql.DefaultConnectionPool: void setMinConnections(int)> 
