<org.apache.xerces.jaxp.datatype.DurationImpl: java.math.BigDecimal sanitize(java.math.BigDecimal,int)> 
<org.apache.xalan.extensions.MethodResolver: java.lang.String replaceDash(java.lang.String)> 
<org.apache.xalan.client.XSLTProcessorApplet: java.lang.String escapeString(java.lang.String)> 
<org.apache.xalan.xsltc.compiler.FunctionCall: java.lang.String replaceDash(java.lang.String)> 
<org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser: java.lang.String escapeAttValue(java.lang.String,int)> 
<org.apache.bcel.classfile.ConstantPool: java.lang.String escape(java.lang.String)> 
<org.apache.commons.collections.ExtendedProperties: java.lang.String escape(java.lang.String)> 
<org.apache.xerces.impl.dv.util.HexBin: java.lang.String encode(byte[])> 
<org.apache.xalan.xsltc.runtime.BasisLibrary: java.lang.String replace(java.lang.String,char,java.lang.String)> 
<org.apache.http.impl.auth.NTLMEngineImpl: java.lang.String convertHost(java.lang.String)> 
<org.apache.http.client.utils.URLEncodedUtils: boolean isEncoded(org.apache.http.HttpEntity)> 
<org.apache.xerces.impl.xpath.regex.RangeToken: java.lang.String escapeCharInCharClass(int)> 
<org.apache.xerces.impl.XMLEntityManager: java.lang.String getPathWithoutEscapes(java.lang.String)> 
<org.apache.xerces.impl.dv.util.Base64: java.lang.String encode(byte[])> 
<org.apache.xerces.jaxp.validation.JAXPValidationMessageFormatter: java.lang.String formatMessage(java.util.Locale,java.lang.String,java.lang.Object[])> 
<org.apache.http.impl.auth.NTLMEngineImpl: java.lang.String getType3Message(java.lang.String,java.lang.String,java.lang.String,java.lang.String,byte[],int,java.lang.String,byte[])> 
<org.apache.xerces.impl.xpath.regex.REUtil: java.lang.String stripExtendedComment(java.lang.String)> 
<org.apache.xerces.jaxp.datatype.DurationImpl: java.math.BigDecimal sanitize(java.math.BigInteger,int)> 
<org.apache.xalan.xsltc.compiler.util.Util: java.lang.String escape(java.lang.String)> 
<org.apache.xerces.jaxp.datatype.XMLGregorianCalendarImpl: java.math.BigInteger sanitize(java.lang.Number,int)> 
<org.apache.http.impl.auth.NTLMEngineImpl: java.lang.String stripDotSuffix(java.lang.String)> 
<org.apache.xerces.impl.xs.opti.SchemaDOM: java.lang.String escapeAttValue(java.lang.String,int)> 
<org.apache.xml.serialize.HTMLSerializer: java.lang.String escapeURI(java.lang.String)> 
<org.apache.xmlrpc.util.HttpUtil: java.lang.String encodeBasicAuthentication(java.lang.String,java.lang.String,java.lang.String)> 
<org.apache.xmlrpc.webserver.HttpServletResponseImpl: java.lang.String encodeURL(java.lang.String)> 
<org.apache.xalan.lib.ExsltDatetime: java.lang.String strip(java.lang.String,java.lang.String)> 
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String encode(java.lang.String,java.lang.String)> 
<org.apache.xerces.impl.dv.xs.AnyURIDV: java.lang.String encode(java.lang.String)> 
<org.apache.bcel.classfile.Utility: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)> 
<org.apache.xalan.xsltc.compiler.Sort: java.lang.String compileSortRecordFactory(java.util.Vector,org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,java.lang.String)> 
<org.apache.xml.utils.SystemIDResolver: java.lang.String replaceChars(java.lang.String)> 
<org.apache.xalan.xsltc.dom.DocumentCache: void replaceDocument(java.lang.String,org.apache.xalan.xsltc.dom.DocumentCache$CachedDocument)> 
<org.apache.http.impl.auth.NTLMEngineImpl: java.lang.String convertDomain(java.lang.String)> 
<org.apache.xalan.xsltc.compiler.util.Util: java.lang.String replace(java.lang.String,char,java.lang.String)> 
<org.apache.xerces.xinclude.XIncludeHandler: java.lang.String escapeHref(java.lang.String)> 
<org.apache.http.impl.auth.DigestScheme: java.lang.String encode(byte[])> 
<org.apache.bcel.classfile.Utility: java.lang.String encode(byte[],boolean)> 
<org.apache.xmlrpc.webserver.HttpServletResponseImpl: java.lang.String encodeRedirectURL(java.lang.String)> 
<org.apache.xmlrpc.webserver.HttpServletResponseImpl: java.lang.String encodeRedirectUrl(java.lang.String)> 
