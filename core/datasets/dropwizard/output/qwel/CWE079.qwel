methods CWE079_sources [ 
ch.qos.logback.classic.LoggerContext io.dropwizard.logging.DefaultLoggingFactory.getLoggerContext(); 
java.util.Optional io.dropwizard.util.JarLocation.getVersion(); 
org.eclipse.jetty.server.ConnectionFactory io.dropwizard.jetty.Jetty93InstrumentedConnectionFactory.getConnectionFactory(); 
int io.dropwizard.jetty.NetUtil.getTcpBacklog(); 
java.lang.reflect.Type io.dropwizard.validation.valuehandling.OptionalIntValidatedValueUnwrapper.getValidatedValueType(java.lang.reflect.Type); 
java.lang.String io.dropwizard.jackson.GuavaExtrasModule.getModuleName(); 
io.dropwizard.util.Duration io.dropwizard.jetty.HttpConnectorFactory.getBlockingTimeout(); 
java.net.URI io.dropwizard.jetty.HttpsConnectorFactory.getOcspResponderUrl(); 
boolean io.dropwizard.jetty.HttpsConnectorFactory.getAllowRenegotiation(); 
java.lang.String io.dropwizard.jetty.HttpConnectorFactory.getBindHost(); 
java.lang.String io.dropwizard.logging.AbstractAppenderFactory.getThreshold(); 
java.util.List io.dropwizard.jetty.ServerPushFilterFactory.getRefererHosts(); 
java.lang.String io.dropwizard.logging.AbstractAppenderFactory.getLogFormat(); 
java.lang.reflect.Type io.dropwizard.validation.valuehandling.OptionalLongValidatedValueUnwrapper.getValidatedValueType(java.lang.reflect.Type); 
int io.dropwizard.logging.AbstractAppenderFactory.getQueueSize(); 
java.util.List io.dropwizard.jetty.HttpsConnectorFactory.getSupportedCipherSuites(); 
java.lang.String io.dropwizard.jetty.HttpsConnectorFactory.getKeyManagerPassword(); 
com.google.common.collect.ImmutableList io.dropwizard.jackson.DiscoverableSubtypeResolver.getDiscoveredSubtypes(); 
java.lang.String io.dropwizard.jetty.HttpsConnectorFactory.getKeyStoreProvider(); 
java.lang.String io.dropwizard.logging.UdpSocketAppenderFactory.getHost(); 
int io.dropwizard.jetty.GzipHandlerFactory.getDeflateCompressionLevel(); 
java.util.List io.dropwizard.jetty.HttpsConnectorFactory.getExcludedProtocols(); 
int io.dropwizard.jetty.HttpConnectorFactory.getPort(); 
java.lang.String io.dropwizard.logging.FileAppenderFactory.getArchivedLogFilenamePattern(); 
io.dropwizard.logging.SyslogAppenderFactory$Facility io.dropwizard.logging.SyslogAppenderFactory.getFacility(); 
java.lang.String io.dropwizard.jetty.HttpsConnectorFactory.getKeyStoreType(); 
java.lang.String io.dropwizard.logging.FileAppenderFactory.getCurrentLogFilename(); 
java.lang.String io.dropwizard.logging.DefaultLoggingFactory.getLevel(); 
java.lang.Boolean io.dropwizard.jetty.HttpsConnectorFactory.getEnableCRLDP(); 
java.lang.Object io.dropwizard.validation.selfvalidating.ValidationCaller.getValidationObject(); 
io.dropwizard.jetty.LocalIpFilter io.dropwizard.jetty.NetUtil.getLocalIpFilter(); 
java.lang.String io.dropwizard.jackson.FuzzyEnumModule.getModuleName(); 
java.lang.String io.dropwizard.logging.LoggerConfiguration.getLevel(); 
java.lang.String io.dropwizard.jetty.HttpsConnectorFactory.getTrustStoreType(); 
java.util.Map io.dropwizard.logging.json.AbstractJsonLayoutBaseFactory.getCustomFieldNames(); 
boolean io.dropwizard.jetty.HttpsConnectorFactory.getValidatePeers(); 
io.dropwizard.util.Duration io.dropwizard.jetty.HttpConnectorFactory.getSoLingerTime(); 
java.lang.String io.dropwizard.jetty.HttpsConnectorFactory.getCertAlias(); 
io.dropwizard.util.Size io.dropwizard.logging.FileAppenderFactory.getMaxFileSize(); 
io.dropwizard.util.Size io.dropwizard.jetty.GzipHandlerFactory.getMinimumEntitySize(); 
java.util.TimeZone io.dropwizard.request.logging.old.LogbackClassicRequestLogFactory.getTimeZone(); 
boolean io.dropwizard.logging.SyslogAppenderFactory.getIncludeStackTrace(); 
java.lang.Class io.dropwizard.util.Generics.getTypeParameter(java.lang.Class); 
io.dropwizard.util.Duration io.dropwizard.logging.TcpSocketAppenderFactory.getConnectionTimeout(); 
void io.dropwizard.jetty.SslReload.reload(); 
java.util.concurrent.TimeUnit io.dropwizard.util.Duration.getUnit(); 
java.lang.String io.dropwizard.logging.json.layout.AccessJsonLayout.getJsonProtocolVersion(); 
io.dropwizard.util.Duration io.dropwizard.jetty.HttpConnectorFactory.getIdleTimeout(); 
java.lang.String io.dropwizard.logging.SyslogAppenderFactory.getHost(); 
com.google.common.collect.ImmutableSet io.dropwizard.logging.json.layout.AccessJsonLayout.getIncludes(); 
com.codahale.metrics.Timer io.dropwizard.jetty.Jetty93InstrumentedConnectionFactory.getTimer(); 
com.google.common.collect.ImmutableSet io.dropwizard.logging.json.layout.EventJsonLayout.getIncludesMdcKeys(); 
org.eclipse.jetty.util.ssl.SslContextFactory io.dropwizard.jetty.SslReload.getFactory(); 
java.util.Set io.dropwizard.logging.json.AccessJsonLayoutBaseFactory.getRequestHeaders(); 
java.util.Collection io.dropwizard.jetty.NetUtil.getAllLocalIPs(); 
java.util.EnumSet io.dropwizard.logging.json.EventJsonLayoutBaseFactory.getIncludes(); 
io.dropwizard.jetty.BiDiGzipHandler$WrappedServletRequest io.dropwizard.jetty.BiDiGzipHandler.wrapDeflatedRequest(javax.servlet.http.HttpServletRequest); 
java.lang.ClassLoader io.dropwizard.jackson.DiscoverableSubtypeResolver.getClassLoader(); 
io.dropwizard.util.Size io.dropwizard.jetty.HttpConnectorFactory.getInputBufferSize(); 
java.util.List io.dropwizard.jetty.ServerPushFilterFactory.getRefererPorts(); 
long io.dropwizard.util.Duration.getQuantity(); 
io.dropwizard.util.Duration io.dropwizard.jetty.ServerPushFilterFactory.getAssociatePeriod(); 
java.lang.reflect.Type io.dropwizard.validation.valuehandling.OptionalDoubleValidatedValueUnwrapper.getValidatedValueType(java.lang.reflect.Type); 
java.lang.String ch.qos.logback.core.recovery.ResilentSocketOutputStream.getDescription(); 
java.lang.String io.dropwizard.jetty.Jetty93InstrumentedConnectionFactory.getProtocol(); 
long io.dropwizard.jetty.HttpConnectorFactory.getMinRequestDataRate(); 
int io.dropwizard.logging.UdpSocketAppenderFactory.getPort(); 
io.dropwizard.util.Size io.dropwizard.jetty.HttpConnectorFactory.getBufferPoolIncrement(); 
java.lang.Integer io.dropwizard.jetty.HttpConnectorFactory.getAcceptQueueSize(); 
java.util.Set io.dropwizard.jetty.GzipHandlerFactory.getCompressedMimeTypes(); 
java.util.List io.dropwizard.jetty.HttpsConnectorFactory.getExcludedCipherSuites(); 
javax.validation.ConstraintValidatorContext io.dropwizard.validation.selfvalidating.ViolationCollector.getContext(); 
java.util.Optional io.dropwizard.jetty.HttpConnectorFactory.getAcceptorThreads(); 
java.lang.Boolean io.dropwizard.jetty.HttpsConnectorFactory.getWantClientAuth(); 
int io.dropwizard.jetty.NetUtil.getDefaultTcpBacklog(); 
io.dropwizard.util.Size io.dropwizard.jetty.HttpConnectorFactory.getMinBufferPoolSize(); 
io.dropwizard.logging.layout.DiscoverableLayoutFactory io.dropwizard.logging.AbstractAppenderFactory.getLayout(); 
javax.servlet.http.HttpServletRequest io.dropwizard.jetty.BiDiGzipHandler.removeContentHeaders(javax.servlet.http.HttpServletRequest); 
com.google.common.collect.ImmutableSet io.dropwizard.logging.json.layout.AccessJsonLayout.getResponseHeaders(); 
io.dropwizard.util.Size io.dropwizard.jetty.GzipHandlerFactory.getBufferSize(); 
java.util.Set io.dropwizard.jetty.GzipHandlerFactory.getIncludedMethods(); 
com.google.common.collect.ImmutableList io.dropwizard.logging.AbstractAppenderFactory.getFilterFactories(); 
io.dropwizard.util.Size io.dropwizard.jetty.HttpConnectorFactory.getOutputBufferSize(); 
io.dropwizard.util.Size io.dropwizard.logging.FileAppenderFactory.getBufferSize(); 
java.util.Set io.dropwizard.jetty.GzipHandlerFactory.getExcludedUserAgentPatterns(); 
java.util.TimeZone io.dropwizard.logging.AbstractAppenderFactory.getTimeZone(); 
java.lang.String io.dropwizard.jetty.HttpsConnectorFactory.getKeyStorePassword(); 
java.lang.Boolean io.dropwizard.jetty.HttpsConnectorFactory.getEnableOCSP(); 
java.lang.String io.dropwizard.jetty.HttpsConnectorFactory.getKeyStorePath(); 
int io.dropwizard.logging.FileAppenderFactory.getArchivedFileCount(); 
java.io.PrintStream io.dropwizard.logging.DefaultLoggingFactory.getConfigurationErrorsStream(); 
java.lang.Class io.dropwizard.jackson.DiscoverableSubtypeResolver.loadClass(java.lang.String); 
java.lang.String io.dropwizard.logging.json.AbstractJsonLayoutBaseFactory.getTimestampFormat(); 
com.google.common.collect.ImmutableList io.dropwizard.logging.DefaultLoggingFactory.getAppenders(); 
com.google.common.collect.ImmutableList io.dropwizard.request.logging.LogbackAccessRequestLogFactory.getAppenders(); 
void io.dropwizard.jetty.SslReload.reload(org.eclipse.jetty.util.ssl.SslContextFactory); 
int io.dropwizard.logging.TcpSocketAppenderFactory.getPort(); 
java.lang.String io.dropwizard.jetty.HttpsConnectorFactory.getTrustStorePath(); 
java.lang.String io.dropwizard.jetty.HttpsConnectorFactory.getJceProvider(); 
java.lang.reflect.Type io.dropwizard.validation.valuehandling.GuavaOptionalValidatedValueUnwrapper.getValidatedValueType(java.lang.reflect.Type); 
java.lang.String io.dropwizard.jetty.HttpsConnectorFactory.getTrustStoreProvider(); 
com.google.common.collect.ImmutableList io.dropwizard.logging.LoggerConfiguration.getAppenders(); 
java.lang.String io.dropwizard.jetty.HttpsConnectorFactory.getTrustStorePassword(); 
java.util.Set io.dropwizard.logging.json.AccessJsonLayoutBaseFactory.getResponseHeaders(); 
ch.qos.logback.classic.LoggerContext io.dropwizard.logging.LoggingUtil.getLoggerContext(); 
io.dropwizard.util.Size io.dropwizard.jetty.HttpConnectorFactory.getMaxResponseHeaderSize(); 
java.lang.Class io.dropwizard.util.Generics.getTypeParameter(java.lang.Class,java.lang.Class); 
io.dropwizard.logging.ConsoleAppenderFactory$ConsoleStream io.dropwizard.logging.ConsoleAppenderFactory.getTarget(); 
io.dropwizard.jetty.BiDiGzipHandler$WrappedServletRequest io.dropwizard.jetty.BiDiGzipHandler.wrapGzippedRequest(javax.servlet.http.HttpServletRequest); 
java.util.Optional io.dropwizard.jetty.HttpConnectorFactory.getSelectorThreads(); 
java.util.List io.dropwizard.jetty.HttpsConnectorFactory.getSupportedProtocols(); 
java.lang.String io.dropwizard.logging.TcpSocketAppenderFactory.getHost(); 
java.lang.Boolean io.dropwizard.jetty.HttpsConnectorFactory.getNeedClientAuth(); 
java.io.File io.dropwizard.jetty.HttpsConnectorFactory.getCrlPath(); 
javax.servlet.Servlet io.dropwizard.jetty.NonblockingServletHolder.getServlet(); 
int io.dropwizard.jetty.NetUtil.getTcpBacklog(int); 
long io.dropwizard.util.Size.getQuantity(); 
int io.dropwizard.jetty.ServerPushFilterFactory.getMaxAssociations(); 
io.dropwizard.util.Size io.dropwizard.jetty.HttpConnectorFactory.getMaxBufferPoolSize(); 
io.dropwizard.util.Size io.dropwizard.jetty.HttpConnectorFactory.getHeaderCacheSize(); 
io.dropwizard.util.Size io.dropwizard.jetty.HttpConnectorFactory.getMaxRequestHeaderSize(); 
java.util.Map io.dropwizard.logging.json.AbstractJsonLayoutBaseFactory.getAdditionalFields(); 
java.util.List io.dropwizard.jetty.Jetty93InstrumentedConnectionFactory.getProtocols(); 
int io.dropwizard.logging.SyslogAppenderFactory.getPort(); 
int io.dropwizard.logging.AbstractAppenderFactory.getDiscardingThreshold(); 
java.util.EnumSet io.dropwizard.logging.json.AccessJsonLayoutBaseFactory.getIncludes(); 
java.lang.Integer io.dropwizard.jetty.HttpsConnectorFactory.getMaxCertPathLength(); 
com.google.common.collect.ImmutableSet io.dropwizard.logging.json.layout.EventJsonLayout.getIncludes(); 
org.eclipse.jetty.http.HttpCompliance io.dropwizard.jetty.HttpConnectorFactory.getHttpCompliance(); 
io.dropwizard.util.SizeUnit io.dropwizard.util.Size.getUnit(); 
java.lang.String io.dropwizard.jetty.HttpsConnectorFactory.getEndpointIdentificationAlgorithm(); 
java.lang.String io.dropwizard.logging.json.layout.EventJsonLayout.getJsonProtocolVersion(); 
io.dropwizard.util.Size io.dropwizard.logging.TcpSocketAppenderFactory.getSendBufferSize(); 
com.google.common.collect.ImmutableMap io.dropwizard.logging.DefaultLoggingFactory.getLoggers(); 
com.google.common.collect.ImmutableSet io.dropwizard.logging.json.layout.AccessJsonLayout.getRequestHeaders(); 
java.lang.String io.dropwizard.logging.SyslogAppenderFactory.getStackTracePrefix(); 
java.lang.String io.dropwizard.logging.json.layout.MapBuilder.getFieldName(java.lang.String); 
com.google.common.collect.ImmutableList io.dropwizard.request.logging.old.LogbackClassicRequestLogFactory.getAppenders(); 
java.util.Set io.dropwizard.logging.json.EventJsonLayoutBaseFactory.getIncludesMdcKeys(); 
]
methods CWE079_sinks [ 
void io.dropwizard.jetty.BiDiGzipHandler.setInflateNoWrap(boolean); 
void io.dropwizard.jetty.GzipHandlerFactory.setIncludedMethods(java.util.Set); 
void io.dropwizard.jetty.HttpConnectorFactory.setIdleTimeout(io.dropwizard.util.Duration); 
void io.dropwizard.jetty.HttpConnectorFactory.setMaxRequestHeaderSize(io.dropwizard.util.Size); 
void io.dropwizard.logging.json.EventJsonLayoutBaseFactory.setIncludes(java.util.EnumSet); 
void io.dropwizard.logging.json.layout.EventJsonLayout.setJsonProtocolVersion(java.lang.String); 
void io.dropwizard.jetty.GzipHandlerFactory.setExcludedUserAgentPatterns(java.util.Set); 
void io.dropwizard.logging.ConsoleAppenderFactory.setTarget(io.dropwizard.logging.ConsoleAppenderFactory$ConsoleStream); 
void io.dropwizard.logging.FileAppenderFactory.setArchivedFileCount(int); 
void io.dropwizard.logging.FileAppenderFactory.setCurrentLogFilename(java.lang.String); 
void io.dropwizard.logging.AbstractAppenderFactory.setNeverBlock(boolean); 
void io.dropwizard.logging.json.AccessJsonLayoutBaseFactory.setResponseHeaders(java.util.Set); 
void io.dropwizard.jetty.HttpConnectorFactory.setHeaderCacheSize(io.dropwizard.util.Size); 
void io.dropwizard.logging.SyslogAppenderFactory.setPort(int); 
void io.dropwizard.jetty.HttpsConnectorFactory.setTrustStorePath(java.lang.String); 
void io.dropwizard.jetty.HttpsConnectorFactory.setCrlPath(java.io.File); 
void io.dropwizard.jetty.MutableServletContextHandler.setSecurityEnabled(boolean); 
void io.dropwizard.jetty.HttpsConnectorFactory.setEnableOCSP(java.lang.Boolean); 
void io.dropwizard.logging.TcpSocketAppenderFactory.setPort(int); 
void io.dropwizard.logging.json.AbstractJsonLayoutBaseFactory.setPrettyPrint(boolean); 
void io.dropwizard.jetty.ServerPushFilterFactory.setMaxAssociations(int); 
void io.dropwizard.logging.json.EventJsonLayoutBaseFactory.setFlattenMdc(boolean); 
void io.dropwizard.jetty.HttpsConnectorFactory.setOcspResponderUrl(java.net.URI); 
void io.dropwizard.logging.AbstractAppenderFactory.setLayout(io.dropwizard.logging.layout.DiscoverableLayoutFactory); 
void io.dropwizard.logging.json.EventJsonLayoutBaseFactory.setIncludesMdcKeys(java.util.Set); 
void io.dropwizard.jetty.setup.ServletEnvironment.setSecurityHandler(org.eclipse.jetty.security.SecurityHandler); 
void io.dropwizard.logging.LoggerConfiguration.setAdditive(boolean); 
void io.dropwizard.jetty.HttpConnectorFactory.setUseForwardedHeaders(boolean); 
void io.dropwizard.validation.selfvalidating.ViolationCollector.setViolationOccurred(boolean); 
void io.dropwizard.request.logging.old.LogbackClassicRequestLogFactory.setAppenders(com.google.common.collect.ImmutableList); 
void io.dropwizard.jetty.HttpConnectorFactory.setMaxBufferPoolSize(io.dropwizard.util.Size); 
void io.dropwizard.jetty.setup.ServletEnvironment.setResourceBase(java.lang.String); 
void io.dropwizard.logging.AbstractAppenderFactory.setQueueSize(int); 
void io.dropwizard.logging.TcpSocketAppenderFactory.setConnectionTimeout(io.dropwizard.util.Duration); 
void io.dropwizard.jetty.HttpsConnectorFactory.setEnableCRLDP(java.lang.Boolean); 
void io.dropwizard.jetty.MutableServletContextHandler.setSessionsEnabled(boolean); 
void io.dropwizard.jetty.HttpsConnectorFactory.setSupportedCipherSuites(java.util.List); 
void io.dropwizard.jetty.GzipHandlerFactory.setMinimumEntitySize(io.dropwizard.util.Size); 
void io.dropwizard.logging.SyslogAppenderFactory.setStackTracePrefix(java.lang.String); 
void io.dropwizard.jetty.GzipHandlerFactory.setEnabled(boolean); 
void io.dropwizard.jetty.NetUtil.setLocalIpFilter(io.dropwizard.jetty.LocalIpFilter); 
void io.dropwizard.logging.SyslogAppenderFactory.setHost(java.lang.String); 
void io.dropwizard.jetty.HttpsConnectorFactory.setExcludedCipherSuites(java.util.List); 
void io.dropwizard.logging.AbstractAppenderFactory.setTimeZone(java.lang.String); 
void io.dropwizard.jetty.HttpConnectorFactory.setHttpCompliance(org.eclipse.jetty.http.HttpCompliance); 
void io.dropwizard.logging.DefaultLoggingFactory.setAppenders(java.util.List); 
void io.dropwizard.jetty.HttpsConnectorFactory.setValidatePeers(boolean); 
void io.dropwizard.logging.json.layout.AccessJsonLayout.setJsonProtocolVersion(java.lang.String); 
void io.dropwizard.jetty.HttpConnectorFactory.setSelectorThreads(java.util.Optional); 
void io.dropwizard.logging.TcpSocketAppenderFactory.setImmediateFlush(boolean); 
void io.dropwizard.jetty.ServerPushFilterFactory.setRefererPorts(java.util.List); 
void io.dropwizard.jetty.GzipHandlerFactory.setDeflateCompressionLevel(int); 
void io.dropwizard.jackson.FuzzyEnumModule.setupModule(com.fasterxml.jackson.databind.Module$SetupContext); 
void io.dropwizard.jetty.HttpsConnectorFactory.setNeedClientAuth(java.lang.Boolean); 
void io.dropwizard.jetty.setup.ServletEnvironment.setSessionHandler(org.eclipse.jetty.server.session.SessionHandler); 
void io.dropwizard.request.logging.LogbackAccessRequestLogFactory.setAppenders(com.google.common.collect.ImmutableList); 
void io.dropwizard.request.logging.old.LogbackClassicRequestLogFactory.setTimeZone(java.util.TimeZone); 
void io.dropwizard.logging.json.AbstractJsonLayoutBaseFactory.setTimestampFormat(java.lang.String); 
void io.dropwizard.logging.json.layout.EventJsonLayout.setIncludesMdcKeys(java.util.Set); 
void io.dropwizard.jetty.HttpConnectorFactory.setMinBufferPoolSize(io.dropwizard.util.Size); 
void io.dropwizard.logging.json.layout.AccessJsonLayout.setResponseHeaders(java.util.Set); 
void io.dropwizard.logging.json.layout.AccessJsonLayout.setIncludes(java.util.Set); 
void io.dropwizard.jetty.GzipHandlerFactory.setBufferSize(io.dropwizard.util.Size); 
void io.dropwizard.jetty.setup.ServletEnvironment.setInitParameter(java.lang.String,java.lang.String); 
void io.dropwizard.jetty.HttpsConnectorFactory.setKeyStoreType(java.lang.String); 
void io.dropwizard.jetty.HttpConnectorFactory.setBufferPoolIncrement(io.dropwizard.util.Size); 
void io.dropwizard.jetty.HttpsConnectorFactory.setTrustStoreProvider(java.lang.String); 
void io.dropwizard.jetty.HttpConnectorFactory.setBlockingTimeout(io.dropwizard.util.Duration); 
void io.dropwizard.jetty.HttpsConnectorFactory.setTrustStorePassword(java.lang.String); 
void io.dropwizard.jackson.GuavaExtrasModule.setupModule(com.fasterxml.jackson.databind.Module$SetupContext); 
void io.dropwizard.logging.json.AccessJsonLayoutBaseFactory.setRequestHeaders(java.util.Set); 
void io.dropwizard.logging.AbstractAppenderFactory.setIncludeCallerData(boolean); 
void io.dropwizard.jetty.HttpsConnectorFactory.setExcludedProtocols(java.util.List); 
void io.dropwizard.logging.FileAppenderFactory.setArchive(boolean); 
void io.dropwizard.logging.DefaultLoggingFactory.setLevel(java.lang.String); 
void io.dropwizard.jetty.HttpConnectorFactory.setInheritChannel(boolean); 
void io.dropwizard.logging.AbstractAppenderFactory.setLogFormat(java.lang.String); 
void io.dropwizard.jetty.HttpsConnectorFactory.setEndpointIdentificationAlgorithm(java.lang.String); 
void io.dropwizard.jetty.HttpConnectorFactory.setUseServerHeader(boolean); 
void io.dropwizard.validation.selfvalidating.ValidationCaller.setValidationObject(java.lang.Object); 
void io.dropwizard.jetty.HttpsConnectorFactory.setTrustStoreType(java.lang.String); 
void io.dropwizard.logging.AbstractAppenderFactory.setThreshold(java.lang.String); 
void io.dropwizard.logging.AbstractAppenderFactory.setDiscardingThreshold(int); 
void io.dropwizard.logging.DefaultLoggingFactory.setLoggers(java.util.Map); 
java.lang.String io.dropwizard.logging.json.layout.JsonFormatter.toJson(java.util.Map); 
void io.dropwizard.logging.AbstractAppenderFactory.setTimeZone(java.util.TimeZone); 
void io.dropwizard.jetty.HttpConnectorFactory.setPort(int); 
void io.dropwizard.logging.SyslogAppenderFactory.setFacility(io.dropwizard.logging.SyslogAppenderFactory$Facility); 
void io.dropwizard.logging.SyslogAppenderFactory.setIncludeStackTrace(boolean); 
void io.dropwizard.jetty.ServerPushFilterFactory.setRefererHosts(java.util.List); 
void io.dropwizard.jetty.HttpConnectorFactory.setInputBufferSize(io.dropwizard.util.Size); 
void io.dropwizard.logging.UdpSocketAppenderFactory.setHost(java.lang.String); 
void io.dropwizard.logging.FileAppenderFactory.setArchivedLogFilenamePattern(java.lang.String); 
void io.dropwizard.logging.FileAppenderFactory.setMaxFileSize(io.dropwizard.util.Size); 
void io.dropwizard.jetty.HttpConnectorFactory.setOutputBufferSize(io.dropwizard.util.Size); 
void io.dropwizard.jetty.ServerPushFilterFactory.setAssociatePeriod(io.dropwizard.util.Duration); 
void io.dropwizard.jetty.HttpsConnectorFactory.setMaxCertPathLength(java.lang.Integer); 
void io.dropwizard.jetty.BiDiGzipHandler.setInputBufferSize(int); 
void io.dropwizard.jetty.HttpsConnectorFactory.setJceProvider(java.lang.String); 
void io.dropwizard.jetty.HttpsConnectorFactory.setValidateCerts(boolean); 
void io.dropwizard.jetty.HttpConnectorFactory.setUseDateHeader(boolean); 
void io.dropwizard.logging.json.AbstractJsonLayoutBaseFactory.setCustomFieldNames(java.util.Map); 
void io.dropwizard.request.logging.ExternalRequestLogFactory.setEnabled(boolean); 
void io.dropwizard.jetty.GzipHandlerFactory.setGzipCompatibleInflation(boolean); 
void io.dropwizard.jetty.HttpConnectorFactory.setAcceptQueueSize(java.lang.Integer); 
void io.dropwizard.logging.TcpSocketAppenderFactory.setSendBufferSize(io.dropwizard.util.Size); 
void io.dropwizard.jetty.setup.ServletEnvironment.setBaseResource(org.eclipse.jetty.util.resource.Resource); 
ch.qos.logback.core.Appender io.dropwizard.logging.SyslogAppenderFactory.build(ch.qos.logback.classic.LoggerContext,java.lang.String,io.dropwizard.logging.layout.LayoutFactory,io.dropwizard.logging.filter.LevelFilterFactory,io.dropwizard.logging.async.AsyncAppenderFactory); 
void io.dropwizard.jetty.HttpConnectorFactory.setSoLingerTime(io.dropwizard.util.Duration); 
void io.dropwizard.logging.json.AccessJsonLayoutBaseFactory.setIncludes(java.util.EnumSet); 
void io.dropwizard.jetty.HttpsConnectorFactory.setWantClientAuth(java.lang.Boolean); 
void io.dropwizard.jetty.GzipHandlerFactory.setCompressedMimeTypes(java.util.Set); 
void io.dropwizard.logging.json.layout.AccessJsonLayout.setRequestHeaders(java.util.Set); 
void io.dropwizard.jetty.HttpConnectorFactory.setReuseAddress(boolean); 
void io.dropwizard.logging.UdpSocketAppenderFactory.setPort(int); 
void io.dropwizard.jetty.GzipHandlerFactory.setSyncFlush(boolean); 
void io.dropwizard.jetty.HttpsConnectorFactory.setKeyManagerPassword(java.lang.String); 
void io.dropwizard.jetty.HttpConnectorFactory.setMaxResponseHeaderSize(io.dropwizard.util.Size); 
void io.dropwizard.logging.LoggerConfiguration.setLevel(java.lang.String); 
void io.dropwizard.jetty.ServerPushFilterFactory.setEnabled(boolean); 
void io.dropwizard.logging.TcpSocketAppenderFactory.setHost(java.lang.String); 
void io.dropwizard.logging.json.layout.EventJsonLayout.setIncludes(java.util.Set); 
void io.dropwizard.jetty.HttpsConnectorFactory.setCertAlias(java.lang.String); 
void io.dropwizard.logging.FileAppenderFactory.setImmediateFlush(boolean); 
void io.dropwizard.jetty.HttpsConnectorFactory.setSupportedProtocols(java.util.List); 
void io.dropwizard.logging.AbstractAppenderFactory.setFilterFactories(java.util.List); 
void io.dropwizard.jetty.HttpConnectorFactory.setMinRequestDataRate(long); 
void io.dropwizard.jetty.HttpConnectorFactory.setBindHost(java.lang.String); 
void io.dropwizard.logging.LoggerConfiguration.setAppenders(java.util.List); 
void io.dropwizard.jetty.HttpsConnectorFactory.setKeyStorePath(java.lang.String); 
void io.dropwizard.logging.FileAppenderFactory.setBufferSize(io.dropwizard.util.Size); 
void io.dropwizard.logging.json.AbstractJsonLayoutBaseFactory.setAdditionalFields(java.util.Map); 
void io.dropwizard.jetty.HttpConnectorFactory.setAcceptorThreads(java.util.Optional); 
void io.dropwizard.jetty.HttpsConnectorFactory.setAllowRenegotiation(boolean); 
void io.dropwizard.jetty.HttpsConnectorFactory.setKeyStorePassword(java.lang.String); 
void io.dropwizard.logging.json.AbstractJsonLayoutBaseFactory.setAppendLineSeparator(boolean); 
void io.dropwizard.jetty.HttpsConnectorFactory.setKeyStoreProvider(java.lang.String); 
]
methods CWE079_authentications_to_high [ 
org.eclipse.jetty.server.HttpConnectionFactory io.dropwizard.jetty.HttpConnectorFactory.buildHttpConnectionFactory(org.eclipse.jetty.server.HttpConfiguration); 
void io.dropwizard.logging.TcpSocketAppenderFactory.setConnectionTimeout(io.dropwizard.util.Duration); 
org.eclipse.jetty.io.Connection io.dropwizard.jetty.Jetty93InstrumentedConnectionFactory.newConnection(org.eclipse.jetty.server.Connector,org.eclipse.jetty.io.EndPoint); 
java.lang.String io.dropwizard.jetty.HttpConnectorFactory.httpConnections(); 
org.eclipse.jetty.server.ServerConnector io.dropwizard.jetty.HttpConnectorFactory.buildConnector(org.eclipse.jetty.server.Server,org.eclipse.jetty.util.thread.Scheduler,org.eclipse.jetty.io.ByteBufferPool,java.lang.String,org.eclipse.jetty.util.thread.ThreadPool,org.eclipse.jetty.server.ConnectionFactory[]); 
]
methods CWE079_authentications_to_low [ 
]
methods CWE079_authentications_neutral [ 
org.eclipse.jetty.server.ConnectionFactory io.dropwizard.jetty.Jetty93InstrumentedConnectionFactory.getConnectionFactory(); 
io.dropwizard.util.Duration io.dropwizard.logging.TcpSocketAppenderFactory.getConnectionTimeout(); 
]
methods CWE079_sanitizers [ 
]
methods CWE079_none [ 
]
