<spark.Spark: void connect(java.lang.String,spark.Route,spark.ResponseTransformer)> 
<spark.Spark: void connect(java.lang.String,java.lang.String,spark.Route,spark.ResponseTransformer)> 
<spark.Routable: void connect(java.lang.String,spark.Route)> 
<spark.Spark: void connect(java.lang.String,java.lang.String,spark.TemplateViewRoute,spark.TemplateEngine)> 
<spark.Routable: void connect(java.lang.String,java.lang.String,spark.Route)> 
<spark.resource.AbstractFileResolvingResource: void customizeConnection(java.net.HttpURLConnection)> 
<spark.Spark: void connect(java.lang.String,spark.TemplateViewRoute,spark.TemplateEngine)> 
<spark.Spark: void connect(java.lang.String,java.lang.String,spark.Route)> 
<spark.Service: void connect(java.lang.String,java.lang.String,spark.Route,spark.ResponseTransformer)> 
<spark.Routable: void connect(java.lang.String,java.lang.String,spark.TemplateViewRoute,spark.TemplateEngine)> 
<spark.resource.AbstractFileResolvingResource: void customizeConnection(java.net.URLConnection)> 
<spark.Routable: void connect(java.lang.String,java.lang.String,spark.Route,spark.ResponseTransformer)> 
<spark.embeddedserver.jetty.SocketConnectorFactory: void initializeConnector(org.eclipse.jetty.server.ServerConnector,java.lang.String,int)> 
<spark.embeddedserver.jetty.SocketConnectorFactory: org.eclipse.jetty.server.ServerConnector createSocketConnector(org.eclipse.jetty.server.Server,java.lang.String,int)> 
<spark.Service: void connect(java.lang.String,spark.TemplateViewRoute,spark.TemplateEngine)> 
<spark.Service: void connect(java.lang.String,java.lang.String,spark.TemplateViewRoute,spark.TemplateEngine)> 
<spark.Spark: void connect(java.lang.String,spark.Route)> 
<spark.Routable: void connect(java.lang.String,spark.Route,spark.ResponseTransformer)> 
<spark.Routable: void connect(java.lang.String,spark.TemplateViewRoute,spark.TemplateEngine)> 
<spark.Service: void connect(java.lang.String,spark.Route)> 
<spark.Service: void connect(java.lang.String,java.lang.String,spark.Route)> 
<spark.embeddedserver.jetty.SocketConnectorFactory: org.eclipse.jetty.server.HttpConnectionFactory createHttpConnectionFactory()> 
<spark.embeddedserver.jetty.SocketConnectorFactory: org.eclipse.jetty.server.ServerConnector createSecureSocketConnector(org.eclipse.jetty.server.Server,java.lang.String,int,spark.ssl.SslStores)> 
<spark.Service: void connect(java.lang.String,spark.Route,spark.ResponseTransformer)> 
