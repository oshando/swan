<org.springframework.jmx.access.ConnectorDelegate: void close()> 
<org.springframework.orm.hibernate5.HibernateTransactionManager: void disconnectOnCompletion(org.hibernate.Session)> 
<org.springframework.security.config.annotation.web.configurers.LogoutConfigurer: org.springframework.security.config.'annotation'.web.configurers.LogoutConfigurer logoutRequestMatcher(org.springframework.security.web.util.matcher.RequestMatcher)> 
<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: void afterPropertiesSet()> 
<org.springframework.messaging.tcp.reactor.Reactor2TcpConnection: void close()> 
<org.springframework.jms.connection.CachedMessageConsumer: void close()> 
<org.springframework.web.socket.client.standard.EndpointConnectionManager: void closeConnection()> 
<org.springframework.test.web.servlet.htmlunit.DelegatingWebConnection: void close()> 
<org.springframework.jdbc.datasource.SingleConnectionDataSource: java.sql.Connection getConnection()> 
<org.springframework.jms.support.JmsUtils: void closeConnection(javax.jms.Connection)> 
<org.springframework.security.config.annotation.web.configurers.LogoutConfigurer: org.springframework.security.config.'annotation'.web.configurers.LogoutConfigurer logoutUrl(java.lang.String)> 
<org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider: java.sql.Connection getConnection()> 
<org.springframework.web.socket.client.WebSocketConnectionManager: void closeConnection()> 
<org.springframework.security.config.annotation.web.configurers.LogoutConfigurer: org.springframework.security.config.'annotation'.web.configurers.LogoutConfigurer logoutSuccessUrl(java.lang.String)> 
<org.springframework.scheduling.quartz.LocalDataSourceJobStore: void closeConnection(java.sql.Connection)> 
<org.springframework.security.config.annotation.web.builders.HttpSecurity: org.springframework.security.config.'annotation'.web.configurers.LogoutConfigurer logout()> 
<org.springframework.security.config.http.AuthenticationConfigBuilder: void createLogoutFilter()> 
<org.springframework.test.web.servlet.htmlunit.MockMvcWebConnection: void close()> 
<org.springframework.jms.connection.SingleConnectionFactory: void closeConnection(javax.jms.Connection)> 
<org.springframework.jdbc.datasource.SingleConnectionDataSource: void closeConnection()> 
<org.springframework.security.config.annotation.web.configurers.LogoutConfigurer: org.springframework.security.config.'annotation'.web.configurers.LogoutConfigurer logoutSuccessHandler(org.springframework.security.web.authentication.logout.LogoutSuccessHandler)> 
<org.springframework.security.authentication.jaas.AbstractJaasAuthenticationProvider: void handleLogout(org.springframework.security.core.session.SessionDestroyedEvent)> 
<org.springframework.orm.hibernate4.HibernateTransactionManager: void disconnectOnCompletion(org.hibernate.Session)> 
<org.springframework.security.config.annotation.web.configurers.LogoutConfigurer: org.springframework.security.config.'annotation'.web.configurers.LogoutConfigurer addLogoutHandler(org.springframework.security.web.authentication.logout.LogoutHandler)> 
<org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider: void close()> 
<org.springframework.jdbc.support.JdbcUtils: void closeConnection(java.sql.Connection)> 
<org.springframework.jms.connection.JmsResourceHolder: void closeAll()> 
<org.springframework.security.config.annotation.web.configurers.LogoutConfigurer: org.springframework.security.web.authentication.logout.LogoutFilter createLogoutFilter(org.springframework.security.config.'annotation'.web.HttpSecurityBuilder)> 
<org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession: void close(org.springframework.web.socket.CloseStatus)> 
<org.springframework.web.socket.client.standard.AnnotatedEndpointConnectionManager: void closeConnection()> 
<org.springframework.web.socket.sockjs.frame.SockJsFrame: org.springframework.web.socket.sockjs.frame.SockJsFrame closeFrameAnotherConnectionOpen()> 
<org.springframework.jms.connection.CachedMessageProducer: void close()> 
<org.springframework.jms.support.JmsUtils: void closeConnection(javax.jms.Connection,boolean)> 
<org.springframework.security.authentication.jaas.JaasAuthenticationProvider: void handleLogout(org.springframework.security.core.session.SessionDestroyedEvent)> 
<org.springframework.security.config.http.HttpConfigurationBuilder: void setLogoutHandlers(org.springframework.beans.factory.support.ManagedList)> 
<org.springframework.web.socket.sockjs.client.AbstractClientSockJsSession: void closeInternal(org.springframework.web.socket.CloseStatus)> 
