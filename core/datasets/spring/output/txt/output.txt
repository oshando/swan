<org.springframework.jdbc.core.simple.SimpleJdbcCall: java.lang.Object executeFunction(java.lang.Class,java.util.Map)> -> _CWE089__SINKS_
<org.springframework.core.env.AbstractEnvironment: void setPlaceholderSuffix(java.lang.String)> -> _SINKS_
<org.springframework.core.type.StandardMethodMetadata: org.springframework.util.MultiValueMap getAllAnnotationAttributes(java.lang.String)> -> _SOURCES_
<org.springframework.orm.toplink.support.TopLinkDaoSupport: oracle.toplink.sessions.Session getSession(boolean)> -> _SOURCES_
<org.springframework.jdbc.support.lob.PassThroughBlob: byte[] getBytes(long,int)> -> _CWE089__SOURCES_
<org.springframework.web.socket.server.standard.ServerEndpointRegistration: java.util.List getEncoders()> -> _SOURCES_
<org.springframework.messaging.simp.stomp.Reactor2TcpStompClient: org.springframework.util.concurrent.ListenableFuture connect(org.springframework.messaging.simp.stomp.StompSessionHandler)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.cache.jcache.interceptor.AbstractJCacheOperation: java.lang.reflect.Method getMethod()> -> _SOURCES_
<org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.web.servlet.FrameworkServlet: void setContextInitializers(org.springframework.context.ApplicationContextInitializer[])> -> _SINKS_
<org.springframework.jdbc.core.PreparedStatementCreatorFactory: void setReturnGeneratedKeys(boolean)> -> _CWE089__SINKS_
<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.core.io.Resource getResource(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.context.config.ContextNamespaceHandler: void registerJava5DependentParser(java.lang.String,java.lang.String)> -> _SINKS_
<org.springframework.core.type.classreading.ClassMetadataReadingVisitor: java.lang.String getEnclosingClassName()> -> _SOURCES_
<org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer: java.net.URL resolveTemplate(java.lang.ClassLoader,java.lang.String)> -> _SINKS_
<org.springframework.jca.cci.core.support.CciDaoSupport: org.springframework.jca.cci.core.CciTemplate getCciTemplate()> -> _SOURCES_
<org.springframework.jdbc.config.DatabasePopulatorConfigUtils: void setDatabasePopulator(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)> -> _CWE089__SINKS_
<org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry: org.springframework.web.servlet.handler.AbstractHandlerMapping getHandlerMapping()> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanDefinitionReader: void setBeanNameGenerator(org.springframework.beans.factory.support.BeanNameGenerator)> -> _SINKS_
<org.springframework.core.io.FileSystemResource: java.io.InputStream getInputStream()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletSession: java.util.Enumeration getAttributeNames()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.ErrorsTag: void renderDefaultContent(org.springframework.web.servlet.tags.form.TagWriter)> -> _SINKS_
<org.springframework.jmx.access.MBeanClientInterceptor: void setObjectName(java.lang.Object)> -> _SINKS_
<org.springframework.expression.spel.standard.SpelExpression: java.lang.Object getValue(java.lang.Object,java.lang.Class)> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag: java.beans.PropertyEditor getEditor()> -> _SOURCES_
<org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.security.authentication.jaas.JaasAuthenticationProvider: org.springframework.security.authentication.jaas.JaasAuthenticationCallbackHandler[] getCallbackHandlers()> -> _SOURCES_
<org.springframework.expression.spel.standard.SpelExpression: java.lang.Class getValueType()> -> _SOURCES_
<org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer: void setConfiguration(freemarker.template.Configuration)> -> _SINKS_
<org.springframework.scheduling.support.CronSequenceGenerator: void setMonths(java.util.BitSet,java.lang.String)> -> _SINKS_
<org.springframework.context.weaving.AspectJWeavingEnabler: int getOrder()> -> _SOURCES_
<org.springframework.beans.factory.NoSuchBeanDefinitionException: java.lang.Class getBeanType()> -> _SOURCES_
<org.springframework.web.multipart.support.DefaultMultipartHttpServletRequest: java.util.Map getMultipartParameterContentTypes()> -> _SOURCES_
<org.springframework.format.datetime.standard.YearMonthFormatter: java.lang.String print(java.lang.Object,java.util.Locale)> -> _SINKS_
<org.springframework.web.socket.WebSocketHttpHeaders: void set(java.lang.String,java.lang.String)> -> _SINKS_
<org.springframework.jms.core.JmsTemplate102: javax.jms.Connection createConnection()> -> _CWE306__SOURCES__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.transaction.support.AbstractTransactionStatus: org.springframework.transaction.SavepointManager getSavepointManager()> -> _SOURCES_
<org.springframework.scheduling.timer.MethodInvokingTimerTaskFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.cache.guava.GuavaCacheManager: void setCacheBuilderSpec(com.google.common.cache.CacheBuilderSpec)> -> _SINKS_
<org.springframework.remoting.support.UrlBasedRemoteAccessor: java.lang.String getServiceUrl()> -> _SOURCES_
<org.springframework.orm.hibernate5.HibernateTemplate: void update(java.lang.Object)> -> _SINKS_
<org.springframework.remoting.jaxrpc.JaxRpcSoapFaultException: java.lang.String getFaultString()> -> _SOURCES_
<org.springframework.jmx.export.metadata.AttributesJmxAttributeSource: org.springframework.jmx.export.metadata.ManagedOperationParameter[] getManagedOperationParameters(java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.transaction.interceptor.RollbackRuleAttribute: int getDepth(java.lang.Class,int)> -> _SOURCES_
<org.springframework.jmx.access.MBeanClientInterceptor: void setEnvironment(java.util.Map)> -> _SINKS_
<org.springframework.expression.spel.SpelParserConfiguration: int getMaximumAutoGrowSize()> -> _SOURCES_
<org.springframework.transaction.support.DelegatingTransactionDefinition: java.lang.String getName()> -> _SOURCES_
<org.springframework.security.config.http.AuthenticationConfigBuilder: void createPrauthEntryPoint(org.w3c.dom.Element)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.expression.spel.ast.FunctionReference: java.lang.Object[] getArguments(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.scheduling.concurrent.DefaultManagedTaskExecutor: void setJndiName(java.lang.String)> -> _SINKS_
<org.springframework.cglib.transform.impl.FieldProviderTransformer: void getByIndex(java.lang.String[],int[])> -> _SOURCES_
<org.springframework.jmx.export.assembler.AbstractMBeanInfoAssembler: java.lang.String getClassName(java.lang.Object,java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.'annotation'.RequestMappingHandlerAdapter requestMappingHandlerAdapter()> -> _SOURCES_
<org.springframework.aop.support.AbstractRegexpMethodPointcut: java.lang.String[] getPatterns()> -> _SOURCES_
<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: void setJaxRpcServiceProperties(java.util.Properties)> -> _SINKS_
<org.springframework.cglib.core.ClassEmitter: int getNextHook()> -> _SOURCES_
<org.springframework.util.UpdateMessageDigestInputStream: void updateMessageDigest(java.security.MessageDigest)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletRequest: int getServerPort()> -> _SOURCES_
<org.springframework.web.bind.MissingPathVariableException: java.lang.String getMessage()> -> _SOURCES_
<org.springframework.core.type.StandardMethodMetadata: java.lang.reflect.Method getIntrospectedMethod()> -> _SOURCES_
<org.springframework.jdbc.datasource.AbstractDriverBasedDataSource: java.lang.String getUsername()> -> _CWE089__SOURCES_
<org.springframework.web.servlet.view.script.ScriptTemplateView: org.springframework.core.io.Resource getResource(java.lang.String)> -> _SOURCES_
<org.springframework.context.access.DefaultLocatorFactory: org.springframework.beans.factory.access.BeanFactoryLocator getInstance()> -> _SOURCES_
<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.lang.Class getServiceFactoryClass()> -> _SOURCES_
<org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler: java.util.List getReturnValueHandlers()> -> _SOURCES_
<org.springframework.web.servlet.mvc.condition.PatternsRequestCondition: org.springframework.web.servlet.mvc.condition.PatternsRequestCondition combine(org.springframework.web.servlet.mvc.condition.PatternsRequestCondition)> -> _SINKS_
<org.springframework.security.util.FieldUtils: java.lang.reflect.Field getField(java.lang.Class,java.lang.String)> -> _SOURCES_
<org.springframework.mock.http.MockHttpOutputMessage: java.lang.String getBodyAsString()> -> _SOURCES_
<org.springframework.beans.CachedIntrospectionResults: boolean isUnderneathClassLoader(java.lang.ClassLoader,java.lang.ClassLoader)> -> _SOURCES_
<org.springframework.remoting.jaxws.JaxWsPortClientInterceptor: java.lang.String getEndpointAddress()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.ViewMethodReturnValueHandler: void handleReturnValue(java.lang.Object,org.springframework.core.MethodParameter,org.springframework.web.method.support.ModelAndViewContainer,org.springframework.web.context.request.NativeWebRequest)> -> _SINKS_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.web.client.AsyncRequestCallback httpEntityCallback(org.springframework.http.HttpEntity)> -> _SOURCES_
<org.springframework.expression.spel.ast.Elvis: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.web.bind.WebDataBinder: void setFieldDefaultPrefix(java.lang.String)> -> _SINKS_
<org.springframework.web.util.CookieGenerator: void setCookieDomain(java.lang.String)> -> _SINKS_
<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor: void setOrder(int)> -> _SINKS_
<org.springframework.web.jsf.el.SpringBeanFacesELResolver: org.springframework.beans.factory.BeanFactory getBeanFactory(javax.el.ELContext)> -> _SOURCES_
<org.springframework.security.config.authentication.AuthenticationManagerFactoryBean: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.jms.config.JmsListenerEndpointRegistry: java.util.Set getListenerContainerIds()> -> _SOURCES_
<org.springframework.test.context.testng.AbstractTestNGSpringContextTests: void setApplicationContext(org.springframework.context.ApplicationContext)> -> _SINKS_
<org.springframework.jdbc.support.incrementer.SqlServerMaxValueIncrementer: long getNextKey()> -> _CWE089__SOURCES_
<org.springframework.oxm.xstream.XStreamMarshaller: java.lang.Object unmarshalReader(java.io.Reader,com.thoughtworks.xstream.converters.DataHolder)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletResponse: void setProperty(java.lang.String,java.lang.String)> -> _SINKS__CWE601_
<org.springframework.jms.config.DefaultJcaListenerContainerFactory: void setActivationSpecFactory(org.springframework.jms.listener.endpoint.JmsActivationSpecFactory)> -> _SINKS_
<org.springframework.core.io.VfsUtils: boolean isReadable(java.lang.Object)> -> _SOURCES_
<org.springframework.scheduling.concurrent.ScheduledExecutorFactoryBean: void setPoolSize(int)> -> _SINKS_
<org.springframework.aop.framework.ProxyFactory: java.lang.Object getProxy(org.springframework.aop.TargetSource)> -> _SOURCES_
<org.springframework.web.servlet.view.script.ScriptTemplateView: void setRenderObject(java.lang.String)> -> _SINKS_
<org.springframework.web.portlet.context.PortletContextResource: boolean isReadable()> -> _SOURCES_
<org.springframework.mock.web.MockHttpSession: void setAttribute(java.lang.String,java.lang.Object)> -> _CWE079__SINKS_
<org.springframework.scripting.support.ScriptFactoryPostProcessor: org.springframework.scripting.ScriptSource getScriptSource(java.lang.String,java.lang.String)> -> _SOURCES_
<org.springframework.format.datetime.DateTimeFormatAnnotationFormatterFactory: org.springframework.format.Parser getParser(java.lang.'annotation'.Annotation,java.lang.Class)> -> _SOURCES__SINKS_
<org.springframework.scheduling.quartz.SchedulerFactoryBean: void setWaitForJobsToCompleteOnShutdown(boolean)> -> _SINKS_
<org.springframework.http.client.AbstractClientHttpResponse: org.springframework.http.HttpStatus getStatusCode()> -> _SOURCES__CWE601_
<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: void setJaxRpcServiceInterface(java.lang.Class)> -> _SINKS_
<org.springframework.web.servlet.handler.AbstractHandlerMapping: org.springframework.web.servlet.handler.MappedInterceptor[] getMappedInterceptors()> -> _SOURCES_
<org.springframework.web.servlet.mvc.condition.ConsumesRequestCondition: int compareTo(org.springframework.web.servlet.mvc.condition.ConsumesRequestCondition,javax.servlet.http.HttpServletRequest)> -> _SINKS_
<org.springframework.jms.core.JmsTemplate: java.lang.Object execute(javax.jms.Destination,org.springframework.jms.core.ProducerCallback)> -> _CWE078__SINKS_
<org.springframework.core.io.AbstractFileResolvingResource: java.io.File getFile(java.net.URI)> -> _SOURCES_
<org.springframework.messaging.handler.HandlerMethod: java.lang.Object getBean()> -> _SOURCES_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.web.client.ResponseErrorHandler getErrorHandler()> -> _SOURCES_
<org.springframework.asm.commons.GeneratorAdapter: void loadArgArray()> -> _SOURCES_
<org.springframework.http.client.support.BasicAuthorizationInterceptor: org.springframework.http.client.ClientHttpResponse intercept(org.springframework.http.HttpRequest,byte[],org.springframework.http.client.ClientHttpRequestExecution)> -> _SINKS_
<org.springframework.jms.listener.DefaultMessageListenerContainer102: javax.jms.Session createSession(javax.jms.Connection)> -> _SOURCES_
<org.springframework.web.socket.server.standard.ServerEndpointRegistration: java.lang.Object getEndpointInstance(java.lang.Class)> -> _SOURCES_
<org.springframework.test.context.cache.DefaultContextCache: int getHitCount()> -> _SOURCES_
<org.springframework.web.servlet.support.BindStatus: java.lang.String getErrorMessage()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletContext: java.lang.String getResourceLocation(java.lang.String)> -> _SOURCES_
<org.springframework.format.number.NumberFormatAnnotationFormatterFactory: org.springframework.format.Parser getParser(org.springframework.format.'annotation'.NumberFormat,java.lang.Class)> -> _SOURCES_
<org.springframework.http.client.InterceptingClientHttpRequest: org.springframework.http.client.ClientHttpResponse executeInternal(org.springframework.http.HttpHeaders,byte[])> -> _CWE078__SINKS_
<org.springframework.core.env.AbstractEnvironment: void setActiveProfiles(java.lang.String[])> -> _SINKS_
<org.springframework.jdbc.core.BeanPropertyRowMapper: void setMappedClass(java.lang.Class)> -> _CWE089__SINKS_
<org.springframework.orm.jdo.JdoTransactionManager: void setPersistenceManagerFactory(javax.jdo.PersistenceManagerFactory)> -> _SINKS_
<org.springframework.web.client.RestTemplate: java.lang.Object getForObject(java.lang.String,java.lang.Class,java.util.Map)> -> _SOURCES__SINKS_
<org.springframework.expression.TypedValue: org.springframework.core.convert.TypeDescriptor getTypeDescriptor()> -> _SOURCES_
<org.springframework.core.env.MutablePropertySources: void replace(java.lang.String,org.springframework.core.env.PropertySource)> -> _SINKS_
<org.springframework.validation.AbstractErrors: java.util.List getFieldErrors(java.lang.String)> -> _SOURCES_
<org.springframework.beans.BeanWrapperImpl: java.lang.Class getRootClass()> -> _SOURCES_
<org.springframework.transaction.interceptor.DelegatingTransactionAttribute: int getPropagationBehavior()> -> _SOURCES_
<org.springframework.cglib.core.ReflectUtils: java.beans.PropertyDescriptor[] getBeanGetters(java.lang.Class)> -> _SOURCES_
<org.springframework.web.servlet.view.tiles3.TilesViewResolver: void setAlwaysInclude(java.lang.Boolean)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompHeaders: void setSubscription(java.lang.String)> -> _SINKS_
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object getEarlyBeanReference(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object)> -> _SOURCES_
<org.springframework.format.datetime.DateTimeFormatAnnotationFormatterFactory: org.springframework.format.Formatter getFormatter(org.springframework.format.'annotation'.DateTimeFormat,java.lang.Class)> -> _SOURCES_
<org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler: void handleDisconnect(java.lang.String,java.security.Principal,org.springframework.messaging.Message)> -> _CWE306__SINKS_
<org.springframework.format.datetime.standard.TemporalAccessorParser: java.time.temporal.TemporalAccessor parse(java.lang.String,java.util.Locale)> -> _SINKS_
<org.springframework.core.io.support.PathMatchingResourcePatternResolver: org.springframework.core.io.Resource getResource(java.lang.String)> -> _SOURCES_
<org.springframework.util.xml.DomUtils: org.w3c.dom.Element getChildElementByTagName(org.w3c.dom.Element,java.lang.String)> -> _SOURCES_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: java.lang.Object getObject(java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.orm.hibernate3.HibernateAccessor: org.springframework.jdbc.support.SQLExceptionTranslator getDefaultJdbcExceptionTranslator()> -> _SOURCES_
<org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor: java.util.Collection getAttributeNames()> -> _SOURCES_
<org.springframework.web.socket.messaging.WebSocketStompClient: org.springframework.util.concurrent.ListenableFuture connect(java.lang.String,org.springframework.web.socket.WebSocketHttpHeaders,org.springframework.messaging.simp.stomp.StompSessionHandler,java.lang.Object[])> -> _CWE306__SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.messaging.simp.config.StompBrokerRelayRegistration: org.springframework.messaging.simp.config.StompBrokerRelayRegistration setVirtualHost(java.lang.String)> -> _SINKS_
<org.springframework.scripting.bsh.BshScriptFactory: java.lang.String getScriptSourceLocator()> -> _SOURCES_
<org.springframework.jms.connection.DelegatingConnectionFactory: javax.jms.Connection createConnection()> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.expression.spel.support.StandardEvaluationContext: void setPropertyAccessors(java.util.List)> -> _SINKS_
<org.springframework.web.servlet.mvc.multiaction.MultiActionController: org.springframework.web.bind.ServletRequestDataBinder createBinder(javax.servlet.http.HttpServletRequest,java.lang.Object)> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler: org.springframework.messaging.tcp.TcpOperations getTcpClient()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.OptionsTag: java.lang.Object getItems()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: java.lang.String getRemoteAddr()> -> _SOURCES_
<org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter: void setOrder(int)> -> _SINKS_
<org.springframework.scripting.groovy.GroovyScriptFactory: java.lang.Class[] getScriptInterfaces()> -> _SOURCES_
<org.springframework.http.client.InterceptingClientHttpRequestFactory: org.springframework.http.client.ClientHttpRequest createRequest(java.net.URI,org.springframework.http.HttpMethod,org.springframework.http.client.ClientHttpRequestFactory)> -> _SOURCES_
<org.springframework.beans.factory.config.RuntimeBeanNameReference: void setSource(java.lang.Object)> -> _SINKS_
<org.springframework.validation.beanvalidation.LocalValidatorFactoryBean: void setApplicationContext(org.springframework.context.ApplicationContext)> -> _SINKS_
<org.springframework.mail.javamail.MimeMessageHelper: void setCc(javax.mail.internet.InternetAddress)> -> _SINKS_
<org.springframework.web.servlet.mvc.support.AbstractControllerUrlHandlerMapping: void setExcludedClasses(java.lang.Class[])> -> _SINKS_
<org.springframework.test.context.cache.DefaultContextCache: int getMissCount()> -> _SOURCES_
<org.springframework.util.StreamUtils: void copy(byte[],java.io.OutputStream)> -> _SINKS_
<org.springframework.web.context.support.GroovyWebApplicationContext: void loadBeanDefinitions(org.springframework.beans.factory.support.DefaultListableBeanFactory)> -> _SOURCES_
<org.springframework.jdbc.support.nativejdbc.WebSphereNativeJdbcExtractor: boolean isNativeConnectionNecessaryForNativeCallableStatements()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__CWE862_
<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: void setMerge(java.lang.String)> -> _SINKS_
<org.springframework.beans.BeanWrapperImpl: java.lang.String getFinalPath(org.springframework.beans.BeanWrapper,java.lang.String)> -> _SOURCES_
<org.springframework.core.Constants: java.util.Set getValuesForSuffix(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.tags.form.InputTag: java.lang.String getSize()> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.'annotation'.RequestMappingHandlerMapping requestMappingHandlerMapping()> -> _SOURCES_
<org.springframework.jms.annotation.JmsListenerAnnotationBeanPostProcessor: void setContainerFactoryBeanName(java.lang.String)> -> _SINKS_
<org.springframework.mail.javamail.MimeMessageHelper: void setValidateAddresses(boolean)> -> _SINKS_
<org.springframework.web.servlet.view.jasperreports.AbstractJasperReportsView: void setConvertedExporterParameters(java.util.Map)> -> _SINKS_
<org.springframework.jdbc.core.JdbcTemplate: java.lang.Object execute(org.springframework.jdbc.core.StatementCallback)> -> _CWE089__SINKS_
<org.springframework.expression.spel.ast.VariableReference: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)> -> _SINKS_
<org.springframework.web.servlet.tags.BindTag: void setPath(java.lang.String)> -> _SINKS_
<org.springframework.web.method.HandlerMethod: org.springframework.http.HttpStatus getResponseStatus()> -> _SOURCES_
<org.springframework.web.context.request.async.DeferredResultProcessingInterceptorAdapter: void beforeConcurrentHandling(org.springframework.web.context.request.NativeWebRequest,org.springframework.web.context.request.async.DeferredResult)> -> _SINKS_
<org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor: org.aopalliance.aop.Advice getAdvice()> -> _SOURCES_
<org.springframework.core.env.AbstractPropertyResolver: void setRequiredProperties(java.lang.String[])> -> _SINKS_
<org.springframework.mock.http.MockHttpOutputMessage: org.springframework.http.HttpHeaders getHeaders()> -> _SOURCES_
<org.springframework.cache.annotation.SpringCacheAnnotationParser: org.springframework.cache.interceptor.CacheableOperation parseCacheableAnnotation(java.lang.reflect.AnnotatedElement,org.springframework.cache.'annotation'.SpringCacheAnnotationParser$DefaultCacheConfig,org.springframework.cache.'annotation'.Cacheable)> -> _SOURCES_
<org.springframework.cache.annotation.SpringCacheAnnotationParser: java.util.Collection parseCacheAnnotations(java.lang.Class)> -> _SINKS_
<org.springframework.jms.core.JmsTemplate: long getTimeToLive()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletRequest: java.util.Enumeration getProperties(java.lang.String)> -> _SOURCES_
<org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter: org.springframework.orm.jpa.JpaDialect getJpaDialect()> -> _SOURCES_
<org.springframework.web.servlet.view.RedirectView: void setContextRelative(boolean)> -> _SINKS_
<org.springframework.security.config.annotation.web.builders.FilterComparator: java.lang.Integer getOrder(java.lang.Class)> -> _SOURCES_
<org.springframework.expression.spel.support.StandardEvaluationContext: void setMethodResolvers(java.util.List)> -> _SINKS_
<org.springframework.mock.web.portlet.MockBaseURL: void setParameters(java.util.Map)> -> _SINKS_
<org.springframework.web.context.request.Log4jNestedDiagnosticContextInterceptor: void setIncludeClientInfo(boolean)> -> _SINKS_
<org.springframework.web.servlet.mvc.condition.ProducesRequestCondition: java.lang.String getToStringInfix()> -> _SOURCES_
<org.springframework.security.core.context.GlobalSecurityContextHolderStrategy: org.springframework.security.core.context.SecurityContext getContext()> -> _SOURCES_
<org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter: java.lang.Class getEntityManagerInterface()> -> _SOURCES_
<org.springframework.cglib.core.AbstractClassGenerator: org.springframework.cglib.core.NamingPolicy getNamingPolicy()> -> _SOURCES_
<org.springframework.core.convert.support.CollectionToCollectionConverter: java.util.Set getConvertibleTypes()> -> _SOURCES_
<org.springframework.core.io.AbstractFileResolvingResource: boolean isReadable()> -> _SOURCES_
<org.springframework.format.datetime.DateTimeFormatAnnotationFormatterFactory: org.springframework.format.Parser getParser(org.springframework.format.'annotation'.DateTimeFormat,java.lang.Class)> -> _SOURCES_
<org.springframework.oxm.xstream.XStreamMarshaller: com.thoughtworks.xstream.XStream getXStream()> -> _SOURCES_
<org.springframework.orm.jpa.JpaAccessor: void setFlushEager(boolean)> -> _SINKS_
<org.springframework.web.servlet.resource.CssLinkResourceTransformer: org.springframework.core.io.Resource transform(javax.servlet.http.HttpServletRequest,org.springframework.core.io.Resource,org.springframework.web.servlet.resource.ResourceTransformerChain)> -> _SINKS_
<org.springframework.web.socket.handler.WebSocketSessionDecorator: org.springframework.web.socket.WebSocketSession getDelegate()> -> _SOURCES_
<org.springframework.web.context.request.async.WebAsyncManager: java.lang.Object getConcurrentResult()> -> _SOURCES_
<org.springframework.orm.jdo.support.JdoDaoSupport: org.springframework.orm.jdo.JdoTemplate getJdoTemplate()> -> _SOURCES_
<org.springframework.core.io.DescriptiveResource: boolean isReadable()> -> _SOURCES_
<org.springframework.http.client.AbstractBufferingAsyncClientHttpRequest: org.springframework.util.concurrent.ListenableFuture executeInternal(org.springframework.http.HttpHeaders)> -> _CWE078__SINKS_
<org.springframework.security.access.event.AuthorizationFailureEvent: org.springframework.security.core.Authentication getAuthentication()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES_
<org.springframework.oxm.xstream.XStreamMarshaller: java.lang.Object unmarshalXmlEventReader(javax.xml.stream.XMLEventReader)> -> _SOURCES_
<org.springframework.web.method.annotation.ModelMethodProcessor: java.lang.Object resolveArgument(org.springframework.core.MethodParameter,org.springframework.web.method.support.ModelAndViewContainer,org.springframework.web.context.request.NativeWebRequest,org.springframework.web.bind.support.WebDataBinderFactory)> -> _SINKS_
<org.springframework.messaging.simp.stomp.DefaultStompSession: org.springframework.messaging.simp.stomp.StompSession$Receiptable send(org.springframework.messaging.simp.stomp.StompHeaders,java.lang.Object)> -> _SINKS_
<org.springframework.orm.jpa.vendor.AbstractJpaVendorAdapter: org.springframework.orm.jpa.vendor.Database getDatabase()> -> _SOURCES_
<org.springframework.jms.core.JmsMessagingTemplate: void doSend(java.lang.String,org.springframework.messaging.Message)> -> _SINKS_
<org.springframework.jms.support.converter.MappingJackson2MessageConverter: com.fasterxml.jackson.databind.JavaType getJavaTypeForMessage(javax.jms.Message)> -> _SOURCES_
<org.springframework.web.portlet.util.PortletUtils: java.lang.Object getSessionMutex(javax.portlet.PortletSession)> -> _SOURCES_
<org.springframework.web.servlet.mvc.ServletWrappingController: void setServletClass(java.lang.Class)> -> _SINKS_
<org.springframework.security.authentication.ProviderManager: void setParent(org.springframework.security.authentication.AuthenticationManager)> -> _SINKS_
<org.springframework.web.servlet.view.ContentNegotiatingViewResolver: void setOrder(int)> -> _SINKS_
<org.springframework.web.socket.messaging.StompSubProtocolHandler: int getMessageSizeLimit()> -> _SOURCES_
<org.springframework.cglib.core.DefaultGeneratorStrategy: org.springframework.cglib.core.DebuggingClassWriter getClassVisitor()> -> _SOURCES_
<org.springframework.remoting.rmi.RmiRegistryFactoryBean: java.rmi.registry.Registry getRegistry(java.lang.String,int,java.rmi.server.RMIClientSocketFactory,java.rmi.server.RMIServerSocketFactory)> -> _SOURCES_
<org.springframework.aop.framework.Cglib2AopProxy: java.lang.Object getProxy()> -> _SOURCES_
<org.springframework.expression.spel.standard.Token: org.springframework.expression.spel.standard.TokenKind getKind()> -> _SOURCES_
<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object parseIdRefElement(org.w3c.dom.Element)> -> _SOURCES_
<org.springframework.orm.hibernate5.support.AsyncRequestInterceptor: void beforeConcurrentHandling(org.springframework.web.context.request.NativeWebRequest,org.springframework.web.context.request.async.DeferredResult)> -> _SINKS_
<org.springframework.cache.ehcache.EhCacheManagerFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.jms.listener.SimpleMessageListenerContainer: javax.jms.MessageConsumer createConsumer(javax.jms.Session,javax.jms.Destination)> -> _SOURCES_
<org.springframework.jdbc.datasource.embedded.H2EmbeddedDatabaseConfigurer: void configureConnectionProperties(org.springframework.jdbc.datasource.embedded.ConnectionProperties,java.lang.String)> -> _CWE306__CWE089__AUTHENTICATIONS_TO_HIGH_
<org.springframework.jms.support.JmsMessageHeaderAccessor: java.lang.Boolean getRedelivered()> -> _SOURCES_
<org.springframework.jdbc.support.nativejdbc.JBossNativeJdbcExtractor: java.sql.CallableStatement getNativeCallableStatement(java.sql.CallableStatement)> -> _CWE089__SOURCES_
<org.springframework.web.servlet.view.jasperreports.JasperReportsXlsView: net.sf.jasperreports.engine.JRExporter createExporter()> -> _SOURCES_
<org.springframework.mock.web.MockSessionCookieConfig: void setComment(java.lang.String)> -> _SINKS_
<org.springframework.mail.javamail.JavaMailSenderImpl: void send(org.springframework.mail.SimpleMailMessage)> -> _SINKS_
<org.springframework.oxm.castor.CastorMarshaller: void setMarshalAsDocument(boolean)> -> _SINKS_
<org.springframework.orm.hibernate3.HibernateTemplate: void setAlwaysUseNewSession(boolean)> -> _SINKS_
<org.springframework.web.servlet.handler.AbstractHandlerMapping: void setOrder(int)> -> _SINKS_
<org.springframework.util.backoff.ExponentialBackOff: void setMaxInterval(long)> -> _SINKS_
<org.springframework.mock.web.portlet.MockActionResponse: java.lang.String getRedirectedUrl()> -> _SOURCES__CWE601_
<org.springframework.orm.hibernate5.HibernateTemplate: java.lang.Object load(java.lang.Class,java.io.Serializable,org.hibernate.LockMode)> -> _SOURCES_
<org.springframework.jms.core.JmsTemplate: void setMessageIdEnabled(boolean)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletResponse: java.lang.String encodeUrl(java.lang.String)> -> _SANITIZERS__CWE079__CWE601_
<org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver: org.springframework.web.method.support.HandlerMethodArgumentResolverComposite getArgumentResolvers()> -> _SOURCES_
<org.springframework.jca.cci.connection.CciLocalTransactionManager: javax.resource.cci.ConnectionFactory getConnectionFactory()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.beans.factory.support.ReplaceOverride: java.lang.String getMethodReplacerBeanName()> -> _SOURCES_
<org.springframework.jca.endpoint.GenericMessageEndpointManager: void setMessageEndpointFactory(javax.resource.spi.endpoint.MessageEndpointFactory)> -> _SINKS_
<org.springframework.web.socket.config.annotation.WebSocketTransportRegistration: org.springframework.web.socket.config.'annotation'.WebSocketTransportRegistration setDecoratorFactories(org.springframework.web.socket.handler.WebSocketHandlerDecoratorFactory[])> -> _SINKS_
<org.springframework.web.servlet.ModelAndView: java.util.Map getModel()> -> _SOURCES_
<org.springframework.jdbc.object.SqlQuery: java.util.List execute(java.lang.String)> -> _CWE078__CWE089__SINKS_
<org.springframework.jms.core.JmsMessagingTemplate: void convertAndSend(java.lang.Object)> -> _SINKS_
<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object parsePropertySubElement(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition,java.lang.String)> -> _SOURCES__SINKS_
<org.springframework.mock.web.portlet.MockPortletConfig: java.util.ResourceBundle getResourceBundle(java.util.Locale)> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: int getRemotePort()> -> _SOURCES_
<org.springframework.expression.common.LiteralExpression: java.lang.String getValue()> -> _SOURCES_
<org.springframework.remoting.httpinvoker.HttpInvokerClientInterceptor: void setCodebaseUrl(java.lang.String)> -> _SINKS_
<org.springframework.http.converter.json.MappingJacksonValue: com.fasterxml.jackson.databind.ser.FilterProvider getFilters()> -> _SOURCES_
<org.springframework.jms.core.JmsTemplate: void setDefaultDestinationName(java.lang.String)> -> _SINKS_
<org.springframework.expression.spel.ast.Literal: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.web.socket.server.standard.ServerEndpointRegistration: java.util.List getDecoders()> -> _SOURCES_
<org.springframework.messaging.simp.SimpMessagingTemplate: org.springframework.messaging.MessageChannel getMessageChannel()> -> _SOURCES_
<org.springframework.web.bind.ServletRequestUtils: double getDoubleParameter(javax.servlet.ServletRequest,java.lang.String,double)> -> _SOURCES_
<org.springframework.http.converter.xml.SourceHttpMessageConverter: java.lang.Long getContentLength(java.lang.Object,org.springframework.http.MediaType)> -> _SOURCES_
<org.springframework.web.servlet.NoHandlerFoundException: java.lang.String getHttpMethod()> -> _SOURCES_
<org.springframework.web.servlet.support.RequestContext: org.springframework.web.servlet.support.BindStatus getBindStatus(java.lang.String)> -> _SOURCES_
<org.springframework.scheduling.config.SchedulerBeanDefinitionParser: java.lang.String getBeanClassName(org.w3c.dom.Element)> -> _SOURCES_
<org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy: void checkDefaultConnectionProperties(java.sql.Connection)> -> _CWE306__CWE089__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.messaging.simp.user.UserDestinationMessageHandler: int getPhase()> -> _SOURCES__CWE862_
<org.springframework.web.servlet.config.annotation.ViewResolverRegistry: int getOrder()> -> _SOURCES_
<org.springframework.web.filter.Log4jNestedDiagnosticContextFilter: java.lang.String getNestedDiagnosticContextMessage(javax.servlet.http.HttpServletRequest)> -> _CWE079__SOURCES_
<org.springframework.cache.jcache.JCacheCacheManager: org.springframework.cache.Cache getMissingCache(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.tags.form.OptionTag: java.lang.String getLabel()> -> _SOURCES_
<org.springframework.web.portlet.context.PortletContextResource: java.net.URL getURL()> -> _SOURCES_
<org.springframework.web.method.annotation.ModelFactory: org.springframework.web.method.'annotation'.ModelFactory$ModelMethod getNextModelMethod(org.springframework.web.method.support.ModelAndViewContainer)> -> _SOURCES_
<org.springframework.web.context.support.ServletContextResourceLoader: org.springframework.core.io.Resource getResourceByPath(java.lang.String)> -> _SOURCES_
<org.springframework.remoting.httpinvoker.HttpComponentsHttpInvokerRequestExecutor: org.apache.http.HttpResponse executeHttpPost(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration,org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpPost)> -> _CWE078__SINKS_
<org.springframework.scheduling.quartz.SimpleTriggerBean: void setBeanName(java.lang.String)> -> _SINKS_
<org.springframework.aop.framework.CglibAopProxy: java.lang.Object getProxy()> -> _SOURCES_
<org.springframework.cglib.core.Local: org.springframework.asm.Type getType()> -> _SOURCES_
<org.springframework.jms.connection.CachingConnectionFactory: void setCacheConsumers(boolean)> -> _SINKS_
<org.springframework.scheduling.commonj.WorkManagerTaskExecutor: void setWorkListener(commonj.work.WorkListener)> -> _SINKS_
<org.springframework.http.client.SimpleClientHttpRequestFactory: void setReadTimeout(int)> -> _SINKS__CWE601_
<org.springframework.mail.SimpleMailMessage: void setSentDate(java.util.Date)> -> _SINKS_
<org.springframework.web.method.support.InvocableHandlerMethod: java.lang.Object invokeForRequest(org.springframework.web.context.request.NativeWebRequest,org.springframework.web.method.support.ModelAndViewContainer,java.lang.Object[])> -> _SINKS_
<org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler: java.util.Comparator getMappingComparator(org.springframework.messaging.Message)> -> _SOURCES_
<org.springframework.jdbc.datasource.lookup.BeanFactoryDataSourceLookup: javax.sql.DataSource getDataSource(java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.scripting.support.StandardScriptFactory: java.lang.Class getScriptedObjectType(org.springframework.scripting.ScriptSource)> -> _SOURCES_
<org.springframework.jndi.support.SimpleJndiBeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Class)> -> _SOURCES_
<org.springframework.web.accept.ContentNegotiationManagerFactoryBean: void setIgnoreAcceptHeader(boolean)> -> _SINKS_
<org.springframework.cache.guava.GuavaCacheManager: void setCacheLoader(com.google.common.cache.CacheLoader)> -> _SINKS_
<org.springframework.beans.factory.parsing.AbstractComponentDefinition: org.springframework.beans.factory.config.BeanReference[] getBeanReferences()> -> _SOURCES_
<org.springframework.web.context.request.FacesWebRequest: java.lang.Object getNativeResponse()> -> _SOURCES_
<org.springframework.expression.spel.standard.SpelExpression: java.lang.Object getValue(org.springframework.expression.EvaluationContext,java.lang.Object)> -> _SOURCES_
<org.springframework.jms.core.JmsMessagingTemplate: org.springframework.jms.support.converter.MessageConverter getJmsMessageConverter()> -> _SOURCES_
<org.springframework.beans.factory.support.ManagedList: void setSource(java.lang.Object)> -> _SINKS_
<org.springframework.web.util.OpaqueUriComponents: java.lang.String getQuery()> -> _SOURCES_
<org.springframework.scripting.support.StandardScriptFactory: java.lang.Object getScriptedObject(org.springframework.scripting.ScriptSource,java.lang.Class[])> -> _SOURCES_
<org.springframework.messaging.simp.config.StompBrokerRelayRegistration: org.springframework.messaging.simp.config.StompBrokerRelayRegistration setRelayHost(java.lang.String)> -> _SINKS_
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Class getRootClass()> -> _SOURCES_
<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.framework.AdvisorChainFactory getAdvisorChainFactory()> -> _SOURCES_
<org.springframework.jdbc.config.SortedResourcesFactoryBean: void setResourceLoader(org.springframework.core.io.ResourceLoader)> -> _CWE089__SOURCES__SINKS_
<org.springframework.beans.factory.config.PlaceholderConfigurerSupport: void setPlaceholderSuffix(java.lang.String)> -> _SINKS_
<org.springframework.remoting.rmi.RmiInvocationWrapper: java.lang.String getTargetInterfaceName()> -> _SOURCES_
<org.springframework.expression.spel.ast.OperatorPower: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.scheduling.quartz.CronTriggerBean: void setJobDetail(org.quartz.JobDetail)> -> _SINKS_
<org.springframework.jdbc.core.JdbcTemplate: void setSkipResultsProcessing(boolean)> -> _CWE089__SINKS_
<org.springframework.web.portlet.multipart.DefaultMultipartActionRequest: java.util.Iterator getFileNames()> -> _SOURCES_
<org.springframework.web.servlet.view.velocity.VelocityViewResolver: void setNumberToolAttribute(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor: java.util.List getAcceptableMediaTypes(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: void setTabindex(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.mock.web.MockAsyncContext: javax.servlet.ServletRequest getRequest()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setContentNegotiationManager(org.springframework.web.accept.ContentNegotiationManager)> -> _SINKS_
<org.springframework.web.socket.handler.WebSocketHandlerDecorator: org.springframework.web.socket.WebSocketHandler getDelegate()> -> _SOURCES_
<org.springframework.http.server.ServletServerHttpRequest: javax.servlet.http.HttpServletRequest getServletRequest()> -> _SOURCES_
<org.springframework.aop.aspectj.annotation.BeanFactoryAspectInstanceFactory: java.lang.ClassLoader getAspectClassLoader()> -> _SOURCES_
<org.springframework.asm.Attribute: org.springframework.asm.Attribute read(org.springframework.asm.ClassReader,int,int,char[],int,org.springframework.asm.Label[])> -> _SOURCES_
<org.springframework.remoting.rmi.RmiServiceExporter: void setRegistryClientSocketFactory(java.rmi.server.RMIClientSocketFactory)> -> _SINKS_
<org.springframework.web.servlet.view.xslt.XsltView: void setCacheTemplates(boolean)> -> _SINKS_
<org.springframework.expression.spel.ExpressionState: void setVariable(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.aop.framework.ProxyFactoryBean: void setSingleton(boolean)> -> _SINKS_
<org.springframework.web.socket.sockjs.frame.SockJsFrame: java.lang.String getContent()> -> _SOURCES_
<org.springframework.beans.PropertyBatchUpdateException: void printStackTrace(java.io.PrintStream)> -> _SINKS_
<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object parsePropertySubElement(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition)> -> _SINKS_
<org.springframework.mock.web.portlet.MockMultipartActionRequest: org.springframework.util.MultiValueMap getMultiFileMap()> -> _SOURCES_
<org.springframework.http.HttpHeaders: long getContentLength()> -> _SOURCES_
<org.springframework.beans.TypeMismatchException: java.lang.String getErrorCode()> -> _SOURCES_
<org.springframework.test.context.support.AbstractTestContextBootstrapper: org.springframework.test.context.ContextLoader resolveContextLoader(java.lang.Class,java.util.List)> -> _SOURCES_
<org.springframework.util.xml.XMLEventStreamReader: javax.xml.namespace.QName getAttributeName(int)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockCacheControl: void setExpirationTime(int)> -> _SINKS_
<org.springframework.jms.listener.serversession.CommonsPoolServerSessionFactory: void setTimeBetweenEvictionRunsMillis(long)> -> _SINKS_
<org.springframework.jms.support.JmsAccessor: void setSessionAcknowledgeMode(int)> -> _SINKS_
<org.springframework.core.annotation.MapAnnotationAttributeExtractor: java.lang.Object getRawAttributeValue(java.lang.String)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletSession: javax.portlet.PortletContext getPortletContext()> -> _SOURCES_
<org.springframework.test.web.servlet.result.MockMvcResultMatchers: org.springframework.test.web.servlet.result.RequestResultMatchers request()> -> _SOURCES_
<org.springframework.transaction.TransactionSystemException: java.lang.Throwable getOriginalException()> -> _SOURCES_
<org.springframework.orm.jpa.persistenceunit.MutablePersistenceUnitInfo: java.net.URL getPersistenceUnitRootUrl()> -> _SOURCES_
<org.springframework.beans.PropertyEditorRegistrySupport: java.beans.PropertyEditor getCustomEditor(java.lang.Class)> -> _SOURCES_
<org.springframework.oxm.castor.CastorMarshaller: void setObjectFactory(org.exolab.castor.util.ObjectFactory)> -> _SINKS_
<org.springframework.beans.propertyeditors.FileEditor: void setAsText(java.lang.String)> -> _SINKS_
<org.springframework.jmx.support.MBeanServerFactoryBean: void setLocateExistingServerIfPossible(boolean)> -> _SINKS_
<org.springframework.web.method.annotation.ModelAttributeMethodProcessor: void handleReturnValue(java.lang.Object,org.springframework.core.MethodParameter,org.springframework.web.method.support.ModelAndViewContainer,org.springframework.web.context.request.NativeWebRequest)> -> _SINKS_
<org.springframework.jms.config.JmsListenerEndpointRegistry: void setApplicationContext(org.springframework.context.ApplicationContext)> -> _SINKS_
<org.springframework.test.context.jdbc.MergedSqlConfig: org.springframework.test.context.jdbc.SqlConfig$ErrorMode getErrorMode()> -> _CWE089__SOURCES_
<org.springframework.orm.hibernate3.support.HibernateDaoSupport: org.springframework.orm.hibernate3.HibernateTemplate getHibernateTemplate()> -> _SOURCES_
<org.springframework.cache.jcache.JCacheCache: java.lang.Object get(java.lang.Object,java.util.concurrent.Callable)> -> _SOURCES_
<org.springframework.orm.hibernate3.LocalSessionFactoryBean: void setCacheProvider(org.hibernate.cache.CacheProvider)> -> _SINKS_
<org.springframework.security.config.ldap.LdapServerBeanDefinitionParser: java.lang.String getDefaultPort()> -> _SOURCES_
<org.springframework.scheduling.backportconcurrent.ScheduledExecutorTask: long getDelay()> -> _SOURCES_
<org.springframework.web.portlet.context.PortletContextResource: java.lang.String getFilename()> -> _SOURCES_
<org.springframework.oxm.jibx.JibxMarshaller: java.lang.Object unmarshalSaxReader(org.xml.sax.XMLReader,org.xml.sax.InputSource)> -> _SOURCES_
<org.springframework.jdbc.support.nativejdbc.SimpleNativeJdbcExtractor: void setNativeConnectionNecessaryForNativeStatements(boolean)> -> _CWE306__CWE089__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.security.config.http.FormLoginBeanDefinitionParser: org.springframework.beans.factory.support.RootBeanDefinition getEntryPointBean()> -> _SOURCES_
<org.springframework.beans.factory.xml.XmlBeanDefinitionReader: void setDocumentReaderClass(java.lang.Class)> -> _SINKS_
<org.springframework.mail.javamail.MimeMessageHelper: void setTo(javax.mail.internet.InternetAddress)> -> _SINKS_
<org.springframework.core.annotation.AnnotationAttributes: java.lang.String[] getAliasedStringArray(java.lang.String,java.lang.Class,java.lang.Object)> -> _SOURCES_
<org.springframework.web.servlet.FrameworkServlet: java.lang.String getServletContextAttributeName()> -> _SOURCES_
<org.springframework.scheduling.quartz.SimpleTriggerBean: void setJobDataAsMap(java.util.Map)> -> _SINKS_
<org.springframework.web.util.ContentCachingResponseWrapper: int getContentSize()> -> _SOURCES__CWE601_
<org.springframework.jdbc.datasource.IsolationLevelDataSourceAdapter: java.lang.Integer getCurrentIsolationLevel()> -> _CWE089__SOURCES_
<org.springframework.core.PrioritizedParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Constructor)> -> _SOURCES_
<org.springframework.web.servlet.handler.AbstractHandlerMethodMapping: java.util.List getHandlerMethodsForMappingName(java.lang.String)> -> _SOURCES__SINKS_
<org.springframework.web.servlet.support.RequestContext: java.lang.String getThemeMessage(java.lang.String,java.util.List,java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.validation.BindException: org.springframework.validation.FieldError getFieldError()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.core.io.VfsUtils: java.net.URL getURL(java.lang.Object)> -> _SOURCES_
<org.springframework.jndi.JndiLocatorSupport: void setResourceRef(boolean)> -> _SINKS_
<org.springframework.core.io.VfsUtils: java.net.URI getURI(java.lang.Object)> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.handler.EventSourceTransportHandler: org.springframework.web.socket.sockjs.frame.SockJsFrameFormat getFrameFormat(org.springframework.http.server.ServerHttpRequest)> -> _SOURCES_
<org.springframework.web.socket.adapter.standard.StandardWebSocketSession: int getTextMessageSizeLimit()> -> _SOURCES_
<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: void setServiceName(java.lang.String)> -> _SINKS_
<org.springframework.security.authentication.encoding.Md4PasswordEncoder: java.lang.String getAlgorithm()> -> _SOURCES_
<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.ClassFilter getClassFilter()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.LabelTag: void setFor(java.lang.String)> -> _SINKS_
<org.springframework.oxm.jaxb.Jaxb2Marshaller: void setContextPath(java.lang.String)> -> _SINKS_
<org.springframework.messaging.simp.stomp.DefaultStompSession: void setAutoReceipt(boolean)> -> _SINKS_
<org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration: void setAuthenticationTrustResolver(org.springframework.security.authentication.AuthenticationTrustResolver)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.orm.hibernate4.support.OpenSessionInterceptor: org.hibernate.SessionFactory getSessionFactory()> -> _SOURCES_
<org.springframework.expression.spel.ast.SpelNodeImpl: int getEndPosition()> -> _SOURCES_
<org.springframework.web.portlet.handler.ParameterHandlerMapping: void setParameterMap(java.util.Map)> -> _SINKS_
<org.springframework.scheduling.quartz.SchedulerAccessor: void setJobDetails(org.quartz.JobDetail[])> -> _SINKS_
<org.springframework.mock.web.portlet.MockMimeResponse: javax.portlet.PortletURL createActionURL()> -> _SOURCES__CWE601_
<org.springframework.cache.interceptor.CompositeCacheOperationSource: org.springframework.cache.interceptor.CacheOperationSource[] getCacheOperationSources()> -> _SOURCES_
<org.springframework.remoting.support.RemoteExporter: java.lang.Object getService()> -> _SOURCES_
<org.springframework.scheduling.quartz.JobDetailFactoryBean: void setJobDataAsMap(java.util.Map)> -> _SINKS_
<org.springframework.messaging.simp.config.MessageBrokerRegistry: org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler getSimpleBroker(org.springframework.messaging.SubscribableChannel)> -> _SOURCES_
<org.springframework.http.server.ServletServerHttpResponse: org.springframework.http.HttpHeaders getHeaders()> -> _SOURCES__CWE601_
<org.springframework.orm.hibernate5.support.HibernateDaoSupport: void setHibernateTemplate(org.springframework.orm.hibernate5.HibernateTemplate)> -> _SINKS_
<org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean: void setLoadTimeWeaver(org.springframework.instrument.classloading.LoadTimeWeaver)> -> _SINKS_
<org.springframework.jms.connection.TransactionAwareConnectionFactoryProxy: javax.jms.QueueConnection createQueueConnection(java.lang.String,java.lang.String)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.messaging.simp.stomp.StompHeaderAccessor: void setMessage(java.lang.String)> -> _SINKS_
<org.springframework.format.datetime.joda.ReadablePartialPrinter: java.lang.String print(org.joda.time.ReadablePartial,java.util.Locale)> -> _SINKS_
<org.springframework.aop.support.AbstractExpressionPointcut: java.lang.String getExpression()> -> _SOURCES_
<org.springframework.context.support.AbstractResourceBasedMessageSource: java.lang.String getDefaultEncoding()> -> _SOURCES_
<org.springframework.jdbc.core.support.JdbcDaoSupport: org.springframework.jdbc.support.SQLExceptionTranslator getExceptionTranslator()> -> _CWE089__SOURCES_
<org.springframework.transaction.jta.JtaTransactionManager: javax.transaction.TransactionManager getTransactionManager()> -> _SOURCES_
<org.springframework.aop.config.ConfigBeanDefinitionParser: java.lang.Class getAdviceClass(org.w3c.dom.Element)> -> _SOURCES_
<org.springframework.orm.toplink.TopLinkTemplate: java.lang.Object executeNamedQuery(java.lang.Class,java.lang.String,java.lang.Object[])> -> _CWE078__SINKS_
<org.springframework.oxm.xmlbeans.XmlOptionsFactoryBean: void setOptions(java.util.Map)> -> _SINKS_
<org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor: void setRejectedExecutionHandler(java.util.concurrent.RejectedExecutionHandler)> -> _SINKS_
<org.springframework.util.ClassUtils: int getMethodCountForName(java.lang.Class,java.lang.String)> -> _SOURCES_
<org.springframework.http.converter.xml.MappingJackson2XmlHttpMessageConverter: void setObjectMapper(com.fasterxml.jackson.databind.ObjectMapper)> -> _SINKS_
<org.springframework.remoting.httpinvoker.CommonsHttpInvokerRequestExecutor: java.io.InputStream getResponseBody(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration,org.apache.commons.httpclient.methods.PostMethod)> -> _SOURCES_
<org.springframework.web.util.HierarchicalUriComponents: org.springframework.util.MultiValueMap getQueryParams()> -> _SOURCES_
<org.springframework.oxm.jaxb.Jaxb2Marshaller: void setContextPaths(java.lang.String[])> -> _SINKS_
<org.springframework.cache.support.CompositeCacheManager: org.springframework.cache.Cache getCache(java.lang.String)> -> _SOURCES_
<org.springframework.jms.config.AbstractJmsListenerEndpoint: java.lang.StringBuilder getEndpointDescription()> -> _SOURCES_
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: java.util.Map getBeansWithAnnotation(java.lang.Class)> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.config.'annotation'.PathMatchConfigurer getPathMatchConfigurer()> -> _SOURCES_
<org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder: java.util.Map getSharedObjects()> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.RedirectViewControllerRegistration: org.springframework.web.servlet.config.'annotation'.RedirectViewControllerRegistration setContextRelative(boolean)> -> _SINKS_
<org.springframework.web.socket.sockjs.transport.session.WebSocketServerSockJsSession: java.net.InetSocketAddress getRemoteAddress()> -> _SOURCES_
<org.springframework.core.annotation.AnnotationAttributes: java.lang.Object getRequiredAttributeWithAlias(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class)> -> _SOURCES_
<org.springframework.orm.hibernate4.LocalSessionFactoryBuilder: org.springframework.orm.hibernate4.LocalSessionFactoryBuilder setMultiTenantConnectionProvider(java.lang.Object)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.asm.Type: int getDimensions()> -> _SOURCES_
<org.springframework.aop.framework.ProxyCreatorSupport: void setAopProxyFactory(org.springframework.aop.framework.AopProxyFactory)> -> _SINKS_
<org.springframework.web.portlet.multipart.DefaultMultipartActionRequest: java.lang.String getParameter(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.mock.web.portlet.MockStateAwareResponse: void setEvent(java.lang.String,java.io.Serializable)> -> _SINKS__CWE601_
<org.springframework.ui.context.support.ResourceBundleThemeSource: org.springframework.ui.context.Theme getTheme(java.lang.String)> -> _SOURCES_
<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder setParentName(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.view.jasperreports.AbstractJasperReportsView: net.sf.jasperreports.engine.JRExporterParameter getExporterParameter(java.lang.Object)> -> _SOURCES_
<org.springframework.web.multipart.commons.CommonsFileUploadSupport: void setMaxUploadSizePerFile(long)> -> _SOURCES__SINKS_
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Class getWrappedClass()> -> _SOURCES_
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.security.core.context.SecurityContextImpl: void setAuthentication(org.springframework.security.core.Authentication)> -> _CWE306__SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.portlet.multipart.CommonsPortletMultipartResolver: org.apache.commons.fileupload.FileUpload newFileUpload(org.apache.commons.fileupload.FileItemFactory)> -> _SOURCES_
<org.springframework.web.portlet.handler.SimplePortletPostProcessor: void setUseSharedPortletConfig(boolean)> -> _SINKS_
<org.springframework.messaging.simp.SimpMessageHeaderAccessor: void setSubscriptionId(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.MockHttpSession: java.lang.String[] getValueNames()> -> _SOURCES_
<org.springframework.orm.hibernate4.SessionHolder: org.hibernate.FlushMode getPreviousFlushMode()> -> _SOURCES_
<org.springframework.web.portlet.FrameworkPortlet: java.lang.String getNamespace()> -> _SOURCES_
<org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter: org.springframework.http.HttpOutputMessage createHttpOutputMessage(javax.servlet.http.HttpServletResponse)> -> _SOURCES_
<org.springframework.oxm.jaxb.Jaxb2Marshaller: javax.xml.validation.Schema loadSchema(org.springframework.core.io.Resource[],java.lang.String)> -> _SOURCES_
<org.springframework.jms.listener.adapter.JmsResponse: java.lang.Object getResponse()> -> _SOURCES__CWE601_
<org.springframework.web.servlet.tags.form.FormTag: void setTarget(java.lang.String)> -> _SINKS_
<org.springframework.web.socket.client.standard.AnnotatedEndpointConnectionManager: void setWebSocketContainer(javax.websocket.WebSocketContainer)> -> _SINKS_
<org.springframework.beans.factory.support.AbstractBeanDefinition: int getAutowireMode()> -> _SOURCES_
<org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager: void setLoadTimeWeaver(org.springframework.instrument.classloading.LoadTimeWeaver)> -> _SINKS_
<org.springframework.context.support.GenericGroovyApplicationContext: void load(java.lang.Class,java.lang.String[])> -> _SOURCES_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.util.concurrent.ListenableFuture postForEntity(java.lang.String,org.springframework.http.HttpEntity,java.lang.Class,java.util.Map)> -> _SINKS_
<org.springframework.web.servlet.handler.AbstractHandlerMethodMapping: org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy getNamingStrategy()> -> _SOURCES_
<org.springframework.util.ReflectionUtils: java.lang.reflect.Method[] getAllDeclaredMethods(java.lang.Class)> -> _SOURCES_
<org.springframework.util.backoff.ExponentialBackOff: long getMaxElapsedTime()> -> _SOURCES_
<org.springframework.jdbc.core.metadata.CallMetaDataContext: void setOutParameterNames(java.util.List)> -> _CWE089__SINKS_
<org.springframework.web.portlet.mvc.annotation.AnnotationMethodHandlerAdapter: org.springframework.web.portlet.bind.PortletRequestDataBinder createBinder(javax.portlet.PortletRequest,java.lang.Object,java.lang.String)> -> _SOURCES_
<org.springframework.beans.factory.xml.AbstractSimpleBeanDefinitionParser: void doParse(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)> -> _SOURCES_
<org.springframework.security.authentication.DefaultAuthenticationEventPublisher: void setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)> -> _SINKS_
<org.springframework.jca.cci.core.support.CciDaoSupport: javax.resource.cci.Connection getConnection()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.oxm.jibx.JibxMarshaller: void setBindingName(java.lang.String)> -> _SINKS_
<org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurer: void init(org.springframework.security.config.'annotation'.web.HttpSecurityBuilder)> -> _SINKS_
<org.springframework.transaction.support.DefaultTransactionStatus: java.lang.Object getTransaction()> -> _SOURCES_
<org.springframework.context.support.AbstractResourceBasedMessageSource: void setCacheMillis(long)> -> _SINKS_
<org.springframework.jms.connection.CachedMessageProducer: void publish(javax.jms.Topic,javax.jms.Message)> -> _SINKS_
<org.springframework.core.type.StandardMethodMetadata: java.lang.String getDeclaringClassName()> -> _SOURCES_
<org.springframework.scheduling.backportconcurrent.ThreadPoolTaskExecutor: void setCorePoolSize(int)> -> _SINKS_
<org.springframework.format.number.AbstractNumberFormatter: void setLenient(boolean)> -> _SINKS_
<org.springframework.jdbc.datasource.AbstractDriverBasedDataSource: void setUrl(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.util.xml.XMLEventStreamReader: javax.xml.stream.Location getLocation()> -> _SOURCES_
<org.springframework.beans.support.PagedListHolder: java.util.List getPageList()> -> _SOURCES_
<org.springframework.web.socket.server.standard.ServletServerContainerFactoryBean: void setMaxBinaryMessageBufferSize(int)> -> _SINKS_
<org.springframework.util.xml.AbstractXMLReader: org.xml.sax.ContentHandler getContentHandler()> -> _SOURCES_
<org.springframework.scheduling.quartz.SchedulerFactoryBean: javax.sql.DataSource getConfigTimeDataSource()> -> _SOURCES_
<org.springframework.web.accept.PathExtensionContentNegotiationStrategy: org.springframework.http.MediaType handleNoMatch(org.springframework.web.context.request.NativeWebRequest,java.lang.String)> -> _SINKS_
<org.springframework.mail.SimpleMailMessage: java.util.Date getSentDate()> -> _SOURCES_
<org.springframework.util.FastByteArrayOutputStream: java.io.InputStream getInputStream()> -> _SOURCES_
<org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver: void setMessageConverters(org.springframework.http.converter.HttpMessageConverter[])> -> _SINKS_
<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder cookie(javax.servlet.http.Cookie[])> -> _SOURCES_
<org.springframework.transaction.config.JtaTransactionManagerFactoryBean: org.springframework.transaction.jta.JtaTransactionManager getObject()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: void setRequestedSessionId(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.aop.target.ThreadLocalTargetSource: int getInvocationCount()> -> _SOURCES_
<org.springframework.web.servlet.mvc.condition.AbstractMediaTypeExpression: int compareTo(org.springframework.web.servlet.mvc.condition.AbstractMediaTypeExpression)> -> _SINKS_
<org.springframework.web.socket.sockjs.client.WebSocketClientSockJsSession: void sendInternal(org.springframework.web.socket.TextMessage)> -> _SINKS_
<org.springframework.cache.jcache.interceptor.CachePutOperation: org.springframework.util.ExceptionTypeFilter getExceptionTypeFilter()> -> _SOURCES_
<org.springframework.jms.connection.SingleConnectionFactory: java.lang.String getClientId()> -> _SOURCES_
<org.springframework.cglib.proxy.MixinEverythingEmitter: java.lang.reflect.Method[] getMethods(java.lang.Class)> -> _SOURCES_
<org.springframework.cglib.core.CodeEmitter: org.springframework.cglib.core.ClassEmitter getClassEmitter()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletRequest: void setSession(javax.portlet.PortletSession)> -> _CWE079__SINKS_
<org.springframework.web.socket.WebSocketHttpHeaders: void setSecWebSocketProtocol(java.util.List)> -> _SINKS_
<org.springframework.web.socket.handler.WebSocketSessionDecorator: void sendMessage(org.springframework.web.socket.WebSocketMessage)> -> _SINKS_
<org.springframework.transaction.support.DefaultTransactionDefinition: int getIsolationLevel()> -> _SOURCES_
<org.springframework.web.servlet.tags.EscapeBodyTag: void writeBodyContent(java.lang.String)> -> _SINKS_
<org.springframework.jms.listener.DefaultMessageListenerContainer: void setConcurrentConsumers(int)> -> _SINKS_
<org.springframework.messaging.simp.user.UserDestinationMessageHandler: org.springframework.messaging.support.MessageHeaderInitializer getHeaderInitializer()> -> _SOURCES__CWE862_
<org.springframework.orm.hibernate5.HibernateTemplate: org.hibernate.SessionFactory getSessionFactory()> -> _SOURCES_
<org.springframework.web.servlet.config.ViewControllerBeanDefinitionParser: org.springframework.beans.factory.support.RootBeanDefinition getRedirectView(org.w3c.dom.Element,org.springframework.http.HttpStatus,java.lang.Object)> -> _SOURCES_
<org.springframework.web.socket.sockjs.frame.Jackson2SockJsMessageCodec: java.lang.String[] decode(java.lang.String)> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateTransactionManager: org.hibernate.SessionFactory getSessionFactory()> -> _SOURCES_
<org.springframework.aop.target.CommonsPool2TargetSource: void setMaxWait(long)> -> _SINKS_
<org.springframework.jdbc.object.SqlUpdate: int update(java.lang.Object[])> -> _CWE089__SINKS_
<org.springframework.web.servlet.view.tiles3.TilesConfigurer: void setValidateDefinitions(boolean)> -> _SINKS_
<org.springframework.orm.toplink.support.TransactionAwareSessionAdapter: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.TransportHandlingSockJsService: void handleTransportRequest(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,org.springframework.web.socket.WebSocketHandler,java.lang.String,java.lang.String)> -> _SINKS_
<org.springframework.aop.target.ThreadLocalTargetSource: java.lang.Object getTarget()> -> _SOURCES_
<org.springframework.test.web.client.SimpleRequestExpectationManager: org.springframework.test.web.client.RequestExpectation next(org.springframework.http.client.ClientHttpRequest)> -> _SOURCES_
<org.springframework.web.servlet.view.tiles3.TilesView: org.apache.tiles.request.Request createTilesRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)> -> _SOURCES_
<org.springframework.util.backoff.FixedBackOff: void setMaxAttempts(long)> -> _SINKS_
<org.springframework.jmx.export.SpringModelMBean: java.lang.Object getAttribute(java.lang.String)> -> _SOURCES_
<org.springframework.http.client.InterceptingClientHttpRequest: org.springframework.http.HttpMethod getMethod()> -> _SOURCES_
<org.springframework.jdbc.core.metadata.CallMetaDataContext: void setFunctionReturnName(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.messaging.simp.SimpMessageHeaderAccessor: org.springframework.messaging.simp.SimpMessageType getMessageType()> -> _SOURCES_
<org.springframework.web.portlet.context.AbstractRefreshablePortletApplicationContext: void setPortletContext(javax.portlet.PortletContext)> -> _SINKS_
<org.springframework.web.socket.sockjs.client.WebSocketClientSockJsSession: int getBinaryMessageSizeLimit()> -> _SOURCES_
<org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean: void setDefaultViewInclusion(boolean)> -> _SINKS_
<org.springframework.web.socket.server.standard.TomcatRequestUpgradeStrategy: java.lang.String[] getSupportedVersions()> -> _SOURCES_
<org.springframework.remoting.httpinvoker.HttpComponentsHttpInvokerRequestExecutor: void setReadTimeout(int)> -> _SINKS__CWE601_
<org.springframework.core.convert.support.CollectionToObjectConverter: java.util.Set getConvertibleTypes()> -> _SOURCES_
<org.springframework.scheduling.concurrent.ExecutorConfigurationSupport: void setBeanName(java.lang.String)> -> _SINKS_
<org.springframework.orm.hibernate3.HibernateTemplate: java.lang.Object get(java.lang.Class,java.io.Serializable,org.hibernate.LockMode)> -> _SOURCES_
<org.springframework.jndi.JndiTemplate: java.util.Properties getEnvironment()> -> _SOURCES_
<org.springframework.jndi.JndiAccessor: void setJndiEnvironment(java.util.Properties)> -> _SINKS_
<org.springframework.remoting.httpinvoker.HttpComponentsHttpInvokerRequestExecutor: org.apache.http.client.methods.HttpPost createHttpPost(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration)> -> _SOURCES_
<org.springframework.mock.web.MockJspWriter: java.io.PrintWriter getTargetWriter()> -> _SOURCES_
<org.springframework.web.servlet.support.RequestContext: org.springframework.web.servlet.support.RequestDataValueProcessor getRequestDataValueProcessor()> -> _SOURCES_
<org.springframework.scheduling.config.ScheduledTaskRegistrar: void setCronTasksList(java.util.List)> -> _SINKS_
<org.springframework.scheduling.commonj.ScheduledTimerListener: void setDelay(long)> -> _SINKS_
<org.springframework.expression.spel.CodeFlow: boolean isPrimitiveOrUnboxableSupportedNumberOrBoolean(java.lang.String)> -> _SINKS_
<org.springframework.mail.javamail.MimeMailMessage: void setTo(java.lang.String)> -> _SINKS_
<org.springframework.beans.BeanWrapperImpl: java.lang.Class getWrappedClass()> -> _SOURCES_
<org.springframework.web.socket.server.standard.ServerEndpointRegistration: void setUserProperties(java.util.Map)> -> _SINKS_
<org.springframework.http.converter.json.MappingJackson2HttpMessageConverter: void setPrefixJson(boolean)> -> _SINKS_
<org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean: void setExposeUnconfigurableExecutor(boolean)> -> _SINKS_
<org.springframework.util.ClassUtils: java.lang.reflect.Constructor getConstructorIfAvailable(java.lang.Class,java.lang.Class[])> -> _SOURCES_
<org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean: void setDefaultUseWrapper(boolean)> -> _SINKS_
<org.springframework.jdbc.object.SqlUpdate: int update(int)> -> _CWE089__SINKS_
<org.springframework.mock.web.portlet.MockPortletResponse: java.lang.String[] getProperties(java.lang.String)> -> _SOURCES__CWE601_
<org.springframework.asm.Type: org.springframework.asm.Type getReturnType(java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.expression.spel.support.StandardEvaluationContext: void setRootObject(java.lang.Object,org.springframework.core.convert.TypeDescriptor)> -> _SINKS_
<org.springframework.jms.listener.endpoint.JmsActivationSpecConfig: void setDestinationName(java.lang.String)> -> _SINKS_
<org.springframework.orm.jpa.support.JpaDaoSupport: org.springframework.orm.jpa.JpaTemplate getJpaTemplate()> -> _SOURCES_
<org.springframework.web.socket.adapter.jetty.JettyWebSocketSession: void sendBinaryMessage(org.springframework.web.socket.BinaryMessage)> -> _SINKS_
<org.springframework.web.util.UrlPathHelper: void setAlwaysUseFullPath(boolean)> -> _SINKS_
<org.springframework.beans.factory.config.BeanDefinitionHolder: java.lang.String getLongDescription()> -> _SOURCES_
<org.springframework.web.multipart.support.StandardMultipartHttpServletRequest: java.util.Enumeration getParameterNames()> -> _SOURCES__CWE601_
<org.springframework.ejb.access.AbstractSlsbInvokerInterceptor: java.lang.reflect.Method getCreateMethod(java.lang.Object)> -> _SOURCES_
<org.springframework.transaction.support.AbstractPlatformTransactionManager: void setNestedTransactionAllowed(boolean)> -> _SINKS_
<org.springframework.context.annotation.ClassPathBeanDefinitionScanner: void setBeanNameGenerator(org.springframework.beans.factory.support.BeanNameGenerator)> -> _SINKS_
<org.springframework.format.datetime.standard.DateTimeFormatterFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.web.socket.config.annotation.WebMvcStompEndpointRegistry: org.springframework.web.servlet.handler.AbstractHandlerMapping getHandlerMapping()> -> _SOURCES_
<org.springframework.beans.factory.config.MethodInvokingFactoryBean: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.jmx.access.ConnectorDelegate: void close()> -> _AUTHENTICATIONS_TO_LOW_
<org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean: void setTargetBeanName(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver: org.springframework.web.servlet.ModelAndView handleResponseBody(java.lang.Object,org.springframework.web.context.request.ServletWebRequest)> -> _SINKS_
<org.springframework.mail.SimpleMailMessage: void setBcc(java.lang.String[])> -> _SINKS_
<org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer: void updateAuthenticationDefaults()> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean: java.lang.Object getTargetBean(java.lang.String)> -> _SOURCES_
<org.springframework.core.type.StandardAnnotationMetadata: java.util.Map getAnnotationAttributes(java.lang.String)> -> _SOURCES_
<org.springframework.web.socket.server.standard.ServerEndpointRegistration: javax.websocket.Endpoint getEndpoint()> -> _SOURCES_
<org.springframework.aop.framework.autoproxy.target.AbstractBeanFactoryBasedTargetSourceCreator: org.springframework.beans.factory.support.DefaultListableBeanFactory getInternalBeanFactoryForBean(java.lang.String)> -> _SOURCES_
<org.springframework.scheduling.backportconcurrent.ScheduledExecutorFactoryBean: edu.emory.mathcs.backport.java.util.concurrent.ScheduledExecutorService createExecutor(int,edu.emory.mathcs.backport.java.util.concurrent.ThreadFactory,edu.emory.mathcs.backport.java.util.concurrent.RejectedExecutionHandler)> -> _SINKS_
<org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession: java.net.InetSocketAddress getLocalAddress()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletRequest: void setWindowID(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.expression.spel.ast.Operator: org.springframework.expression.spel.ast.SpelNodeImpl getRightOperand()> -> _SOURCES_
<org.springframework.jdbc.core.JdbcTemplate: void setResultsMapCaseInsensitive(boolean)> -> _CWE089__SINKS_
<org.springframework.jms.core.JmsTemplate: void send(java.lang.String,org.springframework.jms.core.MessageCreator)> -> _SINKS_
<org.springframework.validation.beanvalidation.BeanValidationPostProcessor: void setValidatorFactory(javax.validation.ValidatorFactory)> -> _SINKS_
<org.springframework.aop.aspectj.annotation.BeanFactoryAspectInstanceFactory: int getOrder()> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateTransactionManager: boolean isSameConnectionForEntireSession(org.hibernate.Session)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE862_
<org.springframework.jdbc.core.JdbcTemplate: int getFetchSize()> -> _CWE089__SOURCES_
<org.springframework.web.socket.handler.ExceptionWebSocketHandlerDecorator: void handleMessage(org.springframework.web.socket.WebSocketSession,org.springframework.web.socket.WebSocketMessage)> -> _SINKS_
<org.springframework.context.support.MessageSourceAccessor: java.lang.String getMessage(org.springframework.context.MessageSourceResolvable,java.util.Locale)> -> _SOURCES_
<org.springframework.web.bind.EscapedErrors: org.springframework.validation.FieldError getFieldError()> -> _SOURCES_
<org.springframework.jdbc.core.simple.AbstractJdbcCall: java.util.Map doExecute(java.util.Map)> -> _CWE078__CWE089__SINKS_
<org.springframework.jca.endpoint.AbstractMessageEndpointFactory: void setTransactionName(java.lang.String)> -> _SINKS_
<org.springframework.oxm.support.MarshallingSource: org.springframework.oxm.Marshaller getMarshaller()> -> _SOURCES_
<org.springframework.jndi.JndiObjectFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.beans.support.ArgumentConvertingMethodInvoker: org.springframework.beans.TypeConverter getDefaultTypeConverter()> -> _SOURCES_
<org.springframework.http.client.HttpComponentsClientHttpRequestFactory: void setReadTimeout(int)> -> _SINKS__CWE601_
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder getPropertyNameTokens(java.lang.String)> -> _SOURCES_
<org.springframework.jdbc.object.SqlQuery: java.util.List execute(int,int)> -> _CWE078__CWE089__SINKS_
<org.springframework.web.socket.sockjs.transport.TransportHandlingSockJsService: void setHandshakeInterceptors(java.util.List)> -> _SINKS_
<org.springframework.jms.annotation.JmsListenerAnnotationBeanPostProcessor: int getOrder()> -> _SOURCES_
<org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter: long getLastModified(javax.servlet.http.HttpServletRequest,java.lang.Object)> -> _SOURCES_
<org.springframework.scheduling.timer.TimerFactoryBean: void setScheduledTimerTasks(org.springframework.scheduling.timer.ScheduledTimerTask[])> -> _SINKS_
<org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource: long getLastRefreshTime()> -> _SOURCES_
<org.springframework.orm.toplink.support.TopLinkDaoSupport: void setSessionFactory(org.springframework.orm.toplink.SessionFactory)> -> _SINKS_
<org.springframework.beans.factory.support.PropertiesBeanDefinitionReader: java.lang.Object readValue(java.util.Map$Entry)> -> _SOURCES_
<org.springframework.web.socket.messaging.AbstractSubProtocolEvent: java.security.Principal getUser()> -> _SOURCES_
<org.springframework.security.crypto.encrypt.AesBytesEncryptor: void <init>(java.lang.String,java.lang.CharSequence)> -> _SANITIZERS_
<org.springframework.test.context.support.AbstractDelegatingSmartContextLoader: org.springframework.context.ApplicationContext loadContext(org.springframework.test.context.MergedContextConfiguration)> -> _SOURCES_
<org.springframework.aop.support.AbstractRegexpMethodPointcut: void setPatterns(java.lang.String[])> -> _SINKS_
<org.springframework.security.core.session.SessionRegistryImpl: org.springframework.security.core.session.SessionInformation getSessionInformation(java.lang.String)> -> _SOURCES_
<org.springframework.jca.cci.core.support.CciDaoSupport: org.springframework.jca.cci.core.CciTemplate getCciTemplate(javax.resource.cci.ConnectionSpec)> -> _SOURCES_
<org.springframework.transaction.support.TransactionSynchronizationManager: java.lang.Object getResource(java.lang.Object)> -> _SOURCES_
<org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler: java.lang.String getDestination(org.springframework.messaging.Message)> -> _SOURCES_
<org.springframework.jdbc.object.RdbmsOperation: java.lang.String[] getGeneratedKeysColumnNames()> -> _CWE089__SOURCES_
<org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor: void execute(java.lang.Runnable)> -> _CWE078__SINKS_
<org.springframework.security.config.annotation.web.configurers.HeadersConfigurer: java.util.List getHeaderWriters()> -> _SOURCES_
<org.springframework.messaging.support.MessageBuilder: org.springframework.messaging.support.MessageBuilder setHeader(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.mock.web.MockMultipartHttpServletRequest: java.util.Iterator getFileNames()> -> _SOURCES_
<org.springframework.beans.CachedIntrospectionResults: java.lang.Class getBeanClass()> -> _SOURCES_
<org.springframework.util.Base64Utils: java.lang.String encodeToUrlSafeString(byte[])> -> _SANITIZERS_
<org.springframework.beans.factory.groovy.GroovyBeanDefinitionWrapper: java.lang.String getBeanName()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractHtmlInputElementTag: void setOnchange(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.format.datetime.joda.MonthDayFormatter: java.lang.String print(java.lang.Object,java.util.Locale)> -> _SINKS_
<org.springframework.oxm.xmlbeans.XmlBeansMarshaller: org.apache.xmlbeans.XmlOptions getXmlOptions()> -> _SOURCES_
<org.springframework.web.multipart.support.ByteArrayMultipartFileEditor: java.lang.String getAsText()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor: java.lang.Class getReturnValueType(java.lang.Object,org.springframework.core.MethodParameter)> -> _SOURCES_
<org.springframework.mock.web.MockMultipartHttpServletRequest: java.lang.String getMultipartContentType(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: org.springframework.core.MethodParameter getParameter()> -> _SOURCES_
<org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: void setJpaVendorAdapter(org.springframework.orm.jpa.JpaVendorAdapter)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletResponse: int getContentLength()> -> _SOURCES__CWE601_
<org.springframework.security.config.http.HeadersBeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES__SINKS_
<org.springframework.jdbc.core.simple.SimpleJdbcCall: java.util.Map execute(org.springframework.jdbc.core.namedparam.SqlParameterSource)> -> _CWE089__SINKS_
<org.springframework.web.portlet.bind.PortletRequestUtils: int getIntParameter(javax.portlet.PortletRequest,java.lang.String,int)> -> _SOURCES_
<org.springframework.web.context.support.GenericWebApplicationContext: void setServletContext(javax.servlet.ServletContext)> -> _SINKS_
<org.springframework.messaging.core.AbstractDestinationResolvingMessagingTemplate: java.lang.Object convertSendAndReceive(java.lang.String,java.lang.Object,java.lang.Class)> -> _SINKS_
<org.springframework.test.web.servlet.DefaultMvcResult: java.lang.Object getHandler()> -> _SOURCES_
<org.springframework.scheduling.timer.TimerTaskExecutor: void setDelay(int)> -> _SINKS_
<org.springframework.core.io.AbstractResource: java.io.File getFile()> -> _SOURCES_
<org.springframework.aop.config.MethodLocatingFactoryBean: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.web.bind.ServletRequestUtils: double[] getRequiredDoubleParameters(javax.servlet.ServletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.aop.config.ConfigBeanDefinitionParser: void parseAspect(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SINKS_
<org.springframework.mock.web.portlet.MockCacheControl: void setETag(java.lang.String)> -> _SINKS_
<org.springframework.messaging.converter.AbstractMessageConverter: java.util.List getSupportedMimeTypes()> -> _SOURCES_
<org.springframework.security.config.http.AuthenticationConfigBuilder: org.springframework.beans.BeanMetadataElement getAccessDeniedHandlerBean()> -> _SOURCES_
<org.springframework.orm.jdo.support.SpringPersistenceManagerProxyBean: javax.jdo.PersistenceManagerFactory getPersistenceManagerFactory()> -> _SOURCES_
<org.springframework.jdbc.datasource.ConnectionHolder: void setConnection(java.sql.Connection)> -> _CWE306__CWE089__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.mock.web.portlet.MockPortletRequest: void setProperty(java.lang.String,java.lang.String)> -> _CWE079__SINKS_
<org.springframework.web.socket.WebSocketHttpHeaders: void setSecWebSocketAccept(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.orm.jpa.JpaTransactionManager: void setEntityManagerFactory(javax.persistence.EntityManagerFactory)> -> _SINKS_
<org.springframework.validation.DefaultMessageCodesResolver: void setPrefix(java.lang.String)> -> _SINKS_
<org.springframework.scheduling.quartz.SimpleTriggerFactoryBean: void setPriority(int)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletURL: void setWindowState(javax.portlet.WindowState)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletRequest: int getContentLength()> -> _SOURCES_
<org.springframework.oxm.castor.CastorMarshaller: void setEncoding(java.lang.String)> -> _SINKS_
<org.springframework.web.method.annotation.RequestHeaderMethodArgumentResolver: org.springframework.web.method.'annotation'.AbstractNamedValueMethodArgumentResolver$NamedValueInfo createNamedValueInfo(org.springframework.core.MethodParameter)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletContext: int getMajorVersion()> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.factory.support.InstantiationStrategy getInstantiationStrategy()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: void setOnmouseup(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.web.util.UrlPathHelper: java.lang.String getServletPath(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.beans.factory.support.DefaultListableBeanFactory: void setAllowEagerClassLoading(boolean)> -> _SINKS_
<org.springframework.web.bind.ServletRequestUtils: boolean getBooleanParameter(javax.servlet.ServletRequest,java.lang.String,boolean)> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer: void initDefaultLoginFilter(org.springframework.security.config.'annotation'.web.HttpSecurityBuilder)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.beans.support.RefreshablePagedListHolder: void setSourceProvider(org.springframework.beans.support.PagedListSourceProvider)> -> _SINKS_
<org.springframework.scheduling.quartz.CronTriggerFactoryBean: org.quartz.JobDataMap getJobDataMap()> -> _SOURCES_
<org.springframework.web.servlet.handler.AbstractHandlerMapping: org.springframework.web.cors.CorsConfiguration getCorsConfiguration(java.lang.Object,javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: void setRemoteUser(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.web.cors.UrlBasedCorsConfigurationSource: void setUrlDecode(boolean)> -> _SOURCES__SINKS_
<org.springframework.jdbc.datasource.SimpleConnectionHandle: void releaseConnection(java.sql.Connection)> -> _CWE306__CWE089__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.scheduling.config.ScheduledTaskRegistrar: java.util.List getTriggerTaskList()> -> _SOURCES_
<org.springframework.web.socket.server.standard.UndertowRequestUpgradeStrategy: void upgradeInternal(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,java.lang.String,java.util.List,javax.websocket.Endpoint)> -> _SINKS_
<org.springframework.orm.hibernate5.HibernateTemplate: java.lang.String getQueryCacheRegion()> -> _SOURCES_
<org.springframework.util.xml.DomContentHandler: void setDocumentLocator(org.xml.sax.Locator)> -> _SINKS_
<org.springframework.cglib.beans.BeanMap: void setBean(java.lang.Object)> -> _SINKS_
<org.springframework.web.servlet.view.json.MappingJackson2JsonView: java.lang.String getJsonpParameterValue(javax.servlet.http.HttpServletRequest)> -> _CWE079__SOURCES_
<org.springframework.cglib.transform.impl.InterceptFieldTransformer: void addReadMethod(java.lang.String,org.springframework.asm.Type)> -> _SOURCES_
<org.springframework.beans.factory.support.ManagedSet: void setSource(java.lang.Object)> -> _SINKS_
<org.springframework.jms.listener.adapter.MessageListenerAdapter: void setDestinationResolver(org.springframework.jms.support.destination.DestinationResolver)> -> _SINKS_
<org.springframework.remoting.support.RemoteInvocation: void setParameterTypes(java.lang.Class[])> -> _SINKS_
<org.springframework.beans.factory.support.PropertiesBeanDefinitionReader: int loadBeanDefinitions(org.springframework.core.io.Resource)> -> _SOURCES_
<org.springframework.aop.framework.CglibAopProxy: org.springframework.cglib.proxy.Callback[] getCallbacks(java.lang.Class)> -> _SOURCES_
<org.springframework.aop.framework.AdvisedSupport: java.lang.Class getTargetClass()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletContext: java.net.URL getResource(java.lang.String)> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletResponse: java.lang.String encodeURL(java.lang.String)> -> _SANITIZERS__CWE601_
<org.springframework.web.servlet.mvc.multiaction.MultiActionController: java.lang.String getCommandName(java.lang.Object)> -> _SOURCES_
<org.springframework.web.servlet.handler.AbstractHandlerMapping: void setUrlDecode(boolean)> -> _SOURCES__SINKS_
<org.springframework.security.config.annotation.web.builders.HttpSecurity: org.springframework.security.config.'annotation'.web.builders.HttpSecurity$RequestMatcherConfigurer requestMatchers()> -> _SOURCES_
<org.springframework.messaging.handler.HandlerMethod: org.springframework.core.MethodParameter[] getMethodParameters()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletURL: javax.portlet.WindowState getWindowState()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletResponse: java.lang.Object getHeaderValue(java.lang.String)> -> _SOURCES__CWE601_
<org.springframework.web.util.HierarchicalUriComponents: org.springframework.util.MultiValueMap encodeQueryParams(java.lang.String)> -> _SANITIZERS_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.util.concurrent.ListenableFuture optionsForAllow(java.net.URI)> -> _SINKS_
<org.springframework.security.authentication.jaas.AbstractJaasAuthenticationProvider: void setCallbackHandlers(org.springframework.security.authentication.jaas.JaasAuthenticationCallbackHandler[])> -> _SINKS_
<org.springframework.test.annotation.TestAnnotationUtils: int getRepeatCount(java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.mock.web.MockSessionCookieConfig: void setMaxAge(int)> -> _SINKS_
<org.springframework.remoting.support.RemoteInvocation: java.io.Serializable getAttribute(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.ListenableFutureReturnValueHandler: void handleReturnValue(java.lang.Object,org.springframework.core.MethodParameter,org.springframework.web.method.support.ModelAndViewContainer,org.springframework.web.context.request.NativeWebRequest)> -> _SINKS_
<org.springframework.jmx.export.annotation.AnnotationMBeanExporter: void setDefaultDomain(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver: void setReturnValueHandlers(java.util.List)> -> _SINKS_
<org.springframework.web.portlet.bind.PortletRequestUtils: java.lang.String[] getRequiredStringParameters(javax.portlet.PortletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.beans.factory.config.PropertyPathFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory: java.util.List getAdvisors(org.springframework.aop.aspectj.'annotation'.MetadataAwareAspectInstanceFactory)> -> _SOURCES_
<org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration: void setObjectPostProcessor(org.springframework.security.config.'annotation'.ObjectPostProcessor)> -> _SINKS_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: org.springframework.jdbc.core.JdbcOperations getJdbcOperations()> -> _CWE089__SOURCES_
<org.springframework.scheduling.quartz.SimpleTriggerFactoryBean: void setMisfireInstructionName(java.lang.String)> -> _SINKS_
<org.springframework.messaging.support.AbstractMessageChannel: java.lang.String getBeanName()> -> _SOURCES_
<org.springframework.beans.MutablePropertyValues: java.util.List getPropertyValueList()> -> _SOURCES_
<org.springframework.remoting.jaxrpc.JaxRpcPortClientInterceptor: void setPortInterface(java.lang.Class)> -> _SINKS_
<org.springframework.orm.hibernate3.LocalSessionFactoryBean: org.hibernate.cache.CacheProvider getConfigTimeCacheProvider()> -> _SOURCES_
<org.springframework.web.servlet.resource.ResourceUrlProvider: java.lang.String getForLookupPath(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.jmx.export.assembler.AbstractConfigurableMBeanInfoAssembler: javax.management.modelmbean.ModelMBeanNotificationInfo[] getNotificationInfo(java.lang.Object,java.lang.String)> -> _SOURCES_
<org.springframework.messaging.simp.SimpAttributesContextHolder: void setAttributes(org.springframework.messaging.simp.SimpAttributes)> -> _SINKS_
<org.springframework.messaging.handler.HandlerMethod: java.lang.'annotation'.Annotation getMethodAnnotation(java.lang.Class)> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractMultiCheckedElementTag: java.lang.Object getItems()> -> _SOURCES_
<org.springframework.beans.factory.groovy.GroovyBeanDefinitionWrapper: org.springframework.beans.factory.config.BeanDefinitionHolder getBeanDefinitionHolder()> -> _SOURCES_
<org.springframework.http.client.Netty4ClientHttpResponse: java.lang.String getStatusText()> -> _SOURCES__CWE601_
<org.springframework.orm.hibernate3.HibernateTransactionManager: java.lang.Object getResourceFactory()> -> _SOURCES_
<org.springframework.util.StringUtils: java.lang.String stripFilenameExtension(java.lang.String)> -> _SANITIZERS_
<org.springframework.expression.spel.support.ReflectiveMethodExecutor: java.lang.Class getPublicDeclaringClass()> -> _SOURCES_
<org.springframework.orm.jpa.EntityManagerHolder: javax.persistence.EntityManager getEntityManager()> -> _SOURCES_
<org.springframework.web.servlet.resource.VersionResourceResolver: org.springframework.web.servlet.resource.VersionStrategy getStrategyForPath(java.lang.String)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockActionResponse: void sendRedirect(java.lang.String)> -> _SINKS__CWE601_
<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: void setRefreshHomeOnConnectFailure(boolean)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.cglib.proxy.Enhancer: void setUseFactory(boolean)> -> _SINKS_
<org.springframework.messaging.simp.SimpMessagingTemplate: void setUserDestinationPrefix(java.lang.String)> -> _SINKS_
<org.springframework.web.socket.client.standard.AnnotatedEndpointConnectionManager: boolean isConnected()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE862_
<org.springframework.web.multipart.support.MultipartResolutionDelegate: org.springframework.web.multipart.MultipartHttpServletRequest asMultipartHttpServletRequest(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.web.util.OpaqueUriComponents: java.lang.String getPath()> -> _SOURCES_
<org.springframework.expression.spel.support.StandardEvaluationContext: void setTypeLocator(org.springframework.expression.TypeLocator)> -> _SINKS_
<org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer: org.springframework.web.servlet.config.'annotation'.AsyncSupportConfigurer setDefaultTimeout(long)> -> _SINKS_
<org.springframework.jca.cci.core.support.CommAreaRecord: java.lang.String getRecordName()> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.handler.AbstractHttpReceivingTransportHandler: void handleReadError(org.springframework.http.server.ServerHttpResponse,java.lang.String,java.lang.String)> -> _SOURCES_
<org.springframework.orm.jpa.JpaTransactionManager: javax.persistence.EntityManagerFactory getEntityManagerFactory()> -> _SOURCES_
<org.springframework.beans.AbstractPropertyAccessor: void setPropertyValues(org.springframework.beans.PropertyValues)> -> _SINKS_
<org.springframework.security.config.annotation.authentication.configurers.ldap.LdapAuthenticationProviderConfigurer: org.springframework.security.ldap.authentication.BindAuthenticator createBindAuthenticator(org.springframework.ldap.core.support.BaseLdapPathContextSource)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.beans.factory.support.PropertiesBeanDefinitionReader: int loadBeanDefinitions(org.springframework.core.io.support.EncodedResource)> -> _SOURCES_
<org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource: org.springframework.jmx.export.metadata.ManagedNotification[] getManagedNotifications(java.lang.Class)> -> _SOURCES_
<org.springframework.jdbc.datasource.init.ResourceDatabasePopulator: void setSeparator(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.web.portlet.mvc.SimpleControllerHandlerAdapter: void setPortletContext(javax.portlet.PortletContext)> -> _SINKS_
<org.springframework.test.jdbc.JdbcTestUtils: void dropTables(org.springframework.jdbc.core.JdbcTemplate,java.lang.String[])> -> _CWE089__SINKS_
<org.springframework.web.socket.handler.BeanCreatingHandlerProvider: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.web.util.UriComponentsBuilder: org.springframework.web.util.UriComponentsBuilder replaceQueryParams(org.springframework.util.MultiValueMap)> -> _SINKS_
<org.springframework.test.web.ModelAndViewAssert: void assertViewName(org.springframework.web.servlet.ModelAndView,java.lang.String)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletRequest: java.util.Map getParameterMap()> -> _SOURCES__CWE601_
<org.springframework.web.servlet.support.BindStatus: java.lang.Object getActualValue()> -> _SOURCES_
<org.springframework.web.portlet.context.StaticPortletApplicationContext: javax.portlet.PortletConfig getPortletConfig()> -> _SOURCES_
<org.springframework.beans.factory.serviceloader.AbstractServiceLoaderBasedFactoryBean: java.lang.Class getServiceType()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: void setContentNegotiationManager(org.springframework.web.accept.ContentNegotiationManager)> -> _SINKS_
<org.springframework.jdbc.support.xml.Jdbc4SqlXmlHandler: java.io.InputStream getXmlAsBinaryStream(java.sql.ResultSet,int)> -> _CWE089__SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: void setContextPath(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder setInitMethodName(java.lang.String)> -> _SINKS_
<org.springframework.jms.support.converter.SimpleMessageConverter: javax.jms.MapMessage createMessageForMap(java.util.Map,javax.jms.Session)> -> _SOURCES_
<org.springframework.jmx.export.metadata.AbstractJmxAttribute: void setCurrencyTimeLimit(int)> -> _SINKS_
<org.springframework.context.support.ContextTypeMatchClassLoader: java.lang.Class loadClass(java.lang.String)> -> _SOURCES_
<org.springframework.aop.interceptor.DebugInterceptor: java.lang.String getInvocationDescription(org.aopalliance.intercept.MethodInvocation)> -> _SOURCES_
<org.springframework.jdbc.support.lob.PassThroughBlob: java.io.InputStream getBinaryStream(long,long)> -> _CWE089__SOURCES_
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: java.lang.Object getBean(java.lang.String,java.lang.Object[])> -> _SOURCES_
<org.springframework.web.servlet.support.RequestContext: void setDefaultHtmlEscape(boolean)> -> _SINKS_
<org.springframework.mail.javamail.MimeMailMessage: void setCc(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator: void setDatabaseProductName(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.cache.jcache.JCacheCache: java.lang.String getName()> -> _SOURCES_
<org.springframework.security.config.http.AuthenticationConfigBuilder: void injectAuthenticationDetailsSource(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.multipart.support.MissingServletRequestPartException: java.lang.String getRequestPartName()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.OptionTag: void setDisabled(boolean)> -> _SINKS_
<org.springframework.context.annotation.ScopeMetadata: java.lang.String getScopeName()> -> _SOURCES_
<org.springframework.web.servlet.mvc.condition.RequestMethodsRequestCondition: java.util.Collection getContent()> -> _SOURCES_
<org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory: void setDatabaseName(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.web.util.HtmlCharacterEntityReferences: int getSupportedReferenceCount()> -> _SOURCES_
<org.springframework.orm.hibernate5.LocalSessionFactoryBean: void setJtaTransactionManager(java.lang.Object)> -> _SINKS_
<org.springframework.web.context.support.RequestHandledEvent: java.lang.String getShortDescription()> -> _SOURCES_
<org.springframework.expression.spel.ast.OpDec: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.web.portlet.handler.SimpleMappingExceptionResolver: void setDefaultErrorView(java.lang.String)> -> _SINKS_
<org.springframework.orm.hibernate4.HibernateTransactionManager: javax.sql.DataSource getDataSource()> -> _SOURCES_
<org.springframework.core.convert.TypeDescriptor: java.lang.String getName()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor: java.lang.reflect.Type getHttpEntityType(org.springframework.core.MethodParameter)> -> _SOURCES_
<org.springframework.web.servlet.tags.form.InputTag: java.lang.String getAutocomplete()> -> _SOURCES_
<org.springframework.remoting.support.RemoteAccessor: java.lang.Class getServiceInterface()> -> _SOURCES_
<org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration: void setConfigurers(java.util.Collection)> -> _SINKS_
<org.springframework.mock.web.portlet.MockMultipartActionRequest: org.springframework.web.multipart.MultipartFile getFile(java.lang.String)> -> _SOURCES_
<org.springframework.web.bind.annotation.support.HandlerMethodResolver: java.util.Set getInitBinderMethods()> -> _SOURCES_
<org.springframework.web.servlet.view.AbstractView: java.lang.String getRequestContextAttribute()> -> _SOURCES_
<org.springframework.orm.jpa.persistenceunit.MutablePersistenceUnitInfo: javax.sql.DataSource getNonJtaDataSource()> -> _SOURCES_
<org.springframework.web.portlet.handler.HandlerInterceptorAdapter: boolean preHandleResource(javax.portlet.ResourceRequest,javax.portlet.ResourceResponse,java.lang.Object)> -> _SINKS_
<org.springframework.expression.common.LiteralExpression: org.springframework.core.convert.TypeDescriptor getValueTypeDescriptor(org.springframework.expression.EvaluationContext,java.lang.Object)> -> _SOURCES_
<org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator: void setPrefix(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.view.jasperreports.AbstractJasperReportsView: void setExporterParameters(java.util.Map)> -> _SINKS_
<org.springframework.cglib.reflect.FastClass: java.lang.String getName()> -> _SOURCES_
<org.springframework.web.client.DefaultResponseErrorHandler: java.nio.charset.Charset getCharset(org.springframework.http.client.ClientHttpResponse)> -> _SOURCES__CWE601_
<org.springframework.web.accept.ContentNegotiationManagerFactoryBean: void setDefaultContentType(org.springframework.http.MediaType)> -> _SINKS_
<org.springframework.web.servlet.tags.form.FormTag: java.lang.String getOnreset()> -> _SOURCES_
<org.springframework.jmx.export.MBeanExporter: void setEnsureUniqueRuntimeObjectNames(boolean)> -> _SINKS_
<org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor: int getKeepAliveSeconds()> -> _SOURCES_
<org.springframework.http.converter.BufferedImageHttpMessageConverter: org.springframework.http.MediaType getContentType(org.springframework.http.MediaType)> -> _SOURCES_
<org.springframework.expression.spel.ast.OpModulus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.web.servlet.view.velocity.VelocityView: org.apache.velocity.Template getTemplate()> -> _SOURCES_
<org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper: java.util.Collection getGrantedAuthorityCollection(java.lang.Object)> -> _SOURCES_
<org.springframework.scheduling.quartz.CronTriggerFactoryBean: void setDescription(java.lang.String)> -> _SINKS_
<org.springframework.core.convert.support.ConversionUtils: java.lang.Class getEnumType(java.lang.Class)> -> _SOURCES_
<org.springframework.web.method.HandlerMethod: java.lang.Class getBeanType()> -> _SOURCES_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.util.concurrent.ListenableFuture postForLocation(java.lang.String,org.springframework.http.HttpEntity,java.lang.Object[])> -> _SINKS_
<org.springframework.messaging.core.AbstractDestinationResolvingMessagingTemplate: org.springframework.messaging.Message sendAndReceive(java.lang.String,org.springframework.messaging.Message)> -> _SINKS_
<org.springframework.web.servlet.support.RequestContext: java.lang.String getMessage(java.lang.String,java.lang.Object[],java.lang.String,boolean)> -> _SOURCES_
<org.springframework.remoting.rmi.RmiServiceExporter: void setRegistryPort(int)> -> _SINKS_
<org.springframework.web.servlet.i18n.AbstractLocaleResolver: java.util.Locale getDefaultLocale()> -> _SOURCES_
<org.springframework.beans.factory.config.YamlMapFactoryBean: void setSingleton(boolean)> -> _SINKS_
<org.springframework.test.web.servlet.request.MockMvcRequestBuilders: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder put(java.lang.String,java.lang.Object[])> -> _SOURCES_
<org.springframework.orm.hibernate5.LocalSessionFactoryBean: void setMetadataSources(org.hibernate.boot.MetadataSources)> -> _SINKS_
<org.springframework.web.util.ContentCachingResponseWrapper: void setStatus(int)> -> _SINKS__CWE601_
<org.springframework.web.portlet.context.PortletWebRequest: java.lang.String[] getHeaderValues(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.cglib.reflect.FastConstructor: java.lang.Class[] getParameterTypes()> -> _SOURCES_
<org.springframework.remoting.caucho.HessianClientInterceptor: void setHessian2Request(boolean)> -> _SINKS_
<org.springframework.util.xml.AbstractXMLStreamReader: java.lang.String getAttributeLocalName(int)> -> _SOURCES_
<org.springframework.security.core.token.KeyBasedPersistenceTokenService: void setPseudoRandomNumberBits(int)> -> _SINKS_
<org.springframework.web.util.HierarchicalUriComponents: int getPort()> -> _SOURCES_
<org.springframework.cglib.proxy.CallbackHelper: org.springframework.cglib.proxy.Callback[] getCallbacks()> -> _SOURCES_
<org.springframework.oxm.castor.CastorMarshaller: void setIgnoreExtraAttributes(boolean)> -> _SINKS_
<org.springframework.web.servlet.config.annotation.ViewControllerRegistry: void setApplicationContext(org.springframework.context.ApplicationContext)> -> _SINKS_
<org.springframework.web.servlet.ModelAndViewDefiningException: org.springframework.web.servlet.ModelAndView getModelAndView()> -> _SOURCES_
<org.springframework.context.support.AbstractApplicationContext: org.springframework.context.event.ApplicationEventMulticaster getApplicationEventMulticaster()> -> _SOURCES_
<org.springframework.web.context.support.StaticWebApplicationContext: java.lang.String[] getConfigLocations()> -> _SOURCES_
<org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler: void setRoleHierarchy(org.springframework.security.access.hierarchicalroles.RoleHierarchy)> -> _SINKS_
<org.springframework.jdbc.core.JdbcTemplate: void setIgnoreWarnings(boolean)> -> _CWE089__SINKS_
<org.springframework.beans.factory.config.SetFactoryBean: void setSourceSet(java.util.Set)> -> _SINKS_
<org.springframework.aop.framework.DefaultAdvisorChainFactory: java.util.List getInterceptorsAndDynamicInterceptionAdvice(org.springframework.aop.framework.Advised,java.lang.reflect.Method,java.lang.Class)> -> _SOURCES_
<org.springframework.beans.factory.xml.XmlBeanDefinitionReader: void setDocumentLoader(org.springframework.beans.factory.xml.DocumentLoader)> -> _SINKS_
<org.springframework.jms.core.JmsTemplate: void setExplicitQosEnabled(boolean)> -> _SINKS_
<org.springframework.http.converter.xml.Jaxb2CollectionHttpMessageConverter: void writeToResult(java.lang.Object,org.springframework.http.HttpHeaders,javax.xml.transform.Result)> -> _SINKS_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: int[] getInsertTypes()> -> _CWE089__SOURCES_
<org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration: org.springframework.security.config.'annotation'.authentication.builders.AuthenticationManagerBuilder authenticationManagerBuilder(org.springframework.security.config.'annotation'.ObjectPostProcessor)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.remoting.jaxws.LocalJaxWsServiceFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.util.xml.StaxResult: javax.xml.stream.XMLStreamWriter getXMLStreamWriter()> -> _SOURCES_
<org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser: org.springframework.beans.factory.support.ManagedList getCallableInterceptors(org.w3c.dom.Element,java.lang.Object,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver: void setMethodParamNames(java.lang.String[])> -> _SINKS_
<org.springframework.web.servlet.tags.form.SelectTag: java.lang.String getItemValue()> -> _SOURCES_
<org.springframework.jdbc.datasource.DataSourceUtils: java.sql.Connection getTargetConnection(java.sql.Connection)> -> _CWE306__CWE089__SOURCES__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.security.core.context.SecurityContextHolder: int getInitializeCount()> -> _SOURCES_
<org.springframework.jdbc.support.lob.PassThroughBlob: void truncate(long)> -> _CWE089__SINKS_
<org.springframework.mock.web.HeaderValueHolder: java.util.List getValues()> -> _SOURCES_
<org.springframework.aop.framework.ProxyProcessorSupport: int getOrder()> -> _SOURCES_
<org.springframework.remoting.rmi.RemoteInvocationSerializingExporter: java.lang.Object getProxy()> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.RestTemplateXhrTransport: org.springframework.web.client.RestOperations getRestTemplate()> -> _SOURCES_
<org.springframework.security.provisioning.JdbcUserDetailsManager: void setUserExistsSql(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: void setTableName(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.test.web.servlet.request.MockMvcRequestBuilders: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder delete(java.net.URI)> -> _SOURCES_
<org.springframework.web.servlet.view.document.AbstractPdfStamperView: com.lowagie.text.pdf.PdfReader readPdfResource()> -> _SOURCES__CWE601_
<org.springframework.mock.web.portlet.MockMimeResponse: java.io.OutputStream getPortletOutputStream()> -> _SOURCES__CWE601_
<org.springframework.objenesis.ObjenesisHelper: org.springframework.objenesis.instantiator.ObjectInstantiator getInstantiatorOf(java.lang.Class)> -> _SOURCES_
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.String[] getBeanNamesForType(java.lang.Class)> -> _SOURCES_
<org.springframework.beans.factory.access.el.SpringBeanELResolver: java.lang.Class getCommonPropertyType(javax.el.ELContext,java.lang.Object)> -> _SOURCES_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.util.concurrent.ListenableFuture put(java.net.URI,org.springframework.http.HttpEntity)> -> _SINKS_
<org.springframework.security.config.annotation.web.configurers.RememberMeConfigurer: java.lang.String getKey()> -> _SOURCES_
<org.springframework.expression.spel.ast.SpelNodeImpl: java.lang.Class getObjectClass(java.lang.Object)> -> _SOURCES_
<org.springframework.core.type.classreading.ClassMetadataReadingVisitor: java.lang.String[] getInterfaceNames()> -> _SOURCES_
<org.springframework.beans.factory.xml.XmlReaderContext: org.springframework.beans.factory.xml.NamespaceHandlerResolver getNamespaceHandlerResolver()> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanFactory: int getBeanPostProcessorCount()> -> _SOURCES_
<org.springframework.orm.hibernate5.HibernateTransactionManager: void disconnectOnCompletion(org.hibernate.Session)> -> _CWE306__AUTHENTICATIONS_TO_LOW_
<org.springframework.core.env.PropertySourcesPropertyResolver: java.lang.String getProperty(java.lang.String)> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.AnonymousConfigurer: java.lang.String getKey()> -> _SOURCES_
<org.springframework.jndi.JndiAccessor: void setJndiTemplate(org.springframework.jndi.JndiTemplate)> -> _SINKS_
<org.springframework.jdbc.datasource.DriverManagerDataSource: java.sql.Connection getConnectionFromDriver(java.util.Properties)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__SOURCES__CWE862_
<org.springframework.web.servlet.view.xml.MarshallingView: void setMarshaller(org.springframework.oxm.Marshaller)> -> _SINKS_
<org.springframework.orm.hibernate3.HibernateTransactionManager: void setEntityInterceptorBeanName(java.lang.String)> -> _SINKS_
<org.springframework.web.method.support.ModelAndViewContainer: org.springframework.ui.ModelMap getModel()> -> _SOURCES_
<org.springframework.web.portlet.mvc.annotation.AnnotationMethodHandlerAdapter: void handleAction(javax.portlet.ActionRequest,javax.portlet.ActionResponse,java.lang.Object)> -> _SINKS_
<org.springframework.jdbc.core.metadata.HsqlTableMetaDataProvider: java.lang.String getSimpleQueryForGetGeneratedKey(java.lang.String,java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor getRelatedIfResolvable(org.springframework.core.convert.TypeDescriptor,org.springframework.core.ResolvableType)> -> _SOURCES_
<org.springframework.beans.propertyeditors.URIEditor: void setAsText(java.lang.String)> -> _SINKS_
<org.springframework.jmx.export.MBeanExporter: void setNamingStrategy(org.springframework.jmx.export.naming.ObjectNamingStrategy)> -> _SINKS_
<org.springframework.web.portlet.handler.AbstractHandlerMapping: void setOrder(int)> -> _SINKS_
<org.springframework.web.util.UrlPathHelper: java.lang.String getOriginatingQueryString(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.util.xml.AbstractXMLStreamReader: int getTextLength()> -> _SOURCES_
<org.springframework.jmx.export.assembler.AbstractReflectiveMBeanInfoAssembler: void setExposeClassDescriptor(boolean)> -> _SINKS_
<org.springframework.web.portlet.context.XmlPortletApplicationContext: void loadBeanDefinitions(org.springframework.beans.factory.xml.XmlBeanDefinitionReader)> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyAdviceChain: java.util.List getMatchingAdvice(org.springframework.core.MethodParameter,java.lang.Class)> -> _SOURCES__CWE601_
<org.springframework.mock.web.MockHttpServletRequest: javax.servlet.http.Cookie[] getCookies()> -> _SOURCES_
<org.springframework.messaging.simp.SimpAttributes: java.lang.Object getAttribute(java.lang.String)> -> _SOURCES_
<org.springframework.aop.scope.ScopedProxyUtils: java.lang.String getTargetBeanName(java.lang.String)> -> _SOURCES_
<org.springframework.context.annotation.AnnotatedBeanDefinitionReader: void setScopeMetadataResolver(org.springframework.context.'annotation'.ScopeMetadataResolver)> -> _SINKS_
<org.springframework.jmx.access.MBeanClientInterceptor: java.util.Map getEnvironment()> -> _SOURCES_
<org.springframework.orm.hibernate5.LocalSessionFactoryBean: void setMappingDirectoryLocations(org.springframework.core.io.Resource[])> -> _SINKS_
<org.springframework.scheduling.concurrent.ExecutorConfigurationSupport: void setRejectedExecutionHandler(java.util.concurrent.RejectedExecutionHandler)> -> _SINKS_
<org.springframework.context.support.PropertySourcesPlaceholderConfigurer: void setPropertySources(org.springframework.core.env.PropertySources)> -> _SINKS_
<org.springframework.web.servlet.FlashMap: long getExpirationTime()> -> _SOURCES_
<org.springframework.orm.ibatis.SqlMapClientFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.web.servlet.view.velocity.VelocityView: org.apache.velocity.Template getTemplate(java.lang.String)> -> _SOURCES_
<org.springframework.expression.spel.ast.TypeReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.web.socket.handler.ExceptionWebSocketHandlerDecorator: void afterConnectionEstablished(org.springframework.web.socket.WebSocketSession)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.jmx.export.metadata.ManagedResource: void setPersistPolicy(java.lang.String)> -> _SINKS_
<org.springframework.jms.config.AbstractJmsListenerEndpoint: void setSelector(java.lang.String)> -> _SINKS_
<org.springframework.beans.factory.config.BeanExpressionContext: org.springframework.beans.factory.config.ConfigurableBeanFactory getBeanFactory()> -> _SOURCES_
<org.springframework.jdbc.datasource.AbstractDriverBasedDataSource: java.sql.Connection getConnection(java.lang.String,java.lang.String)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__SOURCES_
<org.springframework.context.annotation.ConfigurationClass: java.util.Map getImportedResources()> -> _SOURCES_
<org.springframework.orm.jdo.JdoTransactionManager: javax.sql.DataSource getDataSource()> -> _SOURCES_
<org.springframework.messaging.simp.SimpMessagingTemplate: void convertAndSendToUser(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)> -> _SINKS_
<org.springframework.context.support.SimpleThreadScope: java.lang.String getConversationId()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletResponse: void setHeader(java.lang.String,java.lang.String)> -> _CWE079__SINKS__CWE601_
<org.springframework.jmx.export.metadata.ManagedMetric: java.lang.String getDisplayName()> -> _SOURCES_
<org.springframework.messaging.simp.SimpMessagingTemplate: long getSendTimeout()> -> _SOURCES_
<org.springframework.security.config.annotation.web.builders.HttpSecurity: org.springframework.security.config.'annotation'.web.configurers.LogoutConfigurer logout()> -> _CWE306__AUTHENTICATIONS_TO_LOW__CWE862_
<org.springframework.beans.factory.xml.XmlBeanDefinitionReader: void setValidationMode(int)> -> _SINKS_
<org.springframework.util.xml.XMLEventStreamReader: int getTextStart()> -> _SOURCES_
<org.springframework.test.util.ReflectionTestUtils: void setField(java.lang.Class,java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompDecoder: java.lang.String readCommand(java.nio.ByteBuffer)> -> _SOURCES_
<org.springframework.util.ClassUtils: java.lang.String getQualifiedName(java.lang.Class)> -> _SOURCES_
<org.springframework.jdbc.datasource.WebSphereDataSourceAdapter: java.sql.Connection doGetConnection(java.lang.String,java.lang.String)> -> _CWE306__CWE089__AUTHENTICATIONS_TO_HIGH_
<org.springframework.security.util.SimpleMethodInvocation: java.lang.Object getThis()> -> _SOURCES_
<org.springframework.beans.factory.InjectionPoint: java.lang.reflect.Member getMember()> -> _SOURCES_
<org.springframework.remoting.jaxrpc.JaxRpcPortClientInterceptor: java.lang.String getPortName()> -> _SOURCES_
<org.springframework.security.core.token.Sha512DigestUtils: java.security.MessageDigest getSha512Digest()> -> _SOURCES_
<org.springframework.http.converter.protobuf.ProtobufHttpMessageConverter: com.google.protobuf.Message$Builder getMessageBuilder(java.lang.Class)> -> _SOURCES_
<org.springframework.web.portlet.bind.PortletRequestUtils: int getRequiredIntParameter(javax.portlet.PortletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.jca.work.WorkManagerTaskExecutor: void setBlockUntilCompleted(boolean)> -> _SINKS_
<org.springframework.mock.web.MockServletContext: javax.servlet.Servlet getServlet(java.lang.String)> -> _SOURCES_
<org.springframework.orm.jdo.JdoTemplate: java.lang.Object execute(org.springframework.orm.jdo.JdoCallback,boolean)> -> _SINKS_
<org.springframework.security.config.annotation.web.configurers.LogoutConfigurer: org.springframework.security.config.'annotation'.web.configurers.LogoutConfigurer logoutRequestMatcher(org.springframework.security.web.util.matcher.RequestMatcher)> -> _CWE306__AUTHENTICATIONS_TO_LOW__CWE862_
<org.springframework.beans.factory.support.ManagedMap: void setMergeEnabled(boolean)> -> _SINKS_
<org.springframework.web.client.RestTemplate: void delete(java.lang.String,java.util.Map)> -> _SINKS_
<org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor: void setEmbeddedValueResolver(org.springframework.util.StringValueResolver)> -> _SINKS_
<org.springframework.web.portlet.util.PortletUtils: java.lang.Object getOrCreateSessionAttribute(javax.portlet.PortletSession,java.lang.String,java.lang.Class)> -> _SOURCES_
<org.springframework.validation.BindException: java.util.List getAllErrors()> -> _SOURCES_
<org.springframework.scripting.groovy.GroovyScriptFactory: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.web.socket.handler.PerConnectionWebSocketHandler: void handleMessage(org.springframework.web.socket.WebSocketSession,org.springframework.web.socket.WebSocketMessage)> -> _SINKS_
<org.springframework.jms.listener.AbstractMessageListenerContainer: void setMessageListener(java.lang.Object)> -> _SINKS_
<org.springframework.jms.listener.serversession.CommonsPoolServerSessionFactory: long getTimeBetweenEvictionRunsMillis()> -> _SOURCES_
<org.springframework.remoting.jaxws.JaxWsPortClientInterceptor: java.lang.String getSoapActionUri()> -> _SOURCES_
<org.springframework.test.context.testng.AbstractTestNGSpringContextTests: void run(org.testng.IHookCallBack,org.testng.ITestResult)> -> _SINKS_
<org.springframework.core.task.SimpleAsyncTaskExecutor: void execute(java.lang.Runnable,long)> -> _SINKS_
<org.springframework.web.servlet.support.WebContentGenerator: void setCacheSeconds(int)> -> _SINKS_
<org.springframework.beans.factory.config.ProviderCreatingFactoryBean: void setTargetBeanName(java.lang.String)> -> _SINKS_
<org.springframework.web.socket.sockjs.client.RestTemplateXhrTransport: org.springframework.core.task.TaskExecutor getTaskExecutor()> -> _SOURCES_
<org.springframework.cglib.core.ClassNameReader: java.lang.String[] getClassInfo(org.springframework.asm.ClassReader)> -> _SOURCES_
<org.springframework.web.servlet.view.ViewResolverComposite: void setOrder(int)> -> _SINKS_
<org.springframework.test.web.servlet.DefaultMvcResult: void setModelAndView(org.springframework.web.servlet.ModelAndView)> -> _SINKS_
<org.springframework.cglib.core.TypeUtils: java.lang.String getPackageName(org.springframework.asm.Type)> -> _SOURCES_
<org.springframework.security.authentication.jaas.AbstractJaasAuthenticationProvider: org.springframework.security.authentication.jaas.JaasAuthenticationCallbackHandler[] getCallbackHandlers()> -> _SOURCES_
<org.springframework.cache.jcache.interceptor.DefaultCacheInvocationContext: javax.cache.annotation.CacheInvocationParameter[] getAllParameters()> -> _SOURCES_
<org.springframework.web.portlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver: java.util.List getHandledExceptions(java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.web.servlet.tags.EvalTag: org.springframework.core.convert.ConversionService getConversionService(javax.servlet.jsp.PageContext)> -> _SOURCES_
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: org.springframework.context.ApplicationContext getParent()> -> _SOURCES_
<org.springframework.context.annotation.ConfigurationClassParser: java.util.Set getConfigurationClasses()> -> _SOURCES_
<org.springframework.jms.listener.AbstractPollingMessageListenerContainer: javax.jms.MessageConsumer createListenerConsumer(javax.jms.Session)> -> _SOURCES_
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.String[] getSingletonNames()> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.session.WebSocketServerSockJsSession: int getTextMessageSizeLimit()> -> _SOURCES_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: java.sql.Timestamp getTimestamp(java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.aop.aspectj.SimpleAspectInstanceFactory: int getOrder()> -> _SOURCES_
<org.springframework.jdbc.core.JdbcTemplate: java.lang.Object execute(org.springframework.jdbc.core.PreparedStatementCreator,org.springframework.jdbc.core.PreparedStatementCallback)> -> _CWE089__SINKS_
<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: javax.xml.rpc.Service createService(javax.xml.rpc.ServiceFactory)> -> _SOURCES_
<org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper: void setConvertAttributeToLowerCase(boolean)> -> _SINKS_
<org.springframework.web.socket.client.standard.StandardWebSocketClient: int getPort(java.net.URI)> -> _SOURCES_
<org.springframework.web.util.UriUtils: java.lang.String encodeHost(java.lang.String,java.lang.String)> -> _SANITIZERS_
<org.springframework.security.authentication.RememberMeAuthenticationProvider: void setMessageSource(org.springframework.context.MessageSource)> -> _SINKS_
<org.springframework.http.client.HttpComponentsClientHttpRequestFactory: void setConnectTimeout(int)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: void setThrowingName(java.lang.String)> -> _SINKS_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.util.concurrent.ListenableFuture postForLocation(java.lang.String,org.springframework.http.HttpEntity,java.util.Map)> -> _SINKS_
<org.springframework.oxm.xmlbeans.XmlBeansMarshaller: void setValidating(boolean)> -> _SINKS_
<org.springframework.aop.interceptor.AbstractTraceInterceptor: org.apache.commons.logging.Log getLoggerForInvocation(org.aopalliance.intercept.MethodInvocation)> -> _SOURCES_
<org.springframework.context.annotation.ConfigurationClass: java.util.Set getImportedBy()> -> _SOURCES_
<org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter: void setUrlDecode(boolean)> -> _SOURCES__SINKS_
<org.springframework.web.portlet.mvc.annotation.AnnotationMethodHandlerAdapter: void setOrder(int)> -> _SINKS_
<org.springframework.web.bind.support.DefaultSessionAttributeStore: java.lang.String getAttributeNameInSession(org.springframework.web.context.request.WebRequest,java.lang.String)> -> _SOURCES_
<org.springframework.jmx.export.metadata.ManagedResource: void setPersistLocation(java.lang.String)> -> _SINKS_
<org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor: void setBeanName(java.lang.String)> -> _SINKS_
<org.springframework.web.context.request.ServletWebRequest: java.lang.Object getNativeRequest()> -> _SOURCES_
<org.springframework.http.HttpHeaders: void setETag(java.lang.String)> -> _SINKS_
<org.springframework.expression.spel.SpelParserConfiguration: java.lang.ClassLoader getCompilerClassLoader()> -> _CWE078__SOURCES_
<org.springframework.format.support.FormattingConversionServiceFactoryBean: void setConverters(java.util.Set)> -> _SINKS_
<org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver: void handleMissingValue(java.lang.String,org.springframework.core.MethodParameter,org.springframework.web.context.request.NativeWebRequest)> -> _SINKS_
<org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer: java.util.List getCallableInterceptors()> -> _SOURCES_
<org.springframework.jms.listener.AbstractMessageListenerContainer: void executeListener(javax.jms.Session,javax.jms.Message)> -> _SINKS_
<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: org.springframework.beans.factory.BeanFactory getBeanFactory()> -> _SOURCES_
<org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver: void setScreenContentKey(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.MockServletContext: java.lang.String getServerInfo()> -> _SOURCES_
<org.springframework.web.method.annotation.MapMethodProcessor: void handleReturnValue(java.lang.Object,org.springframework.core.MethodParameter,org.springframework.web.method.support.ModelAndViewContainer,org.springframework.web.context.request.NativeWebRequest)> -> _SINKS_
<org.springframework.security.authentication.jaas.memory.InMemoryConfiguration: javax.security.auth.login.AppConfigurationEntry[] getAppConfigurationEntry(java.lang.String)> -> _SOURCES_
<org.springframework.cache.support.CompositeCacheManager: java.util.Collection getCacheNames()> -> _SOURCES_
<org.springframework.scheduling.backportconcurrent.ScheduledExecutorTask: java.lang.Runnable getRunnable()> -> _SOURCES_
<org.springframework.http.HttpHeaders: void setConnection(java.util.List)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.core.io.UrlResource: java.lang.String getFilename()> -> _SOURCES_
<org.springframework.core.env.AbstractPropertyResolver: java.lang.String getProperty(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: void setOnclick(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.orm.hibernate5.support.OpenSessionInViewInterceptor: java.lang.String getParticipateAttributeName()> -> _SOURCES_
<org.springframework.jdbc.core.metadata.TableMetaDataContext: java.util.List getTableColumns()> -> _CWE089__SOURCES_
<org.springframework.core.LocalVariableTableParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Constructor)> -> _SOURCES_
<org.springframework.expression.spel.ast.MethodReference: java.lang.String getName()> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: org.springframework.validation.Validator getValidator()> -> _SOURCES_
<org.springframework.web.servlet.view.document.AbstractJExcelView: jxl.Workbook getTemplateSource(java.lang.String,javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.test.web.servlet.DefaultMvcResult: org.springframework.mock.web.MockHttpServletRequest getRequest()> -> _SOURCES_
<org.springframework.jmx.support.ConnectorServerFactoryBean: void setDaemon(boolean)> -> _SINKS_
<org.springframework.transaction.support.AbstractPlatformTransactionManager: void setDefaultTimeout(int)> -> _SINKS_
<org.springframework.orm.jpa.persistenceunit.MutablePersistenceUnitInfo: java.util.List getMappingFileNames()> -> _SOURCES_
<org.springframework.oxm.castor.CastorMarshaller: void setNoNamespaceSchemaLocation(java.lang.String)> -> _SINKS_
<org.springframework.web.portlet.handler.AbstractHandlerMapping: org.springframework.web.portlet.HandlerExecutionChain getHandlerExecutionChain(java.lang.Object,javax.portlet.PortletRequest)> -> _SOURCES__SINKS_
<org.springframework.oxm.xstream.XStreamMarshaller: void setUseAttributeForTypes(java.lang.Class[])> -> _SINKS_
<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.web.servlet.FlashMapManager getFlashMapManager(org.springframework.mock.web.MockHttpServletRequest)> -> _SOURCES_
<org.springframework.web.context.request.Log4jNestedDiagnosticContextInterceptor: void postHandle(org.springframework.web.context.request.WebRequest,org.springframework.ui.ModelMap)> -> _SINKS_
<org.springframework.mock.web.MockHttpSession: void setMaxInactiveInterval(int)> -> _SINKS_
<org.springframework.web.servlet.tags.BindErrorsTag: void setName(java.lang.String)> -> _SINKS_
<org.springframework.web.socket.adapter.AbstractWebSocketSession: java.lang.Object getNativeSession()> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.session.WebSocketServerSockJsSession: java.util.List getExtensions()> -> _SOURCES_
<org.springframework.jms.listener.endpoint.StandardJmsActivationSpecFactory: void setDefaultProperties(java.util.Properties)> -> _SINKS_
<org.springframework.web.portlet.ModelAndView: java.lang.String getViewName()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer: boolean isCustomLoginPage()> -> _AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.view.RedirectView: void setPropagateQueryParams(boolean)> -> _SINKS_
<org.springframework.scheduling.config.IntervalTask: long getInterval()> -> _SOURCES_
<org.springframework.security.core.token.SecureRandomFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setRedirectHosts(java.lang.String[])> -> _SINKS_
<org.springframework.aop.framework.AbstractSingletonProxyFactoryBean: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.util.xml.StaxEventHandler: java.util.List getNamespaces(java.util.Map)> -> _SOURCES_
<org.springframework.security.core.context.ThreadLocalSecurityContextHolderStrategy: void setContext(org.springframework.security.core.context.SecurityContext)> -> _SINKS_
<org.springframework.scheduling.support.CronSequenceGenerator: java.lang.String getExpression()> -> _SOURCES_
<org.springframework.jms.connection.UserCredentialsConnectionFactoryAdapter: javax.jms.Connection createConnection()> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.orm.hibernate3.HibernateJdbcException: java.sql.SQLException getSQLException()> -> _CWE089__SOURCES_
<org.springframework.security.config.annotation.web.configurers.LogoutConfigurer: org.springframework.security.web.authentication.logout.LogoutSuccessHandler getLogoutSuccessHandler()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.web.servlet.handler.AbstractHandlerMapping: void setInterceptors(java.lang.Object[])> -> _SINKS_
<org.springframework.web.socket.sockjs.transport.handler.XhrStreamingTransportHandler: org.springframework.web.socket.sockjs.frame.SockJsFrameFormat getFrameFormat(org.springframework.http.server.ServerHttpRequest)> -> _SOURCES_
<org.springframework.beans.factory.support.BeanDefinitionResource: java.io.InputStream getInputStream()> -> _SOURCES_
<org.springframework.jmx.export.metadata.ManagedResource: java.lang.String getPersistLocation()> -> _SOURCES_
<org.springframework.aop.interceptor.AsyncExecutionInterceptor: java.lang.String getExecutorQualifier(java.lang.reflect.Method)> -> _CWE078__SOURCES__SINKS_
<org.springframework.web.portlet.context.PortletRequestAttributes: void setAttribute(java.lang.String,java.lang.Object,int)> -> _CWE079__SINKS_
<org.springframework.web.servlet.view.ViewResolverComposite: void setViewResolvers(java.util.List)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletPreferences: java.util.Enumeration getNames()> -> _SOURCES_
<org.springframework.remoting.rmi.JndiRmiClientInterceptor: java.lang.Class getServiceInterface()> -> _SOURCES_
<org.springframework.scheduling.timer.ScheduledTimerTask: long getDelay()> -> _SOURCES_
<org.springframework.oxm.xmlbeans.XmlBeansMarshaller: java.lang.Object unmarshalXmlEventReader(javax.xml.stream.XMLEventReader)> -> _SOURCES_
<org.springframework.aop.aspectj.AspectJAfterReturningAdvice: void setReturningName(java.lang.String)> -> _SINKS_
<org.springframework.web.client.RestTemplate: void setUriTemplateHandler(org.springframework.web.util.UriTemplateHandler)> -> _SINKS_
<org.springframework.jmx.export.metadata.ManagedResource: void setLog(boolean)> -> _SINKS_
<org.springframework.beans.factory.config.MapFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.context.access.ContextSingletonBeanFactoryLocator: org.springframework.beans.factory.access.BeanFactoryLocator getInstance()> -> _SOURCES_
<org.springframework.web.servlet.mvc.condition.RequestConditionHolder: org.springframework.web.servlet.mvc.condition.RequestConditionHolder getMatchingCondition(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.aop.framework.AbstractAdvisingBeanPostProcessor: void setBeforeExistingAdvisors(boolean)> -> _SINKS_
<org.springframework.scheduling.config.ScheduledTaskRegistrar: void setFixedRateTasksList(java.util.List)> -> _SINKS_
<org.springframework.asm.commons.GeneratorAdapter: int getArgIndex(int)> -> _SOURCES_
<org.springframework.beans.factory.parsing.AliasDefinition: java.lang.String getAlias()> -> _SOURCES_
<org.springframework.jmx.export.metadata.ManagedResource: void setPersistPeriod(int)> -> _SINKS_
<org.springframework.mock.web.MockJspWriter: void print(long)> -> _SINKS_
<org.springframework.format.number.NumberFormatAnnotationFormatterFactory: java.util.Set getFieldTypes()> -> _SOURCES_
<org.springframework.web.util.OpaqueUriComponents: java.lang.String getSchemeSpecificPart()> -> _SOURCES_
<org.springframework.web.context.request.ServletWebRequest: java.lang.String getParameter(java.lang.String)> -> _CWE079__SOURCES__CWE601_
<org.springframework.web.servlet.config.ViewResolversBeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition createContentNegotiatingViewResolver(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: org.springframework.validation.BindingErrorProcessor getBindingErrorProcessor()> -> _SOURCES_
<org.springframework.core.annotation.AbstractAliasAwareAnnotationAttributeExtractor: java.lang.Object getSource()> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void addResourceHandlers(org.springframework.web.servlet.config.'annotation'.ResourceHandlerRegistry)> -> _SINKS_
<org.springframework.http.HttpStatus: java.lang.String getReasonPhrase()> -> _SOURCES_
<org.springframework.aop.target.CommonsPoolTargetSource: void setTimeBetweenEvictionRunsMillis(long)> -> _SINKS_
<org.springframework.context.support.ResourceBundleMessageSource: java.text.MessageFormat getMessageFormat(java.util.ResourceBundle,java.lang.String,java.util.Locale)> -> _SOURCES_
<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.config.BeanDefinition parseCustomElement(org.w3c.dom.Element)> -> _SINKS_
<org.springframework.format.datetime.joda.JodaTimeContextHolder: org.joda.time.format.DateTimeFormatter getFormatter(org.joda.time.format.DateTimeFormatter,java.util.Locale)> -> _SOURCES_
<org.springframework.orm.hibernate5.LocalSessionFactoryBean: void setCacheableMappingLocations(org.springframework.core.io.Resource[])> -> _SINKS_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: java.sql.Timestamp getTimestamp(java.lang.String,java.util.Calendar)> -> _CWE089__SOURCES_
<org.springframework.web.socket.sockjs.client.SockJsUrlInfo: java.net.URI getTransportUrl(org.springframework.web.socket.sockjs.transport.TransportType)> -> _SOURCES__SINKS_
<org.springframework.orm.hibernate5.HibernateTemplate: java.lang.Object get(java.lang.Class,java.io.Serializable)> -> _SOURCES_
<org.springframework.jca.cci.connection.DelegatingConnectionFactory: javax.naming.Reference getReference()> -> _SOURCES_
<org.springframework.web.portlet.context.PortletRequestHandledEvent: java.lang.String getRequestType()> -> _SOURCES_
<org.springframework.objenesis.instantiator.android.Android17Instantiator: java.lang.reflect.Method getNewInstanceMethod()> -> _SOURCES_
<org.springframework.cache.transaction.TransactionAwareCacheDecorator: java.lang.Object get(java.lang.Object,java.lang.Class)> -> _SOURCES_
<org.springframework.remoting.rmi.RmiServiceExporter: java.rmi.registry.Registry getRegistry(int)> -> _SOURCES_
<org.springframework.security.config.http.AuthenticationConfigBuilder: void createLogoutFilter()> -> _CWE306__AUTHENTICATIONS_TO_LOW__CWE862_
<org.springframework.jmx.export.metadata.ManagedNotification: void setNotificationTypes(java.lang.String[])> -> _SINKS_
<org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory: javax.sql.DataSource getDataSource()> -> _CWE089__SOURCES_
<org.springframework.web.util.HtmlUtils: java.lang.String htmlUnescape(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.web.socket.client.standard.AnnotatedEndpointConnectionManager: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider: javax.sql.DataSource getDataSourceToUse(javax.sql.DataSource)> -> _CWE089__SOURCES_
<org.springframework.jdbc.datasource.embedded.SimpleDriverDataSourceFactory: org.springframework.jdbc.datasource.embedded.ConnectionProperties getConnectionProperties()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__SOURCES__CWE862_
<org.springframework.ui.freemarker.FreeMarkerConfigurationFactory: void postProcessTemplateLoaders(java.util.List)> -> _SOURCES_
<org.springframework.jdbc.core.simple.SimpleJdbcInsert: java.lang.Number executeAndReturnKey(java.util.Map)> -> _CWE089__SINKS_
<org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler: org.springframework.scheduling.TaskScheduler getTaskScheduler()> -> _SOURCES_
<org.springframework.aop.scope.DefaultScopedObject: java.lang.Object getTargetObject()> -> _SOURCES_
<org.springframework.web.servlet.view.json.MappingJackson2JsonView: void setPrefixJson(boolean)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletRequest: void setRemoteHost(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer: void setApplicationContext(org.springframework.context.ApplicationContext)> -> _SINKS_
<org.springframework.web.servlet.view.document.AbstractJExcelView: boolean generatesDownloadContent()> -> _SOURCES_
<org.springframework.web.context.support.StaticWebApplicationContext: org.springframework.ui.context.Theme getTheme(java.lang.String)> -> _SOURCES_
<org.springframework.web.socket.adapter.standard.ConvertingEncoderDecoderSupport: boolean willDecode(java.lang.Object)> -> _SOURCES_
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyHoldingValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanDefinition: void setPrimary(boolean)> -> _SINKS_
<org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration: java.lang.String[] getPathPatterns()> -> _SOURCES_
<org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver: void setWarnLogCategory(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver: org.springframework.web.servlet.ModelAndView handleMethodArgumentNotValidException(org.springframework.web.bind.MethodArgumentNotValidException,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)> -> _SINKS_
<org.springframework.jdbc.support.nativejdbc.WebSphereNativeJdbcExtractor: java.sql.Connection doGetNativeConnection(java.sql.Connection)> -> _CWE306__CWE089__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.cors.CorsConfiguration: void setAllowCredentials(java.lang.Boolean)> -> _SINKS_
<org.springframework.web.portlet.context.AbstractRefreshablePortletApplicationContext: void setPortletConfig(javax.portlet.PortletConfig)> -> _SINKS_
<org.springframework.validation.AbstractErrors: java.lang.Class getFieldType(java.lang.String)> -> _SOURCES_
<org.springframework.http.client.Netty4ClientHttpRequestFactory: io.netty.bootstrap.Bootstrap getBootstrap(java.net.URI)> -> _SOURCES_
<org.springframework.test.context.support.DelegatingSmartContextLoader: org.springframework.test.context.SmartContextLoader getXmlLoader()> -> _SOURCES_
<org.springframework.instrument.classloading.websphere.WebSphereClassLoaderAdapter: java.lang.ClassLoader getThrowawayClassLoader()> -> _SOURCES_
<org.springframework.util.xml.XMLEventStreamReader: java.lang.Object getProperty(java.lang.String)> -> _SOURCES_
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String)> -> _SOURCES_
<org.springframework.beans.factory.annotation.CustomAutowireConfigurer: int getOrder()> -> _SOURCES_
<org.springframework.messaging.simp.config.AbstractMessageBrokerConfiguration: org.springframework.messaging.simp.config.ChannelRegistration getClientOutboundChannelRegistration()> -> _SOURCES_
<org.springframework.jdbc.datasource.DataSourceUtils: boolean isConnectionTransactional(java.sql.Connection,javax.sql.DataSource)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__CWE862_
<org.springframework.jdbc.core.metadata.GenericCallMetaDataProvider: java.lang.String getUserName()> -> _CWE089__SOURCES_
<org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor: void setCacheSessionBean(boolean)> -> _SINKS_
<org.springframework.security.crypto.password.StandardPasswordEncoder: byte[] decode(java.lang.CharSequence)> -> _SOURCES_
<org.springframework.web.socket.config.annotation.WebMvcStompEndpointRegistry: void setApplicationContext(org.springframework.context.ApplicationContext)> -> _SINKS_
<org.springframework.cache.jcache.interceptor.DefaultCacheInvocationContext: java.lang.Object[] getArgs()> -> _SOURCES_
<org.springframework.aop.TruePointcut: org.springframework.aop.ClassFilter getClassFilter()> -> _SOURCES_
<org.springframework.mail.javamail.JavaMailSenderImpl: java.lang.String getPassword()> -> _SOURCES_
<org.springframework.messaging.core.AbstractDestinationResolvingMessagingTemplate: void setDestinationResolver(org.springframework.messaging.core.DestinationResolver)> -> _SINKS_
<org.springframework.orm.hibernate4.SpringSessionSynchronization: int getOrder()> -> _SOURCES_
<org.springframework.cache.jcache.JCacheCache: javax.cache.Cache getNativeCache()> -> _SOURCES_
<org.springframework.web.method.support.ModelAndViewContainer: void setViewName(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.support.lob.DefaultLobHandler: java.io.InputStream getClobAsAsciiStream(java.sql.ResultSet,int)> -> _CWE089__SOURCES_
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: java.lang.String getApplicationName()> -> _SOURCES_
<org.springframework.web.servlet.mvc.ParameterizableViewController: org.springframework.web.servlet.ModelAndView handleRequestInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)> -> _SOURCES_
<org.springframework.expression.spel.ast.FunctionReference: org.springframework.expression.TypedValue executeFunctionJLRMethod(org.springframework.expression.spel.ExpressionState,java.lang.reflect.Method)> -> _SINKS_
<org.springframework.web.servlet.FrameworkServlet: void setApplicationContext(org.springframework.context.ApplicationContext)> -> _SINKS_
<org.springframework.remoting.httpinvoker.HttpComponentsHttpInvokerRequestExecutor: org.apache.http.client.config.RequestConfig$Builder cloneRequestConfig()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer: java.lang.String getLoginPage()> -> _SOURCES_
<org.springframework.util.ClassUtils: java.lang.String getShortName(java.lang.String)> -> _SOURCES_
<org.springframework.util.xml.AbstractXMLReader: void setErrorHandler(org.xml.sax.ErrorHandler)> -> _SINKS_
<org.springframework.web.socket.server.standard.ServerEndpointRegistration: void setSubprotocols(java.util.List)> -> _SINKS_
<org.springframework.jms.listener.endpoint.JmsActivationSpecConfig: java.lang.String getClientId()> -> _SOURCES_
<org.springframework.scheduling.backportconcurrent.ScheduledExecutorFactoryBean: void setBeanName(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.config.annotation.ViewControllerRegistration: org.springframework.web.servlet.config.'annotation'.ViewControllerRegistration setStatusCode(org.springframework.http.HttpStatus)> -> _SINKS_
<org.springframework.web.servlet.FrameworkServlet: void setContextConfigLocation(java.lang.String)> -> _SINKS_
<org.springframework.jms.listener.adapter.AbstractAdaptableMessageListener: void setMessageConverter(org.springframework.jms.support.converter.MessageConverter)> -> _SINKS_
<org.springframework.test.context.support.AbstractTestContextBootstrapper: java.util.List getDefaultTestExecutionListenerClassNames()> -> _SOURCES_
<org.springframework.orm.ibatis.SqlMapClientFactoryBean: org.springframework.jdbc.support.lob.LobHandler getConfigTimeLobHandler()> -> _SOURCES_
<org.springframework.expression.spel.ast.SpelNodeImpl: int getStartPosition()> -> _SOURCES_
<org.springframework.cglib.core.MethodInfoTransformer: org.springframework.cglib.core.MethodInfoTransformer getInstance()> -> _SOURCES_
<org.springframework.cglib.reflect.FastClass: org.springframework.cglib.reflect.FastMethod getMethod(java.lang.String,java.lang.Class[])> -> _SOURCES_
<org.springframework.messaging.simp.config.AbstractMessageBrokerConfiguration: org.springframework.validation.Validator getValidator()> -> _SOURCES_
<org.springframework.orm.hibernate5.HibernateTransactionManager: void setSessionFactory(org.hibernate.SessionFactory)> -> _SINKS_
<org.springframework.jdbc.datasource.embedded.OutputStreamFactory: java.io.OutputStream getNoopOutputStream()> -> _CWE089__SOURCES_
<org.springframework.web.socket.messaging.StompSubProtocolHandler: void sendErrorMessage(org.springframework.web.socket.WebSocketSession,java.lang.Throwable)> -> _SINKS_
<org.springframework.validation.AbstractErrors: org.springframework.validation.ObjectError getGlobalError()> -> _SOURCES_
<org.springframework.jms.support.destination.JndiDestinationResolver: void setDynamicDestinationResolver(org.springframework.jms.support.destination.DestinationResolver)> -> _SINKS_
<org.springframework.orm.jpa.JpaTransactionManager: java.util.Map getJpaPropertyMap()> -> _SOURCES_
<org.springframework.jdbc.support.DatabaseStartupValidator: void setDataSource(javax.sql.DataSource)> -> _CWE089__SINKS_
<org.springframework.scheduling.annotation.AsyncAnnotationAdvisor: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSetMetaData: java.lang.String getSchemaName(int)> -> _CWE089__SOURCES_
<org.springframework.cache.jcache.interceptor.AbstractJCacheOperation: org.springframework.cache.interceptor.CacheResolver getCacheResolver()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockEvent: java.lang.String getName()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter: void setTrustResolver(org.springframework.security.authentication.AuthenticationTrustResolver)> -> _SINKS_
<org.springframework.web.context.support.GroovyWebApplicationContext: groovy.lang.MetaClass getMetaClass()> -> _SOURCES_
<org.springframework.http.converter.xml.AbstractJaxb2HttpMessageConverter: javax.xml.bind.Unmarshaller createUnmarshaller(java.lang.Class)> -> _SOURCES_
<org.springframework.format.datetime.DateFormatter: void setStylePattern(java.lang.String)> -> _SINKS_
<org.springframework.messaging.simp.config.StompBrokerRelayRegistration: org.springframework.messaging.simp.config.StompBrokerRelayRegistration setSystemHeartbeatReceiveInterval(long)> -> _SINKS_
<org.springframework.jms.listener.serversession.ServerSessionMessageListenerContainer102: javax.jms.Session createSession(javax.jms.Connection)> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession: void setTextMessageSizeLimit(int)> -> _SINKS_
<org.springframework.format.datetime.standard.DateTimeFormatterRegistrar: void setDateFormatter(java.time.format.DateTimeFormatter)> -> _SINKS_
<org.springframework.scheduling.quartz.SimpleTriggerFactoryBean: void setBeanName(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag: void writeDefaultAttributes(org.springframework.web.servlet.tags.form.TagWriter)> -> _SINKS_
<org.springframework.web.context.request.SessionScope: int getScope()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: void setScheme(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.jmx.access.NotificationListenerRegistrar: void setEnvironment(java.util.Map)> -> _SINKS_
<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder setAbstract(boolean)> -> _SINKS_
<org.springframework.aop.framework.AbstractSingletonProxyFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.aop.framework.ProxyFactoryBean: void setTargetName(java.lang.String)> -> _SINKS_
<org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler: java.util.List getCustomArgumentResolvers()> -> _SOURCES_
<org.springframework.context.support.ConversionServiceFactoryBean: void setConverters(java.util.Set)> -> _SINKS_
<org.springframework.test.context.testng.AbstractTransactionalTestNGSpringContextTests: void setSqlScriptEncoding(java.lang.String)> -> _SINKS_
<org.springframework.remoting.jaxws.JaxWsPortClientInterceptor: void setUsername(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.support.nativejdbc.Jdbc4NativeJdbcExtractor: java.sql.PreparedStatement getNativePreparedStatement(java.sql.PreparedStatement)> -> _CWE089__SOURCES_
<org.springframework.beans.factory.xml.XmlBeanDefinitionReader: void setNamespaceHandlerResolver(org.springframework.beans.factory.xml.NamespaceHandlerResolver)> -> _SINKS_
<org.springframework.beans.factory.config.DependencyDescriptor: java.lang.Class getCollectionType()> -> _SOURCES_
<org.springframework.messaging.support.ExecutorSubscribableChannel: void setInterceptors(java.util.List)> -> _SINKS_
<org.springframework.validation.BindException: java.lang.String[] getSuppressedFields()> -> _SOURCES_
<org.springframework.web.client.RestTemplate: void delete(java.net.URI)> -> _SINKS_
<org.springframework.aop.support.NameMatchMethodPointcutAdvisor: void setClassFilter(org.springframework.aop.ClassFilter)> -> _SINKS_
<org.springframework.web.util.ContentCachingRequestWrapper: java.io.BufferedReader getReader()> -> _SOURCES_
<org.springframework.expression.spel.ast.SpelNodeImpl: org.springframework.expression.spel.ast.SpelNodeImpl getPreviousChild()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.RequestMappingInfo: org.springframework.web.servlet.mvc.condition.PatternsRequestCondition getPatternsCondition()> -> _SOURCES_
<org.springframework.aop.config.SimpleBeanFactoryAwareAspectInstanceFactory: void setAspectBeanName(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.mvc.multiaction.MultiActionController: void setWebBindingInitializer(org.springframework.web.bind.support.WebBindingInitializer)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletContext: java.io.InputStream getResourceAsStream(java.lang.String)> -> _SOURCES_
<org.springframework.cache.caffeine.CaffeineCache: org.springframework.cache.Cache$ValueWrapper get(java.lang.Object)> -> _SOURCES_
<org.springframework.orm.hibernate3.FilterDefinitionFactoryBean: void setBeanName(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.core.metadata.CallMetaDataContext: java.util.List getOutParameterNames()> -> _CWE089__SOURCES_
<org.springframework.beans.factory.config.BeanReferenceFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.validation.beanvalidation.SpringValidatorAdapter: javax.validation.metadata.BeanDescriptor getConstraintsForClass(java.lang.Class)> -> _SOURCES_
<org.springframework.expression.spel.standard.SpelExpression: void setValue(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)> -> _SINKS_
<org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean: void setFailOnUnknownProperties(boolean)> -> _SINKS_
<org.springframework.cache.jcache.interceptor.DefaultCacheMethodDetails: java.util.Set getAnnotations()> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateAccessor: void setJdbcExceptionTranslator(org.springframework.jdbc.support.SQLExceptionTranslator)> -> _CWE089__SINKS_
<org.springframework.http.client.SimpleStreamingAsyncClientHttpRequest: java.net.URI getURI()> -> _SOURCES_
<org.springframework.jdbc.support.lob.OracleLobHandler: void setNativeJdbcExtractor(org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor)> -> _CWE089__SINKS_
<org.springframework.messaging.support.NativeMessageHeaderAccessor: java.lang.String getFirstNativeHeader(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.view.ResourceBundleViewResolver: void setOrder(int)> -> _SINKS_
<org.springframework.web.socket.adapter.jetty.JettyWebSocketSession: java.net.URI getUri()> -> _SOURCES_
<org.springframework.web.context.support.RequestHandledEvent: java.lang.String getSessionId()> -> _SOURCES_
<org.springframework.web.filter.AbstractRequestLoggingFilter: void setAfterMessagePrefix(java.lang.String)> -> _SINKS_
<org.springframework.beans.factory.support.ManagedList: void setMergeEnabled(boolean)> -> _SINKS_
<org.springframework.core.convert.TypeDescriptor: java.lang.Object getSource()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer: org.springframework.security.config.'annotation'.web.configurers.AbstractAuthenticationFilterConfigurer getSelf()> -> _SOURCES_
<org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration: void setMethodSecurityExpressionHandler(java.util.List)> -> _SINKS_
<org.springframework.beans.propertyeditors.CustomDateEditor: java.lang.String getAsText()> -> _SOURCES_
<org.springframework.aop.target.CommonsPoolTargetSource: byte getWhenExhaustedAction()> -> _SOURCES_
<org.springframework.scheduling.concurrent.ScheduledExecutorTask: long getPeriod()> -> _SOURCES_
<org.springframework.messaging.handler.annotation.support.HeaderMethodArgumentResolver: org.springframework.messaging.handler.'annotation'.support.AbstractNamedValueMethodArgumentResolver$NamedValueInfo createNamedValueInfo(org.springframework.core.MethodParameter)> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.transaction.support.TransactionTemplate: void setTransactionManager(org.springframework.transaction.PlatformTransactionManager)> -> _SINKS_
<org.springframework.orm.hibernate5.support.OpenSessionInViewInterceptor: void postHandle(org.springframework.web.context.request.WebRequest,org.springframework.ui.ModelMap)> -> _SINKS_
<org.springframework.orm.hibernate5.HibernateTemplate: void setQueryCacheRegion(java.lang.String)> -> _SINKS_
<org.springframework.scheduling.quartz.ResourceLoaderClassLoadHelper: java.net.URL getResource(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.support.RequestContext: org.springframework.validation.Errors getErrors(java.lang.String,boolean)> -> _SOURCES_
<org.springframework.beans.support.PagedListHolder: int getFirstElementOnPage()> -> _SOURCES_
<org.springframework.beans.AbstractNestablePropertyAccessor: void setWrappedInstance(java.lang.Object,java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.aop.framework.ReflectiveMethodInvocation: void setUserAttribute(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.web.socket.sockjs.transport.session.WebSocketServerSockJsSession: void writeFrameInternal(org.springframework.web.socket.sockjs.frame.SockJsFrame)> -> _SINKS_
<org.springframework.web.servlet.support.BindStatus: java.lang.String getErrorMessagesAsString(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.web.servlet.tags.ParamTag: void setName(java.lang.String)> -> _SINKS_
<org.springframework.web.bind.MissingServletRequestParameterException: java.lang.String getParameterType()> -> _SOURCES__CWE601_
<org.springframework.scheduling.config.TaskExecutorFactoryBean: void setKeepAliveSeconds(int)> -> _SINKS_
<org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag: void setPath(java.lang.String)> -> _SINKS_
<org.springframework.http.converter.BufferedImageHttpMessageConverter: java.awt.image.BufferedImage read(java.lang.Class,org.springframework.http.HttpInputMessage)> -> _SOURCES_
<org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder: org.springframework.security.config.'annotation'.authentication.builders.AuthenticationManagerBuilder parentAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler: org.springframework.validation.Validator getValidator()> -> _SOURCES_
<org.springframework.transaction.interceptor.TransactionAttributeSourceEditor: void setAsText(java.lang.String)> -> _SINKS_
<org.springframework.jndi.JndiTemplate: void setEnvironment(java.util.Properties)> -> _SINKS_
<org.springframework.web.servlet.view.UrlBasedViewResolver: java.lang.String getSuffix()> -> _SOURCES_
<org.springframework.web.portlet.bind.PortletRequestUtils: float getFloatParameter(javax.portlet.PortletRequest,java.lang.String,float)> -> _SOURCES_
<org.springframework.context.support.AbstractApplicationContext: java.util.Map getBeansOfType(java.lang.Class,boolean,boolean)> -> _SOURCES_
<org.springframework.remoting.support.SimpleHttpServerFactoryBean: void setFilters(java.util.List)> -> _SINKS_
<org.springframework.web.socket.sockjs.support.AbstractSockJsService: void setStreamBytesLimit(int)> -> _SINKS_
<org.springframework.oxm.castor.CastorMarshaller: org.exolab.castor.xml.XMLContext createXMLContext(org.springframework.core.io.Resource[],java.lang.Class[],java.lang.String[])> -> _SOURCES_
<org.springframework.jdbc.object.BatchSqlUpdate: int getExecutionCount()> -> _CWE089__SOURCES_
<org.springframework.remoting.rmi.JndiRmiServiceExporter: void setJndiEnvironment(java.util.Properties)> -> _SINKS_
<org.springframework.beans.factory.support.AbstractBeanFactory: void setCacheBeanMetadata(boolean)> -> _SINKS_
<org.springframework.web.servlet.handler.AbstractHandlerMapping: org.springframework.web.servlet.HandlerInterceptor[] getAdaptedInterceptors()> -> _SOURCES_
<org.springframework.orm.ibatis.SqlMapClientTemplate: java.util.Map executeWithMapResult(org.springframework.orm.ibatis.SqlMapClientCallback)> -> _CWE078__CWE089__SINKS_
<org.springframework.orm.hibernate3.AbstractSessionFactoryBean: javax.sql.DataSource getDataSource()> -> _SOURCES_
<org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter: java.lang.Object readFromSource(java.lang.Class,org.springframework.http.HttpHeaders,javax.xml.transform.Source)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletRequest: void setCookies(javax.servlet.http.Cookie[])> -> _SINKS_
<org.springframework.scheduling.quartz.SimpleTriggerFactoryBean: void setJobDataAsMap(java.util.Map)> -> _SINKS_
<org.springframework.web.servlet.tags.form.FormTag: void setPath(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.support.SQLErrorCodes: void setCannotAcquireLockCodes(java.lang.String[])> -> _CWE089__SINKS_
<org.springframework.core.MethodParameter: java.lang.String getParameterName()> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateAccessor: void setFlushMode(int)> -> _SINKS_
<org.springframework.web.portlet.context.PortletWebRequest: java.lang.String getRemoteUser()> -> _CWE079__SOURCES_
<org.springframework.web.accept.MappingMediaTypeFileExtensionResolver: java.util.Map getMediaTypes()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletResponse: javax.servlet.http.Cookie getCookie(java.lang.String)> -> _SOURCES__CWE601_
<org.springframework.beans.support.MutableSortDefinition: java.lang.String getProperty()> -> _SOURCES_
<org.springframework.jms.listener.serversession.ServerSessionMessageListenerContainer102: javax.jms.Connection createConnection()> -> _CWE306__SOURCES__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.multipart.commons.CommonsFileUploadSupport: boolean isUploadTempDirSpecified()> -> _SOURCES_
<org.springframework.web.portlet.handler.PortletModeParameterHandlerMapping: void setAllowDuplicateParameters(boolean)> -> _SINKS_
<org.springframework.beans.support.MutableSortDefinition: void setToggleAscendingOnProperty(boolean)> -> _SINKS_
<org.springframework.expression.common.CompositeStringExpression: void setValue(org.springframework.expression.EvaluationContext,java.lang.Object)> -> _SINKS_
<org.springframework.jmx.export.metadata.ManagedResource: int getPersistPeriod()> -> _SOURCES_
<org.springframework.web.socket.config.annotation.SockJsServiceRegistration: org.springframework.web.socket.config.'annotation'.SockJsServiceRegistration setMessageCodec(org.springframework.web.socket.sockjs.frame.SockJsMessageCodec)> -> _SINKS_
<org.springframework.jca.cci.core.CciTemplate: void execute(javax.resource.cci.InteractionSpec,javax.resource.cci.Record,javax.resource.cci.Record)> -> _SINKS_
<org.springframework.messaging.converter.DefaultContentTypeResolver: org.springframework.util.MimeType getDefaultMimeType()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.FormTag: java.lang.String getAcceptCharset()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletRequest: java.util.Enumeration getPropertyNames()> -> _SOURCES_
<org.springframework.test.web.client.match.XpathRequestMatchers: org.springframework.test.web.client.RequestMatcher number(org.hamcrest.Matcher)> -> _SOURCES_
<org.springframework.mail.javamail.SmartMimeMessage: javax.activation.FileTypeMap getDefaultFileTypeMap()> -> _SOURCES_
<org.springframework.aop.config.ConfigBeanDefinitionParser: java.lang.Object parsePointcutProperty(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.util.Base64Utils: byte[] encodeUrlSafe(byte[])> -> _SANITIZERS_
<org.springframework.cglib.proxy.MethodProxy: org.springframework.cglib.core.Signature getSignature()> -> _SOURCES_
<org.springframework.aop.config.MethodLocatingFactoryBean: void setMethodName(java.lang.String)> -> _SINKS_
<org.springframework.context.support.AbstractApplicationContext: org.springframework.core.io.Resource[] getResources(java.lang.String)> -> _SOURCES_
<org.springframework.util.CustomizableThreadCreator: java.lang.String getThreadNamePrefix()> -> _SOURCES_
<org.springframework.scheduling.concurrent.ConcurrentTaskExecutor: void setConcurrentExecutor(java.util.concurrent.Executor)> -> _SINKS_
<org.springframework.core.annotation.AnnotatedElementUtils: java.util.Set getMetaAnnotationTypes(java.lang.reflect.AnnotatedElement,java.lang.'annotation'.Annotation)> -> _SOURCES_
<org.springframework.web.socket.sockjs.SockJsMessageDeliveryException: java.util.List getUndeliveredMessages()> -> _SOURCES_
<org.springframework.jdbc.core.simple.AbstractJdbcCall: java.lang.String getCallString()> -> _CWE089__SOURCES_
<org.springframework.jdbc.support.nativejdbc.CommonsDbcpNativeJdbcExtractor: java.lang.Object getInnermostDelegate(java.lang.Object)> -> _CWE089__SOURCES_
<org.springframework.web.socket.sockjs.transport.handler.XhrPollingTransportHandler: org.springframework.web.socket.sockjs.frame.SockJsFrameFormat getFrameFormat(org.springframework.http.server.ServerHttpRequest)> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.SseEmitter: void send(java.lang.Object,org.springframework.http.MediaType)> -> _SINKS_
<org.springframework.test.web.servlet.result.PrintingResultHandler: org.springframework.http.HttpHeaders getRequestHeaders(org.springframework.mock.web.MockHttpServletRequest)> -> _SOURCES_
<org.springframework.jms.listener.AbstractPollingMessageListenerContainer: void setTransactionTimeout(int)> -> _SINKS_
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource: java.lang.Object getCacheKey(java.lang.reflect.Method,java.lang.Class)> -> _SOURCES_
<org.springframework.http.client.Netty4ClientHttpRequest: int getPort(java.net.URI)> -> _SOURCES_
<org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter: com.fasterxml.jackson.databind.ObjectMapper getObjectMapper()> -> _SOURCES_
<org.springframework.core.annotation.AnnotationAttributes: java.lang.Object getRequiredAttribute(java.lang.String,java.lang.Class)> -> _SOURCES_
<org.springframework.aop.framework.adapter.ThrowsAdviceInterceptor: int getHandlerMethodCount()> -> _SOURCES_
<org.springframework.jms.support.converter.MarshallingMessageConverter: void setTargetType(org.springframework.jms.support.converter.MessageType)> -> _SINKS_
<org.springframework.beans.factory.parsing.ImportDefinition: java.lang.Object getSource()> -> _SOURCES_
<org.springframework.context.expression.MethodBasedEvaluationContext: void lazyLoadArguments()> -> _SOURCES_
<org.springframework.security.config.http.DefaultFilterChainValidator: void checkLoginPageIsntProtected(org.springframework.security.web.FilterChainProxy,java.util.List)> -> _AUTHENTICATIONS_TO_HIGH_
<org.springframework.mock.web.portlet.MockPortletSession: int getMaxInactiveInterval()> -> _SOURCES_
<org.springframework.jca.cci.connection.ConnectionSpecConnectionFactoryAdapter: javax.resource.cci.Connection getConnection()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: int getInt(java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.security.authentication.encoding.BaseDigestPasswordEncoder: void setEncodeHashAsBase64(boolean)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletRequest: java.util.Enumeration getResponseContentTypes()> -> _SOURCES_
<org.springframework.orm.jpa.JpaTemplate: void setExposeNativeEntityManager(boolean)> -> _SINKS_
<org.springframework.core.convert.support.StringToLocaleConverter: java.util.Locale convert(java.lang.String)> -> _SINKS_
<org.springframework.jmx.support.NotificationListenerHolder: javax.management.NotificationListener getNotificationListener()> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.handler.JsonpReceivingTransportHandler: org.springframework.web.socket.sockjs.transport.TransportType getTransportType()> -> _SOURCES_
<org.springframework.orm.jpa.EntityManagerFactoryAccessor: javax.persistence.EntityManager getTransactionalEntityManager()> -> _SOURCES_
<org.springframework.web.servlet.view.script.ScriptTemplateConfigurer: javax.script.ScriptEngine getEngine()> -> _SOURCES_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: java.lang.String getInsertString()> -> _CWE089__SOURCES_
<org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener: void executeSqlScripts(org.springframework.test.context.TestContext,org.springframework.test.context.jdbc.Sql$ExecutionPhase)> -> _CWE078__CWE089__SINKS_
<org.springframework.scheduling.backportconcurrent.ScheduledExecutorTask: long getPeriod()> -> _SOURCES_
<org.springframework.expression.common.LiteralExpression: void setValue(org.springframework.expression.EvaluationContext,java.lang.Object)> -> _SINKS_
<org.springframework.ejb.interceptor.SpringBeanAutowiringInterceptor: org.springframework.beans.factory.access.BeanFactoryReference getBeanFactoryReference(java.lang.Object)> -> _SOURCES_
<org.springframework.web.socket.messaging.StompSubProtocolHandler: java.lang.String getDisconnectReceipt(org.springframework.messaging.simp.SimpMessageHeaderAccessor)> -> _CWE306__SOURCES_
<org.springframework.test.context.jdbc.MergedSqlConfig: java.lang.String getString(org.springframework.core.'annotation'.AnnotationAttributes,java.lang.String,java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.context.annotation.CommonAnnotationBeanPostProcessor: void setFallbackToDefaultTypeMatch(boolean)> -> _SINKS_
<org.springframework.expression.spel.ast.QualifiedIdentifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.jmx.export.metadata.ManagedResource: void setObjectName(java.lang.String)> -> _SINKS_
<org.springframework.validation.AbstractBindingResult: java.util.Map getModel()> -> _SOURCES_
<org.springframework.scheduling.quartz.SchedulerFactoryBean: void setAutoStartup(boolean)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletRequest: void setServerName(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.http.HttpHeaders: void setLastModified(long)> -> _SINKS_
<org.springframework.jdbc.core.metadata.CallMetaDataContext: void setAccessCallParameterMetaData(boolean)> -> _CWE089__SINKS_
<org.springframework.beans.factory.support.AbstractBeanDefinition: org.springframework.beans.MutablePropertyValues getPropertyValues()> -> _SOURCES_
<org.springframework.beans.factory.parsing.AbstractComponentDefinition: java.lang.String getDescription()> -> _SOURCES_
<org.springframework.transaction.jta.JtaTransactionManager: void setCacheUserTransaction(boolean)> -> _SINKS_
<org.springframework.orm.jdo.TransactionAwarePersistenceManagerFactoryProxy: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.jdbc.support.xml.Jdbc4SqlXmlHandler: javax.xml.transform.Source getXmlAsSource(java.sql.ResultSet,int,java.lang.Class)> -> _CWE089__SOURCES_
<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: java.util.Set getAnnotationTypes()> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.handler.JsonpPollingTransportHandler: org.springframework.http.MediaType getContentType()> -> _SOURCES_
<org.springframework.validation.DataBinder: java.lang.String getObjectName()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: void setAsyncStarted(boolean)> -> _SINKS_
<org.springframework.jmx.support.NotificationListenerHolder: void setNotificationListener(javax.management.NotificationListener)> -> _SINKS_
<org.springframework.cache.support.SimpleCacheManager: java.util.Collection loadCaches()> -> _SOURCES_
<org.springframework.mail.javamail.JavaMailSenderImpl: void send(org.springframework.mail.javamail.MimeMessagePreparator[])> -> _SINKS_
<org.springframework.web.util.HtmlUtils: java.lang.String htmlEscapeDecimal(java.lang.String)> -> _SANITIZERS__CWE079_
<org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractorAdapter: java.sql.Connection getNativeConnectionFromStatement(java.sql.Statement)> -> _CWE306__CWE089__SOURCES__CWE862_
<org.springframework.jms.connection.DelegatingConnectionFactory: javax.jms.TopicConnection createTopicConnection()> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.mock.web.MockHttpServletResponse: void setForwardedUrl(java.lang.String)> -> _SINKS__CWE601_
<org.springframework.web.socket.sockjs.frame.AbstractSockJsMessageCodec: java.lang.String encode(java.lang.String[])> -> _SANITIZERS__CWE079_
<org.springframework.beans.propertyeditors.PatternEditor: java.lang.String getAsText()> -> _SOURCES_
<org.springframework.web.servlet.handler.AbstractUrlHandlerMapping: void registerHandler(java.lang.String[],java.lang.String)> -> _SINKS_
<org.springframework.web.portlet.context.PortletWebRequest: java.lang.String getParameter(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.mock.web.portlet.MockMimeResponse: void setContentType(java.lang.String)> -> _SINKS__CWE601_
<org.springframework.test.web.client.match.ContentRequestMatchers: org.springframework.test.web.client.RequestMatcher contentTypeCompatibleWith(java.lang.String)> -> _SOURCES__SINKS_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: java.util.List getReturnValueHandlers()> -> _SOURCES_
<org.springframework.jms.listener.adapter.AbstractAdaptableMessageListener: void setDefaultResponseDestination(javax.jms.Destination)> -> _SINKS_
<org.springframework.web.servlet.config.DefaultServletHandlerBeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.jdbc.support.lob.OracleLobHandler: java.io.InputStream getBlobAsBinaryStream(java.sql.ResultSet,int)> -> _CWE089__SOURCES_
<org.springframework.remoting.httpinvoker.AbstractHttpInvokerRequestExecutor: void setAcceptGzipEncoding(boolean)> -> _SINKS_
<org.springframework.scheduling.annotation.AsyncAnnotationAdvisor: org.aopalliance.aop.Advice getAdvice()> -> _SOURCES_
<org.springframework.security.config.http.HttpConfigurationBuilder: org.springframework.beans.BeanMetadataElement getCsrfLogoutHandler()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.scheduling.backportconcurrent.ThreadPoolTaskExecutor: void setMaxPoolSize(int)> -> _SINKS_
<org.springframework.jca.work.WorkManagerTaskExecutor: void setWorkListener(javax.resource.spi.work.WorkListener)> -> _SINKS_
<org.springframework.web.servlet.tags.form.AbstractHtmlInputElementTag: java.lang.String getAccesskey()> -> _CWE079__SOURCES_
<org.springframework.oxm.jaxb.Jaxb2Marshaller: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.web.filter.ForwardedHeaderFilter: void setRemoveOnly(boolean)> -> _SINKS_
<org.springframework.transaction.jta.UserTransactionAdapter: void setTransactionTimeout(int)> -> _SINKS__CWE862_
<org.springframework.http.client.Netty4ClientHttpRequestFactory: org.springframework.http.client.Netty4ClientHttpRequest createRequestInternal(java.net.URI,org.springframework.http.HttpMethod)> -> _SOURCES_
<org.springframework.web.servlet.mvc.condition.ProducesRequestCondition: java.util.Set getExpressions()> -> _SOURCES_
<org.springframework.messaging.converter.AbstractMessageConverter: void setStrictContentTypeMatch(boolean)> -> _SINKS_
<org.springframework.web.servlet.tags.EvalTag: void setExpression(java.lang.String)> -> _SINKS_
<org.springframework.core.annotation.OrderUtils: java.lang.Integer getOrder(java.lang.Class,java.lang.Integer)> -> _SOURCES_
<org.springframework.asm.Type: int getSort()> -> _SOURCES_
<org.springframework.remoting.caucho.HessianClientInterceptor: void setProxyFactory(com.caucho.hessian.client.HessianProxyFactory)> -> _SINKS_
<org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy: java.sql.Connection getConnection()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__SOURCES__CWE862_
<org.springframework.scheduling.quartz.JobDetailFactoryBean: void setBeanName(java.lang.String)> -> _SINKS_
<org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean: void setCreateXmlMapper(boolean)> -> _SINKS_
<org.springframework.mock.web.MockBodyContent: void print(char)> -> _SINKS_
<org.springframework.jms.core.JmsTemplate: void setDefaultDestination(javax.jms.Destination)> -> _SINKS_
<org.springframework.web.portlet.handler.AbstractHandlerExceptionResolver: void setRenderWhenMinimized(boolean)> -> _SINKS_
<org.springframework.web.cors.CorsConfiguration: java.util.List getAllowedHeaders()> -> _SOURCES_
<org.springframework.test.context.support.AbstractTestContextBootstrapper: java.util.List getContextCustomizerFactories()> -> _SOURCES_
<org.springframework.web.context.support.ServletContextPropertyPlaceholderConfigurer: void setSearchContextAttributes(boolean)> -> _SINKS_
<org.springframework.aop.target.CommonsPoolTargetSource: long getMinEvictableIdleTimeMillis()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: void setProtocol(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.cglib.core.Block: org.springframework.asm.Label getStart()> -> _SOURCES_
<org.springframework.test.web.servlet.htmlunit.MockMvcWebConnection: void close()> -> _AUTHENTICATIONS_TO_LOW_
<org.springframework.web.servlet.tags.form.InputTag: java.lang.String getOnselect()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractHtmlInputElementTag: void setDisabled(boolean)> -> _CWE079__SINKS_
<org.springframework.test.web.servlet.result.PrintingResultHandler: void printAsyncResult(org.springframework.test.web.servlet.MvcResult)> -> _SINKS_
<org.springframework.jms.listener.serversession.CommonsPoolServerSessionFactory: javax.jms.ServerSession getServerSession(org.springframework.jms.listener.serversession.ListenerSessionManager)> -> _SOURCES_
<org.springframework.web.util.DefaultUriTemplateHandler: void setStrictEncoding(boolean)> -> _SINKS_
<org.springframework.web.servlet.support.RequestContext: org.springframework.ui.context.Theme getTheme()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: java.lang.String[] getParameterValues(java.lang.String)> -> _SOURCES__CWE601_
<org.springframework.security.authentication.jaas.JaasAuthenticationProvider: org.springframework.security.authentication.jaas.AuthorityGranter[] getAuthorityGranters()> -> _SOURCES_
<org.springframework.web.client.MessageBodyClientHttpResponseWrapper: org.springframework.http.HttpHeaders getHeaders()> -> _SOURCES__CWE601_
<org.springframework.mock.web.portlet.MockMimeResponse: javax.portlet.CacheControl getCacheControl()> -> _SOURCES__CWE601_
<org.springframework.scheduling.commonj.DelegatingWork: java.lang.Runnable getDelegate()> -> _SOURCES_
<org.springframework.web.servlet.ModelAndView: org.springframework.web.servlet.View getView()> -> _SOURCES_
<org.springframework.beans.factory.parsing.Problem: java.lang.String getResourceDescription()> -> _SOURCES_
<org.springframework.beans.support.MutableSortDefinition: void setAscending(boolean)> -> _SINKS_
<org.springframework.jdbc.core.metadata.GenericCallMetaDataProvider: void setStoresLowerCaseIdentifiers(boolean)> -> _CWE089__SINKS_
<org.springframework.mock.web.portlet.MockClientDataRequest: int getContentLength()> -> _SOURCES_
<org.springframework.util.xml.AbstractXMLReader: org.xml.sax.DTDHandler getDTDHandler()> -> _SOURCES_
<org.springframework.aop.aspectj.AspectJAopUtils: org.springframework.aop.aspectj.AspectJPrecedenceInformation getAspectJPrecedenceInformationFor(org.springframework.aop.Advisor)> -> _SOURCES_
<org.springframework.beans.factory.support.ChildBeanDefinition: void setParentName(java.lang.String)> -> _SINKS_
<org.springframework.web.socket.sockjs.frame.SockJsFrame: org.springframework.web.socket.sockjs.frame.SockJsFrameType getType()> -> _SOURCES_
<org.springframework.web.servlet.handler.HandlerMappingIntrospector: java.util.List getHandlerMappings()> -> _SOURCES_
<org.springframework.scheduling.concurrent.ReschedulingRunnable: java.lang.Object get(long,java.util.concurrent.TimeUnit)> -> _SOURCES_
<org.springframework.context.support.ReloadableResourceBundleMessageSource: void setCacheSeconds(int)> -> _SINKS_
<org.springframework.messaging.simp.config.AbstractBrokerRegistration: org.springframework.messaging.SubscribableChannel getClientInboundChannel()> -> _SOURCES_
<org.springframework.scheduling.support.CronSequenceGenerator: void setDaysOfMonth(java.util.BitSet,java.lang.String)> -> _SINKS_
<org.springframework.scripting.support.ScriptFactoryPostProcessor: java.lang.Class createConfigInterface(org.springframework.beans.factory.config.BeanDefinition,java.lang.Class[])> -> _SOURCES_
<org.springframework.web.servlet.resource.AbstractResourceResolver: org.springframework.core.io.Resource resolveResource(javax.servlet.http.HttpServletRequest,java.lang.String,java.util.List,org.springframework.web.servlet.resource.ResourceResolverChain)> -> _SINKS_
<org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder: org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder setUseSuffixPatternMatch(boolean)> -> _SINKS_
<org.springframework.web.servlet.i18n.CookieLocaleResolver: void setDefaultLocale(java.util.Locale)> -> _SINKS_
<org.springframework.web.portlet.context.PortletRequestAttributes: java.lang.String[] getAttributeNames(int)> -> _SOURCES_
<org.springframework.web.portlet.DispatcherPortlet: java.lang.Object createDefaultStrategy(org.springframework.context.ApplicationContext,java.lang.Class)> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompDecoder: byte[] readPayload(java.nio.ByteBuffer,org.springframework.messaging.simp.stomp.StompHeaderAccessor)> -> _SOURCES_
<org.springframework.jca.support.LocalConnectionFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter: void initialize(org.springframework.web.servlet.mvc.method.'annotation'.ResponseBodyEmitter$Handler)> -> _SINKS__CWE601_
<org.springframework.jms.remoting.JmsInvokerClientInterceptor: void setDestinationResolver(org.springframework.jms.support.destination.DestinationResolver)> -> _SINKS_
<org.springframework.oxm.castor.CastorMarshaller: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.cache.jcache.interceptor.DefaultCacheMethodDetails: java.lang.String getCacheName()> -> _SOURCES_
<org.springframework.orm.ibatis.support.SqlMapClientDaoSupport: org.springframework.orm.ibatis.SqlMapClientTemplate getSqlMapClientTemplate()> -> _SOURCES_
<org.springframework.orm.jpa.vendor.EclipseLinkJpaDialect: void setLazyDatabaseTransaction(boolean)> -> _SINKS_
<org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter: java.lang.String getPersistenceProviderRootPackage()> -> _SOURCES_
<org.springframework.jms.support.JmsMessageHeaderAccessor: java.lang.String getCorrelationId()> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.RestTemplateXhrTransport: void setTaskExecutor(org.springframework.core.task.TaskExecutor)> -> _SINKS_
<org.springframework.oxm.xstream.XStreamMarshaller: void setMode(int)> -> _SINKS_
<org.springframework.orm.hibernate3.HibernateTemplate: int getMaxResults()> -> _SOURCES_
<org.springframework.util.xml.XMLEventStreamWriter: void setDefaultNamespace(java.lang.String)> -> _SINKS_
<org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurationSupport: org.springframework.messaging.simp.'annotation'.support.SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler()> -> _SOURCES_
<org.springframework.web.socket.messaging.StompSubProtocolHandler: java.util.List getSupportedProtocols()> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.DefaultTransportRequest: void scheduleConnectTimeoutTask(org.springframework.web.socket.sockjs.client.DefaultTransportRequest$ConnectCallback)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.jca.support.ResourceAdapterFactoryBean: void setWorkManager(javax.resource.spi.work.WorkManager)> -> _SINKS_
<org.springframework.web.servlet.view.document.AbstractExcelView: void setText(org.apache.poi.hssf.usermodel.HSSFCell,java.lang.String)> -> _SINKS_
<org.springframework.orm.ibatis.SqlMapClientTemplate: java.lang.Object queryForObject(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.security.core.token.DefaultToken: java.lang.String getExtendedInformation()> -> _SOURCES_
<org.springframework.beans.BeanMetadataAttributeAccessor: void setAttribute(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.security.config.authentication.PasswordEncoderParser: org.springframework.beans.BeanMetadataElement getPasswordEncoder()> -> _SOURCES_
<org.springframework.beans.factory.support.GenericTypeAwareAutowireCandidateResolver: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.messaging.simp.stomp.BufferingStompDecoder: org.springframework.messaging.simp.stomp.StompDecoder getStompDecoder()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockStateAwareResponse: java.util.Map getRenderParameterMap()> -> _SOURCES__CWE601_
<org.springframework.jdbc.object.SqlQuery: java.util.List executeByNamedParam(java.util.Map)> -> _CWE078__CWE089__SINKS_
<org.springframework.expression.spel.standard.TokenKind: int getLength()> -> _SOURCES_
<org.springframework.beans.PropertyValue: java.lang.String getName()> -> _SOURCES_
<org.springframework.orm.hibernate5.HibernateTemplate: void update(java.lang.Object,org.hibernate.LockMode)> -> _SINKS_
<org.springframework.web.multipart.support.DefaultMultipartHttpServletRequest: void setMultipartParameterContentTypes(java.util.Map)> -> _SINKS_
<org.springframework.web.servlet.view.InternalResourceViewResolver: void setAlwaysInclude(boolean)> -> _SINKS_
<org.springframework.orm.hibernate3.SessionHolder: org.hibernate.Session getAnySession()> -> _SOURCES_
<org.springframework.beans.factory.xml.NamespaceHandlerSupport: org.springframework.beans.factory.xml.BeanDefinitionParser findParserForElement(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.aop.target.PrototypeTargetSource: java.lang.Object getTarget()> -> _SOURCES_
<org.springframework.mail.SimpleMailMessage: java.lang.String[] getTo()> -> _SOURCES_
<org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean: void setAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector)> -> _SINKS_
<org.springframework.core.env.MissingRequiredPropertiesException: java.util.Set getMissingRequiredProperties()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: java.lang.String getServerName()> -> _CWE079__SOURCES_
<org.springframework.security.config.annotation.web.builders.HttpSecurity: org.springframework.security.config.'annotation'.web.configurers.RequestCacheConfigurer requestCache()> -> _SOURCES_
<org.springframework.jmx.access.NotificationListenerRegistrar: java.util.Map getEnvironment()> -> _SOURCES_
<org.springframework.transaction.support.DefaultTransactionDefinition: int getTimeout()> -> _SOURCES_
<org.springframework.expression.common.CompositeStringExpression: java.lang.String getValue()> -> _SOURCES_
<org.springframework.validation.BindException: org.springframework.validation.BindingResult getBindingResult()> -> _SOURCES_
<org.springframework.orm.hibernate4.HibernateTransactionManager: void setAutodetectDataSource(boolean)> -> _SINKS_
<org.springframework.http.client.SimpleClientHttpResponse: org.springframework.http.HttpHeaders getHeaders()> -> _SOURCES__CWE601_
<org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor: void setThreadFactory(java.util.concurrent.ThreadFactory)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter: void send(java.lang.Object)> -> _SINKS__CWE601_
<org.springframework.cache.jcache.interceptor.AnnotationJCacheOperationSource: org.springframework.cache.interceptor.CacheResolver getExceptionCacheResolver(javax.cache.'annotation'.CacheResolverFactory,javax.cache.'annotation'.CacheMethodDetails)> -> _SOURCES_
<org.springframework.format.datetime.standard.DurationFormatter: java.time.Duration parse(java.lang.String,java.util.Locale)> -> _SINKS_
<org.springframework.cglib.reflect.FastMethod: java.lang.Class[] getParameterTypes()> -> _SOURCES_
<org.springframework.jms.listener.AbstractMessageListenerContainer: void doExecuteListener(javax.jms.Session,javax.jms.Message)> -> _SINKS_
<org.springframework.web.portlet.GenericPortletBean: org.springframework.core.env.ConfigurableEnvironment createEnvironment()> -> _SOURCES_
<org.springframework.aop.framework.ProxyProcessorSupport: void setProxyClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator: void setStripLeadingSlash(boolean)> -> _SINKS_
<org.springframework.beans.factory.support.BeanDefinitionDefaults: int getAutowireMode()> -> _SOURCES_
<org.springframework.context.event.EventExpressionEvaluator: java.lang.reflect.Method getTargetMethod(java.lang.Class,java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.http.HttpHeaders: java.net.URI getLocation()> -> _SOURCES_
<org.springframework.cache.jcache.interceptor.DefaultJCacheOperationSource: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.scheduling.quartz.SchedulerFactoryBean: org.springframework.core.io.ResourceLoader getConfigTimeResourceLoader()> -> _SOURCES_
<org.springframework.web.socket.server.standard.ServerEndpointRegistration: java.lang.Class getEndpointClass()> -> _SOURCES_
<org.springframework.remoting.jaxws.JaxWsPortProxyFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.jdbc.object.RdbmsOperation: void setParameters(org.springframework.jdbc.core.SqlParameter[])> -> _CWE089__SINKS_
<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getResourceTransformers()> -> _SOURCES_
<org.springframework.web.method.annotation.AbstractWebArgumentResolverAdapter: java.lang.Object resolveArgument(org.springframework.core.MethodParameter,org.springframework.web.method.support.ModelAndViewContainer,org.springframework.web.context.request.NativeWebRequest,org.springframework.web.bind.support.WebDataBinderFactory)> -> _SINKS_
<org.springframework.orm.ibatis.SqlMapClientFactoryBean: void setConfigLocation(org.springframework.core.io.Resource)> -> _SINKS_
<org.springframework.beans.AbstractNestablePropertyAccessor: org.springframework.core.convert.TypeDescriptor getPropertyTypeDescriptor(java.lang.String)> -> _SOURCES_
<org.springframework.jms.core.JmsTemplate: int getDeliveryMode()> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompEncoder: byte[] encodeHeaderValue(java.lang.String,boolean)> -> _SANITIZERS_
<org.springframework.orm.hibernate3.LocalSessionFactoryBean: void setSchemaUpdate(boolean)> -> _SINKS_
<org.springframework.beans.factory.InjectionPoint: java.lang.Class getDeclaredType()> -> _SOURCES_
<org.springframework.aop.aspectj.AspectJExpressionPointcutAdvisor: java.lang.String getExpression()> -> _SOURCES_
<org.springframework.security.access.intercept.RunAsImplAuthenticationProvider: void setKey(java.lang.String)> -> _SINKS_
<org.springframework.jms.listener.serversession.ServerSessionMessageListenerContainer: boolean sharedConnectionEnabled()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE862_
<org.springframework.jms.config.AbstractJmsListenerContainerFactory: void setSessionTransacted(java.lang.Boolean)> -> _SINKS_
<org.springframework.mail.javamail.MimeMessageHelper: void setText(java.lang.String,java.lang.String)> -> _SINKS_
<org.springframework.web.socket.client.standard.StandardWebSocketClient: void setTaskExecutor(org.springframework.core.task.AsyncListenableTaskExecutor)> -> _SINKS_
<org.springframework.test.context.TestContextManager: void registerTestExecutionListeners(org.springframework.test.context.TestExecutionListener[])> -> _SINKS_
<org.springframework.beans.factory.config.SetFactoryBean: void setTargetSetClass(java.lang.Class)> -> _SINKS_
<org.springframework.web.socket.sockjs.transport.session.WebSocketServerSockJsSession: java.lang.String getAcceptedProtocol()> -> _SOURCES_
<org.springframework.jdbc.support.nativejdbc.C3P0NativeJdbcExtractor: boolean isNativeConnectionNecessaryForNativePreparedStatements()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__CWE862_
<org.springframework.jdbc.datasource.DataSourceTransactionManager: java.lang.Object getResourceFactory()> -> _CWE089__SOURCES_
<org.springframework.http.client.OkHttpClientHttpRequestFactory: com.squareup.okhttp.MediaType getContentType(org.springframework.http.HttpHeaders)> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver: void setMessageConverters(java.util.List)> -> _SINKS_
<org.springframework.beans.factory.config.MethodInvokingFactoryBean: void setSingleton(boolean)> -> _SINKS_
<org.springframework.jms.config.MethodJmsListenerEndpoint: java.lang.reflect.Method getMostSpecificMethod()> -> _SOURCES_
<org.springframework.http.client.OkHttp3ClientHttpRequestFactory: void setConnectTimeout(int)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.http.HttpHeaders: void setAccessControlAllowOrigin(java.lang.String)> -> _SINKS_
<org.springframework.orm.jpa.JpaTemplate: java.lang.Object execute(org.springframework.orm.jpa.JpaCallback)> -> _CWE078__SINKS_
<org.springframework.web.servlet.support.RequestContext: java.lang.Object getModelObject(java.lang.String)> -> _SOURCES_
<org.springframework.aop.config.AbstractInterceptorDrivenBeanDefinitionDecorator: java.lang.String getInterceptorNameSuffix(org.springframework.beans.factory.config.BeanDefinition)> -> _SOURCES_
<org.springframework.web.context.support.StaticWebApplicationContext: javax.servlet.ServletConfig getServletConfig()> -> _SOURCES_
<org.springframework.aop.target.CommonsPool2TargetSource: int getIdleCount()> -> _SOURCES_
<org.springframework.test.web.servlet.result.PrintingResultHandler: void printFlashMap(org.springframework.web.servlet.FlashMap)> -> _SINKS_
<org.springframework.web.servlet.view.json.AbstractJackson2View: com.fasterxml.jackson.core.JsonEncoding getEncoding()> -> _SOURCES_
<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.mock.web.MockHttpServletRequest postProcessRequest(org.springframework.mock.web.MockHttpServletRequest)> -> _SINKS_
<org.springframework.orm.hibernate5.LocalSessionFactoryBean: void setBootstrapExecutor(org.springframework.core.task.AsyncTaskExecutor)> -> _SINKS_
<org.springframework.web.servlet.tags.form.OptionsTag: java.lang.String getItemValue()> -> _SOURCES_
<org.springframework.beans.factory.config.PropertyResourceConfigurer: int getOrder()> -> _SOURCES_
<org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator: void setBeanName(java.lang.String)> -> _SINKS_
<org.springframework.orm.hibernate5.HibernateTemplate: int bulkUpdate(java.lang.String,java.lang.Object[])> -> _SINKS_
<org.springframework.messaging.support.GenericMessage: java.lang.Object getPayload()> -> _SOURCES_
<org.springframework.jmx.export.NotificationListenerBean: void replaceObjectName(java.lang.Object,java.lang.Object)> -> _SINKS_
<org.springframework.util.ClassLoaderUtils: java.lang.String showClassLoaderHierarchy(java.lang.ClassLoader,java.lang.String,java.lang.String)> -> _SOURCES_
<org.springframework.http.client.BufferingClientHttpResponseWrapper: int getRawStatusCode()> -> _SOURCES__CWE601_
<org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser: org.springframework.beans.factory.config.RuntimeBeanReference getMessageCodesResolver(org.w3c.dom.Element)> -> _SOURCES_
<org.springframework.http.converter.json.MappingJacksonInputMessage: java.lang.Class getDeserializationView()> -> _SOURCES_
<org.springframework.web.socket.client.ConnectionManagerSupport: void setAutoStartup(boolean)> -> _SINKS_
<org.springframework.transaction.interceptor.TransactionAspectSupport: org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo createTransactionIfNecessary(java.lang.reflect.Method,java.lang.Class)> -> _SOURCES_
<org.springframework.aop.aspectj.AspectJExpressionPointcut: void setParameterTypes(java.lang.Class[])> -> _SINKS_
<org.springframework.web.servlet.view.AbstractCachingViewResolver: org.springframework.web.servlet.View createView(java.lang.String,java.util.Locale)> -> _SOURCES_
<org.springframework.web.servlet.tags.BindTag: void setIgnoreNestedPath(boolean)> -> _SINKS_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: void setOnmousedown(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer: groovy.text.markup.MarkupTemplateEngine getTemplateEngine()> -> _SOURCES_
<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getActiveContextObject()> -> _SOURCES_
<org.springframework.core.type.StandardMethodMetadata: java.lang.String getReturnTypeName()> -> _SOURCES_
<org.springframework.beans.factory.xml.PluggableSchemaResolver: java.lang.String getSchemaMapping(java.lang.String)> -> _SOURCES_
<org.springframework.jdbc.core.BatchUpdateUtils: void setStatementParameters(java.lang.Object[],java.sql.PreparedStatement,int[])> -> _CWE089__SINKS_
<org.springframework.mock.web.MockHttpServletRequest: java.lang.String getRequestedSessionId()> -> _SOURCES_
<org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration: void setObjectPostProcessor(org.springframework.security.config.'annotation'.ObjectPostProcessor)> -> _SINKS_
<org.springframework.remoting.jaxrpc.support.AxisBeanMappingServicePostProcessor: void setBeanMappings(java.util.Properties)> -> _SINKS_
<org.springframework.http.converter.xml.Jaxb2CollectionHttpMessageConverter: java.util.Collection readFromSource(java.lang.Class,org.springframework.http.HttpHeaders,javax.xml.transform.Source)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletSession: java.util.Map getAttributeMap(int)> -> _SOURCES_
<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: java.lang.String getLazyInit()> -> _SOURCES_
<org.springframework.jmx.export.assembler.AbstractMBeanInfoAssembler: java.lang.Class getClassToExpose(java.lang.Object)> -> _SOURCES_
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.ResolvableType[] getRequiredTypeInfo(java.lang.Class,java.lang.Class)> -> _SOURCES_
<org.springframework.web.context.AbstractContextLoaderInitializer: void registerContextLoaderListener(javax.servlet.ServletContext)> -> _SOURCES_
<org.springframework.asm.Frame: void set(int,int)> -> _SINKS_
<org.springframework.core.style.DefaultValueStyler: java.lang.String getCollectionTypeString(java.util.Collection)> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.SockJsClient: org.springframework.web.socket.sockjs.client.DefaultTransportRequest createRequest(org.springframework.web.socket.sockjs.client.SockJsUrlInfo,org.springframework.http.HttpHeaders,org.springframework.web.socket.sockjs.client.SockJsClient$ServerInfo)> -> _SOURCES_
<org.springframework.web.jsf.DelegatingNavigationHandlerProxy: javax.faces.application.NavigationHandler getDelegate(javax.faces.context.FacesContext)> -> _SOURCES_
<org.springframework.oxm.jaxb.Jaxb2Marshaller: void setSchemas(org.springframework.core.io.Resource[])> -> _SINKS_
<org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor: void setRequiredAnnotationType(java.lang.Class)> -> _SINKS_
<org.springframework.web.context.support.AbstractRefreshableWebApplicationContext: javax.servlet.ServletContext getServletContext()> -> _SOURCES_
<org.springframework.aop.target.CommonsPool2TargetSource: long getTimeBetweenEvictionRunsMillis()> -> _SOURCES_
<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.config.BeanDefinition getContainingBeanDefinition()> -> _SOURCES_
<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor: java.lang.Class getAutowiredAnnotationType()> -> _SOURCES_
<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.Object getTargetObject()> -> _SOURCES_
<org.springframework.messaging.core.AbstractMessageSendingTemplate: void convertAndSend(java.lang.Object,java.lang.Object,org.springframework.messaging.core.MessagePostProcessor)> -> _SINKS_
<org.springframework.jms.listener.AbstractMessageListenerContainer: java.lang.Object getMessageListener()> -> _SOURCES_
<org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver: java.util.Locale getDefaultLocale()> -> _SOURCES_
<org.springframework.jmx.export.metadata.ManagedMetric: java.lang.String getUnit()> -> _SOURCES_
<org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager: void setPersistenceUnitPostProcessors(org.springframework.orm.jpa.persistenceunit.PersistenceUnitPostProcessor[])> -> _SINKS_
<org.springframework.web.servlet.support.WebContentGenerator: java.lang.String[] getSupportedMethods()> -> _SOURCES_
<org.springframework.orm.hibernate5.HibernateTemplate: void saveOrUpdate(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.jmx.export.assembler.AbstractReflectiveMBeanInfoAssembler: void setUseStrictCasing(boolean)> -> _SINKS_
<org.springframework.messaging.simp.config.MessageBrokerRegistry: org.springframework.messaging.simp.config.MessageBrokerRegistry setUserDestinationPrefix(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.core.simple.SimpleJdbcInsert: int[] executeBatch(java.util.Map[])> -> _CWE089__SINKS_
<org.springframework.cglib.core.ClassEmitter: org.springframework.cglib.core.CodeEmitter getStaticHook()> -> _SOURCES_
<org.springframework.util.ConcurrentReferenceHashMap: java.lang.Object replace(java.lang.Object,java.lang.Object)> -> _SINKS_
<org.springframework.cglib.reflect.FastMethod: java.lang.reflect.Method getJavaMethod()> -> _SOURCES_
<org.springframework.http.converter.StringHttpMessageConverter: java.lang.Long getContentLength(java.lang.String,org.springframework.http.MediaType)> -> _SOURCES_
<org.springframework.http.converter.FormHttpMessageConverter: java.lang.String getFilename(java.lang.Object)> -> _SOURCES_
<org.springframework.cache.jcache.interceptor.DefaultCacheInvocationContext: java.lang.reflect.Method getMethod()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletConfig: java.util.Enumeration getPublicRenderParameterNames()> -> _SOURCES_
<org.springframework.jdbc.support.lob.AbstractLobHandler: java.io.Reader getClobAsCharacterStream(java.sql.ResultSet,java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.web.servlet.view.InternalResourceView: void setPreventDispatchLoop(boolean)> -> _SINKS_
<org.springframework.jms.listener.adapter.MessageListenerAdapter: void setDefaultResponseQueueName(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.tags.form.RadioButtonsTag: java.lang.String getInputType()> -> _SOURCES_
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Object[])> -> _SOURCES_
<org.springframework.http.client.OkHttp3ClientHttpRequestFactory: void setReadTimeout(int)> -> _SINKS__CWE601_
<org.springframework.web.servlet.mvc.condition.ConsumesRequestCondition: java.util.Set parseExpressions(java.lang.String[],java.lang.String[])> -> _SOURCES_
<org.springframework.expression.spel.SpelEvaluationException: void setPosition(int)> -> _SINKS_
<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setResourceTransformers(java.util.List)> -> _SINKS_
<org.springframework.messaging.support.MessageHeaderAccessor: void setHeader(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.ui.freemarker.FreeMarkerConfigurationFactory: void setTemplateLoaderPath(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.support.incrementer.HsqlSequenceMaxValueIncrementer: java.lang.String getSequenceQuery()> -> _CWE089__SOURCES_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: int doExecute(java.util.Map)> -> _CWE078__CWE089__SINKS_
<org.springframework.web.portlet.context.StaticPortletApplicationContext: void setParent(org.springframework.context.ApplicationContext)> -> _SINKS_
<org.springframework.beans.support.PropertyComparator: org.springframework.beans.support.SortDefinition getSortDefinition()> -> _SOURCES_
<org.springframework.security.config.http.HttpConfigurationBuilder: org.springframework.security.config.http.SessionCreationPolicy getSessionCreationPolicy()> -> _SOURCES_
<org.springframework.web.portlet.GenericPortletBean: javax.portlet.PortletContext getPortletContext()> -> _SOURCES_
<org.springframework.jdbc.datasource.DelegatingDataSource: void setLoginTimeout(int)> -> _CWE306__CWE089__SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.socket.adapter.standard.StandardWebSocketSession: java.net.InetSocketAddress getRemoteAddress()> -> _SOURCES_
<org.springframework.orm.hibernate5.HibernateQueryException: java.lang.String getQueryString()> -> _SOURCES_
<org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean: void setModules(java.util.List)> -> _SINKS_
<org.springframework.oxm.xstream.XStreamMarshaller: void setUseAttributeFor(java.util.Map)> -> _SINKS_
<org.springframework.instrument.classloading.SimpleLoadTimeWeaver: java.lang.ClassLoader getThrowawayClassLoader()> -> _SOURCES_
<org.springframework.beans.InvalidPropertyException: java.lang.Class getBeanClass()> -> _SOURCES_
<org.springframework.jca.work.WorkManagerTaskExecutor: void setWorkManagerName(java.lang.String)> -> _SINKS_
<org.springframework.mail.SimpleMailMessage: java.lang.String[] getCc()> -> _SOURCES_
<org.springframework.web.servlet.view.RedirectView: java.lang.StringBuilder replaceUriTemplateVariables(java.lang.String,java.util.Map,java.util.Map,java.lang.String)> -> _SINKS_
<org.springframework.http.client.support.InterceptingAsyncHttpAccessor: org.springframework.http.client.AsyncClientHttpRequestFactory getAsyncRequestFactory()> -> _SOURCES_
<org.springframework.web.context.support.ServletRequestHandledEvent: java.lang.String getShortDescription()> -> _SOURCES_
<org.springframework.jdbc.core.namedparam.MapSqlParameterSource: java.util.Map getValues()> -> _CWE089__SOURCES_
<org.springframework.http.client.OkHttpClientHttpRequestFactory: org.springframework.http.client.AsyncClientHttpRequest createAsyncRequest(java.net.URI,org.springframework.http.HttpMethod)> -> _SOURCES_
<org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler: java.lang.String getLookupDestination(java.lang.String)> -> _SOURCES_
<org.springframework.security.config.annotation.authentication.configurers.provisioning.JdbcUserDetailsManagerConfigurer: org.springframework.security.provisioning.JdbcUserDetailsManager getUserDetailsService()> -> _CWE089__SOURCES__CWE862_
<org.springframework.web.servlet.config.annotation.ResourceChainRegistration: java.util.List getResourceResolvers()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyAdviceChain: org.springframework.http.HttpInputMessage beforeBodyRead(org.springframework.http.HttpInputMessage,org.springframework.core.MethodParameter,java.lang.reflect.Type,java.lang.Class)> -> _SOURCES__CWE601_
<org.springframework.beans.factory.config.ListFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.web.servlet.support.WebContentGenerator: void setAlwaysMustRevalidate(boolean)> -> _SINKS_
<org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver: org.springframework.web.servlet.ModelAndView handleTypeMismatch(org.springframework.beans.TypeMismatchException,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)> -> _SINKS_
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: int getSingletonCount()> -> _SOURCES_
<org.springframework.mock.web.MockMultipartFile: byte[] getBytes()> -> _SOURCES_
<org.springframework.test.web.servlet.request.MockMvcRequestBuilders: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder head(java.net.URI)> -> _SOURCES_
<org.springframework.jms.connection.SingleConnectionFactory: void closeConnection(javax.jms.Connection)> -> _CWE306__AUTHENTICATIONS_TO_LOW__CWE862_
<org.springframework.orm.hibernate5.support.OpenSessionInViewInterceptor: boolean applySessionBindingInterceptor(org.springframework.web.context.request.async.WebAsyncManager,java.lang.String)> -> _SINKS_
<org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession: void handleSuccessiveRequest(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,org.springframework.web.socket.sockjs.frame.SockJsFrameFormat)> -> _SINKS_
<org.springframework.test.web.servlet.result.ContentResultMatchers: org.springframework.test.web.servlet.ResultMatcher contentTypeCompatibleWith(java.lang.String)> -> _SINKS_
<org.springframework.web.util.TagUtils: int getScope(java.lang.String)> -> _SOURCES_
<org.springframework.security.authentication.AuthenticationTrustResolverImpl: java.lang.Class getRememberMeClass()> -> _SOURCES_
<org.springframework.web.servlet.view.tiles3.TilesConfigurer: void setDefinitions(java.lang.String[])> -> _SINKS_
<org.springframework.aop.aspectj.SimpleAspectInstanceFactory: java.lang.ClassLoader getAspectClassLoader()> -> _SOURCES_
<org.springframework.oxm.xstream.XStreamMarshaller: java.lang.String getDefaultEncoding()> -> _SOURCES_
<org.springframework.scheduling.quartz.CronTriggerFactoryBean: void setName(java.lang.String)> -> _SINKS_
<org.springframework.web.bind.ServletRequestUtils: java.lang.String[] getRequiredStringParameters(javax.servlet.ServletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter: java.lang.Long getContentLength(java.lang.Object,org.springframework.http.MediaType)> -> _SOURCES_
<org.springframework.jca.cci.connection.DelegatingConnectionFactory: javax.resource.cci.Connection getConnection()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.messaging.converter.CompositeMessageConverter: java.util.List getConverters()> -> _SOURCES_
<org.springframework.messaging.support.MessageHeaderAccessor: void setReplyChannel(org.springframework.messaging.MessageChannel)> -> _SINKS_
<org.springframework.util.MethodInvoker: int getTypeDifferenceWeight(java.lang.Class[],java.lang.Object[])> -> _SOURCES_
<org.springframework.context.annotation.ConfigurationMethod: org.springframework.beans.factory.parsing.Location getResourceLocation()> -> _SOURCES_
<org.springframework.test.context.jdbc.MergedSqlConfig: java.lang.String getEncoding()> -> _CWE089__SOURCES_
<org.springframework.web.servlet.view.tiles2.SpringWildcardServletTilesApplicationContext: java.util.Set getResources(java.lang.String)> -> _SOURCES_
<org.springframework.aop.aspectj.annotation.AspectMetadata: java.lang.String getAspectName()> -> _SOURCES_
<org.springframework.jms.support.JmsAccessor: int getSessionAcknowledgeMode()> -> _SOURCES_
<org.springframework.jca.context.SpringContextResourceAdapter: org.springframework.context.ConfigurableApplicationContext createApplicationContext(javax.resource.spi.BootstrapContext)> -> _SOURCES_
<org.springframework.web.bind.UnsatisfiedServletRequestParameterException: java.util.Map getActualParams()> -> _SOURCES_
<org.springframework.web.client.RestTemplate: org.springframework.http.HttpHeaders headForHeaders(java.lang.String,java.lang.Object[])> -> _SINKS_
<org.springframework.core.NestedIOException: java.lang.String getMessage()> -> _SOURCES_
<org.springframework.jdbc.datasource.JdbcTransactionObjectSupport: org.springframework.jdbc.datasource.ConnectionHolder getConnectionHolderForSavepoint()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__SOURCES__CWE862_
<org.springframework.beans.factory.support.AbstractBeanDefinition: void setEnforceInitMethod(boolean)> -> _SINKS_
<org.springframework.jmx.export.MBeanExporter: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.web.context.ContextLoader: org.springframework.context.ApplicationContext loadParentContext(javax.servlet.ServletContext)> -> _SOURCES_
<org.springframework.security.authentication.DefaultAuthenticationEventPublisher: void publishAuthenticationSuccess(org.springframework.security.core.Authentication)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.mock.jndi.SimpleNamingContext: java.util.Hashtable getEnvironment()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockBaseURL: java.lang.String getParameter(java.lang.String)> -> _SOURCES__CWE601_
<org.springframework.web.servlet.tags.form.AbstractFormTag: org.springframework.web.servlet.tags.form.TagWriter createTagWriter()> -> _SOURCES_
<org.springframework.jdbc.support.JdbcAccessor: void setDatabaseProductName(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: void setCssErrorClass(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.validation.AbstractBindingResult: java.util.List getFieldErrors()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.ServletCookieValueMethodArgumentResolver: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)> -> _SINKS_
<org.springframework.jms.config.JmsListenerContainerParser: org.springframework.beans.factory.config.BeanDefinition parseContainer(org.w3c.dom.Element,org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.jndi.JndiObjectLocator: java.lang.Class getExpectedType()> -> _SOURCES_
<org.springframework.orm.hibernate5.SessionHolder: void setPreviousFlushMode(org.hibernate.FlushMode)> -> _SINKS_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.util.concurrent.ListenableFuture delete(java.net.URI)> -> _SINKS_
<org.springframework.beans.factory.support.LookupOverride: java.lang.String getBeanName()> -> _SOURCES_
<org.springframework.web.servlet.view.json.MappingJackson2JsonView: void setExtractValueFromSingleKeyModel(boolean)> -> _SINKS_
<org.springframework.format.datetime.standard.DateTimeFormatterFactory: void setTimeStyle(java.time.format.FormatStyle)> -> _SINKS_
<org.springframework.web.servlet.ModelAndView: void setViewName(java.lang.String)> -> _SINKS_
<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor getMapValueTypeDescriptor()> -> _SOURCES_
<org.springframework.messaging.simp.stomp.BufferingStompDecoder: java.util.List decode(java.nio.ByteBuffer)> -> _SOURCES_
<org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContextHolderStrategy getContextHolderStrategy()> -> _SOURCES_
<org.springframework.web.servlet.support.BindStatus: java.lang.String getExpression()> -> _SOURCES_
<org.springframework.core.io.ClassPathResource: java.lang.String getFilename()> -> _SOURCES_
<org.springframework.web.portlet.context.AbstractRefreshablePortletApplicationContext: org.springframework.core.io.Resource getResourceByPath(java.lang.String)> -> _SOURCES_
<org.springframework.aop.interceptor.AsyncExecutionAspectSupport: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.validation.BindException: java.lang.String getObjectName()> -> _SOURCES_
<org.springframework.scheduling.backportconcurrent.ThreadPoolTaskExecutor: void setRejectedExecutionHandler(edu.emory.mathcs.backport.java.util.concurrent.RejectedExecutionHandler)> -> _SINKS_
<org.springframework.beans.MethodInvocationException: java.lang.String getErrorCode()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.OptionTag: java.lang.Object getValue()> -> _SOURCES_
<org.springframework.web.socket.adapter.standard.StandardWebSocketSession: java.net.URI getUri()> -> _SOURCES_
<org.springframework.security.access.intercept.RunAsImplAuthenticationProvider: java.lang.String getKey()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletPreferences: java.lang.String[] getValues(java.lang.String,java.lang.String[])> -> _SOURCES_
<org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean: void setKeepAliveSeconds(int)> -> _SINKS_
<org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean: void setDeserializersByType(java.util.Map)> -> _SINKS_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: org.springframework.jdbc.support.KeyHolder doExecuteAndReturnKeyHolder(org.springframework.jdbc.core.namedparam.SqlParameterSource)> -> _CWE078__CWE089__SINKS_
<org.springframework.transaction.support.DefaultTransactionDefinition: int getPropagationBehavior()> -> _SOURCES_
<org.springframework.web.context.ContextLoaderServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)> -> _SINKS_
<org.springframework.ui.velocity.VelocityEngineFactory: void setVelocityPropertiesMap(java.util.Map)> -> _SINKS_
<org.springframework.web.socket.server.support.OriginHandshakeInterceptor: void setAllowedOrigins(java.util.Collection)> -> _SINKS_
<org.springframework.web.socket.sockjs.client.AbstractClientSockJsSession: void close(org.springframework.web.socket.CloseStatus)> -> _SINKS_
<org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping: void setPathPrefix(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.config.ResourcesBeanDefinitionParser: void parseResourceChain(org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.xml.ParserContext,org.w3c.dom.Element,java.lang.Object)> -> _SOURCES__SINKS_
<org.springframework.scheduling.concurrent.ConcurrentTaskScheduler: void setErrorHandler(org.springframework.util.ErrorHandler)> -> _SINKS_
<org.springframework.web.portlet.context.AbstractRefreshablePortletApplicationContext: org.springframework.core.io.support.ResourcePatternResolver getResourcePatternResolver()> -> _SOURCES_
<org.springframework.orm.hibernate3.TypeDefinitionBean: java.lang.String getTypeClass()> -> _SOURCES_
<org.springframework.beans.propertyeditors.CharsetEditor: java.lang.String getAsText()> -> _SOURCES_
<org.springframework.web.accept.ContentNegotiationManagerFactoryBean: void setMediaTypes(java.util.Properties)> -> _SINKS_
<org.springframework.messaging.simp.SimpMessageHeaderAccessor: java.lang.String getShortLogMessage(java.lang.Object)> -> _SOURCES_
<org.springframework.web.portlet.context.AbstractRefreshablePortletApplicationContext: javax.servlet.ServletContext getServletContext()> -> _SOURCES_
<org.springframework.test.web.servlet.htmlunit.MockMvcWebConnectionBuilderSupport: com.gargoylesoftware.htmlunit.WebConnection createConnection(com.gargoylesoftware.htmlunit.WebClient,com.gargoylesoftware.htmlunit.WebConnection)> -> _CWE306__CWE079__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.validation.beanvalidation.CustomValidatorBean: void setValidatorFactory(javax.validation.ValidatorFactory)> -> _SINKS_
<org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser: org.springframework.beans.factory.config.RuntimeBeanReference getContentNegotiationManager(org.w3c.dom.Element,java.lang.Object,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.jmx.export.metadata.ManagedMetric: void setDisplayName(java.lang.String)> -> _SINKS_
<org.springframework.scripting.groovy.GroovyScriptFactory: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.web.servlet.tags.form.FormTag: void setServletRelativeAction(java.lang.String)> -> _SINKS_
<org.springframework.jndi.JndiObjectFactoryBean: void setDefaultObject(java.lang.Object)> -> _SINKS_
<org.springframework.test.web.client.match.JsonPathRequestMatchers: org.springframework.test.web.client.RequestMatcher value(java.lang.Object)> -> _SOURCES_
<org.springframework.jdbc.datasource.AbstractDriverBasedDataSource: void setUsername(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.test.web.client.DefaultRequestExpectation: org.springframework.http.client.ClientHttpResponse createResponse(org.springframework.http.client.ClientHttpRequest)> -> _SOURCES_
<org.springframework.beans.factory.config.CustomEditorConfigurer: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.jms.listener.DefaultMessageListenerContainer102: javax.jms.Connection createConnection()> -> _CWE306__SOURCES__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.cglib.proxy.MethodProxy: org.springframework.cglib.reflect.FastClass getSuperFastClass()> -> _SOURCES_
<org.springframework.orm.jpa.vendor.AbstractJpaVendorAdapter: void setGenerateDdl(boolean)> -> _SINKS_
<org.springframework.validation.FieldError: java.lang.Object getRejectedValue()> -> _SOURCES_
<org.springframework.beans.factory.config.MapFactoryBean: void setTargetMapClass(java.lang.Class)> -> _SINKS_
<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: javax.xml.namespace.QName getQName(java.lang.String)> -> _SOURCES_
<org.springframework.web.socket.handler.WebSocketSessionDecorator: void close(org.springframework.web.socket.CloseStatus)> -> _SINKS_
<org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter: void setObjectMapper(com.fasterxml.jackson.databind.ObjectMapper)> -> _SINKS_
<org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver: java.lang.ClassLoader getThrowawayClassLoader()> -> _SOURCES_
<org.springframework.jndi.JndiObjectTargetSource: java.lang.Class getTargetClass()> -> _SOURCES_
<org.springframework.validation.AbstractBindingResult: java.lang.Class getFieldType(java.lang.String)> -> _SOURCES_
<org.springframework.orm.jpa.vendor.TopLinkJpaVendorAdapter: java.lang.Class getEntityManagerInterface()> -> _SOURCES_
<org.springframework.test.util.AopTestUtils: java.lang.Object getTargetObject(java.lang.Object)> -> _SOURCES_
<org.springframework.web.servlet.support.RequestContext: java.lang.String getThemeMessage(java.lang.String,java.util.List)> -> _CWE079__SOURCES_
<org.springframework.jms.core.JmsTemplate: void doSend(javax.jms.MessageProducer,javax.jms.Message)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletRequest: java.lang.String getScheme()> -> _SOURCES_
<org.springframework.web.socket.sockjs.support.AbstractSockJsService: int getStreamBytesLimit()> -> _SOURCES_
<org.springframework.web.socket.client.standard.StandardWebSocketClient: java.net.InetAddress getLocalHost()> -> _SOURCES_
<org.springframework.web.servlet.resource.ResourceUrlProvider: java.lang.String getForRequestUrl(javax.servlet.http.HttpServletRequest,java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.jca.cci.core.support.CciDaoSupport: void setConnectionFactory(javax.resource.cci.ConnectionFactory)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.context.support.RequestHandledEvent: java.lang.Throwable getFailureCause()> -> _SOURCES_
<org.springframework.web.servlet.mvc.condition.HeadersRequestCondition: org.springframework.web.servlet.mvc.condition.HeadersRequestCondition combine(org.springframework.web.servlet.mvc.condition.HeadersRequestCondition)> -> _SINKS_
<org.springframework.jms.annotation.JmsListenerAnnotationBeanPostProcessor: void setMessageHandlerMethodFactory(org.springframework.messaging.handler.'annotation'.support.MessageHandlerMethodFactory)> -> _SINKS_
<org.springframework.aop.support.DefaultIntroductionAdvisor: org.aopalliance.aop.Advice getAdvice()> -> _SOURCES_
<org.springframework.beans.factory.InjectionPoint: java.lang.annotation.Annotation[] getAnnotations()> -> _SOURCES_
<org.springframework.messaging.simp.config.AbstractBrokerRegistration: org.springframework.messaging.MessageChannel getClientOutboundChannel()> -> _SOURCES_
<org.springframework.beans.factory.config.DependencyDescriptor: org.springframework.core.MethodParameter getMethodParameter()> -> _SOURCES_
<org.springframework.cache.jcache.interceptor.DefaultJCacheOperationSource: org.springframework.cache.interceptor.CacheResolver getExceptionCacheResolver()> -> _SOURCES_
<org.springframework.web.socket.adapter.standard.StandardWebSocketSession: java.util.List getExtensions()> -> _SOURCES_
<org.springframework.http.converter.ResourceHttpMessageConverter: java.lang.Long getContentLength(org.springframework.core.io.Resource,org.springframework.http.MediaType)> -> _SOURCES_
<org.springframework.context.support.AbstractMessageSource: void setParentMessageSource(org.springframework.context.MessageSource)> -> _SINKS_
<org.springframework.http.client.InterceptingClientHttpRequest: java.net.URI getURI()> -> _SOURCES_
<org.springframework.jdbc.object.RdbmsOperation: void setMaxRows(int)> -> _CWE089__SINKS_
<org.springframework.instrument.classloading.ShadowingClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)> -> _SOURCES_
<org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder: org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder setCommentPrefix(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.web.socket.server.standard.AbstractTyrusRequestUpgradeStrategy: void upgradeInternal(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,java.lang.String,java.util.List,javax.websocket.Endpoint)> -> _SINKS_
<org.springframework.orm.ibatis.SqlMapClientTemplate: void queryWithRowHandler(java.lang.String,com.ibatis.sqlmap.client.event.RowHandler)> -> _SINKS_
<org.springframework.remoting.jaxws.LocalJaxWsServiceFactory: java.net.URL getWsdlDocumentUrl()> -> _SOURCES_
<org.springframework.test.context.web.socket.MockServerContainer: long getDefaultMaxSessionIdleTimeout()> -> _SOURCES_
<org.springframework.test.web.client.match.XpathRequestMatchers: org.springframework.test.web.client.RequestMatcher booleanValue(java.lang.Boolean)> -> _SOURCES_
<org.springframework.context.annotation.CommonAnnotationBeanPostProcessor: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.http.converter.ObjectToStringHttpMessageConverter: void writeInternal(java.lang.Object,org.springframework.http.HttpOutputMessage)> -> _SINKS_
<org.springframework.jdbc.support.nativejdbc.CommonsDbcpNativeJdbcExtractor: java.sql.CallableStatement getNativeCallableStatement(java.sql.CallableStatement)> -> _CWE089__SOURCES_
<org.springframework.scheduling.quartz.SchedulerFactoryBean: void setQuartzProperties(java.util.Properties)> -> _SINKS_
<org.springframework.web.servlet.view.AbstractTemplateView: void setAllowSessionOverride(boolean)> -> _SINKS_
<org.springframework.validation.AbstractErrors: int getFieldErrorCount()> -> _SOURCES_
<org.springframework.web.servlet.view.jasperreports.AbstractJasperReportsView: net.sf.jasperreports.engine.JRDataSource getReportData(java.util.Map)> -> _SOURCES_
<org.springframework.beans.propertyeditors.CustomMapEditor: void setAsText(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.tags.form.ButtonTag: java.lang.String getDefaultValue()> -> _SOURCES_
<org.springframework.web.servlet.resource.ResourceUrlProvider: org.springframework.util.PathMatcher getPathMatcher()> -> _SOURCES_
<org.springframework.http.InvalidMediaTypeException: java.lang.String getMediaType()> -> _SOURCES_
<org.springframework.util.Base64Utils: byte[] decodeFromString(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.theme.ThemeChangeInterceptor: java.lang.String getParamName()> -> _SOURCES_
<org.springframework.jdbc.support.nativejdbc.Jdbc4NativeJdbcExtractor: java.sql.ResultSet getNativeResultSet(java.sql.ResultSet)> -> _CWE089__SOURCES_
<org.springframework.format.number.CurrencyStyleFormatter: java.text.NumberFormat getNumberFormat(java.util.Locale)> -> _SOURCES_
<org.springframework.http.client.OkHttpClientHttpResponse: java.lang.String getStatusText()> -> _SOURCES__CWE601_
<org.springframework.web.context.request.async.WebAsyncTask: java.lang.Long getTimeout()> -> _SOURCES_
<org.springframework.remoting.jaxws.JaxWsSoapFaultException: javax.xml.namespace.QName getFaultCodeAsQName()> -> _SOURCES_
<org.springframework.web.context.request.async.CallableInterceptorChain: void applyBeforeConcurrentHandling(org.springframework.web.context.request.NativeWebRequest,java.util.concurrent.Callable)> -> _SINKS_
<org.springframework.scheduling.support.CronSequenceGenerator: int[] getRange(java.lang.String,int,int)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockStateAwareResponse: java.io.Serializable getEvent(java.lang.String)> -> _SOURCES__CWE601_
<org.springframework.web.servlet.mvc.multiaction.InternalPathMethodNameResolver: java.lang.String getPrefix()> -> _SOURCES_
<org.springframework.beans.factory.config.MapFactoryBean: void setSourceMap(java.util.Map)> -> _SINKS_
<org.springframework.web.servlet.view.jasperreports.AbstractJasperReportsView: net.sf.jasperreports.engine.JasperReport loadReport()> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object getBean(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.mvc.condition.HeadersRequestCondition: java.util.Collection getContent()> -> _SOURCES_
<org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource: java.util.Collection getAttributes(java.lang.reflect.Method,java.lang.Class)> -> _SOURCES_
<org.springframework.web.portlet.context.PortletWebRequest: java.lang.Object getNativeRequest()> -> _SOURCES_
<org.springframework.jdbc.core.namedparam.AbstractSqlParameterSource: int getSqlType(java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.web.method.HandlerMethod: org.springframework.web.method.HandlerMethod createWithResolvedBean()> -> _SOURCES_
<org.springframework.security.config.method.ProtectPointcutPostProcessor: java.lang.String replaceBooleanOperators(java.lang.String)> -> _SANITIZERS__SINKS_
<org.springframework.web.servlet.mvc.method.annotation.RequestPartMethodArgumentResolver: java.lang.Object resolveArgument(org.springframework.core.MethodParameter,org.springframework.web.method.support.ModelAndViewContainer,org.springframework.web.context.request.NativeWebRequest,org.springframework.web.bind.support.WebDataBinderFactory)> -> _SINKS_
<org.springframework.http.HttpHeaders: java.util.List getAccessControlRequestHeaders()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletConfig: java.util.Enumeration getInitParameterNames()> -> _SOURCES_
<org.springframework.aop.interceptor.AsyncExecutionAspectSupport: void setExecutor(java.util.concurrent.Executor)> -> _SINKS_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: java.lang.String getOndblclick()> -> _CWE079__SOURCES_
<org.springframework.web.servlet.mvc.WebContentInterceptor: void setUrlDecode(boolean)> -> _SOURCES__SINKS_
<org.springframework.orm.hibernate3.HibernateAccessor: org.springframework.jdbc.support.SQLExceptionTranslator getJdbcExceptionTranslator()> -> _SOURCES_
<org.springframework.beans.factory.parsing.Location: org.springframework.core.io.Resource getResource()> -> _SOURCES_
<org.springframework.jms.config.AbstractJmsListenerEndpoint: void setSubscription(java.lang.String)> -> _SINKS_
<org.springframework.web.socket.sockjs.transport.handler.WebSocketTransportHandler: org.springframework.web.socket.server.HandshakeHandler getHandshakeHandler()> -> _SOURCES_
<org.springframework.transaction.support.SimpleTransactionScope: java.lang.Object get(java.lang.String,org.springframework.beans.factory.ObjectFactory)> -> _SOURCES_
<org.springframework.orm.hibernate3.LocalSessionFactoryBean: org.hibernate.cfg.Configuration getConfiguration()> -> _SOURCES_
<org.springframework.aop.framework.ProxyFactoryBean: void setAutodetectInterfaces(boolean)> -> _SINKS_
<org.springframework.mock.web.portlet.MockResourceResponse: int getContentLength()> -> _SOURCES__CWE601_
<org.springframework.validation.MapBindingResult: java.lang.Object getActualFieldValue(java.lang.String)> -> _SOURCES_
<org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParser: org.springframework.beans.factory.config.RuntimeBeanReference parseServerReference(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES__CWE862_
<org.springframework.web.context.request.ServletRequestAttributes: javax.servlet.http.HttpServletRequest getRequest()> -> _SOURCES_
<org.springframework.web.context.request.ServletWebRequest: java.lang.String getRemoteUser()> -> _CWE079__SOURCES_
<org.springframework.aop.target.AbstractPoolingTargetSource: void setMaxSize(int)> -> _SINKS_
<org.springframework.validation.AbstractBindingResult: java.util.List getGlobalErrors()> -> _SOURCES_
<org.springframework.ejb.support.AbstractMessageDrivenBean: javax.ejb.MessageDrivenContext getMessageDrivenContext()> -> _SOURCES_
<org.springframework.web.util.UriTemplate: java.util.List getVariableNames()> -> _SOURCES_
<org.springframework.orm.jdo.JdoTemplate: void setExposeNativePersistenceManager(boolean)> -> _SINKS_
<org.springframework.web.accept.ContentNegotiationManager: java.util.List getStrategies()> -> _SOURCES_
<org.springframework.scheduling.config.AnnotationDrivenBeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.mock.web.MockPageContext: javax.servlet.ServletConfig getServletConfig()> -> _SOURCES_
<org.springframework.jms.support.converter.MessagingMessageConverter: void setPayloadConverter(org.springframework.jms.support.converter.MessageConverter)> -> _SINKS_
<org.springframework.jmx.export.assembler.AbstractReflectiveMBeanInfoAssembler: java.lang.Class getClassForDescriptor(java.lang.Object)> -> _SOURCES_
<org.springframework.beans.factory.support.PropertiesBeanDefinitionReader: void setDefaultParentBean(java.lang.String)> -> _SINKS_
<org.springframework.web.socket.server.standard.AbstractStandardUpgradeStrategy: java.util.List getInstalledExtensions(javax.websocket.WebSocketContainer)> -> _SOURCES_
<org.springframework.jdbc.datasource.DelegatingDataSource: void setTargetDataSource(javax.sql.DataSource)> -> _CWE089__SINKS_
<org.springframework.beans.factory.support.GenericTypeAwareAutowireCandidateResolver: org.springframework.beans.factory.support.RootBeanDefinition getResolvedDecoratedDefinition(org.springframework.beans.factory.support.RootBeanDefinition)> -> _SOURCES_
<org.springframework.scheduling.timer.ScheduledTimerTask: void setTimerTask(java.util.TimerTask)> -> _SINKS_
<org.springframework.test.web.client.match.MockRestRequestMatchers: org.springframework.test.web.client.RequestMatcher header(java.lang.String,java.lang.String[])> -> _SOURCES_
<org.springframework.jdbc.object.SqlCall: java.lang.String getCallString()> -> _CWE089__SOURCES_
<org.springframework.test.context.web.socket.MockServerContainer: javax.websocket.Session connectToServer(java.lang.Object,java.net.URI)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.portlet.handler.AbstractHandlerMapping: void setApplyWebRequestInterceptorsToRenderPhaseOnly(boolean)> -> _SINKS_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: int getInt(int)> -> _CWE089__SOURCES_
<org.springframework.messaging.converter.MappingJackson2MessageConverter: com.fasterxml.jackson.core.JsonEncoding getJsonEncoding(org.springframework.util.MimeType)> -> _SOURCES_
<org.springframework.beans.factory.config.PlaceholderConfigurerSupport: void setBeanName(java.lang.String)> -> _SINKS_
<org.springframework.messaging.support.AbstractMessageChannel: java.util.List getInterceptors()> -> _SOURCES_
<org.springframework.web.portlet.GenericPortletBean: java.lang.String getPortletName()> -> _SOURCES_
<org.springframework.beans.factory.config.TypedStringValue: void setTargetTypeName(java.lang.String)> -> _SINKS_
<org.springframework.core.io.VfsUtils: java.lang.Object getRoot(java.net.URL)> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver: java.util.List getDefaultReturnValueHandlers()> -> _SOURCES_
<org.springframework.beans.factory.xml.XmlBeanDefinitionReader: org.springframework.beans.factory.xml.NamespaceHandlerResolver createDefaultNamespaceHandlerResolver()> -> _SOURCES_
<org.springframework.security.core.session.SessionInformation: java.lang.String getSessionId()> -> _SOURCES_
<org.springframework.scheduling.backportconcurrent.ScheduledExecutorFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.web.portlet.DispatcherPortlet: void setViewRendererUrl(java.lang.String)> -> _SINKS_
<org.springframework.web.socket.adapter.standard.ConvertingEncoderDecoderSupport: void init(javax.websocket.EndpointConfig)> -> _SINKS_
<org.springframework.remoting.jaxws.JaxWsSoapFaultException: java.lang.String getFaultActor()> -> _SOURCES_
<org.springframework.web.servlet.view.AbstractView: java.lang.String getBeanName()> -> _SOURCES_
<org.springframework.core.io.VfsUtils: java.lang.Object getRoot(java.net.URI)> -> _SOURCES_
<org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler: java.util.concurrent.ScheduledExecutorService getScheduledExecutor()> -> _SOURCES_
<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.MediaType getMediaType(javax.servlet.http.HttpServletRequest,org.springframework.core.io.Resource)> -> _SOURCES_
<org.springframework.web.servlet.handler.AbstractUrlHandlerMapping: java.lang.String getHandlerDescription(java.lang.Object)> -> _SOURCES_
<org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder: org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder setHandlerExceptionResolvers(org.springframework.web.servlet.HandlerExceptionResolver[])> -> _SINKS_
<org.springframework.web.servlet.handler.AbstractUrlHandlerMapping: java.util.Map getHandlerMap()> -> _SOURCES_
<org.springframework.test.context.web.AbstractGenericWebContextLoader: org.springframework.context.ConfigurableApplicationContext loadContext(org.springframework.test.context.MergedContextConfiguration)> -> _SOURCES_
<org.springframework.jca.cci.connection.DelegatingConnectionFactory: void setTargetConnectionFactory(javax.resource.cci.ConnectionFactory)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.beans.factory.config.MethodInvokingBean: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.web.socket.messaging.SubProtocolWebSocketHandler: void afterConnectionEstablished(org.springframework.web.socket.WebSocketSession)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.orm.jpa.EntityManagerHolder: void setSavepointManager(org.springframework.transaction.SavepointManager)> -> _SINKS_
<org.springframework.oxm.jaxb.Jaxb2Marshaller: void setValidationEventHandler(javax.xml.bind.ValidationEventHandler)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver: void setApplicationContext(org.springframework.context.ApplicationContext)> -> _SINKS_
<org.springframework.objenesis.instantiator.android.Android18Instantiator: java.lang.reflect.Method getNewInstanceMethod()> -> _SOURCES_
<org.springframework.context.support.MessageSourceResourceBundle: java.util.Locale getLocale()> -> _SOURCES_
<org.springframework.web.servlet.view.UrlBasedViewResolver: org.springframework.web.servlet.View loadView(java.lang.String,java.util.Locale)> -> _SOURCES_
<org.springframework.web.client.AsyncRestTemplate: java.util.List getMessageConverters()> -> _SOURCES_
<org.springframework.jdbc.datasource.lookup.MapDataSourceLookup: void setDataSources(java.util.Map)> -> _CWE089__SINKS_
<org.springframework.web.context.request.FacesRequestAttributes: java.util.Map getAttributeMap(int)> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: java.lang.String getTitle()> -> _CWE079__SOURCES_
<org.springframework.web.context.support.AbstractRefreshableWebApplicationContext: org.springframework.core.io.Resource getResourceByPath(java.lang.String)> -> _SOURCES_
<org.springframework.jmx.access.MBeanClientInterceptor: void setServer(javax.management.MBeanServerConnection)> -> _SINKS_
<org.springframework.aop.support.DefaultPointcutAdvisor: org.springframework.aop.Pointcut getPointcut()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver: org.springframework.http.server.ServletServerHttpRequest createInputMessage(org.springframework.web.context.request.NativeWebRequest)> -> _SOURCES_
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setExposeContextBeansAsAttributes(boolean)> -> _SINKS_
<org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider: void setHideUserNotFoundExceptions(boolean)> -> _SINKS__CWE862_
<org.springframework.orm.hibernate4.LocalSessionFactoryBean: void setCurrentTenantIdentifierResolver(java.lang.Object)> -> _SINKS_
<org.springframework.format.number.money.MonetaryAmountFormatter: javax.money.format.MonetaryAmountFormat getMonetaryAmountFormat(java.util.Locale)> -> _SOURCES_
<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder accept(java.lang.String[])> -> _SOURCES_
<org.springframework.jndi.JndiPropertySource: java.lang.Object getProperty(java.lang.String)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockClientDataRequest: void setMethod(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.cglib.core.TypeUtils: org.springframework.asm.Type getUnboxedType(org.springframework.asm.Type)> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler: void setSystemSubscriptions(java.util.Map)> -> _SINKS_
<org.springframework.jdbc.datasource.init.ResourceDatabasePopulator: void setBlockCommentStartDelimiter(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.context.annotation.ConfigurationClassParser: java.util.Set getImports(org.springframework.context.'annotation'.ConfigurationClassParser$SourceClass)> -> _SOURCES_
<org.springframework.core.annotation.AnnotatedElementUtils: org.springframework.core.'annotation'.AnnotationAttributes getAnnotationAttributes(java.lang.reflect.AnnotatedElement,java.lang.String)> -> _SOURCES_
<org.springframework.format.datetime.joda.DateTimeFormatterFactoryBean: org.joda.time.format.DateTimeFormatter getObject()> -> _SOURCES_
<org.springframework.orm.hibernate3.SessionFactoryUtils: org.hibernate.Session getSession(org.hibernate.SessionFactory,boolean)> -> _SOURCES_
<org.springframework.web.filter.GenericFilterBean: void setServletContext(javax.servlet.ServletContext)> -> _SINKS_
<org.springframework.web.servlet.tags.form.AbstractHtmlInputElementTag: boolean isReadonly()> -> _SOURCES__CWE601_
<org.springframework.test.web.servlet.htmlunit.HtmlUnitRequestBuilder: org.springframework.mock.web.MockHttpServletRequest buildRequest(javax.servlet.ServletContext)> -> _CWE079__SOURCES_
<org.springframework.context.support.AbstractXmlApplicationContext: void loadBeanDefinitions(org.springframework.beans.factory.xml.XmlBeanDefinitionReader)> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanDefinition: void setPropertyValues(org.springframework.beans.MutablePropertyValues)> -> _SINKS_
<org.springframework.web.context.support.AbstractRefreshableWebApplicationContext: org.springframework.core.io.support.ResourcePatternResolver getResourcePatternResolver()> -> _SOURCES_
<org.springframework.jms.core.JmsTemplate: void setTimeToLive(long)> -> _SINKS_
<org.springframework.web.socket.server.jetty.JettyRequestUpgradeStrategy: java.lang.String[] getSupportedVersions()> -> _SOURCES_
<org.springframework.remoting.jaxws.JaxWsPortProxyFactoryBean: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration: org.springframework.security.authentication.AuthenticationManager authenticationManager()> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.transaction.jta.JtaTransactionManager: void setJndiTemplate(org.springframework.jndi.JndiTemplate)> -> _SINKS_
<org.springframework.orm.hibernate3.support.AsyncRequestInterceptor: void beforeConcurrentHandling(org.springframework.web.context.request.NativeWebRequest,org.springframework.web.context.request.async.DeferredResult)> -> _SINKS_
<org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor: java.lang.Class getSecureObjectClass()> -> _SOURCES_
<org.springframework.test.web.client.match.ContentRequestMatchers: org.springframework.test.web.client.RequestMatcher source(org.hamcrest.Matcher)> -> _SOURCES_
<org.springframework.jdbc.support.incrementer.DerbyMaxValueIncrementer: void setDummyName(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.format.datetime.joda.JodaTimeFormatterRegistrar: org.joda.time.format.DateTimeFormatter getFallbackFormatter(org.springframework.format.datetime.joda.JodaTimeFormatterRegistrar$Type)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletRequest: java.util.Enumeration getLocales()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletSession: void setMaxInactiveInterval(int)> -> _SINKS_
<org.springframework.core.annotation.AnnotationAttributes: boolean getBoolean(java.lang.String)> -> _SOURCES_
<org.springframework.jdbc.object.SqlQuery: java.util.List execute(java.util.Map)> -> _CWE078__CWE089__SINKS_
<org.springframework.remoting.support.RemoteExporter: void setService(java.lang.Object)> -> _SINKS_
<org.springframework.jca.cci.core.CciTemplate: javax.resource.cci.Record createRecord(org.springframework.jca.cci.core.RecordCreator)> -> _SOURCES_
<org.springframework.web.client.RestTemplate: java.lang.Object execute(java.lang.String,org.springframework.http.HttpMethod,org.springframework.web.client.RequestCallback,org.springframework.web.client.ResponseExtractor,java.lang.Object[])> -> _SINKS_
<org.springframework.remoting.jaxrpc.ServletEndpointSupport: org.springframework.context.ApplicationContext getApplicationContext()> -> _SOURCES_
<org.springframework.orm.hibernate3.SessionHolder: org.hibernate.Session getValidatedSession(java.lang.Object)> -> _SOURCES_
<org.springframework.util.CustomizableThreadCreator: java.lang.ThreadGroup getThreadGroup()> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.PathMatchConfigurer: org.springframework.web.servlet.config.'annotation'.PathMatchConfigurer setUrlPathHelper(org.springframework.web.util.UrlPathHelper)> -> _SINKS_
<org.springframework.oxm.jaxb.Jaxb2Marshaller: java.lang.Class[] getClassesToBeBound()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.OptionsTag: void setDisabled(boolean)> -> _SINKS_
<org.springframework.expression.spel.standard.SpelExpression: org.springframework.core.convert.TypeDescriptor getValueTypeDescriptor(java.lang.Object)> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompHeaderAccessor: java.lang.String getPasscode(java.util.Map)> -> _SOURCES_
<org.springframework.web.socket.messaging.StompSubProtocolHandler: void sendToClient(org.springframework.web.socket.WebSocketSession,org.springframework.messaging.simp.stomp.StompHeaderAccessor,byte[])> -> _SINKS_
<org.springframework.http.client.Netty4ClientHttpRequestFactory: void setReadTimeout(int)> -> _SINKS__CWE601_
<org.springframework.web.servlet.mvc.condition.ParamsRequestCondition: java.lang.String getToStringInfix()> -> _SOURCES_
<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.EvaluationContext,java.lang.Object,org.springframework.core.convert.TypeDescriptor,java.lang.Object[])> -> _SOURCES_
<org.springframework.test.web.client.match.JsonPathRequestMatchers: org.springframework.test.web.client.RequestMatcher isArray()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: void setEmbeddedValueResolver(org.springframework.util.StringValueResolver)> -> _SINKS_
<org.springframework.expression.spel.support.StandardEvaluationContext: void setConstructorResolvers(java.util.List)> -> _SINKS_
<org.springframework.context.support.ResourceMapFactoryBean: org.springframework.core.io.Resource getResource(java.lang.String)> -> _SOURCES_
<org.springframework.test.web.servlet.DefaultMvcResult: org.springframework.web.servlet.HandlerInterceptor[] getInterceptors()> -> _SOURCES_
<org.springframework.mail.javamail.MimeMessageHelper: javax.mail.internet.MimeMultipart getMimeMultipart()> -> _SOURCES_
<org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping: void setCaseSensitive(boolean)> -> _SINKS_
<org.springframework.security.access.expression.method.PreInvocationExpressionAttribute: java.lang.String getFilterTarget()> -> _SOURCES_
<org.springframework.web.servlet.theme.SessionThemeResolver: void setThemeName(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)> -> _SINKS_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSetMetaData: java.lang.String getCatalogName(int)> -> _CWE089__SOURCES_
<org.springframework.test.context.MergedContextConfiguration: java.lang.String[] getActiveProfiles()> -> _SOURCES_
<org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper: java.util.List getGrantedAuthorities(java.util.Collection)> -> _SOURCES_
<org.springframework.transaction.interceptor.TransactionAspectSupport: void setTransactionAttributeSources(org.springframework.transaction.interceptor.TransactionAttributeSource[])> -> _SINKS_
<org.springframework.context.support.MessageSourceAccessor: java.lang.String getMessage(java.lang.String,java.lang.String,java.util.Locale)> -> _SOURCES_
<org.springframework.orm.jpa.vendor.AbstractJpaVendorAdapter: java.lang.Class getEntityManagerInterface()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockStateAwareResponse: java.io.Serializable getEvent(javax.xml.namespace.QName)> -> _SOURCES__CWE601_
<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder setSingleton(boolean)> -> _SINKS_
<org.springframework.core.env.MapPropertySource: java.lang.String[] getPropertyNames()> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompDecoder: void setHeaderInitializer(org.springframework.messaging.support.MessageHeaderInitializer)> -> _SINKS_
<org.springframework.transaction.jta.WebSphereTransactionManagerFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.remoting.rmi.JndiRmiProxyFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession: java.util.Map getAttributes()> -> _SOURCES_
<org.springframework.web.portlet.DispatcherPortlet: void setForwardEventException(boolean)> -> _SINKS_
<org.springframework.test.web.servlet.MockMvc: void setGlobalResultHandlers(java.util.List)> -> _SINKS_
<org.springframework.web.servlet.mvc.condition.PatternsRequestCondition: java.util.Collection getContent()> -> _SOURCES_
<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: void setConnectOnStartup(boolean)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.mock.web.MockHttpServletRequest: java.lang.String getContextPath()> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.DefaultTransportRequest: org.springframework.web.socket.sockjs.client.SockJsUrlInfo getSockJsUrlInfo()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.PasswordInputTag: java.lang.String getType()> -> _SOURCES_
<org.springframework.orm.toplink.support.TopLinkDaoSupport: org.springframework.orm.toplink.TopLinkTemplate getTopLinkTemplate()> -> _SOURCES_
<org.springframework.beans.factory.config.PropertiesFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.web.util.HierarchicalUriComponents: org.springframework.web.util.HierarchicalUriComponents encode(java.lang.String)> -> _SANITIZERS_
<org.springframework.web.servlet.view.jasperreports.JasperReportsViewResolver: void setReportDataKey(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.support.WebContentGenerator: void setRequireSession(boolean)> -> _SINKS_
<org.springframework.beans.support.PagedListHolder: void setMaxLinkedPages(int)> -> _SINKS_
<org.springframework.transaction.jta.JtaTransactionManager: javax.transaction.UserTransaction getUserTransaction()> -> _SOURCES_
<org.springframework.web.servlet.view.tiles2.TilesConfigurer: org.apache.tiles.startup.TilesInitializer createTilesInitializer()> -> _SOURCES_
<org.springframework.remoting.httpinvoker.AbstractHttpInvokerRequestExecutor: java.lang.ClassLoader getBeanClassLoader()> -> _SOURCES_
<org.springframework.jms.config.JmsListenerEndpointRegistrar: void setMessageHandlerMethodFactory(org.springframework.messaging.handler.'annotation'.support.MessageHandlerMethodFactory)> -> _SINKS_
<org.springframework.messaging.core.AbstractDestinationResolvingMessagingTemplate: void convertAndSend(java.lang.String,java.lang.Object,java.util.Map,org.springframework.messaging.core.MessagePostProcessor)> -> _SINKS_
<org.springframework.cache.jcache.interceptor.DefaultJCacheOperationSource: org.springframework.cache.interceptor.KeyGenerator getKeyGenerator()> -> _SOURCES_
<org.springframework.web.servlet.tags.ThemeTag: java.lang.String getNoSuchMessageExceptionDescription(org.springframework.context.NoSuchMessageException)> -> _CWE079__SOURCES_
<org.springframework.web.filter.AbstractRequestLoggingFilter: void setBeforeMessagePrefix(java.lang.String)> -> _SINKS_
<org.springframework.orm.hibernate3.support.OpenSessionInterceptor: void setSessionFactory(org.hibernate.SessionFactory)> -> _SINKS_
<org.springframework.jdbc.support.lob.PassThroughClob: java.io.Writer setCharacterStream(long)> -> _CWE089__SINKS_
<org.springframework.mock.web.DelegatingServletInputStream: java.io.InputStream getSourceStream()> -> _SOURCES_
<org.springframework.test.web.servlet.htmlunit.HtmlUnitRequestBuilder: com.gargoylesoftware.htmlunit.CookieManager getCookieManager()> -> _SOURCES_
<org.springframework.web.socket.messaging.DefaultSimpUserRegistry: org.springframework.messaging.simp.user.SimpUser getUser(java.lang.String)> -> _SOURCES__CWE862_
<org.springframework.beans.factory.parsing.FailFastProblemReporter: void setLogger(org.apache.commons.logging.Log)> -> _SINKS_
<org.springframework.security.access.intercept.AbstractSecurityInterceptor: org.springframework.security.access.AccessDecisionManager getAccessDecisionManager()> -> _SOURCES_
<org.springframework.ejb.interceptor.SpringBeanAutowiringInterceptor: java.lang.String getBeanFactoryLocatorKey(java.lang.Object)> -> _SOURCES_
<org.springframework.remoting.jaxrpc.JaxRpcPortClientInterceptor: void setCustomPropertyMap(java.util.Map)> -> _SINKS_
<org.springframework.jmx.export.metadata.AttributesJmxAttributeSource: void setAttributes(org.springframework.metadata.Attributes)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompEncoder: byte[] encode(java.util.Map,byte[])> -> _SANITIZERS__SINKS_
<org.springframework.web.socket.config.annotation.ServletWebSocketHandlerRegistry: org.springframework.web.util.UrlPathHelper getUrlPathHelper()> -> _SOURCES_
<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: void setLazyInit(java.lang.String)> -> _SINKS_
<org.springframework.security.authentication.jaas.AbstractJaasAuthenticationProvider: org.springframework.security.authentication.jaas.AuthorityGranter[] getAuthorityGranters()> -> _SOURCES_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: java.lang.Object getObject(int,java.util.Map)> -> _CWE089__SOURCES_
<org.springframework.web.socket.sockjs.client.SockJsClient: org.springframework.web.socket.sockjs.client.SockJsClient$ServerInfo getServerInfo(org.springframework.web.socket.sockjs.client.SockJsUrlInfo,org.springframework.http.HttpHeaders)> -> _SOURCES__SINKS_
<org.springframework.web.bind.annotation.support.HandlerMethodResolver: java.util.Set getHandlerMethods()> -> _SOURCES_
<org.springframework.web.portlet.bind.PortletRequestUtils: long getRequiredLongParameter(javax.portlet.PortletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.beans.propertyeditors.LocaleEditor: java.lang.String getAsText()> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.PathMatchConfigurer: org.springframework.web.servlet.config.'annotation'.PathMatchConfigurer setPathMatcher(org.springframework.util.PathMatcher)> -> _SINKS_
<org.springframework.jmx.export.metadata.ManagedOperationParameter: void setDescription(java.lang.String)> -> _SINKS_
<org.springframework.jms.listener.AbstractJmsListeningContainer: java.lang.String getClientId()> -> _SOURCES_
<org.springframework.core.annotation.AnnotationUtils: java.lang.Object getDefaultValue(java.lang.'annotation'.Annotation)> -> _SOURCES_
<org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl: java.util.Set getRolesReachableInOneOrMoreSteps(org.springframework.security.core.GrantedAuthority)> -> _SOURCES_
<org.springframework.util.xml.XMLEventStreamReader: int getNamespaceCount()> -> _SOURCES_
<org.springframework.util.backoff.ExponentialBackOff: void setMaxElapsedTime(long)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompHeaderAccessor: java.lang.String getPasscode()> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.UndertowXhrTransport: void executeReceiveRequest(org.springframework.web.socket.sockjs.client.TransportRequest,java.net.URI,org.springframework.http.HttpHeaders,org.springframework.web.socket.sockjs.client.XhrClientSockJsSession,org.springframework.util.concurrent.SettableListenableFuture)> -> _SINKS_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: java.util.List getColumnNames()> -> _CWE089__SOURCES_
<org.springframework.aop.target.CommonsPoolTargetSource: int getActiveCount()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.FormTag: void setAutocomplete(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter: long getLastModified(javax.servlet.http.HttpServletRequest,java.lang.Object)> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.XhrClientSockJsSession: java.lang.String getAcceptedProtocol()> -> _SOURCES_
<org.springframework.web.jsf.DelegatingPhaseListenerMulticaster: org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.faces.context.FacesContext)> -> _SOURCES_
<org.springframework.jdbc.datasource.init.ScriptUtils: java.lang.String readScript(org.springframework.core.io.support.EncodedResource)> -> _CWE089__SOURCES_
<org.springframework.jms.config.MethodJmsListenerEndpoint: org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter createMessageListener(org.springframework.jms.listener.MessageListenerContainer)> -> _SOURCES_
<org.springframework.jms.config.AbstractJmsListenerEndpoint: java.lang.String getConcurrency()> -> _SOURCES_
<org.springframework.web.servlet.config.CorsBeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.jdbc.core.JdbcTemplate: int update(org.springframework.jdbc.core.PreparedStatementCreator,org.springframework.jdbc.core.PreparedStatementSetter)> -> _CWE089__SINKS_
<org.springframework.jms.connection.UserCredentialsConnectionFactoryAdapter: void setUsername(java.lang.String)> -> _SINKS__CWE862_
<org.springframework.validation.BindException: java.lang.Object getTarget()> -> _SOURCES_
<org.springframework.orm.jdo.JdoTransactionManager: void setDataSource(javax.sql.DataSource)> -> _SINKS_
<org.springframework.jdbc.core.JdbcTemplate: void setMaxRows(int)> -> _CWE089__SINKS_
<org.springframework.test.util.XpathExpectationsHelper: void assertString(byte[],java.lang.String,org.hamcrest.Matcher)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletRequest: javax.servlet.DispatcherType getDispatcherType()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurer: org.springframework.security.web.session.InvalidSessionStrategy getInvalidSessionStrategy()> -> _SOURCES_
<org.springframework.mock.web.MockMultipartFile: java.lang.String getName()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter: void sendInternal(java.lang.Object,org.springframework.http.MediaType)> -> _SINKS__CWE601_
<org.springframework.http.HttpHeaders: java.lang.String getFirst(java.lang.String)> -> _SOURCES_
<org.springframework.context.support.AbstractMessageSource: java.lang.String getMessage(java.lang.String,java.lang.Object[],java.lang.String,java.util.Locale)> -> _SOURCES_
<org.springframework.jdbc.core.simple.AbstractJdbcCall: org.springframework.jdbc.core.JdbcTemplate getJdbcTemplate()> -> _CWE089__SOURCES_
<org.springframework.test.web.client.match.XpathRequestMatchers: org.springframework.test.web.client.RequestMatcher node(org.hamcrest.Matcher)> -> _SOURCES_
<org.springframework.web.portlet.util.PortletUtils: int getTargetPage(javax.portlet.PortletRequest,java.lang.String,int)> -> _SOURCES_
<org.springframework.core.io.UrlResource: java.lang.String getDescription()> -> _SOURCES_
<org.springframework.oxm.support.AbstractMarshaller: void setSupportDtd(boolean)> -> _SINKS_
<org.springframework.context.config.PropertyPlaceholderBeanDefinitionParser: java.lang.Class getBeanClass(org.w3c.dom.Element)> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: java.lang.String getOnclick()> -> _CWE079__SOURCES_
<org.springframework.context.annotation.LoadTimeWeavingConfiguration: org.springframework.instrument.classloading.LoadTimeWeaver loadTimeWeaver()> -> _SOURCES_
<org.springframework.jmx.export.MBeanExporter: javax.management.ObjectName getObjectName(java.lang.Object,java.lang.String)> -> _SOURCES_
<org.springframework.jms.listener.SimpleMessageListenerContainer: void setTaskExecutor(org.springframework.core.task.TaskExecutor)> -> _SINKS_
<org.springframework.core.io.ClassPathResource: java.net.URL getURL()> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanDefinition: void setSynthetic(boolean)> -> _SINKS_
<org.springframework.ui.freemarker.FreeMarkerConfigurationFactory: void setPreTemplateLoaders(freemarker.cache.TemplateLoader[])> -> _SINKS_
<org.springframework.util.xml.AbstractXMLStreamReader: java.lang.String getAttributeValue(java.lang.String,java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.config.ResourcesBeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.web.bind.support.DefaultSessionAttributeStore: void storeAttribute(org.springframework.web.context.request.WebRequest,java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.http.client.support.ProxyFactoryBean: void setPort(int)> -> _SINKS_
<org.springframework.messaging.support.MessageHeaderAccessor: java.lang.Long getTimestamp()> -> _SOURCES_
<org.springframework.context.support.ApplicationObjectSupport: org.springframework.context.support.MessageSourceAccessor getMessageSourceAccessor()> -> _SOURCES_
<org.springframework.aop.aspectj.AspectJExpressionPointcutAdvisor: org.springframework.aop.Pointcut getPointcut()> -> _SOURCES_
<org.springframework.security.config.http.AuthenticationConfigBuilder: void createLoginPageFilterIfNeeded()> -> _AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.context.support.WebApplicationObjectSupport: org.springframework.web.context.WebApplicationContext getWebApplicationContext()> -> _SOURCES_
<org.springframework.web.bind.EscapedErrors: java.lang.String getNestedPath()> -> _SOURCES_
<org.springframework.aop.config.MethodLocatingFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.messaging.simp.SimpMessageHeaderAccessor: java.util.Map getSessionAttributes()> -> _SOURCES_
<org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactoryBean: java.lang.Class getObjectType()> -> _CWE089__SOURCES_
<org.springframework.jdbc.JdbcUpdateAffectedIncorrectNumberOfRowsException: int getExpectedRowsAffected()> -> _CWE089__SOURCES_
<org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.security.config.annotation.web.configurers.CsrfConfigurer: org.springframework.security.web.util.matcher.RequestMatcher getRequireCsrfProtectionMatcher()> -> _SOURCES_
<org.springframework.security.config.annotation.authentication.configurers.userdetails.DaoAuthenticationConfigurer: org.springframework.security.core.userdetails.UserDetailsService getUserDetailsService()> -> _SOURCES__CWE862_
<org.springframework.jms.core.JmsTemplate: java.lang.String getDefaultDestinationName()> -> _SOURCES_
<org.springframework.cglib.reflect.FastMethod: java.lang.Class[] getExceptionTypes()> -> _SOURCES_
<org.springframework.validation.BindException: org.springframework.validation.FieldError getFieldError(java.lang.String)> -> _SOURCES_
<org.springframework.security.provisioning.JdbcUserDetailsManager: void setUpdateUserSql(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.messaging.simp.stomp.StompEncoder: byte[] encodeHeaderKey(java.lang.String,boolean)> -> _SANITIZERS_
<org.springframework.web.context.support.ServletContextParameterFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.core.convert.support.ArrayToObjectConverter: java.util.Set getConvertibleTypes()> -> _SOURCES_
<org.springframework.metadata.commons.CommonsAttributes: java.util.Collection getAttributes(java.lang.reflect.Field)> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurer: void setSessionFixationAuthenticationStrategy(org.springframework.security.web.authentication.session.SessionAuthenticationStrategy)> -> _CWE306__SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.multipart.commons.CommonsMultipartResolver: org.apache.commons.fileupload.FileUpload newFileUpload(org.apache.commons.fileupload.FileItemFactory)> -> _SOURCES_
<org.springframework.aop.aspectj.annotation.SimpleMetadataAwareAspectInstanceFactory: int getOrderForAspectClass(java.lang.Class)> -> _SOURCES_
<org.springframework.aop.target.CommonsPool2TargetSource: java.lang.Object getTarget()> -> _SOURCES_
<org.springframework.orm.jdo.JdoTransactionManager: javax.jdo.PersistenceManagerFactory getPersistenceManagerFactory()> -> _SOURCES_
<org.springframework.instrument.classloading.weblogic.WebLogicLoadTimeWeaver: java.lang.ClassLoader getInstrumentableClassLoader()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver: java.util.List getDefaultArgumentResolvers()> -> _SOURCES_
<org.springframework.web.context.request.async.DeferredResult: org.springframework.web.context.request.async.DeferredResultProcessingInterceptor getInterceptor()> -> _SOURCES_
<org.springframework.http.converter.BufferedImageHttpMessageConverter: void setCacheDir(java.io.File)> -> _SINKS_
<org.springframework.scheduling.support.MethodInvokingRunnable: java.lang.String getInvocationFailureMessage()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: void setPathInfo(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: long getLong(java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint: java.lang.Object getTarget()> -> _SOURCES_
<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: boolean isConnectFailure(java.rmi.RemoteException)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE862_
<org.springframework.jms.core.JmsTemplate: java.lang.Object execute(org.springframework.jms.core.SessionCallback,boolean)> -> _SINKS_
<org.springframework.jdbc.core.simple.AbstractJdbcCall: void setSchemaName(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.web.socket.sockjs.transport.session.WebSocketServerSockJsSession: java.lang.Object getNativeSession()> -> _SOURCES_
<org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean: void setGroup(java.lang.String)> -> _SINKS_
<org.springframework.web.context.support.StaticWebApplicationContext: void setConfigLocations(java.lang.String[])> -> _SINKS_
<org.springframework.jdbc.object.SqlQuery: java.lang.Object findObject(java.lang.Object[],java.util.Map)> -> _CWE089__SINKS_
<org.springframework.web.context.request.ServletWebRequest: java.security.Principal getUserPrincipal()> -> _SOURCES_
<org.springframework.cglib.core.AbstractClassGenerator: void setUseCache(boolean)> -> _SINKS_
<org.springframework.jms.JmsException: java.lang.String getErrorCode()> -> _SOURCES_
<org.springframework.http.converter.AbstractHttpMessageConverter: void setSupportedMediaTypes(java.util.List)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletContext: java.lang.String getRealPath(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.mock.jndi.SimpleNamingContext: javax.naming.NameParser getNameParser(javax.naming.Name)> -> _SOURCES_
<org.springframework.mock.web.MockPageContext: javax.servlet.ServletRequest getRequest()> -> _SOURCES_
<org.springframework.web.portlet.HandlerExecutionChain: org.springframework.web.portlet.HandlerInterceptor[] getInterceptors()> -> _SOURCES_
<org.springframework.messaging.support.NativeMessageHeaderAccessor: java.util.List getNativeHeader(java.lang.String)> -> _SOURCES_
<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.config.BeanDefinitionHolder parseBeanDefinitionElement(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition)> -> _SOURCES__SINKS_
<org.springframework.orm.hibernate5.HibernateTemplate: java.lang.Object get(java.lang.String,java.io.Serializable,org.hibernate.LockMode)> -> _SOURCES__SINKS_
<org.springframework.cglib.core.CodeEmitter: void load_args(int,int)> -> _SOURCES_
<org.springframework.orm.toplink.TopLinkTemplate: void setAllowCreate(boolean)> -> _SINKS_
<org.springframework.scheduling.quartz.CronTriggerBean: void setJobDataAsMap(java.util.Map)> -> _SINKS_
<org.springframework.web.servlet.view.ContentNegotiatingViewResolver: java.util.List getMediaTypes(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.web.servlet.support.ServletUriComponentsBuilder: javax.servlet.http.HttpServletRequest getCurrentRequest()> -> _SOURCES_
<org.springframework.web.util.Log4jConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)> -> _SINKS_
<org.springframework.cglib.core.TypeUtils: org.springframework.asm.Type[] parseTypes(java.lang.String)> -> _SINKS_
<org.springframework.validation.DataBinder: org.springframework.beans.TypeConverter getTypeConverter()> -> _SOURCES_
<org.springframework.web.servlet.view.velocity.VelocityView: org.apache.velocity.context.Context createVelocityContext(java.util.Map)> -> _SOURCES_
<org.springframework.scheduling.quartz.CronTriggerFactoryBean: void setJobDataMap(org.quartz.JobDataMap)> -> _SINKS_
<org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler: java.util.Collection getDestinationPrefixes()> -> _SOURCES_
<org.springframework.jms.listener.endpoint.JmsActivationSpecConfig: int getMaxConcurrency()> -> _SOURCES_
<org.springframework.ui.velocity.VelocityEngineFactory: void setPreferFileSystemAccess(boolean)> -> _SINKS_
<org.springframework.web.servlet.mvc.condition.AbstractNameValueExpression: java.lang.String getName()> -> _SOURCES_
<org.springframework.beans.factory.support.BeanDefinitionDefaults: void setDestroyMethodName(java.lang.String)> -> _SINKS_
<org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer: org.springframework.security.config.'annotation'.web.configurers.AbstractAuthenticationFilterConfigurer loginPage(java.lang.String)> -> _AUTHENTICATIONS_TO_HIGH_
<org.springframework.security.access.vote.AbstractAclVoter: java.lang.Class getProcessDomainObjectClass()> -> _SOURCES_
<org.springframework.test.web.servlet.result.PrintingResultHandler: void handle(org.springframework.test.web.servlet.MvcResult)> -> _SINKS_
<org.springframework.http.HttpHeaders: java.util.List getRange()> -> _SOURCES_
<org.springframework.security.util.SimpleMethodInvocation: java.lang.reflect.Method getMethod()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: void setRequestedSessionIdFromCookie(boolean)> -> _SINKS_
<org.springframework.format.number.NumberFormatAnnotationFormatterFactory: org.springframework.format.Printer getPrinter(java.lang.'annotation'.Annotation,java.lang.Class)> -> _SOURCES_
<org.springframework.security.core.authority.mapping.SimpleAuthorityMapper: void setDefaultAuthority(java.lang.String)> -> _SINKS_
<org.springframework.web.portlet.context.AbstractRefreshablePortletApplicationContext: org.springframework.core.env.ConfigurableEnvironment createEnvironment()> -> _SOURCES_
<org.springframework.web.socket.config.annotation.ServletWebSocketHandlerRegistration: void addSockJsServiceMapping(org.springframework.util.MultiValueMap,org.springframework.web.socket.sockjs.SockJsService,org.springframework.web.socket.WebSocketHandler,java.lang.String)> -> _SINKS_
<org.springframework.cache.jcache.interceptor.AbstractJCacheOperation: java.lang.StringBuilder getOperationDescription()> -> _SOURCES_
<org.springframework.remoting.support.RemoteInvocationBasedAccessor: org.springframework.remoting.support.RemoteInvocationFactory getRemoteInvocationFactory()> -> _SOURCES_
<org.springframework.aop.target.CommonsPoolTargetSource: long getMaxWait()> -> _SOURCES_
<org.springframework.jdbc.datasource.DelegatingDataSource: int getLoginTimeout()> -> _CWE306__CWE089__SOURCES_
<org.springframework.cglib.transform.AbstractClassFilterTransformer: void setTarget(org.springframework.asm.ClassVisitor)> -> _SINKS_
<org.springframework.web.socket.messaging.SubProtocolWebSocketHandler: void handleTransportError(org.springframework.web.socket.WebSocketSession,java.lang.Throwable)> -> _SINKS_
<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.DocumentDefaultsDefinition getDefaults()> -> _SOURCES_
<org.springframework.web.servlet.i18n.LocaleChangeInterceptor: void setLanguageTagCompliant(boolean)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletRequest: java.lang.String getWindowID()> -> _SOURCES_
<org.springframework.web.servlet.view.UrlBasedViewResolver: org.springframework.web.servlet.View createView(java.lang.String,java.util.Locale)> -> _SOURCES_
<org.springframework.jdbc.support.xml.Jdbc4SqlXmlHandler: javax.xml.transform.Source getXmlAsSource(java.sql.ResultSet,java.lang.String,java.lang.Class)> -> _CWE089__SOURCES_
<org.springframework.web.socket.sockjs.client.XhrClientSockJsSession: java.net.InetSocketAddress getRemoteAddress()> -> _SOURCES_
<org.springframework.context.annotation.ScopedProxyCreator: java.lang.String getTargetBeanName(java.lang.String)> -> _SOURCES_
<org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator: java.lang.Object[] getAdvicesAndAdvisorsForBean(java.lang.Class,java.lang.String,org.springframework.aop.TargetSource)> -> _SOURCES_
<org.springframework.http.client.SimpleClientHttpResponse: java.io.InputStream getBody()> -> _SOURCES__CWE601_
<org.springframework.security.access.intercept.AbstractSecurityInterceptor: void setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)> -> _SINKS_
<org.springframework.web.servlet.tags.form.HiddenInputTag: void setDisabled(boolean)> -> _SINKS_
<org.springframework.web.portlet.context.PortletWebRequest: java.util.Iterator getHeaderNames()> -> _SOURCES_
<org.springframework.orm.toplink.TopLinkInterceptor: void setExceptionConversionEnabled(boolean)> -> _SINKS_
<org.springframework.web.servlet.tags.Param: void setName(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.DelegatingServletOutputStream: void write(int)> -> _SINKS_
<org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource: java.util.Collection getAllConfigAttributes()> -> _SOURCES_
<org.springframework.orm.hibernate4.LocalSessionFactoryBean: void setEntityInterceptor(org.hibernate.Interceptor)> -> _SINKS_
<org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider: org.springframework.security.core.userdetails.UserDetailsChecker getPreAuthenticationChecks()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.beans.factory.config.BeanReferenceFactoryBean: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.orm.hibernate4.HibernateTemplate: void update(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder: java.lang.String encode(java.lang.CharSequence)> -> _SANITIZERS_
<org.springframework.remoting.rmi.RmiServiceExporter: void setServicePort(int)> -> _SINKS_
<org.springframework.web.util.UriUtils: java.lang.String encodeQuery(java.lang.String,java.lang.String)> -> _SANITIZERS_
<org.springframework.web.servlet.mvc.condition.RequestMethodsRequestCondition: org.springframework.web.servlet.mvc.condition.RequestMethodsRequestCondition matchPreFlight(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.orm.jdo.support.JdoDaoSupport: void setPersistenceManagerFactory(javax.jdo.PersistenceManagerFactory)> -> _SINKS_
<org.springframework.test.annotation.TestAnnotationUtils: long getTimeout(java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder: org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder setRemoveSemicolonContent(boolean)> -> _SINKS_
<org.springframework.scheduling.concurrent.ForkJoinPoolFactoryBean: java.util.concurrent.ForkJoinPool getObject()> -> _SOURCES_
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String)> -> _SOURCES_
<org.springframework.test.context.junit4.SpringJUnit4ClassRunner: void runChild(java.lang.Object,org.junit.runner.notification.RunNotifier)> -> _SINKS_
<org.springframework.web.servlet.tags.form.OptionTag: java.lang.String getLabelValue(java.lang.Object)> -> _CWE079__SOURCES_
<org.springframework.orm.hibernate3.HibernateAccessor: void setEntityInterceptorBeanName(java.lang.String)> -> _SINKS_
<org.springframework.beans.factory.config.RuntimeBeanReference: java.lang.String getBeanName()> -> _CWE078__SOURCES_
<org.springframework.jdbc.support.SQLErrorCodes: void setDataIntegrityViolationCodes(java.lang.String[])> -> _CWE089__SINKS_
<org.springframework.web.socket.config.WebSocketMessageBrokerStats: void setLoggingPeriod(long)> -> _SINKS_
<org.springframework.http.client.support.ProxyFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.jms.config.AbstractJmsListenerEndpoint: void setConcurrency(java.lang.String)> -> _SINKS_
<org.springframework.messaging.support.AbstractMessageChannel: void setBeanName(java.lang.String)> -> _SINKS_
<org.springframework.security.core.userdetails.User: java.lang.String getUsername()> -> _SOURCES__CWE862_
<org.springframework.oxm.jibx.JibxMarshaller: void setStandalone(java.lang.Boolean)> -> _SINKS_
<org.springframework.beans.propertyeditors.CharArrayPropertyEditor: java.lang.String getAsText()> -> _SOURCES_
<org.springframework.messaging.simp.config.MessageBrokerRegistry: org.springframework.messaging.simp.config.MessageBrokerRegistry setPathMatcher(org.springframework.util.PathMatcher)> -> _SINKS_
<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: org.springframework.aop.TargetSource getCustomTargetSource(java.lang.Class,java.lang.String)> -> _SOURCES_
<org.springframework.format.number.money.CurrencyUnitFormatter: javax.money.CurrencyUnit parse(java.lang.String,java.util.Locale)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletRequest: java.lang.Object getAttribute(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.expression.common.LiteralExpression: java.lang.Class getValueType(java.lang.Object)> -> _SOURCES_
<org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder moduleClassLoader(java.lang.ClassLoader)> -> _SOURCES_
<org.springframework.core.io.PathResource: java.io.File getFile()> -> _SOURCES_
<org.springframework.orm.hibernate4.HibernateTemplate: void setQueryCacheRegion(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.view.jasperreports.JasperReportsViewResolver: void setHeaders(java.util.Properties)> -> _SINKS_
<org.springframework.beans.factory.support.BeanDefinitionDefaults: void setAutowireMode(int)> -> _SINKS_
<org.springframework.cache.annotation.AbstractCachingConfiguration: void setConfigurers(java.util.Collection)> -> _SINKS_
<org.springframework.cglib.proxy.Proxy: org.springframework.cglib.proxy.InvocationHandler getInvocationHandler(java.lang.Object)> -> _SOURCES_
<org.springframework.aop.framework.AdvisedSupport: void setPreFiltered(boolean)> -> _SINKS_
<org.springframework.http.HttpHeaders: long getExpires()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.TextareaTag: void setCols(java.lang.String)> -> _SINKS_
<org.springframework.jms.listener.AbstractPollingMessageListenerContainer: void setPubSubNoLocal(boolean)> -> _SINKS_
<org.springframework.web.socket.messaging.StompSubProtocolHandler: void setEncoder(org.springframework.messaging.simp.stomp.StompEncoder)> -> _SINKS_
<org.springframework.jdbc.core.metadata.CallMetaDataContext: void setReturnValueRequired(boolean)> -> _CWE089__SINKS_
<org.springframework.web.servlet.FrameworkServlet: void setContextClass(java.lang.Class)> -> _SINKS_
<org.springframework.orm.hibernate3.support.HibernateDaoSupport: void setHibernateTemplate(org.springframework.orm.hibernate3.HibernateTemplate)> -> _SINKS_
<org.springframework.web.servlet.tags.form.AbstractHtmlInputElementTag: void writeOptionalAttributes(org.springframework.web.servlet.tags.form.TagWriter)> -> _CWE079__SINKS_
<org.springframework.orm.hibernate3.HibernateTemplate: java.lang.Object load(java.lang.Class,java.io.Serializable)> -> _SOURCES_
<org.springframework.web.servlet.FlashMap: void setExpirationTime(long)> -> _SINKS_
<org.springframework.web.socket.sockjs.client.UndertowXhrTransport: org.xnio.XnioWorker getWorker()> -> _SOURCES_
<org.springframework.web.portlet.context.AbstractRefreshablePortletApplicationContext: javax.portlet.PortletContext getPortletContext()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.RadioButtonTag: void writeTagDetails(org.springframework.web.servlet.tags.form.TagWriter)> -> _SINKS_
<org.springframework.test.web.servlet.htmlunit.HtmlUnitRequestBuilder: java.util.Locale parseLocale(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.mock.web.MockServletContext: java.lang.ClassLoader getClassLoader()> -> _SOURCES_
<org.springframework.remoting.caucho.BurlapProxyFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.transaction.event.TransactionalEventListenerFactory: int getOrder()> -> _SOURCES_
<org.springframework.web.servlet.handler.AbstractHandlerMethodMapping: void setDetectHandlerMethodsInAncestorContexts(boolean)> -> _SINKS_
<org.springframework.transaction.jta.JtaTransactionManager: java.util.Properties getJndiEnvironment()> -> _SOURCES_
<org.springframework.jdbc.object.RdbmsOperation: void setFetchSize(int)> -> _CWE089__SINKS_
<org.springframework.mock.web.portlet.ServletWrappingPortletContext: java.lang.String getInitParameter(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.mvc.ParameterizableViewController: void setView(org.springframework.web.servlet.View)> -> _SINKS_
<org.springframework.cglib.core.Block: org.springframework.cglib.core.CodeEmitter getCodeEmitter()> -> _SOURCES_
<org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean: void setName(java.lang.String)> -> _SINKS_
<org.springframework.cache.jcache.interceptor.DefaultJCacheOperationSource: org.springframework.cache.CacheManager getDefaultCacheManager()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: long getDateHeader(java.lang.String)> -> _CWE079__SOURCES__SINKS_
<org.springframework.mail.SimpleMailMessage: void setReplyTo(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletRequest: javax.servlet.http.HttpSession getSession()> -> _SOURCES_
<org.springframework.context.access.ContextSingletonBeanFactoryLocator: org.springframework.beans.factory.access.BeanFactoryLocator getInstance(java.lang.String)> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompHeaders: void setHost(java.lang.String)> -> _SINKS_
<org.springframework.web.bind.ServletRequestUtils: int[] getIntParameters(javax.servlet.ServletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.jms.core.JmsMessagingTemplate: java.lang.Object convertSendAndReceive(java.lang.String,java.lang.Object,java.lang.Class,org.springframework.messaging.core.MessagePostProcessor)> -> _SINKS_
<org.springframework.remoting.caucho.HessianClientInterceptor: void setHessian2(boolean)> -> _SINKS_
<org.springframework.web.servlet.tags.form.AbstractSingleCheckedElementTag: java.lang.Object getLabel()> -> _SOURCES_
<org.springframework.remoting.jaxws.JaxWsSoapFaultException: java.lang.String getFaultCode()> -> _SOURCES_
<org.springframework.scheduling.quartz.SimpleTriggerFactoryBean: void setJobDataMap(org.quartz.JobDataMap)> -> _SINKS_
<org.springframework.web.portlet.ModelAndView: java.util.Map getModelInternal()> -> _SOURCES_
<org.springframework.test.web.client.MockRestServiceServer: org.springframework.test.web.client.ResponseActions expect(org.springframework.test.web.client.ExpectedCount,org.springframework.test.web.client.RequestMatcher)> -> _SINKS_
<org.springframework.messaging.core.AbstractMessageSendingTemplate: void convertAndSend(java.lang.Object,org.springframework.messaging.core.MessagePostProcessor)> -> _SINKS_
<org.springframework.expression.common.LiteralExpression: org.springframework.core.convert.TypeDescriptor getValueTypeDescriptor(org.springframework.expression.EvaluationContext)> -> _SOURCES_
<org.springframework.util.Base64Utils: byte[] encode(byte[])> -> _SANITIZERS_
<org.springframework.test.util.XpathExpectationsHelper: void assertNumber(byte[],java.lang.String,org.hamcrest.Matcher)> -> _SINKS_
<org.springframework.core.env.AbstractEnvironment: org.springframework.core.convert.support.ConfigurableConversionService getConversionService()> -> _SOURCES_
<org.springframework.messaging.handler.invocation.InvocableHandlerMethod: java.lang.String getArgumentResolutionErrorMessage(java.lang.String,int)> -> _SOURCES_
<org.springframework.core.io.UrlResource: java.net.URI getURI()> -> _SOURCES_
<org.springframework.messaging.support.MessageHeaderAccessor: void setReplyChannelName(java.lang.String)> -> _SINKS_
<org.springframework.web.filter.GenericFilterBean: javax.servlet.FilterConfig getFilterConfig()> -> _SOURCES_
<org.springframework.core.io.UrlResource: java.net.URL getURL()> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.AbstractClientSockJsSession: java.util.Map getAttributes()> -> _SOURCES_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.util.concurrent.ListenableFuture postForLocation(java.net.URI,org.springframework.http.HttpEntity)> -> _SINKS_
<org.springframework.aop.support.NameMatchMethodPointcutAdvisor: void setMappedNames(java.lang.String[])> -> _SINKS_
<org.springframework.jms.listener.endpoint.JmsMessageEndpointManager: void setActivationSpecFactory(org.springframework.jms.listener.endpoint.JmsActivationSpecFactory)> -> _SINKS_
<org.springframework.expression.common.TemplateAwareExpressionParser: org.springframework.expression.Expression[] parseExpressions(java.lang.String,org.springframework.expression.ParserContext)> -> _SOURCES__SINKS_
<org.springframework.web.servlet.view.tiles3.TilesViewResolver: void setRenderer(org.apache.tiles.request.render.Renderer)> -> _SINKS_
<org.springframework.jmx.export.naming.KeyNamingStrategy: javax.management.ObjectName getObjectName(java.lang.Object,java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.tags.form.PasswordInputTag: void writeValue(org.springframework.web.servlet.tags.form.TagWriter)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletRequest: void setSecure(boolean)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletRequest: javax.servlet.ServletInputStream getInputStream()> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompHeaders: void setMessageId(java.lang.String)> -> _SINKS_
<org.springframework.jms.connection.CachedMessageConsumer: javax.jms.Topic getTopic()> -> _SOURCES_
<org.springframework.web.servlet.HandlerExecutionChain: void addInterceptor(org.springframework.web.servlet.HandlerInterceptor)> -> _SINKS_
<org.springframework.remoting.support.RemoteInvocation: void setAttributes(java.util.Map)> -> _SINKS_
<org.springframework.core.io.support.PathMatchingResourcePatternResolver: org.springframework.core.io.Resource[] getResources(java.lang.String)> -> _SOURCES_
<org.springframework.web.context.support.WebApplicationContextUtils: org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.servlet.ServletContext)> -> _SOURCES_
<org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler: org.springframework.messaging.simp.SimpMessageMappingInfo getMappingForMethod(java.lang.reflect.Method,java.lang.Class)> -> _SOURCES_
<org.springframework.format.datetime.DateFormatter: void setIso(org.springframework.format.'annotation'.DateTimeFormat$ISO)> -> _SINKS_
<org.springframework.scheduling.concurrent.DefaultManagedTaskScheduler: void setJndiTemplate(org.springframework.jndi.JndiTemplate)> -> _SINKS_
<org.springframework.aop.target.CommonsPoolTargetSource: void setMinIdle(int)> -> _SINKS_
<org.springframework.transaction.interceptor.TransactionAspectSupport: org.springframework.transaction.interceptor.TransactionAttributeSource getTransactionAttributeSource()> -> _SOURCES_
<org.springframework.web.context.request.Log4jNestedDiagnosticContextInterceptor: void preHandle(org.springframework.web.context.request.WebRequest)> -> _SINKS_
<org.springframework.oxm.xstream.XStreamMarshaller: void marshalWriter(java.lang.Object,java.io.Writer,com.thoughtworks.xstream.converters.DataHolder)> -> _SINKS_
<org.springframework.format.datetime.joda.MillisecondInstantPrinter: java.lang.String print(java.lang.Object,java.util.Locale)> -> _SINKS_
<org.springframework.scheduling.commonj.ScheduledTimerListener: void setPeriod(long)> -> _SINKS_
<org.springframework.web.socket.handler.LoggingWebSocketHandlerDecorator: void afterConnectionClosed(org.springframework.web.socket.WebSocketSession,org.springframework.web.socket.CloseStatus)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.beans.factory.support.AbstractBeanFactory: org.springframework.beans.factory.support.RootBeanDefinition getMergedBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.config.BeanDefinition)> -> _SOURCES_
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: java.lang.String[] getAliases(java.lang.String)> -> _SOURCES_
<org.springframework.web.portlet.handler.ParameterMappingInterceptor: void setParameterName(java.lang.String)> -> _SINKS_
<org.springframework.orm.hibernate5.HibernateTemplate: java.lang.Object get(java.lang.String,java.io.Serializable)> -> _SOURCES_
<org.springframework.http.client.support.HttpRequestWrapper: java.net.URI getURI()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.FormTag: void setName(java.lang.String)> -> _SINKS_
<org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer: java.util.List getDecisionVoters(org.springframework.security.config.'annotation'.web.HttpSecurityBuilder)> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class getType(java.lang.String)> -> _SOURCES_
<org.springframework.jms.core.JmsMessagingTemplate: void send(java.lang.String,org.springframework.messaging.Message)> -> _SINKS_
<org.springframework.orm.hibernate3.HibernateInterceptor: org.hibernate.Session getSession()> -> _SOURCES_
<org.springframework.web.util.ContentCachingResponseWrapper: void sendError(int)> -> _SINKS__CWE601_
<org.springframework.orm.hibernate3.HibernateTemplate: void update(java.lang.String,java.lang.Object,org.hibernate.LockMode)> -> _SINKS_
<org.springframework.security.access.expression.AbstractSecurityExpressionHandler: void setRoleHierarchy(org.springframework.security.access.hierarchicalroles.RoleHierarchy)> -> _SINKS_
<org.springframework.web.socket.messaging.StompSubProtocolHandler: org.springframework.messaging.simp.stomp.StompHeaderAccessor afterStompSessionConnected(org.springframework.messaging.Message,org.springframework.messaging.simp.stomp.StompHeaderAccessor,org.springframework.web.socket.WebSocketSession)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.util.concurrent.ListenableFuture delete(java.lang.String,java.lang.Object[])> -> _SINKS_
<org.springframework.web.accept.ContentNegotiationManager: java.util.List resolveMediaTypes(org.springframework.web.context.request.NativeWebRequest)> -> _SINKS_
<org.springframework.transaction.interceptor.CompositeTransactionAttributeSource: org.springframework.transaction.interceptor.TransactionAttributeSource[] getTransactionAttributeSources()> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanDefinition: java.lang.String getDescription()> -> _SOURCES_
<org.springframework.web.servlet.view.velocity.VelocityView: void setVelocityEngine(org.apache.velocity.app.VelocityEngine)> -> _SINKS_
<org.springframework.mock.web.MockServletContext: java.util.Enumeration getAttributeNames()> -> _SOURCES_
<org.springframework.web.util.UriUtils: java.lang.String encodeQueryParam(java.lang.String,java.lang.String)> -> _SANITIZERS_
<org.springframework.messaging.simp.user.DefaultUserDestinationResolver: void setPathMatcher(org.springframework.util.PathMatcher)> -> _SINKS__CWE862_
<org.springframework.mock.web.MockHttpServletResponse: void setBufferSize(int)> -> _SINKS__CWE601_
<org.springframework.web.portlet.context.PortletContextResource: javax.portlet.PortletContext getPortletContext()> -> _SOURCES_
<org.springframework.orm.hibernate5.LocalSessionFactoryBean: void setResourceLoader(org.springframework.core.io.ResourceLoader)> -> _SOURCES__SINKS_
<org.springframework.jmx.export.assembler.MethodExclusionMBeanInfoAssembler: void setIgnoredMethodMappings(java.util.Properties)> -> _SINKS_
<org.springframework.scheduling.concurrent.ExecutorConfigurationSupport: void setThreadNamePrefix(java.lang.String)> -> _SINKS_
<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: org.springframework.validation.MessageCodesResolver getMessageCodesResolver()> -> _SOURCES_
<org.springframework.jmx.export.metadata.ManagedOperationParameter: int getIndex()> -> _SOURCES_
<org.springframework.web.context.support.WebApplicationObjectSupport: void setServletContext(javax.servlet.ServletContext)> -> _SINKS_
<org.springframework.oxm.jibx.JibxMarshaller: java.lang.String getDefaultEncoding()> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompHeaderAccessor: java.lang.String getReceiptId()> -> _SOURCES_
<org.springframework.web.context.ContextLoaderListener: org.springframework.web.context.ContextLoader createContextLoader()> -> _SOURCES_
<org.springframework.web.multipart.commons.CommonsFileUploadSupport: org.apache.commons.fileupload.FileUpload getFileUpload()> -> _SOURCES_
<org.springframework.core.ResolvableType: org.springframework.core.ResolvableType getNested(int,java.util.Map)> -> _SOURCES_
<org.springframework.web.bind.ServletRequestUtils: long getLongParameter(javax.servlet.ServletRequest,java.lang.String,long)> -> _SOURCES_
<org.springframework.util.xml.XMLEventStreamReader: java.lang.String getAttributeType(int)> -> _SOURCES_
<org.springframework.ui.freemarker.FreeMarkerConfigurationFactory: void setResourceLoader(org.springframework.core.io.ResourceLoader)> -> _SOURCES__SINKS_
<org.springframework.orm.jpa.persistenceunit.MutablePersistenceUnitInfo: void setTransactionType(javax.persistence.spi.PersistenceUnitTransactionType)> -> _SINKS_
<org.springframework.cglib.core.CodeEmitter: void load_args()> -> _SOURCES_
<org.springframework.web.servlet.view.xml.MarshallingView: void setModelKey(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.core.metadata.TableMetaDataContext: java.lang.String getSchemaName()> -> _CWE089__SOURCES_
<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: void setApplyCommonInterceptorsFirst(boolean)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompEncoder: void writeHeaders(org.springframework.messaging.simp.stomp.StompCommand,java.util.Map,byte[],java.io.DataOutputStream)> -> _SINKS_
<org.springframework.http.MediaTypeEditor: void setAsText(java.lang.String)> -> _SINKS_
<org.springframework.web.socket.server.standard.ServletServerContainerFactoryBean: java.lang.Integer getMaxBinaryMessageBufferSize()> -> _SOURCES_
<org.springframework.web.portlet.bind.PortletRequestUtils: long getLongParameter(javax.portlet.PortletRequest,java.lang.String,long)> -> _SOURCES_
<org.springframework.test.util.XpathExpectationsHelper: void exists(byte[],java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.tags.form.AbstractHtmlInputElementTag: void setOnfocus(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.mock.web.MockServletContext: void log(java.lang.String,java.lang.Throwable)> -> _SINKS_
<org.springframework.aop.target.EmptyTargetSource: java.lang.Object getTarget()> -> _SOURCES_
<org.springframework.jdbc.core.namedparam.ParsedSql: int getTotalParameterCount()> -> _CWE089__SOURCES_
<org.springframework.web.servlet.support.RequestContext: java.lang.String getContextPath()> -> _SOURCES_
<org.springframework.jms.core.JmsTemplate: javax.jms.Destination getDefaultDestination()> -> _SOURCES_
<org.springframework.web.context.request.async.DeferredResultInterceptorChain: void applyPreProcess(org.springframework.web.context.request.NativeWebRequest,org.springframework.web.context.request.async.DeferredResult)> -> _SINKS_
<org.springframework.web.socket.sockjs.client.XhrClientSockJsSession: int getBinaryMessageSizeLimit()> -> _SOURCES_
<org.springframework.web.socket.sockjs.support.AbstractSockJsService: int getHttpMessageCacheSize()> -> _SOURCES_
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object getObjectFromFactoryBean(org.springframework.beans.factory.FactoryBean,java.lang.String,boolean)> -> _SOURCES_
<org.springframework.web.context.support.AnnotationConfigWebApplicationContext: void setScopeMetadataResolver(org.springframework.context.'annotation'.ScopeMetadataResolver)> -> _SINKS_
<org.springframework.jdbc.core.simple.AbstractJdbcCall: java.lang.String getProcedureName()> -> _CWE089__SOURCES_
<org.springframework.beans.factory.support.AbstractBeanDefinition: void setLazyInit(boolean)> -> _SINKS_
<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor: void setOrder(int)> -> _SINKS_
<org.springframework.test.web.client.match.MockRestRequestMatchers: org.springframework.test.web.client.match.XpathRequestMatchers xpath(java.lang.String,java.util.Map,java.lang.Object[])> -> _SOURCES_
<org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean: void setMaxPoolSize(int)> -> _SINKS_
<org.springframework.mock.web.HeaderValueHolder: java.util.List getStringValues()> -> _SOURCES_
<org.springframework.web.servlet.handler.AbstractHandlerMethodMapping: org.springframework.web.method.HandlerMethod getHandlerInternal(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.aop.aspectj.AbstractAspectJAdvice: org.springframework.aop.aspectj.AspectInstanceFactory getAspectInstanceFactory()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockActionRequest: java.lang.String getLifecyclePhase()> -> _SOURCES_
<org.springframework.cglib.transform.TransformingClassLoader: org.springframework.cglib.core.ClassGenerator getGenerator(org.springframework.asm.ClassReader)> -> _SOURCES_
<org.springframework.test.context.ContextConfigurationAttributes: java.lang.String getName()> -> _SOURCES_
<org.springframework.jmx.access.MBeanClientInterceptor: java.lang.Object handleConnectFailure(org.aopalliance.intercept.MethodInvocation,java.lang.Exception)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.expression.spel.support.ReflectionHelper: java.lang.Object[] setupArgumentsForVarargsInvocation(java.lang.Class[],java.lang.Object[])> -> _SINKS_
<org.springframework.orm.jpa.support.AsyncRequestInterceptor: void beforeConcurrentHandling(org.springframework.web.context.request.NativeWebRequest,org.springframework.web.context.request.async.DeferredResult)> -> _SINKS_
<org.springframework.jms.config.JmsListenerEndpointRegistrar: void setEndpointRegistry(org.springframework.jms.config.JmsListenerEndpointRegistry)> -> _SINKS_
<org.springframework.web.servlet.mvc.ServletForwardingController: void setServletName(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletRequest: void setPreferences(javax.portlet.PortletPreferences)> -> _SINKS_
<org.springframework.expression.spel.support.StandardEvaluationContext: void setBeanResolver(org.springframework.expression.BeanResolver)> -> _SINKS_
<org.springframework.util.ClassUtils: java.lang.reflect.Method getMostSpecificMethod(java.lang.reflect.Method,java.lang.Class)> -> _SOURCES_
<org.springframework.orm.jpa.support.JpaDaoSupport: void setJpaTemplate(org.springframework.orm.jpa.JpaTemplate)> -> _SINKS_
<org.springframework.core.env.CompositePropertySource: java.lang.Object getProperty(java.lang.String)> -> _SOURCES_
<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.messaging.simp.stomp.DefaultStompSession: void execute(org.springframework.messaging.Message)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.DeferredResultMethodReturnValueHandler: org.springframework.web.servlet.mvc.method.'annotation'.DeferredResultAdapter getAdapterFor(java.lang.Class)> -> _SOURCES_
<org.springframework.test.context.TestContextManager: void registerTestExecutionListeners(java.util.List)> -> _SINKS_
<org.springframework.web.multipart.support.AbstractMultipartHttpServletRequest: java.util.Iterator getFileNames()> -> _SOURCES_
<org.springframework.jca.cci.connection.ConnectionSpecConnectionFactoryAdapter: void removeConnectionSpecFromCurrentThread()> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.view.json.MappingJackson2JsonView: void setJsonpParameterNames(java.util.Set)> -> _SINKS_
<org.springframework.objenesis.instantiator.sun.MagicInstantiator: byte[] writeExtendingClass(java.lang.Class,java.lang.String)> -> _SINKS_
<org.springframework.remoting.jaxws.LocalJaxWsServiceFactory: java.lang.String getNamespaceUri()> -> _SOURCES_
<org.springframework.context.support.AbstractApplicationContext: org.springframework.beans.factory.config.AutowireCapableBeanFactory getAutowireCapableBeanFactory()> -> _SOURCES_
<org.springframework.ui.freemarker.SpringTemplateLoader: long getLastModified(java.lang.Object)> -> _SOURCES_
<org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder: org.springframework.security.config.'annotation'.authentication.builders.AuthenticationManagerBuilder authenticationEventPublisher(org.springframework.security.authentication.AuthenticationEventPublisher)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.mvc.UrlFilenameViewController: java.lang.String getPrefix()> -> _SOURCES_
<org.springframework.jmx.support.NotificationListenerHolder: java.lang.Object getHandback()> -> _SOURCES_
<org.springframework.messaging.simp.SimpMessagingTemplate: void setHeaderInitializer(org.springframework.messaging.support.MessageHeaderInitializer)> -> _SINKS_
<org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader: groovy.lang.Binding getBinding()> -> _SOURCES_
<org.springframework.context.support.MessageSourceAccessor: java.lang.String getMessage(java.lang.String)> -> _SOURCES_
<org.springframework.beans.factory.config.PropertyPathFactoryBean: void setTargetObject(java.lang.Object)> -> _SINKS_
<org.springframework.remoting.rmi.JndiRmiClientInterceptor: java.lang.Object handleRemoteConnectFailure(org.aopalliance.intercept.MethodInvocation,java.lang.Exception)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.test.web.client.match.XpathRequestMatchers: org.springframework.test.web.client.RequestMatcher string(org.hamcrest.Matcher)> -> _SOURCES_
<org.springframework.transaction.support.DefaultTransactionDefinition: void setTimeout(int)> -> _SINKS_
<org.springframework.transaction.support.DefaultTransactionDefinition: java.lang.StringBuffer getDefinitionDescription()> -> _SOURCES_
<org.springframework.jca.endpoint.GenericMessageEndpointFactory: void setMessageListener(java.lang.Object)> -> _SINKS_
<org.springframework.mock.web.MockBodyContent: void print(long)> -> _SINKS_
<org.springframework.web.servlet.view.velocity.VelocityView: void setDateToolAttribute(java.lang.String)> -> _SINKS_
<org.springframework.util.ConcurrentReferenceHashMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)> -> _SINKS_
<org.springframework.jms.support.destination.JmsDestinationAccessor: void setPubSubDomain(boolean)> -> _SINKS_
<org.springframework.orm.hibernate4.HibernateTemplate: java.lang.Object get(java.lang.String,java.io.Serializable)> -> _SOURCES_
<org.springframework.core.env.PropertySource: java.lang.Object getSource()> -> _SOURCES_
<org.springframework.web.util.WebUtils: javax.servlet.http.Cookie getCookie(javax.servlet.http.HttpServletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.util.xml.StaxEventXMLReader: org.xml.sax.Attributes getAttributes(javax.xml.stream.events.StartElement)> -> _SOURCES_
<org.springframework.web.util.UriUtils: java.lang.String encodePath(java.lang.String,java.lang.String)> -> _SANITIZERS_
<org.springframework.mock.web.portlet.MockPortletContext: java.util.Set getResourcePaths(java.lang.String)> -> _SOURCES_
<org.springframework.messaging.simp.SimpMessageTypeMessageCondition: java.lang.String getToStringInfix()> -> _SOURCES_
<org.springframework.security.authentication.jaas.JaasAuthenticationProvider: java.lang.String convertLoginConfigToUrl()> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.socket.WebSocketHttpHeaders: void setAll(java.util.Map)> -> _SINKS_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.util.concurrent.ListenableFuture put(java.lang.String,org.springframework.http.HttpEntity,java.lang.Object[])> -> _SINKS_
<org.springframework.web.util.UriComponents: java.lang.String getFragment()> -> _SOURCES_
<org.springframework.orm.toplink.TopLinkAccessor: void setJdbcExceptionTranslator(org.springframework.jdbc.support.SQLExceptionTranslator)> -> _SINKS_
<org.springframework.remoting.httpinvoker.HttpInvokerClientInterceptor: org.springframework.remoting.support.RemoteInvocationResult executeRequest(org.springframework.remoting.support.RemoteInvocation)> -> _CWE078__SINKS_
<org.springframework.jms.listener.adapter.MessageListenerAdapter: java.lang.String getListenerMethodName(javax.jms.Message,java.lang.Object)> -> _SOURCES_
<org.springframework.beans.AbstractNestablePropertyAccessor: org.springframework.beans.AbstractNestablePropertyAccessor getNestedPropertyAccessor(java.lang.String)> -> _SOURCES_
<org.springframework.aop.aspectj.AbstractAspectJAdvice: org.springframework.core.ParameterNameDiscoverer createParameterNameDiscoverer()> -> _SOURCES_
<org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder: org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder setName(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.orm.jdo.TransactionAwarePersistenceManagerFactoryProxy: void setTargetPersistenceManagerFactory(javax.jdo.PersistenceManagerFactory)> -> _SINKS_
<org.springframework.remoting.jaxws.JaxWsPortClientInterceptor: java.lang.String getUsername()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurer: org.springframework.security.config.http.SessionCreationPolicy getSessionCreationPolicy()> -> _SOURCES_
<org.springframework.mail.javamail.ConfigurableMimeFileTypeMap: java.lang.String getContentType(java.io.File)> -> _SOURCES_
<org.springframework.http.client.OkHttp3ClientHttpResponse: org.springframework.http.HttpHeaders getHeaders()> -> _SOURCES__CWE601_
<org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver: void setArgumentResolvers(java.util.List)> -> _SINKS_
<org.springframework.orm.hibernate3.HibernateTransactionManager: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.beans.propertyeditors.ClassArrayEditor: java.lang.String getAsText()> -> _SOURCES_
<org.springframework.orm.hibernate3.AbstractSessionFactoryBean: void setExposeTransactionAwareSessionFactory(boolean)> -> _SINKS_
<org.springframework.jca.cci.connection.DelegatingConnectionFactory: javax.resource.cci.Connection getConnection(javax.resource.cci.ConnectionSpec)> -> _CWE306__SOURCES__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer: java.lang.String getPasswordParameter()> -> _SOURCES_
<org.springframework.web.socket.sockjs.frame.Jackson2SockJsMessageCodec: java.lang.String[] decodeInputStream(java.io.InputStream)> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanDefinition: java.lang.Class getBeanClass()> -> _SOURCES_
<org.springframework.aop.aspectj.annotation.AspectMetadata: org.springframework.aop.Pointcut getPerClausePointcut()> -> _SOURCES_
<org.springframework.core.Constants: java.util.Map getFieldCache()> -> _SOURCES_
<org.springframework.scheduling.concurrent.DefaultManagedTaskScheduler: void setJndiEnvironment(java.util.Properties)> -> _SINKS_
<org.springframework.mock.web.MockRequestDispatcher: org.springframework.mock.web.MockHttpServletResponse getMockHttpServletResponse(javax.servlet.ServletResponse)> -> _SOURCES_
<org.springframework.orm.jpa.EntityManagerFactoryAccessor: void setEntityManagerFactory(javax.persistence.EntityManagerFactory)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler: void setSystemPasscode(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.mvc.condition.HeadersRequestCondition: java.util.Collection parseExpressions(java.lang.String[])> -> _SOURCES_
<org.springframework.web.servlet.support.WebContentGenerator: org.springframework.http.CacheControl getCacheControl()> -> _SOURCES_
<org.springframework.expression.common.CompositeStringExpression: java.lang.String getExpressionString()> -> _SOURCES_
<org.springframework.security.authentication.dao.SystemWideSaltSource: void setSystemWideSalt(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.tags.form.CheckboxTag: int writeTagContent(org.springframework.web.servlet.tags.form.TagWriter)> -> _SINKS_
<org.springframework.scheduling.concurrent.ScheduledExecutorTask: java.lang.Runnable getRunnable()> -> _SOURCES_
<org.springframework.jms.listener.endpoint.JmsMessageEndpointManager: void setActivationSpecConfig(org.springframework.jms.listener.endpoint.JmsActivationSpecConfig)> -> _SINKS_
<org.springframework.test.context.MergedContextConfiguration: java.lang.String[] getPropertySourceLocations()> -> _SOURCES_
<org.springframework.beans.factory.config.ListFactoryBean: void setSourceList(java.util.List)> -> _SINKS_
<org.springframework.ui.freemarker.FreeMarkerConfigurationFactory: freemarker.cache.TemplateLoader getAggregateTemplateLoader(java.util.List)> -> _SOURCES_
<org.springframework.orm.jdo.support.JdoDaoSupport: javax.jdo.PersistenceManager getPersistenceManager()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.JeeConfigurer: org.springframework.security.config.'annotation'.web.configurers.JeeConfigurer authenticatedUserDetailsService(org.springframework.security.core.userdetails.AuthenticationUserDetailsService)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.mock.web.MockHttpServletResponse: javax.servlet.http.Cookie[] getCookies()> -> _SOURCES__CWE601_
<org.springframework.web.context.support.RequestHandledEvent: long getProcessingTimeMillis()> -> _SOURCES_
<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getRootContextObject()> -> _SOURCES_
<org.springframework.context.support.DelegatingMessageSource: java.lang.String getMessage(java.lang.String,java.lang.Object[],java.lang.String,java.util.Locale)> -> _SOURCES_
<org.springframework.aop.TruePointcut: org.springframework.aop.MethodMatcher getMethodMatcher()> -> _SOURCES_
<org.springframework.mock.web.MockFilterConfig: java.lang.String getFilterName()> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration: org.springframework.web.servlet.resource.ResourceHttpRequestHandler getRequestHandler()> -> _SOURCES_
<org.springframework.orm.toplink.support.CommonsLoggingSessionLog904: java.lang.String getMessageString(oracle.toplink.sessions.SessionLogEntry)> -> _SOURCES_
<org.springframework.cache.interceptor.CacheAspectSupport: java.lang.Object execute(org.springframework.cache.interceptor.CacheOperationInvoker,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])> -> _CWE078__SINKS_
<org.springframework.web.servlet.view.RedirectView: void setHttp10Compatible(boolean)> -> _SINKS_
<org.springframework.orm.hibernate4.HibernateJdbcException: java.lang.String getSql()> -> _CWE089__SOURCES_
<org.springframework.messaging.simp.stomp.StompHeaders: org.springframework.util.MimeType getContentType()> -> _SOURCES_
<org.springframework.remoting.rmi.RmiServiceExporter: void setReplaceExistingBinding(boolean)> -> _SINKS_
<org.springframework.jdbc.datasource.AbstractDataSource: java.io.PrintWriter getLogWriter()> -> _CWE089__SOURCES_
<org.springframework.jms.remoting.JmsInvokerClientInterceptor: void setRemoteInvocationFactory(org.springframework.remoting.support.RemoteInvocationFactory)> -> _SINKS_
<org.springframework.jms.listener.AbstractPollingMessageListenerContainer: void setTransactionManager(org.springframework.transaction.PlatformTransactionManager)> -> _SINKS_
<org.springframework.scheduling.quartz.CronTriggerBean: void setBeanName(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletResponse: java.lang.String encodeRedirectUrl(java.lang.String)> -> _SANITIZERS__CWE079__CWE601_
<org.springframework.jms.listener.adapter.MessageListenerAdapter102: void sendResponse(javax.jms.Session,javax.jms.Destination,javax.jms.Message)> -> _SINKS_
<org.springframework.web.client.MessageBodyClientHttpResponseWrapper: int getRawStatusCode()> -> _SOURCES__CWE601_
<org.springframework.expression.common.TemplateAwareExpressionParser: org.springframework.expression.Expression parseTemplate(java.lang.String,org.springframework.expression.ParserContext)> -> _SOURCES__SINKS_
<org.springframework.core.io.support.PropertiesLoaderUtils: java.util.Properties loadAllProperties(java.lang.String)> -> _SOURCES_
<org.springframework.web.method.support.ModelAndViewContainer: java.lang.String getViewName()> -> _SOURCES_
<org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor: java.lang.String getAdviceBeanName()> -> _SOURCES_
<org.springframework.web.context.request.async.DeferredResult: void setResultHandler(org.springframework.web.context.request.async.DeferredResult$DeferredResultHandler)> -> _SINKS_
<org.springframework.beans.factory.support.AbstractBeanDefinition: void setResourceDescription(java.lang.String)> -> _SINKS_
<org.springframework.scheduling.config.ExecutorBeanDefinitionParser: java.lang.String getBeanClassName(org.w3c.dom.Element)> -> _SOURCES_
<org.springframework.util.ResponseTimeMonitorImpl: int getAverageResponseTimeMillis()> -> _SOURCES__CWE601_
<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void handleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)> -> _SINKS_
<org.springframework.objenesis.SpringObjenesis: org.springframework.objenesis.instantiator.ObjectInstantiator getInstantiatorOf(java.lang.Class)> -> _SOURCES_
<org.springframework.web.util.OpaqueUriComponents: java.util.List getPathSegments()> -> _SOURCES_
<org.springframework.scheduling.concurrent.ScheduledExecutorTask: void setTimeUnit(java.util.concurrent.TimeUnit)> -> _SINKS_
<org.springframework.test.web.servlet.TestDispatcherServlet: org.springframework.web.servlet.ModelAndView processHandlerException(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)> -> _SINKS_
<org.springframework.context.config.PropertyOverrideBeanDefinitionParser: java.lang.Class getBeanClass(org.w3c.dom.Element)> -> _SOURCES_
<org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder: org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder setUseTrailingSlashPatternMatch(boolean)> -> _SINKS_
<org.springframework.web.bind.MissingServletRequestParameterException: java.lang.String getParameterName()> -> _SOURCES__CWE601_
<org.springframework.util.MethodInvoker: void setTargetObject(java.lang.Object)> -> _SINKS_
<org.springframework.web.socket.client.WebSocketConnectionManager: void setOrigin(java.lang.String)> -> _SINKS_
<org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder: java.lang.Object getOrBuild()> -> _SOURCES_
<org.springframework.security.authentication.dao.DaoAuthenticationProvider: void additionalAuthenticationChecks(org.springframework.security.core.userdetails.UserDetails,org.springframework.security.authentication.UsernamePasswordAuthenticationToken)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.orm.toplink.TopLinkAccessor: void setSessionFactory(org.springframework.orm.toplink.SessionFactory)> -> _SINKS_
<org.springframework.mock.web.MockBodyContent: void print(java.lang.String)> -> _SINKS_
<org.springframework.context.annotation.ComponentScanBeanDefinitionParser: void parseBeanNameGenerator(org.w3c.dom.Element,org.springframework.context.'annotation'.ClassPathBeanDefinitionScanner)> -> _SOURCES_
<org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.security.config.annotation.AbstractSecurityBuilder: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.security.authentication.event.LoggerListener: void setLogInteractiveAuthenticationSuccessEvents(boolean)> -> _CWE306__SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.expression.common.TemplateParserContext: java.lang.String getExpressionSuffix()> -> _SOURCES_
<org.springframework.asm.commons.GeneratorAdapter: org.springframework.asm.Type getLocalType(int)> -> _SOURCES_
<org.springframework.web.servlet.handler.SimpleMappingExceptionResolver: java.util.Map getStatusCodesAsMap()> -> _SOURCES_
<org.springframework.orm.ibatis.SqlMapClientFactoryBean: void setConfigLocations(org.springframework.core.io.Resource[])> -> _SINKS_
<org.springframework.jmx.export.assembler.MethodExclusionMBeanInfoAssembler: boolean includeReadAttribute(java.lang.reflect.Method,java.lang.String)> -> _SOURCES_
<org.springframework.test.context.web.WebTestContextBootstrapper: java.lang.Class getDefaultContextLoaderClass(java.lang.Class)> -> _SOURCES_
<org.springframework.web.client.RestTemplate: org.springframework.http.ResponseEntity exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,org.springframework.core.ParameterizedTypeReference,java.lang.Object[])> -> _SINKS_
<org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag: java.lang.Object getBoundValue()> -> _SOURCES_
<org.springframework.validation.beanvalidation.LocalValidatorFactoryBean: void setTraversableResolver(javax.validation.TraversableResolver)> -> _SINKS_
<org.springframework.dao.annotation.PersistenceExceptionTranslationAdvisor: org.aopalliance.aop.Advice getAdvice()> -> _SOURCES_
<org.springframework.context.annotation.ClassPathBeanDefinitionScanner: void setAutowireCandidatePatterns(java.lang.String[])> -> _SINKS_
<org.springframework.context.weaving.DefaultContextLoadTimeWeaver: void setBeanClassLoader(java.lang.ClassLoader)> -> _SOURCES__SINKS_
<org.springframework.jdbc.support.lob.DefaultLobHandler: java.io.InputStream getBlobAsBinaryStream(java.sql.ResultSet,int)> -> _CWE089__SOURCES_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.validation.MessageCodesResolver getMessageCodesResolver()> -> _SOURCES_
<org.springframework.expression.spel.support.StandardEvaluationContext: void setVariable(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.security.provisioning.JdbcUserDetailsManager: void setDeleteUserAuthoritiesSql(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.aop.interceptor.ExposeBeanNameAdvisors: java.lang.String getBeanName(org.aopalliance.intercept.MethodInvocation)> -> _SOURCES_
<org.springframework.format.datetime.standard.DateTimeFormatterFactory: void setDateStyle(java.time.format.FormatStyle)> -> _SINKS_
<org.springframework.web.socket.PongMessage: int getPayloadLength()> -> _SOURCES_
<org.springframework.core.annotation.AnnotatedElementUtils: java.util.Set getMergedRepeatableAnnotations(java.lang.reflect.AnnotatedElement,java.lang.Class,java.lang.Class)> -> _SOURCES_
<org.springframework.format.number.AbstractNumberFormatter: java.lang.String print(java.lang.Object,java.util.Locale)> -> _SINKS_
<org.springframework.web.client.RestTemplate: java.lang.Object postForObject(java.lang.String,java.lang.Object,java.lang.Class,java.lang.Object[])> -> _SINKS_
<org.springframework.jms.listener.AbstractPollingMessageListenerContainer: javax.jms.Session getSession(org.springframework.jms.connection.JmsResourceHolder)> -> _SOURCES_
<org.springframework.scheduling.backportconcurrent.ThreadPoolTaskExecutor: void setQueueCapacity(int)> -> _SINKS_
<org.springframework.web.bind.ServletRequestUtils: java.lang.Integer getIntParameter(javax.servlet.ServletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.remoting.jaxws.LocalJaxWsServiceFactory: void setHandlerResolver(javax.xml.ws.handler.HandlerResolver)> -> _SINKS_
<org.springframework.messaging.handler.annotation.support.HeaderMethodArgumentResolver: java.util.Map getNativeHeaders(org.springframework.messaging.Message)> -> _SOURCES_
<org.springframework.web.servlet.view.jasperreports.JasperReportsXlsxView: net.sf.jasperreports.engine.JRExporter createExporter()> -> _SOURCES_
<org.springframework.ejb.support.AbstractMessageDrivenBean: void setMessageDrivenContext(javax.ejb.MessageDrivenContext)> -> _SINKS_
<org.springframework.cglib.proxy.Enhancer: void setCallbackTypes(java.lang.Class[])> -> _SINKS_
<org.springframework.beans.factory.parsing.CompositeComponentDefinition: java.lang.String getName()> -> _SOURCES_
<org.springframework.util.backoff.ExponentialBackOff: double getMultiplier()> -> _SOURCES_
<org.springframework.scheduling.concurrent.ForkJoinPoolFactoryBean: void setAwaitTerminationSeconds(int)> -> _SINKS_
<org.springframework.beans.factory.support.AbstractBeanDefinitionReader: org.springframework.beans.factory.support.BeanDefinitionRegistry getBeanFactory()> -> _SOURCES_
<org.springframework.jms.core.JmsTemplate: void setMessageTimestampEnabled(boolean)> -> _SINKS_
<org.springframework.oxm.jaxb.Jaxb2Marshaller: void setMarshallerListener(javax.xml.bind.Marshaller$Listener)> -> _SINKS_
<org.springframework.beans.factory.generic.GenericBeanFactoryAccessor: java.util.Map getBeansOfType(java.lang.Class)> -> _SOURCES_
<org.springframework.util.comparator.CompoundComparator: int getComparatorCount()> -> _SOURCES_
<org.springframework.web.filter.CorsFilter: void setCorsProcessor(org.springframework.web.cors.CorsProcessor)> -> _SINKS_
<org.springframework.jdbc.core.metadata.TableParameterMetaData: int getSqlType()> -> _CWE089__SOURCES_
<org.springframework.context.support.ReloadableResourceBundleMessageSource: void setBasenames(java.lang.String[])> -> _SINKS_
<org.springframework.mail.SimpleMailMessage: java.lang.String getText()> -> _SOURCES_
<org.springframework.jmx.export.MBeanExporter: void setExcludedBeans(java.lang.String[])> -> _SINKS_
<org.springframework.beans.propertyeditors.CharacterEditor: java.lang.String getAsText()> -> _SOURCES_
<org.springframework.expression.spel.standard.SpelExpression: java.lang.Object getValue(org.springframework.expression.EvaluationContext)> -> _SOURCES_
<org.springframework.messaging.simp.config.StompBrokerRelayRegistration: org.springframework.messaging.simp.config.StompBrokerRelayRegistration setClientLogin(java.lang.String)> -> _CWE306__SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.context.support.AbstractMessageSource: java.lang.String getMessageInternal(java.lang.String,java.lang.Object[],java.util.Locale)> -> _SOURCES_
<org.springframework.test.util.ReflectionTestUtils: void setField(java.lang.Object,java.lang.Class,java.lang.String,java.lang.Object,java.lang.Class)> -> _SINKS_
<org.springframework.http.client.support.InterceptingAsyncHttpAccessor: void setInterceptors(java.util.List)> -> _SINKS_
<org.springframework.web.multipart.support.StringMultipartFileEditor: void setAsText(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.security.authentication.ProviderManager: boolean isEraseCredentialsAfterAuthentication()> -> _AUTHENTICATIONS_NEUTRAL__CWE306_
<org.springframework.security.config.http.UserDetailsServiceFactoryBean: java.util.Map getBeansOfType(java.lang.Class)> -> _SOURCES__CWE862_
<org.springframework.jca.work.jboss.JBossWorkManagerTaskExecutor: javax.resource.spi.work.WorkManager getDefaultWorkManager()> -> _SOURCES_
<org.springframework.objenesis.instantiator.sun.SunReflectionFactoryHelper: java.lang.reflect.Method getNewConstructorForSerializationMethod(java.lang.Class)> -> _SOURCES_
<org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser: org.springframework.beans.factory.config.RuntimeBeanReference getAsyncExecutor(org.w3c.dom.Element)> -> _SOURCES__SINKS_
<org.springframework.web.socket.sockjs.client.AbstractXhrTransport: void executeSendRequest(java.net.URI,org.springframework.http.HttpHeaders,org.springframework.web.socket.TextMessage)> -> _CWE078__SINKS_
<org.springframework.test.context.web.socket.MockServerContainer: int getDefaultMaxBinaryMessageBufferSize()> -> _SOURCES_
<org.springframework.mail.javamail.MimeMailMessage: void setSubject(java.lang.String)> -> _SINKS_
<org.springframework.remoting.httpinvoker.CommonsHttpInvokerRequestExecutor: org.springframework.remoting.support.RemoteInvocationResult doExecuteRequest(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration,java.io.ByteArrayOutputStream)> -> _CWE078__SINKS_
<org.springframework.messaging.simp.stomp.StompHeaderAccessor: java.lang.String getReceipt()> -> _SOURCES_
<org.springframework.beans.factory.config.CustomEditorConfigurer: void setOrder(int)> -> _SINKS_
<org.springframework.jndi.JndiAccessor: org.springframework.jndi.JndiTemplate getJndiTemplate()> -> _SOURCES_
<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.util.List getPropertyAccessorsToTry(java.lang.Object,java.util.List)> -> _SOURCES_
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Class getType(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.view.tiles3.SpringBeanPreparerFactory: org.apache.tiles.preparer.ViewPreparer getPreparer(java.lang.String,org.springframework.web.context.WebApplicationContext)> -> _SOURCES_
<org.springframework.http.client.OkHttpAsyncClientHttpRequest: org.springframework.util.concurrent.ListenableFuture executeInternal(org.springframework.http.HttpHeaders,byte[])> -> _SINKS_
<org.springframework.core.io.DescriptiveResource: java.lang.String getDescription()> -> _SOURCES_
<org.springframework.aop.aspectj.SimpleAspectInstanceFactory: java.lang.Class getAspectClass()> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompClientSupport: void setDefaultHeartbeat(long[])> -> _SINKS_
<org.springframework.orm.hibernate3.HibernateTransactionManager: org.hibernate.Interceptor getEntityInterceptor()> -> _SOURCES_
<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: java.lang.String getDestroyMethod()> -> _SOURCES_
<org.springframework.http.converter.xml.AbstractXmlHttpMessageConverter: java.lang.Object readInternal(java.lang.Class,org.springframework.http.HttpInputMessage)> -> _SOURCES_
<org.springframework.web.portlet.FrameworkPortlet: void setPublishEvents(boolean)> -> _SINKS_
<org.springframework.scripting.groovy.GroovyScriptFactory: groovy.lang.GroovyClassLoader getGroovyClassLoader()> -> _SOURCES_
<org.springframework.messaging.simp.user.MultiServerUserRegistry: int getOrder()> -> _SOURCES__CWE862_
<org.springframework.web.socket.messaging.StompSubProtocolHandler: void setMessageSizeLimit(int)> -> _SINKS_
<org.springframework.scheduling.commonj.TimerManagerFactoryBean: void setTimerManagerName(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: java.lang.String getSchemaName()> -> _CWE089__SOURCES_
<org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver: org.springframework.web.servlet.ModelAndView handleConversionNotSupported(org.springframework.beans.ConversionNotSupportedException,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)> -> _SINKS_
<org.springframework.format.datetime.standard.DateTimeContext: void setChronology(java.time.chrono.Chronology)> -> _SINKS_
<org.springframework.web.servlet.support.RequestContext: java.lang.String getMessage(java.lang.String,java.lang.Object[],java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.messaging.simp.stomp.StompClientSupport: void setMessageConverter(org.springframework.messaging.converter.MessageConverter)> -> _SINKS_
<org.springframework.security.config.annotation.web.configurers.ExceptionHandlingConfigurer: org.springframework.security.web.access.AccessDeniedHandler getAccessDeniedHandler()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer: org.springframework.security.config.'annotation'.web.configurers.AbstractAuthenticationFilterConfigurer successHandler(org.springframework.security.web.authentication.AuthenticationSuccessHandler)> -> _SINKS_
<org.springframework.scheduling.support.PeriodicTrigger: java.util.Date nextExecutionTime(org.springframework.scheduling.TriggerContext)> -> _SINKS_
<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: void setNullValue(java.lang.String)> -> _SINKS_
<org.springframework.expression.spel.CodeFlow: java.lang.String getClassName()> -> _SOURCES_
<org.springframework.jms.connection.CachedMessageProducer: void setPriority(int)> -> _SINKS_
<org.springframework.web.context.support.XmlWebApplicationContext: void initBeanDefinitionReader(org.springframework.beans.factory.xml.XmlBeanDefinitionReader)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletContext: void addContainerRuntimeOption(java.lang.String)> -> _SINKS_
<org.springframework.scheduling.quartz.DelegatingJob: java.lang.Runnable getDelegate()> -> _SOURCES_
<org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl: void setGroupAuthoritiesByUsernameQuery(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.messaging.simp.stomp.StompHeaderAccessor: org.springframework.messaging.simp.stomp.StompCommand getCommand(java.util.Map)> -> _SOURCES_
<org.springframework.security.config.DebugBeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.http.converter.xml.SourceHttpMessageConverter: java.lang.Long getContentLength(javax.xml.transform.Source,org.springframework.http.MediaType)> -> _SOURCES_
<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: void setPlaceholderSuffix(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletRequest: int getLocalPort()> -> _SOURCES_
<org.springframework.transaction.interceptor.TransactionProxyFactoryBean: void setTransactionAttributes(java.util.Properties)> -> _SINKS_
<org.springframework.web.servlet.tags.HtmlEscapingAwareTag: boolean isResponseEncodedHtmlEscape()> -> _SANITIZERS__CWE079_
<org.springframework.mock.web.portlet.MockPortletRequest: java.util.Enumeration getParameterNames()> -> _SOURCES_
<org.springframework.orm.hibernate5.LocalSessionFactoryBuilder: org.springframework.orm.hibernate5.LocalSessionFactoryBuilder setMultiTenantConnectionProvider(org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.jmx.export.metadata.ManagedMetric: void setCategory(java.lang.String)> -> _SINKS_
<org.springframework.scheduling.commonj.ScheduledTimerListener: void setRunnable(java.lang.Runnable)> -> _SINKS_
<org.springframework.jms.remoting.JmsInvokerServiceExporter: void onMessage(javax.jms.Message,javax.jms.Session)> -> _SINKS_
<org.springframework.orm.hibernate4.LocalSessionFactoryBean: void setConfigLocations(org.springframework.core.io.Resource[])> -> _SINKS_
<org.springframework.context.support.AbstractRefreshableApplicationContext: void setAllowBeanDefinitionOverriding(boolean)> -> _SINKS_
<org.springframework.oxm.config.CastorMarshallerBeanDefinitionParser: java.lang.String getBeanClassName(org.w3c.dom.Element)> -> _SOURCES_
<org.springframework.web.servlet.tags.MessageTag: void writeMessage(java.lang.String)> -> _SINKS_
<org.springframework.security.provisioning.JdbcUserDetailsManager: void setCreateAuthoritySql(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.orm.jpa.EntityManagerFactoryAccessor: java.util.Map getJpaPropertyMap()> -> _SOURCES_
<org.springframework.jdbc.support.CustomSQLErrorCodesTranslation: void setExceptionClass(java.lang.Class)> -> _CWE089__SINKS_
<org.springframework.expression.spel.support.ReflectionHelper: int getTypeDifferenceWeight(java.util.List,java.util.List)> -> _SOURCES_
<org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor: org.springframework.aop.Pointcut getPointcut()> -> _SOURCES_
<org.springframework.scheduling.quartz.SchedulerFactoryBean: void setApplicationContextSchedulerContextKey(java.lang.String)> -> _SINKS_
<org.springframework.context.support.DefaultMessageSourceResolvable: java.lang.String getDefaultMessage()> -> _SOURCES_
<org.springframework.web.servlet.view.json.MappingJackson2JsonView: void setJsonPrefix(java.lang.String)> -> _SINKS_
<org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler: org.springframework.messaging.converter.MessageConverter getMessageConverter()> -> _SOURCES_
<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor getMapValueTypeDescriptor(java.lang.Object)> -> _SOURCES_
<org.springframework.expression.spel.ast.ConstructorReference: org.springframework.expression.ConstructorExecutor findExecutorForConstructor(java.lang.String,java.util.List,org.springframework.expression.spel.ExpressionState)> -> _SINKS_
<org.springframework.web.servlet.tags.HtmlEscapeTag: void setDefaultHtmlEscape(boolean)> -> _CWE079__SINKS_
<org.springframework.jdbc.support.xml.Jdbc4SqlXmlHandler: java.io.Reader getXmlAsCharacterStream(java.sql.ResultSet,java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.aop.framework.ReflectiveMethodInvocation: java.lang.Object getThis()> -> _SOURCES_
<org.springframework.orm.hibernate4.SpringSessionSynchronization: org.hibernate.Session getCurrentSession()> -> _SOURCES_
<org.springframework.http.client.support.HttpRequestWrapper: org.springframework.http.HttpMethod getMethod()> -> _SOURCES_
<org.springframework.cglib.core.AbstractClassGenerator: void setAttemptLoad(boolean)> -> _SINKS_
<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: int getDependencyCheck(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setViewClass(java.lang.Class)> -> _SINKS_
<org.springframework.jms.listener.serversession.ServerSessionMessageListenerContainer: org.springframework.jms.listener.serversession.ServerSessionFactory getServerSessionFactory()> -> _SOURCES_
<org.springframework.core.task.support.TaskExecutorAdapter: void setTaskDecorator(org.springframework.core.task.TaskDecorator)> -> _SINKS_
<org.springframework.web.context.support.ServletContextResource: java.io.File getFile()> -> _SOURCES_
<org.springframework.beans.factory.config.CustomScopeConfigurer: int getOrder()> -> _SOURCES_
<org.springframework.http.RequestEntity: org.springframework.http.RequestEntity$HeadersBuilder get(java.net.URI)> -> _SOURCES_
<org.springframework.beans.factory.config.RuntimeBeanNameReference: java.lang.String getBeanName()> -> _CWE078__SOURCES_
<org.springframework.messaging.MessageHeaders: java.lang.Object getReplyChannel()> -> _SOURCES_
<org.springframework.beans.AbstractNestablePropertyAccessor: org.springframework.beans.AbstractNestablePropertyAccessor$PropertyHandler getPropertyHandler(java.lang.String)> -> _SOURCES_
<org.springframework.jdbc.core.metadata.TableMetaDataContext: java.lang.String getCatalogName()> -> _CWE089__SOURCES_
<org.springframework.jdbc.core.JdbcTemplate: org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor getNativeJdbcExtractor()> -> _CWE089__SOURCES_
<org.springframework.security.config.http.HttpConfigurationBuilder: org.springframework.beans.factory.config.BeanReference getRequestCache()> -> _SOURCES_
<org.springframework.validation.AbstractBindingResult: java.lang.Object getFieldValue(java.lang.String)> -> _SOURCES_
<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor: void setRequiredParameterValue(boolean)> -> _SINKS_
<org.springframework.web.servlet.mvc.multiaction.MultiActionController: void setMethodNameResolver(org.springframework.web.servlet.mvc.multiaction.MethodNameResolver)> -> _SINKS_
<org.springframework.jdbc.support.SQLErrorCodes: java.lang.String[] getCannotAcquireLockCodes()> -> _CWE089__SOURCES_
<org.springframework.messaging.handler.invocation.InvocableHandlerMethod: java.lang.Object[] getMethodArgumentValues(org.springframework.messaging.Message,java.lang.Object[])> -> _SOURCES_
<org.springframework.security.authentication.AbstractAuthenticationToken: void setAuthenticated(boolean)> -> _CWE306__SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder setFactoryMethod(java.lang.String)> -> _SINKS_
<org.springframework.web.socket.messaging.AbstractSubProtocolEvent: org.springframework.messaging.Message getMessage()> -> _SOURCES_
<org.springframework.aop.framework.ProxyProcessorSupport: void setOrder(int)> -> _SINKS_
<org.springframework.web.portlet.multipart.CommonsPortletMultipartResolver: void cleanupMultipart(org.springframework.web.portlet.multipart.MultipartActionRequest)> -> _SINKS_
<org.springframework.format.support.FormattingConversionServiceFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.web.jsf.el.WebApplicationContextFacesELResolver: java.lang.Class getCommonPropertyType(javax.el.ELContext,java.lang.Object)> -> _SOURCES_
<org.springframework.jms.listener.serversession.ServerSessionMessageListenerContainer: javax.jms.ConnectionConsumer createConsumer(javax.jms.Connection,javax.jms.Destination,javax.jms.ServerSessionPool)> -> _SOURCES_
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.String getName()> -> _SOURCES_
<org.springframework.http.converter.FormHttpMessageConverter: void setSupportedMediaTypes(java.util.List)> -> _SINKS_
<org.springframework.web.servlet.tags.TransformTag: void setValue(java.lang.Object)> -> _SINKS_
<org.springframework.web.socket.sockjs.support.AbstractSockJsService: java.lang.String getName()> -> _SOURCES_
<org.springframework.http.HttpHeaders: void setOrigin(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.datasource.init.ResourceDatabasePopulator: void setScripts(org.springframework.core.io.Resource[])> -> _CWE089__SINKS_
<org.springframework.cache.guava.GuavaCache: com.google.common.cache.Cache getNativeCache()> -> _SOURCES_
<org.springframework.http.client.support.HttpRequestWrapper: org.springframework.http.HttpHeaders getHeaders()> -> _SOURCES_
<org.springframework.mock.web.MockSessionCookieConfig: void setDomain(java.lang.String)> -> _SINKS_
<org.springframework.messaging.support.MessageBuilder: org.springframework.messaging.support.MessageBuilder setErrorChannel(org.springframework.messaging.MessageChannel)> -> _SINKS_
<org.springframework.messaging.simp.annotation.support.SendToMethodReturnValueHandler: org.springframework.messaging.support.MessageHeaderInitializer getHeaderInitializer()> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.handler.AbstractHttpReceivingTransportHandler: void handleRequest(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,org.springframework.web.socket.WebSocketHandler,org.springframework.web.socket.sockjs.transport.SockJsSession)> -> _SINKS_
<org.springframework.mock.web.MockHttpSession: java.util.Enumeration getAttributeNames()> -> _SOURCES_
<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void parseConstructorArgElements(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition)> -> _SINKS_
<org.springframework.util.CustomizableThreadCreator: void setDaemon(boolean)> -> _SINKS_
<org.springframework.web.servlet.view.AbstractView: void setAttributesMap(java.util.Map)> -> _SINKS_
<org.springframework.web.socket.sockjs.transport.handler.SockJsWebSocketHandler: org.springframework.web.socket.sockjs.transport.SockJsServiceConfig getSockJsConfig()> -> _SOURCES_
<org.springframework.orm.toplink.TopLinkTemplate: java.lang.Object executeQuery(oracle.toplink.queryframework.DatabaseQuery)> -> _CWE078__SINKS_
<org.springframework.context.annotation.LoadTimeWeavingConfiguration: void setImportMetadata(org.springframework.core.type.AnnotationMetadata)> -> _SINKS_
<org.springframework.web.multipart.commons.CommonsFileUploadSupport: java.lang.String getDefaultEncoding()> -> _SOURCES_
<org.springframework.cglib.core.ReflectUtils: java.lang.reflect.Constructor findConstructor(java.lang.String,java.lang.ClassLoader)> -> _SINKS_
<org.springframework.security.config.annotation.web.socket.AbstractSecurityWebSocketMessageBrokerConfigurer: org.springframework.util.PathMatcher getDefaultPathMatcher()> -> _SOURCES_
<org.springframework.web.servlet.HttpServletBean: org.springframework.core.env.ConfigurableEnvironment getEnvironment()> -> _SOURCES_
<org.springframework.web.socket.client.jetty.JettyWebSocketClient: org.springframework.util.concurrent.ListenableFuture doHandshake(org.springframework.web.socket.WebSocketHandler,java.lang.String,java.lang.Object[])> -> _SINKS_
<org.springframework.jmx.export.metadata.ManagedOperationParameter: java.lang.String getDescription()> -> _SOURCES_
<org.springframework.util.backoff.FixedBackOff: long getInterval()> -> _SOURCES_
<org.springframework.web.portlet.DispatcherPortlet: org.springframework.web.servlet.View resolveViewName(java.lang.String,java.util.Map,javax.portlet.PortletRequest)> -> _SOURCES_
<org.springframework.security.authentication.AbstractAuthenticationToken: java.util.Collection getAuthorities()> -> _SOURCES_
<org.springframework.context.support.EmbeddedValueResolutionSupport: void setEmbeddedValueResolver(org.springframework.util.StringValueResolver)> -> _SINKS_
<org.springframework.web.bind.ServletRequestUtils: java.lang.String getStringParameter(javax.servlet.ServletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.beans.support.PagedListHolder: java.util.Date getRefreshDate()> -> _SOURCES_
<org.springframework.cglib.beans.BulkBean: java.lang.Class[] getPropertyTypes()> -> _SOURCES_
<org.springframework.web.filter.HttpPutFormContentFilter: void setFormConverter(org.springframework.http.converter.FormHttpMessageConverter)> -> _SINKS_
<org.springframework.security.config.annotation.web.configurers.X509Configurer: org.springframework.security.core.userdetails.AuthenticationUserDetailsService getAuthenticationUserDetailsService(org.springframework.security.config.'annotation'.web.HttpSecurityBuilder)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES_
<org.springframework.web.multipart.commons.CommonsFileUploadSupport: void setPreserveFilename(boolean)> -> _SINKS_
<org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler: org.springframework.web.cors.CorsConfiguration getCorsConfiguration(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.jca.cci.core.CciTemplate: java.lang.Object execute(org.springframework.jca.cci.core.InteractionCallback)> -> _CWE078__SINKS_
<org.springframework.cache.support.SimpleValueWrapper: java.lang.Object get()> -> _SOURCES_
<org.springframework.aop.support.DefaultPointcutAdvisor: void setPointcut(org.springframework.aop.Pointcut)> -> _SINKS_
<org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer: void setLoginPage(java.lang.String)> -> _CWE079__SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.jndi.TypeMismatchNamingException: java.lang.Class getActualType()> -> _SOURCES_
<org.springframework.context.event.ApplicationListenerMethodAdapter: java.lang.String getDetailedErrorMessage(java.lang.Object,java.lang.String)> -> _SOURCES_
<org.springframework.http.converter.AbstractHttpMessageConverter: void setDefaultCharset(java.nio.charset.Charset)> -> _SINKS_
<org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler: void setHeaderInitializer(org.springframework.messaging.support.MessageHeaderInitializer)> -> _SINKS_
<org.springframework.jndi.JndiObjectFactoryBean: void setLookupOnStartup(boolean)> -> _SINKS_
<org.springframework.jms.connection.CachedMessageProducer: javax.jms.Topic getTopic()> -> _SOURCES_
<org.springframework.beans.factory.NoUniqueBeanDefinitionException: java.util.Collection getBeanNamesFound()> -> _SOURCES_
<org.springframework.web.servlet.support.BindStatus: java.lang.String getPath()> -> _SOURCES_
<org.springframework.web.util.UriUtils: java.lang.String encodeScheme(java.lang.String,java.lang.String)> -> _SANITIZERS_
<org.springframework.security.authentication.jaas.JaasAuthenticationProvider: org.springframework.core.io.Resource getLoginConfig()> -> _CWE306__SOURCES_
<org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean: void setJobListenerNames(java.lang.String[])> -> _SINKS_
<org.springframework.jms.listener.AbstractMessageListenerContainer: java.lang.String getDefaultSubscriptionName(java.lang.Object)> -> _SOURCES_
<org.springframework.test.context.junit4.SpringJUnit4ClassRunner: org.junit.runner.Description getDescription()> -> _SOURCES_
<org.springframework.web.servlet.view.BeanNameViewResolver: int getOrder()> -> _SOURCES_
<org.springframework.core.enums.ShortCodedLabeledEnum: short getShortCode()> -> _SOURCES_
<org.springframework.aop.aspectj.AbstractAspectJAdvice: org.aspectj.weaver.tools.JoinPointMatch getJoinPointMatch(org.springframework.aop.ProxyMethodInvocation)> -> _SOURCES_
<org.springframework.http.converter.FormHttpMessageConverter: void writeParts(java.io.OutputStream,org.springframework.util.MultiValueMap,byte[])> -> _SINKS_
<org.springframework.mock.web.portlet.MockMultipartActionRequest: void addFile(org.springframework.web.multipart.MultipartFile)> -> _CWE079__SINKS_
<org.springframework.web.servlet.mvc.condition.RequestMethodsRequestCondition: org.springframework.web.servlet.mvc.condition.RequestMethodsRequestCondition matchRequestMethod(java.lang.String)> -> _SOURCES_
<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.beans.BeanWrapperImpl: void setIntrospectionClass(java.lang.Class)> -> _SINKS_
<org.springframework.cglib.transform.AbstractTransformTask: org.springframework.asm.ClassReader getClassReader(java.io.File)> -> _SOURCES_
<org.springframework.context.support.ReloadableResourceBundleMessageSource: void setFileEncodings(java.util.Properties)> -> _SINKS_
<org.springframework.web.util.UriComponents: java.lang.String getScheme()> -> _SOURCES_
<org.springframework.messaging.handler.invocation.InvocableHandlerMethod: void setParameterNameDiscoverer(org.springframework.core.ParameterNameDiscoverer)> -> _SINKS_
<org.springframework.messaging.simp.SimpMessagingTemplate: java.lang.String getUserDestinationPrefix()> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateJdbcException: java.lang.String getSql()> -> _CWE089__SOURCES_
<org.springframework.jdbc.support.nativejdbc.WebSphereNativeJdbcExtractor: boolean isNativeConnectionNecessaryForNativeStatements()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__CWE862_
<org.springframework.jdbc.core.ArgPreparedStatementSetter: void setValues(java.sql.PreparedStatement)> -> _CWE089__SINKS_
<org.springframework.web.client.AsyncRestTemplate: void setDefaultUriVariables(java.util.Map)> -> _SINKS_
<org.springframework.expression.spel.ast.Indexer: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)> -> _SINKS_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: void writeOptionalAttributes(org.springframework.web.servlet.tags.form.TagWriter)> -> _CWE079__SINKS_
<org.springframework.core.io.ResourceEditor: void setAsText(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.tags.form.FormTag: void setOnsubmit(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceRegionHttpMessageConverter getResourceRegionHttpMessageConverter()> -> _SOURCES_
<org.springframework.mock.web.portlet.ServletWrappingPortletContext: java.lang.String getServerInfo()> -> _SOURCES_
<org.springframework.test.context.transaction.TransactionContextHolder: org.springframework.test.context.transaction.TransactionContext getCurrentTransactionContext()> -> _SOURCES_
<org.springframework.jms.listener.serversession.CommonsPoolServerSessionFactory: long getMinEvictableIdleTimeMillis()> -> _SOURCES_
<org.springframework.web.portlet.DispatcherPortlet: org.springframework.web.portlet.multipart.PortletMultipartResolver getMultipartResolver()> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.Map getCorsConfigurations()> -> _SOURCES_
<org.springframework.web.servlet.view.AbstractView: void setAttributes(java.util.Properties)> -> _SINKS_
<org.springframework.web.portlet.bind.PortletRequestUtils: int[] getIntParameters(javax.portlet.PortletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.jms.config.AbstractJmsListenerContainerFactory: void setAutoStartup(boolean)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver: void setResponseBodyAdvice(java.util.List)> -> _SINKS_
<org.springframework.orm.hibernate4.LocalSessionFactoryBean: void setJtaTransactionManager(java.lang.Object)> -> _SINKS_
<org.springframework.core.io.VfsResource: java.io.InputStream getInputStream()> -> _SOURCES_
<org.springframework.web.portlet.multipart.DefaultMultipartActionRequest: void setMultipartFiles(org.springframework.util.MultiValueMap)> -> _SINKS_
<org.springframework.remoting.rmi.RmiRegistryFactoryBean: int getPort()> -> _SOURCES_
<org.springframework.beans.support.RefreshablePagedListHolder: java.util.Locale getLocale()> -> _SOURCES_
<org.springframework.web.servlet.support.WebContentGenerator: java.lang.String getAllowHeader()> -> _SOURCES_
<org.springframework.scheduling.concurrent.ReschedulingRunnable: java.lang.Object get()> -> _SOURCES_
<org.springframework.jdbc.datasource.DriverManagerDataSource: java.sql.Connection getConnectionFromDriverManager(java.lang.String,java.util.Properties)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__SOURCES_
<org.springframework.web.socket.adapter.jetty.JettyWebSocketSession: int getBinaryMessageSizeLimit()> -> _SOURCES_
<org.springframework.web.socket.adapter.standard.StandardWebSocketSession: java.lang.String getAcceptedProtocol()> -> _SOURCES_
<org.springframework.web.jsf.DelegatingVariableResolver: javax.faces.el.VariableResolver getOriginalVariableResolver()> -> _SOURCES_
<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder characterEncoding(java.lang.String)> -> _SOURCES_
<org.springframework.aop.support.DefaultIntroductionAdvisor: int getOrder()> -> _SOURCES_
<org.springframework.web.multipart.support.MultipartResolutionDelegate: java.lang.Class getCollectionParameterType(org.springframework.core.MethodParameter)> -> _SOURCES_
<org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration: org.springframework.security.access.expression.method.MethodSecurityExpressionHandler getExpressionHandler()> -> _SOURCES_
<org.springframework.web.method.support.ModelAndViewContainer: org.springframework.ui.ModelMap getDefaultModel()> -> _SOURCES_
<org.springframework.mock.web.portlet.ServletWrappingPortletContext: java.lang.String getRealPath(java.lang.String)> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateTemplate: void setFetchSize(int)> -> _SINKS_
<org.springframework.test.web.client.match.ContentRequestMatchers: org.springframework.test.web.client.RequestMatcher string(org.hamcrest.Matcher)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletRequest: javax.portlet.PortletMode getPortletMode()> -> _SOURCES_
<org.springframework.orm.hibernate3.FilterDefinitionFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.beans.factory.support.SimpleBeanDefinitionRegistry: org.springframework.beans.factory.config.BeanDefinition getBeanDefinition(java.lang.String)> -> _SOURCES_
<org.springframework.context.support.GenericApplicationContext: void setResourceLoader(org.springframework.core.io.ResourceLoader)> -> _SOURCES__SINKS_
<org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor: org.springframework.http.MediaType getMostSpecificMediaType(org.springframework.http.MediaType,org.springframework.http.MediaType)> -> _SOURCES_
<org.springframework.jdbc.datasource.AbstractDriverBasedDataSource: java.lang.String getUrl()> -> _CWE089__SOURCES_
<org.springframework.context.config.MBeanServerBeanDefinitionParser: org.springframework.beans.factory.support.AbstractBeanDefinition parseInternal(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder content(java.lang.String)> -> _SOURCES_
<org.springframework.mock.web.MockServletContext: java.util.Enumeration getServlets()> -> _SOURCES_
<org.springframework.messaging.handler.HandlerMethod: org.springframework.core.MethodParameter getReturnValueType(java.lang.Object)> -> _SOURCES_
<org.springframework.jms.core.JmsTemplate: org.springframework.jms.support.converter.MessageConverter getMessageConverter()> -> _SOURCES_
<org.springframework.orm.toplink.TopLinkTemplate: java.lang.Object executeNamedQuery(java.lang.Class,java.lang.String)> -> _CWE078__SINKS_
<org.springframework.context.annotation.ConfigurationClassPostProcessor: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.remoting.httpinvoker.HttpComponentsHttpInvokerRequestExecutor: void setConnectTimeout(int)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.remoting.httpinvoker.HttpInvokerClientInterceptor: java.lang.String getCodebaseUrl()> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.SockJsUrlInfo: java.util.UUID getUuid()> -> _SOURCES_
<org.springframework.security.authentication.jaas.JaasAuthenticationProvider: void setCallbackHandlers(org.springframework.security.authentication.jaas.JaasAuthenticationCallbackHandler[])> -> _SINKS_
<org.springframework.jms.remoting.JmsInvokerServiceExporter: org.springframework.remoting.support.RemoteInvocation readRemoteInvocation(javax.jms.Message)> -> _SOURCES_
<org.springframework.orm.toplink.support.CommonsLoggingSessionLog: java.lang.Throwable getException(oracle.toplink.logging.SessionLogEntry)> -> _SOURCES_
<org.springframework.security.authentication.jaas.SecurityContextLoginModule: javax.security.auth.Subject getSubject()> -> _SOURCES_
<org.springframework.context.support.FileSystemXmlApplicationContext: org.springframework.core.io.Resource getResourceByPath(java.lang.String)> -> _SOURCES_
<org.springframework.core.env.AbstractPropertyResolver: void setIgnoreUnresolvableNestedPlaceholders(boolean)> -> _SINKS_
<org.springframework.web.socket.server.support.OriginHandshakeInterceptor: java.util.Collection getAllowedOrigins()> -> _SOURCES_
<org.springframework.web.servlet.resource.DefaultResourceTransformerChain: org.springframework.web.servlet.resource.ResourceTransformer getNext()> -> _SOURCES_
<org.springframework.validation.DataBinder: org.springframework.validation.BindException getErrors()> -> _SOURCES_
<org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor: org.springframework.remoting.support.RemoteInvocationResult doExecuteRequest(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration,java.io.ByteArrayOutputStream)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: long getLastModifiedInternal(javax.servlet.http.HttpServletRequest,org.springframework.web.method.HandlerMethod)> -> _SOURCES_
<org.springframework.jms.listener.endpoint.JmsActivationSpecConfig: void setDurableSubscriptionName(java.lang.String)> -> _SINKS_
<org.springframework.asm.Frame: int get(int)> -> _SOURCES_
<org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource: void setTargetDataSources(java.util.Map)> -> _CWE089__SINKS_
<org.springframework.messaging.simp.config.MessageBrokerRegistry: java.lang.String getUserDestinationPrefix()> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanDefinition: void setDescription(java.lang.String)> -> _SINKS_
<org.springframework.web.method.annotation.ModelFactory: void initModel(org.springframework.web.context.request.NativeWebRequest,org.springframework.web.method.support.ModelAndViewContainer,org.springframework.web.method.HandlerMethod)> -> _SINKS_
<org.springframework.web.portlet.context.PortletWebRequest: java.security.Principal getUserPrincipal()> -> _SOURCES_
<org.springframework.aop.interceptor.SimpleTraceInterceptor: java.lang.String getInvocationDescription(org.aopalliance.intercept.MethodInvocation)> -> _SOURCES_
<org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: void setResourceLoader(org.springframework.core.io.ResourceLoader)> -> _SOURCES__SINKS_
<org.springframework.format.datetime.standard.DateTimeFormatterRegistrar: java.time.format.DateTimeFormatter getFallbackFormatter(org.springframework.format.datetime.standard.DateTimeFormatterRegistrar$Type)> -> _SOURCES_
<org.springframework.core.annotation.AnnotationAttributes: java.lang.annotation.Annotation[] getAnnotationArray(java.lang.String,java.lang.Class)> -> _SOURCES_
<org.springframework.core.type.classreading.MethodMetadataReadingVisitor: java.lang.String getReturnTypeName()> -> _SOURCES_
<org.springframework.ui.velocity.VelocityEngineFactory: void setConfigLocation(org.springframework.core.io.Resource)> -> _SINKS_
<org.springframework.remoting.caucho.HessianExporter: void setSerializerFactory(com.caucho.hessian.io.SerializerFactory)> -> _SINKS_
<org.springframework.orm.hibernate5.support.OpenSessionInterceptor: org.hibernate.SessionFactory getSessionFactory()> -> _SOURCES_
<org.springframework.core.style.ToStringCreator: org.springframework.core.style.ToStringCreator append(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.jdbc.core.simple.SimpleJdbcInsert: org.springframework.jdbc.support.KeyHolder executeAndReturnKeyHolder(org.springframework.jdbc.core.namedparam.SqlParameterSource)> -> _CWE089__SINKS_
<org.springframework.http.client.OkHttp3ClientHttpResponse: java.io.InputStream getBody()> -> _SOURCES__CWE601_
<org.springframework.beans.factory.xml.XmlBeanDefinitionReader: void setEntityResolver(org.xml.sax.EntityResolver)> -> _SINKS_
<org.springframework.core.env.PropertySourcesPropertyResolver: java.lang.Class getPropertyAsClass(java.lang.String,java.lang.Class)> -> _SOURCES_
<org.springframework.web.portlet.FrameworkPortlet: void setUserinfoUsernameAttributes(java.lang.String[])> -> _SINKS_
<org.springframework.web.context.support.AnnotationConfigWebApplicationContext: void setBeanNameGenerator(org.springframework.beans.factory.support.BeanNameGenerator)> -> _SINKS_
<org.springframework.web.servlet.config.annotation.ViewControllerRegistry: org.springframework.web.servlet.handler.AbstractHandlerMapping getHandlerMapping()> -> _SOURCES_
<org.springframework.test.context.web.socket.MockServerContainer: void setAsyncSendTimeout(long)> -> _SINKS_
<org.springframework.validation.BindException: void setNestedPath(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.portlet.ServletWrappingPortletContext: javax.portlet.PortletRequestDispatcher getNamedDispatcher(java.lang.String)> -> _SOURCES_
<org.springframework.messaging.simp.user.UserDestinationResult: java.lang.String getSourceDestination()> -> _SOURCES__CWE862_
<org.springframework.transaction.jta.JtaTransactionManager: void setTransactionManager(javax.transaction.TransactionManager)> -> _SINKS_
<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: void updatePathRequestProperties(org.springframework.mock.web.MockHttpServletRequest,java.lang.String)> -> _SINKS_
<org.springframework.cache.interceptor.AbstractFallbackCacheOperationSource: java.util.Collection getCacheOperations(java.lang.reflect.Method,java.lang.Class)> -> _SOURCES_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: double getDouble(java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.mock.web.portlet.MockPortletResponse: java.util.Set getPropertyNames()> -> _SOURCES__CWE601_
<org.springframework.jms.config.AbstractJmsListenerEndpoint: void setDestination(java.lang.String)> -> _SINKS_
<org.springframework.expression.common.LiteralExpression: java.lang.String getValue(java.lang.Object)> -> _SOURCES_
<org.springframework.jms.connection.CachedMessageProducer: int getPriority()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletConfig: java.util.Enumeration getPublishingEventQNames()> -> _SOURCES_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: double getDouble(int)> -> _CWE089__SOURCES_
<org.springframework.transaction.annotation.JtaTransactionAnnotationParser: org.springframework.transaction.interceptor.TransactionAttribute parseTransactionAnnotation(org.springframework.core.'annotation'.AnnotationAttributes)> -> _SOURCES_
<org.springframework.jmx.export.MBeanExporter: void setBeans(java.util.Map)> -> _SINKS_
<org.springframework.util.xml.StaxSource: void setXMLReader(org.xml.sax.XMLReader)> -> _SINKS_
<org.springframework.orm.ibatis.SqlMapClientTemplate: java.util.List queryForList(java.lang.String,java.lang.Object,int,int)> -> _SINKS_
<org.springframework.oxm.castor.CastorMarshaller: java.lang.Object unmarshalXmlStreamReader(javax.xml.stream.XMLStreamReader)> -> _SOURCES_
<org.springframework.web.socket.TextMessage: int getPayloadLength()> -> _SOURCES_
<org.springframework.core.env.AbstractPropertyResolver: java.lang.Class getPropertyAsClass(java.lang.String,java.lang.Class)> -> _SOURCES_
<org.springframework.http.HttpHeaders: void setIfMatch(java.lang.String)> -> _SINKS_
<org.springframework.aop.support.ControlFlowPointcut: org.springframework.aop.MethodMatcher getMethodMatcher()> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.RestTemplateXhrTransport: void connectInternal(org.springframework.web.socket.sockjs.client.TransportRequest,org.springframework.web.socket.WebSocketHandler,java.net.URI,org.springframework.http.HttpHeaders,org.springframework.web.socket.sockjs.client.XhrClientSockJsSession,org.springframework.util.concurrent.SettableListenableFuture)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.beans.propertyeditors.CustomBooleanEditor: java.lang.String getAsText()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletContext: int getMinorVersion()> -> _SOURCES_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: java.lang.String[] getGeneratedKeyNames()> -> _CWE089__SOURCES_
<org.springframework.beans.factory.parsing.Problem: org.springframework.beans.factory.parsing.Location getLocation()> -> _SOURCES_
<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.Advisor[] getAdvisors()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: void setMethod(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.web.socket.config.annotation.WebMvcStompEndpointRegistry: org.springframework.web.socket.config.'annotation'.WebMvcStompEndpointRegistry setErrorHandler(org.springframework.web.socket.messaging.StompSubProtocolErrorHandler)> -> _SINKS_
<org.springframework.web.servlet.DispatcherServlet: org.springframework.ui.context.ThemeSource getThemeSource()> -> _SOURCES_
<org.springframework.web.portlet.multipart.DefaultMultipartActionRequest: java.util.Map getMultipartParameterContentTypes()> -> _SOURCES_
<org.springframework.core.type.StandardClassMetadata: java.lang.String getSuperClassName()> -> _SOURCES_
<org.springframework.cache.jcache.interceptor.DefaultJCacheOperationSource: org.springframework.cache.CacheManager getCacheManager()> -> _SOURCES_
<org.springframework.test.web.servlet.result.ModelResultMatchers: org.springframework.validation.BindingResult getBindingResult(org.springframework.web.servlet.ModelAndView,java.lang.String)> -> _SOURCES_
<org.springframework.jdbc.core.simple.SimpleJdbcCall: java.lang.Object executeObject(java.lang.Class,org.springframework.jdbc.core.namedparam.MapSqlParameterSource)> -> _CWE089__SINKS_
<org.springframework.util.ClassLoaderUtils: java.lang.String showClassLoaderHierarchy(java.lang.Object,java.lang.String,java.lang.String,java.lang.String)> -> _SOURCES_
<org.springframework.security.authentication.AbstractAuthenticationToken: void setDetails(java.lang.Object)> -> _SINKS_
<org.springframework.http.HttpHeaders: void setDate(java.lang.String,long)> -> _SINKS_
<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: void afterPropertiesSet()> -> _AUTHENTICATIONS_TO_LOW_
<org.springframework.aop.framework.ProxyFactory: java.lang.Object getProxy()> -> _SOURCES_
<org.springframework.jms.remoting.JmsInvokerProxyFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: java.util.List getCustomArgumentResolvers()> -> _SOURCES_
<org.springframework.web.method.annotation.MapMethodProcessor: java.lang.Object resolveArgument(org.springframework.core.MethodParameter,org.springframework.web.method.support.ModelAndViewContainer,org.springframework.web.context.request.NativeWebRequest,org.springframework.web.bind.support.WebDataBinderFactory)> -> _SINKS_
<org.springframework.oxm.castor.CastorMarshaller: void setCastorProperties(java.util.Map)> -> _SINKS_
<org.springframework.web.util.NestedServletException: java.lang.String getMessage()> -> _SOURCES_
<org.springframework.orm.hibernate3.LocalSessionFactoryBean: void executeSchemaScript(java.sql.Connection,java.lang.String[])> -> _CWE078__CWE089__SINKS_
<org.springframework.remoting.caucho.HessianProxyFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.web.servlet.view.script.ScriptTemplateConfigurer: void setEngineName(java.lang.String)> -> _SINKS_
<org.springframework.remoting.caucho.HessianExporter: void setSendCollectionType(boolean)> -> _SINKS_
<org.springframework.validation.DirectFieldBindingResult: java.lang.Object getTarget()> -> _SOURCES_
<org.springframework.web.portlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver: java.lang.Object[] resolveHandlerArguments(java.lang.reflect.Method,java.lang.Object,org.springframework.web.context.request.NativeWebRequest,java.lang.Exception)> -> _SINKS_
<org.springframework.util.ClassUtils: java.util.Set getAllInterfacesForClassAsSet(java.lang.Class)> -> _SOURCES_
<org.springframework.context.support.MessageSourceAccessor: java.lang.String getMessage(java.lang.String,java.util.Locale)> -> _SOURCES_
<org.springframework.orm.ibatis.support.SqlMapClientDaoSupport: javax.sql.DataSource getDataSource()> -> _SOURCES_
<org.springframework.http.converter.ResourceHttpMessageConverter: java.lang.Long getContentLength(java.lang.Object,org.springframework.http.MediaType)> -> _SOURCES_
<org.springframework.web.bind.EscapedErrors: java.util.List getAllErrors()> -> _SOURCES_
<org.springframework.web.servlet.support.WebContentGenerator: void setSupportedMethods(java.lang.String[])> -> _CWE079__SINKS_
<org.springframework.jmx.export.metadata.AbstractJmxAttribute: void setDescription(java.lang.String)> -> _SINKS_
<org.springframework.web.socket.adapter.standard.StandardWebSocketSession: java.lang.String getId()> -> _SOURCES_
<org.springframework.web.servlet.view.RedirectView: java.util.Map getCurrentRequestUriVariables(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.web.socket.sockjs.support.AbstractSockJsService: void setHeartbeatTime(long)> -> _SINKS_
<org.springframework.beans.factory.config.BeanDefinitionHolder: java.lang.Object getSource()> -> _SOURCES_
<org.springframework.security.authentication.AnonymousAuthenticationProvider: java.lang.String getKey()> -> _SOURCES_
<org.springframework.web.servlet.view.velocity.VelocityToolboxView: org.apache.velocity.context.Context createVelocityContext(java.util.Map,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockResourceURL: void setResourceID(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.tags.form.AbstractHtmlInputElementTag: java.lang.String getOnblur()> -> _CWE079__SOURCES_
<org.springframework.web.servlet.handler.SimpleMappingExceptionResolver: void setDefaultStatusCode(int)> -> _SINKS_
<org.springframework.web.bind.support.DefaultDataBinderFactory: org.springframework.web.bind.WebDataBinder createBinder(org.springframework.web.context.request.NativeWebRequest,java.lang.Object,java.lang.String)> -> _SINKS_
<org.springframework.core.io.support.SpringFactoriesLoader: java.util.List loadFactories(java.lang.Class,java.lang.ClassLoader)> -> _SOURCES_
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: java.util.Map getBeansOfType(java.lang.Class)> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletResponse: java.lang.String encodeRedirectURL(java.lang.String)> -> _SANITIZERS__CWE079__CWE601_
<org.springframework.jms.config.AbstractJmsListenerContainerFactory: void setConnectionFactory(javax.jms.ConnectionFactory)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.mock.web.MockPageContext: java.lang.String getContentAsString()> -> _SOURCES_
<org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder: org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder setConversionService(org.springframework.format.support.FormattingConversionService)> -> _SINKS_
<org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory: org.springframework.aop.aspectj.AspectJExpressionPointcut getPointcut(java.lang.reflect.Method,java.lang.Class)> -> _SOURCES_
<org.springframework.jdbc.support.lob.PassThroughBlob: java.io.InputStream getBinaryStream()> -> _CWE089__SOURCES_
<org.springframework.core.annotation.AnnotationAttributes: java.lang.Enum getEnum(java.lang.String)> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.DefaultTransportRequest: org.springframework.http.HttpHeaders getHandshakeHeaders()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setModelAndViewResolvers(java.util.List)> -> _SINKS_
<org.springframework.util.MethodInvoker: void setArguments(java.lang.Object[])> -> _SINKS_
<org.springframework.jdbc.support.DatabaseStartupValidator: void setValidationQuery(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.aop.support.RegexpMethodPointcutAdvisor: void setPatterns(java.lang.String[])> -> _SINKS_
<org.springframework.context.PayloadApplicationEvent: java.lang.Object getPayload()> -> _SOURCES_
<org.springframework.web.servlet.view.velocity.VelocityToolboxView: java.lang.String getToolboxConfigLocation()> -> _SOURCES_
<org.springframework.orm.hibernate5.HibernateTemplate: void setFilterNames(java.lang.String[])> -> _SINKS_
<org.springframework.util.AutoPopulatingList: java.lang.Object get(int)> -> _SOURCES_
<org.springframework.jms.config.DefaultJcaListenerContainerFactory: void setPhase(int)> -> _SINKS_
<org.springframework.web.socket.config.annotation.SockJsServiceRegistration: org.springframework.web.socket.sockjs.transport.TransportHandlingSockJsService createSockJsService()> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateTemplate: void saveOrUpdate(java.lang.Object)> -> _SINKS_
<org.springframework.web.servlet.view.tiles3.TilesConfigurer: void setCompleteAutoload(boolean)> -> _SOURCES__SINKS_
<org.springframework.web.servlet.support.RequestContext: java.lang.String getMessage(java.lang.String,java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.jdbc.core.metadata.CallMetaDataContext: java.lang.String getFunctionReturnName()> -> _CWE089__SOURCES_
<org.springframework.remoting.rmi.RmiInvocationWrapper_Stub: java.lang.String getTargetInterfaceName()> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.DefaultTransportRequest: java.net.URI getTransportUrl()> -> _SOURCES_
<org.springframework.web.servlet.handler.DispatcherServletWebRequest: java.util.Locale getLocale()> -> _SOURCES_
<org.springframework.web.method.HandlerMethod: java.lang.String getResponseStatusReason()> -> _SOURCES_
<org.springframework.context.event.ApplicationListenerMethodAdapter: int getOrder()> -> _SOURCES_
<org.springframework.scheduling.quartz.SchedulerAccessor: void setOverwriteExistingJobs(boolean)> -> _SINKS_
<org.springframework.jdbc.datasource.SingleConnectionDataSource: void closeConnection()> -> _CWE306__CWE089__AUTHENTICATIONS_TO_LOW__CWE862_
<org.springframework.orm.hibernate5.LocalSessionFactoryBuilder: org.springframework.orm.hibernate5.LocalSessionFactoryBuilder setEntityTypeFilters(org.springframework.core.type.filter.TypeFilter[])> -> _SINKS_
<org.springframework.core.convert.support.ArrayToCollectionConverter: java.util.Set getConvertibleTypes()> -> _SOURCES_
<org.springframework.orm.hibernate5.HibernateTransactionManager: void setHibernateManagedSession(boolean)> -> _SINKS_
<org.springframework.orm.ibatis.SqlMapClientTemplate: int update(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.http.client.Netty4ClientHttpRequest: io.netty.handler.codec.http.FullHttpRequest createFullHttpRequest(org.springframework.http.HttpHeaders)> -> _SOURCES_
<org.springframework.aop.config.PointcutComponentDefinition: java.lang.String getDescription()> -> _SOURCES_
<org.springframework.web.servlet.view.document.AbstractExcelView: org.apache.poi.hssf.usermodel.HSSFWorkbook getTemplateSource(java.lang.String,javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.security.authentication.ProviderManager: void setProviders(java.util.List)> -> _SINKS_
<org.springframework.mock.web.portlet.MockMimeResponse: void setIncludedUrl(java.lang.String)> -> _SINKS__CWE601_
<org.springframework.test.context.web.GenericXmlWebContextLoader: java.lang.String getResourceSuffix()> -> _SOURCES_
<org.springframework.beans.factory.parsing.AliasDefinition: java.lang.Object getSource()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter: void setOrder(int)> -> _SINKS_
<org.springframework.http.client.HttpComponentsStreamingClientHttpRequest: org.springframework.http.client.ClientHttpResponse executeInternal(org.springframework.http.HttpHeaders)> -> _CWE078__SINKS_
<org.springframework.jdbc.support.xml.Jdbc4SqlXmlHandler: java.lang.String getXmlAsString(java.sql.ResultSet,java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.util.FastByteArrayOutputStream: void writeTo(java.io.OutputStream)> -> _SINKS_
<org.springframework.remoting.httpinvoker.HttpInvokerClientInterceptor: org.springframework.remoting.support.RemoteInvocationResult executeRequest(org.springframework.remoting.support.RemoteInvocation,org.aopalliance.intercept.MethodInvocation)> -> _CWE078__SINKS_
<org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean: void setCorePoolSize(int)> -> _SINKS_
<org.springframework.security.config.authentication.PasswordEncoderParser: org.springframework.beans.BeanMetadataElement getSaltSource()> -> _SOURCES_
<org.springframework.mock.web.portlet.ServletWrappingPortletContext: javax.servlet.ServletContext getServletContext()> -> _SOURCES_
<org.springframework.core.io.support.PropertiesLoaderSupport: void loadProperties(java.util.Properties)> -> _SOURCES_
<org.springframework.scheduling.quartz.SchedulerFactoryBean: void setNonTransactionalDataSource(javax.sql.DataSource)> -> _SINKS_
<org.springframework.jms.config.JmsListenerEndpointRegistry: java.util.Collection getListenerContainers()> -> _SOURCES_
<org.springframework.util.ConcurrentReferenceHashMap: org.springframework.util.ConcurrentReferenceHashMap$Segment getSegment(int)> -> _SOURCES_
<org.springframework.messaging.support.MessageHeaderAccessor: java.lang.String getDetailedLogMessage(java.lang.Object)> -> _SOURCES_
<org.springframework.web.socket.config.annotation.WebMvcStompEndpointRegistry: int getOrder()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: java.lang.String getLocalAddr()> -> _SOURCES_
<org.springframework.web.client.AsyncRestTemplate: void setUriTemplateHandler(org.springframework.web.util.UriTemplateHandler)> -> _SINKS_
<org.springframework.util.StopWatch: int getTaskCount()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.OptionTag: void setValue(java.lang.Object)> -> _SINKS_
<org.springframework.beans.propertyeditors.ByteArrayPropertyEditor: java.lang.String getAsText()> -> _SOURCES_
<org.springframework.web.servlet.view.jasperreports.AbstractJasperReportsView: java.lang.Class[] getReportDataTypes()> -> _SOURCES_
<org.springframework.test.context.support.GenericPropertiesContextLoader: java.lang.String getResourceSuffix()> -> _SOURCES_
<org.springframework.web.jsf.WebApplicationContextVariableResolver: javax.faces.el.VariableResolver getOriginalVariableResolver()> -> _SOURCES_
<org.springframework.web.filter.DelegatingFilterProxy: java.lang.String getTargetBeanName()> -> _SOURCES_
<org.springframework.transaction.jta.WebSphereUowTransactionManager: void setUowManagerName(java.lang.String)> -> _SINKS_
<org.springframework.scheduling.quartz.JobDetailFactoryBean: org.quartz.JobDetail getObject()> -> _SOURCES_
<org.springframework.core.io.ClassPathResource: java.io.InputStream getInputStream()> -> _SOURCES_
<org.springframework.util.xml.StaxResult: void setLexicalHandler(org.xml.sax.ext.LexicalHandler)> -> _SINKS_
<org.springframework.scripting.config.ScriptingDefaultsParser: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.security.config.http.HeadersBeanDefinitionParser: java.lang.String getAttribute(org.w3c.dom.Element,java.lang.String,java.lang.String)> -> _SOURCES_
<org.springframework.beans.factory.InjectionPoint: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)> -> _SOURCES_
<org.springframework.scheduling.quartz.JobDetailBean: java.lang.Class getJobClass()> -> _SOURCES_
<org.springframework.transaction.jta.JotmFactoryBean: org.objectweb.jotm.Jotm getJotm()> -> _SOURCES_
<org.springframework.core.annotation.AnnotationUtils: java.lang.Object getDefaultValue(java.lang.Class)> -> _SOURCES_
<org.springframework.cglib.core.AbstractClassGenerator: void setNamePrefix(java.lang.String)> -> _SINKS_
<org.springframework.validation.DataBinder: void setIgnoreInvalidFields(boolean)> -> _SINKS_
<org.springframework.web.servlet.resource.ResourceTransformerSupport: java.lang.String resolveUrlPath(java.lang.String,javax.servlet.http.HttpServletRequest,org.springframework.core.io.Resource,org.springframework.web.servlet.resource.ResourceTransformerChain)> -> _CWE079__SINKS_
<org.springframework.web.accept.ContentNegotiationManagerFactoryBean: void setFavorParameter(boolean)> -> _SINKS_
<org.springframework.expression.spel.ast.OpInc: org.springframework.expression.spel.ast.SpelNodeImpl getRightOperand()> -> _SOURCES_
<org.springframework.web.bind.annotation.support.HandlerMethodInvoker: void updateModelAttributes(java.lang.Object,java.util.Map,org.springframework.ui.ExtendedModelMap,org.springframework.web.context.request.NativeWebRequest)> -> _SINKS_
<org.springframework.web.socket.config.annotation.AbstractWebSocketHandlerRegistration: java.lang.Object getMappings()> -> _SOURCES_
<org.springframework.messaging.simp.config.StompBrokerRelayRegistration: org.springframework.messaging.simp.config.StompBrokerRelayRegistration setSystemHeartbeatSendInterval(long)> -> _SINKS_
<org.springframework.beans.ExtendedBeanInfo: java.beans.MethodDescriptor[] getMethodDescriptors()> -> _SOURCES_
<org.springframework.web.client.RestTemplate: org.springframework.web.client.ResponseErrorHandler getErrorHandler()> -> _SOURCES_
<org.springframework.scheduling.concurrent.ScheduledExecutorFactoryBean: void setContinueScheduledExecutionAfterException(boolean)> -> _SINKS_
<org.springframework.beans.factory.config.ConstructorArgumentValues: org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder getGenericArgumentValue(java.lang.Class,java.util.Set)> -> _SOURCES_
<org.springframework.web.servlet.mvc.AbstractUrlViewController: void setAlwaysUseFullPath(boolean)> -> _SINKS_
<org.springframework.web.servlet.view.groovy.GroovyMarkupView: void renderMergedTemplateModel(java.util.Map,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)> -> _SINKS_
<org.springframework.web.portlet.HandlerExecutionChain: java.lang.Object getHandler()> -> _SOURCES_
<org.springframework.cache.jcache.interceptor.BeanFactoryJCacheOperationSourceAdvisor: org.springframework.aop.Pointcut getPointcut()> -> _SOURCES_
<org.springframework.web.socket.WebSocketHttpHeaders: java.lang.Object getFirst(java.lang.Object)> -> _SOURCES_
<org.springframework.web.servlet.view.tiles2.SpringWildcardServletTilesApplicationContext: java.net.URL getResource(java.lang.String)> -> _SOURCES_
<org.springframework.web.context.request.FacesWebRequest: java.lang.String getContextPath()> -> _CWE079__SOURCES_
<org.springframework.messaging.tcp.reactor.Reactor2TcpConnection: void close()> -> _AUTHENTICATIONS_TO_LOW_
<org.springframework.orm.hibernate5.LocalSessionFactoryBean: void setMappingJarLocations(org.springframework.core.io.Resource[])> -> _SINKS_
<org.springframework.util.xml.AbstractXMLStreamReader: java.lang.String getLocalName()> -> _SOURCES_
<org.springframework.web.multipart.commons.CommonsMultipartFile: long getSize()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag: java.lang.String getPropertyPath()> -> _SOURCES_
<org.springframework.http.converter.FormHttpMessageConverter: void writeBoundary(java.io.OutputStream,byte[])> -> _SINKS_
<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: void setHomeInterface(java.lang.Class)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletRequest: java.util.Locale getLocale()> -> _SOURCES_
<org.springframework.beans.factory.wiring.BeanWiringInfo: int getAutowireMode()> -> _SOURCES_
<org.springframework.beans.factory.generic.GenericBeanFactoryAccessor: java.util.Map getBeansWithAnnotation(java.lang.Class)> -> _SOURCES_
<org.springframework.context.support.GenericXmlApplicationContext: org.springframework.beans.factory.xml.XmlBeanDefinitionReader getReader()> -> _SOURCES_
<org.springframework.orm.hibernate4.SessionHolder: org.hibernate.Transaction getTransaction()> -> _SOURCES_
<org.springframework.web.portlet.handler.ParameterHandlerMapping: java.lang.String getLookupKey(javax.portlet.PortletRequest)> -> _SOURCES_
<org.springframework.web.socket.server.support.AbstractHandshakeHandler: java.lang.String[] getSupportedVersions()> -> _SOURCES_
<org.springframework.web.portlet.multipart.DefaultMultipartActionRequest: java.lang.String getMultipartContentType(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.test.web.servlet.htmlunit.MockMvcWebConnection: void setWebClient(com.gargoylesoftware.htmlunit.WebClient)> -> _CWE079__SINKS_
<org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.String,java.lang.Class)> -> _SOURCES_
<org.springframework.aop.aspectj.AbstractAspectJAdvice: void setDeclarationOrder(int)> -> _SINKS_
<org.springframework.web.portlet.handler.PortletModeParameterHandlerMapping: void setParameterName(java.lang.String)> -> _SINKS_
<org.springframework.messaging.simp.config.ChannelRegistration: java.util.List getInterceptors()> -> _SOURCES_
<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: java.util.Set getMetaAnnotationTypes(java.lang.String)> -> _SOURCES_
<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.reflect.Method getReadMethod()> -> _SOURCES_
<org.springframework.cache.jcache.interceptor.CacheResultOperation: java.lang.String getExceptionCacheName()> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateTransactionManager: void setEntityInterceptor(org.hibernate.Interceptor)> -> _SINKS_
<org.springframework.cache.jcache.interceptor.DefaultCacheInvocationContext: org.springframework.cache.jcache.interceptor.JCacheOperation getOperation()> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.XhrClientSockJsSession: org.springframework.http.HttpHeaders getHeaders()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setIgnoreDefaultModelOnRedirect(boolean)> -> _SINKS_
<org.springframework.web.context.request.async.DeferredResultInterceptorChain: void triggerAfterTimeout(org.springframework.web.context.request.NativeWebRequest,org.springframework.web.context.request.async.DeferredResult)> -> _SINKS_
<org.springframework.beans.AbstractNestablePropertyAccessor: int getAutoGrowCollectionLimit()> -> _SOURCES_
<org.springframework.security.access.intercept.AbstractSecurityInterceptor: void setRejectPublicInvocations(boolean)> -> _SINKS_
<org.springframework.beans.factory.annotation.CustomAutowireConfigurer: void setCustomQualifierTypes(java.util.Set)> -> _SINKS_
<org.springframework.web.socket.sockjs.transport.session.WebSocketServerSockJsSession: void setTextMessageSizeLimit(int)> -> _SINKS_
<org.springframework.oxm.castor.CastorMarshaller: void setTargetClasses(java.lang.Class[])> -> _SINKS_
<org.springframework.web.context.support.XmlWebApplicationContext: void loadBeanDefinitions(org.springframework.beans.factory.xml.XmlBeanDefinitionReader)> -> _SOURCES_
<org.springframework.web.HttpRequestMethodNotSupportedException: java.lang.String getMethod()> -> _SOURCES_
<org.springframework.core.annotation.AnnotationAttributes: java.lang.Class getAnnotationType(java.lang.String,java.lang.ClassLoader)> -> _SOURCES_
<org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder: org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder setAsyncRequestTimeout(long)> -> _SINKS_
<org.springframework.security.authentication.TestingAuthenticationToken: java.lang.Object getCredentials()> -> _SOURCES_
<org.springframework.beans.factory.config.AbstractFactoryBean: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.beans.factory.config.CustomScopeConfigurer: void setScopes(java.util.Map)> -> _SINKS_
<org.springframework.messaging.tcp.reactor.AbstractPromiseToListenableFutureAdapter: java.lang.Object get()> -> _SOURCES_
<org.springframework.web.context.ContextLoader: org.springframework.web.context.WebApplicationContext getCurrentWebApplicationContext()> -> _SOURCES_
<org.springframework.cache.jcache.interceptor.DefaultJCacheOperationSource: void setExceptionCacheResolver(org.springframework.cache.interceptor.CacheResolver)> -> _SINKS_
<org.springframework.cache.annotation.SpringCacheAnnotationParser: org.springframework.cache.interceptor.CacheEvictOperation parseEvictAnnotation(java.lang.reflect.AnnotatedElement,org.springframework.cache.'annotation'.SpringCacheAnnotationParser$DefaultCacheConfig,org.springframework.cache.'annotation'.CacheEvict)> -> _SOURCES_
<org.springframework.scheduling.config.TaskExecutorFactoryBean: void setRejectedExecutionHandler(java.util.concurrent.RejectedExecutionHandler)> -> _SINKS_
<org.springframework.security.config.annotation.authentication.configurers.userdetails.AbstractDaoAuthenticationConfigurer: org.springframework.security.config.'annotation'.authentication.configurers.userdetails.AbstractDaoAuthenticationConfigurer passwordEncoder(org.springframework.security.crypto.password.PasswordEncoder)> -> _SANITIZERS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.core.Conventions: java.lang.Class getClassForValue(java.lang.Object)> -> _SOURCES_
<org.springframework.mail.javamail.JavaMailSenderImpl: void setHost(java.lang.String)> -> _SINKS_
<org.springframework.jms.core.JmsTemplate: long getReceiveTimeout()> -> _SOURCES_
<org.springframework.jms.listener.SimpleMessageListenerContainer: void setPubSubNoLocal(boolean)> -> _SINKS_
<org.springframework.web.socket.messaging.WebSocketStompClient: int getInboundMessageSizeLimit()> -> _SOURCES_
<org.springframework.web.context.support.ServletContextPropertySource: java.lang.String getProperty(java.lang.String)> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.SockJsClient: org.springframework.web.socket.sockjs.client.InfoReceiver getInfoReceiver()> -> _SOURCES_
<org.springframework.scheduling.quartz.JobDetailBean: void setBeanName(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.tags.form.ButtonTag: java.lang.String getName()> -> _SOURCES_
<org.springframework.web.servlet.tags.BindTag: java.beans.PropertyEditor getEditor()> -> _SOURCES_
<org.springframework.core.Constants: java.util.Set getValuesForProperty(java.lang.String)> -> _SOURCES_
<org.springframework.cache.config.CacheNamespaceHandler: org.springframework.beans.factory.config.BeanDefinition parseKeyGenerator(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition)> -> _SOURCES_
<org.springframework.web.bind.EscapedErrors: int getErrorCount()> -> _SOURCES_
<org.springframework.transaction.config.TxNamespaceUtils: java.lang.Class getAnnotationTransactionAttributeSourceClass()> -> _SOURCES_
<org.springframework.web.util.OpaqueUriComponents: java.lang.String getUserInfo()> -> _SOURCES_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.util.concurrent.ListenableFuture exchange(java.net.URI,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,java.lang.Class)> -> _SINKS_
<org.springframework.jdbc.support.CustomSQLExceptionTranslatorRegistrar: void setTranslators(java.util.Map)> -> _CWE089__SINKS_
<org.springframework.remoting.jaxrpc.JaxRpcPortClientInterceptor: java.lang.String getUsername()> -> _SOURCES_
<org.springframework.web.method.annotation.RequestParamMethodArgumentResolver: void contributeMethodArgument(org.springframework.core.MethodParameter,java.lang.Object,org.springframework.web.util.UriComponentsBuilder,java.util.Map,org.springframework.core.convert.ConversionService)> -> _SINKS_
<org.springframework.web.portlet.util.PortletUtils: java.lang.Object getSessionAttribute(javax.portlet.PortletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.jms.connection.SingleConnectionFactory: javax.jms.Connection getSharedConnectionProxy(javax.jms.Connection)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.web.socket.adapter.standard.WebSocketToStandardExtensionAdapter: java.lang.String getName()> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.AbstractXhrTransport: void setXhrStreamingDisabled(boolean)> -> _SINKS_
<org.springframework.jmx.export.naming.MetadataNamingStrategy: void setAttributeSource(org.springframework.jmx.export.metadata.JmxAttributeSource)> -> _SINKS_
<org.springframework.util.xml.XMLEventStreamReader: java.lang.String getNamespaceURI(int)> -> _SOURCES_
<org.springframework.web.context.request.async.WebAsyncUtils: org.springframework.web.context.request.async.WebAsyncManager getAsyncManager(javax.servlet.ServletRequest)> -> _SOURCES_
<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition getBeanDefinition()> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession: void writeFrameInternal(org.springframework.web.socket.sockjs.frame.SockJsFrame)> -> _SINKS_
<org.springframework.jms.config.JmsListenerEndpointRegistry: org.springframework.jms.listener.MessageListenerContainer getListenerContainer(java.lang.String)> -> _SOURCES_
<org.springframework.scheduling.config.ScheduledTaskRegistrar: void setTriggerTasksList(java.util.List)> -> _SINKS_
<org.springframework.security.config.annotation.web.configurers.openid.OpenIDLoginConfigurer: org.springframework.security.core.userdetails.AuthenticationUserDetailsService getAuthenticationUserDetailsService(org.springframework.security.config.'annotation'.web.HttpSecurityBuilder)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES_
<org.springframework.web.socket.sockjs.client.UndertowXhrTransport: io.undertow.client.UndertowClient getHttpClient()> -> _SOURCES_
<org.springframework.expression.common.CompositeStringExpression: java.lang.String getValue(org.springframework.expression.EvaluationContext)> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: void setRequestURI(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.cache.caffeine.CaffeineCacheManager: void setCaffeine(com.github.benmanes.caffeine.cache.Caffeine)> -> _SINKS_
<org.springframework.security.config.annotation.web.configurers.openid.OpenIDLoginConfigurer: org.springframework.security.config.'annotation'.web.configurers.openid.OpenIDLoginConfigurer loginProcessingUrl(java.lang.String)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.security.config.http.HttpSecurityBeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor: int getActiveCount()> -> _SOURCES_
<org.springframework.jdbc.datasource.init.DataSourceInitializer: void setEnabled(boolean)> -> _CWE089__SINKS_
<org.springframework.web.socket.WebSocketHttpHeaders: void setSecWebSocketExtensions(java.util.List)> -> _SINKS_
<org.springframework.jdbc.support.lob.TemporaryLobCreator: void setClobAsString(java.sql.PreparedStatement,int,java.lang.String)> -> _CWE089__SINKS_
<org.springframework.format.support.FormattingConversionServiceFactoryBean: void setFormatters(java.util.Set)> -> _SINKS_
<org.springframework.core.env.AbstractEnvironment: java.util.Map getSystemProperties()> -> _SOURCES_
<org.springframework.core.io.support.ResourceRegion: long getPosition()> -> _SOURCES_
<org.springframework.util.xml.AbstractStaxXMLReader: void setStandalone(boolean)> -> _SINKS_
<org.springframework.web.servlet.view.xslt.XsltView: java.lang.Class[] getSourceTypes()> -> _SOURCES_
<org.springframework.security.access.vote.RoleVoter: java.lang.String getRolePrefix()> -> _SOURCES_
<org.springframework.web.util.UriComponents: java.lang.String getVariableValueAsString(java.lang.Object)> -> _SOURCES_
<org.springframework.web.context.request.RequestContextHolder: void setRequestAttributes(org.springframework.web.context.request.RequestAttributes)> -> _SINKS_
<org.springframework.web.bind.support.DefaultDataBinderFactory: org.springframework.web.bind.WebDataBinder createBinderInstance(java.lang.Object,java.lang.String,org.springframework.web.context.request.NativeWebRequest)> -> _SINKS_
<org.springframework.context.support.GenericGroovyApplicationContext: org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader getReader()> -> _SOURCES_
<org.springframework.aop.framework.AbstractSingletonProxyFactoryBean: void setProxyInterfaces(java.lang.Class[])> -> _SINKS_
<org.springframework.jms.core.JmsTemplate: void convertAndSend(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader: void loadBeanDefinitions(java.util.Set)> -> _SOURCES_
<org.springframework.jdbc.core.metadata.CallParameterMetaData: java.lang.String getTypeName()> -> _CWE089__SOURCES_
<org.springframework.oxm.xstream.XStreamMarshaller: void setAutodetectAnnotations(boolean)> -> _SINKS_
<org.springframework.remoting.support.RemoteInvocationResult: java.lang.Object getValue()> -> _SOURCES_
<org.springframework.web.portlet.handler.AbstractMapBasedHandlerMapping: void setLazyInitHandlers(boolean)> -> _SINKS_
<org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter: void setSessionAttributeStore(org.springframework.web.bind.support.SessionAttributeStore)> -> _SINKS_
<org.springframework.test.context.MergedContextConfiguration: java.lang.Class getTestClass()> -> _SOURCES_
<org.springframework.jdbc.object.BatchSqlUpdate: void setBatchSize(int)> -> _CWE089__SINKS_
<org.springframework.context.support.DelegatingMessageSource: java.lang.String getMessage(java.lang.String,java.lang.Object[],java.util.Locale)> -> _SOURCES_
<org.springframework.jms.connection.UserCredentialsConnectionFactoryAdapter: javax.jms.TopicConnection createTopicConnection(java.lang.String,java.lang.String)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.view.velocity.VelocityConfigurer: void setVelocityEngine(org.apache.velocity.app.VelocityEngine)> -> _SINKS_
<org.springframework.expression.common.CompositeStringExpression: org.springframework.core.convert.TypeDescriptor getValueTypeDescriptor(org.springframework.expression.EvaluationContext,java.lang.Object)> -> _SOURCES_
<org.springframework.jdbc.datasource.UserCredentialsDataSourceAdapter: void setPassword(java.lang.String)> -> _CWE089__SINKS__CWE862_
<org.springframework.transaction.jta.JtaTransactionManager: org.springframework.jndi.JndiTemplate getJndiTemplate()> -> _SOURCES_
<org.springframework.web.socket.adapter.standard.ConvertingEncoderDecoderSupport: org.springframework.context.ApplicationContext getApplicationContext()> -> _SOURCES_
<org.springframework.jdbc.support.lob.PassThroughClob: java.io.InputStream getAsciiStream()> -> _CWE089__SOURCES_
<org.springframework.web.bind.ServletRequestUtils: int getRequiredIntParameter(javax.servlet.ServletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.asm.Type: org.springframework.asm.Type getElementType()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.LogoutConfigurer: boolean isCustomLogoutSuccess()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE862_
<org.springframework.beans.BeanWrapperImpl: void setWrappedInstance(java.lang.Object,java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.scheduling.quartz.JobDetailBean: void setJobDataAsMap(java.util.Map)> -> _SINKS_
<org.springframework.web.servlet.view.xslt.XsltViewResolver: void setCacheTemplates(boolean)> -> _SINKS_
<org.springframework.web.socket.messaging.StompSubProtocolHandler: void setErrorHandler(org.springframework.web.socket.messaging.StompSubProtocolErrorHandler)> -> _SINKS_
<org.springframework.http.client.SimpleClientHttpRequestFactory: void setConnectTimeout(int)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.tags.form.AbstractCheckedElementTag: void renderFromValue(java.lang.Object,java.lang.Object,org.springframework.web.servlet.tags.form.TagWriter)> -> _SINKS_
<org.springframework.core.MethodParameter: java.util.Map getTypeIndexesPerLevel()> -> _SOURCES_
<org.springframework.mock.web.MockJspWriter: void println(float)> -> _SINKS_
<org.springframework.jmx.support.WebLogicMBeanServerFactoryBean: void setUsername(java.lang.String)> -> _SINKS_
<org.springframework.beans.propertyeditors.InputStreamEditor: void setAsText(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.MockBodyContent: void print(double)> -> _SINKS_
<org.springframework.jdbc.datasource.JdbcTransactionObjectSupport: void setConnectionHolder(org.springframework.jdbc.datasource.ConnectionHolder)> -> _CWE306__CWE089__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.security.config.http.OrderDecorator: int getOrder()> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.session.StreamingSockJsSession: void handleRequestInternal(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,boolean)> -> _SINKS_
<org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession: void setAcceptedProtocol(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.MockServletContext: java.util.Set getDefaultSessionTrackingModes()> -> _SOURCES_
<org.springframework.web.servlet.tags.UrlTag: void setValue(java.lang.String)> -> _SINKS_
<org.springframework.web.method.HandlerMethod: java.lang.reflect.Method getBridgedMethod()> -> _SOURCES_
<org.springframework.expression.spel.ast.Ternary: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.validation.beanvalidation.LocalValidatorFactoryBean: void setConstraintValidatorFactory(javax.validation.ConstraintValidatorFactory)> -> _SINKS_
<org.springframework.jms.support.converter.MarshallingMessageConverter: void setMarshaller(org.springframework.oxm.Marshaller)> -> _SINKS_
<org.springframework.ui.context.support.DelegatingThemeSource: org.springframework.ui.context.Theme getTheme(java.lang.String)> -> _SOURCES_
<org.springframework.web.socket.handler.WebSocketSessionDecorator: java.util.Map getAttributes()> -> _SOURCES_
<org.springframework.test.context.MergedContextConfiguration: java.util.Set getContextCustomizers()> -> _SOURCES_
<org.springframework.web.socket.client.WebSocketConnectionManager: boolean isConnected()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE862_
<org.springframework.security.config.annotation.web.configurers.HttpBasicConfigurer: void registerDefaultAuthenticationEntryPoint(org.springframework.security.config.'annotation'.web.HttpSecurityBuilder)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.expression.spel.ast.ConstructorReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.test.web.servlet.request.MockMvcRequestBuilders: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder options(java.net.URI)> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.ChannelSecurityConfigurer: org.springframework.security.config.'annotation'.web.configurers.ChannelSecurityConfigurer$ChannelRequestMatcherRegistry addAttribute(java.lang.String,java.util.List)> -> _SOURCES_
<org.springframework.context.support.ReloadableResourceBundleMessageSource: void setResourceLoader(org.springframework.core.io.ResourceLoader)> -> _SOURCES__SINKS_
<org.springframework.web.portlet.handler.HandlerInterceptorAdapter: boolean preHandleRender(javax.portlet.RenderRequest,javax.portlet.RenderResponse,java.lang.Object)> -> _SINKS_
<org.springframework.web.servlet.tags.EvalTag: org.springframework.expression.EvaluationContext createEvaluationContext(javax.servlet.jsp.PageContext)> -> _SOURCES_
<org.springframework.test.web.client.match.ContentRequestMatchers: org.springframework.test.web.client.RequestMatcher xml(java.lang.String)> -> _SOURCES_
<org.springframework.expression.spel.support.ReflectiveMethodExecutor: org.springframework.expression.TypedValue execute(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object[])> -> _SINKS_
<org.springframework.expression.common.CompositeStringExpression: java.lang.Object getValue(java.lang.Class)> -> _SOURCES_
<org.springframework.web.socket.WebSocketHttpHeaders: java.lang.String getSecWebSocketAccept()> -> _SOURCES_
<org.springframework.beans.factory.config.YamlMapFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.ValueFormatter: java.lang.String getDisplayString(java.lang.Object,boolean)> -> _SOURCES_
<org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean: void setSerializersByType(java.util.Map)> -> _SINKS_
<org.springframework.messaging.simp.user.MultiServerUserRegistry: java.util.Set getUsers()> -> _SOURCES__CWE862_
<org.springframework.web.servlet.mvc.ParameterizableViewController: org.springframework.http.HttpStatus getStatusCode()> -> _SOURCES_
<org.springframework.web.context.AbstractContextLoaderInitializer: org.springframework.context.ApplicationContextInitializer[] getRootApplicationContextInitializers()> -> _SOURCES_
<org.springframework.mail.javamail.JavaMailSenderImpl: void send(javax.mail.internet.MimeMessage)> -> _SINKS_
<org.springframework.web.util.AbstractUriTemplateHandler: void setDefaultUriVariables(java.util.Map)> -> _SINKS_
<org.springframework.jms.support.converter.MappingJackson2MessageConverter: void setTypeIdMappings(java.util.Map)> -> _SINKS_
<org.springframework.core.env.SystemEnvironmentPropertySource: java.lang.Object getProperty(java.lang.String)> -> _SOURCES_
<org.springframework.http.RequestEntity: org.springframework.http.HttpMethod getMethod()> -> _SOURCES_
<org.springframework.ejb.support.AbstractSessionBean: void setSessionContext(javax.ejb.SessionContext)> -> _SINKS_
<org.springframework.web.socket.adapter.standard.StandardWebSocketHandlerAdapter: void onOpen(javax.websocket.Session,javax.websocket.EndpointConfig)> -> _SINKS_
<org.springframework.web.socket.client.standard.WebSocketContainerFactoryBean: long getAsyncSendTimeout()> -> _SOURCES_
<org.springframework.beans.AbstractNestablePropertyAccessor: org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder getPropertyNameTokens(java.lang.String)> -> _SOURCES_
<org.springframework.messaging.converter.MarshallingMessageConverter: org.springframework.oxm.Unmarshaller getUnmarshaller()> -> _SOURCES_
<org.springframework.format.support.FormattingConversionServiceFactoryBean: void setRegisterDefaultFormatters(boolean)> -> _SINKS_
<org.springframework.web.method.support.InvocableHandlerMethod: java.lang.String getDetailedErrorMessage(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.jdbc.core.BeanPropertyRowMapper: void setCheckFullyPopulated(boolean)> -> _CWE089__SINKS_
<org.springframework.jdbc.support.SQLErrorCodes: java.lang.String[] getDatabaseProductNames()> -> _CWE089__SOURCES_
<org.springframework.web.socket.server.standard.ServletServerContainerFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.security.access.event.AuthenticationCredentialsNotFoundEvent: org.springframework.security.authentication.AuthenticationCredentialsNotFoundException getCredentialsNotFoundException()> -> _SOURCES__CWE862_
<org.springframework.scheduling.annotation.AsyncConfigurerSupport: org.springframework.aop.interceptor.AsyncUncaughtExceptionHandler getAsyncUncaughtExceptionHandler()> -> _SOURCES_
<org.springframework.oxm.support.AbstractMarshaller: javax.xml.parsers.DocumentBuilder createDocumentBuilder(javax.xml.parsers.DocumentBuilderFactory)> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletResponse: java.io.PrintWriter getWriter()> -> _SOURCES__CWE601_
<org.springframework.expression.spel.ast.OperatorInstanceof: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.web.servlet.tags.ArgumentTag: void setValue(java.lang.Object)> -> _SINKS_
<org.springframework.beans.factory.config.MethodInvokingFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.beans.factory.config.AbstractFactoryBean: org.springframework.beans.TypeConverter getBeanTypeConverter()> -> _SOURCES_
<org.springframework.jms.listener.AbstractMessageListenerContainer: void setAcceptMessagesWhileStopping(boolean)> -> _SINKS_
<org.springframework.web.servlet.mvc.multiaction.MultiActionController: java.lang.reflect.Method getExceptionHandler(java.lang.Throwable)> -> _SOURCES_
<org.springframework.remoting.rmi.JndiRmiClientInterceptor: void setServiceInterface(java.lang.Class)> -> _SINKS_
<org.springframework.messaging.simp.config.MessageBrokerRegistry: java.lang.String getUserDestinationBroadcast()> -> _SOURCES_
<org.springframework.orm.ibatis.SqlMapClientTemplate: java.lang.Object queryForObject(java.lang.String,java.lang.Object,java.lang.Object)> -> _SINKS_
<org.springframework.util.ClassUtils: java.lang.Class[] getAllInterfaces(java.lang.Object)> -> _SOURCES_
<org.springframework.jdbc.core.simple.AbstractJdbcCall: void setReturnValueRequired(boolean)> -> _CWE089__SINKS_
<org.springframework.validation.beanvalidation.BeanValidationPostProcessor: void setAfterInitialization(boolean)> -> _SINKS_
<org.springframework.web.servlet.view.UrlBasedViewResolver: java.lang.String[] getRedirectHosts()> -> _SOURCES_
<org.springframework.jdbc.support.SQLErrorCodes: java.lang.String[] getCannotSerializeTransactionCodes()> -> _CWE089__SOURCES_
<org.springframework.core.SpringProperties: void setFlag(java.lang.String)> -> _SINKS_
<org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler: void setAutoStartup(boolean)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletRequest: void setRemoteUser(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.remoting.support.SimpleHttpServerFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.util.ClassUtils: java.lang.ClassLoader overrideThreadContextClassLoader(java.lang.ClassLoader)> -> _SOURCES_
<org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl: void setAuthoritiesByUsernameQuery(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.ejb.interceptor.SpringBeanAutowiringInterceptor: org.springframework.beans.factory.BeanFactory getBeanFactory(java.lang.Object)> -> _SOURCES_
<org.springframework.core.convert.support.ObjectToOptionalConverter: java.util.Set getConvertibleTypes()> -> _SOURCES_
<org.springframework.orm.jdo.DefaultJdoDialect: org.springframework.jdbc.datasource.ConnectionHandle getJdbcConnection(javax.jdo.PersistenceManager,boolean)> -> _CWE306__SOURCES__CWE862_
<org.springframework.web.multipart.support.MultipartFilter: java.lang.String getMultipartResolverBeanName()> -> _SOURCES_
<org.springframework.orm.hibernate3.AbstractSessionFactoryBean: void setDataSource(javax.sql.DataSource)> -> _CWE089__SINKS_
<org.springframework.remoting.httpinvoker.CommonsHttpInvokerRequestExecutor: void setReadTimeout(int)> -> _SINKS__CWE601_
<org.springframework.remoting.jaxws.SimpleHttpServerJaxWsServiceExporter: void setHostname(java.lang.String)> -> _SINKS_
<org.springframework.core.convert.support.FallbackObjectToStringConverter: java.util.Set getConvertibleTypes()> -> _SOURCES_
<org.springframework.web.servlet.view.InternalResourceView: void setAlwaysInclude(boolean)> -> _SINKS_
<org.springframework.jms.connection.CachedMessageConsumer: void close()> -> _AUTHENTICATIONS_TO_LOW_
<org.springframework.web.filter.AbstractRequestLoggingFilter: java.lang.String getAfterMessage(javax.servlet.http.HttpServletRequest)> -> _CWE079__SOURCES_
<org.springframework.web.context.support.ServletContextScope: java.lang.Object get(java.lang.String,org.springframework.beans.factory.ObjectFactory)> -> _SOURCES_
<org.springframework.web.servlet.view.freemarker.FreeMarkerView: void setConfiguration(freemarker.template.Configuration)> -> _SINKS_
<org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder: org.springframework.security.core.userdetails.UserDetailsService getDefaultUserDetailsService()> -> _SOURCES_
<org.springframework.test.web.servlet.result.JsonPathResultMatchers: java.lang.String getContent(org.springframework.test.web.servlet.MvcResult)> -> _CWE079__SOURCES_
<org.springframework.core.annotation.SynthesizedAnnotationInvocationHandler: java.lang.Object getAttributeValue(java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean: com.fasterxml.jackson.databind.ObjectMapper getObject()> -> _SOURCES_
<org.springframework.test.web.client.match.JsonPathRequestMatchers: org.springframework.test.web.client.RequestMatcher isMap()> -> _SOURCES_
<org.springframework.security.access.intercept.aspectj.MethodInvocationAdapter: java.lang.reflect.AccessibleObject getStaticPart()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.ServletWebArgumentResolverAdapter: org.springframework.web.context.request.NativeWebRequest getWebRequest()> -> _SOURCES_
<org.springframework.jms.annotation.JmsListenerAnnotationBeanPostProcessor: void setEndpointRegistry(org.springframework.jms.config.JmsListenerEndpointRegistry)> -> _SINKS_
<org.springframework.jms.listener.AbstractPollingMessageListenerContainer: void setSessionTransacted(boolean)> -> _SINKS_
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapKeyFieldType(java.lang.reflect.Field)> -> _SOURCES_
<org.springframework.asm.TypeReference: int getValue()> -> _SOURCES_
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapKeyFieldType(java.lang.reflect.Field,int)> -> _SOURCES_
<org.springframework.http.client.AbstractBufferingClientHttpRequest: org.springframework.http.client.ClientHttpResponse executeInternal(org.springframework.http.HttpHeaders)> -> _CWE078__SINKS_
<org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor: void setAsyncAnnotationType(java.lang.Class)> -> _SINKS_
<org.springframework.jdbc.core.StatementCreatorUtils: void setParameterValueInternal(java.sql.PreparedStatement,int,int,java.lang.String,java.lang.Integer,java.lang.Object)> -> _CWE089__SINKS_
<org.springframework.validation.beanvalidation.LocalValidatorFactoryBean: void setMappingLocations(org.springframework.core.io.Resource[])> -> _SINKS_
<org.springframework.messaging.simp.SimpAttributes: java.lang.Object getSessionMutex()> -> _SOURCES_
<org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter: void setMessageConverters(org.springframework.http.converter.HttpMessageConverter[])> -> _SINKS_
<org.springframework.scripting.groovy.GroovyScriptEvaluator: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.web.servlet.i18n.LocaleChangeInterceptor: java.lang.String getParamName()> -> _SOURCES_
<org.springframework.jca.work.SimpleTaskWorkManager: void setAsyncTaskExecutor(org.springframework.core.task.TaskExecutor)> -> _SINKS_
<org.springframework.validation.DataBinder: org.springframework.beans.PropertyEditorRegistry getPropertyEditorRegistry()> -> _SOURCES_
<org.springframework.core.ParameterizedTypeReference: java.lang.reflect.Type getType()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletResponse: javax.servlet.ServletOutputStream getOutputStream()> -> _SOURCES__CWE601_
<org.springframework.web.socket.client.standard.EndpointConnectionManager: void openConnection()> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.mock.web.MockSessionCookieConfig: java.lang.String getComment()> -> _SOURCES_
<org.springframework.cache.config.CacheAdviceParser: java.lang.Class getBeanClass(org.w3c.dom.Element)> -> _SOURCES_
<org.springframework.orm.hibernate5.LocalSessionFactoryBuilder: void setCurrentTenantIdentifierResolver(org.hibernate.context.spi.CurrentTenantIdentifierResolver)> -> _SINKS_
<org.springframework.instrument.classloading.tomcat.TomcatInstrumentableClassLoader: java.lang.ClassLoader getThrowawayClassLoader()> -> _SOURCES_
<org.springframework.http.client.HttpComponentsClientHttpResponse: java.lang.String getStatusText()> -> _SOURCES__CWE601_
<org.springframework.web.socket.config.annotation.ServletWebSocketHandlerRegistration: org.springframework.util.MultiValueMap createMappings()> -> _SOURCES_
<org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean: void setAutoDetectFields(boolean)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletRequest: void setLocalPort(int)> -> _SINKS_
<org.springframework.cache.interceptor.CachePutOperation: java.lang.String getUnless()> -> _SOURCES_
<org.springframework.security.config.annotation.authentication.configurers.userdetails.AbstractDaoAuthenticationConfigurer: org.springframework.security.config.'annotation'.authentication.configurers.userdetails.AbstractDaoAuthenticationConfigurer passwordEncoder(org.springframework.security.authentication.encoding.PasswordEncoder)> -> _SANITIZERS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.view.ContentNegotiatingViewResolver: void setViewResolvers(java.util.List)> -> _SINKS_
<org.springframework.web.portlet.handler.SimpleMappingExceptionResolver: org.springframework.web.portlet.ModelAndView getModelAndView(java.lang.String,java.lang.Exception,javax.portlet.PortletRequest)> -> _SOURCES_
<org.springframework.test.web.servlet.result.HandlerResultMatchers: org.springframework.web.method.HandlerMethod getHandlerMethod(org.springframework.test.web.servlet.MvcResult)> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractMultiCheckedElementTag: java.lang.String getItemValue()> -> _SOURCES_
<org.springframework.core.annotation.AnnotationAttributes: org.springframework.core.'annotation'.AnnotationAttributes getAnnotation(java.lang.String)> -> _SOURCES_
<org.springframework.cache.jcache.JCacheManagerFactoryBean: void setCacheManagerProperties(java.util.Properties)> -> _SINKS_
<org.springframework.web.socket.client.standard.WebSocketContainerFactoryBean: javax.websocket.WebSocketContainer getObject()> -> _SOURCES_
<org.springframework.cache.interceptor.SimpleCacheResolver: java.util.Collection getCacheNames(org.springframework.cache.interceptor.CacheOperationInvocationContext)> -> _SOURCES_
<org.springframework.expression.spel.support.StandardEvaluationContext: void setTypeConverter(org.springframework.expression.TypeConverter)> -> _SINKS_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: int getRow()> -> _CWE089__SOURCES_
<org.springframework.oxm.jibx.JibxMarshaller: void setTargetPackage(java.lang.String)> -> _SINKS_
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.String[] getBeanNamesForType(java.lang.Class,boolean,boolean)> -> _SOURCES_
<org.springframework.cglib.core.ClassNameReader: java.lang.String getClassName(org.springframework.asm.ClassReader)> -> _SOURCES_
<org.springframework.core.convert.Property: java.lang.Class getType()> -> _SOURCES_
<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.lang.String getNamespaceUri()> -> _SOURCES_
<org.springframework.orm.hibernate4.LocalSessionFactoryBuilder: org.springframework.orm.hibernate4.LocalSessionFactoryBuilder setCacheRegionFactory(org.hibernate.cache.spi.RegionFactory)> -> _SINKS_
<org.springframework.mock.web.portlet.MockActionResponse: void setRenderParameters(java.util.Map)> -> _SINKS__CWE601_
<org.springframework.jms.config.AbstractJmsListenerContainerFactory: void setSubscriptionDurable(java.lang.Boolean)> -> _SINKS_
<org.springframework.orm.hibernate3.LocalSessionFactoryBean: void setConfigLocation(org.springframework.core.io.Resource)> -> _SINKS_
<org.springframework.format.datetime.standard.DateTimeFormatterFactory: void setDateTimeStyle(java.time.format.FormatStyle)> -> _SINKS_
<org.springframework.messaging.simp.config.MessageBrokerRegistry: org.springframework.util.PathMatcher getPathMatcher()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractHtmlInputElementTag: void setAccesskey(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.aop.framework.ProxyConfig: void setOptimize(boolean)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.DeferredResultMethodReturnValueHandler: void handleReturnValue(java.lang.Object,org.springframework.core.MethodParameter,org.springframework.web.method.support.ModelAndViewContainer,org.springframework.web.context.request.NativeWebRequest)> -> _SINKS_
<org.springframework.remoting.rmi.RmiServiceExporter: void setServerSocketFactory(java.rmi.server.RMIServerSocketFactory)> -> _SINKS_
<org.springframework.beans.BeanMetadataAttribute: java.lang.Object getSource()> -> _SOURCES_
<org.springframework.web.servlet.view.script.ScriptTemplateView: void setEngineName(java.lang.String)> -> _SINKS_
<org.springframework.jms.listener.endpoint.JmsActivationSpecConfig: void setClientId(java.lang.String)> -> _SINKS_
<org.springframework.aop.target.CommonsPool2TargetSource: long getMinEvictableIdleTimeMillis()> -> _SOURCES_
<org.springframework.mail.javamail.JavaMailSenderImpl: void setPassword(java.lang.String)> -> _SINKS_
<org.springframework.format.datetime.standard.Jsr310DateTimeFormatAnnotationFormatterFactory: java.util.Set getFieldTypes()> -> _SOURCES_
<org.springframework.orm.jpa.vendor.AbstractJpaVendorAdapter: void setShowSql(boolean)> -> _SINKS_
<org.springframework.mock.http.client.MockClientHttpRequest: void setURI(java.net.URI)> -> _SINKS_
<org.springframework.jmx.export.metadata.ManagedAttribute: int getPersistPeriod()> -> _SOURCES_
<org.springframework.web.portlet.multipart.DefaultMultipartActionRequest: java.util.Map getFileMap()> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry: org.springframework.web.servlet.config.'annotation'.ResourceHandlerRegistration addResourceHandler(java.lang.String[])> -> _SINKS_
<org.springframework.http.converter.xml.MarshallingHttpMessageConverter: void setMarshaller(org.springframework.oxm.Marshaller)> -> _SINKS_
<org.springframework.web.socket.messaging.SubProtocolWebSocketHandler: void addProtocolHandler(org.springframework.web.socket.messaging.SubProtocolHandler)> -> _SINKS_
<org.springframework.beans.factory.config.CommonsLogFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockBaseURL: java.util.Set getParameterNames()> -> _SOURCES_
<org.springframework.web.servlet.mvc.condition.CompositeRequestCondition: java.util.Collection getContent()> -> _SOURCES_
<org.springframework.jca.cci.object.EisOperation: void setCciTemplate(org.springframework.jca.cci.core.CciTemplate)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.ViewNameMethodReturnValueHandler: void handleReturnValue(java.lang.Object,org.springframework.core.MethodParameter,org.springframework.web.method.support.ModelAndViewContainer,org.springframework.web.context.request.NativeWebRequest)> -> _SINKS_
<org.springframework.beans.propertyeditors.PathEditor: java.lang.String getAsText()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletResponse: void setCommitted(boolean)> -> _SINKS__CWE601_
<org.springframework.core.env.AbstractEnvironment: java.lang.String getRequiredProperty(java.lang.String)> -> _SOURCES_
<org.springframework.core.io.support.PathMatchingResourcePatternResolver: java.util.Set retrieveMatchingFiles(java.io.File,java.lang.String)> -> _SINKS_
<org.springframework.jdbc.core.support.SqlLobValue: void setTypeValue(java.sql.PreparedStatement,int,int,java.lang.String)> -> _CWE089__SINKS_
<org.springframework.messaging.support.MessageHeaderAccessor: org.springframework.messaging.support.MessageHeaderAccessor getMutableAccessor(org.springframework.messaging.Message)> -> _SOURCES_
<org.springframework.web.servlet.support.RequestContext: java.lang.Boolean getResponseEncodedHtmlEscape()> -> _SOURCES_
<org.springframework.jndi.JndiAccessor: java.util.Properties getJndiEnvironment()> -> _SOURCES_
<org.springframework.security.config.annotation.web.builders.WebSecurity: org.springframework.security.access.expression.SecurityExpressionHandler getExpressionHandler()> -> _SOURCES_
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setViewNames(java.lang.String[])> -> _SINKS_
<org.springframework.web.context.support.WebApplicationObjectSupport: java.io.File getTempDir()> -> _SOURCES_
<org.springframework.core.io.support.ResourcePropertySource: java.lang.String getNameForResource(org.springframework.core.io.Resource)> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.RestTemplateXhrTransport: org.springframework.http.ResponseEntity executeSendRequestInternal(java.net.URI,org.springframework.http.HttpHeaders,org.springframework.web.socket.TextMessage)> -> _CWE078__SINKS_
<org.springframework.web.portlet.context.PortletConfigPropertySource: java.lang.String[] getPropertyNames()> -> _SOURCES_
<org.springframework.web.servlet.tags.MessageTag: void setScope(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: java.lang.Object getObject(java.lang.String,java.util.Map)> -> _CWE089__SOURCES_
<org.springframework.core.io.AbstractResource: java.lang.String getFilename()> -> _SOURCES_
<org.springframework.core.io.VfsUtils: long getLastModified(java.lang.Object)> -> _SOURCES_
<org.springframework.context.support.DefaultMessageSourceResolvable: java.lang.String getCode()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.MatrixVariableMethodArgumentResolver: java.lang.Object resolveName(java.lang.String,org.springframework.core.MethodParameter,org.springframework.web.context.request.NativeWebRequest)> -> _SINKS_
<org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor: void setSecurityMetadataSource(org.springframework.security.access.method.MethodSecurityMetadataSource)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletRequest: void setRequestedSessionIdValid(boolean)> -> _SINKS_
<org.springframework.jdbc.object.RdbmsOperation: java.lang.String getSql()> -> _CWE089__SOURCES_
<org.springframework.jdbc.support.CustomSQLErrorCodesTranslation: java.lang.String[] getErrorCodes()> -> _CWE089__SOURCES_
<org.springframework.messaging.simp.stomp.StompHeaderAccessor: void setPasscode(java.lang.String)> -> _SINKS_
<org.springframework.web.context.request.FacesWebRequest: java.security.Principal getUserPrincipal()> -> _SOURCES_
<org.springframework.web.socket.WebSocketExtension: java.util.Map getParameters()> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateTransactionManager: org.springframework.jdbc.support.SQLExceptionTranslator getDefaultJdbcExceptionTranslator()> -> _SOURCES_
<org.springframework.jdbc.core.JdbcTemplate: void setFetchSize(int)> -> _CWE089__SINKS_
<org.springframework.messaging.support.MessageHeaderAccessor: java.util.UUID getId()> -> _SOURCES_
<org.springframework.orm.toplink.LocalSessionFactory: void setDataSource(javax.sql.DataSource)> -> _SINKS_
<org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter: org.springframework.http.MediaType getDefaultContentType(java.lang.Object)> -> _SOURCES_
<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setCorsConfiguration(org.springframework.web.cors.CorsConfiguration)> -> _SINKS_
<org.springframework.oxm.jaxb.Jaxb2Marshaller: void setMarshallerProperties(java.util.Map)> -> _SINKS_
<org.springframework.jmx.support.MBeanServerFactoryBean: void setAgentId(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.support.RequestContext: java.lang.Boolean getDefaultHtmlEscape()> -> _SOURCES_
<org.springframework.orm.hibernate4.LocalSessionFactoryBean: void setCacheableMappingLocations(org.springframework.core.io.Resource[])> -> _SINKS_
<org.springframework.mail.javamail.JavaMailSenderImpl: void setSession(javax.mail.Session)> -> _SINKS_
<org.springframework.orm.jpa.DefaultJpaDialect: org.springframework.jdbc.datasource.ConnectionHandle getJdbcConnection(javax.persistence.EntityManager,boolean)> -> _CWE306__SOURCES__CWE862_
<org.springframework.jmx.export.metadata.ManagedResource: java.lang.String getObjectName()> -> _SOURCES_
<org.springframework.beans.propertyeditors.CustomMapEditor: void setValue(java.lang.Object)> -> _SINKS_
<org.springframework.web.util.CookieGenerator: int getCookieMaxAge()> -> _SOURCES_
<org.springframework.web.client.RestTemplate: java.util.Set optionsForAllow(java.net.URI)> -> _SINKS_
<org.springframework.cache.transaction.TransactionAwareCacheDecorator: java.lang.Object get(java.lang.Object,java.util.concurrent.Callable)> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.handler.JsonpPollingTransportHandler: org.springframework.web.socket.sockjs.transport.session.PollingSockJsSession createSession(java.lang.String,org.springframework.web.socket.WebSocketHandler,java.util.Map)> -> _SINKS_
<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.lang.Object getEarlyBeanReference(java.lang.Object,java.lang.String)> -> _SOURCES_
<org.springframework.oxm.xstream.XStreamMarshaller: java.lang.Object unmarshalSaxReader(org.xml.sax.XMLReader,org.xml.sax.InputSource)> -> _SOURCES_
<org.springframework.transaction.support.TransactionSynchronizationManager: void setCurrentTransactionIsolationLevel(java.lang.Integer)> -> _SINKS_
<org.springframework.web.servlet.support.RequestContext: java.lang.String getPathToServlet()> -> _SOURCES_
<org.springframework.context.support.GenericApplicationContext: org.springframework.core.io.Resource[] getResources(java.lang.String)> -> _SOURCES_
<org.springframework.core.env.AbstractPropertyResolver: void setPlaceholderPrefix(java.lang.String)> -> _SINKS_
<org.springframework.test.util.ReflectionTestUtils: void setField(java.lang.Class,java.lang.String,java.lang.Object,java.lang.Class)> -> _SINKS_
<org.springframework.messaging.core.AbstractMessagingTemplate: java.lang.Object convertSendAndReceive(java.lang.Object,java.lang.Class,org.springframework.messaging.core.MessagePostProcessor)> -> _SINKS_
<org.springframework.mail.javamail.MimeMailMessage: void setBcc(java.lang.String[])> -> _SINKS_
<org.springframework.util.MimeType: java.nio.charset.Charset getCharset()> -> _SOURCES_
<org.springframework.security.authentication.jaas.JaasAuthenticationToken: javax.security.auth.login.LoginContext getLoginContext()> -> _CWE306__SOURCES_
<org.springframework.jms.support.JmsMessageHeaderAccessor: java.lang.Long getExpiration()> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession: void writeFrame(org.springframework.web.socket.sockjs.frame.SockJsFrame)> -> _SINKS_
<org.springframework.jms.core.JmsMessagingTemplate: void setConnectionFactory(javax.jms.ConnectionFactory)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.security.config.http.HttpSecurityBeanDefinitionParser: org.springframework.beans.factory.config.BeanReference createFilterChain(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.web.util.UriTemplateHandler getUriTemplateHandler()> -> _SOURCES_
<org.springframework.web.socket.server.support.AbstractHandshakeHandler: org.springframework.web.socket.server.RequestUpgradeStrategy getRequestUpgradeStrategy()> -> _SOURCES_
<org.springframework.test.context.transaction.TransactionalTestExecutionListener: java.util.List getAnnotatedMethods(java.lang.Class,java.lang.Class)> -> _SOURCES_
<org.springframework.test.context.ContextConfigurationAttributes: void setClasses(java.lang.Class[])> -> _SINKS_
<org.springframework.asm.commons.Method: org.springframework.asm.Type getReturnType()> -> _SOURCES_
<org.springframework.web.servlet.view.script.ScriptTemplateView: javax.script.ScriptEngine getEngine()> -> _SOURCES_
<org.springframework.web.portlet.multipart.CommonsPortletMultipartResolver: void setResolveLazily(boolean)> -> _SINKS_
<org.springframework.util.ClassUtils: java.util.Set getAllInterfacesAsSet(java.lang.Object)> -> _SOURCES_
<org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver: java.lang.ClassLoader getThrowawayClassLoader()> -> _SOURCES_
<org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper: void setAttributes2grantedAuthoritiesMap(java.util.Map)> -> _SINKS_
<org.springframework.orm.hibernate5.LocalSessionFactoryBean: void setAnnotatedPackages(java.lang.String[])> -> _SINKS_
<org.springframework.jdbc.core.metadata.CallMetaDataContext: java.util.List getCallParameters()> -> _CWE089__SOURCES_
<org.springframework.beans.factory.support.AbstractBeanFactory: java.util.Map getCustomEditors()> -> _SOURCES_
<org.springframework.web.servlet.support.RequestContextUtils: java.util.Locale getLocale(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.TransportHandlingSockJsService: java.util.Map getTransportHandlers()> -> _SOURCES_
<org.springframework.jms.listener.serversession.CommonsPoolServerSessionFactory: long getMaxWait()> -> _SOURCES_
<org.springframework.web.servlet.handler.AbstractHandlerMapping: org.springframework.util.PathMatcher getPathMatcher()> -> _SOURCES_
<org.springframework.web.portlet.context.StaticPortletApplicationContext: void setNamespace(java.lang.String)> -> _SINKS_
<org.springframework.web.socket.server.standard.UndertowRequestUpgradeStrategy: io.undertow.websockets.jsr.ServerWebSocketContainer getContainer(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.beans.factory.parsing.Problem: org.springframework.beans.factory.parsing.ParseState getParseState()> -> _SOURCES_
<org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser: org.springframework.beans.factory.support.AbstractBeanDefinition parseInternal(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: java.lang.String getDependencyCheck()> -> _SOURCES_
<org.springframework.web.multipart.commons.CommonsFileUploadSupport: org.springframework.web.multipart.commons.CommonsFileUploadSupport$MultipartParsingResult parseFileItems(java.util.List,java.lang.String)> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler: java.lang.String getClientPasscode()> -> _SOURCES_
<org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource: java.sql.Connection getConnection()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__SOURCES__CWE862_
<org.springframework.web.socket.server.support.DefaultHandshakeHandler: void setServletContext(javax.servlet.ServletContext)> -> _SINKS_
<org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor: void setCorePoolSize(int)> -> _SINKS_
<org.springframework.cglib.core.AbstractClassGenerator: boolean getAttemptLoad()> -> _SOURCES_
<org.springframework.beans.factory.support.SimpleBeanDefinitionRegistry: java.lang.String[] getBeanDefinitionNames()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletContext: javax.portlet.PortletRequestDispatcher getRequestDispatcher(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.i18n.CookieLocaleResolver: void setLanguageTagCompliant(boolean)> -> _SINKS_
<org.springframework.util.StreamUtils: void copy(java.lang.String,java.nio.charset.Charset,java.io.OutputStream)> -> _SINKS_
<org.springframework.asm.Type: java.lang.String getClassName()> -> _SOURCES_
<org.springframework.jdbc.object.SqlQuery: java.util.List execute(java.lang.String,java.util.Map)> -> _CWE078__CWE089__SINKS_
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.web.socket.adapter.standard.StandardWebSocketHandlerAdapter: void onClose(javax.websocket.Session,javax.websocket.CloseReason)> -> _SINKS_
<org.springframework.orm.jpa.vendor.EclipseLinkJpaDialect: org.eclipse.persistence.sessions.Session getSession(javax.persistence.EntityManager)> -> _SOURCES_
<org.springframework.web.servlet.ResourceServlet: void setDefaultUrl(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletRequest: void setContextPath(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.web.multipart.support.AbstractMultipartHttpServletRequest: org.springframework.util.MultiValueMap getMultiFileMap()> -> _SOURCES_
<org.springframework.web.context.request.async.DeferredResultProcessingInterceptorAdapter: boolean handleTimeout(org.springframework.web.context.request.NativeWebRequest,org.springframework.web.context.request.async.DeferredResult)> -> _SINKS_
<org.springframework.orm.hibernate3.support.OpenSessionInViewFilter: org.hibernate.FlushMode getFlushMode()> -> _SOURCES_
<org.springframework.context.support.AbstractApplicationContext: java.lang.String[] getBeanDefinitionNames()> -> _SOURCES_
<org.springframework.context.annotation.ClassPathBeanDefinitionScanner: void setScopeMetadataResolver(org.springframework.context.'annotation'.ScopeMetadataResolver)> -> _SINKS_
<org.springframework.security.authentication.jaas.JaasAuthenticationProvider: void setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)> -> _SINKS_
<org.springframework.scheduling.backportconcurrent.ScheduledExecutorTask: void setTimeUnit(edu.emory.mathcs.backport.java.util.concurrent.TimeUnit)> -> _SINKS_
<org.springframework.validation.beanvalidation.LocalValidatorFactoryBean: void setParameterNameDiscoverer(org.springframework.core.ParameterNameDiscoverer)> -> _SINKS_
<org.springframework.cglib.core.TypeUtils: org.springframework.asm.Type[] getTypes(java.lang.Class[])> -> _SOURCES_
<org.springframework.transaction.support.AbstractPlatformTransactionManager: void setValidateExistingTransaction(boolean)> -> _SINKS_
<org.springframework.web.socket.handler.WebSocketSessionDecorator: java.security.Principal getPrincipal()> -> _SOURCES_
<org.springframework.beans.factory.config.ConstructorArgumentValues: int getArgumentCount()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletConfig: void setDefaultNamespace(java.lang.String)> -> _SINKS_
<org.springframework.messaging.tcp.reactor.Reactor2TcpConnection: void onWriteInactivity(java.lang.Runnable,long)> -> _SINKS_
<org.springframework.orm.hibernate3.FilterDefinitionFactoryBean: void setDefaultFilterCondition(java.lang.String)> -> _SINKS_
<org.springframework.expression.spel.ast.FunctionReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.core.MethodParameter: void setTypeIndexForCurrentLevel(int)> -> _SINKS_
<org.springframework.web.util.ContentCachingRequestWrapper: java.lang.String[] getParameterValues(java.lang.String)> -> _SOURCES__SINKS_
<org.springframework.transaction.interceptor.RuleBasedTransactionAttribute: void setRollbackRules(java.util.List)> -> _SINKS_
<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder setSource(java.lang.Object)> -> _SINKS_
<org.springframework.orm.jpa.DefaultJpaDialect: org.springframework.orm.jpa.EntityManagerPlusOperations getEntityManagerPlusOperations(javax.persistence.EntityManager)> -> _SOURCES_
<org.springframework.web.socket.config.WebSocketMessageBrokerStats: java.lang.String getStompSubProtocolStatsInfo()> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession: java.lang.String getAcceptedProtocol()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.FormTag: java.lang.String getAutocomplete()> -> _SOURCES_
<org.springframework.web.jsf.DelegatingVariableResolver: org.springframework.beans.factory.BeanFactory getBeanFactory(javax.faces.context.FacesContext)> -> _SOURCES_
<org.springframework.web.servlet.handler.AbstractHandlerMapping: java.lang.Object getDefaultHandler()> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.handler.WebSocketTransportHandler: boolean doHandshake(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,org.springframework.web.socket.WebSocketHandler,java.util.Map)> -> _SINKS_
<org.springframework.http.client.support.InterceptingHttpAccessor: void setInterceptors(java.util.List)> -> _SINKS_
<org.springframework.web.servlet.view.AbstractTemplateView: void setExposeRequestAttributes(boolean)> -> _SINKS_
<org.springframework.web.socket.sockjs.client.AbstractClientSockJsSession: java.security.Principal getPrincipal()> -> _SOURCES_
<org.springframework.web.bind.MethodArgumentNotValidException: org.springframework.core.MethodParameter getParameter()> -> _SOURCES_
<org.springframework.util.xml.DomUtils: java.util.List getChildElementsByTagName(org.w3c.dom.Element,java.lang.String[])> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanDefinition: void setResource(org.springframework.core.io.Resource)> -> _SINKS_
<org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver: java.lang.reflect.Method getBestMatchingMethod(java.util.Map,java.lang.Exception)> -> _SOURCES_
<org.springframework.cache.config.CacheAdviceParser: java.util.List parseDefinitionsSources(java.util.List,org.springframework.beans.factory.xml.ParserContext)> -> _SINKS_
<org.springframework.jms.connection.DelegatingConnectionFactory: javax.jms.ConnectionFactory getTargetConnectionFactory()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.mail.javamail.MimeMessageHelper: javax.mail.internet.MimeMessage getMimeMessage()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletResponse: java.lang.String getNamespace()> -> _SOURCES__CWE601_
<org.springframework.web.portlet.FrameworkPortlet: void setPublishContext(boolean)> -> _SINKS_
<org.springframework.messaging.simp.user.DefaultUserDestinationResolver: java.lang.String getTargetDestination(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> -> _SOURCES_
<org.springframework.remoting.jaxrpc.JaxRpcPortClientInterceptor: java.util.Map getCustomPropertyMap()> -> _SOURCES_
<org.springframework.web.multipart.MaxUploadSizeExceededException: long getMaxUploadSize()> -> _SOURCES_
<org.springframework.web.servlet.view.UrlBasedViewResolver: java.util.Map getAttributesMap()> -> _SOURCES_
<org.springframework.web.servlet.resource.AbstractVersionStrategy: org.springframework.web.servlet.resource.VersionPathStrategy getVersionPathStrategy()> -> _SOURCES_
<org.springframework.web.servlet.view.RedirectView: void setExpandUriTemplateVariables(boolean)> -> _SINKS_
<org.springframework.web.socket.config.MessageBrokerBeanDefinitionParser: org.springframework.beans.factory.config.RuntimeBeanReference getValidator(org.w3c.dom.Element,java.lang.Object,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.util.xml.XMLEventStreamReader: int getAttributeCount()> -> _SOURCES_
<org.springframework.aop.framework.ReflectiveMethodInvocation: java.lang.Object[] getArguments()> -> _SOURCES_
<org.springframework.messaging.converter.AbstractMessageConverter: void setSerializedPayloadClass(java.lang.Class)> -> _SINKS_
<org.springframework.web.servlet.tags.form.FormTag: void setOnreset(java.lang.String)> -> _SINKS_
<org.springframework.web.socket.sockjs.transport.TransportHandlingSockJsService: void setMessageCodec(org.springframework.web.socket.sockjs.frame.SockJsMessageCodec)> -> _SINKS_
<org.springframework.aop.framework.AbstractSingletonProxyFactoryBean: java.lang.Object getProxy(org.springframework.aop.framework.AopProxy)> -> _SOURCES_
<org.springframework.web.servlet.handler.AbstractHandlerMapping: java.util.Map getCorsConfigurations()> -> _SOURCES_
<org.springframework.oxm.jaxb.Jaxb2Marshaller: java.lang.String[] getPackagesToScan()> -> _SOURCES_
<org.springframework.messaging.simp.stomp.BufferingStompDecoder: int getBufferSize()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletResponse: void setDateHeader(java.lang.String,long)> -> _CWE079__SINKS__CWE601_
<org.springframework.messaging.converter.DefaultContentTypeResolver: void setDefaultMimeType(org.springframework.util.MimeType)> -> _SINKS_
<org.springframework.ui.freemarker.FreeMarkerConfigurationFactory: void setPreferFileSystemAccess(boolean)> -> _SINKS_
<org.springframework.web.socket.sockjs.transport.handler.WebSocketTransportHandler: void handleRequest(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,org.springframework.web.socket.WebSocketHandler,org.springframework.web.socket.sockjs.transport.SockJsSession)> -> _SINKS_
<org.springframework.core.MethodParameter: java.lang.Integer getTypeIndexForCurrentLevel()> -> _SOURCES_
<org.springframework.messaging.core.CachingDestinationResolverProxy: void setTargetDestinationResolver(org.springframework.messaging.core.DestinationResolver)> -> _SINKS_
<org.springframework.web.socket.config.annotation.ServletWebSocketHandlerRegistration: void addSockJsServiceMapping(java.lang.Object,org.springframework.web.socket.sockjs.SockJsService,org.springframework.web.socket.WebSocketHandler,java.lang.String)> -> _SINKS_
<org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor: void preHandle(org.springframework.web.context.request.WebRequest)> -> _SINKS_
<org.springframework.orm.toplink.LocalSessionFactoryBean: org.springframework.jdbc.support.SQLExceptionTranslator getJdbcExceptionTranslator()> -> _SOURCES_
<org.springframework.cache.interceptor.NameMatchCacheOperationSource: void setNameMap(java.util.Map)> -> _SINKS_
<org.springframework.metadata.commons.CommonsAttributes: java.util.Collection getAttributes(java.lang.Class,java.lang.Class)> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.AsyncTaskMethodReturnValueHandler: void handleReturnValue(java.lang.Object,org.springframework.core.MethodParameter,org.springframework.web.method.support.ModelAndViewContainer,org.springframework.web.context.request.NativeWebRequest)> -> _SINKS_
<org.springframework.jca.cci.connection.SingleConnectionFactory: javax.resource.cci.Connection getConnection()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.security.access.vote.AbstractAccessDecisionManager: java.util.List getDecisionVoters()> -> _SOURCES_
<org.springframework.web.method.annotation.ModelFactory: void updateBindingResult(org.springframework.web.context.request.NativeWebRequest,org.springframework.ui.ModelMap)> -> _SINKS_
<org.springframework.messaging.core.GenericMessagingTemplate: void setThrowExceptionOnLateReply(boolean)> -> _SINKS_
<org.springframework.jmx.access.MBeanClientInterceptor: void setConnectOnStartup(boolean)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.context.support.ReloadableResourceBundleMessageSource: java.util.Properties loadProperties(org.springframework.core.io.Resource,java.lang.String)> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.PortMapperConfigurer: org.springframework.security.web.PortMapper getPortMapper()> -> _SOURCES_
<org.springframework.cache.annotation.SpringCacheAnnotationParser: org.springframework.cache.interceptor.CacheOperation parsePutAnnotation(java.lang.reflect.AnnotatedElement,org.springframework.cache.'annotation'.SpringCacheAnnotationParser$DefaultCacheConfig,org.springframework.cache.'annotation'.CachePut)> -> _SOURCES_
<org.springframework.cglib.core.AbstractClassGenerator: org.springframework.cglib.core.AbstractClassGenerator getCurrent()> -> _SOURCES_
<org.springframework.security.access.expression.AbstractSecurityExpressionHandler: void setPermissionEvaluator(org.springframework.security.access.PermissionEvaluator)> -> _SINKS_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.util.concurrent.ListenableFuture exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,org.springframework.core.ParameterizedTypeReference,java.util.Map)> -> _SINKS_
<org.springframework.web.servlet.tags.form.OptionTag: org.springframework.web.servlet.support.BindStatus getBindStatus()> -> _SOURCES_
<org.springframework.context.support.GenericGroovyApplicationContext: void setProperty(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.orm.toplink.LocalSessionFactory: void setDatabaseLogin(oracle.toplink.sessions.DatabaseSession,oracle.toplink.sessions.DatabaseLogin)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.jca.cci.core.CciTemplate: javax.resource.cci.RecordFactory getRecordFactory(javax.resource.cci.ConnectionFactory)> -> _SOURCES_
<org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration: void setImportMetadata(org.springframework.core.type.AnnotationMetadata)> -> _SINKS_
<org.springframework.jdbc.core.simple.AbstractJdbcCall: java.lang.String getSchemaName()> -> _CWE089__SOURCES_
<org.springframework.jca.cci.connection.DelegatingConnectionFactory: javax.resource.cci.RecordFactory getRecordFactory()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.LogoutConfigurer: org.springframework.security.config.'annotation'.web.configurers.LogoutConfigurer logoutSuccessHandler(org.springframework.security.web.authentication.logout.LogoutSuccessHandler)> -> _CWE306__AUTHENTICATIONS_TO_LOW__SINKS__CWE862_
<org.springframework.web.accept.ParameterContentNegotiationStrategy: java.lang.String getMediaTypeKey(org.springframework.web.context.request.NativeWebRequest)> -> _CWE079__SOURCES_
<org.springframework.web.socket.client.standard.EndpointConnectionManager: void setDecoders(java.util.List)> -> _SINKS_
<org.springframework.web.servlet.ModelAndView: void setStatus(org.springframework.http.HttpStatus)> -> _SINKS_
<org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor: int getOrder()> -> _SOURCES_
<org.springframework.scripting.support.StandardScriptFactory: java.lang.Class[] getScriptInterfaces()> -> _SOURCES_
<org.springframework.http.HttpHeaders: long getDate()> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompDecoder: java.util.List decode(java.nio.ByteBuffer,org.springframework.util.MultiValueMap)> -> _SOURCES_
<org.springframework.jmx.export.MBeanExporter: void setAutodetect(boolean)> -> _SINKS_
<org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory: org.aopalliance.aop.Advice getAdvice(java.lang.reflect.Method,org.springframework.aop.aspectj.AspectJExpressionPointcut,org.springframework.aop.aspectj.'annotation'.MetadataAwareAspectInstanceFactory,int,java.lang.String)> -> _SOURCES_
<org.springframework.jdbc.core.metadata.OracleCallMetaDataProvider: int getRefCursorSqlType()> -> _CWE089__SOURCES_
<org.springframework.web.portlet.handler.HandlerInterceptorAdapter: void postHandleResource(javax.portlet.ResourceRequest,javax.portlet.ResourceResponse,java.lang.Object,org.springframework.web.portlet.ModelAndView)> -> _SINKS_
<org.springframework.web.servlet.view.xslt.XsltViewResolver: void setOutputProperties(java.util.Properties)> -> _SINKS_
<org.springframework.web.context.support.ServletContextAttributeFactoryBean: void setAttributeName(java.lang.String)> -> _SINKS_
<org.springframework.http.converter.ResourceHttpMessageConverter: org.springframework.http.MediaType getDefaultContentType(org.springframework.core.io.Resource)> -> _SOURCES_
<org.springframework.web.socket.sockjs.frame.AbstractSockJsMessageCodec: java.lang.String escapeSockJsSpecialChars(char[])> -> _SANITIZERS__CWE079_
<org.springframework.jmx.support.MBeanServerFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.orm.jdo.support.OpenPersistenceManagerInViewFilter: void setPersistenceManagerFactoryBeanName(java.lang.String)> -> _SINKS_
<org.springframework.transaction.support.ResourceHolderSupport: long getTimeToLiveInMillis()> -> _SOURCES_
<org.springframework.jms.support.JmsMessageHeaderAccessor: javax.jms.Destination getReplyTo()> -> _SOURCES_
<org.springframework.web.servlet.support.RequestContext: org.springframework.web.util.UrlPathHelper getUrlPathHelper()> -> _SOURCES_
<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder setDestroyMethodName(java.lang.String)> -> _SINKS_
<org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite: org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolver getArgumentResolver(org.springframework.core.MethodParameter)> -> _SOURCES_
<org.springframework.web.client.RestTemplate: org.springframework.web.client.RequestCallback httpEntityCallback(java.lang.Object)> -> _SOURCES_
<org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor: void setCopyAllAttributes(boolean)> -> _SINKS_
<org.springframework.expression.TypedValue: java.lang.Object getValue()> -> _SOURCES_
<org.springframework.web.util.HierarchicalUriComponents: java.lang.String getHost()> -> _SOURCES_
<org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager: void setPersistenceXmlLocation(java.lang.String)> -> _SINKS_
<org.springframework.http.HttpHeaders: java.lang.String getPragma()> -> _SOURCES_
<org.springframework.mock.web.portlet.ServletWrappingPortletContext: java.util.Enumeration getInitParameterNames()> -> _SOURCES_
<org.springframework.aop.aspectj.autoproxy.AspectJPrecedenceComparator: int getAspectDeclarationOrder(org.springframework.aop.Advisor)> -> _SOURCES_
<org.springframework.beans.factory.config.TypedStringValue: void setValue(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.tags.form.FormTag: void setCssErrorClass(java.lang.String)> -> _SINKS_
<org.springframework.messaging.simp.stomp.DefaultStompSession: org.springframework.messaging.converter.MessageConverter getMessageConverter()> -> _SOURCES_
<org.springframework.orm.toplink.support.CommonsLoggingSessionLog: void setSeparator(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.core.metadata.TableMetaDataContext: void setSchemaName(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.beans.factory.config.AbstractFactoryBean: org.springframework.beans.factory.BeanFactory getBeanFactory()> -> _SOURCES_
<org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource: org.springframework.jmx.export.metadata.ManagedAttribute getManagedAttribute(java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.web.context.support.AbstractRefreshableWebApplicationContext: javax.servlet.ServletConfig getServletConfig()> -> _SOURCES_
<org.springframework.cache.interceptor.VariableNotAvailableException: java.lang.String getName()> -> _SOURCES_
<org.springframework.security.core.userdetails.cache.SpringCacheBasedUserCache: org.springframework.security.core.userdetails.UserDetails getUserFromCache(java.lang.String)> -> _SOURCES__CWE862_
<org.springframework.beans.factory.support.AbstractBeanFactory: org.springframework.beans.TypeConverter getTypeConverter()> -> _SOURCES_
<org.springframework.web.accept.ContentNegotiationManagerFactoryBean: void setFavorPathExtension(boolean)> -> _SINKS_
<org.springframework.format.number.CurrencyStyleFormatter: void setPattern(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.mvc.multiaction.MultiActionController: org.springframework.web.servlet.ModelAndView invokeNamedMethod(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanDefinition: java.lang.String getFactoryBeanName()> -> _SOURCES_
<org.springframework.web.servlet.mvc.condition.RequestConditionHolder: int compareTo(org.springframework.web.servlet.mvc.condition.RequestConditionHolder,javax.servlet.http.HttpServletRequest)> -> _SINKS_
<org.springframework.web.util.UrlPathHelper: java.lang.String getRequestUri(javax.servlet.http.HttpServletRequest)> -> _CWE079__SOURCES_
<org.springframework.test.web.servlet.request.MockMvcRequestBuilders: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder post(java.lang.String,java.lang.Object[])> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder: org.springframework.web.servlet.mvc.method.'annotation'.MvcUriComponentsBuilder$MethodArgumentBuilder fromMappingName(org.springframework.web.util.UriComponentsBuilder,java.lang.String)> -> _SINKS_
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Object[])> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setInitBinderArgumentResolvers(java.util.List)> -> _SINKS_
<org.springframework.test.web.client.match.ContentRequestMatchers: org.springframework.test.web.client.RequestMatcher contentType(org.springframework.http.MediaType)> -> _SOURCES_
<org.springframework.expression.common.LiteralExpression: java.lang.Class getValueType(org.springframework.expression.EvaluationContext,java.lang.Object)> -> _SOURCES_
<org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler: void execute(java.lang.Runnable)> -> _CWE078__SINKS_
<org.springframework.test.web.servlet.result.CookieResultMatchers: javax.servlet.http.Cookie getCookie(org.springframework.test.web.servlet.MvcResult,java.lang.String)> -> _SOURCES_
<org.springframework.jmx.support.MBeanServerFactoryBean: void setRegisterWithFactory(boolean)> -> _SINKS_
<org.springframework.web.socket.handler.WebSocketHandlerDecorator: void afterConnectionClosed(org.springframework.web.socket.WebSocketSession,org.springframework.web.socket.CloseStatus)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.test.web.servlet.result.PrintingResultHandler: org.springframework.http.HttpHeaders getResponseHeaders(org.springframework.mock.web.MockHttpServletResponse)> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateAccessor: void setFilterName(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.support.SQLErrorCodes: java.lang.String[] getPermissionDeniedCodes()> -> _CWE089__SOURCES_
<org.springframework.expression.spel.standard.SpelExpression: org.springframework.expression.spel.SpelNode getAST()> -> _SOURCES_
<org.springframework.messaging.simp.config.ChannelRegistration: org.springframework.messaging.simp.config.TaskExecutorRegistration taskExecutor(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor)> -> _SINKS_
<org.springframework.web.accept.ParameterContentNegotiationStrategy: java.lang.String getParameterName()> -> _SOURCES_
<org.springframework.oxm.jaxb.Jaxb2Marshaller: void setUnmarshallerListener(javax.xml.bind.Unmarshaller$Listener)> -> _SINKS_
<org.springframework.web.servlet.view.feed.AbstractAtomFeedView: void setFeedType(java.lang.String)> -> _SINKS_
<org.springframework.core.enums.AbstractCachingLabeledEnumResolver: org.springframework.core.enums.LabeledEnum getLabeledEnumByCode(java.lang.Class,java.lang.Comparable)> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor: java.lang.Class getReturnValueType(java.lang.Object,org.springframework.core.MethodParameter)> -> _SOURCES_
<org.springframework.core.type.StandardMethodMetadata: org.springframework.util.MultiValueMap getAllAnnotationAttributes(java.lang.String,boolean)> -> _SOURCES_
<org.springframework.expression.spel.standard.SpelExpressionParser: org.springframework.expression.spel.standard.SpelExpression parseRaw(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.core.simple.SimpleJdbcTemplate: int[] batchUpdate(java.lang.String,java.util.Map[])> -> _CWE089__SINKS_
<org.springframework.security.core.parameters.AnnotationParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Constructor)> -> _SOURCES_
<org.springframework.aop.target.CommonsPoolTargetSource: int getIdleCount()> -> _SOURCES_
<org.springframework.web.util.ContentCachingResponseWrapper: void sendRedirect(java.lang.String)> -> _SINKS__CWE601_
<org.springframework.core.MethodParameter: java.lang.reflect.Method getMethod()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockStateAwareResponse: java.lang.String getRenderParameter(java.lang.String)> -> _SOURCES__CWE601_
<org.springframework.remoting.jaxrpc.ServletEndpointSupport: org.springframework.web.context.WebApplicationContext getWebApplicationContext()> -> _SOURCES_
<org.springframework.mock.web.MockServletContext: javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)> -> _SOURCES_
<org.springframework.test.context.junit4.SpringJUnit4ClassRunner: java.lang.Class getExpectedException(org.junit.runners.model.FrameworkMethod)> -> _SOURCES_
<org.springframework.jdbc.support.incrementer.MySQLMaxValueIncrementer: long getNextKey()> -> _CWE089__SOURCES_
<org.springframework.jms.connection.SingleConnectionFactory: void initConnection()> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.resource.ResourceUrlProvider: void setHandlerMap(java.util.Map)> -> _SINKS_
<org.springframework.web.servlet.mvc.UrlFilenameViewController: void setSuffix(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.MockFilterConfig: java.lang.String getInitParameter(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.handler.AbstractHandlerMapping: org.springframework.web.servlet.HandlerExecutionChain getCorsHandlerExecutionChain(javax.servlet.http.HttpServletRequest,org.springframework.web.servlet.HandlerExecutionChain,org.springframework.web.cors.CorsConfiguration)> -> _SOURCES__SINKS_
<org.springframework.orm.jdo.support.OpenPersistenceManagerInViewFilter: java.lang.String getPersistenceManagerFactoryBeanName()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletResponse: int getBufferSize()> -> _SOURCES__CWE601_
<org.springframework.remoting.rmi.RmiInvocationWrapper_Stub: java.lang.Object invoke(org.springframework.remoting.support.RemoteInvocation)> -> _SINKS_
<org.springframework.core.type.classreading.ClassMetadataReadingVisitor: java.lang.String getSuperClassName()> -> _SOURCES_
<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: void setStaticField(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.MockJspWriter: void write(char[],int,int)> -> _SINKS_
<org.springframework.beans.InvalidPropertyException: java.lang.String getPropertyName()> -> _SOURCES_
<org.springframework.web.socket.sockjs.support.AbstractSockJsService: long getDisconnectDelay()> -> _CWE306__SOURCES_
<org.springframework.http.client.HttpComponentsClientHttpRequest: org.springframework.http.HttpMethod getMethod()> -> _SOURCES_
<org.springframework.web.socket.adapter.standard.ConvertingEncoderDecoderSupport: org.springframework.core.convert.TypeDescriptor getType()> -> _SOURCES_
<org.springframework.security.core.token.DefaultToken: long getKeyCreationTime()> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler: java.util.Map getSystemSubscriptions()> -> _SOURCES_
<org.springframework.messaging.converter.MappingJackson2MessageConverter: void setPrettyPrint(boolean)> -> _SINKS_
<org.springframework.web.socket.sockjs.transport.handler.SockJsWebSocketHandler: void afterConnectionClosed(org.springframework.web.socket.WebSocketSession,org.springframework.web.socket.CloseStatus)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.core.env.CompositePropertySource: java.util.Collection getPropertySources()> -> _SOURCES_
<org.springframework.remoting.jaxrpc.JaxRpcPortClientInterceptor: void setUsername(java.lang.String)> -> _SINKS_
<org.springframework.jms.core.JmsMessagingTemplate: void setJmsMessageConverter(org.springframework.jms.support.converter.MessageConverter)> -> _SINKS_
<org.springframework.web.servlet.view.script.ScriptTemplateView: void loadScripts(javax.script.ScriptEngine)> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: java.lang.String getOnmousedown()> -> _CWE079__SOURCES_
<org.springframework.messaging.simp.stomp.StompHeaders: java.lang.String getHost()> -> _SOURCES_
<org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor: void setBeanName(java.lang.String)> -> _SINKS_
<org.springframework.web.filter.CharacterEncodingFilter: void setForceEncoding(boolean)> -> _SINKS_
<org.springframework.web.servlet.theme.ThemeChangeInterceptor: void setParamName(java.lang.String)> -> _SINKS_
<org.springframework.messaging.core.AbstractMessageSendingTemplate: java.lang.Object getDefaultDestination()> -> _SOURCES_
<org.springframework.mail.javamail.JavaMailSenderImpl: void setUsername(java.lang.String)> -> _SINKS_
<org.springframework.test.context.web.socket.MockServerContainer: void setDefaultMaxBinaryMessageBufferSize(int)> -> _SINKS_
<org.springframework.jms.connection.SingleConnectionFactory102: javax.jms.Connection doCreateConnection()> -> _CWE306__SOURCES__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.scheduling.quartz.SchedulerFactoryBean: void setSchedulerContextAsMap(java.util.Map)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setArgumentResolvers(java.util.List)> -> _SINKS_
<org.springframework.web.context.support.ServletConfigPropertySource: java.lang.String getProperty(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.view.jasperreports.JasperReportsViewResolver: void setSubReportDataKeys(java.lang.String[])> -> _SINKS_
<org.springframework.web.portlet.handler.AbstractHandlerMapping: void setDefaultHandler(java.lang.Object)> -> _SINKS_
<org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory: void setValidator(org.springframework.validation.Validator)> -> _SINKS_
<org.springframework.orm.ibatis.SqlMapClientFactoryBean: void setDataSource(javax.sql.DataSource)> -> _SINKS_
<org.springframework.jms.core.JmsMessagingTemplate: java.lang.String getDefaultDestinationName()> -> _SOURCES_
<org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry: int getCacheLimit()> -> _SOURCES_
<org.springframework.web.servlet.view.XmlViewResolver: org.springframework.web.servlet.View loadView(java.lang.String,java.util.Locale)> -> _SOURCES_
<org.springframework.web.servlet.support.AbstractFlashMapManager: org.springframework.web.util.UrlPathHelper getUrlPathHelper()> -> _SOURCES_
<org.springframework.messaging.handler.DestinationPatternsMessageCondition: java.util.Set getPatterns()> -> _SOURCES_
<org.springframework.transaction.annotation.AnnotationTransactionAttributeSource: org.springframework.transaction.interceptor.TransactionAttribute determineTransactionAttribute(java.lang.reflect.AnnotatedElement)> -> _SINKS_
<org.springframework.http.client.HttpComponentsClientHttpRequest: org.springframework.http.client.ClientHttpResponse executeInternal(org.springframework.http.HttpHeaders,byte[])> -> _CWE078__SINKS_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: org.springframework.jdbc.support.rowset.SqlRowSetMetaData getMetaData()> -> _CWE089__SOURCES_
<org.springframework.orm.toplink.LocalSessionFactory: oracle.toplink.tools.sessionmanagement.SessionManager getSessionManager()> -> _SOURCES_
<org.springframework.jca.work.WorkManagerTaskExecutor: void setWorkManager(javax.resource.spi.work.WorkManager)> -> _SINKS_
<org.springframework.http.client.OkHttpClientHttpRequest: org.springframework.http.HttpMethod getMethod()> -> _SOURCES_
<org.springframework.web.client.RestTemplate: void put(java.lang.String,java.lang.Object,java.lang.Object[])> -> _SINKS_
<org.springframework.web.client.RestClientResponseException: java.lang.String getResponseBodyAsString()> -> _SOURCES__CWE601_
<org.springframework.scheduling.concurrent.ScheduledExecutorFactoryBean: void setRejectedExecutionHandler(java.util.concurrent.RejectedExecutionHandler)> -> _SINKS_
<org.springframework.web.servlet.ModelAndView: java.lang.String getViewName()> -> _SOURCES_
<org.springframework.expression.spel.ast.FloatLiteral: org.springframework.expression.TypedValue getLiteralValue()> -> _SOURCES_
<org.springframework.web.cors.CorsConfiguration: java.lang.Long getMaxAge()> -> _SOURCES_
<org.springframework.web.context.support.AbstractRefreshableWebApplicationContext: void setNamespace(java.lang.String)> -> _SINKS_
<org.springframework.jms.support.converter.SimpleMessageConverter: javax.jms.BytesMessage createMessageForByteArray(byte[],javax.jms.Session)> -> _SOURCES__SINKS_
<org.springframework.transaction.interceptor.DelegatingTransactionAttribute: int getTimeout()> -> _SOURCES_
<org.springframework.cache.guava.GuavaCache: org.springframework.cache.Cache$ValueWrapper get(java.lang.Object)> -> _SOURCES_
<org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder: org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder setDataSourceFactory(org.springframework.jdbc.datasource.embedded.DataSourceFactory)> -> _CWE089__SINKS_
<org.springframework.test.context.support.AnnotationConfigContextLoader: void loadBeanDefinitions(org.springframework.context.support.GenericApplicationContext,org.springframework.test.context.MergedContextConfiguration)> -> _SOURCES_
<org.springframework.web.bind.ServletRequestUtils: long getRequiredLongParameter(javax.servlet.ServletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.web.portlet.context.AbstractRefreshablePortletApplicationContext: java.lang.String[] getConfigLocations()> -> _SOURCES_
<org.springframework.jms.listener.serversession.CommonsPoolServerSessionFactory: void setMinIdle(int)> -> _SINKS_
<org.springframework.cglib.core.CodeEmitter: void load_arg(int)> -> _SOURCES_
<org.springframework.util.xml.AbstractXMLReader: org.xml.sax.ext.LexicalHandler getLexicalHandler()> -> _SOURCES_
<org.springframework.validation.BindException: org.springframework.beans.PropertyEditorRegistry getPropertyEditorRegistry()> -> _SOURCES_
<org.springframework.core.convert.support.ArrayToArrayConverter: java.util.Set getConvertibleTypes()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.FormTag: java.lang.String getAction()> -> _SOURCES_
<org.springframework.messaging.core.GenericMessagingTemplate: void setSendTimeout(long)> -> _SINKS_
<org.springframework.util.xml.StaxResult: javax.xml.stream.XMLEventWriter getXMLEventWriter()> -> _SOURCES_
<org.springframework.util.xml.DomUtils: java.lang.String getTextValue(org.w3c.dom.Element)> -> _SOURCES_
<org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessorAdapter: java.lang.Object getEarlyBeanReference(java.lang.Object,java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.PathMatchConfigurer: org.springframework.util.PathMatcher getPathMatcher()> -> _SOURCES_
<org.springframework.web.servlet.handler.UserRoleAuthorizationInterceptor: void handleNotAuthorized(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)> -> _SINKS__CWE862_
<org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor: javax.servlet.http.HttpSession getSession(org.springframework.http.server.ServerHttpRequest)> -> _SOURCES_
<org.springframework.util.xml.StaxUtils: org.xml.sax.XMLReader createXMLReader(javax.xml.stream.XMLEventReader)> -> _SOURCES_
<org.springframework.messaging.support.MessageHeaderAccessor: void setErrorChannel(org.springframework.messaging.MessageChannel)> -> _SINKS_
<org.springframework.web.filter.HiddenHttpMethodFilter: void setMethodParam(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.mvc.WebContentInterceptor: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)> -> _SINKS_
<org.springframework.remoting.jaxws.JaxWsPortClientInterceptor: java.lang.String getPassword()> -> _SOURCES_
<org.springframework.test.annotation.SystemProfileValueSource: java.lang.String get(java.lang.String)> -> _SOURCES_
<org.springframework.jmx.export.assembler.AbstractReflectiveMBeanInfoAssembler: java.lang.String getOperationDescription(java.lang.reflect.Method,java.lang.String)> -> _SOURCES_
<org.springframework.cglib.core.AbstractClassGenerator: void setNamingPolicy(org.springframework.cglib.core.NamingPolicy)> -> _SINKS_
<org.springframework.core.env.AbstractEnvironment: java.util.Set getReservedDefaultProfiles()> -> _SOURCES_
<org.springframework.remoting.jaxrpc.ServletEndpointSupport: org.springframework.context.support.MessageSourceAccessor getMessageSourceAccessor()> -> _SOURCES_
<org.springframework.http.client.BufferingClientHttpResponseWrapper: org.springframework.http.HttpStatus getStatusCode()> -> _SOURCES__CWE601_
<org.springframework.jdbc.datasource.DataSourceUtils: boolean connectionEquals(org.springframework.jdbc.datasource.ConnectionHolder,java.sql.Connection)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__CWE862_
<org.springframework.scheduling.concurrent.DefaultManagedAwareThreadFactory: void setResourceRef(boolean)> -> _SINKS_
<org.springframework.jdbc.support.lob.PassThroughBlob: java.io.OutputStream setBinaryStream(long)> -> _CWE089__SINKS_
<org.springframework.util.AutoPopulatingList: java.lang.Object set(int,java.lang.Object)> -> _SINKS_
<org.springframework.jms.config.AbstractJmsListenerEndpoint: java.lang.String getSubscription()> -> _SOURCES_
<org.springframework.test.web.client.match.JsonPathRequestMatchers: org.springframework.test.web.client.RequestMatcher value(org.hamcrest.Matcher,java.lang.Class)> -> _SOURCES_
<org.springframework.web.context.request.async.DeferredResult: boolean setResult(java.lang.Object)> -> _SINKS_
<org.springframework.jmx.export.metadata.AttributesJmxAttributeSource: org.springframework.jmx.export.metadata.ManagedNotification[] getManagedNotifications(java.lang.Class)> -> _SOURCES_
<org.springframework.beans.support.MutableSortDefinition: void setIgnoreCase(boolean)> -> _SINKS_
<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.mock.web.MockHttpServletRequest buildRequest(javax.servlet.ServletContext)> -> _SOURCES_
<org.springframework.expression.spel.support.StandardEvaluationContext: org.springframework.expression.OperatorOverloader getOperatorOverloader()> -> _SOURCES_
<org.springframework.jdbc.object.SqlQuery: java.util.List execute(java.lang.Object[])> -> _CWE078__CWE089__SINKS_
<org.springframework.http.converter.protobuf.ProtobufHttpMessageConverter: org.springframework.http.MediaType getDefaultContentType(com.google.protobuf.Message)> -> _SOURCES_
<org.springframework.web.socket.WebSocketHttpHeaders: java.lang.String getSecWebSocketVersion()> -> _SOURCES_
<org.springframework.test.context.web.socket.MockServerContainer: void setDefaultMaxTextMessageBufferSize(int)> -> _SINKS_
<org.springframework.core.GenericTypeResolver: java.lang.reflect.Type getTargetType(org.springframework.core.MethodParameter)> -> _SOURCES_
<org.springframework.validation.beanvalidation.LocalValidatorFactoryBean: void setMessageInterpolator(javax.validation.MessageInterpolator)> -> _SINKS_
<org.springframework.scheduling.quartz.SchedulerFactoryBean: void setExposeSchedulerInRepository(boolean)> -> _SINKS_
<org.springframework.web.servlet.view.jasperreports.ConfigurableJasperReportsView: void setExporterClass(java.lang.Class)> -> _SINKS_
<org.springframework.messaging.tcp.FixedIntervalReconnectStrategy: java.lang.Long getTimeToNextAttempt(int)> -> _SOURCES_
<org.springframework.security.authentication.jaas.AbstractJaasAuthenticationProvider: void handleLogout(org.springframework.security.core.session.SessionDestroyedEvent)> -> _CWE306__AUTHENTICATIONS_TO_LOW__CWE862_
<org.springframework.cache.support.NoOpCache: org.springframework.cache.Cache$ValueWrapper get(java.lang.Object)> -> _SOURCES_
<org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver: org.springframework.web.servlet.ModelAndView handleHttpMediaTypeNotSupported(org.springframework.web.HttpMediaTypeNotSupportedException,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)> -> _SINKS_
<org.springframework.security.authentication.ProviderManager: org.springframework.security.core.Authentication doAuthentication(org.springframework.security.core.Authentication)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.core.ResolvableType: org.springframework.core.ResolvableType getNested(int)> -> _SOURCES_
<org.springframework.cglib.reflect.FastConstructor: java.lang.Class[] getExceptionTypes()> -> _SOURCES_
<org.springframework.orm.jpa.JpaTemplate: java.lang.Object getReference(java.lang.Class,java.lang.Object)> -> _SOURCES_
<org.springframework.jca.cci.object.MappingRecordOperation: void setOutputRecordCreator(org.springframework.jca.cci.core.RecordCreator)> -> _SINKS_
<org.springframework.util.xml.AbstractStaxXMLReader: void setFeature(java.lang.String,boolean)> -> _SINKS_
<org.springframework.jca.cci.core.support.CommAreaRecord: java.lang.String getRecordShortDescription()> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer: org.springframework.core.task.AsyncTaskExecutor getTaskExecutor()> -> _SOURCES_
<org.springframework.web.socket.client.standard.EndpointConnectionManager: void setEncoders(java.util.List)> -> _SINKS_
<org.springframework.web.servlet.config.annotation.RedirectViewControllerRegistration: org.springframework.web.servlet.mvc.ParameterizableViewController getViewController()> -> _SOURCES_
<org.springframework.scheduling.quartz.SimpleTriggerFactoryBean: void setStartTime(java.util.Date)> -> _SINKS_
<org.springframework.web.servlet.ModelAndView: java.util.Map getModelInternal()> -> _SOURCES_
<org.springframework.security.config.authentication.AbstractUserDetailsServiceBeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES__SINKS__CWE862_
<org.springframework.jms.connection.TransactionAwareConnectionFactoryProxy: javax.jms.Connection createConnection(java.lang.String,java.lang.String)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.security.access.intercept.RunAsUserToken: java.lang.Class getOriginalAuthentication()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.scheduling.quartz.SchedulerFactoryBean: void setBeanName(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.tags.form.OptionsTag: void setItemValue(java.lang.String)> -> _SINKS_
<org.springframework.expression.common.CompositeStringExpression: java.lang.Class getValueType(java.lang.Object)> -> _SOURCES_
<org.springframework.web.servlet.support.RequestContext: org.springframework.web.servlet.support.BindStatus getBindStatus(java.lang.String,boolean)> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateTemplate: java.lang.Object executeWithNewSession(org.springframework.orm.hibernate3.HibernateCallback)> -> _SINKS_
<org.springframework.jms.connection.CachingConnectionFactory: void setSessionCacheSize(int)> -> _SINKS_
<org.springframework.jdbc.support.xml.Jdbc4SqlXmlHandler: org.springframework.jdbc.support.xml.SqlXmlValue newSqlXmlValue(java.lang.Class,org.springframework.jdbc.support.xml.XmlResultProvider)> -> _CWE089__SINKS_
<org.springframework.beans.factory.groovy.GroovyBeanDefinitionWrapper: void setBeanDefinitionHolder(org.springframework.beans.factory.config.BeanDefinitionHolder)> -> _SINKS_
<org.springframework.web.context.request.async.CallableInterceptorChain: void triggerAfterCompletion(org.springframework.web.context.request.NativeWebRequest,java.util.concurrent.Callable)> -> _SINKS_
<org.springframework.core.io.support.EncodedResource: org.springframework.core.io.Resource getResource()> -> _SOURCES_
<org.springframework.aop.aspectj.annotation.AspectJProxyFactory: java.lang.Object getProxy()> -> _SOURCES_
<org.springframework.jdbc.support.lob.PassThroughClob: java.io.Reader getCharacterStream()> -> _CWE089__SOURCES_
<org.springframework.web.servlet.view.jasperreports.JasperReportsMultiFormatView: boolean generatesDownloadContent()> -> _SOURCES_
<org.springframework.cache.ehcache.EhCacheFactoryBean: void setMaxElementsOnDisk(int)> -> _SINKS_
<org.springframework.beans.factory.support.PropertiesBeanDefinitionReader: int loadBeanDefinitions(org.springframework.core.io.support.EncodedResource,java.lang.String)> -> _SOURCES_
<org.springframework.web.portlet.mvc.PortletWrappingController: void setBeanName(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.core.ArgumentTypePreparedStatementSetter: void setValues(java.sql.PreparedStatement)> -> _CWE089__SINKS_
<org.springframework.core.enums.AbstractCachingLabeledEnumResolver: java.util.Map getLabeledEnumMap(java.lang.Class)> -> _SOURCES_
<org.springframework.beans.factory.access.el.SpringBeanELResolver: java.lang.Object getValue(javax.el.ELContext,java.lang.Object,java.lang.Object)> -> _SOURCES_
<org.springframework.orm.hibernate3.LocalSessionFactoryBean: void executeSchemaStatement(java.sql.Statement,java.lang.String)> -> _CWE078__CWE089__SINKS_
<org.springframework.security.crypto.password.StandardPasswordEncoder: java.lang.String encode(java.lang.CharSequence)> -> _SANITIZERS_
<org.springframework.messaging.simp.stomp.StompHeaderAccessor: java.lang.String getVersion()> -> _SOURCES_
<org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor: void setTransactionInterceptor(org.springframework.transaction.interceptor.TransactionInterceptor)> -> _SINKS_
<org.springframework.security.core.session.SessionInformation: java.util.Date getLastRequest()> -> _SOURCES_
<org.springframework.orm.hibernate5.HibernateTemplate: java.util.List loadAll(java.lang.Class)> -> _SOURCES_
<org.springframework.web.bind.EscapedErrors: java.util.List getFieldErrors(java.lang.String)> -> _SOURCES_
<org.springframework.aop.framework.ProxyFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.test.web.servlet.request.MockMvcRequestBuilders: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder patch(java.lang.String,java.lang.Object[])> -> _SOURCES_
<org.springframework.orm.hibernate3.LocalSessionFactoryBean: void setTypeDefinitions(org.springframework.orm.hibernate3.TypeDefinitionBean[])> -> _SINKS_
<org.springframework.test.context.jdbc.MergedSqlConfig: java.lang.String getBlockCommentStartDelimiter()> -> _CWE089__SOURCES_
<org.springframework.mock.web.MockBodyContent: void println(long)> -> _SINKS_
<org.springframework.mock.jndi.SimpleNamingContext: java.lang.String getNameInNamespace()> -> _SOURCES_
<org.springframework.orm.jdo.DefaultJdoDialect: void releaseJdbcConnection(org.springframework.jdbc.datasource.ConnectionHandle,javax.jdo.PersistenceManager)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.cache.interceptor.CacheOperation: java.util.Set getCacheNames()> -> _SOURCES_
<org.springframework.jms.connection.ConnectionFactoryUtils: javax.jms.TopicSession getTransactionalTopicSession(javax.jms.TopicConnectionFactory,javax.jms.TopicConnection,boolean)> -> _SOURCES_
<org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration: org.springframework.security.authentication.AuthenticationManager getAuthenticationMangerBean()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES_
<org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder: java.util.Collection getConfigurers()> -> _SOURCES_
<org.springframework.beans.factory.config.ServiceLocatorFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.AbstractXhrTransport: org.springframework.http.HttpHeaders getRequestHeaders()> -> _SOURCES_
<org.springframework.cglib.proxy.Enhancer: void setSerialVersionUID(java.lang.Long)> -> _SINKS_
<org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean: void setTargetBeanName(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.object.BatchSqlUpdate: int[] getRowsAffected()> -> _CWE089__SOURCES_
<org.springframework.web.filter.HttpPutFormContentFilter: org.springframework.http.converter.FormHttpMessageConverter getFormConverter()> -> _SOURCES_
<org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer: void setServletContext(javax.servlet.ServletContext)> -> _SINKS_
<org.springframework.context.support.ResourceMapFactoryBean: void setResourceBasePath(java.lang.String)> -> _SINKS_
<org.springframework.remoting.caucho.HessianClientInterceptor: void setDebug(boolean)> -> _SINKS_
<org.springframework.mock.web.portlet.MockRenderResponse: java.util.Collection getNextPossiblePortletModes()> -> _SOURCES__CWE601_
<org.springframework.messaging.simp.stomp.StompHeaders: java.lang.String getServer()> -> _SOURCES_
<org.springframework.mock.web.MockServletContext: void setEffectiveMajorVersion(int)> -> _SINKS_
<org.springframework.cglib.core.Local: int getIndex()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.InputTag: java.lang.String getMaxlength()> -> _SOURCES_
<org.springframework.web.context.request.FacesRequestAttributes: java.lang.Object getAttribute(java.lang.String,int)> -> _SOURCES_
<org.springframework.web.portlet.FrameworkPortlet: void setContextClass(java.lang.Class)> -> _SINKS_
<org.springframework.beans.propertyeditors.CustomNumberEditor: void setValue(java.lang.Object)> -> _SINKS_
<org.springframework.orm.hibernate4.LocalSessionFactoryBean: void setMappingDirectoryLocations(org.springframework.core.io.Resource[])> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: org.springframework.web.servlet.ModelAndView getModelAndView(org.springframework.web.method.support.ModelAndViewContainer,org.springframework.web.method.'annotation'.ModelFactory,org.springframework.web.context.request.NativeWebRequest)> -> _SOURCES_
<org.springframework.transaction.interceptor.AttributesTransactionAttributeSource: void setAttributes(org.springframework.metadata.Attributes)> -> _SINKS_
<org.springframework.security.access.expression.SecurityExpressionRoot: java.lang.Object getPrincipal()> -> _SOURCES_
<org.springframework.cglib.core.ReflectUtils: org.springframework.cglib.core.ClassInfo getClassInfo(java.lang.Class)> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.PathMatchConfigurer: org.springframework.web.util.UrlPathHelper getUrlPathHelper()> -> _SOURCES_
<org.springframework.orm.jpa.EntityManagerFactoryAccessor: void setJpaPropertyMap(java.util.Map)> -> _SINKS_
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: java.lang.String getId()> -> _SOURCES_
<org.springframework.core.task.SimpleAsyncTaskExecutor: void setConcurrencyLimit(int)> -> _SINKS_
<org.springframework.scheduling.quartz.CronTriggerFactoryBean: void setMisfireInstruction(int)> -> _SINKS_
<org.springframework.http.client.HttpComponentsClientHttpRequestFactory: org.apache.http.client.config.RequestConfig createRequestConfig(java.lang.Object)> -> _SOURCES_
<org.springframework.web.context.support.ServletConfigPropertySource: java.lang.String[] getPropertyNames()> -> _SOURCES_
<org.springframework.asm.TypeReference: int getExceptionIndex()> -> _SOURCES_
<org.springframework.scheduling.support.DelegatingExceptionProofRunnable: java.lang.Runnable getDelegate()> -> _SOURCES_
<org.springframework.cglib.core.CodeEmitter: void load_local(org.springframework.cglib.core.Local)> -> _SOURCES_
<org.springframework.web.portlet.context.PortletContextResource: java.io.File getFile()> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompHeaders: java.lang.String getLogin()> -> _CWE306__SOURCES_
<org.springframework.orm.jdo.JdoTemplate: java.util.Collection executeFind(org.springframework.orm.jdo.JdoCallback)> -> _CWE078__SINKS_
<org.springframework.aop.aspectj.AspectJPointcutAdvisor: void setOrder(int)> -> _SINKS_
<org.springframework.mock.web.MockFilterConfig: javax.servlet.ServletContext getServletContext()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockEvent: java.io.Serializable getValue()> -> _SOURCES_
<org.springframework.aop.aspectj.SingletonAspectInstanceFactory: java.lang.Object getAspectInstance()> -> _SOURCES_
<org.springframework.web.servlet.support.RequestContext: boolean isResponseEncodedHtmlEscape()> -> _SANITIZERS_
<org.springframework.ui.context.support.DelegatingThemeSource: void setParentThemeSource(org.springframework.ui.context.ThemeSource)> -> _SINKS_
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: java.lang.String[] getBeanNamesForType(org.springframework.core.ResolvableType)> -> _SOURCES_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.util.concurrent.ListenableFuture optionsForAllow(java.lang.String,java.lang.Object[])> -> _SINKS_
<org.springframework.mail.javamail.InternetAddressEditor: java.lang.String getAsText()> -> _SOURCES_
<org.springframework.context.support.GenericGroovyApplicationContext: java.lang.Object getProperty(java.lang.String)> -> _SOURCES_
<org.springframework.web.socket.server.standard.ServerEndpointRegistration: void modifyHandshake(javax.websocket.server.ServerEndpointConfig,javax.websocket.server.HandshakeRequest,javax.websocket.HandshakeResponse)> -> _SINKS_
<org.springframework.web.portlet.context.PortletRequestAttributes: java.lang.String getSessionId()> -> _SOURCES_
<org.springframework.messaging.simp.config.StompBrokerRelayRegistration: org.springframework.messaging.simp.config.StompBrokerRelayRegistration setClientPasscode(java.lang.String)> -> _SINKS_
<org.springframework.cache.interceptor.CacheExpressionRootObject: java.lang.reflect.Method getMethod()> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession: long getTimeSinceLastActive()> -> _SOURCES_
<org.springframework.web.servlet.handler.SimpleMappingExceptionResolver: org.springframework.web.servlet.ModelAndView getModelAndView(java.lang.String,java.lang.Exception)> -> _SOURCES_
<org.springframework.web.servlet.handler.MappedInterceptor: boolean preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)> -> _SINKS_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: java.lang.Object getObject(int)> -> _CWE089__SOURCES_
<org.springframework.web.portlet.mvc.annotation.AnnotationMethodHandlerAdapter: org.springframework.web.portlet.mvc.'annotation'.AnnotationMethodHandlerAdapter$PortletHandlerMethodResolver getMethodResolver(java.lang.Object)> -> _SOURCES_
<org.springframework.aop.support.AbstractExpressionPointcut: void setLocation(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.view.tiles2.AbstractSpringPreparerFactory: org.apache.tiles.preparer.ViewPreparer getPreparer(java.lang.String,org.apache.tiles.context.TilesRequestContext)> -> _SOURCES_
<org.springframework.web.context.ContextLoader: org.springframework.web.context.WebApplicationContext createWebApplicationContext(javax.servlet.ServletContext,org.springframework.context.ApplicationContext)> -> _SOURCES_
<org.springframework.cache.ehcache.EhCacheCacheManager: void setCacheManager(net.sf.ehcache.CacheManager)> -> _SINKS_
<org.springframework.orm.hibernate4.LocalSessionFactoryBuilder: org.springframework.orm.hibernate4.LocalSessionFactoryBuilder setJtaTransactionManager(java.lang.Object)> -> _SINKS_
<org.springframework.web.socket.sockjs.client.JettyXhrTransport: org.springframework.http.ResponseEntity executeInfoRequestInternal(java.net.URI,org.springframework.http.HttpHeaders)> -> _CWE078__SINKS_
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void setAllowRawInjectionDespiteWrapping(boolean)> -> _SINKS_
<org.springframework.jms.core.JmsTemplate102: void doSend(javax.jms.MessageProducer,javax.jms.Message)> -> _SINKS_
<org.springframework.core.Conventions: java.lang.String getQualifiedAttributeName(java.lang.Class,java.lang.String)> -> _SOURCES_
<org.springframework.jca.cci.core.support.CommAreaRecord: void setRecordName(java.lang.String)> -> _SINKS_
<org.springframework.jms.listener.endpoint.JmsActivationSpecConfig: java.lang.String getMessageSelector()> -> _SOURCES_
<org.springframework.aop.aspectj.DeclareParentsAdvisor: java.lang.Class[] getInterfaces()> -> _SOURCES_
<org.springframework.mock.web.MockServletContext: void setDefaultServletName(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.security.provisioning.MutableUser: void setPassword(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.MockBodyContent: void writeOut(java.io.Writer)> -> _SINKS_
<org.springframework.core.SimpleAliasRegistry: java.lang.String[] getAliases(java.lang.String)> -> _SOURCES_
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getGenericReturnType(java.lang.reflect.Method,java.lang.Class,int,int)> -> _SOURCES_
<org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl: org.springframework.security.core.userdetails.UserDetails loadUserByUsername(java.lang.String)> -> _CWE089__SOURCES__CWE862_
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapValueParameterType(org.springframework.core.MethodParameter)> -> _SOURCES_
<org.springframework.http.converter.BufferedImageHttpMessageConverter: org.springframework.http.MediaType getDefaultContentType()> -> _SOURCES_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.util.concurrent.ListenableFuture getForEntity(java.net.URI,java.lang.Class)> -> _SOURCES__SINKS_
<org.springframework.mock.web.portlet.MockPortletRequest: void setScheme(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.jmx.export.metadata.ManagedMetric: void setPersistPeriod(int)> -> _SINKS_
<org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer: org.springframework.security.config.'annotation'.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry getRegistry()> -> _SOURCES_
<org.springframework.cglib.reflect.MulticastDelegate: java.util.List getTargets()> -> _SOURCES_
<org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource: org.springframework.jmx.export.metadata.ManagedOperationParameter[] getManagedOperationParameters(java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.http.client.SimpleClientHttpRequestFactory: org.springframework.http.client.AsyncClientHttpRequest createAsyncRequest(java.net.URI,org.springframework.http.HttpMethod)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletRequest: java.util.Map getPublicParameterMap()> -> _SOURCES_
<org.springframework.expression.spel.ast.Literal: org.springframework.expression.spel.ast.Literal getIntLiteral(java.lang.String,int,int)> -> _SOURCES_
<org.springframework.mock.web.portlet.ServletWrappingPortletContext: void setAttribute(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.jdbc.support.incrementer.AbstractColumnMaxValueIncrementer: void setColumnName(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.messaging.simp.user.UserDestinationResult: java.lang.String getSubscribeDestination()> -> _SOURCES__CWE862_
<org.springframework.web.context.request.FacesWebRequest: java.lang.Object getNativeRequest()> -> _SOURCES_
<org.springframework.jms.listener.serversession.ServerSessionMessageListenerContainer: int getMaxMessagesPerTask()> -> _SOURCES_
<org.springframework.format.datetime.joda.ReadableInstantPrinter: java.lang.String print(java.lang.Object,java.util.Locale)> -> _SINKS_
<org.springframework.jdbc.support.SQLErrorCodes: java.lang.String[] getDataAccessResourceFailureCodes()> -> _CWE089__SOURCES_
<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor: int getOrder()> -> _SOURCES_
<org.springframework.jdbc.support.nativejdbc.SimpleNativeJdbcExtractor: void setNativeConnectionNecessaryForNativePreparedStatements(boolean)> -> _CWE306__CWE089__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.oxm.xstream.XStreamMarshaller: void setConverterRegistry(com.thoughtworks.xstream.converters.ConverterRegistry)> -> _SINKS_
<org.springframework.security.access.intercept.AbstractSecurityInterceptor: org.springframework.security.authentication.AuthenticationManager getAuthenticationManager()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES_
<org.springframework.context.annotation.AnnotatedBeanDefinitionReader: void setBeanNameGenerator(org.springframework.beans.factory.support.BeanNameGenerator)> -> _SINKS_
<org.springframework.web.servlet.view.jasperreports.AbstractJasperReportsView: void setSubReportDataKeys(java.lang.String[])> -> _SINKS_
<org.springframework.scheduling.timer.MethodInvokingTimerTaskFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.scheduling.annotation.AnnotationAsyncExecutionInterceptor: java.lang.String getExecutorQualifier(java.lang.reflect.Method)> -> _CWE078__SOURCES__SINKS_
<org.springframework.web.servlet.FrameworkServlet: java.lang.String getUsernameForRequest(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.jms.listener.serversession.SimpleServerSessionFactory: org.springframework.core.task.TaskExecutor getTaskExecutor()> -> _SOURCES_
<org.springframework.remoting.support.RemoteExporter: java.lang.Object getProxyForService()> -> _SOURCES_
<org.springframework.web.servlet.handler.AbstractHandlerMapping: org.springframework.web.servlet.HandlerExecutionChain getHandler(javax.servlet.http.HttpServletRequest)> -> _SOURCES__SINKS_
<org.springframework.mail.javamail.MimeMessageHelper: void setFrom(javax.mail.internet.InternetAddress)> -> _SINKS_
<org.springframework.web.servlet.config.annotation.RedirectViewControllerRegistration: org.springframework.web.servlet.config.'annotation'.RedirectViewControllerRegistration setStatusCode(org.springframework.http.HttpStatus)> -> _SINKS_
<org.springframework.scheduling.quartz.ResourceLoaderClassLoadHelper: java.lang.Class loadClass(java.lang.String)> -> _SOURCES_
<org.springframework.jdbc.datasource.JdbcTransactionObjectSupport: org.springframework.jdbc.datasource.ConnectionHolder getConnectionHolder()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__SOURCES__CWE862_
<org.springframework.expression.spel.ast.BeanReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanDefinition: org.springframework.beans.factory.support.MethodOverrides getMethodOverrides()> -> _SOURCES_
<org.springframework.http.RequestEntity: java.lang.reflect.Type getType()> -> _SOURCES_
<org.springframework.web.socket.server.standard.WebSphereRequestUpgradeStrategy: java.lang.String[] getSupportedVersions()> -> _SOURCES_
<org.springframework.ui.velocity.VelocityEngineFactory: org.springframework.core.io.ResourceLoader getResourceLoader()> -> _SOURCES_
<org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource: void setMethodSecurityMetadataSources(java.util.List)> -> _SINKS_
<org.springframework.web.client.AsyncRestTemplate: void setMessageConverters(java.util.List)> -> _SINKS_
<org.springframework.format.datetime.DateTimeFormatAnnotationFormatterFactory: org.springframework.format.Printer getPrinter(java.lang.'annotation'.Annotation,java.lang.Class)> -> _SOURCES_
<org.springframework.scheduling.quartz.LocalTaskExecutorThreadPool: int getPoolSize()> -> _SOURCES_
<org.springframework.http.ResponseEntity: org.springframework.http.HttpStatus getStatusCode()> -> _SOURCES__CWE601_
<org.springframework.http.converter.StringHttpMessageConverter: java.util.List getAcceptedCharsets()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockBaseURL: void write(java.io.Writer)> -> _SINKS_
<org.springframework.jms.connection.JmsResourceHolder: javax.jms.Connection getConnection(java.lang.Class)> -> _CWE306__SOURCES__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.mvc.multiaction.InternalPathMethodNameResolver: void setPrefix(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.core.metadata.CallMetaDataContext: void setSchemaName(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.transaction.jta.WebLogicJtaTransactionManager: void loadWebLogicTransactionClasses()> -> _SOURCES_
<org.springframework.orm.hibernate3.SessionHolder: org.hibernate.Session getSession(java.lang.Object)> -> _SOURCES_
<org.springframework.beans.PropertyEditorRegistrySupport: java.beans.PropertyEditor getDefaultEditor(java.lang.Class)> -> _SOURCES_
<org.springframework.aop.config.AdvisorComponentDefinition: java.lang.String getDescription()> -> _SOURCES_
<org.springframework.remoting.support.SimpleHttpServerFactoryBean: void setShutdownDelay(int)> -> _SINKS_
<org.springframework.remoting.jaxws.JaxWsPortProxyFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.web.jsf.DelegatingVariableResolver: org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.faces.context.FacesContext)> -> _SOURCES_
<org.springframework.aop.aspectj.AbstractAspectJAdvice: java.lang.reflect.Method getAspectJAdviceMethod()> -> _SOURCES_
<org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver: java.util.Map getHandlerMappings()> -> _SOURCES_
<org.springframework.web.servlet.support.RequestContextUtils: java.util.Map getInputFlashMap(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.http.client.HttpComponentsClientHttpResponse: java.io.InputStream getBody()> -> _SOURCES__CWE601_
<org.springframework.transaction.jta.JtaTransactionManager: void setUserTransactionName(java.lang.String)> -> _SINKS_
<org.springframework.security.access.intercept.AbstractSecurityInterceptor: void setMessageSource(org.springframework.context.MessageSource)> -> _SINKS_
<org.springframework.web.servlet.support.BindStatus: java.lang.String[] getErrorCodes()> -> _SOURCES_
<org.springframework.web.servlet.support.AbstractFlashMapManager: int getFlashMapTimeout()> -> _SOURCES_
<org.springframework.remoting.caucho.BurlapClientInterceptor: void setUsername(java.lang.String)> -> _SINKS_
<org.springframework.asm.Handle: int getTag()> -> _SOURCES_
<org.springframework.orm.ibatis.SqlMapClientTemplate: java.util.List queryForList(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.scheduling.quartz.SimpleTriggerFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.beans.AbstractNestablePropertyAccessor: void setAutoGrowCollectionLimit(int)> -> _SINKS_
<org.springframework.web.servlet.DispatcherServlet: org.springframework.web.servlet.HandlerExecutionChain getHandler(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void configureDefaultServletHandling(org.springframework.web.servlet.config.'annotation'.DefaultServletHandlerConfigurer)> -> _SINKS_
<org.springframework.web.method.annotation.InitBinderDataBinderFactory: void initBinder(org.springframework.web.bind.WebDataBinder,org.springframework.web.context.request.NativeWebRequest)> -> _SINKS_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.web.client.RestOperations getRestOperations()> -> _SOURCES_
<org.springframework.expression.common.CompositeStringExpression: org.springframework.core.convert.TypeDescriptor getValueTypeDescriptor()> -> _SOURCES_
<org.springframework.web.servlet.ResourceServlet: long getLastModified(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.mail.javamail.JavaMailSenderImpl: void send(org.springframework.mail.javamail.MimeMessagePreparator)> -> _SINKS_
<org.springframework.cglib.core.internal.CustomizerRegistry: java.util.List get(java.lang.Class)> -> _SOURCES_
<org.springframework.remoting.rmi.JndiRmiClientInterceptor: void setRefreshStubOnConnectFailure(boolean)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.util.concurrent.ListenableFuture headForHeaders(java.lang.String,java.util.Map)> -> _SINKS_
<org.springframework.beans.ExtendedBeanInfo: int getDefaultPropertyIndex()> -> _SOURCES_
<org.springframework.metadata.commons.CommonsAttributes: java.util.Collection getAttributes(java.lang.reflect.Method,java.lang.Class)> -> _SOURCES_
<org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver: org.springframework.web.servlet.ModelAndView handleNoSuchRequestHandlingMethod(org.springframework.web.servlet.mvc.multiaction.NoSuchRequestHandlingMethodException,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)> -> _SINKS_
<org.springframework.beans.factory.BeanDefinitionStoreException: java.lang.String getBeanName()> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompHeaderAccessor: void setReceiptId(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletRequest: java.lang.String getPathInfo()> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.WebSocketClientSockJsSession: java.lang.String getAcceptedProtocol()> -> _SOURCES_
<org.springframework.orm.jpa.vendor.HibernateJpaDialect: org.hibernate.Session getSession(javax.persistence.EntityManager)> -> _SOURCES_
<org.springframework.util.xml.XMLEventStreamReader: int getEventType()> -> _SOURCES_
<org.springframework.mail.javamail.JavaMailSenderImpl: javax.mail.Session getSession()> -> _SOURCES_
<org.springframework.core.io.UrlResource: java.net.URL getCleanedUrl(java.net.URL,java.lang.String)> -> _SOURCES_
<org.springframework.messaging.simp.annotation.support.SendToMethodReturnValueHandler: void setHeaderInitializer(org.springframework.messaging.support.MessageHeaderInitializer)> -> _SINKS_
<org.springframework.web.servlet.resource.CachingResourceResolver: org.springframework.cache.Cache getCache()> -> _SOURCES_
<org.springframework.cache.jcache.interceptor.AnnotationJCacheOperationSource: javax.cache.'annotation'.CacheDefaults getCacheDefaults(java.lang.reflect.Method,java.lang.Class)> -> _SOURCES_
<org.springframework.http.client.SimpleClientHttpRequestFactory: java.net.HttpURLConnection openConnection(java.net.URL,java.net.Proxy)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.mock.web.MockServletContext: void setContextPath(java.lang.String)> -> _SINKS_
<org.springframework.security.config.SecurityNamespaceHandler: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES__SINKS_
<org.springframework.mock.web.MockPageContext: byte[] getContentAsByteArray()> -> _SOURCES_
<org.springframework.web.jsf.DelegatingNavigationHandlerProxy: org.springframework.beans.factory.BeanFactory getBeanFactory(javax.faces.context.FacesContext)> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.bind.support.ConfigurableWebBindingInitializer getConfigurableWebBindingInitializer()> -> _SOURCES_
<org.springframework.test.web.client.match.MockRestRequestMatchers: org.springframework.test.web.client.RequestMatcher requestTo(java.net.URI)> -> _SOURCES_
<org.springframework.http.converter.StringHttpMessageConverter: java.lang.String readInternal(java.lang.Class,org.springframework.http.HttpInputMessage)> -> _SOURCES_
<org.springframework.mail.javamail.JavaMailSenderImpl: void send(org.springframework.mail.SimpleMailMessage[])> -> _SINKS_
<org.springframework.beans.PropertyBatchUpdateException: org.springframework.beans.PropertyAccessException[] getPropertyAccessExceptions()> -> _SOURCES_
<org.springframework.context.support.AbstractApplicationContext: java.lang.String[] getAliases(java.lang.String)> -> _SOURCES_
<org.springframework.aop.framework.adapter.ThrowsAdviceAdapter: org.aopalliance.intercept.MethodInterceptor getInterceptor(org.springframework.aop.Advisor)> -> _SOURCES_
<org.springframework.remoting.jaxws.JaxWsPortClientInterceptor: java.lang.String getPortName()> -> _SOURCES_
<org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource: void setTargetClass(java.lang.Class)> -> _SINKS_
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String,boolean)> -> _SOURCES_
<org.springframework.web.socket.config.annotation.WebSocketTransportRegistration: org.springframework.web.socket.config.'annotation'.WebSocketTransportRegistration setSendTimeLimit(int)> -> _SINKS_
<org.springframework.orm.jpa.vendor.AbstractJpaVendorAdapter: void setDatabasePlatform(java.lang.String)> -> _SINKS_
<org.springframework.util.xml.StaxStreamHandler: void cDataInternal(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.support.JdbcUtils: java.lang.Object getResultSetValue(java.sql.ResultSet,int)> -> _CWE089__SOURCES_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: java.lang.String getOnmouseout()> -> _CWE079__SOURCES_
<org.springframework.beans.factory.xml.XmlReaderContext: org.springframework.core.io.ResourceLoader getResourceLoader()> -> _SOURCES_
<org.springframework.core.NestedCheckedException: java.lang.Throwable getMostSpecificCause()> -> _SOURCES_
<org.springframework.web.accept.AbstractMappingContentNegotiationStrategy: java.util.List resolveMediaTypes(org.springframework.web.context.request.NativeWebRequest)> -> _SINKS_
<org.springframework.jmx.export.metadata.AbstractJmxAttribute: java.lang.String getDescription()> -> _SOURCES_
<org.springframework.objenesis.strategy.PlatformDescription: java.lang.String getGaeRuntimeVersion()> -> _SOURCES_
<org.springframework.security.config.http.DefaultFilterChainValidator: javax.servlet.Filter getFilter(java.lang.Class,java.util.List)> -> _SOURCES_
<org.springframework.test.context.support.GenericGroovyXmlContextLoader: java.lang.String[] getResourceSuffixes()> -> _SOURCES_
<org.springframework.format.datetime.joda.JodaTimeContext: org.joda.time.Chronology getChronology()> -> _SOURCES_
<org.springframework.test.context.MergedContextConfiguration: java.lang.String[] getLocations()> -> _SOURCES_
<org.springframework.remoting.support.RemotingSupport: void resetThreadContextClassLoader(java.lang.ClassLoader)> -> _SOURCES_
<org.springframework.mock.web.MockJspWriter: void print(java.lang.Object)> -> _SINKS_
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue readProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String)> -> _SOURCES_
<org.springframework.core.io.support.PropertiesLoaderSupport: void setLocation(org.springframework.core.io.Resource)> -> _SINKS_
<org.springframework.web.util.ContentCachingRequestWrapper: java.util.Enumeration getParameterNames()> -> _SOURCES_
<org.springframework.orm.jdo.DefaultJdoDialect: org.springframework.jdbc.support.SQLExceptionTranslator getJdbcExceptionTranslator()> -> _SOURCES_
<org.springframework.mail.javamail.MimeMessageHelper: void setBcc(javax.mail.internet.InternetAddress)> -> _SINKS_
<org.springframework.aop.interceptor.AsyncExecutionAspectSupport: void setExceptionHandler(org.springframework.aop.interceptor.AsyncUncaughtExceptionHandler)> -> _SINKS_
<org.springframework.web.portlet.bind.PortletRequestUtils: java.lang.String getStringParameter(javax.portlet.PortletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.orm.jpa.persistenceunit.MutablePersistenceUnitInfo: void setPersistenceProviderClassName(java.lang.String)> -> _SINKS_
<org.springframework.beans.factory.support.AbstractBeanDefinition: void setFactoryMethodName(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.portlet.MockMimeResponse: int getBufferSize()> -> _SOURCES__CWE601_
<org.springframework.jms.support.converter.MarshallingMessageConverter: void setUnmarshaller(org.springframework.oxm.Unmarshaller)> -> _SINKS_
<org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy: void setDefaultTransactionIsolation(int)> -> _CWE089__SINKS_
<org.springframework.beans.factory.InjectionPoint: java.lang.reflect.AnnotatedElement getAnnotatedElement()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletResponse: void setContentLengthLong(long)> -> _SINKS__CWE601_
<org.springframework.security.task.DelegatingSecurityContextAsyncTaskExecutor: org.springframework.core.task.AsyncTaskExecutor getDelegate()> -> _SOURCES_
<org.springframework.remoting.support.SimpleHttpServerFactoryBean: void setPort(int)> -> _SINKS_
<org.springframework.web.cors.UrlBasedCorsConfigurationSource: void setRemoveSemicolonContent(boolean)> -> _SINKS_
<org.springframework.expression.spel.support.ReflectiveMethodExecutor: java.lang.reflect.Method getMethod()> -> _SOURCES_
<org.springframework.web.multipart.commons.CommonsFileUploadSupport: void setDefaultEncoding(java.lang.String)> -> _SINKS_
<org.springframework.web.method.HandlerMethod: java.lang.reflect.Method getMethod()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer: org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter getAuthenticationFilter()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.web.client.AsyncRequestCallback acceptHeaderRequestCallback(java.lang.Class)> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler: void setSystemHeartbeatSendInterval(long)> -> _SINKS_
<org.springframework.web.socket.sockjs.client.WebSocketClientSockJsSession: int getTextMessageSizeLimit()> -> _SOURCES_
<org.springframework.core.type.classreading.ClassMetadataReadingVisitor: java.lang.String getClassName()> -> _SOURCES_
<org.aopalliance.aop.AspectException: void printStackTrace(java.io.PrintWriter)> -> _SINKS_
<org.springframework.mock.web.portlet.MockMimeResponse: java.lang.String getIncludedUrl()> -> _SOURCES__CWE601_
<org.springframework.beans.PropertyAccessorUtils: java.lang.String getPropertyName(java.lang.String)> -> _SOURCES_
<org.springframework.beans.AbstractPropertyAccessor: void setExtractOldValueForEditor(boolean)> -> _SINKS_
<org.springframework.orm.ibatis.support.AbstractLobTypeHandler: java.lang.Object getResult(java.sql.ResultSet,java.lang.String)> -> _SOURCES_
<org.springframework.web.bind.EscapedErrors: int getFieldErrorCount(java.lang.String)> -> _SOURCES_
<org.springframework.aop.interceptor.AbstractTraceInterceptor: void setLoggerName(java.lang.String)> -> _SINKS_
<org.springframework.web.socket.sockjs.client.SockJsClient: java.security.Principal getUser()> -> _SOURCES_
<org.springframework.jmx.export.metadata.ManagedNotification: java.lang.String getName()> -> _SOURCES_
<org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl: void setEnableAuthorities(boolean)> -> _CWE089__SINKS__CWE862_
<org.springframework.jdbc.object.StoredProcedure: java.util.Map execute(org.springframework.jdbc.core.ParameterMapper)> -> _CWE089__SINKS_
<org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder: org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder setBlockCommentStartDelimiter(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.jmx.export.assembler.AbstractReflectiveMBeanInfoAssembler: javax.management.modelmbean.ModelMBeanAttributeInfo[] getAttributeInfo(java.lang.Object,java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.i18n.SessionLocaleResolver: void setLocaleAttributeName(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.view.script.ScriptTemplateView: void setContentType(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.context.annotation.AnnotationConfigApplicationContext: void setEnvironment(org.springframework.core.env.ConfigurableEnvironment)> -> _SINKS_
<org.springframework.validation.AbstractBindingResult: org.springframework.beans.PropertyEditorRegistry getPropertyEditorRegistry()> -> _SOURCES_
<org.springframework.web.portlet.util.PortletUtils: java.lang.Object getNativeRequest(javax.portlet.PortletRequest,java.lang.Class)> -> _SOURCES_
<org.springframework.util.xml.SimpleNamespaceContext: java.lang.String getNamespaceURI(java.lang.String)> -> _SOURCES_
<org.springframework.web.method.support.InvocableHandlerMethod: java.lang.String getInvocationErrorMessage(java.lang.String,java.lang.Object[])> -> _CWE079__SOURCES_
<org.springframework.util.ClassLoaderUtils: java.lang.String showClassLoaderHierarchy(java.lang.Object,java.lang.String)> -> _SOURCES_
<org.springframework.format.datetime.standard.DateTimeContext: java.time.format.DateTimeFormatter getFormatter(java.time.format.DateTimeFormatter)> -> _SOURCES_
<org.springframework.context.event.EventPublicationInterceptor: void setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)> -> _SINKS_
<org.springframework.asm.commons.GeneratorAdapter: void loadInsn(org.springframework.asm.Type,int)> -> _SOURCES_
<org.springframework.web.socket.client.WebSocketConnectionManager: void setSubProtocols(java.util.List)> -> _SINKS_
<org.springframework.mock.web.portlet.MockBaseURL: java.util.Map getProperties()> -> _SOURCES_
<org.springframework.cache.ehcache.EhCacheFactoryBean: void setMemoryStoreEvictionPolicy(net.sf.ehcache.store.MemoryStoreEvictionPolicy)> -> _SINKS_
<org.springframework.jca.support.SimpleBootstrapContext: javax.resource.spi.XATerminator getXATerminator()> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.InterceptorRegistry: org.springframework.web.servlet.config.'annotation'.InterceptorRegistration addWebRequestInterceptor(org.springframework.web.context.request.WebRequestInterceptor)> -> _SINKS_
<org.springframework.orm.jpa.persistenceunit.MutablePersistenceUnitInfo: javax.sql.DataSource getJtaDataSource()> -> _SOURCES_
<org.springframework.beans.factory.xml.XmlBeanDefinitionReader: void setParserClass(java.lang.Class)> -> _SINKS_
<org.springframework.web.servlet.handler.AbstractHandlerMapping: int getOrder()> -> _SOURCES_
<org.springframework.test.context.support.AnnotationConfigContextLoader: java.lang.String getResourceSuffix()> -> _SOURCES_
<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: void setSystemPropertiesMode(int)> -> _SINKS_
<org.springframework.aop.aspectj.annotation.LazySingletonAspectInstanceFactoryDecorator: org.springframework.aop.aspectj.'annotation'.AspectMetadata getAspectMetadata()> -> _SOURCES_
<org.springframework.beans.factory.config.AbstractFactoryBean: java.lang.Object getEarlySingletonInstance()> -> _SOURCES_
<org.springframework.messaging.core.AbstractMessagingTemplate: java.lang.Object convertSendAndReceive(java.lang.Object,java.lang.Object,java.lang.Class,org.springframework.messaging.core.MessagePostProcessor)> -> _SINKS_
<org.springframework.web.util.ContentCachingRequestWrapper: java.lang.String getCharacterEncoding()> -> _SOURCES_
<org.springframework.validation.MapBindingResult: java.util.Map getTargetMap()> -> _SOURCES_
<org.springframework.format.number.CurrencyStyleFormatter: void setCurrency(java.util.Currency)> -> _SINKS_
<org.springframework.asm.Type: int getSize()> -> _SOURCES_
<org.springframework.web.bind.annotation.support.HandlerMethodResolver: java.util.Set getActualSessionAttributeNames()> -> _SOURCES_
<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.BeanDefinitionParserDelegate getDelegate()> -> _SOURCES_
<org.springframework.http.HttpHeaders: java.lang.String getAccessControlAllowOrigin()> -> _SOURCES_
<org.springframework.web.servlet.resource.ResourceUrlProvider: void setPathMatcher(org.springframework.util.PathMatcher)> -> _SINKS_
<org.springframework.web.servlet.mvc.UrlFilenameViewController: java.lang.String getViewNameForUrlPath(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer: freemarker.ext.jsp.TaglibFactory getTaglibFactory()> -> _SOURCES_
<org.springframework.orm.toplink.support.TopLinkDaoSupport: org.springframework.orm.toplink.SessionFactory getSessionFactory()> -> _SOURCES_
<org.springframework.security.core.userdetails.User: java.util.Collection getAuthorities()> -> _SOURCES__CWE862_
<org.springframework.cglib.core.TinyBitSet: boolean get(int)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletRequest: java.util.Map getPrivateParameterMap()> -> _SOURCES_
<org.springframework.jmx.support.JmxUtils: java.lang.String getAttributeName(java.beans.PropertyDescriptor,boolean)> -> _SOURCES_
<org.springframework.cglib.transform.impl.FieldProviderTransformer: void setByIndex(java.lang.String[],int[])> -> _SINKS_
<org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager: org.springframework.orm.jpa.persistenceunit.PersistenceUnitPostProcessor[] getPersistenceUnitPostProcessors()> -> _SOURCES_
<org.springframework.jdbc.object.SqlFunction: int run(java.lang.Object[])> -> _CWE089__SINKS_
<org.springframework.beans.factory.xml.XmlReaderContext: org.springframework.beans.factory.xml.XmlBeanDefinitionReader getReader()> -> _SOURCES_
<org.springframework.jms.connection.CachedMessageProducer: void setTimeToLive(long)> -> _SINKS_
<org.springframework.core.type.StandardClassMetadata: java.lang.String getClassName()> -> _SOURCES_
<org.springframework.core.io.ByteArrayResource: java.io.InputStream getInputStream()> -> _SOURCES_
<org.springframework.remoting.rmi._RmiInvocationWrapper_Tie: java.rmi.Remote getTarget()> -> _SOURCES_
<org.springframework.web.filter.HttpPutFormContentFilter: void setCharset(java.nio.charset.Charset)> -> _SINKS_
<org.springframework.jca.work.WorkManagerTaskExecutor: void execute(java.lang.Runnable,long)> -> _SINKS_
<org.springframework.oxm.castor.CastorMarshaller: void setWhitespacePreserve(boolean)> -> _SINKS_
<org.springframework.http.converter.xml.Jaxb2CollectionHttpMessageConverter: java.util.Collection read(java.lang.reflect.Type,java.lang.Class,org.springframework.http.HttpInputMessage)> -> _SOURCES_
<org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource: java.lang.String getTargetBeanName()> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler: java.lang.String getSystemPasscode()> -> _SOURCES_
<org.springframework.core.io.UrlResource: java.io.File getFile()> -> _SOURCES_
<org.springframework.web.client.RestTemplate: void put(java.net.URI,java.lang.Object)> -> _SINKS_
<org.springframework.jdbc.object.SqlQuery: void setRowsExpected(int)> -> _CWE089__SINKS_
<org.springframework.util.xml.XMLEventStreamReader: java.lang.String getVersion()> -> _SOURCES_
<org.springframework.aop.support.NameMatchMethodPointcutAdvisor: org.springframework.aop.Pointcut getPointcut()> -> _SOURCES_
<org.springframework.web.multipart.support.MultipartResolutionDelegate: org.springframework.web.multipart.MultipartHttpServletRequest adaptToMultipartHttpServletRequest(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.test.web.servlet.result.StatusResultMatchers: org.springframework.test.web.servlet.ResultMatcher isCreated()> -> _SOURCES_
<org.springframework.mock.web.DelegatingServletInputStream: int read()> -> _SOURCES__CWE601_
<org.springframework.oxm.xmlbeans.XmlBeansMarshaller: java.lang.Object unmarshalReader(java.io.Reader)> -> _SOURCES_
<org.springframework.cache.jcache.interceptor.JCacheAspectSupport: java.lang.Object execute(org.springframework.cache.interceptor.CacheOperationInvoker,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])> -> _CWE078__SINKS_
<org.springframework.web.servlet.i18n.SessionLocaleResolver: void setLocaleContext(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.context.i18n.LocaleContext)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletRequest: javax.servlet.http.HttpSession getSession(boolean)> -> _CWE079__SOURCES_
<org.springframework.beans.factory.support.AbstractBeanFactory: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.context.support.MessageSourceAccessor: java.lang.String getMessage(org.springframework.context.MessageSourceResolvable)> -> _SOURCES_
<org.springframework.util.ResourceUtils: java.io.File getFile(java.lang.String)> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.factory.FactoryBean getNonSingletonFactoryBeanForTypeCheck(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)> -> _SOURCES_
<org.springframework.web.socket.handler.WebSocketSessionDecorator: java.lang.String getId()> -> _SOURCES_
<org.springframework.security.access.intercept.RunAsManagerImpl: java.lang.String getRolePrefix()> -> _SOURCES_
<org.springframework.mock.web.MockMultipartFile: java.lang.String getOriginalFilename()> -> _SOURCES_
<org.springframework.messaging.MessageHeaders: java.util.Map getRawHeaders()> -> _SOURCES_
<org.springframework.jdbc.support.SQLErrorCodes: void setDataAccessResourceFailureCodes(java.lang.String[])> -> _CWE089__SINKS_
<org.springframework.mock.web.MockMultipartFile: java.io.InputStream getInputStream()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractSingleCheckedElementTag: int writeTagContent(org.springframework.web.servlet.tags.form.TagWriter)> -> _SINKS_
<org.springframework.web.accept.PathExtensionContentNegotiationStrategy: org.springframework.http.MediaType getMediaTypeForResource(org.springframework.core.io.Resource)> -> _SOURCES_
<org.springframework.ui.velocity.VelocityEngineFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.util.xml.XMLEventStreamReader: java.lang.String getPITarget()> -> _SOURCES_
<org.springframework.format.support.FormatterPropertyEditorAdapter: void setAsText(java.lang.String)> -> _SINKS_
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Class)> -> _SOURCES_
<org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.web.servlet.tags.form.SelectTag: void setItems(java.lang.Object)> -> _SINKS_
<org.springframework.web.servlet.FrameworkServlet: void setDispatchTraceRequest(boolean)> -> _SINKS_
<org.springframework.cache.interceptor.CacheAspectSupport: org.springframework.cache.interceptor.CacheAspectSupport$CacheOperationContext getOperationContext(org.springframework.cache.interceptor.CacheOperation,java.lang.reflect.Method,java.lang.Object[],java.lang.Object,java.lang.Class)> -> _SOURCES_
<org.springframework.core.LocalVariableTableParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.aop.scope.ScopedProxyFactoryBean: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.jms.core.JmsTemplate: void setDeliveryMode(int)> -> _SINKS_
<org.springframework.context.annotation.AdviceModeImportSelector: java.lang.String getAdviceModeAttributeName()> -> _SOURCES_
<org.springframework.instrument.classloading.oc4j.OC4JLoadTimeWeaver: java.lang.ClassLoader getThrowawayClassLoader()> -> _SOURCES_
<org.springframework.web.context.request.async.WebAsyncManager: org.springframework.web.context.request.async.DeferredResultProcessingInterceptor getDeferredResultInterceptor(java.lang.Object)> -> _SOURCES_
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: void setCacheNames(java.util.Collection)> -> _SINKS_
<org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator: void setSeparator(java.lang.String)> -> _SINKS_
<org.springframework.orm.hibernate3.FilterDefinitionFactoryBean: void setParameterTypes(java.util.Properties)> -> _SINKS_
<org.springframework.cache.ehcache.EhCacheFactoryBean: void setEternal(boolean)> -> _SINKS_
<org.springframework.validation.beanvalidation.LocalValidatorFactoryBean: javax.validation.TraversableResolver getTraversableResolver()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: void setContent(byte[])> -> _SINKS_
<org.springframework.format.number.money.MonetaryAmountFormatter: javax.money.MonetaryAmount parse(java.lang.String,java.util.Locale)> -> _SINKS_
<org.springframework.jdbc.core.BatchUpdateUtils: int[] executeBatchUpdate(java.lang.String,java.util.List,int[],org.springframework.jdbc.core.JdbcOperations)> -> _CWE089__SINKS_
<org.springframework.oxm.support.MarshallingSource: java.lang.Object getContent()> -> _SOURCES_
<org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer: org.springframework.web.context.WebApplicationContext createServletApplicationContext()> -> _SOURCES_
<org.springframework.cache.ehcache.EhCacheManagerFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.instrument.classloading.weblogic.WebLogicClassLoaderAdapter: java.lang.ClassLoader getClassLoader()> -> _SOURCES_
<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder locale(java.util.Locale)> -> _SOURCES_
<org.springframework.web.servlet.handler.SimpleMappingExceptionResolver: void setExcludedExceptions(java.lang.Class[])> -> _SINKS_
<org.springframework.http.HttpHeaders: java.lang.String getFieldValues(java.lang.String)> -> _SOURCES_
<org.springframework.test.web.servlet.result.PrintingResultHandler: void printHandler(java.lang.Object,org.springframework.web.servlet.HandlerInterceptor[])> -> _SINKS_
<org.springframework.web.portlet.FrameworkPortlet: org.springframework.context.ApplicationContext getPortletApplicationContext()> -> _SOURCES_
<org.springframework.core.ResolvableType: org.springframework.core.ResolvableType[] getGenerics()> -> _SOURCES_
<org.springframework.core.convert.support.ConvertingPropertyEditorAdapter: java.lang.String getAsText()> -> _SOURCES_
<org.springframework.format.datetime.DateFormatter: java.util.Date parse(java.lang.String,java.util.Locale)> -> _SINKS_
<org.springframework.web.socket.config.annotation.AbstractWebSocketHandlerRegistration: org.springframework.web.socket.server.HandshakeInterceptor[] getInterceptors()> -> _SOURCES_
<org.springframework.jca.cci.core.CciTemplate: javax.resource.cci.Record execute(javax.resource.cci.InteractionSpec,org.springframework.jca.cci.core.RecordCreator)> -> _SINKS_
<org.springframework.web.servlet.config.ResourcesBeanDefinitionParser: java.lang.String registerResourceHandler(org.springframework.beans.factory.xml.ParserContext,org.w3c.dom.Element,java.lang.Object)> -> _CWE079__SINKS_
<org.springframework.instrument.classloading.weblogic.WebLogicClassLoaderAdapter: java.lang.ClassLoader getThrowawayClassLoader()> -> _SOURCES_
<org.springframework.web.socket.handler.WebSocketSessionDecorator: int getBinaryMessageSizeLimit()> -> _SOURCES_
<org.springframework.orm.jpa.vendor.TopLinkJpaDialect: void setLazyDatabaseTransaction(boolean)> -> _SINKS_
<org.springframework.context.expression.StandardBeanExpressionResolver: void setExpressionSuffix(java.lang.String)> -> _SINKS_
<org.springframework.jms.core.JmsMessagingTemplate: org.springframework.messaging.Message sendAndReceive(java.lang.String,org.springframework.messaging.Message)> -> _SINKS_
<org.springframework.web.portlet.context.StaticPortletApplicationContext: java.lang.String[] getConfigLocations()> -> _SOURCES_
<org.springframework.cglib.transform.impl.FieldProviderTransformer: void getField(java.lang.String[])> -> _SOURCES_
<org.springframework.scripting.support.StandardScriptFactory: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.web.servlet.FrameworkServlet: void setNamespace(java.lang.String)> -> _SINKS_
<org.springframework.beans.factory.config.ConstructorArgumentValues: org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder getArgumentValue(int,java.lang.Class,java.util.Set)> -> _SOURCES_
<org.springframework.beans.factory.groovy.GroovyBeanDefinitionWrapper: org.springframework.beans.factory.support.AbstractBeanDefinition getBeanDefinition()> -> _SOURCES_
<org.springframework.security.core.userdetails.memory.UserAttribute: java.lang.String getPassword()> -> _SOURCES__CWE862_
<org.springframework.web.servlet.mvc.method.RequestMappingInfo: org.springframework.web.servlet.mvc.method.RequestMappingInfo combine(org.springframework.web.servlet.mvc.method.RequestMappingInfo)> -> _SINKS_
<org.springframework.web.servlet.tags.NestedPathTag: void setPath(java.lang.String)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompHeaderAccessor: java.util.Set getAcceptVersion()> -> _SOURCES_
<org.springframework.cache.interceptor.BeanFactoryCacheOperationSourceAdvisor: void setCacheOperationSource(org.springframework.cache.interceptor.CacheOperationSource)> -> _SINKS_
<org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator: java.lang.Object[] getAdvicesAndAdvisorsForBean(java.lang.Class,java.lang.String,org.springframework.aop.TargetSource)> -> _SOURCES_
<org.springframework.web.portlet.bind.PortletRequestUtils: java.lang.Double getDoubleParameter(javax.portlet.PortletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.jmx.export.assembler.AbstractMBeanInfoAssembler: java.lang.Class getTargetClass(java.lang.Object)> -> _SOURCES_
<org.springframework.format.datetime.joda.MillisecondInstantPrinter: java.lang.String print(java.lang.Long,java.util.Locale)> -> _SINKS_
<org.springframework.web.util.UrlPathHelper: java.lang.String getPathWithinApplication(javax.servlet.http.HttpServletRequest)> -> _CWE079__SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: java.lang.String getQueryString()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletResponse: java.lang.String getContentAsString()> -> _SOURCES__CWE601_
<org.springframework.web.servlet.handler.SimpleServletPostProcessor: void setServletConfig(javax.servlet.ServletConfig)> -> _SINKS_
<org.springframework.web.portlet.handler.SimpleMappingExceptionResolver: void setExceptionAttribute(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.core.metadata.CallMetaDataContext: java.util.Set getLimitedInParameterNames()> -> _CWE089__SOURCES_
<org.springframework.mail.javamail.ConfigurableMimeFileTypeMap: void setMappings(java.lang.String[])> -> _SINKS_
<org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor: void setRepositoryAnnotationType(java.lang.Class)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: java.util.List getDefaultReturnValueHandlers()> -> _SOURCES_
<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.config.BeanDefinitionHolder parseNestedCustomElement(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition)> -> _SOURCES__SINKS_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: org.springframework.web.servlet.mvc.condition.RequestCondition getCustomMethodCondition(java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.aop.aspectj.AbstractAspectJAdvice: java.lang.Class getDiscoveredReturningType()> -> _SOURCES_
<org.springframework.scheduling.concurrent.ScheduledExecutorFactoryBean: java.lang.Runnable getRunnableToSchedule(org.springframework.scheduling.concurrent.ScheduledExecutorTask)> -> _SOURCES_
<org.springframework.jms.connection.DelegatingConnectionFactory: javax.jms.Connection createConnection(java.lang.String,java.lang.String)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.beans.factory.xml.XmlBeanDefinitionReader: int loadBeanDefinitions(org.springframework.core.io.Resource)> -> _SOURCES_
<org.springframework.aop.aspectj.AspectJExpressionPointcut: org.springframework.aop.ClassFilter getClassFilter()> -> _SOURCES_
<org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor: void setOrder(int)> -> _SINKS_
<org.springframework.jdbc.support.incrementer.AbstractDataFieldMaxValueIncrementer: void setIncrementerName(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getReturnValueHandlers()> -> _SOURCES_
<org.springframework.orm.hibernate3.TypeDefinitionBean: void setTypeClass(java.lang.String)> -> _SINKS_
<org.springframework.remoting.jaxrpc.JaxRpcPortClientInterceptor: java.lang.String getEndpointAddress()> -> _SOURCES_
<org.springframework.test.context.BootstrapUtils: org.springframework.test.context.CacheAwareContextLoaderDelegate createCacheAwareContextLoaderDelegate()> -> _SOURCES_
<org.springframework.core.annotation.AbstractAliasAwareAnnotationAttributeExtractor: java.lang.Class getAnnotationType()> -> _SOURCES_
<org.springframework.web.servlet.config.VelocityConfigurerBeanDefinitionParser: java.lang.String getBeanClassName(org.w3c.dom.Element)> -> _SOURCES_
<org.springframework.remoting.jaxrpc.support.AxisBeanMappingServicePostProcessor: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.web.servlet.handler.AbstractHandlerMapping: org.springframework.web.util.UrlPathHelper getUrlPathHelper()> -> _SOURCES_
<org.springframework.util.StringUtils: java.lang.String getFilename(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.tags.MessageTag: void setText(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: void setUseTrailingSlashMatch(boolean)> -> _SINKS_
<org.springframework.web.servlet.tags.EvalTag: void setJavaScriptEscape(boolean)> -> _SINKS_
<org.springframework.mock.env.MockEnvironment: void setProperty(java.lang.String,java.lang.String)> -> _SINKS_
<org.springframework.web.socket.config.annotation.WebSocketTransportRegistration: java.lang.Integer getSendTimeLimit()> -> _SOURCES_
<org.springframework.jms.listener.adapter.MessageListenerAdapter: void setDefaultListenerMethod(java.lang.String)> -> _SINKS_
<org.springframework.messaging.simp.user.UserDestinationMessageHandler: org.springframework.messaging.core.MessageSendingOperations getBrokerMessagingTemplate()> -> _SOURCES__CWE862_
<org.springframework.format.number.money.Jsr354NumberFormatAnnotationFormatterFactory: org.springframework.format.Parser getParser(java.lang.'annotation'.Annotation,java.lang.Class)> -> _SOURCES__SINKS_
<org.springframework.web.servlet.tags.BindErrorsTag: java.lang.String getName()> -> _SOURCES_
<org.springframework.web.util.ContentCachingRequestWrapper: java.util.Map getParameterMap()> -> _SOURCES_
<org.springframework.oxm.xstream.XStreamMarshaller: void setOmittedFields(java.util.Map)> -> _SINKS_
<org.springframework.jdbc.core.metadata.GenericCallMetaDataProvider: void setSupportsSchemasInProcedureCalls(boolean)> -> _CWE089__SINKS_
<org.springframework.core.task.support.ExecutorServiceAdapter: void execute(java.lang.Runnable)> -> _CWE078__SINKS_
<org.springframework.web.portlet.context.PortletApplicationContextUtils: org.springframework.context.ApplicationContext getWebApplicationContext(javax.portlet.PortletContext)> -> _SOURCES_
<org.springframework.test.context.MergedContextConfiguration: java.lang.String[] getPropertySourceProperties()> -> _SOURCES_
<org.springframework.orm.toplink.TopLinkTransactionManager: void setLazyDatabaseTransaction(boolean)> -> _SINKS_
<org.springframework.aop.interceptor.AbstractTraceInterceptor: void setUseDynamicLogger(boolean)> -> _SINKS_
<org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder locale(java.lang.String)> -> _SINKS_
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: java.lang.String getPropertyMethodSuffix(java.lang.String)> -> _SOURCES_
<org.springframework.http.client.OkHttp3ClientHttpRequestFactory: org.springframework.http.client.AsyncClientHttpRequest createAsyncRequest(java.net.URI,org.springframework.http.HttpMethod)> -> _SOURCES_
<org.springframework.instrument.classloading.oc4j.OC4JClassPreprocessorAdapter: byte[] processClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain,java.lang.ClassLoader)> -> _SINKS_
<org.springframework.web.client.support.RestGatewaySupport: void setRestTemplate(org.springframework.web.client.RestTemplate)> -> _SINKS_
<org.springframework.web.portlet.multipart.DefaultMultipartActionRequest: org.springframework.util.MultiValueMap getMultipartFiles()> -> _SOURCES_
<org.springframework.web.servlet.mvc.condition.RequestMethodsRequestCondition: org.springframework.web.servlet.mvc.condition.RequestMethodsRequestCondition getMatchingCondition(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: java.lang.Object handleRemoteConnectFailure(org.aopalliance.intercept.MethodInvocation,java.lang.Exception)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.oxm.jaxb.Jaxb2Marshaller: void setSupportJaxbElementClass(boolean)> -> _SINKS_
<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor: void setRequiredParameterName(java.lang.String)> -> _SINKS_
<org.springframework.web.client.RestTemplate: org.springframework.web.util.UriTemplateHandler getUriTemplateHandler()> -> _SOURCES_
<org.springframework.core.io.AbstractResource: java.net.URI getURI()> -> _SOURCES_
<org.springframework.web.socket.adapter.jetty.JettyWebSocketSession: java.lang.String getAcceptedProtocol()> -> _SOURCES_
<org.springframework.beans.factory.support.SimpleBeanDefinitionRegistry: int getBeanDefinitionCount()> -> _SOURCES_
<org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager: void setResourceLoader(org.springframework.core.io.ResourceLoader)> -> _SINKS_
<org.springframework.security.provisioning.JdbcUserDetailsManager: org.springframework.security.core.Authentication createNewAuthentication(org.springframework.security.core.Authentication,java.lang.String)> -> _CWE306__CWE089__AUTHENTICATIONS_TO_HIGH_
<org.springframework.core.io.AbstractResource: java.net.URL getURL()> -> _SOURCES_
<org.springframework.core.io.support.LocalizedResourceHelper: void setSeparator(java.lang.String)> -> _SINKS_
<org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl: void setRolePrefix(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.context.support.MessageSourceResourceBundle: java.util.Enumeration getKeys()> -> _SOURCES_
<org.springframework.cache.guava.GuavaCache: java.lang.Object get(java.lang.Object,java.util.concurrent.Callable)> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.handler.SockJsWebSocketHandler: java.util.List getSubProtocols()> -> _SOURCES_
<org.springframework.context.annotation.ClassPathBeanDefinitionScanner: void setScopedProxyMode(org.springframework.context.'annotation'.ScopedProxyMode)> -> _SINKS_
<org.springframework.jms.listener.adapter.AbstractAdaptableMessageListener: org.springframework.jms.support.converter.MessagingMessageConverter getMessagingMessageConverter()> -> _SOURCES_
<org.springframework.transaction.interceptor.TransactionAspectSupport: void setTransactionManager(org.springframework.transaction.PlatformTransactionManager)> -> _SINKS_
<org.springframework.web.servlet.handler.UserRoleAuthorizationInterceptor: void setAuthorizedRoles(java.lang.String[])> -> _SINKS_
<org.springframework.beans.factory.config.AbstractFactoryBean: void setSingleton(boolean)> -> _SINKS_
<org.springframework.web.socket.config.annotation.ServletWebSocketHandlerRegistry: org.springframework.web.servlet.handler.AbstractHandlerMapping getHandlerMapping()> -> _SOURCES_
<org.springframework.jmx.support.ObjectNameManager: javax.management.ObjectName getInstance(java.lang.String,java.lang.String,java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler: org.springframework.http.ResponseEntity handleException(java.lang.Exception,org.springframework.web.context.request.WebRequest)> -> _SINKS__CWE601_
<org.springframework.remoting.support.SimpleHttpServerFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.orm.hibernate3.SpringSessionSynchronization: int getOrder()> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.CorsRegistry: java.util.Map getCorsConfigurations()> -> _SOURCES_
<org.springframework.web.servlet.HttpServletBean: java.lang.String getServletName()> -> _SOURCES_
<org.springframework.jdbc.core.simple.AbstractJdbcCall: void setProcedureName(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint: org.aspectj.lang.JoinPoint$StaticPart getStaticPart()> -> _SOURCES_
<org.springframework.remoting.caucho.BurlapClientInterceptor: void setProxyFactory(com.caucho.burlap.client.BurlapProxyFactory)> -> _SINKS_
<org.springframework.http.converter.ByteArrayHttpMessageConverter: java.lang.Long getContentLength(java.lang.Object,org.springframework.http.MediaType)> -> _SOURCES_
<org.springframework.jms.support.JmsAccessor: void setConnectionFactory(javax.jms.ConnectionFactory)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.test.web.servlet.MockMvc: void setGlobalResultMatchers(java.util.List)> -> _SINKS_
<org.springframework.context.support.ClassPathXmlApplicationContext: org.springframework.core.io.Resource[] getConfigResources()> -> _SOURCES_
<org.springframework.format.number.money.Jsr354NumberFormatAnnotationFormatterFactory: org.springframework.format.Printer getPrinter(org.springframework.format.'annotation'.NumberFormat,java.lang.Class)> -> _SOURCES_
<org.springframework.test.web.servlet.htmlunit.MockMvcWebConnectionBuilderSupport: com.gargoylesoftware.htmlunit.WebConnection createConnection(com.gargoylesoftware.htmlunit.WebConnection)> -> _CWE306__CWE079__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.view.AbstractView: void setExposedContextBeanNames(java.lang.String[])> -> _SINKS_
<org.springframework.expression.spel.ast.Assign: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.security.crypto.keygen.SecureRandomBytesKeyGenerator: int getKeyLength()> -> _SOURCES_
<org.springframework.http.client.support.HttpRequestWrapper: org.springframework.http.HttpRequest getRequest()> -> _SOURCES_
<org.springframework.web.socket.handler.WebSocketSessionDecorator: org.springframework.http.HttpHeaders getHandshakeHeaders()> -> _SOURCES_
<org.springframework.http.client.support.ProxyFactoryBean: java.net.Proxy getObject()> -> _SOURCES_
<org.springframework.jms.listener.AbstractMessageListenerContainer: java.lang.String getDestinationDescription()> -> _SOURCES_
<org.springframework.http.client.OkHttpClientHttpRequestFactory: org.springframework.http.client.ClientHttpRequest createRequest(java.net.URI,org.springframework.http.HttpMethod)> -> _SOURCES_
<org.springframework.jdbc.core.metadata.CallParameterMetaData: int getSqlType()> -> _CWE089__SOURCES_
<org.springframework.cache.jcache.interceptor.DefaultCacheInvocationContext: java.lang.'annotation'.Annotation getCacheAnnotation()> -> _SOURCES_
<org.springframework.aop.target.AbstractPoolingTargetSource: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.web.socket.sockjs.client.XhrClientSockJsSession: void setBinaryMessageSizeLimit(int)> -> _SINKS_
<org.springframework.security.provisioning.MutableUser: boolean isCredentialsNonExpired()> -> _AUTHENTICATIONS_NEUTRAL__CWE862_
<org.springframework.jms.core.JmsTemplate: void convertAndSend(java.lang.Object,org.springframework.jms.core.MessagePostProcessor)> -> _SINKS_
<org.springframework.aop.framework.ProxyCreatorSupport: org.springframework.aop.framework.AopProxyFactory getAopProxyFactory()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletSession: java.util.Enumeration getAttributeNames(int)> -> _SOURCES_
<org.springframework.web.servlet.view.xslt.XsltView: javax.xml.transform.Templates loadTemplates()> -> _SOURCES_
<org.springframework.scripting.groovy.GroovyScriptEvaluator: org.codehaus.groovy.control.CompilerConfiguration getCompilerConfiguration()> -> _CWE078__SOURCES_
<org.springframework.core.NestedRuntimeException: java.lang.Throwable getRootCause()> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession: void delegateConnectionClosed(org.springframework.web.socket.CloseStatus)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.cache.jcache.interceptor.DefaultCacheInvocationContext: java.lang.String getCacheName()> -> _SOURCES_
<org.springframework.util.xml.StaxSource: void setInputSource(org.xml.sax.InputSource)> -> _SINKS_
<org.springframework.jdbc.object.RdbmsOperation: void setJdbcTemplate(org.springframework.jdbc.core.JdbcTemplate)> -> _CWE089__SINKS_
<org.springframework.web.servlet.mvc.method.annotation.ViewNameMethodReturnValueHandler: java.lang.String[] getRedirectPatterns()> -> _SOURCES_
<org.springframework.instrument.classloading.weblogic.WebLogicClassLoader: java.lang.ClassLoader getThrowawayClassLoader()> -> _SOURCES_
<org.springframework.mail.javamail.JavaMailSenderImpl: int getPort()> -> _SOURCES_
<org.springframework.web.socket.adapter.jetty.JettyWebSocketSession: java.util.List getExtensions()> -> _SOURCES_
<org.springframework.web.servlet.tags.BindTag: java.lang.String getPath()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.RequestMappingInfo: java.lang.String getName()> -> _SOURCES_
<org.springframework.expression.spel.standard.InternalSpelExpressionParser: org.springframework.expression.spel.standard.SpelExpression doParseExpression(java.lang.String,org.springframework.expression.ParserContext)> -> _SOURCES_
<org.springframework.cache.ehcache.EhCacheCacheManager: net.sf.ehcache.CacheManager getCacheManager()> -> _SOURCES_
<org.springframework.web.servlet.mvc.condition.RequestMethodsRequestCondition: java.util.Set getMethods()> -> _SOURCES_
<org.springframework.jms.listener.endpoint.JmsMessageEndpointManager: void setDestinationResolver(org.springframework.jms.support.destination.DestinationResolver)> -> _SINKS_
<org.springframework.mock.web.MockBodyContent: java.io.Reader getReader()> -> _SOURCES_
<org.springframework.web.servlet.tags.Param: java.lang.String getValue()> -> _SOURCES_
<org.springframework.core.MethodParameter: java.lang.Integer getTypeIndexForLevel(int)> -> _SOURCES_
<org.springframework.jmx.support.NotificationListenerHolder: void setHandback(java.lang.Object)> -> _SINKS_
<org.springframework.beans.PropertyAccessorUtils: int getFirstNestedPropertySeparatorIndex(java.lang.String)> -> _SOURCES_
<org.springframework.test.web.servlet.htmlunit.HtmlUnitRequestBuilder: java.lang.String urlDecode(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.web.socket.sockjs.client.DefaultTransportRequest: void connect(org.springframework.web.socket.WebSocketHandler,org.springframework.util.concurrent.SettableListenableFuture)> -> _CWE306__CWE079__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint: org.aspectj.lang.reflect.SourceLocation getSourceLocation()> -> _SOURCES_
<org.springframework.util.xml.StaxSource: javax.xml.stream.XMLStreamReader getXMLStreamReader()> -> _SOURCES_
<org.springframework.web.method.annotation.ErrorsMethodArgumentResolver: java.lang.Object resolveArgument(org.springframework.core.MethodParameter,org.springframework.web.method.support.ModelAndViewContainer,org.springframework.web.context.request.NativeWebRequest,org.springframework.web.bind.support.WebDataBinderFactory)> -> _SINKS_
<org.springframework.security.util.FieldUtils: java.lang.Object getProtectedFieldValue(java.lang.String,java.lang.Object)> -> _SOURCES_
<org.springframework.mail.SimpleMailMessage: java.lang.String getSubject()> -> _SOURCES_
<org.springframework.beans.factory.config.DependencyDescriptor: java.lang.Class getMapValueType()> -> _SOURCES_
<org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory: void setMessageConverter(org.springframework.messaging.converter.MessageConverter)> -> _SINKS_
<org.springframework.expression.spel.ast.OperatorMatches: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.mock.web.portlet.ServletWrappingPortletContext: java.net.URL getResource(java.lang.String)> -> _SOURCES_
<org.springframework.mock.web.MockJspWriter: void println(long)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor: void handleReturnValue(java.lang.Object,org.springframework.core.MethodParameter,org.springframework.web.method.support.ModelAndViewContainer,org.springframework.web.context.request.NativeWebRequest)> -> _SINKS__CWE601_
<org.springframework.validation.ObjectError: java.lang.String getObjectName()> -> _SOURCES_
<org.springframework.jdbc.core.metadata.GenericTableMetaDataProvider: void setStoresLowerCaseIdentifiers(boolean)> -> _CWE089__SINKS_
<org.springframework.web.socket.messaging.StompSubProtocolHandler: void setDecoder(org.springframework.messaging.simp.stomp.StompDecoder)> -> _SINKS_
<org.springframework.web.portlet.util.PortletUtils: java.util.Map getParametersStartingWith(javax.portlet.PortletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.tags.form.SelectTag: void setItemValue(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.mvc.multiaction.PropertiesMethodNameResolver: java.lang.String getHandlerMethodNameForUrlPath(java.lang.String)> -> _SOURCES_
<org.springframework.util.ConcurrentReferenceHashMap: float getLoadFactor()> -> _SOURCES_
<org.springframework.jms.listener.DefaultMessageListenerContainer: int getCacheLevel()> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void extendHandlerExceptionResolvers(java.util.List)> -> _SINKS_
<org.springframework.scheduling.backportconcurrent.ThreadPoolTaskExecutor: int getActiveCount()> -> _SOURCES_
<org.springframework.orm.jpa.JpaTemplate: java.lang.Object execute(org.springframework.orm.jpa.JpaCallback,boolean)> -> _SINKS_
<org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean: void setConfigurationClass(java.lang.Class)> -> _SINKS_
<org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder: org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder setLocaleResolver(org.springframework.web.servlet.LocaleResolver)> -> _SINKS_
<org.springframework.util.ResponseTimeMonitorImpl: long getUptimeMillis()> -> _SOURCES__CWE601_
<org.springframework.jdbc.core.ResultSetSupportingSqlParameter: org.springframework.jdbc.core.RowCallbackHandler getRowCallbackHandler()> -> _CWE089__SOURCES_
<org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer: void postProcessTemplateLoaders(java.util.List)> -> _SOURCES_
<org.springframework.transaction.interceptor.TransactionProxyFactoryBean: void setPointcut(org.springframework.aop.Pointcut)> -> _SINKS_
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setRequestContextAttribute(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver: void setMessageSource(org.springframework.context.MessageSource)> -> _SINKS__CWE601_
<org.springframework.jdbc.datasource.init.DataSourceInitializer: void setDatabasePopulator(org.springframework.jdbc.datasource.init.DatabasePopulator)> -> _CWE089__SINKS_
<org.springframework.web.servlet.tags.form.SelectTag: java.lang.String getItemLabel()> -> _SOURCES_
<org.springframework.orm.jdo.support.JdoDaoSupport: void setJdoTemplate(org.springframework.orm.jdo.JdoTemplate)> -> _SINKS_
<org.springframework.messaging.simp.user.UserSessionRegistryAdapter: java.util.Set getUsers()> -> _SOURCES__CWE862_
<org.springframework.expression.common.CompositeStringExpression: java.lang.Object getValue(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Class)> -> _SOURCES_
<org.springframework.web.context.ContextLoaderServlet: org.springframework.web.context.ContextLoader createContextLoader()> -> _SOURCES_
<org.springframework.web.socket.messaging.WebSocketStompClient: org.springframework.web.socket.client.WebSocketClient getWebSocketClient()> -> _SOURCES_
<org.springframework.aop.config.AdvisorComponentDefinition: java.lang.Object getSource()> -> _SOURCES_
<org.springframework.web.socket.server.jetty.JettyRequestUpgradeStrategy: java.util.List getSupportedExtensions(org.springframework.http.server.ServerHttpRequest)> -> _SOURCES_
<org.springframework.orm.hibernate4.HibernateTransactionManager: void setDataSource(javax.sql.DataSource)> -> _CWE089__SINKS_
<org.springframework.mail.javamail.JavaMailSenderImpl: java.util.Properties getJavaMailProperties()> -> _SOURCES_
<org.springframework.mock.web.MockPageContext: int getAttributesScope(java.lang.String)> -> _SOURCES_
<org.springframework.messaging.core.GenericMessagingTemplate: void setReceiveTimeout(long)> -> _SINKS_
<org.springframework.web.servlet.view.jasperreports.AbstractJasperReportsView: net.sf.jasperreports.engine.JasperReport loadReport(org.springframework.core.io.Resource)> -> _SOURCES_
<org.springframework.core.io.AbstractFileResolvingResource: java.io.File getFileForLastModifiedCheck()> -> _SOURCES_
<org.springframework.security.authentication.dao.DaoAuthenticationProvider: void setPasswordEncoder(org.springframework.security.authentication.encoding.PasswordEncoder)> -> _SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.jdbc.datasource.AbstractDriverBasedDataSource: java.lang.String getPassword()> -> _CWE089__SOURCES_
<org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter: void setEntityManagerFactoryBeanName(java.lang.String)> -> _SINKS_
<org.springframework.scheduling.backportconcurrent.ScheduledExecutorTask: void setFixedRate(boolean)> -> _SINKS_
<org.springframework.format.datetime.joda.MonthDayFormatter: org.joda.time.MonthDay parse(java.lang.String,java.util.Locale)> -> _SINKS_
<org.springframework.security.access.expression.AbstractSecurityExpressionHandler: void setApplicationContext(org.springframework.context.ApplicationContext)> -> _SINKS_
<org.springframework.test.web.servlet.request.MockMvcRequestBuilders: org.springframework.test.web.servlet.request.MockMultipartHttpServletRequestBuilder fileUpload(java.net.URI)> -> _SOURCES_
<org.springframework.test.util.XpathExpectationsHelper: void assertNodeCount(byte[],java.lang.String,int)> -> _SINKS_
<org.springframework.aop.aspectj.autoproxy.AspectJPrecedenceComparator: java.lang.String getAspectName(org.springframework.aop.Advisor)> -> _SOURCES_
<org.springframework.cglib.core.ClassEmitter: int getAccess()> -> _SOURCES_
<org.springframework.core.ResolvableType: java.lang.Class getRawClass()> -> _SOURCES_
<org.springframework.security.access.intercept.RunAsUserToken: java.lang.Object getCredentials()> -> _SOURCES__CWE862_
<org.springframework.web.servlet.tags.form.FormTag: void setMethod(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.MockHttpSession: javax.servlet.http.HttpSessionContext getSessionContext()> -> _SOURCES_
<org.springframework.web.util.OpaqueUriComponents: java.lang.String getHost()> -> _SOURCES_
<org.springframework.orm.hibernate4.HibernateTemplate: void saveOrUpdate(java.lang.Object)> -> _SINKS_
<org.springframework.messaging.handler.DestinationPatternsMessageCondition: java.util.Collection getContent()> -> _SOURCES_
<org.springframework.security.authentication.dao.DaoAuthenticationProvider: void setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)> -> _SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.beans.factory.config.CustomEditorConfigurer: void setIgnoreUnresolvableEditors(boolean)> -> _SINKS_
<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder sessionAttrs(java.util.Map)> -> _SOURCES_
<org.springframework.web.accept.PathExtensionContentNegotiationStrategy: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)> -> _SINKS_
<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.String[] getAutowireCandidatePatterns()> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Class getTypeForFactoryMethod(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Class[])> -> _SOURCES_
<org.springframework.orm.hibernate3.support.OpenSessionInViewInterceptor: void setSingleSession(boolean)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.PathVariableMethodArgumentResolver: org.springframework.web.method.'annotation'.AbstractNamedValueMethodArgumentResolver$NamedValueInfo createNamedValueInfo(org.springframework.core.MethodParameter)> -> _SOURCES_
<org.springframework.beans.factory.support.GenericBeanDefinition: java.lang.String getParentName()> -> _SOURCES_
<org.springframework.orm.ibatis.SqlMapClientTemplate: java.lang.Object insert(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.web.servlet.tags.form.CheckboxTag: void writeTagDetails(org.springframework.web.servlet.tags.form.TagWriter)> -> _SINKS_
<org.springframework.security.config.annotation.web.configuration.AutowiredWebSecurityConfigurersIgnoreParents: java.util.List getWebSecurityConfigurers()> -> _SOURCES_
<org.springframework.beans.ExtendedBeanInfoFactory: java.beans.BeanInfo getBeanInfo(java.lang.Class)> -> _SOURCES_
<org.springframework.beans.factory.access.el.SimpleSpringBeanELResolver: org.springframework.beans.factory.BeanFactory getBeanFactory(javax.el.ELContext)> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setSynchronizeOnSession(boolean)> -> _SINKS_
<org.springframework.messaging.converter.MarshallingMessageConverter: javax.xml.transform.Source getSource(java.lang.Object)> -> _SOURCES_
<org.springframework.web.servlet.tags.form.FormTag: void setAcceptCharset(java.lang.String)> -> _SINKS_
<org.springframework.web.bind.EscapedErrors: int getGlobalErrorCount()> -> _SOURCES_
<org.springframework.beans.propertyeditors.InputSourceEditor: void setAsText(java.lang.String)> -> _SINKS_
<org.springframework.remoting.jaxws.JaxWsPortClientInterceptor: void setSoapActionUri(java.lang.String)> -> _SINKS_
<org.springframework.jmx.support.MBeanRegistrationSupport: void setServer(javax.management.MBeanServer)> -> _SINKS_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: java.util.Map getDynamicAttributes()> -> _SOURCES_
<org.springframework.test.context.transaction.TransactionContext: org.springframework.transaction.TransactionStatus getTransactionStatus()> -> _SOURCES_
<org.springframework.http.converter.ResourceRegionHttpMessageConverter: org.springframework.core.io.support.ResourceRegion readInternal(java.lang.Class,org.springframework.http.HttpInputMessage)> -> _SOURCES_
<org.springframework.cglib.proxy.Enhancer: java.lang.reflect.Method getCallbacksSetter(java.lang.Class,java.lang.String)> -> _SOURCES_
<org.springframework.cglib.core.CodeEmitter: void aaload(int)> -> _SOURCES_
<org.springframework.format.datetime.DateFormatter: void setPattern(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.core.CallableStatementCreatorFactory: void setNativeJdbcExtractor(org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor)> -> _CWE089__SINKS_
<org.springframework.jms.core.JmsTemplate: void send(javax.jms.Destination,org.springframework.jms.core.MessageCreator)> -> _SINKS_
<org.springframework.orm.ibatis.SqlMapClientTemplate: java.util.Map queryForMap(java.lang.String,java.lang.Object,java.lang.String,java.lang.String)> -> _SINKS_
<org.springframework.core.io.support.PropertiesLoaderSupport: void setLocations(org.springframework.core.io.Resource[])> -> _SINKS_
<org.springframework.web.filter.CompositeFilter: void setFilters(java.util.List)> -> _SINKS_
<org.springframework.http.HttpHeaders: boolean getAccessControlAllowCredentials()> -> _SOURCES_
<org.springframework.web.socket.config.annotation.AbstractWebSocketHandlerRegistration: org.springframework.web.socket.server.HandshakeHandler getHandshakeHandler()> -> _SOURCES_
<org.springframework.core.convert.support.StringToEnumConverterFactory: org.springframework.core.convert.converter.Converter getConverter(java.lang.Class)> -> _SOURCES_
<org.springframework.aop.framework.AdvisedSupport: void setTargetSource(org.springframework.aop.TargetSource)> -> _SINKS_
<org.springframework.beans.ExtendedBeanInfo: java.awt.Image getIcon(int)> -> _SOURCES_
<org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator: void setAdvisorBeanNamePrefix(java.lang.String)> -> _SINKS_
<org.springframework.cache.ehcache.EhCacheManagerUtils: net.sf.ehcache.CacheManager buildCacheManager(java.lang.String,org.springframework.core.io.Resource)> -> _SINKS_
<org.springframework.test.web.servlet.request.MockMvcRequestBuilders: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder request(java.lang.String,java.net.URI)> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateTemplate: java.lang.Object execute(org.springframework.orm.hibernate3.HibernateCallback,boolean)> -> _SINKS_
<org.springframework.web.socket.config.annotation.WebSocketTransportRegistration: java.lang.Integer getSendBufferSizeLimit()> -> _SOURCES_
<org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver: org.springframework.web.servlet.ModelAndView handleHttpRequestMethodNotSupported(org.springframework.web.HttpRequestMethodNotSupportedException,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)> -> _SINKS_
<org.springframework.mock.web.portlet.MockEventRequest: java.lang.String getMethod()> -> _SOURCES_
<org.springframework.context.support.LiveBeansView: void setApplicationContext(org.springframework.context.ApplicationContext)> -> _SINKS_
<org.springframework.orm.jpa.JpaTemplate: java.util.List executeFind(org.springframework.orm.jpa.JpaCallback)> -> _CWE078__SINKS_
<org.springframework.jmx.support.NotificationListenerHolder: javax.management.NotificationFilter getNotificationFilter()> -> _SOURCES_
<org.springframework.web.portlet.context.PortletRequestHandledEvent: java.lang.String getPortletMode()> -> _SOURCES_
<org.springframework.jca.work.glassfish.GlassFishWorkManagerTaskExecutor: javax.resource.spi.work.WorkManager getDefaultWorkManager()> -> _SOURCES_
<org.springframework.test.web.client.match.MockRestRequestMatchers: org.springframework.util.MultiValueMap getQueryParams(org.springframework.http.client.ClientHttpRequest)> -> _SOURCES_
<org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractorAdapter: boolean isNativeConnectionNecessaryForNativeCallableStatements()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__CWE862_
<org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource: org.springframework.beans.factory.BeanFactory getBeanFactory()> -> _SOURCES_
<org.springframework.aop.framework.adapter.AfterReturningAdviceAdapter: org.aopalliance.intercept.MethodInterceptor getInterceptor(org.springframework.aop.Advisor)> -> _SOURCES_
<org.springframework.web.multipart.commons.CommonsMultipartFile: void setPreserveFilename(boolean)> -> _SINKS_
<org.springframework.jdbc.datasource.lookup.SingleDataSourceLookup: javax.sql.DataSource getDataSource(java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean: void setStore(java.util.concurrent.ConcurrentMap)> -> _SINKS_
<org.springframework.scheduling.quartz.SchedulerFactoryBean: void setConfigLocation(org.springframework.core.io.Resource)> -> _SINKS_
<org.springframework.web.context.support.ServletContextPropertyPlaceholderConfigurer: void setContextOverride(boolean)> -> _SINKS_
<org.springframework.messaging.handler.annotation.support.AbstractNamedValueMethodArgumentResolver: org.springframework.messaging.handler.'annotation'.support.AbstractNamedValueMethodArgumentResolver$NamedValueInfo getNamedValueInfo(org.springframework.core.MethodParameter)> -> _SOURCES_
<org.springframework.jdbc.core.simple.SimpleJdbcTemplate: org.springframework.jdbc.core.JdbcOperations getJdbcOperations()> -> _CWE089__SOURCES_
<org.springframework.jmx.support.JmxUtils: java.lang.Class getMXBeanInterface(java.lang.Class)> -> _SOURCES_
<org.springframework.beans.PropertyBatchUpdateException: int getExceptionCount()> -> _SOURCES_
<org.springframework.security.provisioning.InMemoryUserDetailsManager: org.springframework.security.core.userdetails.UserDetails loadUserByUsername(java.lang.String)> -> _SOURCES__CWE862_
<org.springframework.jms.connection.CachingConnectionFactory: void resetConnection()> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.oxm.castor.CastorMarshaller: void setMappingLocations(org.springframework.core.io.Resource[])> -> _SINKS_
<org.springframework.jdbc.support.SQLErrorCodes: void setBadSqlGrammarCodes(java.lang.String[])> -> _CWE089__SINKS_
<org.springframework.core.io.support.VfsPatternUtils: java.lang.Object getVisitorAttribute()> -> _SOURCES_
<org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator: void setBeanNames(java.lang.String[])> -> _SINKS_
<org.springframework.core.type.classreading.SimpleMetadataReader: org.springframework.core.type.AnnotationMetadata getAnnotationMetadata()> -> _SOURCES_
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.jdbc.core.JdbcTemplate: int[] batchUpdate(java.lang.String[])> -> _CWE089__SINKS_
<org.springframework.messaging.simp.user.UserRegistryMessageHandler: long getRegistryExpirationPeriod()> -> _SOURCES__CWE862_
<org.springframework.web.socket.config.annotation.ServletWebSocketHandlerRegistry: org.springframework.web.socket.config.'annotation'.WebSocketHandlerRegistration addHandler(org.springframework.web.socket.WebSocketHandler,java.lang.String[])> -> _SINKS_
<org.springframework.web.method.support.InvocableHandlerMethod: void setDataBinderFactory(org.springframework.web.bind.support.WebDataBinderFactory)> -> _SINKS_
<org.springframework.web.servlet.mvc.condition.AbstractNameValueExpression: java.lang.Object getValue()> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: org.springframework.beans.factory.FactoryBean getSingletonFactoryBeanForTypeCheck(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)> -> _SOURCES_
<org.springframework.http.client.AbstractBufferingClientHttpRequest: java.io.OutputStream getBodyInternal(org.springframework.http.HttpHeaders)> -> _SOURCES_
<org.springframework.expression.spel.ast.Projection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.remoting.rmi.RmiClientInterceptor: void setCacheStub(boolean)> -> _SINKS_
<org.springframework.util.xml.AbstractXMLStreamReader: char[] getTextCharacters()> -> _SOURCES_
<org.springframework.web.context.support.ServletContextResource: java.io.InputStream getInputStream()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: java.util.List getDefaultInitBinderArgumentResolvers()> -> _SOURCES_
<org.springframework.core.type.classreading.MethodMetadataReadingVisitor: org.springframework.util.MultiValueMap getAllAnnotationAttributes(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration: org.springframework.web.servlet.config.'annotation'.ResourceHandlerRegistration setCachePeriod(java.lang.Integer)> -> _SINKS_
<org.springframework.jms.listener.adapter.AbstractAdaptableMessageListener: org.springframework.jms.support.converter.MessageConverter getMessageConverter()> -> _SOURCES_
<org.springframework.aop.interceptor.AbstractMonitoringInterceptor: java.lang.String getPrefix()> -> _SOURCES_
<org.springframework.scheduling.config.ScheduledTaskRegistrar: java.util.List getFixedDelayTaskList()> -> _SOURCES_
<org.springframework.web.context.request.RequestScope: int getScope()> -> _SOURCES_
<org.springframework.expression.spel.standard.SpelExpression: java.lang.Object getValue(java.lang.Class)> -> _SOURCES_
<org.springframework.context.support.AbstractApplicationContext: long getStartupDate()> -> _SOURCES_
<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: void setDestroyMethod(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.support.BindStatus: java.lang.String[] getErrorMessages()> -> _SOURCES_
<org.springframework.oxm.castor.CastorMarshaller: void setClassDescriptorResolver(org.exolab.castor.xml.XMLClassDescriptorResolver)> -> _SINKS_
<org.springframework.web.servlet.view.velocity.VelocityView: java.lang.String getEncoding()> -> _SOURCES_
<org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean: void setAnnotatedClasses(java.lang.Class[])> -> _SINKS_
<org.springframework.web.bind.EscapedErrors: java.util.List getGlobalErrors()> -> _SOURCES_
<org.springframework.web.util.JavaScriptUtils: java.lang.String javaScriptEscape(java.lang.String)> -> _SANITIZERS_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: void setOndblclick(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.http.client.AbstractClientHttpRequest: org.springframework.http.client.ClientHttpResponse execute()> -> _CWE078__SINKS_
<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: int getOrder()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: void setUserPrincipal(java.security.Principal)> -> _SINKS_
<org.springframework.beans.factory.serviceloader.ServiceLoaderFactoryBean: java.lang.Object getObjectToExpose(java.util.ServiceLoader)> -> _SOURCES_
<org.springframework.web.method.annotation.RequestParamMethodArgumentResolver: void handleMissingValue(java.lang.String,org.springframework.core.MethodParameter,org.springframework.web.context.request.NativeWebRequest)> -> _SINKS_
<org.springframework.jdbc.core.simple.SimpleJdbcDaoSupport: org.springframework.jdbc.core.simple.SimpleJdbcTemplate getSimpleJdbcTemplate()> -> _CWE089__SOURCES_
<org.springframework.security.config.annotation.authentication.configurers.userdetails.AbstractDaoAuthenticationConfigurer: void <init>(org.springframework.security.core.userdetails.UserDetailsService)> -> _AUTHENTICATIONS_TO_HIGH_
<org.springframework.messaging.simp.stomp.StompClientSupport: void setTaskScheduler(org.springframework.scheduling.TaskScheduler)> -> _SINKS_
<org.springframework.context.support.DefaultLifecycleProcessor: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.expression.spel.standard.SpelExpressionParser: org.springframework.expression.spel.standard.SpelExpression doParseExpression(java.lang.String,org.springframework.expression.ParserContext)> -> _SOURCES__SINKS_
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.util.Map getBeansOfType(java.lang.Class)> -> _SOURCES_
<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition getRawBeanDefinition()> -> _SOURCES_
<org.springframework.context.support.DelegatingMessageSource: void setParentMessageSource(org.springframework.context.MessageSource)> -> _SINKS_
<org.springframework.web.bind.WebDataBinder: void setBindEmptyMultipartFiles(boolean)> -> _SINKS_
<org.springframework.messaging.handler.annotation.support.MessageMethodArgumentResolver: java.lang.Class getPayloadType(org.springframework.core.MethodParameter)> -> _SOURCES_
<org.springframework.core.enums.StringCodedLabeledEnum: java.lang.Comparable getCode()> -> _SOURCES_
<org.springframework.messaging.simp.SimpMessageHeaderAccessor: void setDestination(java.lang.String)> -> _SINKS_
<org.springframework.context.support.AbstractApplicationContext: org.springframework.context.MessageSource getMessageSource()> -> _SOURCES_
<org.springframework.context.support.ContextTypeMatchClassLoader: boolean isClassReloadable(java.lang.Class)> -> _SOURCES_
<org.springframework.web.context.request.FacesRequestAttributes: javax.faces.context.FacesContext getFacesContext()> -> _SOURCES_
<org.springframework.aop.support.StaticMethodMatcherPointcutAdvisor: org.aopalliance.aop.Advice getAdvice()> -> _SOURCES_
<org.springframework.cglib.core.AbstractClassGenerator: void setClassName(java.lang.String)> -> _SINKS_
<org.springframework.jmx.export.metadata.ManagedMetric: java.lang.String getCategory()> -> _SOURCES_
<org.springframework.util.xml.AbstractXMLReader: void setContentHandler(org.xml.sax.ContentHandler)> -> _SINKS_
<org.springframework.core.type.classreading.MethodMetadataReadingVisitor: org.springframework.core.'annotation'.AnnotationAttributes getAnnotationAttributes(java.lang.String,boolean)> -> _SOURCES_
<org.springframework.web.socket.messaging.SubProtocolWebSocketHandler: java.util.List getProtocolHandlers()> -> _SOURCES_
<org.springframework.jdbc.support.SQLErrorCodes: void setInvalidResultSetAccessCodes(java.lang.String[])> -> _CWE089__SINKS_
<org.springframework.jca.endpoint.AbstractMessageEndpointFactory: void setTransactionTimeout(int)> -> _SINKS_
<org.springframework.jdbc.support.DatabaseStartupValidator: void setInterval(int)> -> _CWE089__SINKS_
<org.springframework.security.access.expression.method.AbstractExpressionBasedMethodConfigAttribute: org.springframework.expression.Expression getFilterExpression()> -> _SOURCES_
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: org.springframework.core.convert.TypeDescriptor getTypeDescriptor(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)> -> _SOURCES_
<org.springframework.orm.hibernate4.HibernateTransactionManager: java.lang.Object getResourceFactory()> -> _SOURCES_
<org.springframework.web.socket.config.WebSocketMessageBrokerStats: void setSockJsTaskScheduler(org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler)> -> _SINKS_
<org.springframework.remoting.caucho.HessianClientInterceptor: void setSerializerFactory(com.caucho.hessian.io.SerializerFactory)> -> _SINKS_
<org.springframework.web.util.CookieGenerator: javax.servlet.http.Cookie createCookie(java.lang.String)> -> _SOURCES_
<org.springframework.jdbc.core.support.AbstractInterruptibleBatchPreparedStatementSetter: int getBatchSize()> -> _CWE089__SOURCES_
<org.springframework.mock.web.MockServletContext: java.lang.String getRealPath(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.util.xml.XMLEventStreamReader: java.lang.String getCharacterEncodingScheme()> -> _SOURCES_
<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: void setTargetClass(java.lang.Class)> -> _SINKS_
<org.springframework.util.Base64Utils: java.lang.String encodeToString(byte[])> -> _SANITIZERS_
<org.springframework.web.servlet.view.AbstractView: java.lang.String getContentType()> -> _SOURCES_
<org.springframework.mock.web.MockJspWriter: void println(boolean)> -> _SINKS_
<org.springframework.format.number.CurrencyStyleFormatter: void setRoundingMode(java.math.RoundingMode)> -> _SINKS_
<org.springframework.orm.jpa.DefaultJpaDialect: void releaseJdbcConnection(org.springframework.jdbc.datasource.ConnectionHandle,javax.persistence.EntityManager)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.support.AbstractFlashMapManager: void setFlashMapTimeout(int)> -> _SINKS_
<org.springframework.orm.hibernate3.support.OpenSessionInViewInterceptor: void preHandle(org.springframework.web.context.request.WebRequest)> -> _SINKS_
<org.springframework.http.client.OkHttpClientHttpRequest: org.springframework.http.client.ClientHttpResponse executeInternal(org.springframework.http.HttpHeaders,byte[])> -> _CWE078__SINKS_
<org.springframework.messaging.simp.user.UserDestinationMessageHandler: void setHeaderInitializer(org.springframework.messaging.support.MessageHeaderInitializer)> -> _SINKS__CWE862_
<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.MethodMatcher getMethodMatcher()> -> _SOURCES_
<org.springframework.orm.jdo.JdoAccessor: void setPersistenceManagerFactory(javax.jdo.PersistenceManagerFactory)> -> _SINKS_
<org.springframework.jca.context.SpringContextResourceAdapter: java.lang.String getContextConfigLocation()> -> _SOURCES_
<org.springframework.util.xml.SimpleNamespaceContext: java.lang.String getPrefix(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractCheckedElementTag: void renderFromBoolean(java.lang.Boolean,org.springframework.web.servlet.tags.form.TagWriter)> -> _SINKS_
<org.springframework.scripting.bsh.BshScriptFactory: java.lang.Object getScriptedObject(org.springframework.scripting.ScriptSource,java.lang.Class[])> -> _SOURCES_
<org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader: void setProperty(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.aop.target.AbstractLazyCreationTargetSource: java.lang.Class getTargetClass()> -> _SOURCES_
<org.springframework.context.expression.CachedExpressionEvaluator: org.springframework.expression.Expression getExpression(java.util.Map,org.springframework.context.expression.AnnotatedElementKey,java.lang.String)> -> _SOURCES_
<org.springframework.web.accept.ContentNegotiationManager: java.util.List getAllFileExtensions()> -> _SOURCES_
<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor getElementTypeDescriptor()> -> _SOURCES_
<org.springframework.web.portlet.mvc.annotation.DefaultAnnotationHandlerMapping: javax.portlet.PortletMode getLookupKey(javax.portlet.PortletRequest)> -> _SOURCES_
<org.springframework.core.convert.Property: java.lang.String getName()> -> _SOURCES_
<org.springframework.transaction.interceptor.RollbackRuleAttribute: int getDepth(java.lang.Throwable)> -> _SOURCES_
<org.springframework.web.socket.config.annotation.WebMvcStompWebSocketEndpointRegistration: org.springframework.util.MultiValueMap getMappings()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurer: org.springframework.security.config.'annotation'.web.configurers.SessionManagementConfigurer sessionAuthenticationStrategy(org.springframework.security.web.authentication.session.SessionAuthenticationStrategy)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.orm.hibernate4.HibernateTemplate: java.lang.Object load(java.lang.Class,java.io.Serializable)> -> _SOURCES_
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.String getFinalPath(org.springframework.beans.AbstractNestablePropertyAccessor,java.lang.String)> -> _SOURCES_
<org.springframework.http.converter.ObjectToStringHttpMessageConverter: java.lang.Object readInternal(java.lang.Class,org.springframework.http.HttpInputMessage)> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping: java.util.Comparator getMappingComparator(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer: void setSystemTreePath(java.lang.String)> -> _SINKS_
<org.springframework.web.util.WebUtils: java.lang.String getSessionId(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.web.context.request.FacesRequestAttributes: java.lang.Object getSessionMutex()> -> _SOURCES_
<org.springframework.web.servlet.mvc.condition.RequestMethodsRequestCondition: java.lang.String getToStringInfix()> -> _SOURCES_
<org.springframework.security.access.expression.SecurityExpressionRoot: java.util.Set getAuthoritySet()> -> _SOURCES_
<org.springframework.orm.hibernate4.HibernateTransactionManager: void setPrepareConnection(boolean)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.support.BindStatus: java.beans.PropertyEditor getEditor()> -> _SOURCES_
<org.springframework.util.CustomizableThreadCreator: java.lang.String getDefaultThreadNamePrefix()> -> _SOURCES_
<org.springframework.context.support.SimpleThreadScope: java.lang.Object get(java.lang.String,org.springframework.beans.factory.ObjectFactory)> -> _SOURCES_
<org.springframework.cglib.beans.BulkBean: java.lang.Object[] getPropertyValues(java.lang.Object)> -> _SOURCES_
<org.springframework.orm.hibernate3.SessionHolder: org.hibernate.Session getValidatedSession()> -> _SOURCES_
<org.springframework.format.datetime.joda.JodaDateTimeFormatAnnotationFormatterFactory: org.springframework.format.Printer getPrinter(org.springframework.format.'annotation'.DateTimeFormat,java.lang.Class)> -> _SOURCES_
<org.springframework.core.convert.TypeDescriptor: org.springframework.core.ResolvableType getResolvableType()> -> _SOURCES_
<org.springframework.context.support.ResourceBundleMessageSource: void setBasenames(java.lang.String[])> -> _SINKS_
<org.springframework.jms.support.converter.MappingJackson2MessageConverter: javax.jms.Message toMessage(java.lang.Object,javax.jms.Session,java.lang.Class)> -> _SINKS_
<org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver: void setMappedHandlers(java.util.Set)> -> _SINKS_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: java.lang.String getOnmouseup()> -> _CWE079__SOURCES_
<org.springframework.web.socket.messaging.SessionDisconnectEvent: java.lang.String getSessionId()> -> _SOURCES_
<org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractorAdapter: java.sql.Connection getNativeConnection(java.sql.Connection)> -> _CWE306__CWE089__SOURCES__CWE862_
<org.springframework.jmx.export.naming.KeyNamingStrategy: void setMappingLocations(org.springframework.core.io.Resource[])> -> _SINKS_
<org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean: void setSimpleDateFormat(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.object.SqlUpdate: int updateByNamedParam(java.util.Map,org.springframework.jdbc.support.KeyHolder)> -> _CWE089__SINKS_
<org.springframework.web.client.DefaultResponseErrorHandler: byte[] getResponseBody(org.springframework.http.client.ClientHttpResponse)> -> _SOURCES__CWE601_
<org.springframework.jdbc.core.BeanPropertyRowMapper: java.lang.Object getColumnValue(java.sql.ResultSet,int,java.beans.PropertyDescriptor)> -> _CWE089__SOURCES_
<org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag: org.springframework.web.servlet.support.BindStatus getBindStatus()> -> _SOURCES_
<org.springframework.scheduling.quartz.SimpleTriggerFactoryBean: org.quartz.JobDataMap getJobDataMap()> -> _SOURCES_
<org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl: boolean getEnableAuthorities()> -> _CWE089__SOURCES__CWE862_
<org.springframework.security.authentication.encoding.Md4: void update(byte[],int,int)> -> _SINKS_
<org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean: void setPersistenceUnitManager(org.springframework.orm.jpa.persistenceunit.PersistenceUnitManager)> -> _SINKS_
<org.springframework.orm.hibernate3.support.OpenSessionInViewFilter: org.hibernate.Session getSession(org.hibernate.SessionFactory)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletSession: void setAttribute(java.lang.String,java.lang.Object,int)> -> _SINKS_
<org.springframework.jms.connection.CachedMessageConsumer: java.lang.String getMessageSelector()> -> _SOURCES_
<org.springframework.test.web.servlet.TestDispatcherServlet: org.springframework.web.servlet.HandlerExecutionChain getHandler(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: void setLocalAddr(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.web.servlet.tags.form.AbstractMultiCheckedElementTag: java.lang.String getElement()> -> _SOURCES_
<org.springframework.cglib.core.CodeGenerationException: java.lang.Throwable getCause()> -> _SOURCES_
<org.springframework.validation.BindException: java.util.List getGlobalErrors()> -> _SOURCES_
<org.springframework.security.util.FieldUtils: java.lang.String getAccessorName(java.lang.String,java.lang.Class)> -> _SOURCES_
<org.springframework.aop.scope.ScopedProxyFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.web.socket.config.annotation.DelegatingWebSocketConfiguration: void registerWebSocketHandlers(org.springframework.web.socket.config.'annotation'.WebSocketHandlerRegistry)> -> _SINKS_
<org.springframework.web.servlet.resource.CachingResourceTransformer: org.springframework.core.io.Resource transform(javax.servlet.http.HttpServletRequest,org.springframework.core.io.Resource,org.springframework.web.servlet.resource.ResourceTransformerChain)> -> _SINKS_
<org.springframework.scheduling.commonj.TimerManagerFactoryBean: void setScheduledTimerListeners(org.springframework.scheduling.commonj.ScheduledTimerListener[])> -> _SINKS_
<org.springframework.web.portlet.handler.PortletRequestMethodNotSupportedException: java.lang.String getMethod()> -> _SOURCES_
<org.springframework.security.access.intercept.RunAsManagerImpl: java.lang.String getKey()> -> _SOURCES_
<org.springframework.web.context.support.ServletContextFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.messaging.support.NativeMessageHeaderAccessor: java.lang.String getFirstNativeHeader(java.lang.String,java.util.Map)> -> _SOURCES_
<org.springframework.cglib.core.Signature: org.springframework.asm.Type getReturnType()> -> _SOURCES_
<org.springframework.web.cors.UrlBasedCorsConfigurationSource: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)> -> _SINKS_
<org.springframework.orm.hibernate5.LocalSessionFactoryBean: void setMappingLocations(org.springframework.core.io.Resource[])> -> _SINKS_
<org.springframework.test.context.cache.DefaultContextCache: org.springframework.context.ApplicationContext get(org.springframework.test.context.MergedContextConfiguration)> -> _SOURCES_
<org.springframework.orm.hibernate5.LocalSessionFactoryBean: void setPackagesToScan(java.lang.String[])> -> _SINKS_
<org.springframework.web.client.RestTemplate: java.util.Set optionsForAllow(java.lang.String,java.lang.Object[])> -> _SINKS_
<org.springframework.jmx.access.MBeanClientInterceptor: void setAgentId(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: org.springframework.web.method.'annotation'.ModelFactory getModelFactory(org.springframework.web.method.HandlerMethod,org.springframework.web.bind.support.WebDataBinderFactory)> -> _SOURCES_
<org.springframework.cglib.proxy.Enhancer: void setCallbacks(org.springframework.cglib.proxy.Callback[])> -> _SINKS_
<org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser: java.lang.String getParentName(org.w3c.dom.Element)> -> _SOURCES_
<org.springframework.messaging.support.AbstractHeaderMapper: void setOutboundPrefix(java.lang.String)> -> _SINKS_
<org.springframework.web.client.MessageBodyClientHttpResponseWrapper: org.springframework.http.HttpStatus getStatusCode()> -> _SOURCES__CWE601_
<org.springframework.expression.spel.ExpressionState: void setLocalVariable(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.cache.annotation.SpringCacheAnnotationParser: org.springframework.cache.'annotation'.SpringCacheAnnotationParser$DefaultCacheConfig getDefaultCacheConfig(java.lang.Class)> -> _SOURCES_
<org.springframework.core.annotation.AnnotationAttributes: java.lang.String[] getStringArray(java.lang.String)> -> _SOURCES_
<org.springframework.oxm.xstream.XStreamMarshaller: void setMapperWrappers(java.lang.Class[])> -> _SINKS_
<org.springframework.jms.listener.AbstractJmsListeningContainer: int getPausedTaskCount()> -> _SOURCES_
<org.springframework.web.servlet.mvc.condition.RequestConditionHolder: java.util.Collection getContent()> -> _SOURCES_
<org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory: void setDatabasePopulator(org.springframework.jdbc.datasource.init.DatabasePopulator)> -> _CWE089__SINKS_
<org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver: java.util.List getSupportedLocales()> -> _SOURCES_
<org.springframework.orm.hibernate4.support.OpenSessionInterceptor: void setSessionFactory(org.hibernate.SessionFactory)> -> _SINKS_
<org.springframework.cglib.core.CollectionUtils: java.util.Map getIndexMap(java.util.List)> -> _SOURCES_
<org.springframework.remoting.rmi.RmiProxyFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.util.concurrent.ListenableFuture headForHeaders(java.lang.String,java.lang.Object[])> -> _SINKS_
<org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer: groovy.text.markup.MarkupTemplateEngine createTemplateEngine()> -> _SOURCES_
<org.springframework.messaging.simp.config.StompBrokerRelayRegistration: org.springframework.messaging.simp.config.StompBrokerRelayRegistration setUserDestinationBroadcast(java.lang.String)> -> _SINKS_
<org.springframework.aop.interceptor.CustomizableTraceInterceptor: void writeToLog(org.apache.commons.logging.Log,java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.tags.TransformTag: void setScope(java.lang.String)> -> _SINKS_
<org.springframework.orm.hibernate5.LocalSessionFactoryBean: java.util.Properties getHibernateProperties()> -> _SOURCES_
<org.springframework.web.context.request.FacesWebRequest: java.lang.String getDescription(boolean)> -> _CWE079__SOURCES_
<org.springframework.core.style.DefaultToStringStyler: org.springframework.core.style.ValueStyler getValueStyler()> -> _SOURCES_
<org.springframework.jdbc.support.SQLErrorCodes: org.springframework.jdbc.support.CustomSQLErrorCodesTranslation[] getCustomTranslations()> -> _CWE089__SOURCES_
<org.springframework.web.servlet.tags.form.OptionWriter: java.lang.String getDisplayString(java.lang.Object)> -> _CWE079__SOURCES_
<org.springframework.ui.context.support.ResourceBundleThemeSource: void setParentThemeSource(org.springframework.ui.context.ThemeSource)> -> _SINKS_
<org.springframework.jms.config.AbstractListenerContainerParser: int[] parseConcurrency(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource: int getMethodMapSize()> -> _SOURCES_
<org.springframework.web.portlet.handler.WebRequestHandlerInterceptorAdapter: void postHandleResource(javax.portlet.ResourceRequest,javax.portlet.ResourceResponse,java.lang.Object,org.springframework.web.portlet.ModelAndView)> -> _SINKS_
<org.springframework.security.access.prepost.PrePostAnnotationSecurityMetadataSource: java.util.Collection getAllConfigAttributes()> -> _SOURCES_
<org.springframework.orm.hibernate4.support.HibernateDaoSupport: void setSessionFactory(org.hibernate.SessionFactory)> -> _SINKS_
<org.springframework.web.socket.server.standard.ServerEndpointRegistration: java.lang.String getPath()> -> _SOURCES_
<org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean: void setDataSource(javax.sql.DataSource)> -> _SINKS_
<org.springframework.web.util.ContentCachingRequestWrapper: java.lang.String getParameter(java.lang.String)> -> _CWE079__SOURCES__SINKS_
<org.springframework.web.servlet.config.ResourcesBeanDefinitionParser: void parseResourceCache(org.springframework.beans.factory.support.ManagedList,org.springframework.beans.factory.support.ManagedList,org.w3c.dom.Element,java.lang.Object)> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletResponse: java.util.List getIncludedUrls()> -> _SOURCES__CWE601_
<org.springframework.mock.web.MockPageContext: java.lang.Object getAttribute(java.lang.String)> -> _SOURCES_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSetMetaData: java.lang.String getTableName(int)> -> _CWE089__SOURCES_
<org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean: void setPersistenceUnitPostProcessors(org.springframework.orm.jpa.persistenceunit.PersistenceUnitPostProcessor[])> -> _SINKS_
<org.springframework.context.annotation.ConfigurationClass: org.springframework.core.io.Resource getResource()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.JeeConfigurer: org.springframework.security.web.authentication.preauth.j2ee.J2eePreAuthenticatedProcessingFilter getFilter(org.springframework.security.authentication.AuthenticationManager)> -> _SOURCES_
<org.springframework.remoting.rmi.RemoteInvocationSerializingExporter: org.springframework.remoting.support.RemoteInvocation doReadRemoteInvocation(java.io.ObjectInputStream)> -> _SOURCES_
<org.springframework.web.socket.client.standard.EndpointConnectionManager: javax.websocket.WebSocketContainer getWebSocketContainer()> -> _SOURCES_
<org.springframework.context.annotation.ComponentScanBeanDefinitionParser: org.springframework.core.type.filter.TypeFilter createTypeFilter(org.w3c.dom.Element,java.lang.ClassLoader)> -> _SOURCES_
<org.springframework.web.context.support.AnnotationConfigWebApplicationContext: org.springframework.context.'annotation'.ScopeMetadataResolver getScopeMetadataResolver()> -> _SOURCES_
<org.springframework.http.HttpHeaders: void set(java.lang.String,java.lang.String)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompHeaders: void setDestination(java.lang.String)> -> _SINKS_
<org.springframework.context.event.ApplicationListenerMethodAdapter: java.lang.String getCondition()> -> _SOURCES_
<org.springframework.cache.support.AbstractCacheManager: java.util.Collection getCacheNames()> -> _SOURCES_
<org.springframework.jms.connection.SingleConnectionFactory: javax.jms.TopicConnection createTopicConnection(java.lang.String,java.lang.String)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.validation.BindException: int getGlobalErrorCount()> -> _SOURCES_
<org.springframework.messaging.core.AbstractDestinationResolvingMessagingTemplate: java.lang.Object convertSendAndReceive(java.lang.String,java.lang.Object,java.util.Map,java.lang.Class,org.springframework.messaging.core.MessagePostProcessor)> -> _SINKS_
<org.springframework.util.ClassUtils: java.lang.reflect.Method getMethodIfAvailable(java.lang.Class,java.lang.String,java.lang.Class[])> -> _SOURCES_
<org.springframework.oxm.xstream.XStreamMarshaller: void setNameCoder(com.thoughtworks.xstream.io.naming.NameCoder)> -> _SINKS_
<org.springframework.messaging.converter.AbstractMessageConverter: void setContentTypeResolver(org.springframework.messaging.converter.ContentTypeResolver)> -> _SINKS_
<org.springframework.web.util.ContentCachingResponseWrapper: java.io.PrintWriter getWriter()> -> _SOURCES__CWE601_
<org.springframework.orm.hibernate5.HibernateTransactionManager: javax.sql.DataSource getDataSource()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.FormTag: java.lang.String getHttpMethod()> -> _SOURCES_
<org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator: void setUrlDecode(boolean)> -> _SOURCES__SINKS_
<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: void setBeanName(java.lang.String)> -> _SINKS_
<org.springframework.web.util.UriComponentsBuilder: org.springframework.web.util.UriComponentsBuilder replaceQueryParam(java.lang.String,java.lang.Object[])> -> _SINKS_
<org.springframework.cglib.core.ReflectUtils: java.lang.reflect.Method[] getPropertyMethods(java.beans.PropertyDescriptor[],boolean,boolean)> -> _SOURCES_
<org.springframework.beans.AbstractPropertyAccessor: void setPropertyValues(org.springframework.beans.PropertyValues,boolean)> -> _SINKS_
<org.springframework.util.backoff.ExponentialBackOff: long getInitialInterval()> -> _SOURCES_
<org.springframework.util.MimeType: java.lang.String getParameter(java.lang.String)> -> _SOURCES_
<org.springframework.web.portlet.ModelAndView: org.springframework.ui.ModelMap getModelMap()> -> _SOURCES_
<org.springframework.orm.hibernate3.SessionFactoryUtils: org.hibernate.Session getNewSession(org.hibernate.SessionFactory,org.hibernate.Interceptor)> -> _SOURCES_
<org.springframework.scheduling.config.TaskExecutorFactoryBean: void setBeanName(java.lang.String)> -> _SINKS_
<org.springframework.web.multipart.commons.CommonsMultipartResolver: void setServletContext(javax.servlet.ServletContext)> -> _SINKS_
<org.springframework.web.portlet.handler.HandlerInterceptorAdapter: void postHandleRender(javax.portlet.RenderRequest,javax.portlet.RenderResponse,java.lang.Object,org.springframework.web.portlet.ModelAndView)> -> _SINKS_
<org.springframework.http.client.AbstractAsyncClientHttpRequest: org.springframework.http.HttpHeaders getHeaders()> -> _SOURCES_
<org.springframework.test.web.ModelAndViewAssert: java.lang.Object assertAndReturnModelAttributeOfType(org.springframework.web.servlet.ModelAndView,java.lang.String,java.lang.Class)> -> _SINKS_
<org.springframework.orm.hibernate3.TypeDefinitionBean: void setTypeName(java.lang.String)> -> _SINKS_
<org.springframework.asm.Type: org.springframework.asm.Type[] getArgumentTypes(java.lang.String)> -> _SOURCES_
<org.springframework.security.access.SecurityConfig: java.lang.String getAttribute()> -> _SOURCES_
<org.springframework.jca.endpoint.GenericMessageEndpointManager: javax.resource.spi.ActivationSpec getActivationSpec()> -> _SOURCES_
<org.springframework.jdbc.datasource.JdbcTransactionObjectSupport: void setSavepointAllowed(boolean)> -> _CWE089__SINKS_
<org.springframework.remoting.httpinvoker.AbstractHttpInvokerRequestExecutor: org.springframework.remoting.support.RemoteInvocationResult executeRequest(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration,org.springframework.remoting.support.RemoteInvocation)> -> _SINKS_
<org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite: org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite addHandler(org.springframework.web.method.support.HandlerMethodReturnValueHandler)> -> _SINKS_
<org.springframework.web.servlet.tags.form.AbstractMultiCheckedElementTag: void setItemValue(java.lang.String)> -> _SINKS_
<org.springframework.web.client.RestTemplate: org.springframework.http.ResponseEntity exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,org.springframework.core.ParameterizedTypeReference,java.util.Map)> -> _SINKS_
<org.springframework.orm.hibernate3.HibernateAccessor: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.web.servlet.mvc.AbstractController: void setSynchronizeOnSession(boolean)> -> _SINKS_
<org.springframework.web.socket.sockjs.client.AbstractClientSockJsSession: void afterTransportClosed(org.springframework.web.socket.CloseStatus)> -> _SINKS_
<org.springframework.core.io.ResourceEditor: java.lang.String getAsText()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletContext: javax.portlet.PortletRequestDispatcher getNamedDispatcher(java.lang.String)> -> _SOURCES_
<org.springframework.scheduling.quartz.SimpleTriggerBean: void setJobDetail(org.quartz.JobDetail)> -> _SINKS_
<org.springframework.web.servlet.resource.VersionResourceResolver: org.springframework.web.servlet.resource.VersionResourceResolver addVersionStrategy(org.springframework.web.servlet.resource.VersionStrategy,java.lang.String[])> -> _SINKS_
<org.springframework.mock.web.MockHttpSession: java.lang.Object getValue(java.lang.String)> -> _SOURCES_
<org.springframework.web.socket.server.standard.ServerEndpointRegistration: java.util.List getSubprotocols()> -> _SOURCES_
<org.springframework.test.context.web.socket.MockServerContainer: javax.websocket.Session connectToServer(java.lang.Class,javax.websocket.ClientEndpointConfig,java.net.URI)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.cache.support.NoOpCache: java.lang.Object get(java.lang.Object,java.lang.Class)> -> _SOURCES_
<org.springframework.ejb.support.AbstractStatefulSessionBean: void unloadBeanFactory()> -> _SOURCES_
<org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource: long getRefreshCount()> -> _SOURCES_
<org.springframework.web.servlet.support.RequestContext: java.lang.String getMessage(java.lang.String,java.lang.Object[])> -> _CWE079__SOURCES_
<org.springframework.beans.factory.support.AbstractBeanFactory: org.springframework.beans.factory.config.Scope getRegisteredScope(java.lang.String)> -> _SOURCES_
<org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource: org.springframework.jmx.export.metadata.ManagedResource getManagedResource(java.lang.Class)> -> _SOURCES_
<org.springframework.mock.web.MockServletContext: java.lang.String getServletContextName()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletResponse: java.lang.String getForwardedUrl()> -> _SOURCES__CWE601_
<org.springframework.context.support.AbstractApplicationContext: java.util.Map getBeansOfType(java.lang.Class)> -> _SOURCES_
<org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver: org.springframework.web.servlet.ModelAndView handleBindException(org.springframework.validation.BindException,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)> -> _SINKS_
<org.springframework.expression.spel.support.StandardEvaluationContext: java.util.List getConstructorResolvers()> -> _SOURCES_
<org.springframework.messaging.handler.invocation.HandlerMethodReturnValueHandlerComposite: java.util.List getReturnValueHandlers()> -> _SOURCES_
<org.springframework.security.config.authentication.AuthenticationManagerFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.asm.commons.SerialVersionUIDAdder: void writeItems(java.util.Collection,java.io.DataOutputStream,boolean)> -> _SINKS_
<org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader: java.net.URL getResource(java.lang.String)> -> _SOURCES_
<org.springframework.jms.listener.endpoint.JmsActivationSpecConfig: void setSubscriptionDurable(boolean)> -> _SINKS_
<org.springframework.mock.web.portlet.MockMimeResponse: java.lang.String getContentType()> -> _SOURCES__CWE601_
<org.springframework.security.access.intercept.AbstractSecurityInterceptor: void setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)> -> _CWE306__SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.aop.config.ConfigBeanDefinitionParser: void parseAdvisor(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletRequest: void setParameters(java.util.Map)> -> _CWE079__SINKS_
<org.springframework.beans.factory.xml.XmlReaderContext: java.lang.ClassLoader getBeanClassLoader()> -> _SOURCES_
<org.springframework.web.servlet.view.tiles3.TilesConfigurer: void setUseMutableTilesContainer(boolean)> -> _SINKS_
<org.springframework.web.socket.adapter.jetty.JettyWebSocketHandlerAdapter: void onWebSocketConnect(org.eclipse.jetty.websocket.api.Session)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.mock.http.MockHttpInputMessage: java.io.InputStream getBody()> -> _SOURCES_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: void setColumnNames(java.util.List)> -> _CWE089__SINKS_
<org.springframework.web.socket.messaging.WebSocketStompClient: org.springframework.messaging.simp.stomp.StompHeaders processConnectHeaders(org.springframework.messaging.simp.stomp.StompHeaders)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.socket.client.standard.EndpointConnectionManager: void closeConnection()> -> _CWE306__AUTHENTICATIONS_TO_LOW__CWE862_
<org.springframework.jdbc.datasource.UserCredentialsDataSourceAdapter: java.sql.Connection getConnection()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__SOURCES__CWE862_
<org.springframework.scheduling.quartz.ResourceLoaderClassLoadHelper: java.io.InputStream getResourceAsStream(java.lang.String)> -> _SOURCES_
<org.springframework.scheduling.quartz.JobDetailFactoryBean: void setDurability(boolean)> -> _SINKS_
<org.springframework.expression.spel.ast.SpelNodeImpl: int getChildCount()> -> _SOURCES_
<org.springframework.security.core.authority.mapping.SimpleAuthorityMapper: void setConvertToLowerCase(boolean)> -> _SINKS_
<org.springframework.jdbc.datasource.DelegatingDataSource: javax.sql.DataSource getTargetDataSource()> -> _CWE089__SOURCES_
<org.springframework.core.convert.Property: java.lang.annotation.Annotation[] getAnnotations()> -> _SOURCES_
<org.springframework.orm.ibatis.support.SqlMapClientDaoSupport: com.ibatis.sqlmap.client.SqlMapClient getSqlMapClient()> -> _SOURCES_
<org.springframework.beans.BeanWrapperImpl: java.beans.PropertyDescriptor[] getPropertyDescriptors()> -> _SOURCES_
<org.springframework.jca.cci.core.CciTemplate: void setOutputRecordCreator(org.springframework.jca.cci.core.RecordCreator)> -> _SINKS_
<org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder: void setIterations(int)> -> _SINKS_
<org.springframework.jms.connection.UserCredentialsConnectionFactoryAdapter: javax.jms.QueueConnection doCreateQueueConnection(java.lang.String,java.lang.String)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.expression.common.LiteralExpression: org.springframework.core.convert.TypeDescriptor getValueTypeDescriptor()> -> _SOURCES_
<org.springframework.core.io.FileSystemResource: java.lang.String getFilename()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.SelectTag: void setMultiple(java.lang.Object)> -> _SINKS_
<org.springframework.jdbc.datasource.DriverManagerDataSource: void setDriverClassName(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.orm.jdo.JdoTransactionManager: org.springframework.orm.jdo.JdoDialect getJdoDialect()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter: void setAuthenticationConfiguration(org.springframework.security.config.'annotation'.authentication.configuration.AuthenticationConfiguration)> -> _CWE306__SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider: javax.sql.DataSource getDataSource()> -> _SOURCES_
<org.springframework.web.util.UriComponents: java.lang.String getVariableName(java.lang.String)> -> _SOURCES_
<org.springframework.web.context.request.async.DeferredResult: boolean setErrorResult(java.lang.Object)> -> _SINKS_
<org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler: java.util.Set getDirectLookupDestinations(java.lang.Object)> -> _SOURCES_
<org.springframework.orm.hibernate3.support.HibernateDaoSupport: org.hibernate.SessionFactory getSessionFactory()> -> _SOURCES_
<org.springframework.web.bind.annotation.support.HandlerMethodInvoker: java.lang.Object readWithMessageConverters(org.springframework.core.MethodParameter,org.springframework.http.HttpInputMessage,java.lang.Class)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletResponse: javax.servlet.http.Cookie[] getCookies()> -> _SOURCES__CWE601_
<org.springframework.scheduling.quartz.SchedulerFactoryBean: void setSchedulerName(java.lang.String)> -> _SINKS_
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Object doCreateBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition,java.lang.Object[])> -> _SOURCES_
<org.springframework.beans.ExtendedBeanInfo: java.beans.BeanInfo[] getAdditionalBeanInfo()> -> _SOURCES_
<org.springframework.cglib.proxy.CallbackInfo: org.springframework.cglib.proxy.CallbackGenerator[] getGenerators(org.springframework.asm.Type[])> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanDefinitionReader: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.orm.hibernate3.HibernateTransactionManager: void setAutodetectDataSource(boolean)> -> _SINKS_
<org.springframework.jms.listener.adapter.AbstractAdaptableMessageListener: void handleResult(java.lang.Object,javax.jms.Message,javax.jms.Session)> -> _SINKS_
<org.springframework.util.ClassUtils: java.lang.String getQualifiedMethodName(java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.messaging.handler.invocation.HandlerMethodReturnValueHandlerComposite: org.springframework.messaging.handler.invocation.HandlerMethodReturnValueHandler getReturnValueHandler(org.springframework.core.MethodParameter)> -> _SOURCES_
<org.springframework.objenesis.instantiator.sun.SunReflectionFactoryHelper: java.lang.Class getReflectionFactoryClass()> -> _SOURCES_
<org.springframework.http.HttpHeaders: void setPragma(java.lang.String)> -> _SINKS_
<org.springframework.jca.cci.connection.SingleConnectionFactory: javax.resource.cci.Connection getConnection(javax.resource.cci.ConnectionSpec)> -> _CWE306__SOURCES__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.orm.hibernate3.HibernateTemplate: void setMaxResults(int)> -> _SINKS_
<org.springframework.web.socket.adapter.standard.StandardWebSocketSession: void setTextMessageSizeLimit(int)> -> _SINKS_
<org.springframework.scheduling.quartz.SimpleTriggerBean: void setStartDelay(long)> -> _SINKS_
<org.springframework.scheduling.concurrent.ReschedulingRunnable: long getDelay(java.util.concurrent.TimeUnit)> -> _SOURCES_
<org.springframework.http.HttpHeaders: long getAccessControlMaxAge()> -> _SOURCES_
<org.springframework.util.PropertyPlaceholderHelper: java.lang.String replacePlaceholders(java.lang.String,java.util.Properties)> -> _SANITIZERS__SINKS_
<org.springframework.web.servlet.view.tiles2.TilesConfigurer: void setCompleteAutoload(boolean)> -> _SOURCES__SINKS_
<org.springframework.orm.hibernate4.HibernateTransactionManager: void disconnectOnCompletion(org.hibernate.Session)> -> _CWE306__AUTHENTICATIONS_TO_LOW_
<org.springframework.core.JdkVersion: int getMajorJavaVersion()> -> _SOURCES_
<org.springframework.jdbc.support.nativejdbc.WebLogicNativeJdbcExtractor: boolean isNativeConnectionNecessaryForNativeCallableStatements()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__CWE862_
<org.springframework.cache.jcache.interceptor.DefaultCacheKeyInvocationContext: javax.cache.'annotation'.CacheInvocationParameter getValueParameter()> -> _SOURCES_
<org.springframework.instrument.classloading.tomcat.TomcatLoadTimeWeaver: java.lang.ClassLoader getThrowawayClassLoader()> -> _SOURCES_
<org.springframework.scheduling.quartz.SimpleTriggerFactoryBean: void setGroup(java.lang.String)> -> _SINKS_
<org.springframework.context.i18n.LocaleContextHolder: void setLocale(java.util.Locale,boolean)> -> _SINKS_
<org.springframework.format.datetime.joda.LocalTimeParser: org.joda.time.LocalTime parse(java.lang.String,java.util.Locale)> -> _SINKS_
<org.springframework.web.servlet.tags.form.CheckboxesTag: java.lang.String getInputType()> -> _SOURCES_
<org.springframework.jndi.TypeMismatchNamingException: java.lang.Class getRequiredType()> -> _SOURCES_
<org.springframework.cache.jcache.JCacheCacheManager: void setCacheManager(javax.cache.CacheManager)> -> _SINKS_
<org.springframework.web.context.support.ServletRequestHandledEvent: java.lang.String getClientAddress()> -> _SOURCES_
<org.springframework.util.xml.StaxStreamHandler: void dtdInternal(java.lang.String)> -> _SINKS_
<org.springframework.web.method.annotation.SessionAttributesHandler: void storeAttributes(org.springframework.web.context.request.WebRequest,java.util.Map)> -> _SINKS_
<org.springframework.messaging.simp.SimpMessageHeaderAccessor: java.lang.String getSessionId(java.util.Map)> -> _SOURCES_
<org.springframework.core.annotation.AnnotationAttributes: java.lang.Class getClass(java.lang.String)> -> _SOURCES_
<org.springframework.jdbc.support.incrementer.DerbyMaxValueIncrementer: java.lang.String getDummyName()> -> _CWE089__SOURCES_
<org.springframework.jms.config.AbstractJmsListenerContainerFactory: void setSessionAcknowledgeMode(java.lang.Integer)> -> _SINKS_
<org.springframework.web.socket.sockjs.client.JettyXhrTransport: org.eclipse.jetty.client.HttpClient getHttpClient()> -> _SOURCES_
<org.springframework.scripting.support.StandardScriptEvaluator: javax.script.ScriptEngine getScriptEngine(org.springframework.scripting.ScriptSource)> -> _SOURCES_
<org.springframework.web.client.RestTemplate: org.springframework.http.ResponseEntity postForEntity(java.net.URI,java.lang.Object,java.lang.Class)> -> _SINKS_
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: java.lang.String getMessage(org.springframework.context.MessageSourceResolvable,java.util.Locale)> -> _SOURCES_
<org.springframework.web.socket.config.annotation.AbstractWebSocketHandlerRegistration: org.springframework.web.socket.server.HandshakeHandler getOrCreateHandshakeHandler()> -> _SOURCES_
<org.springframework.aop.aspectj.AbstractAspectJAdvice: void setArgumentNamesFromStringArray(java.lang.String[])> -> _SINKS_
<org.springframework.util.MimeType: java.util.Map getParameters()> -> _SOURCES_
<org.springframework.aop.aspectj.AbstractAspectJAdvice: org.aspectj.weaver.tools.JoinPointMatch getJoinPointMatch()> -> _SOURCES_
<org.springframework.security.access.intercept.RunAsUserToken: int getKeyHash()> -> _SOURCES__CWE862_
<org.springframework.asm.TypePath: int getLength()> -> _SOURCES_
<org.springframework.jms.support.destination.BeanFactoryDestinationResolver: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: void setParameterValues(java.sql.PreparedStatement,java.util.List,int[])> -> _CWE089__SINKS_
<org.springframework.web.servlet.config.InterceptorsBeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.web.socket.adapter.standard.ConvertingEncoderDecoderSupport: java.lang.Object decode(java.lang.Object)> -> _SOURCES_
<org.springframework.orm.hibernate5.HibernateTemplate: void setSessionFactory(org.hibernate.SessionFactory)> -> _SINKS_
<org.springframework.beans.factory.config.ConstructorArgumentValues: org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder getArgumentValue(int,java.lang.Class)> -> _SOURCES_
<org.springframework.util.ClassUtils: java.lang.String getShortName(java.lang.Class)> -> _SOURCES_
<org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor: javax.persistence.EntityManagerFactory getPersistenceUnit(java.lang.String)> -> _SOURCES_
<org.springframework.orm.hibernate4.HibernateTransactionManager: boolean isSameConnectionForEntireSession(org.hibernate.Session)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE862_
<org.springframework.cache.ehcache.EhCacheFactoryBean: void setTimeToLive(int)> -> _SINKS_
<org.springframework.web.servlet.mvc.multiaction.NoSuchRequestHandlingMethodException: java.lang.String getMethodName()> -> _SOURCES_
<org.springframework.cache.interceptor.CacheAspectSupport: org.springframework.cache.interceptor.CacheAspectSupport$CacheOperationMetadata getCacheOperationMetadata(org.springframework.cache.interceptor.CacheOperation,java.lang.reflect.Method,java.lang.Class)> -> _SOURCES_
<org.springframework.scheduling.config.ScheduledTaskRegistrar: void setTaskScheduler(org.springframework.scheduling.TaskScheduler)> -> _SINKS_
<org.springframework.cglib.transform.impl.FieldProviderTransformer: void setField(java.lang.String[])> -> _SINKS_
<org.springframework.jmx.access.MBeanClientInterceptor: void setManagementInterface(java.lang.Class)> -> _SINKS_
<org.springframework.core.convert.support.ObjectToObjectConverter: java.util.Set getConvertibleTypes()> -> _SOURCES_
<org.springframework.security.core.session.SessionRegistryImpl: java.util.List getAllPrincipals()> -> _SOURCES_
<org.springframework.util.comparator.CompoundComparator: org.springframework.util.comparator.InvertibleComparator getInvertibleComparator(int)> -> _SOURCES_
<org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)> -> _SINKS_
<org.springframework.scheduling.timer.TimerTaskExecutor: void setTimer(java.util.Timer)> -> _SINKS_
<org.springframework.context.support.LiveBeansView: java.lang.String getSnapshotAsJson()> -> _SOURCES_
<org.springframework.messaging.core.GenericMessagingTemplate: long getReceiveTimeout()> -> _SOURCES_
<org.springframework.util.ClassUtils: java.lang.ClassLoader getDefaultClassLoader()> -> _SOURCES_
<org.springframework.web.socket.server.standard.ServletServerContainerFactoryBean: void setMaxTextMessageBufferSize(int)> -> _SINKS_
<org.springframework.web.socket.config.WebSocketMessageBrokerStats: void setSubProtocolWebSocketHandler(org.springframework.web.socket.messaging.SubProtocolWebSocketHandler)> -> _SINKS_
<org.springframework.cache.jcache.interceptor.DefaultJCacheOperationSource: org.springframework.cache.interceptor.CacheResolver getDefaultCacheResolver()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletConfig: void addContainerRuntimeOption(java.lang.String,java.lang.String)> -> _SINKS_
<org.springframework.context.annotation.ConfigurationMethod: java.lang.String getFullyQualifiedMethodName()> -> _SOURCES_
<org.springframework.jdbc.datasource.init.ResourceDatabasePopulator: void setContinueOnError(boolean)> -> _CWE089__SINKS_
<org.springframework.http.client.Netty4ClientHttpRequest: org.springframework.http.client.ClientHttpResponse execute()> -> _CWE078__SINKS_
<org.springframework.jms.config.DefaultJcaListenerContainerFactory: void setResourceAdapter(javax.resource.spi.ResourceAdapter)> -> _SINKS_
<org.springframework.scheduling.support.CronTrigger: java.util.Date nextExecutionTime(org.springframework.scheduling.TriggerContext)> -> _SINKS_
<org.springframework.http.converter.json.MappingJacksonInputMessage: void setDeserializationView(java.lang.Class)> -> _SINKS_
<org.springframework.http.HttpHeaders: java.util.List getIfNoneMatch()> -> _SOURCES_
<org.springframework.web.servlet.view.script.ScriptTemplateView: void setScripts(java.lang.String[])> -> _SINKS_
<org.springframework.jms.config.AbstractJmsListenerContainerFactory: void setPubSubDomain(java.lang.Boolean)> -> _SINKS_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: boolean getBoolean(int)> -> _CWE089__SOURCES_
<org.springframework.web.portlet.bind.MissingPortletRequestParameterException: java.lang.String getParameterType()> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.context.ApplicationContext getApplicationContext()> -> _SOURCES_
<org.springframework.orm.hibernate4.HibernateTemplate: void update(java.lang.Object)> -> _SINKS_
<org.springframework.messaging.support.MessageHeaderAccessor: void setHeaderIfAbsent(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.security.core.context.GlobalSecurityContextHolderStrategy: void setContext(org.springframework.security.core.context.SecurityContext)> -> _SINKS_
<org.springframework.beans.factory.access.SingletonBeanFactoryLocator: org.springframework.beans.factory.BeanFactory createDefinition(java.lang.String,java.lang.String)> -> _SOURCES_
<org.springframework.orm.jpa.vendor.AbstractJpaVendorAdapter: java.util.Map getJpaPropertyMap()> -> _SOURCES_
<org.springframework.web.socket.config.annotation.SockJsServiceRegistration: org.springframework.web.socket.config.'annotation'.SockJsServiceRegistration setClientLibraryUrl(java.lang.String)> -> _SINKS_
<org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener: void executeSqlScripts(org.springframework.test.context.jdbc.Sql,org.springframework.test.context.jdbc.Sql$ExecutionPhase,org.springframework.test.context.TestContext,boolean)> -> _CWE078__CWE089__SINKS_
<org.springframework.jdbc.object.SqlQuery: java.util.List execute(int)> -> _CWE078__CWE089__SINKS_
<org.springframework.security.core.token.Sha512DigestUtils: java.security.MessageDigest getDigest(java.lang.String)> -> _SOURCES_
<org.springframework.jdbc.object.SqlQuery: int getRowsExpected()> -> _CWE089__SOURCES_
<org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader: void loadBeanDefinitionsForBeanMethod(org.springframework.context.'annotation'.BeanMethod)> -> _SOURCES_
<org.springframework.orm.hibernate4.HibernateTransactionManager: org.hibernate.SessionFactory getSessionFactory()> -> _SOURCES_
<org.springframework.jmx.export.metadata.ManagedResource: java.lang.String getPersistName()> -> _SOURCES_
<org.springframework.util.StringUtils: java.lang.String getFilenameExtension(java.lang.String)> -> _SOURCES_
<org.springframework.core.io.support.ResourcePatternUtils: org.springframework.core.io.support.ResourcePatternResolver getResourcePatternResolver(org.springframework.core.io.ResourceLoader)> -> _SOURCES_
<org.springframework.validation.DataBinder: java.lang.String[] getRequiredFields()> -> _SOURCES_
<org.springframework.security.core.context.ThreadLocalSecurityContextHolderStrategy: org.springframework.security.core.context.SecurityContext getContext()> -> _SOURCES_
<org.springframework.mail.javamail.MimeMessageHelper: javax.mail.internet.MimeMultipart getRootMimeMultipart()> -> _SOURCES_
<org.springframework.format.number.NumberStyleFormatter: void setPattern(java.lang.String)> -> _SINKS_
<org.springframework.web.client.RestTemplate: java.lang.Object postForObject(java.lang.String,java.lang.Object,java.lang.Class,java.util.Map)> -> _SINKS_
<org.springframework.context.support.AbstractApplicationContext: java.lang.String[] getBeanNamesForType(java.lang.Class)> -> _SOURCES_
<org.springframework.web.context.request.async.WebAsyncManager: void setConcurrentResultAndDispatch(java.lang.Object)> -> _SINKS_
<org.springframework.web.servlet.i18n.LocaleChangeInterceptor: void setParamName(java.lang.String)> -> _SINKS_
<org.springframework.cglib.core.TypeUtils: org.springframework.cglib.core.Signature parseSignature(java.lang.String)> -> _SINKS_
<org.springframework.web.socket.client.standard.EndpointConnectionManager: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.http.HttpHeaders: long getFirstDate(java.lang.String)> -> _SOURCES_
<org.springframework.jmx.support.ConnectorServerFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.http.HttpHeaders: long getIfModifiedSince()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.FormTag: java.lang.String getMethod()> -> _SOURCES_
<org.springframework.jdbc.support.nativejdbc.CommonsDbcpNativeJdbcExtractor: java.sql.PreparedStatement getNativePreparedStatement(java.sql.PreparedStatement)> -> _CWE089__SOURCES_
<org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader: int loadBeanDefinitions(org.springframework.core.io.Resource)> -> _SOURCES_
<org.springframework.context.annotation.ConfigurationMethod: org.springframework.context.'annotation'.ConfigurationClass getConfigurationClass()> -> _SOURCES_
<org.springframework.test.web.client.match.JsonPathRequestMatchers: org.springframework.test.web.client.RequestMatcher isEmpty()> -> _SOURCES_
<org.springframework.jdbc.datasource.AbstractDriverBasedDataSource: void setConnectionProperties(java.util.Properties)> -> _CWE306__CWE089__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter: void send(java.lang.Object,org.springframework.http.MediaType)> -> _SINKS__CWE601_
<org.springframework.security.config.annotation.web.configurers.LogoutConfigurer: org.springframework.security.config.'annotation'.web.configurers.LogoutConfigurer addLogoutHandler(org.springframework.security.web.authentication.logout.LogoutHandler)> -> _CWE306__AUTHENTICATIONS_TO_LOW__SINKS__CWE862_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addInterceptors(org.springframework.web.servlet.config.'annotation'.InterceptorRegistry)> -> _SINKS_
<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor: void setDestroyAnnotationType(java.lang.Class)> -> _SINKS_
<org.springframework.web.client.RestClientResponseException: byte[] getResponseBodyAsByteArray()> -> _SOURCES__CWE601_
<org.springframework.web.context.support.ServletContextPropertyPlaceholderConfigurer: void setServletContext(javax.servlet.ServletContext)> -> _SINKS_
<org.springframework.core.AttributeAccessorSupport: java.lang.Object getAttribute(java.lang.String)> -> _SOURCES_
<org.springframework.mail.SimpleMailMessage: java.lang.String[] getBcc()> -> _SOURCES_
<org.springframework.orm.hibernate5.LocalSessionFactoryBean: org.hibernate.SessionFactory getObject()> -> _SOURCES_
<org.springframework.web.servlet.support.RequestContext: javax.servlet.http.HttpServletRequest getRequest()> -> _SOURCES_
<org.springframework.core.io.support.PropertiesLoaderSupport: void setProperties(java.util.Properties)> -> _SINKS_
<org.springframework.web.context.request.FacesRequestAttributes: java.lang.String getSessionId()> -> _SOURCES_
<org.springframework.validation.BindException: int getFieldErrorCount(java.lang.String)> -> _SOURCES_
<org.springframework.jdbc.core.namedparam.AbstractSqlParameterSource: java.lang.String getTypeName(java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.mock.web.portlet.MockClientDataRequest: void setContent(byte[])> -> _SINKS_
<org.springframework.web.client.RestTemplate: org.springframework.http.ResponseEntity getForEntity(java.lang.String,java.lang.Class,java.util.Map)> -> _SOURCES__SINKS_
<org.springframework.remoting.httpinvoker.AbstractHttpInvokerRequestExecutor: org.springframework.remoting.support.RemoteInvocationResult readRemoteInvocationResult(java.io.InputStream,java.lang.String)> -> _SOURCES__CWE601_
<org.springframework.jdbc.core.namedparam.NamedParameterUtils: java.lang.String parseSqlStatementIntoString(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.jmx.export.metadata.ManagedNotification: void setNotificationType(java.lang.String)> -> _SINKS_
<org.springframework.messaging.simp.SimpMessagingTemplate: void doSend(java.lang.String,org.springframework.messaging.Message)> -> _SINKS_
<org.springframework.web.servlet.view.AbstractView: void setContentType(java.lang.String)> -> _SINKS_
<org.springframework.http.client.Netty4ClientHttpRequest: java.net.URI getURI()> -> _SOURCES_
<org.springframework.test.web.client.match.ContentRequestMatchers: org.springframework.test.web.client.RequestMatcher formData(org.springframework.util.MultiValueMap)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletRequest: java.lang.String getLifecyclePhase()> -> _SOURCES_
<org.springframework.web.portlet.DispatcherPortlet: java.lang.Object getDefaultStrategy(org.springframework.context.ApplicationContext,java.lang.Class)> -> _SOURCES_
<org.springframework.jmx.support.MBeanRegistrationSupport: javax.management.ObjectName[] getRegisteredObjectNames()> -> _SOURCES_
<org.springframework.aop.interceptor.AbstractMonitoringInterceptor: java.lang.String createInvocationTraceName(org.aopalliance.intercept.MethodInvocation)> -> _SOURCES_
<org.springframework.jms.core.JmsMessagingTemplate: void doSend(javax.jms.Destination,org.springframework.messaging.Message)> -> _SINKS_
<org.springframework.web.method.HandlerMethod: org.springframework.core.MethodParameter getReturnType()> -> _SOURCES_
<org.springframework.http.client.HttpComponentsClientHttpRequestFactory: org.apache.http.client.config.RequestConfig$Builder requestConfigBuilder()> -> _SOURCES_
<org.springframework.web.jsf.DelegatingPhaseListenerMulticaster: org.springframework.beans.factory.ListableBeanFactory getBeanFactory(javax.faces.context.FacesContext)> -> _SOURCES_
<org.springframework.test.context.web.ServletTestExecutionListener: int getOrder()> -> _SOURCES_
<org.springframework.jdbc.support.lob.TemporaryLobCreator: void setBlobAsBytes(java.sql.PreparedStatement,int,byte[])> -> _CWE089__SINKS_
<org.springframework.http.client.Netty4ClientHttpResponse: java.io.InputStream getBody()> -> _SOURCES__CWE601_
<org.springframework.web.socket.config.annotation.AbstractWebSocketHandlerRegistration: org.springframework.web.socket.config.'annotation'.WebSocketHandlerRegistration addHandler(org.springframework.web.socket.WebSocketHandler,java.lang.String[])> -> _SINKS_
<org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession: void tryCloseWithSockJsTransportError(java.lang.Throwable,org.springframework.web.socket.CloseStatus)> -> _SINKS_
<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: void setEnvironment(java.util.Properties)> -> _SINKS_
<org.springframework.cache.jcache.interceptor.CacheResultOperation: org.springframework.cache.interceptor.CacheResolver getExceptionCacheResolver()> -> _SOURCES_
<org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource: void setDefaultTargetDataSource(java.lang.Object)> -> _CWE089__SINKS_
<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.jms.listener.endpoint.JmsActivationSpecConfig: int getAcknowledgeMode()> -> _SOURCES_
<org.springframework.orm.jdo.support.SpringPersistenceManagerProxyBean: org.springframework.orm.jdo.JdoDialect getJdoDialect()> -> _SOURCES_
<org.springframework.jms.remoting.JmsInvokerClientInterceptor: javax.jms.Connection createConnection()> -> _CWE306__SOURCES__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.orm.jdo.LocalPersistenceManagerFactoryBean: java.util.Map getJdoPropertyMap()> -> _SOURCES_
<org.springframework.orm.hibernate5.LocalSessionFactoryBean: org.springframework.core.io.ResourceLoader getResourceLoader()> -> _SOURCES_
<org.springframework.web.socket.messaging.SubProtocolWebSocketHandler: int getSendBufferSizeLimit()> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateTemplate: java.lang.Object load(java.lang.String,java.io.Serializable)> -> _SOURCES_
<org.springframework.util.InvalidMimeTypeException: java.lang.String getMimeType()> -> _SOURCES_
<org.springframework.web.servlet.mvc.condition.ConsumesRequestCondition: org.springframework.web.servlet.mvc.condition.ConsumesRequestCondition getMatchingCondition(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompClientSupport: org.springframework.messaging.simp.stomp.StompHeaders processConnectHeaders(org.springframework.messaging.simp.stomp.StompHeaders)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.messaging.simp.config.SimpleBrokerRegistration: org.springframework.messaging.simp.config.SimpleBrokerRegistration setTaskScheduler(org.springframework.scheduling.TaskScheduler)> -> _SINKS_
<org.springframework.jmx.support.MBeanRegistrationSupport: javax.management.MBeanServer getServer()> -> _SOURCES_
<org.springframework.security.authentication.jaas.JaasAuthenticationProvider: java.lang.String getLoginContextName()> -> _CWE306__SOURCES_
<org.springframework.web.multipart.commons.CommonsMultipartFile: java.lang.String getStorageDescription()> -> _SOURCES_
<org.springframework.web.multipart.commons.CommonsMultipartFile: java.lang.String getOriginalFilename()> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanFactory: java.util.List getBeanPostProcessors()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.OptionsTag: org.springframework.web.servlet.tags.form.SelectTag getSelectTag()> -> _SOURCES_
<org.springframework.web.servlet.view.ContentNegotiatingViewResolver: java.util.List getViewResolvers()> -> _SOURCES_
<org.springframework.http.HttpHeaders: org.springframework.http.HttpMethod getAccessControlRequestMethod()> -> _SOURCES_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.util.concurrent.ListenableFuture optionsForAllow(java.lang.String,java.util.Map)> -> _SINKS_
<org.springframework.cache.jcache.interceptor.AbstractJCacheKeyOperation: org.springframework.cache.interceptor.KeyGenerator getKeyGenerator()> -> _SOURCES_
<org.springframework.ui.freemarker.FreeMarkerConfigurationFactory: org.springframework.core.io.ResourceLoader getResourceLoader()> -> _SOURCES_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: void setSchemaName(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.beans.factory.parsing.Problem: java.lang.Throwable getRootCause()> -> _SOURCES_
<org.springframework.validation.DataBinder: void setDisallowedFields(java.lang.String[])> -> _SINKS_
<org.springframework.security.config.annotation.authentication.configurers.ldap.LdapAuthenticationProviderConfigurer: org.springframework.security.ldap.authentication.LdapAuthenticator createLdapAuthenticator(org.springframework.ldap.core.support.BaseLdapPathContextSource)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.jdbc.datasource.ConnectionHolder: org.springframework.jdbc.datasource.ConnectionHandle getConnectionHandle()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__SOURCES__CWE862_
<org.springframework.messaging.handler.invocation.InvocableHandlerMethod: void setMessageMethodArgumentResolvers(org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite)> -> _SINKS_
<org.springframework.http.converter.json.MappingJacksonValue: void setFilters(com.fasterxml.jackson.databind.ser.FilterProvider)> -> _SINKS_
<org.springframework.jms.listener.DefaultMessageListenerContainer: int getConcurrentConsumers()> -> _SOURCES_
<org.springframework.web.context.support.ServletContextResource: java.net.URL getURL()> -> _SOURCES_
<org.springframework.web.context.support.AnnotationConfigWebApplicationContext: org.springframework.context.'annotation'.AnnotatedBeanDefinitionReader getAnnotatedBeanDefinitionReader(org.springframework.beans.factory.support.DefaultListableBeanFactory)> -> _SOURCES_
<org.springframework.scheduling.backportconcurrent.ThreadPoolTaskExecutor: void setAllowCoreThreadTimeOut(boolean)> -> _SINKS_
<org.springframework.scheduling.timer.DelegatingTimerTask: java.lang.Runnable getDelegate()> -> _SOURCES_
<org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder: org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder addMappedInterceptors(java.lang.String[],org.springframework.web.servlet.HandlerInterceptor[])> -> _SINKS_
<org.springframework.jdbc.support.xml.Jdbc4SqlXmlHandler: java.io.InputStream getXmlAsBinaryStream(java.sql.ResultSet,java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.web.servlet.tags.form.ErrorsTag: java.lang.String getDelimiter()> -> _SOURCES_
<org.springframework.remoting.jaxws.SimpleHttpServerJaxWsServiceExporter: void setFilters(java.util.List)> -> _SINKS_
<org.springframework.web.portlet.FrameworkPortlet: java.lang.String getUsernameForRequest(javax.portlet.PortletRequest)> -> _SOURCES_
<org.springframework.jdbc.support.lob.PassThroughBlob: int setBytes(long,byte[])> -> _CWE089__SINKS_
<org.springframework.web.servlet.view.velocity.VelocityView: void setCacheTemplate(boolean)> -> _SINKS_
<org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler: void setRemoveOnCancelPolicy(boolean)> -> _SINKS_
<org.springframework.remoting.support.RemoteAccessor: void setServiceInterface(java.lang.Class)> -> _SINKS_
<org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer: void setUserTreePath(java.lang.String)> -> _SINKS_
<org.springframework.http.converter.json.GsonFactoryBean: void setBase64EncodeByteArrays(boolean)> -> _SINKS_
<org.springframework.web.servlet.resource.PathResourceResolver: java.lang.String resolveUrlPathInternal(java.lang.String,java.util.List,org.springframework.web.servlet.resource.ResourceResolverChain)> -> _CWE079__SINKS_
<org.springframework.web.servlet.view.AbstractView: void setExposePathVariables(boolean)> -> _SINKS_
<org.springframework.scheduling.commonj.ScheduledTimerListener: long getPeriod()> -> _SOURCES_
<org.springframework.web.cors.UrlBasedCorsConfigurationSource: org.springframework.web.cors.CorsConfiguration getCorsConfiguration(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.jca.support.LocalConnectionFactoryBean: void setConnectionManager(javax.resource.spi.ConnectionManager)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping: void setDetectHandlersInAncestorContexts(boolean)> -> _SINKS_
<org.springframework.web.portlet.handler.SimpleMappingExceptionResolver: int getDepth(java.lang.String,java.lang.Exception)> -> _SOURCES_
<org.springframework.cglib.core.internal.LoadingCache: java.lang.Object get(java.lang.Object)> -> _SOURCES_
<org.springframework.test.web.client.DefaultRequestExpectation: java.util.List getRequestMatchers()> -> _SOURCES_
<org.springframework.security.access.intercept.RunAsUserToken: java.lang.Object getPrincipal()> -> _SOURCES__CWE862_
<org.springframework.jndi.JndiObjectTargetSource: java.lang.Object getTarget()> -> _SOURCES_
<org.springframework.aop.interceptor.CustomizableTraceInterceptor: java.lang.String escape(java.lang.String)> -> _SANITIZERS_
<org.springframework.jca.endpoint.GenericMessageEndpointManager: void setResourceAdapter(javax.resource.spi.ResourceAdapter)> -> _SINKS_
<org.springframework.context.support.AbstractRefreshableConfigApplicationContext: void setBeanName(java.lang.String)> -> _SINKS_
<org.springframework.web.portlet.handler.WebRequestHandlerInterceptorAdapter: void postHandleRender(javax.portlet.RenderRequest,javax.portlet.RenderResponse,java.lang.Object,org.springframework.web.portlet.ModelAndView)> -> _SINKS_
<org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration: org.springframework.security.config.'annotation'.authentication.configurers.GlobalAuthenticationConfigurerAdapter enableGlobalAuthenticationAutowiredConfigurer(org.springframework.context.ApplicationContext)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.mock.web.MockServletContext: java.lang.String getDefaultServletName()> -> _SOURCES_
<org.springframework.test.context.MergedContextConfiguration: org.springframework.test.context.ContextLoader getContextLoader()> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateAccessor: int getFlushMode()> -> _SOURCES_
<org.springframework.orm.jpa.DefaultJpaDialect: org.springframework.orm.jpa.EntityManagerFactoryPlusOperations getEntityManagerFactoryPlusOperations(javax.persistence.EntityManagerFactory)> -> _SOURCES_
<org.springframework.security.util.SimpleMethodInvocation: java.lang.Object[] getArguments()> -> _SOURCES_
<org.springframework.jdbc.object.RdbmsOperation: org.springframework.jdbc.core.JdbcTemplate getJdbcTemplate()> -> _CWE089__SOURCES_
<org.springframework.web.context.support.ServletRequestHandledEvent: java.lang.String getRequestUrl()> -> _SOURCES_
<org.springframework.context.support.AbstractApplicationContext: org.springframework.beans.factory.BeanFactory getParentBeanFactory()> -> _SOURCES_
<org.springframework.orm.hibernate4.support.OpenSessionInViewInterceptor: org.hibernate.SessionFactory getSessionFactory()> -> _SOURCES_
<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder contextPath(java.lang.String)> -> _SOURCES_
<org.springframework.web.bind.ServletRequestUtils: java.lang.Double getDoubleParameter(javax.servlet.ServletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.remoting.httpinvoker.HttpComponentsHttpInvokerRequestExecutor: org.apache.http.client.HttpClient getHttpClient()> -> _SOURCES_
<org.springframework.scheduling.quartz.JobDetailFactoryBean: void setGroup(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.MockServletConfig: java.util.Enumeration getInitParameterNames()> -> _SOURCES_
<org.springframework.web.socket.handler.WebSocketSessionDecorator: org.springframework.web.socket.WebSocketSession getLastSession()> -> _SOURCES_
<org.springframework.beans.BeanInstantiationException: java.lang.Class getBeanClass()> -> _SOURCES_
<org.springframework.web.portlet.handler.AbstractMapBasedHandlerMapping: java.lang.Object getHandlerInternal(javax.portlet.PortletRequest)> -> _SOURCES_
<org.springframework.remoting.caucho.HessianClientInterceptor: void setReadTimeout(long)> -> _SINKS_
<org.springframework.aop.config.MethodLocatingFactoryBean: void setTargetBeanName(java.lang.String)> -> _SINKS_
<org.springframework.web.multipart.support.RequestPartServletServerHttpRequest: org.springframework.http.HttpHeaders getHeaders()> -> _SOURCES_
<org.springframework.core.convert.support.IdToEntityConverter: java.util.Set getConvertibleTypes()> -> _SOURCES_
<org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder: org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder setSeparator(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.expression.spel.standard.SpelExpression: java.lang.Class getValueType(org.springframework.expression.EvaluationContext)> -> _SOURCES_
<org.springframework.web.servlet.handler.MappedInterceptor: org.springframework.util.PathMatcher getPathMatcher()> -> _SOURCES_
<org.springframework.web.socket.handler.SessionLimitExceededException: org.springframework.web.socket.CloseStatus getStatus()> -> _SOURCES_
<org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver: java.lang.instrument.Instrumentation getInstrumentation()> -> _SOURCES_
<org.springframework.web.servlet.view.ResourceBundleViewResolver: void setBundleClassLoader(java.lang.ClassLoader)> -> _SOURCES__SINKS_
<org.springframework.web.servlet.tags.form.ButtonTag: java.lang.String getValue()> -> _SOURCES_
<org.springframework.web.client.RestTemplate: java.lang.Object patchForObject(java.net.URI,java.lang.Object,java.lang.Class)> -> _SINKS_
<org.springframework.ui.freemarker.FreeMarkerConfigurationFactory: void setDefaultEncoding(java.lang.String)> -> _SINKS_
<org.springframework.aop.framework.ProxyFactory: java.lang.Object getProxy(java.lang.Class,org.aopalliance.intercept.Interceptor)> -> _SOURCES_
<org.springframework.aop.aspectj.AbstractAspectJAdvice: java.lang.String getAspectName()> -> _SOURCES_
<org.springframework.security.config.annotation.web.builders.HttpSecurity: org.springframework.security.config.'annotation'.SecurityConfigurerAdapter getOrApply(org.springframework.security.config.'annotation'.SecurityConfigurerAdapter)> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.WebSocketTransport: org.springframework.web.socket.client.WebSocketClient getWebSocketClient()> -> _SOURCES_
<org.springframework.test.context.MergedContextConfiguration: java.util.Set getContextInitializerClasses()> -> _SOURCES_
<org.springframework.web.context.support.ServletContextResource: java.lang.String getPath()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.OptionsTag: void setItems(java.lang.Object)> -> _SINKS_
<org.springframework.messaging.simp.config.ChannelRegistration: org.springframework.messaging.simp.config.TaskExecutorRegistration getTaskExecRegistration()> -> _SOURCES_
<org.springframework.core.convert.support.StreamConverter: java.util.Set getConvertibleTypes()> -> _SOURCES_
<org.springframework.web.servlet.i18n.CookieLocaleResolver: org.springframework.context.i18n.LocaleContext resolveLocaleContext(javax.servlet.http.HttpServletRequest)> -> _SINKS_
<org.springframework.jndi.JndiObjectFactoryBean: void setExposeAccessContext(boolean)> -> _SINKS_
<org.springframework.web.servlet.view.ViewResolverComposite: int getOrder()> -> _SOURCES_
<org.springframework.http.client.HttpComponentsAsyncClientHttpRequestFactory: org.apache.http.impl.nio.client.CloseableHttpAsyncClient getHttpAsyncClient()> -> _SOURCES_
<org.springframework.jdbc.datasource.lookup.JndiDataSourceLookup: javax.sql.DataSource getDataSource(java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.remoting.jaxrpc.support.AxisBeanMappingServicePostProcessor: void setEncodingStyleUri(java.lang.String)> -> _SINKS_
<org.springframework.transaction.interceptor.RollbackRuleAttribute: java.lang.String getExceptionName()> -> _SOURCES_
<org.springframework.jdbc.support.DatabaseStartupValidator: void setTimeout(int)> -> _CWE089__SINKS_
<org.springframework.context.support.GenericXmlApplicationContext: void setValidating(boolean)> -> _SINKS_
<org.springframework.jms.connection.ConnectionFactoryUtils: javax.jms.Session getTargetSession(javax.jms.Session)> -> _SOURCES_
<org.springframework.web.portlet.bind.PortletRequestUtils: java.lang.Integer getIntParameter(javax.portlet.PortletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.expression.spel.standard.Tokenizer: java.util.List getTokens()> -> _SOURCES_
<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder setScope(java.lang.String)> -> _SINKS_
<org.springframework.aop.config.AdvisorComponentDefinition: org.springframework.beans.factory.config.BeanDefinition[] getBeanDefinitions()> -> _SOURCES_
<org.springframework.core.type.classreading.AnnotationReadingVisitorUtils: org.springframework.core.'annotation'.AnnotationAttributes getMergedAnnotationAttributes(org.springframework.util.LinkedMultiValueMap,java.util.Map,java.lang.String)> -> _SOURCES_
<org.springframework.orm.hibernate4.LocalSessionFactoryBean: org.hibernate.cfg.Configuration getConfiguration()> -> _SOURCES_
<org.springframework.scheduling.support.CronTrigger: java.lang.String getExpression()> -> _SOURCES_
<org.springframework.web.jsf.DelegatingPhaseListenerMulticaster: javax.faces.event.PhaseId getPhaseId()> -> _SOURCES_
<org.springframework.jms.support.destination.JmsDestinationAccessor: void setDestinationResolver(org.springframework.jms.support.destination.DestinationResolver)> -> _SINKS_
<org.springframework.scheduling.timer.ScheduledTimerTask: void setRunnable(java.lang.Runnable)> -> _SINKS_
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.expression.spel.SpelEvaluationException: java.lang.Object[] getInserts()> -> _SOURCES_
<org.springframework.oxm.support.AbstractMarshaller: org.w3c.dom.Document buildDocument()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockRenderResponse: void setTitle(java.lang.String)> -> _SINKS__CWE601_
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Object getCachedObjectForFactoryBean(java.lang.String)> -> _SOURCES_
<org.springframework.jmx.export.MBeanExporter: void setAllowEagerInit(boolean)> -> _SINKS_
<org.springframework.core.convert.support.ByteBufferConverter: java.util.Set getConvertibleTypes()> -> _SOURCES_
<org.springframework.http.converter.json.MappingJacksonValue: java.lang.Object getValue()> -> _SOURCES_
<org.springframework.jdbc.support.lob.DefaultLobHandler: java.io.Reader getClobAsCharacterStream(java.sql.ResultSet,int)> -> _CWE089__SOURCES_
<org.springframework.util.concurrent.SettableListenableFuture: boolean setException(java.lang.Throwable)> -> _SINKS_
<org.springframework.web.servlet.view.velocity.VelocityView: void setToolAttributes(java.util.Map)> -> _SINKS_
<org.springframework.jdbc.object.GenericSqlQuery: void setRowMapperClass(java.lang.Class)> -> _CWE089__SINKS_
<org.springframework.web.servlet.view.document.AbstractPdfStamperView: boolean generatesDownloadContent()> -> _SOURCES_
<org.springframework.beans.factory.support.BeanDefinitionDefaults: java.lang.String getInitMethodName()> -> _SOURCES_
<org.springframework.jms.listener.AbstractJmsListeningContainer: void setClientId(java.lang.String)> -> _SINKS_
<org.springframework.orm.jpa.persistenceunit.MutablePersistenceUnitInfo: void setExcludeUnlistedClasses(boolean)> -> _SINKS_
<org.springframework.mock.web.MockJspWriter: void print(char)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletRequest: int getServerPort()> -> _SOURCES_
<org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean: void setHandlerInstantiator(com.fasterxml.jackson.databind.cfg.HandlerInstantiator)> -> _SINKS_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: short getShort(java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.jdbc.core.metadata.CallMetaDataContext: java.lang.String getCatalogName()> -> _CWE089__SOURCES_
<org.springframework.scheduling.quartz.JobDetailFactoryBean: void setApplicationContextJobDataKey(java.lang.String)> -> _SINKS_
<org.springframework.test.context.web.WebDelegatingSmartContextLoader: org.springframework.test.context.SmartContextLoader getXmlLoader()> -> _SOURCES_
<org.springframework.beans.factory.xml.XmlReaderContext: org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()> -> _SOURCES_
<org.springframework.web.jsf.DelegatingNavigationHandlerProxy: org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.faces.context.FacesContext)> -> _SOURCES_
<org.springframework.jca.cci.core.CciTemplate: java.lang.Object execute(javax.resource.cci.InteractionSpec,javax.resource.cci.Record,org.springframework.jca.cci.core.RecordExtractor)> -> _SINKS_
<org.springframework.jdbc.support.incrementer.AbstractIdentityColumnMaxValueIncrementer: long getNextKey()> -> _CWE089__SOURCES_
<org.springframework.mock.web.portlet.MockPortletResponse: java.lang.String encodeURL(java.lang.String)> -> _SANITIZERS__CWE601_
<org.springframework.transaction.support.ResourceHolderSupport: void setSynchronizedWithTransaction(boolean)> -> _SINKS_
<org.springframework.core.io.support.EncodedResource: java.lang.String getEncoding()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockResourceURL: java.lang.String getCacheability()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer: org.springframework.security.config.'annotation'.web.configurers.AbstractAuthenticationFilterConfigurer failureHandler(org.springframework.security.web.authentication.AuthenticationFailureHandler)> -> _SINKS_
<org.springframework.remoting.jaxws.SimpleHttpServerJaxWsServiceExporter: void setAuthenticator(com.sun.net.httpserver.Authenticator)> -> _CWE306__SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.ejb.support.AbstractEnterpriseBean: void loadBeanFactory()> -> _SOURCES_
<org.springframework.expression.spel.ast.OpLE: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.security.provisioning.JdbcUserDetailsManager: void setUserCache(org.springframework.security.core.userdetails.UserCache)> -> _CWE089__SINKS__CWE862_
<org.springframework.web.socket.sockjs.support.AbstractSockJsService: void setName(java.lang.String)> -> _SINKS_
<org.springframework.jms.listener.DefaultMessageListenerContainer: int getActiveConsumerCount()> -> _SOURCES_
<org.springframework.scheduling.concurrent.ScheduledExecutorFactoryBean: void setWaitForTasksToCompleteOnShutdown(boolean)> -> _SINKS_
<org.springframework.orm.hibernate3.LocalSessionFactoryBean: void setMappingDirectoryLocations(org.springframework.core.io.Resource[])> -> _SINKS_
<org.springframework.web.portlet.handler.PortletContentGenerator: void setRequireSession(boolean)> -> _SINKS_
<org.springframework.jdbc.support.lob.OracleLobHandler: java.io.InputStream getClobAsAsciiStream(java.sql.ResultSet,int)> -> _CWE089__SOURCES_
<org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver: java.lang.String getHandlerMethodName(javax.servlet.http.HttpServletRequest)> -> _CWE079__SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: java.lang.String getCharacterEncoding()> -> _SOURCES_
<org.springframework.jndi.JndiTemplateEditor: void setAsText(java.lang.String)> -> _SINKS_
<org.springframework.messaging.support.MessageBuilder: org.springframework.messaging.support.MessageBuilder setReplyChannelName(java.lang.String)> -> _SINKS_
<org.springframework.jms.listener.SimpleMessageListenerContainer: boolean sharedConnectionEnabled()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE862_
<org.springframework.http.client.HttpComponentsClientHttpRequest: org.apache.http.protocol.HttpContext getHttpContext()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: java.lang.String getTabindex()> -> _CWE079__SOURCES_
<org.springframework.web.cors.CorsConfiguration: void setAllowedOrigins(java.util.List)> -> _SINKS_
<org.springframework.web.socket.messaging.StompSubProtocolHandler: java.lang.String getSessionRegistryUserName(java.security.Principal)> -> _SOURCES_
<org.springframework.web.servlet.tags.MessageTag: void setJavaScriptEscape(boolean)> -> _SINKS_
<org.springframework.jms.core.JmsMessagingTemplate: java.lang.Object convertSendAndReceive(java.lang.Object,java.lang.Class)> -> _SINKS_
<org.springframework.web.bind.support.DefaultSessionAttributeStore: void setAttributeNamePrefix(java.lang.String)> -> _SINKS_
<org.springframework.http.client.AbstractClientHttpRequest: org.springframework.http.HttpHeaders getHeaders()> -> _SOURCES_
<org.springframework.jms.config.DefaultJmsListenerContainerFactory: void setConcurrency(java.lang.String)> -> _SINKS_
<org.springframework.web.context.request.FacesWebRequest: java.util.Locale getLocale()> -> _SOURCES_
<org.springframework.jdbc.core.JdbcTemplate: java.lang.Object execute(org.springframework.jdbc.core.CallableStatementCreator,org.springframework.jdbc.core.CallableStatementCallback)> -> _CWE089__SINKS_
<org.springframework.messaging.simp.user.DefaultUserDestinationResolver: org.springframework.messaging.simp.user.DefaultUserDestinationResolver$ParseResult parseSubscriptionMessage(org.springframework.messaging.Message,java.lang.String)> -> _SOURCES__CWE862_
<org.springframework.core.convert.ConverterNotFoundException: org.springframework.core.convert.TypeDescriptor getSourceType()> -> _SOURCES_
<org.springframework.scheduling.commonj.TimerManagerFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler: void setPermissionEvaluator(org.springframework.security.access.PermissionEvaluator)> -> _SINKS_
<org.springframework.web.socket.sockjs.transport.handler.SockJsWebSocketHandler: void afterConnectionEstablished(org.springframework.web.socket.WebSocketSession)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer: org.springframework.security.config.'annotation'.web.configurers.AbstractAuthenticationFilterConfigurer authenticationDetailsSource(org.springframework.security.authentication.AuthenticationDetailsSource)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.orm.hibernate3.HibernateTemplate: void setCacheQueries(boolean)> -> _SINKS_
<org.springframework.util.UpdateMessageDigestInputStream: void updateMessageDigest(java.security.MessageDigest,int)> -> _SINKS_
<org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser: org.springframework.beans.factory.support.ManagedList getDeferredResultInterceptors(org.w3c.dom.Element,java.lang.Object,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.security.access.intercept.InterceptorStatusToken: java.util.Collection getAttributes()> -> _SOURCES_
<org.springframework.web.context.request.ServletWebRequest: java.lang.String getDescription(boolean)> -> _CWE079__SOURCES_
<org.springframework.web.bind.EscapedErrors: org.springframework.validation.FieldError getFieldError(java.lang.String)> -> _SOURCES_
<org.springframework.beans.PropertyBatchUpdateException: java.lang.String getMessage()> -> _SOURCES_
<org.springframework.format.datetime.joda.JodaTimeContext: void setTimeZone(org.joda.time.DateTimeZone)> -> _SINKS_
<org.springframework.web.socket.config.annotation.SockJsServiceRegistration: org.springframework.web.socket.config.'annotation'.SockJsServiceRegistration setDisconnectDelay(long)> -> _CWE306__SINKS_
<org.springframework.web.multipart.support.StandardMultipartHttpServletRequest: org.springframework.http.HttpHeaders getMultipartHeaders(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.jdbc.object.SqlOperation: org.springframework.jdbc.core.namedparam.ParsedSql getParsedSql()> -> _CWE089__SOURCES_
<org.springframework.transaction.support.AbstractTransactionStatus: void setSavepoint(java.lang.Object)> -> _SINKS_
<org.springframework.context.support.ResourceMapFactoryBean: void setResourceLoader(org.springframework.core.io.ResourceLoader)> -> _SOURCES__SINKS_
<org.springframework.cglib.beans.BulkBean: java.lang.String[] getGetters()> -> _SOURCES_
<org.springframework.validation.beanvalidation.LocalValidatorFactoryBean: java.util.Map getValidationPropertyMap()> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.JettyXhrTransport: void executeReceiveRequest(java.net.URI,org.springframework.http.HttpHeaders,org.springframework.web.socket.sockjs.client.JettyXhrTransport$SockJsResponseListener)> -> _SINKS_
<org.springframework.context.annotation.ScopeMetadata: org.springframework.context.'annotation'.ScopedProxyMode getScopedProxyMode()> -> _SOURCES_
<org.springframework.messaging.handler.HandlerMethod: org.springframework.messaging.handler.HandlerMethod getResolvedFromHandlerMethod()> -> _SOURCES_
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.String[] getAliases(java.lang.String)> -> _SOURCES_
<org.springframework.web.socket.messaging.SubProtocolWebSocketHandler: void clearSession(org.springframework.web.socket.WebSocketSession,org.springframework.web.socket.CloseStatus)> -> _SINKS_
<org.springframework.jca.support.LocalConnectionFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.expression.spel.support.StandardEvaluationContext: org.springframework.expression.BeanResolver getBeanResolver()> -> _SOURCES_
<org.springframework.web.context.support.RequestHandledEvent: java.lang.String getDescription()> -> _SOURCES_
<org.springframework.jms.core.JmsTemplate: void convertAndSend(java.lang.String,java.lang.Object,org.springframework.jms.core.MessagePostProcessor)> -> _SINKS_
<org.springframework.cache.jcache.interceptor.DefaultJCacheOperationSource: org.springframework.cache.interceptor.CacheResolver getDefaultExceptionCacheResolver()> -> _SOURCES_
<org.springframework.context.support.AbstractApplicationContext: void setId(java.lang.String)> -> _SINKS_
<org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler: void setPathMatcher(org.springframework.util.PathMatcher)> -> _SINKS_
<org.springframework.security.authentication.rcp.RemoteAuthenticationManagerImpl: java.util.Collection attemptAuthentication(java.lang.String,java.lang.String)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.method.support.InvocableHandlerMethod: void setHandlerMethodArgumentResolvers(org.springframework.web.method.support.HandlerMethodArgumentResolverComposite)> -> _SINKS_
<org.springframework.mock.web.MockPageContext: javax.servlet.jsp.JspWriter getOut()> -> _SOURCES_
<org.springframework.security.config.annotation.authentication.configurers.provisioning.JdbcUserDetailsManagerConfigurer: org.springframework.jdbc.datasource.init.DatabasePopulator getDatabasePopulator()> -> _CWE089__SOURCES__CWE862_
<org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration: void setJsr250MethodSecurityMetadataSource(org.springframework.security.access.'annotation'.Jsr250MethodSecurityMetadataSource)> -> _SINKS_
<org.springframework.aop.aspectj.AspectJExpressionPointcut: void setPointcutDeclarationScope(java.lang.Class)> -> _SINKS_
<org.springframework.cache.interceptor.CacheAspectSupport: java.lang.Object execute(org.springframework.cache.interceptor.CacheOperationInvoker,java.lang.reflect.Method,org.springframework.cache.interceptor.CacheAspectSupport$CacheOperationContexts)> -> _SINKS_
<org.springframework.util.CustomizableThreadCreator: void setThreadNamePrefix(java.lang.String)> -> _SINKS_
<org.springframework.cache.transaction.TransactionAwareCacheDecorator: org.springframework.cache.Cache$ValueWrapper get(java.lang.Object)> -> _SOURCES_
<org.springframework.aop.framework.AbstractSingletonProxyFactoryBean: void setPreInterceptors(java.lang.Object[])> -> _SINKS_
<org.springframework.cache.jcache.interceptor.AbstractJCacheOperation: java.lang.'annotation'.Annotation getCacheAnnotation()> -> _SOURCES_
<org.springframework.jms.connection.CachedMessageProducer: void publish(javax.jms.Message)> -> _SINKS_
<org.springframework.web.portlet.handler.AbstractHandlerMapping: org.springframework.web.portlet.HandlerInterceptor[] getAdaptedInterceptors()> -> _SOURCES_
<org.springframework.web.portlet.util.PortletUtils: java.lang.Object getRequiredSessionAttribute(javax.portlet.PortletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.http.client.HttpComponentsClientHttpRequest: java.net.URI getURI()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.PathVariableMapMethodArgumentResolver: java.lang.Object resolveArgument(org.springframework.core.MethodParameter,org.springframework.web.method.support.ModelAndViewContainer,org.springframework.web.context.request.NativeWebRequest,org.springframework.web.bind.support.WebDataBinderFactory)> -> _SINKS_
<org.springframework.orm.hibernate5.support.OpenSessionInViewInterceptor: void afterConcurrentHandlingStarted(org.springframework.web.context.request.WebRequest)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompSessionHandlerAdapter: java.lang.reflect.Type getPayloadType(org.springframework.messaging.simp.stomp.StompHeaders)> -> _SOURCES_
<org.springframework.jca.cci.core.support.CommAreaRecord: void write(java.io.OutputStream)> -> _SINKS_
<org.springframework.context.support.ReloadableResourceBundleMessageSource: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder getMergedProperties(java.util.Locale)> -> _SOURCES_
<org.springframework.web.servlet.support.RequestContext: java.util.Map getModel()> -> _SOURCES_
<org.springframework.web.client.RestClientResponseException: org.springframework.http.HttpHeaders getResponseHeaders()> -> _SOURCES__CWE601_
<org.springframework.expression.spel.ast.OpLT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.security.authentication.AbstractAuthenticationToken: boolean isAuthenticated()> -> _AUTHENTICATIONS_NEUTRAL__CWE306_
<org.springframework.web.socket.sockjs.client.SockJsClient: void setConnectTimeoutScheduler(org.springframework.scheduling.TaskScheduler)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForType(java.lang.Class)> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestAttributeMethodArgumentResolver: java.lang.Object resolveName(java.lang.String,org.springframework.core.MethodParameter,org.springframework.web.context.request.NativeWebRequest)> -> _SINKS_
<org.springframework.ui.velocity.VelocityEngineFactory: void setOverrideLogging(boolean)> -> _SINKS_
<org.springframework.web.multipart.commons.CommonsFileUploadSupport: org.apache.commons.fileupload.disk.DiskFileItemFactory getFileItemFactory()> -> _SOURCES_
<org.springframework.aop.support.StaticMethodMatcherPointcut: org.springframework.aop.MethodMatcher getMethodMatcher()> -> _SOURCES_
<org.springframework.web.servlet.mvc.condition.ConsumesRequestCondition: java.util.Set getConsumableMediaTypes()> -> _SOURCES_
<org.springframework.jms.connection.CachedMessageProducer: javax.jms.Destination getDestination()> -> _SOURCES_
<org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader: groovy.lang.MetaClass getMetaClass()> -> _SOURCES_
<org.springframework.asm.TypeReference: int getTryCatchBlockIndex()> -> _SOURCES_
<org.springframework.security.config.authentication.AuthenticationManagerFactoryBean: org.springframework.security.authentication.AuthenticationManager getObject()> -> _SOURCES_
<org.springframework.format.datetime.standard.DateTimeFormatterFactory: void setIso(org.springframework.format.'annotation'.DateTimeFormat$ISO)> -> _SINKS_
<org.springframework.dao.IncorrectResultSizeDataAccessException: int getActualSize()> -> _SOURCES_
<org.springframework.scheduling.backportconcurrent.ThreadPoolTaskExecutor: void setThreadFactory(edu.emory.mathcs.backport.java.util.concurrent.ThreadFactory)> -> _SINKS_
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setPrefix(java.lang.String)> -> _SINKS_
<org.springframework.messaging.support.IdTimestampMessageHeaderInitializer: void setIdGenerator(org.springframework.util.IdGenerator)> -> _SINKS_
<org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper: void setAddPrefixIfAlreadyExisting(boolean)> -> _SINKS_
<org.springframework.aop.framework.autoproxy.target.AbstractBeanFactoryBasedTargetSourceCreator: org.springframework.beans.factory.BeanFactory getBeanFactory()> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.JettyXhrTransport: org.springframework.http.ResponseEntity executeSendRequestInternal(java.net.URI,org.springframework.http.HttpHeaders,org.springframework.web.socket.TextMessage)> -> _CWE078__SINKS_
<org.springframework.context.support.GenericXmlApplicationContext: void load(org.springframework.core.io.Resource[])> -> _SOURCES_
<org.springframework.web.servlet.view.jasperreports.JasperReportsMultiFormatView: void setFormatKey(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.tags.form.TextareaTag: java.lang.String getRows()> -> _SOURCES_
<org.springframework.web.socket.client.standard.StandardWebSocketClient: org.springframework.core.task.AsyncListenableTaskExecutor getTaskExecutor()> -> _SOURCES_
<org.springframework.orm.hibernate4.ConfigurableJtaPlatform: java.lang.String getJtaPlatformBasePackage()> -> _SOURCES_
<org.springframework.beans.factory.config.PropertyPathFactoryBean: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.remoting.support.RemoteInvocation: java.lang.Class[] getParameterTypes()> -> _SOURCES_
<org.springframework.jdbc.core.SqlParameter: int getSqlType()> -> _CWE089__SOURCES_
<org.springframework.web.context.support.ServletContextAttributeExporter: void setAttributes(java.util.Map)> -> _SINKS_
<org.springframework.web.servlet.i18n.AbstractLocaleContextResolver: void setLocale(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Locale)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletRequest: void setAuthType(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer: org.springframework.security.config.'annotation'.web.configurers.FormLoginConfigurer loginPage(java.lang.String)> -> _AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.DispatcherServlet: void noHandlerFound(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)> -> _SINKS_
<org.springframework.scheduling.timer.ScheduledTimerTask: void setDelay(long)> -> _SINKS_
<org.springframework.scheduling.timer.TimerFactoryBean: void setDaemon(boolean)> -> _SINKS_
<org.springframework.remoting.rmi._RmiInvocationWrapper_Tie: void setTarget(java.rmi.Remote)> -> _SINKS_
<org.springframework.core.Constants: java.util.Set getNamesForProperty(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor: java.util.Map getUriTemplateVariables(org.springframework.web.context.request.NativeWebRequest)> -> _SOURCES_
<org.springframework.web.portlet.FrameworkPortlet: java.lang.Class getContextClass()> -> _SOURCES_
<org.springframework.mail.SimpleMailMessage: void setText(java.lang.String)> -> _SINKS_
<org.springframework.cache.interceptor.CacheOperation: java.lang.String getCondition()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockMimeResponse: java.lang.String getForwardedUrl()> -> _SOURCES__CWE601_
<org.springframework.web.socket.WebSocketHttpHeaders: java.util.List getSecWebSocketProtocol()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: void setCookies(javax.servlet.http.Cookie[])> -> _SINKS_
<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setLocations(java.util.List)> -> _SINKS_
<org.springframework.orm.hibernate4.support.OpenSessionInViewInterceptor: boolean applySessionBindingInterceptor(org.springframework.web.context.request.async.WebAsyncManager,java.lang.String)> -> _SINKS_
<org.springframework.scheduling.backportconcurrent.ConcurrentTaskExecutor: edu.emory.mathcs.backport.java.util.concurrent.Executor getConcurrentExecutor()> -> _SOURCES_
<org.springframework.messaging.core.AbstractMessageSendingTemplate: java.lang.Object getRequiredDefaultDestination()> -> _SOURCES_
<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: void setServiceFactory(javax.xml.rpc.ServiceFactory)> -> _SINKS_
<org.springframework.messaging.MessageHeaders: void writeObject(java.io.ObjectOutputStream)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompHeaders: java.lang.String getReceiptId()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletContext: void log(java.lang.String)> -> _SINKS_
<org.springframework.web.util.UrlPathHelper: java.lang.String getContextPath(javax.servlet.http.HttpServletRequest)> -> _CWE079__SOURCES_
<org.springframework.mail.MailSendException: void printStackTrace(java.io.PrintStream)> -> _SINKS_
<org.springframework.web.servlet.tags.form.FormTag: java.lang.String getMethodParameter()> -> _SOURCES_
<org.springframework.scheduling.quartz.SchedulerFactoryBean: void setJobFactory(org.quartz.spi.JobFactory)> -> _SINKS_
<org.springframework.orm.hibernate5.support.OpenSessionInViewFilter: java.lang.String getSessionFactoryBeanName()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.InputTag: void writeValue(org.springframework.web.servlet.tags.form.TagWriter)> -> _SINKS_
<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder setFactoryBean(java.lang.String,java.lang.String)> -> _SINKS_
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: java.lang.Class[] getSpecificTargetClasses()> -> _SOURCES_
<org.springframework.web.context.request.async.WebAsyncManager: java.lang.Object[] getConcurrentResultContext()> -> _SOURCES_
<org.springframework.cache.support.SimpleCacheManager: void setCaches(java.util.Collection)> -> _SINKS_
<org.springframework.core.env.CompositePropertySource: java.lang.String[] getPropertyNames()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: void setQueryString(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.web.servlet.view.AbstractView: javax.servlet.http.HttpServletRequest getRequestToExpose(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.web.servlet.tags.MessageTag: void setVar(java.lang.String)> -> _SINKS_
<org.springframework.aop.support.StaticMethodMatcherPointcut: void setClassFilter(org.springframework.aop.ClassFilter)> -> _SINKS_
<org.springframework.cglib.reflect.FastClass: org.springframework.cglib.reflect.FastConstructor getConstructor(java.lang.reflect.Constructor)> -> _SOURCES_
<org.springframework.context.support.DefaultLifecycleProcessor: java.util.Map getLifecycleBeans()> -> _SOURCES_
<org.springframework.jms.support.converter.MappingJackson2MessageConverter: void setEncoding(java.lang.String)> -> _SINKS_
<org.springframework.context.support.AbstractMessageSource: void setUseCodeAsDefaultMessage(boolean)> -> _SINKS_
<org.springframework.cache.ehcache.EhCacheFactoryBean: void setOverflowToDisk(boolean)> -> _SINKS_
<org.springframework.scheduling.concurrent.ScheduledExecutorFactoryBean: void setScheduledExecutorTasks(org.springframework.scheduling.concurrent.ScheduledExecutorTask[])> -> _SINKS_
<org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor: void setMaxPoolSize(int)> -> _SINKS_
<org.springframework.jdbc.JdbcUpdateAffectedIncorrectNumberOfRowsException: int getActualRowsAffected()> -> _CWE089__SOURCES_
<org.springframework.format.datetime.DateFormatter: void setStyle(int)> -> _SINKS_
<org.springframework.jms.config.MethodJmsListenerEndpoint: void setMessageHandlerMethodFactory(org.springframework.messaging.handler.'annotation'.support.MessageHandlerMethodFactory)> -> _SINKS_
<org.springframework.web.servlet.DispatcherServlet: java.util.List getDefaultStrategies(org.springframework.context.ApplicationContext,java.lang.Class)> -> _SOURCES_
<org.springframework.mail.javamail.MimeMailMessage: javax.mail.internet.MimeMessage getMimeMessage()> -> _SOURCES_
<org.springframework.jms.core.JmsMessagingTemplate: void convertAndSend(java.lang.Object,org.springframework.messaging.core.MessagePostProcessor)> -> _SINKS_
<org.springframework.scheduling.config.ScheduledTasksBeanDefinitionParser: java.lang.String getBeanClassName(org.w3c.dom.Element)> -> _SOURCES_
<org.springframework.security.authentication.RememberMeAuthenticationToken: int getKeyHash()> -> _SOURCES_
<org.springframework.web.servlet.mvc.support.AbstractControllerUrlHandlerMapping: java.lang.String[] determineUrlsForHandler(java.lang.String)> -> _SINKS_
<org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean: void setDeserializers(com.fasterxml.jackson.databind.JsonDeserializer[])> -> _SINKS_
<org.springframework.cglib.core.EmitUtils: int[] getSwitchKeys(java.util.Map)> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer: void registerDefaultAuthenticationEntryPoint(org.springframework.security.config.'annotation'.web.HttpSecurityBuilder)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper: void setAttributePrefix(java.lang.String)> -> _SINKS_
<org.springframework.scheduling.quartz.CronTriggerFactoryBean: void setCronExpression(java.lang.String)> -> _SINKS_
<org.springframework.format.support.FormatterPropertyEditorAdapter: java.lang.String getAsText()> -> _SOURCES_
<org.springframework.web.servlet.view.AbstractView: void setAttributesCSV(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.security.config.annotation.authentication.configurers.userdetails.DaoAuthenticationConfigurer: void <init>(org.springframework.security.core.userdetails.UserDetailsService)> -> _AUTHENTICATIONS_TO_HIGH_
<org.springframework.security.authentication.jaas.JaasAuthenticationProvider: org.springframework.context.ApplicationEventPublisher getApplicationEventPublisher()> -> _SOURCES_
<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: void setTargetObject(java.lang.Object)> -> _SINKS_
<org.springframework.cache.jcache.interceptor.JCacheAspectSupport: void setCacheOperationSource(org.springframework.cache.jcache.interceptor.JCacheOperationSource)> -> _SINKS_
<org.springframework.context.support.GenericApplicationContext: org.springframework.beans.factory.config.BeanDefinition getBeanDefinition(java.lang.String)> -> _SOURCES_
<org.springframework.web.context.request.async.CallableInterceptorChain: java.lang.Object applyPostProcess(org.springframework.web.context.request.NativeWebRequest,java.util.concurrent.Callable,java.lang.Object)> -> _SINKS_
<org.springframework.mock.web.MockServletContext: void log(java.lang.String)> -> _SINKS_
<org.springframework.messaging.support.MessageHeaderAccessor: java.util.List getMatchingHeaderNames(java.lang.String,java.util.Map)> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod: void setResponseStatus(org.springframework.web.context.request.ServletWebRequest)> -> _SINKS_
<org.springframework.web.servlet.tags.form.AbstractHtmlInputElementTag: java.lang.String getOnchange()> -> _CWE079__SOURCES_
<org.springframework.orm.hibernate3.SessionFactoryUtils: javax.sql.DataSource getDataSource(org.hibernate.SessionFactory)> -> _SOURCES_
<org.springframework.http.client.OkHttp3ClientHttpRequestFactory: void setWriteTimeout(int)> -> _SINKS_
<org.springframework.jmx.export.assembler.InterfaceBasedMBeanInfoAssembler: void setManagedInterfaces(java.lang.Class[])> -> _SINKS_
<org.springframework.scheduling.quartz.SchedulerAccessor: void setJobSchedulingDataLocations(java.lang.String[])> -> _SINKS_
<org.springframework.oxm.support.MarshallingSource: void setInputSource(org.xml.sax.InputSource)> -> _SINKS_
<org.springframework.validation.DataBinder: org.springframework.validation.BindingResult getBindingResult()> -> _SOURCES_
<org.springframework.cglib.proxy.Mixin: java.lang.Class[] getClasses(java.lang.Object[])> -> _SOURCES_
<org.springframework.jdbc.support.lob.DefaultLobHandler: void setWrapAsLob(boolean)> -> _CWE089__SINKS_
<org.springframework.scheduling.commonj.WorkManagerTaskExecutor: void setWorkManager(commonj.work.WorkManager)> -> _SINKS_
<org.springframework.messaging.handler.HandlerMethod: java.lang.reflect.Method getBridgedMethod()> -> _SOURCES_
<org.springframework.mock.web.MockServletContext: java.util.Enumeration getInitParameterNames()> -> _SOURCES_
<org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo: java.lang.ClassLoader getNewTempClassLoader()> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompSessionHandlerAdapter: void afterConnected(org.springframework.messaging.simp.stomp.StompSession,org.springframework.messaging.simp.stomp.StompHeaders)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.beans.factory.support.AbstractBeanDefinition: org.springframework.beans.factory.support.AutowireCandidateQualifier getQualifier(java.lang.String)> -> _SOURCES_
<org.springframework.test.web.servlet.htmlunit.webdriver.WebConnectionHtmlUnitDriver: com.gargoylesoftware.htmlunit.WebClient getWebClient()> -> _SOURCES_
<org.springframework.aop.framework.ProxyConfig: void setFrozen(boolean)> -> _SINKS_
<org.springframework.web.socket.handler.AbstractWebSocketHandler: void handleMessage(org.springframework.web.socket.WebSocketSession,org.springframework.web.socket.WebSocketMessage)> -> _SINKS_
<org.springframework.aop.framework.adapter.GlobalAdvisorAdapterRegistry: org.springframework.aop.framework.adapter.AdvisorAdapterRegistry getInstance()> -> _SOURCES_
<org.springframework.ejb.support.AbstractEnterpriseBean: void unloadBeanFactory()> -> _SOURCES_
<org.springframework.web.servlet.view.ContentNegotiatingViewResolver: java.util.List getProducibleMediaTypes(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.beans.factory.support.DefaultListableBeanFactory: org.springframework.beans.factory.config.BeanDefinition getBeanDefinition(java.lang.String)> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer: java.lang.String getUsernameParameter()> -> _SOURCES_
<org.springframework.web.socket.messaging.SubProtocolWebSocketHandler: void setSendTimeLimit(int)> -> _SINKS_
<org.springframework.format.datetime.joda.JodaTimeFormatterRegistrar: void setDateTimeStyle(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver: org.springframework.web.servlet.ModelAndView handleHttpMessageNotWritable(org.springframework.http.converter.HttpMessageNotWritableException,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)> -> _SINKS_
<org.springframework.security.access.expression.method.MethodSecurityExpressionRoot: void setReturnObject(java.lang.Object)> -> _SINKS_
<org.springframework.web.multipart.commons.CommonsMultipartResolver: org.springframework.web.multipart.MultipartHttpServletRequest resolveMultipart(javax.servlet.http.HttpServletRequest)> -> _SOURCES__SINKS_
<org.springframework.beans.factory.CannotLoadBeanClassException: java.lang.String getBeanName()> -> _SOURCES_
<org.springframework.transaction.jta.JtaTransactionManager: void setJndiEnvironment(java.util.Properties)> -> _SINKS_
<org.springframework.web.servlet.mvc.condition.CompositeRequestCondition: int getLength()> -> _SOURCES_
<org.springframework.web.servlet.mvc.UrlFilenameViewController: java.lang.String getSuffix()> -> _SOURCES_
<org.springframework.test.context.junit4.AbstractTransactionalJUnit4SpringContextTests: void setDataSource(javax.sql.DataSource)> -> _SINKS_
<org.springframework.web.socket.server.standard.ServletServerContainerFactoryBean: long getAsyncSendTimeout()> -> _SOURCES_
<org.springframework.aop.framework.AbstractSingletonProxyFactoryBean: void setTarget(java.lang.Object)> -> _SINKS_
<org.springframework.scheduling.quartz.SchedulerFactoryBean: void setTaskExecutor(org.springframework.core.task.TaskExecutor)> -> _SINKS_
<org.springframework.jmx.export.metadata.ManagedOperationParameter: void setName(java.lang.String)> -> _SINKS_
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: java.lang.Object getBean(java.lang.Class)> -> _SOURCES_
<org.springframework.orm.hibernate4.HibernateTemplate: void setCheckWriteOperations(boolean)> -> _SINKS_
<org.springframework.remoting.rmi.JndiRmiClientInterceptor: void setCacheStub(boolean)> -> _SINKS_
<org.springframework.beans.factory.support.GenericBeanDefinition: void setParentName(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.mvc.ServletWrappingController: void setBeanName(java.lang.String)> -> _SINKS_
<org.springframework.web.context.support.GroovyWebApplicationContext: void setMetaClass(groovy.lang.MetaClass)> -> _SINKS_
<org.springframework.jdbc.datasource.DataSourceUtils: java.lang.Integer prepareConnectionForTransaction(java.sql.Connection,org.springframework.transaction.TransactionDefinition)> -> _CWE306__CWE089__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.transaction.support.TransactionSynchronizationManager: java.lang.String getCurrentTransactionName()> -> _SOURCES_
<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setHeaders(javax.servlet.http.HttpServletResponse,org.springframework.core.io.Resource,org.springframework.http.MediaType)> -> _SINKS_
<org.springframework.remoting.rmi.RmiRegistryFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.web.multipart.commons.CommonsMultipartFile: byte[] getBytes()> -> _SOURCES_
<org.springframework.web.servlet.support.RequestContext: java.lang.String getContextUrl(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.web.servlet.tags.form.TextareaTag: int writeTagContent(org.springframework.web.servlet.tags.form.TagWriter)> -> _SINKS_
<org.springframework.jdbc.datasource.IsolationLevelDataSourceAdapter: void setIsolationLevel(int)> -> _CWE089__SINKS_
<org.springframework.format.datetime.standard.DateTimeFormatterRegistrar: void setTimeStyle(java.time.format.FormatStyle)> -> _SINKS_
<org.springframework.jdbc.IncorrectResultSetColumnCountException: int getActualCount()> -> _CWE089__SOURCES_
<org.springframework.web.servlet.view.xslt.XsltViewResolver: void setUriResolver(javax.xml.transform.URIResolver)> -> _SINKS_
<org.springframework.aop.framework.ProxyCreatorSupport: org.springframework.aop.framework.AopProxy createAopProxy()> -> _SOURCES_
<org.springframework.web.socket.handler.BinaryWebSocketHandler: void handleTextMessage(org.springframework.web.socket.WebSocketSession,org.springframework.web.socket.TextMessage)> -> _SINKS_
<org.springframework.web.servlet.handler.AbstractHandlerMethodMapping: org.springframework.web.cors.CorsConfiguration getCorsConfiguration(java.lang.Object,javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.orm.jpa.vendor.OpenJpaVendorAdapter: java.lang.Class getEntityManagerFactoryInterface()> -> _SOURCES_
<org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl: java.lang.String getRolePrefix()> -> _CWE089__SOURCES__CWE862_
<org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean: java.lang.Object getTargetObject()> -> _SOURCES_
<org.springframework.mail.javamail.MimeMailMessage: void setReplyTo(java.lang.String)> -> _SINKS_
<org.springframework.messaging.simp.SimpMessageHeaderAccessor: java.util.Map getSessionAttributes(java.util.Map)> -> _SOURCES_
<org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes getRequestAttributes()> -> _SOURCES_
<org.springframework.ejb.access.AbstractSlsbInvokerInterceptor: void setCacheHome(boolean)> -> _SINKS_
<org.springframework.web.accept.ContentNegotiationManagerFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.orm.hibernate3.support.AsyncRequestInterceptor: boolean handleTimeout(org.springframework.web.context.request.NativeWebRequest,org.springframework.web.context.request.async.DeferredResult)> -> _SINKS_
<org.springframework.web.context.support.ServletContextResource: java.lang.String getDescription()> -> _SOURCES_
<org.springframework.cglib.core.ReflectUtils: java.lang.Class[] getClasses(java.lang.Object[])> -> _SOURCES_
<org.springframework.cache.jcache.interceptor.DefaultCacheKeyInvocationContext: javax.cache.annotation.CacheInvocationParameter[] getKeyParameters()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: java.util.List getFileExtensions()> -> _SOURCES_
<org.springframework.util.MethodInvoker: void setTargetMethod(java.lang.String)> -> _SINKS_
<org.springframework.jmx.export.SpringModelMBean: javax.management.AttributeList getAttributes(java.lang.String[])> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.WebSocketTransport: org.springframework.util.concurrent.ListenableFuture connect(org.springframework.web.socket.sockjs.client.TransportRequest,org.springframework.web.socket.WebSocketHandler)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.socket.client.standard.WebSocketContainerFactoryBean: int getMaxTextMessageBufferSize()> -> _SOURCES_
<org.springframework.core.MethodParameter: java.lang.reflect.Constructor getConstructor()> -> _SOURCES_
<org.springframework.orm.toplink.support.CommonsLoggingSessionLog: java.lang.String getSeparator()> -> _SOURCES_
<org.springframework.mail.SimpleMailMessage: java.lang.String getReplyTo()> -> _SOURCES_
<org.springframework.http.converter.ResourceHttpMessageConverter: org.springframework.http.MediaType getDefaultContentType(java.lang.Object)> -> _SOURCES_
<org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor: void setClassFilter(org.springframework.aop.ClassFilter)> -> _SINKS_
<org.springframework.jdbc.core.JdbcTemplate: int getMaxRows()> -> _CWE089__SOURCES_
<org.springframework.cache.interceptor.CacheExpressionRootObject: java.lang.Class getTargetClass()> -> _SOURCES_
<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.util.ConcurrentReferenceHashMap: int getSegmentsSize()> -> _SOURCES_
<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor getMapKeyTypeDescriptor(java.lang.Object)> -> _SOURCES_
<org.springframework.scripting.jruby.JRubyScriptFactory: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.web.portlet.context.PortletContextResource: java.lang.String getPath()> -> _SOURCES_
<org.springframework.remoting.httpinvoker.AbstractHttpInvokerRequestExecutor: java.io.ByteArrayOutputStream getByteArrayOutputStream(org.springframework.remoting.support.RemoteInvocation)> -> _SOURCES__SINKS_
<org.springframework.util.backoff.FixedBackOff: long getMaxAttempts()> -> _SOURCES_
<org.springframework.web.servlet.handler.AbstractUrlHandlerMapping: void setUseTrailingSlashMatch(boolean)> -> _SINKS_
<org.springframework.expression.spel.standard.SpelExpression: java.lang.Class getValueType(org.springframework.expression.EvaluationContext,java.lang.Object)> -> _SOURCES_
<org.springframework.http.converter.json.MappingJackson2HttpMessageConverter: void setJsonPrefix(java.lang.String)> -> _SINKS_
<org.springframework.scheduling.quartz.JobDetailBean: void setJobListenerNames(java.lang.String[])> -> _SINKS_
<org.springframework.web.socket.handler.PerConnectionWebSocketHandler: void handleTransportError(org.springframework.web.socket.WebSocketSession,java.lang.Throwable)> -> _SINKS_
<org.springframework.web.socket.messaging.SubProtocolWebSocketHandler: org.springframework.web.socket.messaging.SubProtocolHandler getDefaultProtocolHandler()> -> _SOURCES_
<org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver: org.springframework.web.servlet.ModelAndView handleHttpMediaTypeNotAcceptable(org.springframework.web.HttpMediaTypeNotAcceptableException,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)> -> _SINKS_
<org.springframework.jmx.export.assembler.MethodNameBasedMBeanInfoAssembler: void setMethodMappings(java.util.Properties)> -> _SINKS_
<org.springframework.cache.caffeine.CaffeineCacheManager: void setCacheNames(java.util.Collection)> -> _SINKS_
<org.springframework.web.portlet.handler.SimplePortletPostProcessor: void setPortletContext(javax.portlet.PortletContext)> -> _SINKS_
<org.springframework.web.servlet.mvc.ServletForwardingController: org.springframework.web.servlet.ModelAndView handleRequestInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)> -> _SOURCES_
<org.springframework.jdbc.support.lob.OracleLobHandler: byte[] getBlobAsBytes(java.sql.ResultSet,int)> -> _CWE089__SOURCES_
<org.springframework.http.client.HttpComponentsStreamingClientHttpRequest: java.io.OutputStream getBodyInternal(org.springframework.http.HttpHeaders)> -> _SOURCES_
<org.springframework.remoting.jaxrpc.JaxRpcPortClientInterceptor: javax.xml.namespace.QName getPortQName()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockMimeResponse: java.util.Locale getLocale()> -> _SOURCES__CWE601_
<org.springframework.jms.connection.SingleConnectionFactory: javax.jms.ConnectionFactory getTargetConnectionFactory()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler: void setRelayPort(int)> -> _SINKS_
<org.springframework.scheduling.config.ScheduledTaskRegistrar: java.util.List getCronTaskList()> -> _SOURCES_
<org.springframework.web.servlet.i18n.CookieLocaleResolver: void setLocaleContext(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.context.i18n.LocaleContext)> -> _SINKS_
<org.springframework.jdbc.core.JdbcTemplate: int update(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.web.servlet.view.AbstractTemplateViewResolver: void setExposeRequestAttributes(boolean)> -> _SINKS_
<org.springframework.jms.core.JmsMessagingTemplate: void setJmsTemplate(org.springframework.jms.core.JmsTemplate)> -> _SINKS_
<org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl: java.util.List loadGroupAuthorities(java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.jms.listener.adapter.MessageListenerAdapter: java.lang.String getDefaultListenerMethod()> -> _SOURCES_
<org.springframework.scheduling.commonj.TimerManagerTaskScheduler: void setErrorHandler(org.springframework.util.ErrorHandler)> -> _SINKS_
<org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator: void setStripTrailingSlash(boolean)> -> _SINKS_
<org.springframework.util.DefaultPropertiesPersister: void loadFromXml(java.util.Properties,java.io.InputStream)> -> _SOURCES_
<org.springframework.orm.jpa.persistenceunit.MutablePersistenceUnitInfo: java.util.Properties getProperties()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockResourceRequest: java.lang.String getResourceID()> -> _SOURCES_
<org.springframework.oxm.jaxb.Jaxb2Marshaller: javax.xml.bind.Marshaller createMarshaller()> -> _SOURCES_
<org.springframework.web.servlet.handler.AbstractUrlHandlerMapping: void setLazyInitHandlers(boolean)> -> _SINKS_
<org.springframework.cache.jcache.JCacheCacheManager: void setAllowNullValues(boolean)> -> _SINKS_
<org.springframework.remoting.caucho.HessianClientInterceptor: void setHessian2Reply(boolean)> -> _SINKS_
<org.springframework.web.portlet.handler.AbstractHandlerMapping: org.springframework.web.portlet.HandlerExecutionChain getHandler(javax.portlet.PortletRequest)> -> _SOURCES__SINKS_
<org.springframework.remoting.jaxrpc.JaxRpcPortClientInterceptor: void setMaintainSession(boolean)> -> _SINKS_
<org.springframework.beans.factory.config.PlaceholderConfigurerSupport: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.mock.web.portlet.MockMultipartActionRequest: java.util.List getFiles(java.lang.String)> -> _SOURCES_
<org.springframework.security.config.http.UserDetailsServiceFactoryBean: org.springframework.security.core.userdetails.UserDetailsService getUserDetailsService()> -> _SOURCES__CWE862_
<org.springframework.orm.hibernate4.support.OpenSessionInViewInterceptor: java.lang.String getParticipateAttributeName()> -> _SOURCES_
<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: java.lang.String getAutowire()> -> _SOURCES_
<org.springframework.remoting.jaxws.JaxWsPortClientInterceptor: void setEndpointAddress(java.lang.String)> -> _SINKS_
<org.springframework.security.config.annotation.web.builders.WebSecurity: void setApplicationContext(org.springframework.context.ApplicationContext)> -> _SINKS_
<org.springframework.web.servlet.DispatcherServlet: void processDispatchResult(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.servlet.HandlerExecutionChain,org.springframework.web.servlet.ModelAndView,java.lang.Exception)> -> _SINKS_
<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder setRole(int)> -> _SINKS_
<org.springframework.core.ResolvableType: java.lang.Object getSource()> -> _SOURCES_
<org.springframework.web.servlet.support.RequestContextUtils: org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.servlet.ServletRequest,javax.servlet.ServletContext)> -> _SOURCES_
<org.springframework.web.portlet.context.StaticPortletApplicationContext: java.lang.String getNamespace()> -> _SOURCES_
<org.springframework.web.servlet.theme.FixedThemeResolver: void setThemeName(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.view.UrlBasedViewResolver: int getOrder()> -> _SOURCES_
<org.springframework.security.authentication.DefaultAuthenticationEventPublisher: void publishAuthenticationFailure(org.springframework.security.core.AuthenticationException,org.springframework.security.core.Authentication)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.test.web.servlet.result.ContentResultMatchers: org.springframework.test.web.servlet.ResultMatcher contentType(java.lang.String)> -> _SINKS_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.util.concurrent.ListenableFuture execute(java.lang.String,org.springframework.http.HttpMethod,org.springframework.web.client.AsyncRequestCallback,org.springframework.web.client.ResponseExtractor,java.lang.Object[])> -> _SINKS_
<org.springframework.web.socket.server.standard.AbstractTyrusRequestUpgradeStrategy: org.glassfish.tyrus.core.RequestContext createRequestContext(javax.servlet.http.HttpServletRequest,java.lang.String,org.springframework.http.HttpHeaders)> -> _SOURCES_
<org.springframework.oxm.xstream.XStreamMarshaller: void setAliasesByType(java.util.Map)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletRequest: java.lang.String getMethod()> -> _SOURCES_
<org.springframework.web.portlet.multipart.CommonsPortletMultipartResolver: void setPortletContext(javax.portlet.PortletContext)> -> _SINKS_
<org.springframework.util.ConcurrencyThrottleSupport: void setConcurrencyLimit(int)> -> _SINKS_
<org.springframework.cache.interceptor.CacheOperation: java.lang.String getKeyGenerator()> -> _SOURCES_
<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: void setCustomTargetSourceCreators(org.springframework.aop.framework.autoproxy.TargetSourceCreator[])> -> _SINKS_
<org.springframework.format.datetime.joda.DurationFormatter: java.lang.String print(java.lang.Object,java.util.Locale)> -> _SINKS_
<org.springframework.test.jdbc.JdbcTestUtils: void executeSqlScript(org.springframework.jdbc.core.JdbcTemplate,org.springframework.core.io.ResourceLoader,java.lang.String,boolean)> -> _CWE089__SINKS_
<org.springframework.beans.support.ArgumentConvertingMethodInvoker: org.springframework.beans.TypeConverter getTypeConverter()> -> _SOURCES_
<org.springframework.util.MethodInvoker: java.lang.Object[] getArguments()> -> _SOURCES_
<org.springframework.jca.cci.connection.ConnectionFactoryUtils: javax.resource.cci.Connection getConnection(javax.resource.cci.ConnectionFactory)> -> _CWE306__SOURCES__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.remoting.rmi.RmiRegistryFactoryBean: void setPort(int)> -> _SINKS_
<org.springframework.http.client.SimpleClientHttpRequestFactory: void setProxy(java.net.Proxy)> -> _SINKS_
<org.springframework.beans.BeanMetadataAttributeAccessor: java.lang.Object getSource()> -> _SOURCES_
<org.springframework.beans.propertyeditors.ReaderEditor: java.lang.String getAsText()> -> _SOURCES_
<org.springframework.web.util.WebUtils: int getTargetPage(javax.servlet.ServletRequest,java.lang.String,int)> -> _SOURCES_
<org.springframework.aop.aspectj.AspectJExpressionPointcutAdvisor: void setParameterNames(java.lang.String[])> -> _SINKS_
<org.springframework.http.client.HttpComponentsAsyncClientHttpResponse: org.springframework.http.HttpHeaders getHeaders()> -> _SOURCES__CWE601_
<org.springframework.web.filter.AbstractRequestLoggingFilter: void setIncludeClientInfo(boolean)> -> _SINKS_
<org.springframework.web.portlet.handler.AbstractHandlerMapping: void setInterceptors(java.lang.Object[])> -> _SINKS_
<org.springframework.core.SpringProperties: void setProperty(java.lang.String,java.lang.String)> -> _SINKS_
<org.springframework.beans.support.PagedListHolder: int getFirstLinkedPage()> -> _SOURCES_
<org.springframework.jms.connection.JmsTransactionManager102: javax.jms.Connection createConnection()> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.tags.form.SelectTag: void setSize(java.lang.String)> -> _SINKS_
<org.springframework.cache.annotation.SpringCacheAnnotationParser: java.util.Collection parseCachingAnnotation(java.lang.reflect.AnnotatedElement,org.springframework.cache.'annotation'.SpringCacheAnnotationParser$DefaultCacheConfig,org.springframework.cache.'annotation'.Caching)> -> _SOURCES__SINKS_
<org.springframework.jms.connection.CachedMessageProducer: long getTimeToLive()> -> _SOURCES_
<org.springframework.web.servlet.mvc.condition.ParamsRequestCondition: java.util.Set getExpressions()> -> _SOURCES_
<org.springframework.web.multipart.commons.CommonsMultipartFile: org.apache.commons.fileupload.FileItem getFileItem()> -> _SOURCES_
<org.springframework.web.context.ContextLoaderServlet: org.springframework.web.context.ContextLoader getContextLoader()> -> _SOURCES_
<org.springframework.jdbc.core.namedparam.SqlParameterSourceUtils: java.lang.Object getTypedValue(org.springframework.jdbc.core.namedparam.SqlParameterSource,java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.orm.hibernate3.LocalSessionFactoryBean: void setHibernateProperties(java.util.Properties)> -> _SINKS_
<org.springframework.cache.ehcache.EhCacheCache: java.lang.String getName()> -> _SOURCES_
<org.springframework.jca.cci.core.CciTemplate: void setConnectionSpec(javax.resource.cci.ConnectionSpec)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.core.convert.support.CollectionToArrayConverter: java.util.Set getConvertibleTypes()> -> _SOURCES_
<org.springframework.remoting.caucho.SimpleBurlapServiceExporter: void handle(com.sun.net.httpserver.HttpExchange)> -> _SINKS_
<org.springframework.remoting.httpinvoker.SimpleHttpInvokerServiceExporter: org.springframework.remoting.support.RemoteInvocation readRemoteInvocation(com.sun.net.httpserver.HttpExchange,java.io.InputStream)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletContext: void log(java.lang.String,java.lang.Throwable)> -> _SINKS_
<org.springframework.scheduling.backportconcurrent.ThreadPoolTaskExecutor: void setWaitForTasksToCompleteOnShutdown(boolean)> -> _SINKS_
<org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager: void setPersistenceXmlLocations(java.lang.String[])> -> _SINKS_
<org.springframework.context.support.AbstractApplicationContext: java.lang.String getId()> -> _SOURCES_
<org.springframework.context.access.ContextBeanFactoryReference: org.springframework.beans.factory.BeanFactory getFactory()> -> _SOURCES_
<org.springframework.jms.support.JmsMessageHeaderAccessor: java.lang.Integer getDeliveryMode()> -> _SOURCES_
<org.springframework.context.annotation.ConfigurationClassPostProcessor: void setSourceExtractor(org.springframework.beans.factory.parsing.SourceExtractor)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompHeaderAccessor: void setHost(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.tags.form.SelectTag: java.lang.Object getMultiple()> -> _SOURCES_
<org.springframework.web.method.support.ModelAndViewContainer: org.springframework.http.HttpStatus getStatus()> -> _SOURCES_
<org.springframework.web.context.request.ServletRequestAttributes: java.lang.String getSessionId()> -> _SOURCES_
<org.springframework.messaging.simp.user.UserDestinationMessageHandler: void setBroadcastDestination(java.lang.String)> -> _SINKS_
<org.springframework.expression.spel.ast.Literal: org.springframework.expression.spel.ast.Literal getLongLiteral(java.lang.String,int,int)> -> _SOURCES_
<org.springframework.web.portlet.context.StaticPortletApplicationContext: void setConfigLocations(java.lang.String[])> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder: org.springframework.web.util.UriComponentsBuilder getBaseUrlToUse(org.springframework.web.util.UriComponentsBuilder)> -> _SOURCES_
<org.springframework.http.client.OkHttpClientHttpRequest: java.net.URI getURI()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: org.springframework.web.cors.CorsConfiguration initCorsConfiguration(java.lang.Object,java.lang.reflect.Method,org.springframework.web.servlet.mvc.method.RequestMappingInfo)> -> _SINKS_
<org.springframework.jms.config.AbstractListenerContainerParser: java.lang.Integer parseAcknowledgeMode(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.util.xml.StaxUtils: javax.xml.stream.XMLStreamReader getXMLStreamReader(javax.xml.transform.Source)> -> _SOURCES_
<org.springframework.web.servlet.mvc.condition.RequestMethodsRequestCondition: org.springframework.web.servlet.mvc.condition.RequestMethodsRequestCondition combine(org.springframework.web.servlet.mvc.condition.RequestMethodsRequestCondition)> -> _SINKS_
<org.springframework.remoting.rmi.RmiRegistryFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: java.lang.String[] getBeanDefinitionNames()> -> _SOURCES_
<org.springframework.jms.config.MethodJmsListenerEndpoint: void setBean(java.lang.Object)> -> _SINKS_
<org.springframework.expression.spel.ast.OpNE: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.scheduling.backportconcurrent.ScheduledExecutorFactoryBean: void setWaitForTasksToCompleteOnShutdown(boolean)> -> _SINKS_
<org.springframework.remoting.jaxws.AbstractJaxWsServiceExporter: void setEndpointProperties(java.util.Map)> -> _SINKS_
<org.springframework.mock.web.MockHttpSession: java.lang.String getId()> -> _SOURCES_
<org.springframework.beans.factory.config.ConstructorArgumentValues: java.util.Map getIndexedArgumentValues()> -> _SOURCES_
<org.springframework.expression.spel.ast.OpEQ: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.beans.factory.parsing.AbstractComponentDefinition: org.springframework.beans.factory.config.BeanDefinition[] getBeanDefinitions()> -> _SOURCES_
<org.springframework.util.xml.XMLEventStreamReader: java.lang.String getPIData()> -> _SOURCES_
<org.springframework.beans.factory.xml.XmlBeanDefinitionReader: int doLoadBeanDefinitions(org.xml.sax.InputSource,org.springframework.core.io.Resource)> -> _SOURCES_
<org.springframework.http.converter.protobuf.ProtobufHttpMessageConverter: org.springframework.http.MediaType getDefaultContentType(java.lang.Object)> -> _SOURCES_
<org.springframework.test.context.transaction.TransactionalTestExecutionListener: org.springframework.transaction.PlatformTransactionManager getTransactionManager(org.springframework.test.context.TestContext,java.lang.String)> -> _SOURCES_
<org.springframework.oxm.jibx.JibxMarshaller: java.lang.Object unmarshalReader(java.io.Reader)> -> _SOURCES_
<org.springframework.security.crypto.encrypt.AesBytesEncryptor: void <init>(java.lang.String,java.lang.CharSequence,org.springframework.security.crypto.keygen.BytesKeyGenerator)> -> _SANITIZERS_
<org.springframework.context.support.GenericGroovyApplicationContext: void setEnvironment(org.springframework.core.env.ConfigurableEnvironment)> -> _SINKS_
<org.springframework.aop.target.LazyInitTargetSource: java.lang.Object getTarget()> -> _SOURCES_
<org.springframework.cache.jcache.interceptor.CacheRemoveAllOperation: org.springframework.util.ExceptionTypeFilter getExceptionTypeFilter()> -> _SOURCES_
<org.springframework.web.socket.client.AbstractWebSocketClient: org.springframework.util.concurrent.ListenableFuture doHandshake(org.springframework.web.socket.WebSocketHandler,java.lang.String,java.lang.Object[])> -> _SINKS_
<org.springframework.aop.aspectj.AbstractAspectJAdvice: java.lang.Class getDiscoveredThrowingType()> -> _SOURCES_
<org.springframework.web.servlet.view.script.ScriptTemplateView: javax.script.ScriptEngine createEngineFromName()> -> _SOURCES_
<org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor: java.util.Map getAnnotationAttributes(java.lang.String)> -> _SOURCES_
<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: void createLazyConnection()> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.security.core.token.KeyBasedPersistenceTokenService: void setServerInteger(java.lang.Integer)> -> _SINKS_
<org.springframework.jdbc.support.lob.AbstractLobHandler: java.lang.String getClobAsString(java.sql.ResultSet,java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.validation.beanvalidation.LocalValidatorFactoryBean: javax.validation.ConstraintValidatorFactory getConstraintValidatorFactory()> -> _SOURCES_
<org.springframework.web.socket.config.annotation.SockJsServiceRegistration: org.springframework.web.socket.config.'annotation'.SockJsServiceRegistration setStreamBytesLimit(int)> -> _SINKS_
<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder param(java.lang.String,java.lang.String[])> -> _SOURCES_
<org.springframework.util.xml.StaxUtils: org.xml.sax.XMLReader createXMLReader(javax.xml.stream.XMLStreamReader)> -> _SOURCES_
<org.springframework.web.servlet.resource.VersionResourceResolver: java.util.Map getStrategyMap()> -> _SOURCES_
<org.springframework.security.authentication.event.AbstractAuthenticationEvent: org.springframework.security.core.Authentication getAuthentication()> -> _CWE306__SOURCES__AUTHENTICATIONS_TO_HIGH_
<org.springframework.jms.listener.adapter.AbstractAdaptableMessageListener: void setDefaultResponseTopicName(java.lang.String)> -> _SINKS_
<org.springframework.orm.hibernate3.SessionHolder: org.hibernate.Session getSession()> -> _SOURCES_
<org.springframework.util.xml.AbstractXMLReader: void setDTDHandler(org.xml.sax.DTDHandler)> -> _SINKS_
<org.springframework.web.servlet.FrameworkServlet: org.springframework.context.ApplicationContextInitializer loadInitializer(java.lang.String,org.springframework.context.ConfigurableApplicationContext)> -> _SOURCES_
<org.springframework.web.method.annotation.ModelFactory: void updateModel(org.springframework.web.context.request.NativeWebRequest,org.springframework.web.method.support.ModelAndViewContainer)> -> _SINKS_
<org.springframework.web.client.RestTemplate: java.net.URI postForLocation(java.lang.String,java.lang.Object,java.lang.Object[])> -> _SINKS_
<org.springframework.core.convert.support.MapToMapConverter: java.util.Set getConvertibleTypes()> -> _SOURCES_
<org.springframework.web.context.request.async.WebAsyncTask: java.util.concurrent.Callable getCallable()> -> _SOURCES_
<org.springframework.aop.framework.ProxyConfig: void setProxyTargetClass(boolean)> -> _SINKS_
<org.springframework.remoting.caucho.HessianClientInterceptor: void setChunkedPost(boolean)> -> _SINKS_
<org.springframework.scheduling.support.SimpleTriggerContext: void update(java.util.Date,java.util.Date,java.util.Date)> -> _SINKS_
<org.springframework.orm.hibernate3.SessionHolder: void setPreviousFlushMode(org.hibernate.FlushMode)> -> _SINKS_
<org.springframework.jms.listener.endpoint.JmsActivationSpecConfig: java.lang.String getDurableSubscriptionName()> -> _SOURCES_
<org.springframework.beans.ExtendedBeanInfo: java.beans.EventSetDescriptor[] getEventSetDescriptors()> -> _SOURCES_
<org.springframework.web.servlet.tags.HtmlEscapeTag: int doStartTagInternal()> -> _CWE079__SOURCES_
<org.springframework.validation.DataBinder: java.lang.Object getTarget()> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.AbstractXhrTransport: org.springframework.util.concurrent.ListenableFuture connect(org.springframework.web.socket.sockjs.client.TransportRequest,org.springframework.web.socket.WebSocketHandler)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory: void setGenerateUniqueDatabaseName(boolean)> -> _CWE089__SINKS_
<org.springframework.web.servlet.view.xslt.XsltView: javax.xml.transform.Result createResult(javax.servlet.http.HttpServletResponse)> -> _SOURCES_
<org.springframework.aop.framework.ProxyConfig: void setOpaque(boolean)> -> _SINKS_
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanDefinitionNames()> -> _SOURCES_
<org.springframework.cglib.proxy.MixinEmitter: java.lang.Class[] getInterfaces(java.lang.Class[])> -> _SOURCES_
<org.springframework.remoting.jaxrpc.support.AxisBeanMappingServicePostProcessor: javax.xml.namespace.QName getTypeQName(java.lang.String)> -> _SOURCES_
<org.springframework.validation.AbstractBindingResult: org.springframework.validation.ObjectError getGlobalError()> -> _SOURCES_
<org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver: org.springframework.web.servlet.ModelAndView handleMissingServletRequestParameter(org.springframework.web.bind.MissingServletRequestParameterException,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)> -> _SINKS_
<org.springframework.context.support.AbstractResourceBasedMessageSource: void setDefaultEncoding(java.lang.String)> -> _SINKS_
<org.springframework.scheduling.backportconcurrent.ThreadPoolTaskExecutor: edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor getThreadPoolExecutor()> -> _SOURCES_
<org.springframework.security.authentication.encoding.PlaintextPasswordEncoder: java.lang.String encodePassword(java.lang.String,java.lang.Object)> -> _SANITIZERS_
<org.springframework.beans.propertyeditors.UUIDEditor: java.lang.String getAsText()> -> _SOURCES_
<org.springframework.util.LinkedMultiValueMap: java.util.List get(java.lang.Object)> -> _SOURCES_
<org.springframework.expression.common.CompositeStringExpression: java.lang.Object getValue(java.lang.Object,java.lang.Class)> -> _SOURCES_
<org.springframework.web.servlet.view.velocity.VelocityLayoutView: void setLayoutKey(java.lang.String)> -> _SINKS_
<org.springframework.web.portlet.ModelAndView: java.util.Map getModel()> -> _SOURCES_
<org.springframework.orm.hibernate5.support.HibernateDaoSupport: org.hibernate.SessionFactory getSessionFactory()> -> _SOURCES_
<org.springframework.messaging.converter.MappingJackson2MessageConverter: java.lang.Object convertToInternal(java.lang.Object,org.springframework.messaging.MessageHeaders,java.lang.Object)> -> _SINKS_
<org.springframework.jmx.export.metadata.ManagedNotification: java.lang.String getDescription()> -> _SOURCES_
<org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache: org.springframework.security.core.userdetails.UserDetails getUserFromCache(java.lang.String)> -> _SOURCES__CWE862_
<org.springframework.mock.web.MockSessionCookieConfig: void setHttpOnly(boolean)> -> _SINKS_
<org.springframework.test.context.jdbc.MergedSqlConfig: java.lang.String getSeparator()> -> _CWE089__SOURCES_
<org.springframework.web.socket.messaging.StompSubProtocolHandler: void handleMessageFromClient(org.springframework.web.socket.WebSocketSession,org.springframework.web.socket.WebSocketMessage,org.springframework.messaging.MessageChannel)> -> _SINKS_
<org.springframework.expression.common.LiteralExpression: java.lang.Object getValue(java.lang.Class)> -> _SOURCES_
<org.springframework.http.HttpEntity: java.lang.Object getBody()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.InputTag: void setOnselect(java.lang.String)> -> _SINKS_
<org.springframework.beans.factory.config.CustomEditorConfigurer: int getOrder()> -> _SOURCES_
<org.springframework.jms.core.JmsMessagingTemplate: java.lang.String getRequiredDefaultDestinationName()> -> _SOURCES_
<org.springframework.aop.config.AdvisorComponentDefinition: org.springframework.beans.factory.config.BeanReference[] getBeanReferences()> -> _SOURCES_
<org.springframework.web.context.support.AbstractRefreshableWebApplicationContext: void setServletConfig(javax.servlet.ServletConfig)> -> _SINKS_
<org.springframework.web.servlet.tags.form.ButtonTag: void writeValue(org.springframework.web.servlet.tags.form.TagWriter)> -> _SINKS_
<org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor: java.lang.String getParticipateAttributeName()> -> _SOURCES_
<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setResourceResolvers(java.util.List)> -> _SINKS_
<org.springframework.jms.connection.TransactionAwareConnectionFactoryProxy: javax.jms.Connection getTransactionAwareConnectionProxy(javax.jms.Connection)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.orm.hibernate3.HibernateExceptionTranslator: void setJdbcExceptionTranslator(org.springframework.jdbc.support.SQLExceptionTranslator)> -> _CWE089__SINKS_
<org.springframework.web.servlet.view.xslt.XsltViewResolver: void setSourceKey(java.lang.String)> -> _SINKS_
<org.springframework.scheduling.quartz.JobDetailFactoryBean: void setName(java.lang.String)> -> _SINKS_
<org.springframework.beans.factory.config.TypedStringValue: void setSource(java.lang.Object)> -> _SINKS_
<org.springframework.orm.hibernate3.LocalSessionFactoryBean: void setConfigLocations(org.springframework.core.io.Resource[])> -> _SINKS_
<org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource: org.springframework.transaction.interceptor.TransactionAttribute getTransactionAttribute(java.lang.reflect.Method,java.lang.Class)> -> _SOURCES_
<org.springframework.web.servlet.view.jasperreports.JasperReportsMultiFormatView: void setFormatMappings(java.util.Map)> -> _SINKS_
<org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource: java.lang.Object getTarget()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractFormTag: void writeOptionalAttribute(org.springframework.web.servlet.tags.form.TagWriter,java.lang.String,java.lang.String)> -> _SINKS_
<org.springframework.instrument.classloading.WeavingTransformer: byte[] transformIfNecessary(java.lang.String,byte[])> -> _SINKS_
<org.springframework.format.datetime.joda.DateTimeFormatterFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.test.context.web.AnnotationConfigWebContextLoader: java.lang.String getResourceSuffix()> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addViewControllers(org.springframework.web.servlet.config.'annotation'.ViewControllerRegistry)> -> _SINKS_
<org.springframework.web.servlet.tags.form.TextareaTag: java.lang.String getOnselect()> -> _SOURCES_
<org.springframework.security.access.expression.SecurityExpressionRoot: boolean isAuthenticated()> -> _AUTHENTICATIONS_NEUTRAL__CWE306_
<org.springframework.web.servlet.support.AbstractFlashMapManager: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)> -> _SINKS_
<org.springframework.messaging.core.AbstractMessageSendingTemplate: void convertAndSend(java.lang.Object,java.lang.Object,java.util.Map)> -> _SINKS_
<org.springframework.orm.hibernate3.HibernateAccessor: org.hibernate.Interceptor getEntityInterceptor()> -> _SOURCES_
<org.springframework.jdbc.core.metadata.PostgresCallMetaDataProvider: int getRefCursorSqlType()> -> _CWE089__SOURCES_
<org.springframework.web.socket.config.WebSocketMessageBrokerStats: java.lang.String getClientOutboundExecutorStatsInfo()> -> _CWE078__SOURCES_
<org.springframework.cglib.core.DebuggingClassWriter: java.lang.String getSuperName()> -> _SOURCES_
<org.springframework.web.servlet.view.ContentNegotiatingViewResolver: void setDefaultViews(java.util.List)> -> _SINKS_
<org.springframework.jdbc.datasource.DataSourceTransactionManager: void setDataSource(javax.sql.DataSource)> -> _CWE089__SINKS_
<org.springframework.mock.web.portlet.MockEventRequest: javax.portlet.Event getEvent()> -> _SOURCES_
<org.springframework.aop.framework.ReflectiveMethodInvocation: java.lang.reflect.Method getMethod()> -> _SOURCES_
<org.springframework.web.jsf.FacesContextUtils: org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.faces.context.FacesContext)> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: java.lang.String getOnkeypress()> -> _CWE079__SOURCES_
<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.cors.CorsConfiguration getCorsConfiguration(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.messaging.converter.MappingJackson2MessageConverter: java.lang.Class getSerializationView(java.lang.Object)> -> _SOURCES_
<org.springframework.transaction.support.DefaultTransactionStatus: java.lang.Object getSuspendedResources()> -> _SOURCES_
<org.springframework.scheduling.quartz.SchedulerFactoryBean: void setDataSource(javax.sql.DataSource)> -> _SINKS_
<org.springframework.orm.hibernate5.HibernateTemplate: java.lang.Object execute(org.springframework.orm.hibernate5.HibernateCallback)> -> _SINKS_
<org.springframework.security.authentication.jaas.SecurityContextLoginModule: boolean login()> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.config.ViewResolversBeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.test.context.support.AbstractTestContextBootstrapper: void setBootstrapContext(org.springframework.test.context.BootstrapContext)> -> _SINKS_
<org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl: java.util.List loadUsersByUsername(java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.orm.jpa.vendor.HibernateJpaSessionFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.web.context.support.StaticWebApplicationContext: void setServletConfig(javax.servlet.ServletConfig)> -> _SINKS_
<org.springframework.web.socket.client.WebSocketConnectionManager: void openConnection()> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.jms.remoting.JmsInvokerClientInterceptor: javax.jms.ConnectionFactory getConnectionFactory()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.security.access.vote.AbstractAccessDecisionManager: void setAllowIfAllAbstainDecisions(boolean)> -> _SINKS_
<org.springframework.jms.listener.AbstractMessageListenerContainer: void setExceptionListener(javax.jms.ExceptionListener)> -> _SINKS_
<org.springframework.web.client.RestTemplate: void setDefaultUriVariables(java.util.Map)> -> _SINKS_
<org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver: org.springframework.web.servlet.ModelAndView handleAsyncRequestTimeoutException(org.springframework.web.context.request.async.AsyncRequestTimeoutException,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)> -> _SINKS_
<org.springframework.expression.spel.ast.RealLiteral: org.springframework.expression.TypedValue getLiteralValue()> -> _SOURCES_
<org.springframework.transaction.jta.JtaTransactionManager: void setUserTransaction(javax.transaction.UserTransaction)> -> _SINKS_
<org.springframework.messaging.support.AbstractMessageChannel: boolean send(org.springframework.messaging.Message)> -> _SINKS_
<org.springframework.test.util.ReflectionTestUtils: void setField(java.lang.Object,java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.core.env.AbstractEnvironment: java.util.Map getSystemEnvironment()> -> _SOURCES_
<org.springframework.web.util.ContentCachingRequestWrapper: byte[] getContentAsByteArray()> -> _SOURCES_
<org.springframework.beans.PropertyEditorRegistrySupport: java.beans.PropertyEditor getCustomEditor(java.lang.String,java.lang.Class)> -> _SOURCES_
<org.springframework.http.client.SimpleStreamingAsyncClientHttpRequest: org.springframework.http.HttpMethod getMethod()> -> _SOURCES_
<org.springframework.core.io.support.PathMatchingResourcePatternResolver: org.springframework.util.PathMatcher getPathMatcher()> -> _SOURCES_
<org.springframework.remoting.rmi.RmiClientInterceptor: void setLookupStubOnStartup(boolean)> -> _SINKS_
<org.springframework.remoting.jaxrpc.JaxRpcPortClientInterceptor: void setLookupServiceOnStartup(boolean)> -> _SINKS_
<org.springframework.security.config.annotation.authentication.configurers.ldap.LdapAuthenticationProviderConfigurer: org.springframework.security.ldap.authentication.PasswordComparisonAuthenticator createPasswordCompareAuthenticator(org.springframework.ldap.core.support.BaseLdapPathContextSource)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.expression.common.LiteralExpression: java.lang.String getValue(org.springframework.expression.EvaluationContext)> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.ViewControllerRegistration: void setViewName(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter: void configureDefaultServletHandling(org.springframework.web.servlet.config.'annotation'.DefaultServletHandlerConfigurer)> -> _SINKS_
<org.springframework.orm.hibernate3.AbstractSessionFactoryBean: void setUseTransactionAwareDataSource(boolean)> -> _SINKS_
<org.springframework.core.ResolvableType: org.springframework.core.ResolvableType getComponentType()> -> _SOURCES_
<org.springframework.scheduling.concurrent.DefaultManagedTaskExecutor: void setJndiEnvironment(java.util.Properties)> -> _SINKS_
<org.springframework.orm.toplink.support.TransactionAwareSessionAdapter: void setSessionFactory(org.springframework.orm.toplink.SessionFactory)> -> _SINKS_
<org.springframework.orm.hibernate4.HibernateTemplate: void setCacheQueries(boolean)> -> _SINKS_
<org.springframework.cache.jcache.interceptor.CacheRemoveOperation: org.springframework.util.ExceptionTypeFilter getExceptionTypeFilter()> -> _SOURCES_
<org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory: org.springframework.aop.Advisor getDeclareParentsAdvisor(java.lang.reflect.Field)> -> _SOURCES_
<org.springframework.web.method.support.HandlerMethodArgumentResolverComposite: org.springframework.web.method.support.HandlerMethodArgumentResolver getArgumentResolver(org.springframework.core.MethodParameter)> -> _SOURCES_
<org.springframework.web.portlet.mvc.annotation.AnnotationMethodHandlerAdapter: void handleEvent(javax.portlet.EventRequest,javax.portlet.EventResponse,java.lang.Object)> -> _SINKS_
<org.springframework.util.PropertyPlaceholderHelper: java.lang.String replacePlaceholders(java.lang.String,org.springframework.util.PropertyPlaceholderHelper$PlaceholderResolver)> -> _SANITIZERS__SINKS_
<org.springframework.core.GenericTypeResolver: java.lang.reflect.Type getRawType(java.lang.reflect.Type,java.util.Map)> -> _SOURCES_
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: org.springframework.cache.Cache getCache(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.ResourceServlet: org.springframework.util.PathMatcher getPathMatcher()> -> _SOURCES_
<org.springframework.orm.jdo.support.SpringPersistenceManagerProxyBean: void setAllowCreate(boolean)> -> _SINKS_
<org.springframework.jdbc.support.nativejdbc.SimpleNativeJdbcExtractor: boolean isNativeConnectionNecessaryForNativeCallableStatements()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__CWE862_
<org.springframework.jmx.support.ConnectorServerFactoryBean: void setEnvironmentMap(java.util.Map)> -> _SINKS_
<org.springframework.web.util.OpaqueUriComponents: void copyToUriComponentsBuilder(org.springframework.web.util.UriComponentsBuilder)> -> _SINKS_
<org.springframework.security.core.AuthenticationException: org.springframework.security.core.Authentication getAuthentication()> -> _CWE306__SOURCES__AUTHENTICATIONS_TO_HIGH_
<org.springframework.validation.beanvalidation.SpringValidatorAdapter: java.lang.Object getRejectedValue(java.lang.String,javax.validation.ConstraintViolation,org.springframework.validation.BindingResult)> -> _SOURCES_
<org.springframework.core.io.support.PropertiesLoaderSupport: void setFileEncoding(java.lang.String)> -> _SINKS_
<org.springframework.security.config.SecurityNamespaceHandler: void loadParsers()> -> _SOURCES_
<org.springframework.http.client.support.HttpAccessor: void setRequestFactory(org.springframework.http.client.ClientHttpRequestFactory)> -> _SINKS_
<org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurationSupport: org.springframework.messaging.converter.MappingJackson2MessageConverter createJacksonConverter()> -> _SOURCES_
<org.springframework.web.util.CookieGenerator: void setCookieMaxAge(int)> -> _SINKS_
<org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler: void setConversionService(org.springframework.core.convert.ConversionService)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver: void setCustomReturnValueHandlers(java.util.List)> -> _SINKS_
<org.springframework.orm.jpa.JpaTransactionManager: javax.sql.DataSource getDataSource()> -> _SOURCES_
<org.springframework.web.portlet.multipart.DefaultMultipartActionRequest: org.springframework.util.MultiValueMap getMultiFileMap()> -> _SOURCES_
<org.springframework.cglib.core.SpringNamingPolicy: java.lang.String getTag()> -> _SOURCES_
<org.springframework.remoting.httpinvoker.CommonsHttpInvokerRequestExecutor: org.apache.commons.httpclient.HttpClient getHttpClient()> -> _SOURCES_
<org.springframework.web.servlet.i18n.CookieLocaleResolver: void setLocale(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Locale)> -> _SINKS_
<org.springframework.cache.jcache.JCacheManagerFactoryBean: void setCacheManagerUri(java.net.URI)> -> _SINKS_
<org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl: java.lang.String getAuthoritiesByUsernameQuery()> -> _CWE089__SOURCES__CWE862_
<org.springframework.messaging.simp.user.MultiServerUserRegistry: org.springframework.messaging.simp.user.SimpUser getUser(java.lang.String)> -> _SOURCES__CWE862_
<org.springframework.web.servlet.view.xslt.XsltView: void setSourceKey(java.lang.String)> -> _SINKS_
<org.springframework.messaging.handler.invocation.InvocableHandlerMethod: java.lang.String getDetailedErrorMessage(java.lang.String)> -> _SOURCES_
<org.springframework.transaction.support.TransactionSynchronizationAdapter: int getOrder()> -> _SOURCES_
<org.springframework.format.datetime.standard.DateTimeContextHolder: void setDateTimeContext(org.springframework.format.datetime.standard.DateTimeContext)> -> _SINKS_
<org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor: int getPoolSize()> -> _SOURCES_
<org.springframework.security.access.vote.RoleVoter: void setRolePrefix(java.lang.String)> -> _SINKS_
<org.springframework.remoting.rmi.RmiRegistryFactoryBean: void setClientSocketFactory(java.rmi.server.RMIClientSocketFactory)> -> _SINKS_
<org.springframework.jdbc.datasource.SingleConnectionDataSource: void prepareConnection(java.sql.Connection)> -> _CWE306__CWE089__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.security.authentication.RememberMeAuthenticationProvider: java.lang.String getKey()> -> _SOURCES_
<org.springframework.web.servlet.view.jasperreports.AbstractJasperReportsView: net.sf.jasperreports.engine.JRDataSource createReport(net.sf.jasperreports.engine.JRDataSourceProvider)> -> _SOURCES_
<org.springframework.web.socket.server.support.AbstractHandshakeHandler: java.util.List determineHandlerSupportedProtocols(org.springframework.web.socket.WebSocketHandler)> -> _SINKS_
<org.springframework.core.convert.support.IdToEntityConverter: java.lang.String getEntityName(java.lang.Class)> -> _SOURCES_
<org.springframework.orm.ibatis.support.AbstractLobTypeHandler: java.lang.Object getResult(java.sql.CallableStatement,int)> -> _SOURCES_
<org.springframework.web.servlet.DispatcherServlet: java.lang.Object createDefaultStrategy(org.springframework.context.ApplicationContext,java.lang.Class)> -> _SOURCES_
<org.springframework.mail.javamail.JavaMailSenderImpl: javax.activation.FileTypeMap getDefaultFileTypeMap()> -> _SOURCES_
<org.springframework.scheduling.quartz.CronTriggerFactoryBean: void setCalendarName(java.lang.String)> -> _SINKS_
<org.springframework.jms.listener.adapter.AbstractAdaptableMessageListener: javax.jms.Destination getResponseDestination(javax.jms.Message,javax.jms.Message,javax.jms.Session,java.lang.Object)> -> _SOURCES_
<org.springframework.oxm.jaxb.Jaxb2Marshaller: void setAdapters(javax.xml.bind.annotation.adapters.XmlAdapter[])> -> _SINKS_
<org.springframework.jdbc.core.metadata.CallMetaDataContext: void setCatalogName(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.jdbc.core.simple.AbstractJdbcCall: java.lang.String getCatalogName()> -> _CWE089__SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: java.util.List getArgumentResolvers()> -> _SOURCES_
<org.springframework.scheduling.concurrent.ExecutorConfigurationSupport: void setThreadFactory(java.util.concurrent.ThreadFactory)> -> _SINKS_
<org.springframework.web.servlet.view.jasperreports.AbstractJasperReportsView: java.util.Map getExporterParameters()> -> _SOURCES_
<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: void setWsdlDocumentUrl(java.net.URL)> -> _SINKS_
<org.springframework.jms.listener.AbstractMessageListenerContainer: javax.jms.ExceptionListener getExceptionListener()> -> _SOURCES_
<org.springframework.mock.web.portlet.ServletWrappingPortletContext: java.util.Enumeration getContainerRuntimeOptions()> -> _SOURCES_
<org.springframework.mail.javamail.JavaMailSenderImpl: void setDefaultFileTypeMap(javax.activation.FileTypeMap)> -> _SINKS_
<org.springframework.expression.spel.ast.SpelNodeImpl: java.lang.String getExitDescriptor()> -> _SOURCES_
<org.springframework.web.servlet.HttpServletBean: javax.servlet.ServletContext getServletContext()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletResponse: long getDateHeader(java.lang.String)> -> _SOURCES__CWE601_
<org.springframework.web.socket.handler.WebSocketSessionDecorator: java.net.InetSocketAddress getLocalAddress()> -> _SOURCES_
<org.springframework.web.accept.ContentNegotiationManager: org.springframework.web.accept.ContentNegotiationStrategy getStrategy(java.lang.Class)> -> _SOURCES_
<org.springframework.web.bind.WebDataBinder: void setFieldMarkerPrefix(java.lang.String)> -> _SINKS_
<org.springframework.test.web.client.match.JsonPathRequestMatchers: org.springframework.test.web.client.RequestMatcher isString()> -> _SOURCES_
<org.springframework.jms.support.destination.JndiDestinationResolver: void setCache(boolean)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletRequest: java.lang.String getHeader(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.cglib.proxy.Enhancer: org.springframework.asm.Type getThisType(org.springframework.cglib.core.CodeEmitter)> -> _SOURCES_
<org.springframework.web.servlet.support.RequestContext: java.lang.String getMessage(java.lang.String,java.util.List,java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.aop.aspectj.SingletonAspectInstanceFactory: int getOrder()> -> _SOURCES_
<org.springframework.aop.aspectj.annotation.InstantiationModelAwarePointcutAdvisorImpl: org.aopalliance.aop.Advice getAdvice()> -> _SOURCES_
<org.springframework.validation.AbstractBindingResult: org.springframework.validation.MessageCodesResolver getMessageCodesResolver()> -> _SOURCES_
<org.springframework.transaction.interceptor.CompositeTransactionAttributeSource: org.springframework.transaction.interceptor.TransactionAttribute getTransactionAttribute(java.lang.reflect.Method,java.lang.Class)> -> _SOURCES_
<org.springframework.scheduling.backportconcurrent.ScheduledExecutorFactoryBean: void setThreadFactory(edu.emory.mathcs.backport.java.util.concurrent.ThreadFactory)> -> _SINKS_
<org.springframework.beans.factory.serviceloader.ServiceListFactoryBean: java.lang.Object getObjectToExpose(java.util.ServiceLoader)> -> _SOURCES_
<org.springframework.validation.AbstractErrors: java.lang.String getNestedPath()> -> _SOURCES_
<org.springframework.scripting.support.ResourceScriptSource: java.lang.String getScriptAsString()> -> _SOURCES_
<org.springframework.oxm.xstream.XStreamMarshaller: void setReflectionProvider(com.thoughtworks.xstream.converters.reflection.ReflectionProvider)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompHeaders: long[] getHeartbeat()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.RememberMeConfigurer: void initDefaultLoginFilter(org.springframework.security.config.'annotation'.web.HttpSecurityBuilder)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.orm.hibernate5.SpringSessionSynchronization: org.hibernate.Session getCurrentSession()> -> _SOURCES_
<org.springframework.messaging.simp.stomp.DefaultStompSession: void setTaskScheduler(org.springframework.scheduling.TaskScheduler)> -> _SINKS_
<org.springframework.messaging.simp.SimpMessageHeaderAccessor: long[] getHeartbeat(java.util.Map)> -> _SOURCES_
<org.springframework.ejb.support.AbstractStatefulSessionBean: void loadBeanFactory()> -> _SOURCES_
<org.springframework.util.xml.XMLEventStreamWriter: java.lang.String getPrefix(java.lang.String)> -> _SOURCES_
<org.springframework.transaction.HeuristicCompletionException: java.lang.String getStateString(int)> -> _SOURCES_
<org.springframework.oxm.castor.CastorMarshaller: void setDoctypes(java.util.Map)> -> _SINKS_
<org.springframework.web.socket.adapter.standard.WebSocketToStandardExtensionAdapter: java.util.List getParameters()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.HttpBasicConfigurer: org.springframework.security.config.'annotation'.web.configurers.HttpBasicConfigurer authenticationEntryPoint(org.springframework.security.web.AuthenticationEntryPoint)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.jca.cci.object.EisOperation: void setInteractionSpec(javax.resource.cci.InteractionSpec)> -> _SINKS_
<org.springframework.cache.jcache.interceptor.JCacheAspectSupport: java.lang.Class getTargetClass(java.lang.Object)> -> _SOURCES_
<org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean: void setObjectMapper(com.fasterxml.jackson.databind.ObjectMapper)> -> _SINKS_
<org.springframework.orm.hibernate5.HibernateTransactionManager: void setAllowResultAccessAfterCompletion(boolean)> -> _SINKS_
<org.springframework.cache.jcache.interceptor.JCacheAspectSupport: java.lang.Object execute(org.springframework.cache.interceptor.CacheOperationInvocationContext,org.springframework.cache.interceptor.CacheOperationInvoker)> -> _SINKS_
<org.springframework.web.servlet.config.MvcNamespaceUtils: java.lang.Object getContentNegotiationManager(org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: void setProxyClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.validation.beanvalidation.LocalValidatorFactoryBean: javax.validation.Validator getValidator()> -> _SOURCES_
<org.springframework.jdbc.core.namedparam.MapSqlParameterSource: java.lang.Object getValue(java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler: java.util.List getCustomReturnValueHandlers()> -> _SOURCES_
<org.springframework.validation.DataBinder: org.springframework.beans.ConfigurablePropertyAccessor getPropertyAccessor()> -> _SOURCES_
<org.springframework.jms.connection.SingleConnectionFactory: boolean isReconnectOnException()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE862_
<org.springframework.security.config.http.HttpConfigurationBuilder: java.util.List getFilters()> -> _SOURCES_
<org.springframework.beans.support.PropertyComparator: java.lang.Object getPropertyValue(java.lang.Object)> -> _SOURCES_
<org.springframework.core.env.AbstractEnvironment: org.springframework.core.env.MutablePropertySources getPropertySources()> -> _SOURCES_
<org.springframework.web.servlet.view.AbstractCachingViewResolver: void setCacheUnresolved(boolean)> -> _SINKS_
<org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider: void close()> -> _AUTHENTICATIONS_TO_LOW_
<org.springframework.jms.support.destination.JndiDestinationResolver: void setFallbackToDynamicDestination(boolean)> -> _SINKS_
<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder params(org.springframework.util.MultiValueMap)> -> _SOURCES_
<org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler: javax.management.MBeanParameterInfo[] getOperationParameters(java.lang.reflect.Method,java.lang.String)> -> _SOURCES_
<org.springframework.web.portlet.mvc.PortletWrappingController: void setPortletContext(javax.portlet.PortletContext)> -> _SINKS_
<org.springframework.scheduling.commonj.TimerManagerAccessor: commonj.timers.TimerManager getTimerManager()> -> _SOURCES_
<org.springframework.http.converter.xml.MarshallingHttpMessageConverter: java.lang.Object readFromSource(java.lang.Class,org.springframework.http.HttpHeaders,javax.xml.transform.Source)> -> _SOURCES_
<org.springframework.oxm.jaxb.Jaxb2Marshaller: void setPackagesToScan(java.lang.String[])> -> _SINKS_
<org.springframework.beans.factory.config.AbstractFactoryBean: java.lang.Class[] getEarlySingletonInterfaces()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.MatrixVariableMethodArgumentResolver: org.springframework.web.method.'annotation'.AbstractNamedValueMethodArgumentResolver$NamedValueInfo createNamedValueInfo(org.springframework.core.MethodParameter)> -> _SOURCES_
<org.springframework.web.context.request.ServletWebRequest: java.lang.String[] getParameterValues(java.lang.String)> -> _CWE079__SOURCES__CWE601_
<org.springframework.web.servlet.support.RequestContext: org.springframework.web.context.WebApplicationContext getWebApplicationContext()> -> _SOURCES_
<org.springframework.web.servlet.mvc.condition.CompositeRequestCondition: java.lang.String getToStringInfix()> -> _SOURCES_
<org.springframework.jdbc.core.namedparam.ParsedSql: void setNamedParameterCount(int)> -> _CWE089__SINKS_
<org.springframework.core.io.InputStreamResource: java.lang.String getDescription()> -> _SOURCES_
<org.springframework.web.servlet.view.UrlBasedViewResolver: java.lang.String[] getViewNames()> -> _SOURCES_
<org.springframework.mail.javamail.ConfigurableMimeFileTypeMap: java.lang.String getContentType(java.lang.String)> -> _SOURCES_
<org.springframework.jdbc.datasource.ConnectionHolder: boolean hasConnection()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__CWE862_
<org.springframework.web.servlet.DispatcherServlet: org.springframework.web.multipart.MultipartResolver getMultipartResolver()> -> _SOURCES_
<org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler: java.lang.String getDescription(java.lang.Object,java.lang.String)> -> _SOURCES_
<org.springframework.jca.cci.connection.TransactionAwareConnectionFactoryProxy: javax.resource.cci.Connection getTransactionAwareConnectionProxy(javax.resource.cci.Connection,javax.resource.cci.ConnectionFactory)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.jdbc.datasource.init.DatabasePopulatorUtils: void execute(org.springframework.jdbc.datasource.init.DatabasePopulator,javax.sql.DataSource)> -> _CWE089__SINKS_
<org.springframework.web.portlet.context.PortletWebRequest: java.lang.String getDescription(boolean)> -> _CWE079__SOURCES_
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.ClassLoader getBeanClassLoader()> -> _SOURCES_
<org.springframework.web.portlet.bind.PortletRequestUtils: boolean[] getBooleanParameters(javax.portlet.PortletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.cglib.proxy.Enhancer: void setThreadCallbacks(java.lang.Class,org.springframework.cglib.proxy.Callback[])> -> _SINKS_
<org.springframework.web.socket.sockjs.transport.session.WebSocketServerSockJsSession: java.lang.Object getNativeSession(java.lang.Class)> -> _SOURCES_
<org.springframework.orm.ObjectRetrievalFailureException: java.lang.String getPersistentClassName()> -> _SOURCES_
<org.springframework.scheduling.annotation.AsyncAnnotationAdvisor: org.springframework.aop.Pointcut getPointcut()> -> _SOURCES_
<org.springframework.cglib.core.CodeEmitter: void load_local(org.springframework.asm.Type,int)> -> _SOURCES_
<org.springframework.validation.beanvalidation.LocalValidatorFactoryBean: void setValidationProviderResolver(javax.validation.ValidationProviderResolver)> -> _SINKS_
<org.springframework.beans.factory.xml.NamespaceHandlerSupport: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SINKS_
<org.springframework.beans.factory.support.AbstractBeanDefinitionReader: int loadBeanDefinitions(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.view.UrlBasedViewResolver: java.lang.String getRequestContextAttribute()> -> _SOURCES_
<org.springframework.beans.factory.config.PropertyPathFactoryBean: void setBeanName(java.lang.String)> -> _SINKS_
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: boolean canWrite(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.String)> -> _SINKS_
<org.springframework.jmx.export.assembler.AbstractMBeanInfoAssembler: javax.management.modelmbean.ModelMBeanConstructorInfo[] getConstructorInfo(java.lang.Object,java.lang.String)> -> _SOURCES_
<org.springframework.remoting.jaxrpc.JaxRpcPortClientInterceptor: void setJaxRpcService(javax.xml.rpc.Service)> -> _SINKS_
<org.springframework.web.servlet.handler.SimpleMappingExceptionResolver: void setDefaultErrorView(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.mvc.multiaction.MultiActionController: void setValidators(org.springframework.validation.Validator[])> -> _SINKS_
<org.springframework.web.method.support.InvocableHandlerMethod: void setParameterNameDiscoverer(org.springframework.core.ParameterNameDiscoverer)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler: long getSystemHeartbeatSendInterval()> -> _SOURCES_
<org.springframework.mock.web.MockJspWriter: void print(java.lang.String)> -> _SINKS_
<org.springframework.cglib.core.AbstractClassGenerator: boolean getUseCache()> -> _SOURCES_
<org.springframework.core.Conventions: java.lang.String getVariableName(java.lang.Object)> -> _SOURCES_
<org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser: org.springframework.beans.factory.config.RuntimeBeanReference getConversionService(org.w3c.dom.Element,java.lang.Object,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.remoting.support.RemoteExporter: java.lang.Class getServiceInterface()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockRenderResponse: java.lang.String getTitle()> -> _SOURCES__CWE601_
<org.springframework.web.socket.sockjs.client.SockJsClient: void setInfoReceiver(org.springframework.web.socket.sockjs.client.InfoReceiver)> -> _SINKS_
<org.springframework.cache.config.CacheAdviceParser: java.lang.String getAttributeValue(org.w3c.dom.Element,java.lang.String,java.lang.String)> -> _SOURCES_
<org.springframework.format.datetime.standard.DateTimeFormatterRegistrar: java.time.format.DateTimeFormatter getFormatter(org.springframework.format.datetime.standard.DateTimeFormatterRegistrar$Type)> -> _SOURCES_
<org.springframework.beans.factory.config.MethodInvokingFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.jdbc.core.JdbcTemplate: int[] batchUpdate(java.lang.String,org.springframework.jdbc.core.BatchPreparedStatementSetter)> -> _CWE089__SINKS_
<org.springframework.expression.spel.ast.OpOr: boolean getBooleanValue(org.springframework.expression.spel.ExpressionState,org.springframework.expression.spel.ast.SpelNodeImpl)> -> _SOURCES_
<org.springframework.transaction.interceptor.MethodMapTransactionAttributeSource: void setMethodMap(java.util.Map)> -> _SINKS_
<org.springframework.web.servlet.view.ContentNegotiatingViewResolver: org.springframework.http.MediaType getMostSpecificMediaType(org.springframework.http.MediaType,org.springframework.http.MediaType)> -> _SOURCES_
<org.springframework.validation.AbstractBindingResult: java.lang.String[] getSuppressedFields()> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanDefinition: void setEnforceDestroyMethod(boolean)> -> _SINKS_
<org.springframework.orm.hibernate4.SessionHolder: void setTransaction(org.hibernate.Transaction)> -> _SINKS_
<org.springframework.web.util.WebUtils: java.util.Map getParametersStartingWith(javax.servlet.ServletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.cache.interceptor.NamedCacheResolver: void setCacheNames(java.util.Collection)> -> _SINKS_
<org.springframework.test.context.junit4.AbstractTransactionalJUnit4SpringContextTests: void setSqlScriptEncoding(java.lang.String)> -> _SINKS_
<org.springframework.expression.spel.ast.OpGE: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.oxm.support.AbstractMarshaller: java.lang.String getDefaultEncoding()> -> _SOURCES_
<org.springframework.core.Constants: java.util.Set getNamesForSuffix(java.lang.String)> -> _SOURCES_
<org.springframework.jms.config.AbstractJmsListenerEndpoint: java.lang.String getSelector()> -> _SOURCES_
<org.springframework.aop.support.NameMatchMethodPointcutAdvisor: void setMappedName(java.lang.String)> -> _SINKS_
<org.springframework.expression.spel.ast.StringLiteral: org.springframework.expression.TypedValue getLiteralValue()> -> _SOURCES_
<org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver: org.springframework.web.servlet.ModelAndView handleMissingServletRequestPartException(org.springframework.web.multipart.support.MissingServletRequestPartException,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)> -> _SINKS_
<org.springframework.jdbc.datasource.SingleConnectionDataSource: void setSuppressClose(boolean)> -> _CWE089__SINKS_
<org.springframework.web.servlet.mvc.condition.ParamsRequestCondition: java.util.Collection getContent()> -> _SOURCES_
<org.springframework.mail.MailSendException: void printStackTrace(java.io.PrintWriter)> -> _SINKS_
<org.springframework.context.support.GenericXmlApplicationContext: void load(java.lang.String[])> -> _SOURCES_
<org.springframework.cache.transaction.TransactionAwareCacheManagerProxy: void setTargetCacheManager(org.springframework.cache.CacheManager)> -> _SINKS_
<org.springframework.test.web.client.match.JsonPathRequestMatchers: org.springframework.test.web.client.RequestMatcher isNumber()> -> _SOURCES_
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.BeanWrapperImpl getNestedBeanWrapper(java.lang.String)> -> _SOURCES_
<org.springframework.security.authentication.dao.ReflectionSaltSource: java.lang.String getUserPropertyToUse()> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.DefaultTransportRequest: void setTimeoutScheduler(org.springframework.scheduling.TaskScheduler)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompClientSupport: org.springframework.scheduling.TaskScheduler getTaskScheduler()> -> _SOURCES_
<org.springframework.jms.listener.AbstractMessageListenerContainer: void setMessageSelector(java.lang.String)> -> _SINKS_
<org.springframework.context.event.EventExpressionRootObject: java.lang.Object[] getArgs()> -> _SOURCES_
<org.springframework.web.method.support.ModelAndViewContainer: java.lang.Object getView()> -> _SOURCES_
<org.springframework.ui.freemarker.FreeMarkerConfigurationFactory: freemarker.cache.TemplateLoader getTemplateLoaderForPath(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.view.jasperreports.JasperReportsPdfView: net.sf.jasperreports.engine.JRExporter createExporter()> -> _SOURCES_
<org.springframework.web.portlet.context.StaticPortletApplicationContext: void setPortletContext(javax.portlet.PortletContext)> -> _SINKS_
<org.springframework.core.convert.support.CharacterToNumberFactory: org.springframework.core.convert.converter.Converter getConverter(java.lang.Class)> -> _SOURCES_
<org.springframework.http.server.ServletServerHttpRequest: java.net.InetSocketAddress getRemoteAddress()> -> _SOURCES_
<org.springframework.cglib.core.ReflectUtils: java.lang.reflect.Method findMethod(java.lang.String,java.lang.ClassLoader)> -> _SINKS_
<org.springframework.cglib.core.AbstractClassGenerator: java.lang.String getClassName()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: java.util.Enumeration getParameterNames()> -> _SOURCES__CWE601_
<org.springframework.web.servlet.mvc.multiaction.AbstractUrlMethodNameResolver: void setUrlDecode(boolean)> -> _SOURCES__SINKS_
<org.springframework.util.LinkedCaseInsensitiveMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)> -> _SOURCES_
<org.springframework.web.accept.PathExtensionContentNegotiationStrategy: void setIgnoreUnknownExtensions(boolean)> -> _SINKS_
<org.springframework.beans.support.MutableSortDefinition: void setProperty(java.lang.String)> -> _SINKS_
<org.springframework.validation.MapBindingResult: java.lang.Object getTarget()> -> _SOURCES_
<org.springframework.jca.cci.object.SimpleRecordOperation: void execute(javax.resource.cci.Record,javax.resource.cci.Record)> -> _CWE078__SINKS_
<org.springframework.jca.cci.connection.TransactionAwareConnectionFactoryProxy: javax.resource.cci.Connection getConnection()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.remoting.rmi.RmiRegistryFactoryBean: java.lang.String getHost()> -> _SOURCES_
<org.springframework.remoting.support.RemotingSupport: java.lang.ClassLoader getBeanClassLoader()> -> _SOURCES_
<org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer: freemarker.template.Configuration getConfiguration()> -> _SOURCES_
<org.springframework.aop.aspectj.AspectJPointcutAdvisor: org.aopalliance.aop.Advice getAdvice()> -> _SOURCES_
<org.springframework.jms.core.JmsTemplate102: javax.jms.Session createSession(javax.jms.Connection)> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletResponse: java.util.Locale getLocale()> -> _SOURCES__CWE601_
<org.springframework.web.servlet.handler.SimpleUrlHandlerMapping: void setMappings(java.util.Properties)> -> _SINKS_
<org.springframework.web.context.support.ServletRequestHandledEvent: java.lang.String getDescription()> -> _SOURCES_
<org.springframework.jmx.export.metadata.ManagedResource: java.lang.String getLogFile()> -> _SOURCES_
<org.springframework.dao.support.PersistenceExceptionTranslationInterceptor: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.cache.ehcache.EhCacheFactoryBean: void setMaxElementsInMemory(int)> -> _SINKS_
<org.springframework.security.crypto.codec.Base64: byte[] getDecodabet(int)> -> _SOURCES_
<org.springframework.messaging.simp.config.AbstractMessageBrokerConfiguration: org.springframework.messaging.simp.config.ChannelRegistration getClientInboundChannelRegistration()> -> _SOURCES_
<org.springframework.jdbc.core.metadata.CallMetaDataContext: java.lang.String getSchemaName()> -> _CWE089__SOURCES_
<org.springframework.expression.spel.ast.Operator: org.springframework.expression.spel.ast.SpelNodeImpl getLeftOperand()> -> _SOURCES_
<org.springframework.web.portlet.context.PortletWebRequest: java.lang.String[] getParameterValues(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.jdbc.core.metadata.GenericTableMetaDataProvider: java.lang.String getSimpleQueryForGetGeneratedKey(java.lang.String,java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.beans.factory.support.AbstractBeanFactory: java.util.Set getPropertyEditorRegistrars()> -> _SOURCES_
<org.springframework.web.servlet.i18n.LocaleChangeInterceptor: void setHttpMethods(java.lang.String[])> -> _SINKS_
<org.springframework.jdbc.core.simple.SimpleJdbcCall: java.util.Map execute(java.util.Map)> -> _CWE089__SINKS_
<org.springframework.orm.hibernate5.HibernateTemplate: void setCheckWriteOperations(boolean)> -> _SINKS_
<org.springframework.security.config.http.HttpFirewallBeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.security.crypto.password.NoOpPasswordEncoder: java.lang.String encode(java.lang.CharSequence)> -> _SANITIZERS_
<org.springframework.web.client.RestTemplate: java.lang.Object getForObject(java.lang.String,java.lang.Class,java.lang.Object[])> -> _SOURCES__SINKS_
<org.springframework.scheduling.timer.ScheduledTimerTask: long getPeriod()> -> _SOURCES_
<org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry: java.lang.String getSelectorHeaderName()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletPreferences: void setValues(java.lang.String,java.lang.String[])> -> _CWE079__SINKS_
<org.springframework.web.bind.WebDataBinder: java.lang.String getFieldDefaultPrefix()> -> _SOURCES_
<org.springframework.test.context.support.AbstractContextLoader: java.lang.String[] getResourceSuffixes()> -> _SOURCES_
<org.springframework.test.context.testng.AbstractTransactionalTestNGSpringContextTests: void setDataSource(javax.sql.DataSource)> -> _SINKS_
<org.springframework.security.authentication.AnonymousAuthenticationProvider: void setKey(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.tags.form.FormTag: void setMethodParam(java.lang.String)> -> _SINKS_
<org.springframework.jmx.access.MBeanClientInterceptor: void setRefreshOnConnectFailure(boolean)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.mvc.condition.HeadersRequestCondition: org.springframework.web.servlet.mvc.condition.HeadersRequestCondition getMatchingCondition(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.orm.hibernate3.support.OpenSessionInViewInterceptor: void postHandle(org.springframework.web.context.request.WebRequest,org.springframework.ui.ModelMap)> -> _SINKS_
<org.springframework.expression.spel.ast.OpGT: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.jca.support.ResourceAdapterFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompHeaders: java.lang.Object getFirst(java.lang.Object)> -> _SOURCES_
<org.springframework.remoting.jaxws.JaxWsPortClientInterceptor: java.lang.Object getPortStub()> -> _SOURCES_
<org.springframework.aop.support.StaticMethodMatcherPointcutAdvisor: void setOrder(int)> -> _SINKS_
<org.springframework.core.Conventions: java.lang.String getVariableNameForReturnType(java.lang.reflect.Method,java.lang.Class,java.lang.Object)> -> _SOURCES_
<org.springframework.web.method.annotation.ModelMethodProcessor: void handleReturnValue(java.lang.Object,org.springframework.core.MethodParameter,org.springframework.web.method.support.ModelAndViewContainer,org.springframework.web.context.request.NativeWebRequest)> -> _SINKS_
<org.springframework.cache.support.AbstractCacheManager: org.springframework.cache.Cache getMissingCache(java.lang.String)> -> _SOURCES_
<org.springframework.security.core.authority.SimpleGrantedAuthority: java.lang.String getAuthority()> -> _SOURCES_
<org.springframework.test.web.servlet.DefaultMvcResult: void setResolvedException(java.lang.Exception)> -> _SINKS_
<org.springframework.core.type.classreading.MethodMetadataReadingVisitor: java.lang.String getMethodName()> -> _SOURCES_
<org.springframework.orm.hibernate3.LocalSessionFactoryBean: void setMappingResources(java.lang.String[])> -> _SINKS_
<org.springframework.jca.support.LocalConnectionFactoryBean: void setManagedConnectionFactory(javax.resource.spi.ManagedConnectionFactory)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.socket.client.standard.StandardWebSocketClient: void setUserProperties(java.util.Map)> -> _SINKS_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.util.concurrent.ListenableFuture doExecute(java.net.URI,org.springframework.http.HttpMethod,org.springframework.web.client.AsyncRequestCallback,org.springframework.web.client.ResponseExtractor)> -> _CWE078__SINKS_
<org.springframework.validation.beanvalidation.MessageSourceResourceBundleLocator: java.util.ResourceBundle getResourceBundle(java.util.Locale)> -> _SOURCES_
<org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder: java.lang.String encodePassword(java.lang.String,java.lang.Object)> -> _SANITIZERS_
<org.springframework.web.multipart.commons.CommonsFileUploadSupport: org.springframework.web.multipart.commons.CommonsMultipartFile createMultipartFile(org.apache.commons.fileupload.FileItem)> -> _SOURCES_
<org.springframework.jdbc.support.CustomSQLExceptionTranslatorRegistry: void registerTranslator(java.lang.String,org.springframework.jdbc.support.SQLExceptionTranslator)> -> _CWE089__SINKS_
<org.springframework.messaging.handler.DestinationPatternsMessageCondition: org.springframework.messaging.handler.DestinationPatternsMessageCondition getMatchingCondition(org.springframework.messaging.Message)> -> _SOURCES_
<org.springframework.web.servlet.view.ViewResolverComposite: java.util.List getViewResolvers()> -> _SOURCES_
<org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter: void setPrettyPrint(boolean)> -> _SINKS_
<org.springframework.scheduling.quartz.DelegatingJob: void execute(org.quartz.JobExecutionContext)> -> _SINKS_
<org.springframework.core.io.support.PropertiesLoaderUtils: java.util.Properties loadProperties(org.springframework.core.io.Resource)> -> _SOURCES_
<org.springframework.jms.core.JmsTemplate: java.lang.String getRequiredDefaultDestinationName()> -> _SOURCES_
<org.springframework.web.HttpRequestMethodNotSupportedException: java.lang.String[] getSupportedMethods()> -> _SOURCES_
<org.springframework.util.xml.SimpleNamespaceContext: java.util.Iterator getBoundPrefixes()> -> _SOURCES_
<org.springframework.messaging.support.MessageHeaderAccessor: org.springframework.messaging.support.MessageHeaderAccessor getAccessor(org.springframework.messaging.Message,java.lang.Class)> -> _SOURCES_
<org.springframework.beans.factory.config.BeanExpressionContext: java.lang.Object getObject(java.lang.String)> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletResponse: void setOutputStreamAccessAllowed(boolean)> -> _SINKS__CWE601_
<org.springframework.aop.aspectj.AbstractAspectJAdvice: void setAspectName(java.lang.String)> -> _SINKS_
<org.springframework.context.support.GenericGroovyApplicationContext: groovy.lang.MetaClass getMetaClass()> -> _SOURCES_
<org.springframework.messaging.simp.SimpMessagingTemplate: org.springframework.messaging.support.MessageHeaderInitializer getHeaderInitializer()> -> _SOURCES_
<org.springframework.aop.config.SimpleBeanFactoryAwareAspectInstanceFactory: java.lang.ClassLoader getAspectClassLoader()> -> _SOURCES_
<org.springframework.util.ObjectUtils: java.lang.String getIdentityHexString(java.lang.Object)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletRequest: java.lang.String getContextPath()> -> _SOURCES_
<org.springframework.orm.hibernate5.HibernateTransactionManager: void setEntityInterceptorBeanName(java.lang.String)> -> _SINKS_
<org.springframework.aop.aspectj.AspectJPointcutAdvisor: int getOrder()> -> _SOURCES_
<org.springframework.jms.listener.adapter.MessageListenerAdapter: javax.jms.Destination getResponseDestination(javax.jms.Message,javax.jms.Message,javax.jms.Session)> -> _SOURCES_
<org.springframework.jdbc.datasource.SimpleDriverDataSource: void setDriverClass(java.lang.Class)> -> _CWE089__SINKS_
<org.springframework.http.converter.BufferedImageHttpMessageConverter: boolean isReadable(org.springframework.http.MediaType)> -> _SOURCES_
<org.springframework.web.servlet.support.JspAwareRequestContext: javax.servlet.jsp.PageContext getPageContext()> -> _SOURCES_
<org.springframework.beans.PropertyMatches: java.lang.String[] getPossibleMatches()> -> _SOURCES_
<org.springframework.cglib.transform.AbstractClassLoader: int getFlags()> -> _SOURCES_
<org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.jms.listener.AbstractPollingMessageListenerContainer: javax.jms.MessageConsumer createConsumer(javax.jms.Session,javax.jms.Destination)> -> _SOURCES_
<org.springframework.http.client.HttpComponentsAsyncClientHttpResponse: java.io.InputStream getBody()> -> _SOURCES__CWE601_
<org.springframework.expression.spel.ast.PropertyOrFieldReference: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)> -> _SINKS_
<org.springframework.jms.connection.DelegatingConnectionFactory: javax.jms.TopicConnection createTopicConnection(java.lang.String,java.lang.String)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: void setPropertyEditorRegistrars(org.springframework.beans.PropertyEditorRegistrar[])> -> _SINKS_
<org.springframework.validation.DataBinder: void setIgnoreUnknownFields(boolean)> -> _SINKS_
<org.springframework.context.support.GenericApplicationContext: org.springframework.beans.factory.config.ConfigurableListableBeanFactory getBeanFactory()> -> _SOURCES_
<org.springframework.beans.propertyeditors.CustomNumberEditor: void setAsText(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletContext: java.lang.Object getAttribute(java.lang.String)> -> _SOURCES_
<org.springframework.orm.jdo.support.JdoDaoSupport: javax.jdo.PersistenceManager getPersistenceManager(boolean)> -> _SOURCES_
<org.springframework.security.config.method.ProtectPointcutPostProcessor: void setPointcutMap(java.util.Map)> -> _SINKS_
<org.springframework.asm.Type: org.springframework.asm.Type getType(java.lang.Class)> -> _SOURCES_
<org.springframework.security.config.annotation.web.socket.AbstractSecurityWebSocketMessageBrokerConfigurer: void setApplicationContext(org.springframework.context.ApplicationContext)> -> _SINKS_
<org.springframework.web.servlet.mvc.condition.ParamsRequestCondition: java.util.Collection parseExpressions(java.lang.String[])> -> _SOURCES_
<org.springframework.jdbc.core.support.JdbcBeanDefinitionReader: void setJdbcTemplate(org.springframework.jdbc.core.JdbcTemplate)> -> _CWE089__SINKS_
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: org.springframework.core.io.Resource[] getResources(java.lang.String)> -> _SOURCES_
<org.springframework.core.convert.Property: java.lang.reflect.Method getWriteMethod()> -> _SOURCES_
<org.springframework.orm.hibernate4.HibernateTemplate: java.lang.Object get(java.lang.String,java.io.Serializable,org.hibernate.LockMode)> -> _SOURCES__SINKS_
<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: int getAutowireMode(java.lang.String)> -> _SOURCES_
<org.springframework.web.util.UriComponents: java.lang.String sanitizeSource(java.lang.String)> -> _CWE078__SANITIZERS__CWE079__CWE089_
<org.springframework.test.context.support.GenericXmlContextLoader: java.lang.String getResourceSuffix()> -> _SOURCES_
<org.springframework.context.annotation.CommonAnnotationBeanPostProcessor: void setJndiFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.http.converter.ByteArrayHttpMessageConverter: void writeInternal(java.lang.Object,org.springframework.http.HttpOutputMessage)> -> _SINKS_
<org.springframework.orm.hibernate5.LocalSessionFactoryBean: org.hibernate.cfg.Configuration getConfiguration()> -> _SOURCES_
<org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler: void setCustomArgumentResolvers(java.util.List)> -> _SINKS_
<org.springframework.remoting.rmi.RmiRegistryFactoryBean: java.rmi.registry.Registry getRegistry(int)> -> _SOURCES_
<org.springframework.ejb.support.AbstractSessionBean: javax.ejb.SessionContext getSessionContext()> -> _SOURCES_
<org.springframework.web.portlet.DispatcherPortlet: org.springframework.web.portlet.HandlerAdapter getHandlerAdapter(java.lang.Object)> -> _SOURCES_
<org.springframework.messaging.core.GenericMessagingTemplate: long getSendTimeout()> -> _SOURCES_
<org.springframework.security.access.expression.method.MethodSecurityExpressionRoot: void setFilterObject(java.lang.Object)> -> _SINKS_
<org.springframework.web.portlet.FrameworkPortlet: java.lang.String getContextConfigLocation()> -> _SOURCES_
<org.springframework.validation.BindException: org.springframework.validation.ObjectError getGlobalError()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter: int getOrder()> -> _SOURCES_
<org.springframework.web.servlet.mvc.ServletForwardingController: void setBeanName(java.lang.String)> -> _SINKS_
<org.springframework.beans.factory.config.BeanReferenceFactoryBean: void setTargetBeanName(java.lang.String)> -> _SINKS_
<org.springframework.cache.annotation.CachingConfigurationSelector: java.lang.String[] getAspectJImports()> -> _SOURCES_
<org.springframework.aop.framework.JdkDynamicAopProxy: java.lang.Object getProxy(java.lang.ClassLoader)> -> _SOURCES_
<org.springframework.web.servlet.view.json.AbstractJackson2View: void setEncoding(com.fasterxml.jackson.core.JsonEncoding)> -> _SINKS_
<org.springframework.web.socket.sockjs.transport.session.WebSocketServerSockJsSession: java.net.URI getUri()> -> _SOURCES_
<org.springframework.web.context.request.ServletRequestAttributes: void setAttribute(java.lang.String,java.lang.Object,int)> -> _CWE079__SINKS_
<org.springframework.security.access.expression.AbstractSecurityExpressionHandler: void setExpressionParser(org.springframework.expression.ExpressionParser)> -> _SINKS_
<org.springframework.test.web.servlet.DefaultMvcResult: void setHandler(java.lang.Object)> -> _SINKS_
<org.springframework.oxm.jaxb.Jaxb2Marshaller: java.lang.String getContextPath()> -> _SOURCES_
<org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.cglib.core.DefaultNamingPolicy: java.lang.String getClassName(java.lang.String,java.lang.String,java.lang.Object,org.springframework.cglib.core.Predicate)> -> _SOURCES_
<org.springframework.cglib.util.ParallelSorterEmitter: java.lang.String getFieldName(int)> -> _SOURCES_
<org.springframework.web.socket.adapter.jetty.JettyWebSocketSession: org.eclipse.jetty.websocket.api.RemoteEndpoint getRemoteEndpoint()> -> _SOURCES_
<org.springframework.web.socket.handler.AbstractWebSocketHandler: void handleTransportError(org.springframework.web.socket.WebSocketSession,java.lang.Throwable)> -> _SINKS_
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: java.lang.ClassLoader getClassLoader()> -> _SOURCES_
<org.springframework.security.crypto.encrypt.HexEncodingTextEncryptor: java.lang.String encrypt(java.lang.String)> -> _SANITIZERS_
<org.springframework.transaction.support.TransactionTemplate: java.lang.Object execute(org.springframework.transaction.support.TransactionCallback)> -> _CWE078__SINKS_
<org.springframework.test.web.client.match.MockRestRequestMatchers: org.springframework.test.web.client.RequestMatcher header(java.lang.String,org.hamcrest.Matcher[])> -> _SOURCES_
<org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver: org.springframework.web.servlet.ModelAndView getModelAndView(java.lang.reflect.Method,java.lang.Object,org.springframework.web.context.request.ServletWebRequest)> -> _SOURCES__SINKS_
<org.springframework.web.socket.sockjs.client.UndertowXhrTransport: org.springframework.http.ResponseEntity executeSendRequestInternal(java.net.URI,org.springframework.http.HttpHeaders,org.springframework.web.socket.TextMessage)> -> _CWE078__SINKS_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setAsyncRequestTimeout(long)> -> _SINKS_
<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: void setServicePostProcessors(org.springframework.remoting.jaxrpc.JaxRpcServicePostProcessor[])> -> _SINKS_
<org.springframework.cglib.transform.AbstractTransformTask: int getFlags()> -> _SOURCES_
<org.springframework.orm.ibatis.SqlMapClientFactoryBean: void setSqlMapClientProperties(java.util.Properties)> -> _SINKS_
<org.springframework.util.xml.XMLEventStreamReader: java.lang.String getAttributeValue(int)> -> _SOURCES_
<org.springframework.util.PropertyPlaceholderHelper: java.lang.String parseStringValue(java.lang.String,org.springframework.util.PropertyPlaceholderHelper$PlaceholderResolver,java.util.Set)> -> _SOURCES__SINKS_
<org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager: javax.sql.DataSource getDefaultDataSource()> -> _SOURCES_
<org.springframework.http.client.AbstractClientHttpRequest: java.io.OutputStream getBody()> -> _SOURCES_
<org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor: void setTransactionAttributeSource(org.springframework.transaction.interceptor.TransactionAttributeSource)> -> _SINKS_
<org.springframework.orm.hibernate3.HibernateAccessor: void setEntityInterceptor(org.hibernate.Interceptor)> -> _SINKS_
<org.springframework.oxm.castor.CastorMarshaller: java.lang.Object unmarshalSaxReader(org.xml.sax.XMLReader,org.xml.sax.InputSource)> -> _SOURCES_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: org.springframework.jdbc.core.PreparedStatementCreator getPreparedStatementCreator(java.lang.String,org.springframework.jdbc.core.namedparam.SqlParameterSource)> -> _CWE089__SOURCES__SINKS_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: void setOnmouseout(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.beans.factory.support.MethodOverride: boolean isOverloaded()> -> _SOURCES_
<org.springframework.messaging.simp.annotation.support.SubscriptionMethodReturnValueHandler: void setHeaderInitializer(org.springframework.messaging.support.MessageHeaderInitializer)> -> _SINKS_
<org.springframework.web.servlet.tags.UrlTag: void setJavaScriptEscape(boolean)> -> _SINKS_
<org.springframework.dao.IncorrectResultSizeDataAccessException: int getExpectedSize()> -> _SOURCES_
<org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver: void setParamName(java.lang.String)> -> _SINKS_
<org.springframework.web.portlet.bind.MissingPortletRequestParameterException: java.lang.String getParameterName()> -> _SOURCES_
<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: void setInitMethod(java.lang.String)> -> _SINKS_
<org.springframework.aop.framework.adapter.ThrowsAdviceInterceptor: java.lang.reflect.Method getExceptionHandler(java.lang.Throwable)> -> _SOURCES_
<org.springframework.web.servlet.resource.GzipResourceResolver: org.springframework.core.io.Resource resolveResourceInternal(javax.servlet.http.HttpServletRequest,java.lang.String,java.util.List,org.springframework.web.servlet.resource.ResourceResolverChain)> -> _SINKS_
<org.springframework.security.config.annotation.authentication.configurers.userdetails.AbstractDaoAuthenticationConfigurer: void configure(org.springframework.security.config.'annotation'.SecurityBuilder)> -> _CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.cglib.core.ReflectUtils: org.springframework.cglib.core.MethodInfo getMethodInfo(java.lang.reflect.Member,int)> -> _SOURCES_
<org.springframework.web.portlet.mvc.annotation.AnnotationMethodHandlerAdapter: void setSynchronizeOnSession(boolean)> -> _SINKS_
<org.springframework.web.socket.config.annotation.ServletWebSocketHandlerRegistry: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)> -> _SINKS_
<org.springframework.web.multipart.commons.CommonsFileUploadSupport: org.apache.commons.fileupload.FileUpload prepareFileUpload(java.lang.String)> -> _SOURCES_
<org.springframework.orm.hibernate3.LocalSessionFactoryBean: void setEntityInterceptor(org.hibernate.Interceptor)> -> _SINKS_
<org.springframework.http.converter.json.MappingJacksonInputMessage: java.io.InputStream getBody()> -> _SOURCES_
<org.springframework.instrument.InstrumentationSavingAgent: java.lang.instrument.Instrumentation getInstrumentation()> -> _SOURCES_
<org.springframework.orm.hibernate3.support.OpenSessionInViewInterceptor: java.lang.String getParticipateAttributeName()> -> _SOURCES_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.util.concurrent.ListenableFuture put(java.lang.String,org.springframework.http.HttpEntity,java.util.Map)> -> _SINKS_
<org.springframework.expression.spel.ast.InlineMap: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.orm.hibernate4.HibernateTemplate: java.lang.String getQueryCacheRegion()> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.session.PollingSockJsSession: void writeFrame(org.springframework.web.socket.sockjs.frame.SockJsFrame)> -> _SINKS_
<org.springframework.web.socket.sockjs.transport.handler.DefaultSockJsService: void setServletContext(javax.servlet.ServletContext)> -> _SINKS_
<org.springframework.web.socket.adapter.AbstractWebSocketSession: void sendMessage(org.springframework.web.socket.WebSocketMessage)> -> _SINKS_
<org.springframework.jms.core.JmsMessagingTemplate: java.lang.Object convertSendAndReceive(java.lang.String,java.lang.Object,java.lang.Class)> -> _SINKS_
<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.MediaType getMediaType(org.springframework.core.io.Resource)> -> _SOURCES_
<org.springframework.context.support.DefaultMessageSourceResolvable: java.lang.Object[] getArguments()> -> _SOURCES_
<org.springframework.test.context.ContextConfigurationAttributes: java.lang.Class getDeclaringClass()> -> _SOURCES_
<org.springframework.web.servlet.view.xslt.XsltView: void setUriResolver(javax.xml.transform.URIResolver)> -> _SINKS_
<org.springframework.jmx.export.metadata.ManagedMetric: void setUnit(java.lang.String)> -> _SINKS_
<org.springframework.util.MimeType: java.lang.String getType()> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompHeaders: void setPasscode(java.lang.String)> -> _SINKS_
<org.springframework.util.xml.AbstractXMLReader: org.xml.sax.EntityResolver getEntityResolver()> -> _SOURCES_
<org.springframework.scheduling.concurrent.ExecutorConfigurationSupport: void setAwaitTerminationSeconds(int)> -> _SINKS_
<org.springframework.core.annotation.AbstractAliasAwareAnnotationAttributeExtractor: java.lang.Object getAnnotatedElement()> -> _SOURCES_
<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.framework.AdvisedSupport getConfigurationOnlyCopy()> -> _SOURCES_
<org.springframework.validation.BindException: int getErrorCount()> -> _SOURCES_
<org.springframework.web.servlet.support.RequestContext: java.lang.String getMessage(org.springframework.context.MessageSourceResolvable)> -> _CWE079__SOURCES_
<org.springframework.mail.javamail.JavaMailSenderImpl: void setDefaultEncoding(java.lang.String)> -> _SINKS_
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapValueReturnType(java.lang.reflect.Method,int)> -> _SOURCES_
<org.springframework.cglib.transform.MethodFilterTransformer: void setTarget(org.springframework.asm.ClassVisitor)> -> _SINKS_
<org.springframework.format.datetime.standard.Jsr310DateTimeFormatAnnotationFormatterFactory: org.springframework.format.Printer getPrinter(org.springframework.format.'annotation'.DateTimeFormat,java.lang.Class)> -> _SOURCES_
<org.springframework.core.task.support.TaskExecutorAdapter: void doExecute(java.util.concurrent.Executor,org.springframework.core.task.TaskDecorator,java.lang.Runnable)> -> _CWE078__SINKS_
<org.springframework.util.xml.StaxUtils: javax.xml.stream.XMLStreamReader createEventStreamReader(javax.xml.stream.XMLEventReader)> -> _SOURCES_
<org.springframework.remoting.support.SimpleHttpServerFactoryBean: void setHostname(java.lang.String)> -> _SINKS_
<org.springframework.cache.jcache.interceptor.DefaultJCacheOperationSource: void setKeyGenerator(org.springframework.cache.interceptor.KeyGenerator)> -> _SINKS_
<org.springframework.web.servlet.view.xml.MappingJackson2XmlView: void setModelKey(java.lang.String)> -> _SINKS_
<org.springframework.core.env.AbstractPropertyResolver: java.lang.String getRequiredProperty(java.lang.String)> -> _SOURCES_
<org.springframework.orm.hibernate4.LocalSessionFactoryBuilder: org.springframework.orm.hibernate4.LocalSessionFactoryBuilder setEntityTypeFilters(org.springframework.core.type.filter.TypeFilter[])> -> _SINKS_
<org.springframework.http.client.AbstractAsyncClientHttpRequest: org.springframework.util.concurrent.ListenableFuture executeAsync()> -> _CWE078__SINKS_
<org.springframework.web.socket.sockjs.support.AbstractSockJsService: java.lang.String getSockJsClientLibraryUrl()> -> _SOURCES_
<org.springframework.web.multipart.commons.CommonsMultipartFile: void transferTo(java.io.File)> -> _SINKS_
<org.springframework.web.servlet.tags.form.SelectTag: int writeTagContent(org.springframework.web.servlet.tags.form.TagWriter)> -> _SINKS_
<org.springframework.mock.web.portlet.MockClientDataRequest: java.lang.String getCharacterEncoding()> -> _SOURCES_
<org.springframework.jms.core.JmsMessagingTemplate: void convertAndSend(java.lang.String,java.lang.Object,org.springframework.messaging.core.MessagePostProcessor)> -> _SINKS_
<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: void setValidator(org.springframework.validation.Validator)> -> _SINKS_
<org.springframework.messaging.converter.MappingJackson2MessageConverter: void setObjectMapper(com.fasterxml.jackson.databind.ObjectMapper)> -> _SINKS_
<org.springframework.web.socket.WebSocketHttpHeaders: void setSecWebSocketVersion(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.oxm.xstream.XStreamMarshaller: void setImplicitCollections(java.util.Map)> -> _SINKS_
<org.springframework.web.servlet.view.jasperreports.AbstractJasperReportsView: net.sf.jasperreports.engine.JasperReport getReport()> -> _SOURCES_
<org.springframework.web.servlet.tags.MessageTag: java.lang.String getNoSuchMessageExceptionDescription(org.springframework.context.NoSuchMessageException)> -> _SOURCES_
<org.springframework.jdbc.core.metadata.GenericTableMetaDataProvider: void setGetGeneratedKeysSupported(boolean)> -> _CWE089__SINKS_
<org.springframework.cglib.core.ReflectUtils: java.beans.PropertyDescriptor[] getPropertiesHelper(java.lang.Class,boolean,boolean)> -> _SOURCES_
<org.springframework.orm.jpa.vendor.OpenJpaVendorAdapter: java.lang.Class getEntityManagerInterface()> -> _SOURCES_
<org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter: com.fasterxml.jackson.core.JsonEncoding getJsonEncoding(org.springframework.http.MediaType)> -> _SOURCES_
<org.springframework.beans.factory.support.ManagedSet: java.lang.Object getSource()> -> _SOURCES_
<org.springframework.asm.commons.Method: org.springframework.asm.Type[] getArgumentTypes()> -> _SOURCES_
<org.springframework.orm.jpa.JpaAccessor: void setEntityManager(javax.persistence.EntityManager)> -> _SINKS_
<org.springframework.beans.BeanWrapperImpl: void setWrappedInstance(java.lang.Object)> -> _SINKS_
<org.springframework.beans.factory.xml.XmlBeanDefinitionReader: int getValidationModeForResource(org.springframework.core.io.Resource)> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.ModelAndViewMethodReturnValueHandler: void setRedirectPatterns(java.lang.String[])> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompClientSupport: void setReceiptTimeLimit(long)> -> _SINKS_
<org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor: javax.persistence.EntityManager getPersistenceContext(java.lang.String,boolean)> -> _SOURCES_
<org.springframework.aop.framework.ProxyFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.jms.core.JmsMessagingTemplate: org.springframework.messaging.Message doSendAndReceive(java.lang.String,org.springframework.messaging.Message)> -> _SINKS_
<org.springframework.jms.config.AbstractJmsListenerContainerFactory: void setMessageConverter(org.springframework.jms.support.converter.MessageConverter)> -> _SINKS_
<org.springframework.web.context.request.async.StandardServletAsyncWebRequest: void setTimeout(java.lang.Long)> -> _CWE079__SINKS_
<org.springframework.mock.web.portlet.MockPortletSession: java.util.Map getAttributeMap()> -> _SOURCES_
<org.springframework.validation.DefaultMessageCodesResolver: java.lang.String getPrefix()> -> _SOURCES_
<org.springframework.http.client.support.ProxyFactoryBean: void setType(java.net.Proxy$Type)> -> _SINKS_
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getCollectionType(java.lang.Class)> -> _SOURCES_
<org.springframework.web.servlet.config.InterceptorsBeanDefinitionParser: org.springframework.beans.factory.support.ManagedList getIncludePatterns(org.w3c.dom.Element,java.lang.String)> -> _SOURCES_
<org.springframework.web.socket.config.WebSocketMessageBrokerStats: void setOutboundChannelExecutor(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor)> -> _SINKS_
<org.springframework.mock.web.portlet.MockStateAwareResponse: void setWindowState(javax.portlet.WindowState)> -> _SINKS__CWE601_
<org.springframework.web.servlet.view.xslt.XsltView: void setOutputProperties(java.util.Properties)> -> _SINKS_
<org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider: void setUserCache(org.springframework.security.core.userdetails.UserCache)> -> _SINKS__CWE862_
<org.springframework.web.context.ContextLoaderListener: org.springframework.web.context.ContextLoader getContextLoader()> -> _SOURCES_
<org.springframework.core.convert.ConversionFailedException: org.springframework.core.convert.TypeDescriptor getSourceType()> -> _SOURCES_
<org.springframework.util.xml.AbstractStaxXMLReader: boolean getFeature(java.lang.String)> -> _SOURCES_
<org.springframework.beans.factory.support.BeanDefinitionDefaults: void setLazyInit(boolean)> -> _SINKS_
<org.springframework.messaging.simp.SimpMessageHeaderAccessor: void setUser(java.security.Principal)> -> _SINKS_
<org.springframework.web.servlet.view.tiles3.SpringWildcardServletTilesApplicationContext: org.apache.tiles.request.ApplicationResource getResource(org.apache.tiles.request.ApplicationResource,java.util.Locale)> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.AbstractClientSockJsSession: org.springframework.http.HttpHeaders getHandshakeHeaders()> -> _SOURCES_
<org.springframework.jms.core.JmsTemplate: org.springframework.jms.support.converter.MessageConverter getRequiredMessageConverter()> -> _SOURCES_
<org.springframework.web.servlet.view.jasperreports.ConfigurableJasperReportsView: void setUseWriter(boolean)> -> _SINKS_
<org.springframework.core.io.ClassRelativeResourceLoader: org.springframework.core.io.Resource getResourceByPath(java.lang.String)> -> _SOURCES_
<org.springframework.jdbc.core.namedparam.EmptySqlParameterSource: java.lang.Object getValue(java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.web.servlet.tags.form.SelectTag: void setItemLabel(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.MockServletContext: void setServletContextName(java.lang.String)> -> _SINKS_
<org.springframework.orm.jpa.persistenceunit.MutablePersistenceUnitInfo: void setProperties(java.util.Properties)> -> _SINKS_
<org.springframework.orm.hibernate5.HibernateTemplate: int getFetchSize()> -> _SOURCES_
<org.springframework.jdbc.core.namedparam.ParsedSql: int getUnnamedParameterCount()> -> _CWE089__SOURCES_
<org.springframework.web.socket.sockjs.client.AbstractClientSockJsSession: java.lang.Runnable getTimeoutTask()> -> _SOURCES_
<org.springframework.jms.listener.adapter.AbstractAdaptableMessageListener: org.springframework.jms.support.destination.DestinationResolver getDestinationResolver()> -> _SOURCES_
<org.springframework.transaction.support.DefaultTransactionDefinition: void setName(java.lang.String)> -> _SINKS_
<org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession: void sendHeartbeat()> -> _SINKS_
<org.springframework.util.comparator.CompoundComparator: void setComparator(int,java.util.Comparator)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompHeaderAccessor: void setDestination(java.lang.String)> -> _SINKS_
<org.springframework.jms.support.converter.MappingJackson2MessageConverter: void setEncodingPropertyName(java.lang.String)> -> _SINKS_
<org.springframework.web.bind.ServletRequestUtils: java.lang.Boolean getBooleanParameter(javax.servlet.ServletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.web.multipart.commons.CommonsMultipartFile: java.lang.String getName()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder: org.springframework.web.method.support.CompositeUriComponentsContributor getConfiguredUriComponentsContributor()> -> _SOURCES_
<org.springframework.test.util.XpathExpectationsHelper: javax.xml.xpath.XPathExpression getXpathExpression()> -> _SOURCES_
<org.springframework.jms.config.DefaultJmsListenerContainerFactory: void setTransactionManager(org.springframework.transaction.PlatformTransactionManager)> -> _SINKS_
<org.springframework.web.servlet.DispatcherServlet: javax.servlet.http.HttpServletRequest checkMultipart(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.RequestMappingInfo: int compareTo(org.springframework.web.servlet.mvc.method.RequestMappingInfo,javax.servlet.http.HttpServletRequest)> -> _SINKS_
<org.springframework.mail.javamail.MimeMessageHelper: void setMimeMultiparts(javax.mail.internet.MimeMultipart,javax.mail.internet.MimeMultipart)> -> _SINKS_
<org.springframework.web.socket.sockjs.client.WebSocketClientSockJsSession: java.net.InetSocketAddress getLocalAddress()> -> _SOURCES_
<org.springframework.web.socket.WebSocketHttpHeaders: java.lang.String getFirst(java.lang.String)> -> _SOURCES_
<org.springframework.security.access.expression.SecurityExpressionRoot: void setRoleHierarchy(org.springframework.security.access.hierarchicalroles.RoleHierarchy)> -> _SINKS_
<org.springframework.mock.web.HeaderValueHolder: void setValue(java.lang.Object)> -> _SINKS_
<org.springframework.web.client.RestTemplate: java.lang.Object execute(java.net.URI,org.springframework.http.HttpMethod,org.springframework.web.client.RequestCallback,org.springframework.web.client.ResponseExtractor)> -> _SINKS_
<org.springframework.orm.hibernate4.HibernateTemplate: int bulkUpdate(java.lang.String,java.lang.Object[])> -> _SINKS_
<org.springframework.web.util.UrlPathHelper: void setDefaultEncoding(java.lang.String)> -> _SINKS_
<org.springframework.http.converter.FormHttpMessageConverter: void writeEnd(java.io.OutputStream,byte[])> -> _SINKS_
<org.springframework.ui.velocity.VelocityEngineFactory: void setResourceLoader(org.springframework.core.io.ResourceLoader)> -> _SOURCES__SINKS_
<org.springframework.web.accept.PathExtensionContentNegotiationStrategy: void setUseJaf(boolean)> -> _SINKS_
<org.springframework.web.client.RestTemplate: org.springframework.http.ResponseEntity exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,java.lang.Class,java.lang.Object[])> -> _SINKS_
<org.springframework.test.context.transaction.TransactionalTestExecutionListener: int getOrder()> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getMessageConverters()> -> _SOURCES_
<org.springframework.web.socket.sockjs.frame.SockJsFrame: java.lang.String getFrameData()> -> _SOURCES_
<org.springframework.orm.jdo.PersistenceManagerFactoryUtils: javax.jdo.PersistenceManager getPersistenceManager(javax.jdo.PersistenceManagerFactory,boolean)> -> _SOURCES_
<org.springframework.remoting.support.RemoteInvocationBasedAccessor: org.springframework.remoting.support.RemoteInvocation createRemoteInvocation(org.aopalliance.intercept.MethodInvocation)> -> _SOURCES_
<org.springframework.cglib.reflect.FastClass: org.springframework.cglib.reflect.FastConstructor getConstructor(java.lang.Class[])> -> _SOURCES_
<org.springframework.scripting.support.ResourceScriptSource: org.springframework.core.io.Resource getResource()> -> _SOURCES_
<org.springframework.web.context.support.AnnotationConfigWebApplicationContext: org.springframework.beans.factory.support.BeanNameGenerator getBeanNameGenerator()> -> _SOURCES_
<org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper: java.util.Map getAttributes2grantedAuthoritiesMap()> -> _SOURCES_
<org.springframework.cglib.beans.BulkBeanException: java.lang.Throwable getCause()> -> _SOURCES_
<org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor: void writeRequestBody(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration,java.net.HttpURLConnection,java.io.ByteArrayOutputStream)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletRequest: java.lang.String getScheme()> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.handler.HtmlFileTransportHandler: org.springframework.web.socket.sockjs.transport.session.StreamingSockJsSession createSession(java.lang.String,org.springframework.web.socket.WebSocketHandler,java.util.Map)> -> _CWE079__SINKS_
<org.springframework.jmx.export.MBeanExporter: void replaceNotificationListenerBeanNameKeysIfNecessary(java.lang.String,javax.management.ObjectName)> -> _SINKS_
<org.springframework.mock.web.MockPageContext: javax.servlet.jsp.el.VariableResolver getVariableResolver()> -> _SOURCES_
<org.springframework.jms.listener.SimpleMessageListenerContainer: void setConcurrentConsumers(int)> -> _SINKS_
<org.springframework.security.core.token.SecureRandomFactoryBean: void setAlgorithm(java.lang.String)> -> _SINKS_
<org.springframework.web.socket.adapter.standard.StandardWebSocketHandlerAdapter: void handleTextMessage(javax.websocket.Session,java.lang.String,boolean)> -> _SINKS_
<org.springframework.context.annotation.ScopeMetadata: void setScopedProxyMode(org.springframework.context.'annotation'.ScopedProxyMode)> -> _SINKS_
<org.springframework.web.client.HttpStatusCodeException: org.springframework.http.HttpStatus getStatusCode()> -> _SOURCES_
<org.springframework.orm.hibernate5.LocalSessionFactoryBean: void setMultiTenantConnectionProvider(org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.view.UrlBasedViewResolver: java.lang.Boolean getExposePathVariables()> -> _SOURCES_
<org.springframework.web.cors.DefaultCorsProcessor: java.lang.String checkOrigin(org.springframework.web.cors.CorsConfiguration,java.lang.String)> -> _CWE079__SINKS_
<org.springframework.test.context.web.WebDelegatingSmartContextLoader: org.springframework.test.context.SmartContextLoader getAnnotationConfigLoader()> -> _SOURCES_
<org.springframework.scripting.groovy.GroovyScriptEvaluator: void setCompilationCustomizers(org.codehaus.groovy.control.customizers.CompilationCustomizer[])> -> _SINKS_
<org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory: void setDatabaseConfigurer(org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseConfigurer)> -> _CWE089__SINKS_
<org.springframework.web.socket.sockjs.client.XhrClientSockJsSession: int getTextMessageSizeLimit()> -> _SOURCES_
<org.springframework.cache.ehcache.EhCacheCache: net.sf.ehcache.Ehcache getNativeCache()> -> _SOURCES_
<org.springframework.aop.framework.autoproxy.target.AbstractBeanFactoryBasedTargetSourceCreator: org.springframework.aop.TargetSource getTargetSource(java.lang.Class,java.lang.String)> -> _SOURCES_
<org.springframework.web.portlet.mvc.annotation.AnnotationMethodHandlerAdapter: org.springframework.web.portlet.ModelAndView handleResource(javax.portlet.ResourceRequest,javax.portlet.ResourceResponse,java.lang.Object)> -> _SINKS_
<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder header(java.lang.String,java.lang.Object[])> -> _SOURCES_
<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder setAutowireMode(int)> -> _SINKS_
<org.springframework.expression.ExpressionException: int getPosition()> -> _SOURCES_
<org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource: org.springframework.jmx.export.metadata.ManagedOperation getManagedOperation(java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.web.socket.sockjs.SockJsException: java.lang.String getSockJsSessionId()> -> _SOURCES_
<org.springframework.scheduling.quartz.SimpleTriggerFactoryBean: org.quartz.SimpleTrigger getObject()> -> _SOURCES_
<org.springframework.jdbc.object.SqlQuery: java.util.List execute(java.lang.Object[],java.util.Map)> -> _CWE089__SINKS_
<org.springframework.aop.aspectj.annotation.InstantiationModelAwarePointcutAdvisorImpl: int getOrder()> -> _SOURCES_
<org.springframework.mock.web.portlet.ServletWrappingPortletContext: java.util.Enumeration getAttributeNames()> -> _SOURCES_
<org.springframework.jdbc.datasource.lookup.MapDataSourceLookup: java.util.Map getDataSources()> -> _CWE089__SOURCES_
<org.springframework.core.convert.support.StringToArrayConverter: java.util.Set getConvertibleTypes()> -> _SOURCES_
<org.springframework.web.cors.UrlBasedCorsConfigurationSource: java.util.Map getCorsConfigurations()> -> _SOURCES_
<org.springframework.web.portlet.ModelAndView: void setViewName(java.lang.String)> -> _SINKS_
<org.springframework.aop.framework.AdvisedSupport: java.util.List getAdvisorsInternal()> -> _SOURCES_
<org.springframework.jms.config.SimpleJmsListenerEndpoint: java.lang.StringBuilder getEndpointDescription()> -> _SOURCES_
<org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler: long[] getHeartbeatValue()> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler: void setHeaderInitializer(org.springframework.messaging.support.MessageHeaderInitializer)> -> _SINKS_
<org.springframework.web.socket.server.standard.ServerEndpointExporter: void setServerContainer(javax.websocket.server.ServerContainer)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompHeaderAccessor: void setAck(java.lang.String)> -> _SINKS_
<org.springframework.orm.hibernate4.HibernateTemplate: void setSessionFactory(org.hibernate.SessionFactory)> -> _SINKS_
<org.springframework.orm.hibernate3.support.OpenSessionInViewFilter: void setSessionFactoryBeanName(java.lang.String)> -> _SINKS_
<org.springframework.jms.listener.adapter.AbstractAdaptableMessageListener: void setDefaultResponseQueueName(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter: org.springframework.web.servlet.mvc.'annotation'.AnnotationMethodHandlerAdapter$ServletHandlerMethodResolver getMethodResolver(java.lang.Object)> -> _SOURCES_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: java.sql.Timestamp getTimestamp(int,java.util.Calendar)> -> _CWE089__SOURCES_
<org.springframework.web.socket.messaging.SubProtocolWebSocketHandler: java.lang.String getStatsInfo()> -> _SOURCES_
<org.springframework.core.env.AbstractEnvironment: java.lang.String[] getActiveProfiles()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletURL: void setPortletMode(javax.portlet.PortletMode)> -> _SINKS_
<org.springframework.jms.remoting.JmsInvokerClientInterceptor: long getReceiveTimeout()> -> _SOURCES_
<org.springframework.messaging.simp.config.StompBrokerRelayRegistration: org.springframework.messaging.simp.config.StompBrokerRelayRegistration setSystemPasscode(java.lang.String)> -> _SINKS_
<org.springframework.jca.support.ResourceAdapterFactoryBean: void setResourceAdapter(javax.resource.spi.ResourceAdapter)> -> _SINKS_
<org.springframework.ui.context.support.SimpleTheme: java.lang.String getName()> -> _SOURCES_
<org.springframework.validation.DataBinder: void setRequiredFields(java.lang.String[])> -> _SINKS_
<org.springframework.orm.jdo.JdoTemplate: java.lang.Object getObjectById(java.lang.Class,java.lang.Object)> -> _SOURCES_
<org.springframework.jdbc.support.JdbcUtils: void closeConnection(java.sql.Connection)> -> _CWE306__CWE089__AUTHENTICATIONS_TO_LOW__CWE862_
<org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap: java.util.Map getFlashAttributes()> -> _SOURCES_
<org.springframework.test.web.servlet.result.ModelResultMatchers: int getErrorCount(org.springframework.ui.ModelMap)> -> _SOURCES_
<org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor getMapKeyTypeDescriptor()> -> _SOURCES_
<org.springframework.orm.ibatis.support.SqlMapClientDaoSupport: void setSqlMapClient(com.ibatis.sqlmap.client.SqlMapClient)> -> _SINKS_
<org.springframework.web.servlet.view.tiles2.SimpleSpringPreparerFactory: org.apache.tiles.preparer.ViewPreparer getPreparer(java.lang.String,org.springframework.web.context.WebApplicationContext)> -> _SOURCES_
<org.springframework.beans.factory.config.ProviderCreatingFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompHeaderAccessor: java.lang.String getLogin()> -> _CWE306__SOURCES_
<org.springframework.jms.connection.SingleConnectionFactory: javax.jms.TopicConnection createTopicConnection()> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.beans.NotWritablePropertyException: java.lang.String[] getPossibleMatches()> -> _SOURCES_
<org.springframework.context.support.AbstractApplicationContext: int getBeanDefinitionCount()> -> _SOURCES_
<org.springframework.messaging.converter.StringMessageConverter: java.nio.charset.Charset getContentTypeCharset(org.springframework.util.MimeType)> -> _SOURCES_
<org.springframework.security.access.intercept.AfterInvocationProviderManager: void setProviders(java.util.List)> -> _SINKS_
<org.springframework.web.servlet.mvc.condition.RequestConditionHolder: org.springframework.web.servlet.mvc.condition.RequestConditionHolder combine(org.springframework.web.servlet.mvc.condition.RequestConditionHolder)> -> _SINKS_
<org.springframework.web.servlet.support.RequestContext: org.springframework.validation.Errors getErrors(java.lang.String)> -> _SOURCES_
<org.springframework.remoting.rmi.RmiServiceExporter: void setRegistryHost(java.lang.String)> -> _SINKS_
<org.springframework.mail.javamail.MimeMailMessage: void setTo(java.lang.String[])> -> _SINKS_
<org.springframework.validation.FieldError: java.lang.String getField()> -> _SOURCES_
<org.springframework.web.portlet.context.PortletContextResource: java.lang.String getDescription()> -> _SOURCES_
<org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder timeZone(java.lang.String)> -> _SINKS_
<org.springframework.http.converter.json.GsonHttpMessageConverter: com.google.gson.reflect.TypeToken getTypeToken(java.lang.reflect.Type)> -> _SOURCES_
<org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler: void setCacheLimit(java.lang.Integer)> -> _SINKS_
<org.springframework.jms.config.JcaListenerContainerParser: org.springframework.beans.factory.config.BeanDefinition parseContainer(org.w3c.dom.Element,org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.jms.core.JmsTemplate: void convertAndSend(java.lang.Object)> -> _SINKS_
<org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter: java.lang.Object readJavaType(com.fasterxml.jackson.databind.JavaType,org.springframework.http.HttpInputMessage)> -> _SOURCES_
<org.springframework.web.servlet.view.document.AbstractExcelView: boolean generatesDownloadContent()> -> _SOURCES_
<org.springframework.jms.remoting.JmsInvokerServiceExporter: void setMessageConverter(org.springframework.jms.support.converter.MessageConverter)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompHeaders: java.lang.String getSession()> -> _SOURCES_
<org.springframework.test.web.servlet.request.MockMvcRequestBuilders: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder get(java.lang.String,java.lang.Object[])> -> _SOURCES_
<org.springframework.test.web.servlet.htmlunit.MockMvcWebConnection: org.springframework.mock.web.MockHttpServletResponse getResponse(org.springframework.test.web.servlet.RequestBuilder)> -> _CWE079__SOURCES_
<org.springframework.test.web.servlet.htmlunit.DelegatingWebConnection: void close()> -> _AUTHENTICATIONS_TO_LOW_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: java.math.BigDecimal getBigDecimal(java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession: java.net.URI getUri()> -> _SOURCES_
<org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler: int getPhase()> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.handler.XhrStreamingTransportHandler: org.springframework.http.MediaType getContentType()> -> _SOURCES_
<org.springframework.format.datetime.standard.DateTimeContext: void setTimeZone(java.time.ZoneId)> -> _SINKS_
<org.springframework.cglib.reflect.MethodDelegate: java.lang.Object getTarget()> -> _SOURCES_
<org.springframework.web.servlet.FlashMap: java.lang.String getTargetRequestPath()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: java.util.Enumeration getHeaders(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.context.expression.BeanFactoryAccessor: java.lang.Class[] getSpecificTargetClasses()> -> _SOURCES_
<org.springframework.mock.web.MockServletContext: java.util.Set getEffectiveSessionTrackingModes()> -> _SOURCES_
<org.springframework.core.annotation.AnnotatedElementUtils: java.util.Set getMetaAnnotationTypes(java.lang.reflect.AnnotatedElement,java.lang.Class)> -> _SOURCES_
<org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler: org.springframework.web.socket.WebSocketHandler getWebSocketHandler()> -> _SOURCES_
<org.springframework.web.servlet.view.tiles2.TilesConfigurer: void setUseMutableTilesContainer(boolean)> -> _SINKS_
<org.springframework.web.servlet.tags.form.OptionWriter: void renderOption(org.springframework.web.servlet.tags.form.TagWriter,java.lang.Object,java.lang.Object,java.lang.Object)> -> _SINKS_
<org.springframework.security.provisioning.InMemoryUserDetailsManager: void setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.socket.sockjs.transport.handler.AbstractHttpSendingTransportHandler: java.lang.String getCallbackParam(org.springframework.http.server.ServerHttpRequest)> -> _CWE079__SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setResponseBodyAdvice(java.util.List)> -> _SINKS_
<org.springframework.jdbc.object.RdbmsOperation: void setResultSetType(int)> -> _CWE089__SINKS_
<org.springframework.transaction.interceptor.DelegatingTransactionAttribute: int getIsolationLevel()> -> _SOURCES_
<org.springframework.test.context.junit4.SpringJUnit4ClassRunner: long getJUnitTimeout(org.junit.runners.model.FrameworkMethod)> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.InterceptorRegistry: org.springframework.web.servlet.config.'annotation'.InterceptorRegistration addInterceptor(org.springframework.web.servlet.HandlerInterceptor)> -> _SINKS_
<org.springframework.orm.hibernate4.support.AsyncRequestInterceptor: void beforeConcurrentHandling(org.springframework.web.context.request.NativeWebRequest,org.springframework.web.context.request.async.DeferredResult)> -> _SINKS_
<org.springframework.messaging.support.MessageBuilder: org.springframework.messaging.support.MessageBuilder setHeaderIfAbsent(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.context.support.ResourceBundleMessageSource: java.lang.ClassLoader getBundleClassLoader()> -> _SOURCES_
<org.springframework.mock.web.MockServletContext: java.util.Set getDeclaredRoles()> -> _SOURCES_
<org.springframework.orm.hibernate4.LocalSessionFactoryBean: org.hibernate.SessionFactory getObject()> -> _SOURCES_
<org.springframework.web.context.request.FacesWebRequest: java.lang.String[] getParameterValues(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.cache.interceptor.CacheExpressionRootObject: java.lang.Object[] getArgs()> -> _SOURCES_
<org.springframework.web.servlet.FrameworkServlet: org.springframework.web.context.WebApplicationContext getWebApplicationContext()> -> _SOURCES_
<org.springframework.beans.BeanMetadataAttribute: java.lang.String getName()> -> _SOURCES_
<org.springframework.oxm.castor.CastorMarshaller: java.lang.Object unmarshalReader(java.io.Reader)> -> _SOURCES_
<org.springframework.cglib.proxy.MixinBeanEmitter: java.lang.reflect.Method[] getMethods(java.lang.Class)> -> _SOURCES_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSetMetaData: java.lang.String getColumnClassName(int)> -> _CWE089__SOURCES_
<org.springframework.test.util.XpathExpectationsHelper: void assertString(byte[],java.lang.String,java.lang.String)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletRequest: java.security.Principal getUserPrincipal()> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.UndertowXhrTransport: void connectInternal(org.springframework.web.socket.sockjs.client.TransportRequest,org.springframework.web.socket.WebSocketHandler,java.net.URI,org.springframework.http.HttpHeaders,org.springframework.web.socket.sockjs.client.XhrClientSockJsSession,org.springframework.util.concurrent.SettableListenableFuture)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.cglib.core.CodeEmitter: void getfield(org.springframework.asm.Type,java.lang.String,org.springframework.asm.Type)> -> _SOURCES_
<org.springframework.web.servlet.tags.EscapeBodyTag: void setJavaScriptEscape(boolean)> -> _SINKS_
<org.springframework.scheduling.config.TaskExecutorFactoryBean: org.springframework.core.task.TaskExecutor getObject()> -> _SOURCES_
<org.springframework.scheduling.concurrent.ScheduledExecutorTask: void setFixedRate(boolean)> -> _SINKS_
<org.springframework.security.config.annotation.web.configurers.ExceptionHandlingConfigurer: org.springframework.security.config.'annotation'.web.configurers.ExceptionHandlingConfigurer accessDeniedHandler(org.springframework.security.web.access.AccessDeniedHandler)> -> _SINKS_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: java.sql.Date getDate(int)> -> _CWE089__SOURCES_
<org.springframework.web.socket.config.annotation.ServletWebSocketHandlerRegistration: void addWebSocketHandlerMapping(java.lang.Object,org.springframework.web.socket.WebSocketHandler,org.springframework.web.socket.server.HandshakeHandler,org.springframework.web.socket.server.HandshakeInterceptor[],java.lang.String)> -> _SINKS_
<org.springframework.cache.jcache.JCacheCacheManager: java.util.Collection loadCaches()> -> _SOURCES_
<org.springframework.jmx.support.WebLogicJndiMBeanServerFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.util.MultiValueMap parseFormData(org.springframework.http.MediaType)> -> _SOURCES_
<org.springframework.web.multipart.commons.CommonsMultipartFile: java.lang.String getContentType()> -> _SOURCES_
<org.springframework.core.env.JOptCommandLinePropertySource: java.util.List getOptionValues(java.lang.String)> -> _SOURCES_
<org.springframework.messaging.core.AbstractDestinationResolvingMessagingTemplate: void convertAndSend(java.lang.String,java.lang.Object,org.springframework.messaging.core.MessagePostProcessor)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletResponse: void setContentLength(int)> -> _SINKS__CWE601_
<org.springframework.expression.spel.standard.SpelExpression: void setValue(org.springframework.expression.EvaluationContext,java.lang.Object)> -> _SINKS_
<org.springframework.beans.propertyeditors.FileEditor: java.lang.String getAsText()> -> _SOURCES_
<org.springframework.remoting.jaxrpc.JaxRpcPortClientInterceptor: void setPortName(java.lang.String)> -> _SINKS_
<org.springframework.web.util.HierarchicalUriComponents: void copyToUriComponentsBuilder(org.springframework.web.util.UriComponentsBuilder)> -> _SINKS_
<org.springframework.transaction.jta.JtaTransactionObject: javax.transaction.UserTransaction getUserTransaction()> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.AbstractClientSockJsSession: void sendMessage(org.springframework.web.socket.WebSocketMessage)> -> _SINKS_
<org.springframework.http.HttpHeaders: java.util.Set getAllow()> -> _SOURCES_
<org.springframework.messaging.simp.stomp.DefaultStompSession: void afterConnectFailure(java.lang.Throwable)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.transaction.interceptor.MatchAlwaysTransactionAttributeSource: org.springframework.transaction.interceptor.TransactionAttribute getTransactionAttribute(java.lang.reflect.Method,java.lang.Class)> -> _SOURCES_
<org.springframework.orm.hibernate4.SessionFactoryUtils: javax.sql.DataSource getDataSource(org.hibernate.SessionFactory)> -> _SOURCES_
<org.springframework.beans.factory.config.PropertiesFactoryBean: void setSingleton(boolean)> -> _SINKS_
<org.springframework.cache.interceptor.CacheAspectSupport: void setKeyGenerator(org.springframework.cache.interceptor.KeyGenerator)> -> _SINKS_
<org.springframework.context.weaving.DefaultContextLoadTimeWeaver: org.springframework.instrument.classloading.LoadTimeWeaver createServerSpecificLoadTimeWeaver(java.lang.ClassLoader)> -> _SOURCES_
<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: void setBindingErrorProcessor(org.springframework.validation.BindingErrorProcessor)> -> _SINKS_
<org.springframework.web.context.support.XmlWebApplicationContext: void loadBeanDefinitions(org.springframework.beans.factory.support.DefaultListableBeanFactory)> -> _SOURCES_
<org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo: java.lang.ClassLoader getClassLoader()> -> _SOURCES_
<org.springframework.mock.web.MockServletContext: javax.servlet.RequestDispatcher getNamedDispatcher(java.lang.String)> -> _SOURCES_
<org.springframework.web.socket.server.standard.WebLogicRequestUpgradeStrategy: org.springframework.web.socket.server.standard.AbstractTyrusRequestUpgradeStrategy$TyrusEndpointHelper getEndpointHelper()> -> _SOURCES_
<org.springframework.security.access.vote.AbstractAclVoter: void setProcessDomainObjectClass(java.lang.Class)> -> _SINKS_
<org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler: void setHeaderInitializer(org.springframework.messaging.support.MessageHeaderInitializer)> -> _SINKS_
<org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler: void setParameterNameDiscoverer(org.springframework.core.ParameterNameDiscoverer)> -> _SINKS_
<org.springframework.scheduling.quartz.CronTriggerFactoryBean: void setStartDelay(long)> -> _SINKS_
<org.springframework.mail.javamail.MimeMailMessage: org.springframework.mail.javamail.MimeMessageHelper getMimeMessageHelper()> -> _SOURCES_
<org.springframework.cache.jcache.interceptor.KeyGeneratorAdapter: java.lang.Object getTarget()> -> _SOURCES_
<org.springframework.remoting.jaxws.SimpleHttpServerJaxWsServiceExporter: void setShutdownDelay(int)> -> _SINKS_
<org.springframework.http.converter.xml.SourceHttpMessageConverter: javax.xml.transform.sax.SAXSource readSAXSource(java.io.InputStream)> -> _SOURCES_
<org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler: java.util.concurrent.ScheduledExecutorService createExecutor(int,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)> -> _SINKS_
<org.springframework.aop.target.ThreadLocalTargetSource: int getObjectCount()> -> _SOURCES_
<org.springframework.orm.ibatis.SqlMapClientTemplate: void update(java.lang.String,java.lang.Object,int)> -> _SINKS_
<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: void setPropertyEditorRegistrar(org.springframework.beans.PropertyEditorRegistrar)> -> _SINKS_
<org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource: java.lang.Object writeReplace()> -> _SINKS_
<org.springframework.web.servlet.DispatcherServlet: void setThrowExceptionIfNoHandlerFound(boolean)> -> _SINKS_
<org.springframework.messaging.support.MessageHeaderAccessor: void setEnableTimestamp(boolean)> -> _SINKS_
<org.springframework.validation.DataBinder: java.lang.String[] getDisallowedFields()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletRequest: java.lang.String getRequestedSessionId()> -> _CWE079__SOURCES_
<org.springframework.beans.propertyeditors.LocaleEditor: void setAsText(java.lang.String)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompCommand: org.springframework.messaging.simp.SimpMessageType getMessageType()> -> _SOURCES_
<org.springframework.web.servlet.view.AbstractCachingViewResolver: java.lang.Object getCacheKey(java.lang.String,java.util.Locale)> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.DefaultTransportRequest: java.security.Principal getUser()> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter httpRequestHandlerAdapter()> -> _SOURCES_
<org.springframework.web.portlet.handler.PortletContentGenerator: void setCacheSeconds(int)> -> _SINKS_
<org.springframework.test.web.client.AbstractRequestExpectationManager: java.lang.AssertionError createUnexpectedRequestError(org.springframework.http.client.ClientHttpRequest)> -> _SOURCES_
<org.springframework.jdbc.core.SqlParameter: java.lang.Integer getScale()> -> _CWE089__SOURCES_
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setRedirectContextRelative(boolean)> -> _SINKS_
<org.springframework.jdbc.support.SQLStateSQLExceptionTranslator: java.lang.String getSqlState(java.sql.SQLException)> -> _CWE089__SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver: org.springframework.web.servlet.mvc.method.'annotation'.ServletInvocableHandlerMethod getExceptionHandlerMethod(org.springframework.web.method.HandlerMethod,java.lang.Exception)> -> _SOURCES__SINKS_
<org.springframework.jmx.export.MBeanExporter: javax.management.modelmbean.ModelMBeanInfo getMBeanInfo(java.lang.Object,java.lang.String)> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanDefinitionReader: void setResourceLoader(org.springframework.core.io.ResourceLoader)> -> _SOURCES__SINKS_
<org.springframework.orm.jpa.vendor.OpenJpaVendorAdapter: java.lang.String getPersistenceProviderRootPackage()> -> _SOURCES_
<org.springframework.web.socket.WebSocketExtension: org.springframework.web.socket.WebSocketExtension parseExtension(java.lang.String)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletSession: void setAttribute(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.orm.ObjectOptimisticLockingFailureException: java.lang.Object getIdentifier()> -> _SOURCES_
<org.springframework.core.io.AbstractResource: java.io.File getFileForLastModifiedCheck()> -> _SOURCES_
<org.springframework.aop.support.DefaultIntroductionAdvisor: java.lang.Class[] getInterfaces()> -> _SOURCES_
<org.springframework.core.env.AbstractEnvironment: java.lang.Class getPropertyAsClass(java.lang.String,java.lang.Class)> -> _SOURCES_
<org.springframework.jdbc.core.simple.SimpleJdbcInsert: int[] executeBatch(org.springframework.jdbc.core.namedparam.SqlParameterSource[])> -> _CWE089__SINKS_
<org.springframework.security.config.annotation.web.builders.WebSecurity: org.springframework.security.web.access.WebInvocationPrivilegeEvaluator getPrivilegeEvaluator()> -> _SOURCES_
<org.springframework.dao.support.ChainedPersistenceExceptionTranslator: org.springframework.dao.support.PersistenceExceptionTranslator[] getDelegates()> -> _SOURCES_
<org.springframework.http.client.HttpComponentsStreamingClientHttpRequest: void setBody(org.springframework.http.StreamingHttpOutputMessage$Body)> -> _SINKS_
<org.springframework.web.bind.EscapedErrors: java.util.List getFieldErrors()> -> _SOURCES_
<org.springframework.security.config.http.AuthenticationConfigBuilder: org.springframework.beans.factory.support.ManagedList getLogoutHandlers()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.web.servlet.FrameworkServlet: void setThreadContextInheritable(boolean)> -> _SINKS_
<org.springframework.dao.support.PersistenceExceptionTranslationInterceptor: void setPersistenceExceptionTranslator(org.springframework.dao.support.PersistenceExceptionTranslator)> -> _SINKS_
<org.springframework.beans.factory.access.SingletonBeanFactoryLocator: org.springframework.beans.factory.access.BeanFactoryLocator getInstance()> -> _SOURCES_
<org.springframework.web.portlet.DispatcherPortlet: org.springframework.web.portlet.HandlerExecutionChain getHandler(javax.portlet.PortletRequest)> -> _SOURCES_
<org.springframework.cglib.transform.AnnotationVisitorTee: org.springframework.asm.AnnotationVisitor getInstance(org.springframework.asm.AnnotationVisitor,org.springframework.asm.AnnotationVisitor)> -> _SOURCES_
<org.springframework.aop.aspectj.TypePatternClassFilter: void setTypePattern(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.MockAsyncContext: long getTimeout()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractMultiCheckedElementTag: void writeObjectEntry(org.springframework.web.servlet.tags.form.TagWriter,java.lang.String,java.lang.String,java.lang.Object,int)> -> _SINKS_
<org.springframework.cache.jcache.interceptor.CachePutOperation: javax.cache.'annotation'.CacheInvocationParameter getValueParameter(java.lang.Object[])> -> _SOURCES_
<org.springframework.scheduling.quartz.CronTriggerFactoryBean: void setJobDetail(org.quartz.JobDetail)> -> _SINKS_
<org.springframework.test.context.support.AbstractTestExecutionListener: int getOrder()> -> _SOURCES_
<org.springframework.web.servlet.support.RequestContext: java.lang.String getMessage(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver: org.springframework.web.method.'annotation'.AbstractNamedValueMethodArgumentResolver$NamedValueInfo updateNamedValueInfo(org.springframework.core.MethodParameter,org.springframework.web.method.'annotation'.AbstractNamedValueMethodArgumentResolver$NamedValueInfo)> -> _SINKS_
<org.springframework.scheduling.commonj.TimerManagerAccessor: void setShared(boolean)> -> _SINKS_
<org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite: void handleReturnValue(java.lang.Object,org.springframework.core.MethodParameter,org.springframework.web.method.support.ModelAndViewContainer,org.springframework.web.context.request.NativeWebRequest)> -> _SINKS_
<org.springframework.web.multipart.support.DefaultMultipartHttpServletRequest: java.lang.String[] getParameterValues(java.lang.String)> -> _CWE079__SOURCES__CWE601_
<org.springframework.jms.config.AbstractJmsListenerContainerFactory: void setErrorHandler(org.springframework.util.ErrorHandler)> -> _SINKS_
<org.springframework.beans.factory.support.AbstractBeanDefinitionReader: org.springframework.beans.factory.support.BeanNameGenerator getBeanNameGenerator()> -> _SOURCES_
<org.springframework.beans.propertyeditors.CustomCollectionEditor: java.lang.String getAsText()> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateTemplate: void saveOrUpdateAll(java.util.Collection)> -> _SINKS_
<org.springframework.scheduling.quartz.SchedulerFactoryBean: void setApplicationContext(org.springframework.context.ApplicationContext)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletRequest: long getContentLengthLong()> -> _SOURCES_
<org.springframework.expression.common.LiteralExpression: java.lang.Class getValueType(org.springframework.expression.EvaluationContext)> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.CompletionStageReturnValueHandler: void handleReturnValue(java.lang.Object,org.springframework.core.MethodParameter,org.springframework.web.method.support.ModelAndViewContainer,org.springframework.web.context.request.NativeWebRequest)> -> _SINKS_
<org.springframework.messaging.core.AbstractDestinationResolvingMessagingTemplate: void convertAndSend(java.lang.String,java.lang.Object,java.util.Map)> -> _SINKS_
<org.springframework.beans.factory.BeanNotOfRequiredTypeException: java.lang.String getBeanName()> -> _SOURCES_
<org.springframework.web.servlet.view.AbstractView: java.io.ByteArrayOutputStream createTemporaryOutputStream()> -> _SOURCES_
<org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator: java.lang.String getAdvisorBeanNamePrefix()> -> _SOURCES_
<org.springframework.beans.factory.config.ServiceLocatorFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.web.servlet.mvc.condition.HeadersRequestCondition: java.lang.String getToStringInfix()> -> _SOURCES_
<org.springframework.jdbc.support.incrementer.OracleSequenceMaxValueIncrementer: java.lang.String getSequenceQuery()> -> _CWE089__SOURCES_
<org.springframework.web.socket.sockjs.client.UndertowXhrTransport: org.springframework.http.ResponseEntity executeRequest(java.net.URI,io.undertow.util.HttpString,org.springframework.http.HttpHeaders,java.lang.String)> -> _SINKS_
<org.springframework.security.authentication.jaas.AbstractJaasAuthenticationProvider: void setAuthorityGranters(org.springframework.security.authentication.jaas.AuthorityGranter[])> -> _SINKS_
<org.springframework.orm.hibernate5.support.OpenSessionInterceptor: void setSessionFactory(org.hibernate.SessionFactory)> -> _SINKS_
<org.springframework.cache.jcache.JCacheCacheManager: javax.cache.CacheManager getCacheManager()> -> _SOURCES_
<org.springframework.util.SystemPropertyUtils: java.lang.String resolvePlaceholders(java.lang.String)> -> _SINKS_
<org.springframework.orm.jdo.LocalPersistenceManagerFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.web.bind.MissingServletRequestParameterException: java.lang.String getMessage()> -> _SOURCES_
<org.springframework.core.annotation.AnnotatedElementUtils: org.springframework.core.'annotation'.AnnotationAttributes getMergedAnnotationAttributes(java.lang.reflect.AnnotatedElement,java.lang.String)> -> _SOURCES_
<org.springframework.messaging.simp.user.UserSessionRegistryAdapter: org.springframework.messaging.simp.user.SimpUser getUser(java.lang.String)> -> _SOURCES__CWE862_
<org.springframework.web.socket.client.standard.WebSocketContainerFactoryBean: long getMaxSessionIdleTimeout()> -> _SOURCES_
<org.springframework.web.bind.ServletRequestUtils: java.lang.Float getFloatParameter(javax.servlet.ServletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.web.method.ControllerAdviceBean: java.lang.Class getBeanType()> -> _SOURCES_
<org.springframework.asm.TypePath: int getStep(int)> -> _SOURCES_
<org.springframework.cache.ehcache.EhCacheFactoryBean: void setTimeToIdle(int)> -> _SINKS_
<org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean: java.lang.Class getBusinessInterface()> -> _SOURCES_
<org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator: void setFallbackTranslator(org.springframework.jdbc.support.SQLExceptionTranslator)> -> _CWE089__SINKS_
<org.springframework.aop.aspectj.TypePatternClassFilter: java.lang.String getTypePattern()> -> _SOURCES_
<org.springframework.orm.hibernate5.LocalSessionFactoryBean: void setImplicitNamingStrategy(org.hibernate.boot.model.naming.ImplicitNamingStrategy)> -> _SINKS_
<org.springframework.beans.factory.config.NamedBeanHolder: java.lang.Object getBeanInstance()> -> _SOURCES_
<org.springframework.expression.common.CompositeStringExpression: java.lang.Class getValueType()> -> _SOURCES_
<org.springframework.web.socket.handler.ExceptionWebSocketHandlerDecorator: void handleTransportError(org.springframework.web.socket.WebSocketSession,java.lang.Throwable)> -> _SINKS_
<org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource: java.sql.Connection getConnection(java.lang.String,java.lang.String)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__SOURCES_
<org.springframework.remoting.jaxrpc.JaxRpcPortClientInterceptor: java.lang.Class getServiceInterface()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: void setParameter(java.lang.String,java.lang.String[])> -> _CWE079__SINKS_
<org.springframework.mock.web.MockHttpServletRequest: java.lang.String getProtocol()> -> _SOURCES_
<org.springframework.instrument.classloading.jboss.JBossLoadTimeWeaver: java.lang.ClassLoader getInstrumentableClassLoader()> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configureHandlerExceptionResolvers(java.util.List)> -> _SINKS_
<org.springframework.expression.common.LiteralExpression: org.springframework.core.convert.TypeDescriptor getValueTypeDescriptor(java.lang.Object)> -> _SOURCES_
<org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.beans.factory.config.AbstractFactoryBean: java.lang.Object getSingletonInstance()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: void setRequestedSessionIdFromURL(boolean)> -> _SINKS_
<org.springframework.web.servlet.view.ContentNegotiatingViewResolver: int getOrder()> -> _SOURCES_
<org.springframework.cglib.core.ReflectUtils: java.lang.Class getClass(java.lang.String,java.lang.ClassLoader)> -> _SOURCES_
<org.springframework.cglib.core.CodeEmitter: void getfield(java.lang.String)> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.X509Configurer: org.springframework.security.config.'annotation'.web.configurers.X509Configurer authenticationUserDetailsService(org.springframework.security.core.userdetails.AuthenticationUserDetailsService)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.asm.ClassReader: int getItem(int)> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.RestTemplateXhrTransport: org.springframework.http.ResponseEntity executeInfoRequestInternal(java.net.URI,org.springframework.http.HttpHeaders)> -> _CWE078__SINKS_
<org.springframework.jms.listener.adapter.MessageListenerAdapter: void sendResponse(javax.jms.Session,javax.jms.Destination,javax.jms.Message)> -> _SINKS_
<org.springframework.web.filter.ShallowEtagHeaderFilter: void setWriteWeakETag(boolean)> -> _SINKS_
<org.springframework.scheduling.quartz.QuartzJobBean: void execute(org.quartz.JobExecutionContext)> -> _CWE078__SINKS_
<org.springframework.web.cors.CorsConfiguration: void setExposedHeaders(java.util.List)> -> _SINKS_
<org.springframework.jms.connection.JmsTransactionManager: javax.jms.ConnectionFactory getConnectionFactory()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.jms.listener.DefaultMessageListenerContainer: void setTaskExecutor(org.springframework.core.task.TaskExecutor)> -> _SINKS_
<org.springframework.core.io.DefaultResourceLoader: org.springframework.core.io.Resource getResourceByPath(java.lang.String)> -> _SOURCES_
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: java.lang.String[] getBeanNamesForType(java.lang.Class)> -> _SOURCES_
<org.springframework.web.servlet.tags.form.ErrorsTag: java.lang.String getElement()> -> _SOURCES_
<org.springframework.web.servlet.view.script.ScriptTemplateConfigurer: java.lang.String getRenderFunction()> -> _SOURCES_
<org.springframework.jms.config.JmsListenerEndpointRegistrar: void setContainerFactoryBeanName(java.lang.String)> -> _SINKS_
<org.springframework.beans.factory.support.AbstractBeanDefinitionReader: java.lang.ClassLoader getBeanClassLoader()> -> _SOURCES_
<org.springframework.scheduling.backportconcurrent.ThreadPoolTaskExecutor: void setThreadNamePrefix(java.lang.String)> -> _SINKS_
<org.springframework.cglib.beans.BeanGenerator: void setSuperclass(java.lang.Class)> -> _SINKS_
<org.springframework.jca.cci.connection.CciLocalTransactionManager: java.lang.Object getResourceFactory()> -> _SOURCES_
<org.springframework.aop.config.PointcutComponentDefinition: java.lang.String getName()> -> _SOURCES_
<org.springframework.security.concurrent.DelegatingSecurityContextExecutor: void execute(java.lang.Runnable)> -> _CWE078__SINKS_
<org.springframework.http.HttpHeaders: java.util.List getETagValuesAsList(java.lang.String)> -> _SOURCES_
<org.springframework.cache.jcache.interceptor.DefaultCacheInvocationContext: java.lang.Object getTarget()> -> _SOURCES_
<org.springframework.orm.hibernate5.support.AsyncRequestInterceptor: java.lang.Object handleTimeout(org.springframework.web.context.request.NativeWebRequest,java.util.concurrent.Callable)> -> _SINKS_
<org.springframework.oxm.jaxb.Jaxb2Marshaller: void setSchemaLanguage(java.lang.String)> -> _SINKS_
<org.springframework.cglib.proxy.Enhancer: java.lang.ClassLoader getDefaultClassLoader()> -> _SOURCES_
<org.springframework.security.config.ldap.LdapProviderBeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SINKS_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void addResourceHandlers(org.springframework.web.servlet.config.'annotation'.ResourceHandlerRegistry)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletRequest: java.lang.String getParameter(java.lang.String)> -> _CWE079__SOURCES__CWE601_
<org.springframework.web.util.AbstractUriTemplateHandler: java.lang.String getBaseUrl()> -> _SOURCES_
<org.springframework.messaging.simp.user.UserRegistryMessageHandler: java.lang.String getBroadcastDestination()> -> _SOURCES__CWE862_
<org.springframework.expression.spel.ExpressionState: org.springframework.expression.spel.SpelParserConfiguration getConfiguration()> -> _SOURCES_
<org.springframework.mock.http.client.MockClientHttpRequest: void setResponse(org.springframework.http.client.ClientHttpResponse)> -> _SINKS_
<org.springframework.web.servlet.view.BeanNameViewResolver: void setOrder(int)> -> _SINKS_
<org.springframework.core.convert.Property: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder: org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder addInterceptors(org.springframework.web.servlet.HandlerInterceptor[])> -> _SINKS_
<org.springframework.web.servlet.support.RequestContext: java.lang.String getThemeMessage(java.lang.String,java.lang.Object[])> -> _CWE079__SOURCES_
<org.springframework.jdbc.object.RdbmsOperation: void setReturnGeneratedKeys(boolean)> -> _CWE089__SINKS_
<org.springframework.orm.ibatis.SqlMapClientTemplate: java.util.List executeWithListResult(org.springframework.orm.ibatis.SqlMapClientCallback)> -> _CWE078__CWE089__SINKS_
<org.springframework.http.HttpHeaders: void setIfUnmodifiedSince(long)> -> _SINKS_
<org.springframework.mail.javamail.MimeMailMessage: void setCc(java.lang.String[])> -> _SINKS_
<org.springframework.aop.aspectj.annotation.AspectMetadata: java.lang.Class getAspectClass()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.HeadersConfigurer: org.springframework.security.web.header.HeaderWriterFilter createHeaderWriterFilter()> -> _SOURCES_
<org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource: java.lang.Class getTargetClass()> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.handler.XhrStreamingTransportHandler: org.springframework.web.socket.sockjs.transport.TransportType getTransportType()> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanDefinition: int getDependencyCheck()> -> _SOURCES_
<org.springframework.jca.support.SimpleBootstrapContext: javax.resource.spi.work.WorkManager getWorkManager()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockActionResponse: void setRenderParameter(java.lang.String,java.lang.String[])> -> _CWE079__SINKS__CWE601_
<org.springframework.ejb.config.LocalStatelessSessionBeanDefinitionParser: java.lang.String getBeanClassName(org.w3c.dom.Element)> -> _SOURCES_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSetMetaData: int getScale(int)> -> _CWE089__SOURCES_
<org.springframework.core.io.support.SpringFactoriesLoader: java.util.List loadFactoryNames(java.lang.Class,java.lang.ClassLoader)> -> _SOURCES_
<org.springframework.orm.jpa.support.AsyncRequestInterceptor: boolean handleTimeout(org.springframework.web.context.request.NativeWebRequest,org.springframework.web.context.request.async.DeferredResult)> -> _SINKS_
<org.springframework.test.web.client.match.MockRestRequestMatchers: org.springframework.test.web.client.match.XpathRequestMatchers xpath(java.lang.String,java.lang.Object[])> -> _SOURCES_
<org.springframework.jdbc.core.metadata.CallMetaDataContext: void setFunction(boolean)> -> _CWE089__SINKS_
<org.springframework.util.MethodInvoker: void setTargetClass(java.lang.Class)> -> _SINKS_
<org.springframework.web.servlet.view.velocity.VelocityView: org.apache.velocity.app.VelocityEngine getVelocityEngine()> -> _SOURCES_
<org.springframework.security.authentication.jaas.AbstractJaasAuthenticationProvider: org.springframework.security.core.Authentication authenticate(org.springframework.security.core.Authentication)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.http.server.ServletServerHttpResponse: java.io.OutputStream getBody()> -> _SOURCES__CWE601_
<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder accept(org.springframework.http.MediaType[])> -> _SOURCES_
<org.springframework.jdbc.core.SingleColumnRowMapper: void setRequiredType(java.lang.Class)> -> _CWE089__SINKS_
<org.springframework.web.servlet.tags.TransformTag: void setVar(java.lang.String)> -> _SINKS_
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapValueType(java.lang.Class)> -> _SOURCES_
<org.springframework.web.socket.messaging.WebSocketStompClient: void setInboundMessageSizeLimit(int)> -> _SINKS_
<org.springframework.aop.target.CommonsPoolTargetSource: void setWhenExhaustedAction(byte)> -> _SINKS_
<org.springframework.jdbc.datasource.init.ResourceDatabasePopulator: void setBlockCommentEndDelimiter(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.beans.CachedIntrospectionResults: java.beans.PropertyDescriptor getPropertyDescriptor(java.lang.String)> -> _SOURCES_
<org.springframework.web.util.WebUtils: java.lang.Object getOrCreateSessionAttribute(javax.servlet.http.HttpSession,java.lang.String,java.lang.Class)> -> _SOURCES_
<org.springframework.beans.factory.config.CommonsLogFactoryBean: void setLogName(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.resource.CachingResourceTransformer: org.springframework.cache.Cache getCache()> -> _SOURCES_
<org.springframework.aop.framework.ProxyFactoryBean: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.orm.jpa.persistenceunit.MutablePersistenceUnitInfo: java.util.List getManagedClassNames()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortalContext: java.util.Enumeration getSupportedWindowStates()> -> _SOURCES_
<org.springframework.jdbc.datasource.ConnectionHolder: java.sql.Connection getConnection()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__SOURCES__CWE862_
<org.springframework.mock.web.portlet.MockPortletPreferences: boolean isReadOnly(java.lang.String)> -> _SOURCES_
<org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor: void setCopyHttpSessionId(boolean)> -> _SINKS_
<org.springframework.messaging.MessageHeaders: org.springframework.util.IdGenerator getIdGenerator()> -> _SOURCES_
<org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader: java.lang.Object getProperty(java.lang.String)> -> _SOURCES_
<org.springframework.remoting.jaxws.LocalJaxWsServiceFactory: void setWsdlDocumentUrl(java.net.URL)> -> _SINKS_
<org.springframework.ejb.access.LocalStatelessSessionProxyFactoryBean: void setBusinessInterface(java.lang.Class)> -> _SINKS_
<org.springframework.context.access.DefaultLocatorFactory: org.springframework.beans.factory.access.BeanFactoryLocator getInstance(java.lang.String)> -> _SOURCES_
<org.springframework.instrument.classloading.weblogic.WebLogicClassLoader: java.lang.ClassLoader getInternalClassLoader()> -> _SOURCES_
<org.springframework.context.i18n.LocaleContextHolder: java.util.Locale getLocale()> -> _SOURCES_
<org.springframework.orm.hibernate5.LocalSessionFactoryBean: void setAnnotatedClasses(java.lang.Class[])> -> _SINKS_
<org.springframework.scheduling.commonj.TimerManagerFactoryBean: void setTimerManager(commonj.timers.TimerManager)> -> _SINKS_
<org.springframework.transaction.support.TransactionSynchronizationManager: java.util.Map getResourceMap()> -> _SOURCES_
<org.springframework.jms.connection.CachedMessageProducer: boolean getDisableMessageID()> -> _SOURCES_
<org.springframework.web.portlet.bind.PortletRequestUtils: java.lang.Boolean getBooleanParameter(javax.portlet.PortletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.aop.framework.autoproxy.AbstractBeanFactoryAwareAdvisingPostProcessor: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.beans.factory.BeanNotOfRequiredTypeException: java.lang.Class getActualType()> -> _SOURCES_
<org.springframework.jms.support.JmsMessageHeaderAccessor: java.lang.String getMessageId()> -> _SOURCES_
<org.springframework.security.authentication.dao.DaoAuthenticationProvider: void doAfterPropertiesSet()> -> _AUTHENTICATIONS_TO_HIGH_
<org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler: void setTaskScheduler(org.springframework.scheduling.TaskScheduler)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompHeaders: void setLogin(java.lang.String)> -> _CWE306__SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.expression.spel.ast.OpOr: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.orm.hibernate4.LocalSessionFactoryBean: java.util.Properties getHibernateProperties()> -> _SOURCES_
<org.springframework.orm.hibernate3.support.BlobSerializableType: void nullSafeSetInternal(java.sql.PreparedStatement,int,java.lang.Object,org.springframework.jdbc.support.lob.LobCreator)> -> _CWE089__SINKS_
<org.springframework.beans.factory.config.MethodInvokingFactoryBean: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.aop.interceptor.AsyncExecutionAspectSupport: org.springframework.core.task.AsyncTaskExecutor determineAsyncExecutor(java.lang.reflect.Method)> -> _SINKS_
<org.springframework.test.web.client.match.MockRestRequestMatchers: org.springframework.test.web.client.RequestMatcher anything()> -> _SOURCES_
<org.springframework.core.NestedCheckedException: java.lang.String getMessage()> -> _SOURCES_
<org.springframework.orm.hibernate4.HibernateTemplate: java.lang.Object load(java.lang.Class,java.io.Serializable,org.hibernate.LockMode)> -> _SOURCES_
<org.springframework.scheduling.quartz.CronTriggerBean: void setTriggerListenerNames(java.lang.String[])> -> _SINKS_
<org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl: java.util.List loadUserAuthorities(java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.mail.javamail.JavaMailSenderImpl: void setPort(int)> -> _SINKS_
<org.springframework.jdbc.core.ArgTypePreparedStatementSetter: void setValues(java.sql.PreparedStatement)> -> _CWE089__SINKS_
<org.springframework.web.servlet.tags.form.FormTag: java.lang.String getMethodParam()> -> _SOURCES_
<org.springframework.security.authentication.RememberMeAuthenticationToken: java.lang.Object getCredentials()> -> _SOURCES_
<org.springframework.context.support.AbstractApplicationContext: java.lang.String getMessage(org.springframework.context.MessageSourceResolvable,java.util.Locale)> -> _SOURCES_
<org.springframework.http.client.Netty4ClientHttpRequest: org.springframework.http.HttpMethod getMethod()> -> _SOURCES_
<org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean: void setName(java.lang.String)> -> _SINKS_
<org.springframework.web.context.request.ServletWebRequest: java.util.Locale getLocale()> -> _SOURCES_
<org.springframework.web.servlet.mvc.multiaction.PropertiesMethodNameResolver: void setPathMatcher(org.springframework.util.PathMatcher)> -> _SINKS_
<org.springframework.web.servlet.mvc.condition.CompositeRequestCondition: org.springframework.web.servlet.mvc.condition.CompositeRequestCondition getMatchingCondition(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.web.servlet.handler.MappedInterceptor: void postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView)> -> _SINKS_
<org.springframework.web.util.WebUtils: java.lang.Object getSessionAttribute(javax.servlet.http.HttpServletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.remoting.jaxws.SimpleHttpServerJaxWsServiceExporter: void setBasePath(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.view.XmlViewResolver: void setOrder(int)> -> _SINKS_
<org.springframework.jndi.JndiObjectTargetSource: void setCache(boolean)> -> _SINKS_
<org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver: org.springframework.web.servlet.ModelAndView handleServletRequestBindingException(org.springframework.web.bind.ServletRequestBindingException,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)> -> _SINKS_
<org.springframework.orm.hibernate3.SessionFactoryUtils: javax.transaction.TransactionManager getJtaTransactionManager(org.hibernate.SessionFactory,org.hibernate.Session)> -> _SOURCES_
<org.springframework.messaging.simp.SimpAttributes: java.lang.String getSessionId()> -> _SOURCES_
<org.springframework.jms.listener.DefaultMessageListenerContainer: void setRecoveryInterval(long)> -> _SINKS_
<org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean: void setDefaultTyping(com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder)> -> _SINKS_
<org.springframework.orm.hibernate3.support.OpenSessionInViewFilter: void setSingleSession(boolean)> -> _SINKS_
<org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer: org.springframework.security.web.util.matcher.RequestMatcher createLoginProcessingUrlMatcher(java.lang.String)> -> _CWE306__SOURCES__AUTHENTICATIONS_TO_HIGH_
<org.springframework.beans.factory.config.DeprecatedBeanWarner: void setLoggerName(java.lang.String)> -> _SINKS_
<org.springframework.orm.jpa.JpaTransactionManager: org.springframework.orm.jpa.JpaDialect getJpaDialect()> -> _SOURCES_
<org.springframework.expression.spel.ast.CompoundExpression: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler: void execute(java.lang.Runnable,long)> -> _CWE078__SINKS_
<org.springframework.messaging.simp.stomp.StompHeaderAccessor: org.springframework.messaging.simp.stomp.StompCommand getCommand()> -> _SOURCES_
<org.springframework.security.provisioning.JdbcUserDetailsManager: void setDeleteUserSql(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.cglib.proxy.Proxy: java.lang.Class getProxyClass(java.lang.ClassLoader,java.lang.Class[])> -> _SOURCES_
<org.springframework.http.HttpHeaders: void setUpgrade(java.lang.String)> -> _SINKS_
<org.springframework.beans.factory.support.AbstractBeanDefinition: org.springframework.beans.factory.config.ConstructorArgumentValues getConstructorArgumentValues()> -> _SOURCES_
<org.springframework.orm.hibernate4.support.OpenSessionInViewInterceptor: void postHandle(org.springframework.web.context.request.WebRequest,org.springframework.ui.ModelMap)> -> _SINKS_
<org.springframework.expression.common.CompositeStringExpression: java.lang.String getValue(java.lang.Object)> -> _SOURCES_
<org.springframework.jms.core.JmsTemplate: java.lang.Object execute(org.springframework.jms.core.SessionCallback)> -> _CWE078__SINKS_
<org.springframework.web.HttpMediaTypeNotSupportedException: org.springframework.http.MediaType getContentType()> -> _SOURCES_
<org.springframework.messaging.support.ExecutorSubscribableChannel: java.util.concurrent.Executor getExecutor()> -> _SOURCES_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: int update(java.lang.String,org.springframework.jdbc.core.namedparam.SqlParameterSource,org.springframework.jdbc.support.KeyHolder,java.lang.String[])> -> _CWE089__SINKS_
<org.springframework.web.socket.sockjs.client.SockJsClient: void setMessageCodec(org.springframework.web.socket.sockjs.frame.SockJsMessageCodec)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletResponse: void setCharacterEncoding(java.lang.String)> -> _CWE079__SINKS__CWE601_
<org.springframework.aop.aspectj.TypePatternClassFilter: java.lang.String replaceBooleanOperators(java.lang.String)> -> _SANITIZERS__SINKS_
<org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor: void postHandle(org.springframework.web.context.request.WebRequest,org.springframework.ui.ModelMap)> -> _SINKS_
<org.springframework.context.support.MessageSourceAccessor: java.lang.String getMessage(java.lang.String,java.lang.Object[],java.lang.String)> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.UndertowXhrTransport: io.undertow.client.ClientCallback createRequestCallback(java.lang.String,java.util.List,java.util.concurrent.CountDownLatch)> -> _SOURCES_
<org.springframework.cache.jcache.interceptor.AbstractJCacheOperation: java.util.Set getCacheNames()> -> _SOURCES_
<org.springframework.jdbc.core.metadata.OracleTableMetaDataProvider: java.lang.String getDefaultSchema()> -> _CWE089__SOURCES_
<org.springframework.web.socket.config.annotation.SockJsServiceRegistration: org.springframework.web.socket.config.'annotation'.SockJsServiceRegistration setHttpMessageCacheSize(int)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompHeaderAccessor: void setNack(java.lang.String)> -> _SINKS_
<org.springframework.asm.Handle: java.lang.String getOwner()> -> _SOURCES_
<org.springframework.expression.spel.ast.SpelNodeImpl: org.springframework.expression.TypedValue getTypedValue(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.web.socket.config.annotation.WebMvcStompWebSocketEndpointRegistration: org.springframework.web.socket.config.'annotation'.StompWebSocketEndpointRegistration setHandshakeHandler(org.springframework.web.socket.server.HandshakeHandler)> -> _SINKS_
<org.springframework.aop.interceptor.AbstractMonitoringInterceptor: void setPrefix(java.lang.String)> -> _SINKS_
<org.springframework.security.config.http.HttpSecurityBeanDefinitionParser: org.springframework.beans.factory.config.BeanReference createSecurityFilterChainBean(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,java.util.List)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockStateAwareResponse: void setRenderParameter(java.lang.String,java.lang.String)> -> _SINKS__CWE601_
<org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping: void setUseDefaultSuffixPattern(boolean)> -> _SINKS_
<org.springframework.jdbc.support.lob.PassThroughClob: int setString(long,java.lang.String)> -> _CWE089__SINKS_
<org.springframework.jms.connection.JmsTransactionManager102: void setPubSubDomain(boolean)> -> _SINKS_
<org.springframework.expression.spel.SpelParseException: java.lang.Object[] getInserts()> -> _SOURCES_
<org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry: void setSelectorHeaderName(java.lang.String)> -> _SINKS_
<org.springframework.beans.factory.CannotLoadBeanClassException: java.lang.String getResourceDescription()> -> _SOURCES_
<org.springframework.orm.hibernate5.HibernateTemplate: java.lang.Object load(java.lang.Class,java.io.Serializable)> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.PathMatchConfigurer: org.springframework.web.servlet.config.'annotation'.PathMatchConfigurer setUseSuffixPatternMatch(java.lang.Boolean)> -> _SINKS_
<org.springframework.web.servlet.mvc.support.ControllerBeanNameHandlerMapping: void setUrlSuffix(java.lang.String)> -> _SINKS_
<org.springframework.beans.factory.serviceloader.ServiceFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.TransportHandlingSockJsService: org.springframework.web.socket.sockjs.frame.SockJsMessageCodec getMessageCodec()> -> _SOURCES_
<org.springframework.remoting.caucho.HessianProxyFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.orm.jdo.DefaultJdoDialect: void setJdbcExceptionTranslator(org.springframework.jdbc.support.SQLExceptionTranslator)> -> _SINKS_
<org.springframework.core.Constants: java.lang.String getClassName()> -> _SOURCES_
<org.springframework.scheduling.quartz.SpringBeanJobFactory: void setIgnoredUnknownProperties(java.lang.String[])> -> _SINKS_
<org.springframework.web.portlet.context.PortletRequestAttributes: javax.portlet.PortletResponse getResponse()> -> _SOURCES_
<org.springframework.context.support.DefaultLifecycleProcessor: void setTimeoutPerShutdownPhase(long)> -> _SINKS_
<org.springframework.mock.web.MockMultipartHttpServletRequest: org.springframework.http.HttpMethod getRequestMethod()> -> _SOURCES_
<org.springframework.web.servlet.ResourceServlet: void setApplyLastModified(boolean)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver: void setContentNegotiationManager(org.springframework.web.accept.ContentNegotiationManager)> -> _SINKS_
<org.springframework.remoting.httpinvoker.HttpComponentsHttpInvokerRequestExecutor: org.springframework.remoting.support.RemoteInvocationResult doExecuteRequest(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration,java.io.ByteArrayOutputStream)> -> _CWE078__SINKS_
<org.springframework.core.env.AbstractEnvironment: java.lang.Object getProperty(java.lang.String,java.lang.Class)> -> _SOURCES_
<org.springframework.aop.target.CommonsPool2TargetSource: void setTimeBetweenEvictionRunsMillis(long)> -> _SINKS_
<org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: void setResourcePattern(java.lang.String)> -> _SINKS_
<org.springframework.expression.common.TemplateAwareExpressionParser: org.springframework.expression.Expression parseExpression(java.lang.String)> -> _SINKS_
<org.springframework.scripting.groovy.GroovyScriptFactory: java.lang.Class getScriptedObjectType(org.springframework.scripting.ScriptSource)> -> _SOURCES_
<org.springframework.web.socket.config.annotation.ServletWebSocketHandlerRegistry: void setOrder(int)> -> _SINKS_
<org.springframework.jms.connection.CachedMessageConsumer: void setMessageListener(javax.jms.MessageListener)> -> _SINKS_
<org.springframework.context.event.GenericApplicationListenerAdapter: int getOrder()> -> _SOURCES_
<org.springframework.web.socket.client.standard.AnnotatedEndpointConnectionManager: void openConnection()> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.scheduling.backportconcurrent.ScheduledExecutorFactoryBean: java.lang.Runnable getRunnableToSchedule(org.springframework.scheduling.backportconcurrent.ScheduledExecutorTask)> -> _SOURCES_
<org.springframework.jdbc.support.JdbcAccessor: void setLazyInit(boolean)> -> _CWE089__SINKS_
<org.springframework.mock.web.MockServletContext: int getMajorVersion()> -> _SOURCES_
<org.springframework.scheduling.backportconcurrent.ThreadPoolTaskExecutor: int getMaxPoolSize()> -> _SOURCES_
<org.springframework.web.servlet.tags.MessageTag: void setMessage(org.springframework.context.MessageSourceResolvable)> -> _SINKS_
<org.springframework.web.portlet.FrameworkPortlet: java.lang.String getTitle(javax.portlet.RenderRequest)> -> _CWE079__SOURCES_
<org.springframework.test.context.junit4.SpringJUnit4ClassRunner: org.springframework.test.context.TestContextManager getTestContextManager()> -> _SOURCES_
<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue getScopeRootContextObject()> -> _SOURCES_
<org.springframework.http.client.HttpComponentsClientHttpRequestFactory: org.springframework.http.client.ClientHttpRequest createRequest(java.net.URI,org.springframework.http.HttpMethod)> -> _SOURCES_
<org.springframework.web.util.UrlPathHelper: java.lang.String getOriginatingContextPath(javax.servlet.http.HttpServletRequest)> -> _CWE079__SOURCES_
<org.springframework.beans.factory.wiring.BeanConfigurerSupport: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.test.context.support.DefaultTestContext: org.springframework.context.ApplicationContext getApplicationContext()> -> _SOURCES_
<org.springframework.web.util.UriComponentsBuilder: org.springframework.web.util.UriComponentsBuilder uriComponents(org.springframework.web.util.UriComponents)> -> _SINKS_
<org.springframework.cache.guava.GuavaCacheManager: void setAllowNullValues(boolean)> -> _SINKS_
<org.springframework.beans.PropertyBatchUpdateException: void printStackTrace(java.io.PrintWriter)> -> _SINKS_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void setApplicationContext(org.springframework.context.ApplicationContext)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping: java.lang.Object getMatchingMapping(java.lang.Object,javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.cache.interceptor.NameMatchCacheOperationSource: java.util.Collection getCacheOperations(java.lang.reflect.Method,java.lang.Class)> -> _SOURCES_
<org.springframework.context.support.AbstractApplicationContext: org.springframework.core.io.support.ResourcePatternResolver getResourcePatternResolver()> -> _SOURCES_
<org.springframework.jmx.support.ObjectNameManager: javax.management.ObjectName getInstance(java.lang.String)> -> _SOURCES_
<org.springframework.jmx.export.metadata.ManagedMetric: void setPersistPolicy(java.lang.String)> -> _SINKS_
<org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.remoting.rmi.RmiServiceExporter: void setServiceName(java.lang.String)> -> _SINKS_
<org.springframework.security.config.authentication.JdbcUserServiceBeanDefinitionParser: java.lang.String getBeanClassName(org.w3c.dom.Element)> -> _CWE089__SOURCES__CWE862_
<org.springframework.util.ClassLoaderUtils: java.lang.String showClassLoaderHierarchy(java.lang.ClassLoader)> -> _SOURCES_
<org.springframework.http.converter.FormHttpMessageConverter: void writePart(java.lang.String,org.springframework.http.HttpEntity,java.io.OutputStream)> -> _SINKS_
<org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler: int getPhase()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.ChannelSecurityConfigurer: org.springframework.security.config.'annotation'.web.configurers.ChannelSecurityConfigurer$ChannelRequestMatcherRegistry getRegistry()> -> _SOURCES_
<org.springframework.beans.factory.generic.GenericBeanFactoryAccessor: java.lang.Object getBean(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.mvc.condition.ProducesRequestCondition: java.util.List getAcceptedMediaTypes(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.web.bind.ServletRequestUtils: boolean[] getBooleanParameters(javax.servlet.ServletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.jms.listener.AbstractJmsListeningContainer: void setAutoStartup(boolean)> -> _SINKS_
<org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter: void setSynchronizeOnSession(boolean)> -> _SINKS_
<org.springframework.core.annotation.AnnotationUtils: java.lang.Object getValue(java.lang.'annotation'.Annotation)> -> _SOURCES_
<org.springframework.jca.cci.connection.SingleConnectionFactory: void resetConnection()> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.jca.cci.connection.ConnectionSpecConnectionFactoryAdapter: void setConnectionSpec(javax.resource.cci.ConnectionSpec)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.portlet.multipart.DefaultMultipartActionRequest: java.lang.String[] getParameterValues(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.remoting.jaxws.LocalJaxWsServiceFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.orm.hibernate4.HibernateTemplate: java.lang.Object executeWithNativeSession(org.springframework.orm.hibernate4.HibernateCallback)> -> _SINKS_
<org.springframework.mock.web.MockAsyncContext: java.lang.String getDispatchedPath()> -> _SOURCES_
<org.springframework.http.client.Netty4ClientHttpRequestFactory: org.springframework.http.client.ClientHttpRequest createRequest(java.net.URI,org.springframework.http.HttpMethod)> -> _SOURCES_
<org.springframework.web.portlet.context.PortletWebRequest: java.util.Locale getLocale()> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanDefinitionReader: org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()> -> _SOURCES_
<org.springframework.web.socket.messaging.StompSubProtocolHandler: void setHeaderInitializer(org.springframework.messaging.support.MessageHeaderInitializer)> -> _SINKS_
<org.springframework.util.concurrent.SettableListenableFuture: java.lang.Object get()> -> _SOURCES_
<org.springframework.orm.toplink.LocalSessionFactory: void setDatabasePlatform(oracle.toplink.internal.databaseaccess.DatabasePlatform)> -> _SINKS_
<org.springframework.aop.framework.ProxyFactoryBean: void setAdvisorAdapterRegistry(org.springframework.aop.framework.adapter.AdvisorAdapterRegistry)> -> _SINKS_
<org.springframework.beans.support.PagedListHolder: int getNrOfElements()> -> _SOURCES_
<org.springframework.beans.factory.config.BeanExpressionContext: org.springframework.beans.factory.config.Scope getScope()> -> _SOURCES_
<org.springframework.web.servlet.mvc.multiaction.MultiActionController: org.springframework.validation.Validator[] getValidators()> -> _SOURCES_
<org.springframework.http.MediaTypeEditor: java.lang.String getAsText()> -> _SOURCES_
<org.springframework.web.socket.sockjs.frame.SockJsFrame: byte[] getContentBytes()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.CsrfConfigurer: org.springframework.security.web.session.InvalidSessionStrategy getInvalidSessionStrategy(org.springframework.security.config.'annotation'.web.HttpSecurityBuilder)> -> _SOURCES_
<org.springframework.http.converter.FormHttpMessageConverter: void setPartConverters(java.util.List)> -> _SINKS_
<org.springframework.web.method.annotation.RequestParamMethodArgumentResolver: org.springframework.web.method.'annotation'.AbstractNamedValueMethodArgumentResolver$NamedValueInfo createNamedValueInfo(org.springframework.core.MethodParameter)> -> _SOURCES_
<org.springframework.orm.jpa.vendor.AbstractJpaVendorAdapter: org.springframework.orm.jpa.JpaDialect getJpaDialect()> -> _SOURCES_
<org.springframework.mock.web.MockServletContext: javax.servlet.ServletRegistration getServletRegistration(java.lang.String)> -> _SOURCES_
<org.springframework.aop.config.ConfigBeanDefinitionParser: org.springframework.beans.factory.support.AbstractBeanDefinition parseDeclareParents(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletSession: java.lang.Object getAttribute(java.lang.String,int)> -> _SOURCES_
<org.springframework.web.portlet.ModelAndView: java.lang.Object getView()> -> _SOURCES_
<org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver: java.lang.ClassLoader getInstrumentableClassLoader()> -> _SOURCES_
<org.springframework.beans.PropertyAccessException: java.beans.PropertyChangeEvent getPropertyChangeEvent()> -> _SOURCES_
<org.springframework.security.crypto.encrypt.CipherUtils: java.security.spec.AlgorithmParameterSpec getParameterSpec(javax.crypto.Cipher,java.lang.Class)> -> _SOURCES_
<org.springframework.web.servlet.tags.form.SelectTag: java.lang.Object getItems()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockStateAwareResponse: javax.portlet.PortletMode getPortletMode()> -> _SOURCES__CWE601_
<org.springframework.core.convert.support.StringToTimeZoneConverter: java.util.TimeZone convert(java.lang.String)> -> _SINKS_
<org.springframework.test.context.transaction.TransactionContext: void setFlaggedForRollback(boolean)> -> _SINKS_
<org.springframework.aop.framework.AdvisedSupport: void setInterfaces(java.lang.Class[])> -> _SINKS_
<org.springframework.messaging.core.AbstractMessageSendingTemplate: void convertAndSend(java.lang.Object)> -> _SINKS_
<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void parsePropertyElements(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition)> -> _SINKS_
<org.springframework.web.socket.sockjs.client.WebSocketClientSockJsSession: java.lang.Object getNativeSession()> -> _SOURCES_
<org.springframework.beans.factory.BeanCreationException: java.lang.Throwable[] getRelatedCauses()> -> _SOURCES_
<org.springframework.mock.web.MockAsyncContext: java.util.List getListeners()> -> _SOURCES_
<org.springframework.validation.BindException: int getFieldErrorCount()> -> _SOURCES_
<org.springframework.orm.jpa.vendor.AbstractJpaVendorAdapter: void setDatabase(org.springframework.orm.jpa.vendor.Database)> -> _SINKS_
<org.springframework.scripting.bsh.BshScriptEvaluator: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.core.MethodParameter: java.lang.Class getParameterType()> -> _SOURCES_
<org.springframework.jmx.support.JmxUtils: java.lang.Class getMBeanInterface(java.lang.Class)> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletResponse: java.lang.String getContentType()> -> _SOURCES__CWE601_
<org.springframework.cglib.core.CodeEmitter: org.springframework.asm.Type getReturnType()> -> _SOURCES_
<org.springframework.web.socket.messaging.SubProtocolWebSocketHandler: int getPhase()> -> _SOURCES_
<org.springframework.jms.config.JmsListenerEndpointRegistrar: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.web.servlet.resource.DefaultResourceResolverChain: org.springframework.web.servlet.resource.ResourceResolver getNext()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: void setUseRegisteredSuffixPatternMatch(boolean)> -> _SINKS_
<org.springframework.jdbc.support.nativejdbc.XAPoolNativeJdbcExtractor: java.sql.PreparedStatement getNativePreparedStatement(java.sql.PreparedStatement)> -> _CWE089__SOURCES_
<org.springframework.web.socket.handler.WebSocketSessionDecorator: void setBinaryMessageSizeLimit(int)> -> _SINKS_
<org.springframework.core.io.DefaultResourceLoader: org.springframework.core.io.Resource getResource(java.lang.String)> -> _SOURCES_
<org.springframework.orm.hibernate3.support.OpenSessionInViewFilter: void setFlushMode(org.hibernate.FlushMode)> -> _SINKS_
<org.springframework.web.portlet.mvc.PortletWrappingController: void setUseSharedPortletConfig(boolean)> -> _SINKS_
<org.springframework.util.ResourceUtils: java.io.File getFile(java.net.URI)> -> _SOURCES_
<org.springframework.orm.jdo.JdoInterceptor: void setExceptionConversionEnabled(boolean)> -> _SINKS_
<org.springframework.test.context.transaction.TransactionalTestExecutionListener: org.springframework.transaction.PlatformTransactionManager getTransactionManager(org.springframework.test.context.TestContext)> -> _SOURCES_
<org.springframework.util.ResourceUtils: java.io.File getFile(java.net.URL)> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: java.lang.Object getAttribute(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.jms.remoting.JmsInvokerClientInterceptor: org.springframework.remoting.support.RemoteInvocationResult executeRequest(org.springframework.remoting.support.RemoteInvocation)> -> _SINKS_
<org.springframework.mock.web.MockPageContext: java.lang.Exception getException()> -> _SOURCES_
<org.springframework.cglib.transform.AbstractProcessTask: java.util.Collection getFiles()> -> _SOURCES_
<org.springframework.web.servlet.NoHandlerFoundException: java.lang.String getRequestURL()> -> _SOURCES_
<org.springframework.orm.jdo.JdoAccessor: void setFlushEager(boolean)> -> _SINKS_
<org.springframework.security.crypto.codec.Base64: int decode4to3(byte[],int,byte[],int,int)> -> _SOURCES_
<org.springframework.orm.ibatis.SqlMapClientTemplate: java.lang.Object execute(org.springframework.orm.ibatis.SqlMapClientCallback)> -> _CWE089__SINKS_
<org.springframework.web.servlet.mvc.method.annotation.UriComponentsBuilderMethodArgumentResolver: java.lang.Object resolveArgument(org.springframework.core.MethodParameter,org.springframework.web.method.support.ModelAndViewContainer,org.springframework.web.context.request.NativeWebRequest,org.springframework.web.bind.support.WebDataBinderFactory)> -> _SINKS_
<org.springframework.web.socket.sockjs.client.WebSocketClientSockJsSession: void setBinaryMessageSizeLimit(int)> -> _SINKS_
<org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean: void setModulesToInstall(java.lang.Class[])> -> _SINKS_
<org.springframework.web.context.support.StaticWebApplicationContext: void setConfigLocation(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.core.support.JdbcDaoSupport: void setJdbcTemplate(org.springframework.jdbc.core.JdbcTemplate)> -> _CWE089__SINKS_
<org.springframework.web.servlet.view.velocity.VelocityViewResolver: void setDateToolAttribute(java.lang.String)> -> _SINKS_
<org.springframework.util.xml.AbstractXMLStreamReader: java.lang.String getAttributeNamespace(int)> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession: java.util.List getExtensions()> -> _SOURCES_
<org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean: java.util.concurrent.ExecutorService getObject()> -> _SOURCES_
<org.springframework.beans.factory.support.DefaultListableBeanFactory: int getBeanDefinitionCount()> -> _SOURCES_
<org.springframework.aop.aspectj.AbstractAspectJAdvice: org.springframework.aop.aspectj.AspectJExpressionPointcut getPointcut()> -> _SOURCES_
<org.springframework.jms.core.JmsMessagingTemplate: org.springframework.messaging.Message sendAndReceive(org.springframework.messaging.Message)> -> _SINKS_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.util.concurrent.ListenableFuture exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,java.lang.Class,java.util.Map)> -> _SINKS_
<org.springframework.util.xml.StaxEventHandler: java.util.List getAttributes(org.xml.sax.Attributes)> -> _SOURCES_
<org.springframework.aop.aspectj.AbstractAspectJAdvice: int getDeclarationOrder()> -> _SOURCES_
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: java.util.Collection getCacheNames()> -> _SOURCES_
<org.springframework.web.util.DefaultUriTemplateHandler: boolean shouldParsePath()> -> _SOURCES_
<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()> -> _SOURCES_
<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.Class getPropertyType()> -> _SOURCES_
<org.springframework.jmx.export.metadata.AttributesJmxAttributeSource: org.springframework.jmx.export.metadata.ManagedOperation getManagedOperation(java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.core.annotation.DefaultAnnotationAttributeExtractor: java.lang.Object getRawAttributeValue(java.lang.String)> -> _SOURCES_
<org.springframework.messaging.simp.stomp.Reactor2TcpStompClient: org.springframework.util.concurrent.ListenableFuture connect(org.springframework.messaging.simp.stomp.StompHeaders,org.springframework.messaging.simp.stomp.StompSessionHandler)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.cglib.core.DebuggingClassWriter: java.lang.String getClassName()> -> _SOURCES_
<org.springframework.core.io.VfsResource: java.lang.String getDescription()> -> _SOURCES_
<org.springframework.orm.hibernate3.SessionFactoryUtils: org.hibernate.Session getJtaSynchronizedSession(org.springframework.orm.hibernate3.SessionHolder,org.hibernate.SessionFactory,org.springframework.jdbc.support.SQLExceptionTranslator)> -> _CWE089__SOURCES_
<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.mock.web.MockHttpSession: long getLastAccessedTime()> -> _SOURCES_
<org.springframework.context.annotation.ConfigurationClassUtils: int getOrder(org.springframework.beans.factory.config.BeanDefinition)> -> _SOURCES_
<org.springframework.jms.connection.SingleConnectionFactory: javax.jms.Connection createConnection()> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.jdbc.datasource.SingleConnectionDataSource: java.sql.Connection getConnection()> -> _CWE306__CWE089__SOURCES__AUTHENTICATIONS_TO_LOW__CWE862_
<org.springframework.jms.support.converter.SimpleMessageConverter: javax.jms.ObjectMessage createMessageForSerializable(java.io.Serializable,javax.jms.Session)> -> _SOURCES_
<org.springframework.util.ConcurrentReferenceHashMap: org.springframework.util.ConcurrentReferenceHashMap$Reference getReference(java.lang.Object,org.springframework.util.ConcurrentReferenceHashMap$Restructure)> -> _SOURCES_
<org.springframework.jdbc.datasource.embedded.DerbyEmbeddedDatabaseConfigurer: org.springframework.jdbc.datasource.embedded.DerbyEmbeddedDatabaseConfigurer getInstance()> -> _CWE089__SOURCES_
<org.springframework.http.client.HttpComponentsClientHttpRequestFactory: org.apache.http.client.HttpClient getHttpClient()> -> _SOURCES_
<org.springframework.jms.listener.endpoint.JmsActivationSpecConfig: void setPrefetchSize(int)> -> _SINKS_
<org.springframework.mock.web.portlet.MockCacheControl: void setUseCachedContent(boolean)> -> _SINKS_
<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.mock.web.MockHttpServletRequest createServletRequest(javax.servlet.ServletContext)> -> _SOURCES_
<org.springframework.jdbc.core.simple.AbstractJdbcCall: void setCatalogName(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer: java.lang.String getLoginProcessingUrl()> -> _CWE306__SOURCES_
<org.springframework.remoting.rmi.RmiServiceExporter: void setAlwaysCreateRegistry(boolean)> -> _SINKS_
<org.springframework.scripting.support.StandardScriptEvaluator: void setLanguage(java.lang.String)> -> _SINKS_
<org.springframework.core.io.VfsUtils: java.lang.Object getRelative(java.net.URL)> -> _SOURCES_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: int[] doExecuteBatch(java.util.Map[])> -> _CWE078__CWE089__SINKS_
<org.springframework.messaging.handler.invocation.AbstractExceptionHandlerMethodResolver: java.util.List getExceptionsFromMethodSignature(java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.format.datetime.joda.JodaTimeFormatterRegistrar: void setDateFormatter(org.joda.time.format.DateTimeFormatter)> -> _SINKS_
<org.springframework.orm.hibernate5.support.OpenSessionInViewInterceptor: void preHandle(org.springframework.web.context.request.WebRequest)> -> _SINKS_
<org.springframework.messaging.simp.stomp.DefaultStompSession: org.springframework.util.concurrent.ListenableFuture getSessionFuture()> -> _SOURCES_
<org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration: void setApplicationContext(org.springframework.context.ApplicationContext)> -> _SINKS_
<org.springframework.aop.aspectj.annotation.AspectMetadata: org.aspectj.lang.reflect.AjType getAjType()> -> _SOURCES_
<org.springframework.remoting.rmi.RmiServiceExporter: void setRegistry(java.rmi.registry.Registry)> -> _SINKS_
<org.springframework.remoting.rmi.RmiInvocationWrapper_Skel: java.rmi.server.Operation[] getOperations()> -> _SOURCES_
<org.springframework.context.support.MessageSourceAccessor: java.lang.String getMessage(java.lang.String,java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.view.document.AbstractPdfView: boolean generatesDownloadContent()> -> _SOURCES_
<org.springframework.cglib.transform.AbstractClassTransformer: void setTarget(org.springframework.asm.ClassVisitor)> -> _SINKS_
<org.springframework.oxm.support.MarshallingSource: void setXMLReader(org.xml.sax.XMLReader)> -> _SINKS_
<org.springframework.orm.hibernate3.HibernateTransactionManager: void setDataSource(javax.sql.DataSource)> -> _CWE089__SINKS_
<org.springframework.http.converter.ActivationMediaTypeFactory: javax.activation.FileTypeMap loadFileTypeMapFromContextSupportModule()> -> _SOURCES_
<org.springframework.http.converter.json.MappingJacksonInputMessage: org.springframework.http.HttpHeaders getHeaders()> -> _SOURCES_
<org.springframework.security.config.authentication.SaltSourceBeanDefinitionParser: org.springframework.beans.BeanMetadataElement parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.orm.ibatis.SqlMapClientFactoryBean: void setLobHandler(org.springframework.jdbc.support.lob.LobHandler)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompHeaderAccessor: void setContentType(org.springframework.util.MimeType)> -> _SINKS_
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.util.Map getBeansOfType(java.lang.Class)> -> _SOURCES_
<org.springframework.web.util.CookieGenerator: java.lang.String getCookieName()> -> _SOURCES_
<org.springframework.beans.support.PagedListHolder: void setSource(java.util.List)> -> _SINKS_
<org.springframework.orm.hibernate3.HibernateTemplate: java.lang.Object get(java.lang.Class,java.io.Serializable)> -> _SOURCES_
<org.springframework.web.socket.config.WebSocketMessageBrokerStats: java.lang.String getWebSocketSessionStatsInfo()> -> _SOURCES_
<org.springframework.orm.jpa.vendor.TopLinkJpaVendorAdapter: org.springframework.orm.jpa.JpaDialect getJpaDialect()> -> _SOURCES_
<org.springframework.jdbc.core.simple.SimpleJdbcTemplate: int[] batchUpdate(java.lang.String,java.util.List,int[])> -> _CWE089__SINKS_
<org.springframework.web.accept.ContentNegotiationManagerFactoryBean: void setServletContext(javax.servlet.ServletContext)> -> _SINKS_
<org.springframework.security.access.expression.AbstractSecurityExpressionHandler: org.springframework.security.access.hierarchicalroles.RoleHierarchy getRoleHierarchy()> -> _SOURCES_
<org.springframework.beans.factory.support.BeanDefinitionDefaults: void setDependencyCheck(int)> -> _SINKS_
<org.springframework.test.web.servlet.DefaultMvcResult: void setAsyncResult(java.lang.Object)> -> _SINKS_
<org.springframework.web.portlet.handler.PortletRequestMethodNotSupportedException: java.lang.String[] getSupportedMethods()> -> _SOURCES_
<org.springframework.context.support.AbstractApplicationContext: org.springframework.beans.factory.BeanFactory getInternalParentBeanFactory()> -> _SOURCES_
<org.springframework.remoting.httpinvoker.AbstractHttpInvokerRequestExecutor: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.jms.listener.DefaultMessageListenerContainer: int getScheduledConsumerCount()> -> _SOURCES_
<org.springframework.web.servlet.resource.WebJarsResourceResolver: org.springframework.core.io.Resource resolveResourceInternal(javax.servlet.http.HttpServletRequest,java.lang.String,java.util.List,org.springframework.web.servlet.resource.ResourceResolverChain)> -> _SINKS_
<org.springframework.oxm.support.AbstractMarshaller: javax.xml.parsers.DocumentBuilderFactory createDocumentBuilderFactory()> -> _SOURCES_
<org.springframework.jdbc.support.lob.PassThroughClob: int setString(long,java.lang.String,int,int)> -> _CWE089__SINKS_
<org.springframework.messaging.simp.stomp.StompHeaders: void setReceiptId(java.lang.String)> -> _SINKS_
<org.springframework.web.socket.config.annotation.WebSocketTransportRegistration: org.springframework.web.socket.config.'annotation'.WebSocketTransportRegistration setSendBufferSizeLimit(int)> -> _SINKS_
<org.springframework.messaging.handler.invocation.AbstractExceptionHandlerMethodResolver: java.lang.reflect.Method getMappedMethod(java.lang.Class)> -> _SOURCES_
<org.springframework.context.i18n.SimpleLocaleContext: java.util.Locale getLocale()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletPreferences: void setPreferencesValidator(javax.portlet.PreferencesValidator)> -> _SINKS_
<org.springframework.beans.factory.generic.GenericBeanFactoryAccessor: java.lang.Object getBean(java.lang.String,java.lang.Class)> -> _SOURCES_
<org.springframework.beans.factory.config.PlaceholderConfigurerSupport: void setIgnoreUnresolvablePlaceholders(boolean)> -> _SINKS_
<org.springframework.orm.hibernate5.LocalSessionFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.http.server.ServletServerHttpRequest: java.security.Principal getPrincipal()> -> _SOURCES_
<org.springframework.jms.listener.AbstractMessageListenerContainer: java.lang.String getDestinationName()> -> _SOURCES_
<org.springframework.web.accept.ParameterContentNegotiationStrategy: void setParameterName(java.lang.String)> -> _SINKS_
<org.springframework.web.socket.sockjs.transport.handler.HtmlFileTransportHandler: void handleRequestInternal(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession)> -> _CWE079__SINKS_
<org.springframework.jdbc.support.nativejdbc.JBossNativeJdbcExtractor: java.sql.PreparedStatement getNativePreparedStatement(java.sql.PreparedStatement)> -> _CWE089__SOURCES_
<org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver: void setLogicalMappings(java.util.Properties)> -> _SINKS_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.util.concurrent.ListenableFuture exchange(java.net.URI,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,org.springframework.core.ParameterizedTypeReference)> -> _SINKS_
<org.springframework.jms.remoting.JmsInvokerClientInterceptor: void setQueueName(java.lang.String)> -> _SINKS_
<org.springframework.orm.hibernate4.HibernateTransactionManager: org.hibernate.Interceptor getEntityInterceptor()> -> _SOURCES_
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Class getPropertyType(java.lang.String)> -> _SOURCES_
<org.springframework.http.converter.FormHttpMessageConverter: org.springframework.http.HttpEntity getHttpEntity(java.lang.Object)> -> _SOURCES_
<org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator: org.springframework.jdbc.support.SQLErrorCodes getSqlErrorCodes()> -> _CWE089__SOURCES_
<org.springframework.beans.BeanWrapperImpl: java.beans.PropertyDescriptor getPropertyDescriptor(java.lang.String)> -> _SOURCES_
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: void setAllowNullValues(boolean)> -> _SINKS_
<org.aopalliance.aop.AspectException: void printStackTrace(java.io.PrintStream)> -> _SINKS_
<org.springframework.jms.config.MethodJmsListenerEndpoint: java.lang.StringBuilder getEndpointDescription()> -> _SOURCES_
<org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler: java.lang.String getAttributeDescription(java.beans.PropertyDescriptor,java.lang.String)> -> _SOURCES_
<org.springframework.transaction.config.TxAdviceBeanDefinitionParser: void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)> -> _SINKS_
<org.springframework.jdbc.datasource.init.ScriptUtils: void executeSqlScript(java.sql.Connection,org.springframework.core.io.support.EncodedResource)> -> _CWE089__SINKS_
<org.springframework.web.portlet.handler.SimpleMappingExceptionResolver: void setExceptionMappings(java.util.Properties)> -> _SINKS_
<org.springframework.jdbc.support.lob.SpringLobCreatorSynchronization: int getOrder()> -> _CWE089__SOURCES_
<org.springframework.jca.endpoint.AbstractMessageEndpointFactory: void setTransactionFactory(org.springframework.transaction.jta.TransactionFactory)> -> _SINKS_
<org.springframework.web.servlet.mvc.condition.RequestConditionHolder: java.lang.String getToStringInfix()> -> _SOURCES_
<org.springframework.web.socket.config.annotation.DelegatingWebSocketConfiguration: void setConfigurers(java.util.List)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.DeferredResultMethodReturnValueHandler: java.util.Map getAdapterMap()> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession: org.springframework.http.HttpHeaders getHandshakeHeaders()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletSession: void setNew(boolean)> -> _SINKS_
<org.springframework.jms.listener.DefaultMessageListenerContainer: int getMaxConcurrentConsumers()> -> _SOURCES_
<org.springframework.ejb.config.RemoteStatelessSessionBeanDefinitionParser: java.lang.String getBeanClassName(org.w3c.dom.Element)> -> _SOURCES_
<org.springframework.messaging.simp.stomp.BufferingStompDecoder: int getBufferSizeLimit()> -> _SOURCES_
<org.springframework.web.servlet.mvc.ParameterizableViewController: void setViewName(java.lang.String)> -> _SINKS_
<org.springframework.mock.http.MockHttpOutputMessage: byte[] getBodyAsBytes()> -> _SOURCES_
<org.springframework.web.filter.DelegatingFilterProxy: java.lang.String getContextAttribute()> -> _SOURCES_
<org.springframework.beans.factory.xml.XmlBeanDefinitionReader: int getValidationMode()> -> _SOURCES_
<org.springframework.remoting.jaxws.AbstractJaxWsServiceExporter: void setExecutor(java.util.concurrent.Executor)> -> _SINKS_
<org.springframework.validation.DataBinder: void setMessageCodesResolver(org.springframework.validation.MessageCodesResolver)> -> _SINKS_
<org.springframework.scheduling.timer.TimerFactoryBean: void setBeanName(java.lang.String)> -> _SINKS_
<org.springframework.context.support.AbstractApplicationContext: java.util.List getBeanFactoryPostProcessors()> -> _SOURCES_
<org.springframework.security.access.intercept.InterceptorStatusToken: java.lang.Object getSecureObject()> -> _SOURCES_
<org.springframework.format.number.money.Jsr354NumberFormatAnnotationFormatterFactory: java.util.Set getFieldTypes()> -> _SOURCES_
<org.springframework.transaction.jta.JtaTransactionManager: void setAutodetectTransactionManager(boolean)> -> _SINKS_
<org.springframework.core.env.JOptCommandLinePropertySource: java.lang.String[] getPropertyNames()> -> _SOURCES_
<org.springframework.test.web.client.MockMvcClientHttpRequestFactory: org.springframework.http.HttpHeaders getResponseHeaders(org.springframework.mock.web.MockHttpServletResponse)> -> _SOURCES_
<org.springframework.cache.interceptor.NamedCacheResolver: java.util.Collection getCacheNames(org.springframework.cache.interceptor.CacheOperationInvocationContext)> -> _SOURCES_
<org.springframework.util.StringUtils: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)> -> _SANITIZERS__SINKS_
<org.springframework.mock.web.MockHttpServletRequest: void setContentType(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.web.bind.annotation.support.HandlerMethodInvoker: java.lang.String parseDefaultValueAttribute(java.lang.String)> -> _SOURCES_
<org.springframework.jdbc.support.SQLErrorCodes: void setDatabaseProductNames(java.lang.String[])> -> _CWE089__SINKS_
<org.springframework.cglib.transform.impl.FieldProviderTransformer: void getNames()> -> _SOURCES_
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setRedirectHttp10Compatible(boolean)> -> _SINKS_
<org.springframework.jmx.support.WebLogicMBeanServerFactoryBean: void setServerUrl(java.lang.String)> -> _SINKS_
<org.springframework.web.portlet.context.PortletRequestAttributes: javax.portlet.PortletRequest getRequest()> -> _SOURCES_
<org.springframework.instrument.classloading.jboss.JBossMCAdapter: java.lang.ClassLoader getInstrumentableClassLoader()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.ModelAndViewMethodReturnValueHandler: java.lang.String[] getRedirectPatterns()> -> _SOURCES_
<org.springframework.context.support.ReloadableResourceBundleMessageSource: org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder getProperties(java.lang.String)> -> _SOURCES_
<org.springframework.mail.MailSendException: java.lang.String getMessage()> -> _SOURCES_
<org.springframework.cache.transaction.TransactionAwareCacheManagerProxy: org.springframework.cache.Cache getCache(java.lang.String)> -> _SOURCES_
<org.springframework.beans.factory.support.GenericTypeAwareAutowireCandidateResolver: org.springframework.core.ResolvableType getReturnTypeForFactoryMethod(org.springframework.beans.factory.support.RootBeanDefinition,org.springframework.beans.factory.config.DependencyDescriptor)> -> _SOURCES_
<org.springframework.web.util.HierarchicalUriComponents: java.lang.String getSchemeSpecificPart()> -> _SOURCES_
<org.springframework.expression.spel.support.StandardEvaluationContext: java.util.List getMethodResolvers()> -> _SOURCES_
<org.springframework.jdbc.datasource.DataSourceUtils: void doReleaseConnection(java.sql.Connection,javax.sql.DataSource)> -> _CWE306__CWE089__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.cors.UrlBasedCorsConfigurationSource: void setAlwaysUseFullPath(boolean)> -> _SINKS_
<org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean: javax.sql.DataSource getDataSource()> -> _SOURCES_
<org.springframework.ui.velocity.SpringResourceLoader: java.io.InputStream getResourceStream(java.lang.String)> -> _SOURCES_
<org.springframework.jca.cci.core.support.CciDaoSupport: void setCciTemplate(org.springframework.jca.cci.core.CciTemplate)> -> _SINKS_
<org.springframework.beans.factory.support.AbstractBeanFactory: void setParentBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.jdbc.datasource.IsolationLevelDataSourceAdapter: java.sql.Connection doGetConnection(java.lang.String,java.lang.String)> -> _CWE306__CWE089__AUTHENTICATIONS_TO_HIGH_
<org.springframework.http.client.HttpComponentsAsyncClientHttpResponse: int getRawStatusCode()> -> _SOURCES__CWE601_
<org.springframework.format.datetime.joda.JodaTimeContext: org.joda.time.format.DateTimeFormatter getFormatter(org.joda.time.format.DateTimeFormatter)> -> _SOURCES_
<org.springframework.jmx.export.notification.ModelMBeanNotificationPublisher: void sendNotification(javax.management.Notification)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletResponse: void setContentType(java.lang.String)> -> _CWE079__SINKS__CWE601_
<org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean: void setIndentOutput(boolean)> -> _SINKS_
<org.springframework.orm.toplink.support.CommonsLoggingSessionLog: void log(oracle.toplink.logging.SessionLogEntry)> -> _SINKS_
<org.springframework.web.servlet.mvc.AbstractUrlViewController: org.springframework.web.util.UrlPathHelper getUrlPathHelper()> -> _SOURCES_
<org.springframework.jdbc.support.nativejdbc.XAPoolNativeJdbcExtractor: java.sql.Connection doGetNativeConnection(java.sql.Connection)> -> _CWE306__CWE089__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.mock.web.portlet.MockBaseURL: void setSecure(boolean)> -> _SINKS_
<org.springframework.web.method.annotation.ModelFactory: java.lang.String getNameForReturnValue(java.lang.Object,org.springframework.core.MethodParameter)> -> _CWE079__SOURCES_
<org.springframework.messaging.simp.stomp.StompHeaderAccessor: java.lang.String getNack()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.RequestCacheConfigurer: org.springframework.security.web.util.matcher.RequestMatcher createDefaultSavedRequestMatcher(org.springframework.security.config.'annotation'.web.HttpSecurityBuilder)> -> _SOURCES_
<org.springframework.test.context.support.AbstractTestContextBootstrapper: java.lang.Class resolveExplicitContextLoaderClass(java.util.List)> -> _SOURCES_
<org.springframework.expression.spel.ast.OperatorBetween: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.beans.factory.config.PlaceholderConfigurerSupport: void setPlaceholderPrefix(java.lang.String)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler: java.lang.String getClientLogin()> -> _CWE306__SOURCES_
<org.springframework.transaction.support.TransactionSynchronizationManager: java.util.List getSynchronizations()> -> _SOURCES_
<org.springframework.transaction.config.TxAdviceBeanDefinitionParser: java.lang.Class getBeanClass(org.w3c.dom.Element)> -> _SOURCES_
<org.springframework.messaging.simp.user.DefaultUserDestinationResolver: java.lang.String getDestinationPrefix()> -> _SOURCES__CWE862_
<org.springframework.jndi.JndiObjectLocator: void setExpectedType(java.lang.Class)> -> _SINKS_
<org.springframework.core.env.AbstractEnvironment: void setConversionService(org.springframework.core.convert.support.ConfigurableConversionService)> -> _SINKS_
<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: void setSearchSystemEnvironment(boolean)> -> _SINKS_
<org.springframework.orm.hibernate4.HibernateTemplate: java.lang.Object load(java.lang.String,java.io.Serializable)> -> _SOURCES_
<org.springframework.asm.Type: java.lang.String getInternalName(java.lang.Class)> -> _SOURCES_
<org.springframework.web.portlet.handler.SimplePortletHandlerAdapter: void setPortletContext(javax.portlet.PortletContext)> -> _SINKS_
<org.springframework.test.context.jdbc.MergedSqlConfig: java.lang.String getDataSource()> -> _CWE089__SOURCES_
<org.springframework.http.client.SimpleStreamingClientHttpRequest: java.io.OutputStream getBodyInternal(org.springframework.http.HttpHeaders)> -> _SOURCES_
<org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean: void setFeaturesToEnable(java.lang.Object[])> -> _SINKS_
<org.springframework.http.client.SimpleBufferingClientHttpRequest: org.springframework.http.HttpMethod getMethod()> -> _SOURCES_
<org.springframework.format.number.money.Jsr354NumberFormatAnnotationFormatterFactory: org.springframework.format.Printer getPrinter(java.lang.'annotation'.Annotation,java.lang.Class)> -> _SOURCES_
<org.springframework.core.type.StandardMethodMetadata: java.lang.String getMethodName()> -> _SOURCES_
<org.springframework.beans.factory.aspectj.AnnotationBeanConfigurerAspect: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.expression.spel.support.StandardEvaluationContext: org.springframework.expression.TypeComparator getTypeComparator()> -> _SOURCES_
<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.support.AbstractBeanDefinition parseBeanDefinitionElement(org.w3c.dom.Element,java.lang.String,org.springframework.beans.factory.config.BeanDefinition)> -> _SOURCES__SINKS_
<org.springframework.http.converter.ResourceHttpMessageConverter: void writeInternal(org.springframework.core.io.Resource,org.springframework.http.HttpOutputMessage)> -> _SINKS_
<org.springframework.mock.web.MockServletContext: java.lang.String getResourceLocation(java.lang.String)> -> _SOURCES_
<org.springframework.mock.web.DelegatingServletOutputStream: java.io.OutputStream getTargetStream()> -> _SOURCES_
<org.springframework.aop.framework.ProxyProcessorSupport: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.oxm.jibx.JibxMarshaller: java.lang.Object unmarshalXmlStreamReader(javax.xml.stream.XMLStreamReader)> -> _SOURCES_
<org.springframework.orm.jdo.JdoAccessor: void setJdoDialect(org.springframework.orm.jdo.JdoDialect)> -> _SINKS_
<org.springframework.core.env.AbstractEnvironment: void setPlaceholderPrefix(java.lang.String)> -> _SINKS_
<org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider: void setPostAuthenticationChecks(org.springframework.security.core.userdetails.UserDetailsChecker)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.beans.AbstractPropertyAccessor: java.lang.Class getPropertyType(java.lang.String)> -> _SOURCES_
<org.springframework.jms.remoting.JmsInvokerClientInterceptor: javax.jms.Message doExecuteRequest(javax.jms.Session,javax.jms.Queue,javax.jms.Message)> -> _SINKS_
<org.springframework.ui.velocity.VelocityEngineFactory: void initVelocityResourceLoader(org.apache.velocity.app.VelocityEngine,java.lang.String)> -> _SOURCES_
<org.springframework.web.socket.server.standard.AbstractTyrusRequestUpgradeStrategy: java.lang.Object createTyrusEndpoint(javax.websocket.Endpoint,java.lang.String,java.lang.String,java.util.List,javax.websocket.WebSocketContainer,org.glassfish.tyrus.core.TyrusWebSocketEngine)> -> _SINKS_
<org.springframework.web.portlet.mvc.annotation.DefaultAnnotationHandlerMapping: boolean detectHandlerMethods(java.lang.Class,java.lang.String,org.springframework.web.bind.'annotation'.RequestMapping)> -> _SINKS_
<org.springframework.http.converter.json.GsonFactoryBean: void setPrettyPrinting(boolean)> -> _SINKS_
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingleton(java.lang.String,org.springframework.beans.factory.ObjectFactory)> -> _SOURCES_
<org.springframework.context.annotation.ConfigurationClassPostProcessor: void setBeanNameGenerator(org.springframework.beans.factory.support.BeanNameGenerator)> -> _SINKS_
<org.springframework.mock.web.portlet.ServletWrappingPortletContext: java.lang.String getMimeType(java.lang.String)> -> _SOURCES_
<org.springframework.web.portlet.mvc.annotation.AnnotationMethodHandlerAdapter: void setCustomModelAndViewResolvers(org.springframework.web.servlet.mvc.annotation.ModelAndViewResolver[])> -> _SINKS_
<org.springframework.web.socket.handler.ConcurrentWebSocketSessionDecorator: int getBufferSize()> -> _SOURCES_
<org.springframework.format.datetime.joda.DateTimeFormatterFactory: void setTimeZone(java.util.TimeZone)> -> _SINKS_
<org.springframework.security.core.userdetails.memory.UserAttribute: void setAuthorities(java.util.List)> -> _SINKS__CWE862_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: java.util.List getInitBinderArgumentResolvers()> -> _SOURCES_
<org.springframework.web.context.support.ServletContextFactoryBean: void setServletContext(javax.servlet.ServletContext)> -> _SINKS_
<org.springframework.web.client.RestTemplate: void setErrorHandler(org.springframework.web.client.ResponseErrorHandler)> -> _SINKS_
<org.springframework.test.context.support.DefaultBootstrapContext: org.springframework.test.context.CacheAwareContextLoaderDelegate getCacheAwareContextLoaderDelegate()> -> _SOURCES_
<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.beans.factory.support.MethodOverride: void setOverloaded(boolean)> -> _SOURCES__SINKS_
<org.springframework.messaging.simp.stomp.StompHeaders: java.lang.String getDestination()> -> _SOURCES_
<org.springframework.test.web.client.match.XpathRequestMatchers: org.springframework.test.web.client.RequestMatcher nodeCount(int)> -> _SOURCES_
<org.springframework.test.context.web.GenericGroovyXmlWebContextLoader: java.lang.String[] getResourceSuffixes()> -> _SOURCES_
<org.springframework.orm.hibernate5.HibernateTransactionManager: void setPrepareConnection(boolean)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.HandlerExecutionChain: java.lang.Object getHandler()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockBaseURL: java.lang.String encodeParameter(java.lang.String,java.lang.String[])> -> _SANITIZERS_
<org.springframework.ejb.config.JndiLookupBeanDefinitionParser: void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)> -> _SINKS_
<org.springframework.orm.hibernate4.support.OpenSessionInViewInterceptor: void preHandle(org.springframework.web.context.request.WebRequest)> -> _SINKS_
<org.springframework.aop.aspectj.AspectJExpressionPointcut: java.lang.String getCurrentProxiedBeanName()> -> _SOURCES_
<org.springframework.web.servlet.handler.AbstractHandlerMapping: org.springframework.web.servlet.HandlerExecutionChain getHandlerExecutionChain(java.lang.Object,javax.servlet.http.HttpServletRequest)> -> _SOURCES__SINKS_
<org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter: void setCustomArgumentResolvers(org.springframework.web.bind.support.WebArgumentResolver[])> -> _SINKS_
<org.springframework.messaging.simp.SimpMessagingTemplate: void convertAndSendToUser(java.lang.String,java.lang.String,java.lang.Object,org.springframework.messaging.core.MessagePostProcessor)> -> _SINKS_
<org.springframework.beans.factory.support.MethodOverride: void setSource(java.lang.Object)> -> _SINKS_
<org.springframework.ejb.access.LocalStatelessSessionProxyFactoryBean: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.remoting.support.RemoteInvocationBasedExporter: org.springframework.remoting.support.RemoteInvocationExecutor getRemoteInvocationExecutor()> -> _SOURCES_
<org.springframework.orm.jdo.LocalPersistenceManagerFactoryBean: void setPersistenceManagerFactoryName(java.lang.String)> -> _SINKS_
<org.springframework.oxm.jibx.JibxMarshaller: void setDocTypeRootElementName(java.lang.String)> -> _SINKS_
<org.springframework.orm.toplink.support.TopLinkDaoSupport: void setTopLinkTemplate(org.springframework.orm.toplink.TopLinkTemplate)> -> _SINKS_
<org.springframework.jms.connection.CachedMessageProducer: void publish(javax.jms.Topic,javax.jms.Message,int,int,long)> -> _SINKS_
<org.springframework.http.converter.ObjectToStringHttpMessageConverter: java.lang.Long getContentLength(java.lang.Object,org.springframework.http.MediaType)> -> _SOURCES_
<org.springframework.web.socket.client.standard.EndpointConnectionManager: void setExtensions(javax.websocket.Extension[])> -> _SINKS_
<org.springframework.web.socket.handler.WebSocketSessionDecorator: int getTextMessageSizeLimit()> -> _SOURCES_
<org.springframework.orm.hibernate4.LocalSessionFactoryBean: void setMappingResources(java.lang.String[])> -> _SINKS_
<org.springframework.web.jsf.DelegatingPhaseListenerMulticaster: java.util.Collection getDelegates(javax.faces.context.FacesContext)> -> _SOURCES_
<org.springframework.core.io.support.PropertiesLoaderSupport: void setIgnoreResourceNotFound(boolean)> -> _SINKS_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.lang.Object[] getInterceptors()> -> _SOURCES_
<org.springframework.web.socket.server.support.AbstractHandshakeHandler: org.springframework.web.socket.server.RequestUpgradeStrategy initRequestUpgradeStrategy()> -> _SOURCES_
<org.springframework.web.portlet.HandlerExecutionChain: void addInterceptors(org.springframework.web.portlet.HandlerInterceptor[])> -> _SINKS_
<org.springframework.jdbc.support.xml.Jdbc4SqlXmlHandler: org.springframework.jdbc.support.xml.SqlXmlValue newSqlXmlValue(org.springframework.jdbc.support.xml.XmlCharacterStreamProvider)> -> _CWE089__SINKS_
<org.springframework.jmx.support.WebLogicJndiMBeanServerFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletContext: java.util.Enumeration getContainerRuntimeOptions()> -> _SOURCES_
<org.springframework.jms.core.JmsMessagingTemplate: javax.jms.ConnectionFactory getConnectionFactory()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.cache.concurrent.ConcurrentMapCache: java.lang.Object get(java.lang.Object,java.util.concurrent.Callable)> -> _SOURCES_
<org.springframework.test.web.client.match.JsonPathRequestMatchers: org.springframework.test.web.client.RequestMatcher isBoolean()> -> _SOURCES_
<org.springframework.jdbc.core.support.JdbcDaoSupport: org.springframework.jdbc.core.JdbcTemplate getJdbcTemplate()> -> _CWE089__SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: org.springframework.web.method.'annotation'.InitBinderDataBinderFactory createDataBinderFactory(java.util.List)> -> _SOURCES_
<org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractorAdapter: java.sql.Statement getNativeStatement(java.sql.Statement)> -> _CWE089__SOURCES_
<org.springframework.jms.connection.UserCredentialsConnectionFactoryAdapter: javax.jms.TopicConnection doCreateTopicConnection(java.lang.String,java.lang.String)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.jmx.export.metadata.ManagedNotification: java.lang.String[] getNotificationTypes()> -> _SOURCES_
<org.springframework.web.context.support.ServletContextParameterFactoryBean: void setInitParamName(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.support.nativejdbc.XAPoolNativeJdbcExtractor: boolean isNativeConnectionNecessaryForNativeStatements()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__CWE862_
<org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder: org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder setContentNegotiationManager(org.springframework.web.accept.ContentNegotiationManager)> -> _SINKS_
<org.springframework.web.client.MessageBodyClientHttpResponseWrapper: java.lang.String getStatusText()> -> _SOURCES__CWE601_
<org.springframework.core.io.support.PropertiesLoaderSupport: void setPropertiesArray(java.util.Properties[])> -> _SINKS_
<org.springframework.jms.remoting.JmsInvokerProxyFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.jms.remoting.JmsInvokerProxyFactoryBean: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.jms.listener.AbstractMessageListenerContainer: void setSubscriptionDurable(boolean)> -> _SINKS_
<org.springframework.transaction.TransactionSystemException: java.lang.Throwable getApplicationException()> -> _SOURCES_
<org.springframework.security.config.http.HttpConfigurationBuilder: void setAccessDeniedHandler(org.springframework.beans.BeanMetadataElement)> -> _SINKS_
<org.springframework.orm.hibernate4.HibernateTemplate: int getFetchSize()> -> _SOURCES_
<org.springframework.web.socket.server.support.AbstractHandshakeHandler: java.lang.String selectProtocol(java.util.List,org.springframework.web.socket.WebSocketHandler)> -> _CWE079__SINKS_
<org.springframework.web.util.WebUtils: java.io.File getTempDir(javax.servlet.ServletContext)> -> _SOURCES_
<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.support.BeanDefinitionDefaults getBeanDefinitionDefaults()> -> _SOURCES_
<org.springframework.web.servlet.support.RequestContext: java.lang.String getThemeMessage(org.springframework.context.MessageSourceResolvable)> -> _CWE079__SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: long parseDateHeader(java.lang.String,java.lang.String)> -> _SOURCES__SINKS_
<org.springframework.jca.support.ResourceAdapterFactoryBean: void setResourceAdapterClass(java.lang.Class)> -> _SINKS_
<org.springframework.cache.transaction.AbstractTransactionSupportingCacheManager: void setTransactionAware(boolean)> -> _SINKS_
<org.springframework.jms.config.AbstractJmsListenerEndpoint: java.lang.String getId()> -> _SOURCES_
<org.springframework.messaging.simp.SimpMessageHeaderAccessor: java.lang.String getDestination()> -> _SOURCES_
<org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler: void setPoolSize(int)> -> _SINKS_
<org.springframework.orm.hibernate3.LocalSessionFactoryBean: void setJtaTransactionManager(javax.transaction.TransactionManager)> -> _SINKS_
<org.springframework.security.config.http.HttpConfigurationBuilder: org.springframework.beans.factory.config.BeanReference getSessionStrategy()> -> _SOURCES_
<org.springframework.orm.hibernate5.LocalSessionFactoryBean: org.hibernate.boot.MetadataSources getMetadataSources()> -> _SOURCES_
<org.springframework.jmx.access.ConnectorDelegate: javax.management.MBeanServerConnection connect(javax.management.remote.JMXServiceURL,java.util.Map,java.lang.String)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.view.tiles2.TilesConfigurer: void setValidateDefinitions(boolean)> -> _SINKS_
<org.springframework.http.client.SimpleClientHttpRequestFactory: void setTaskExecutor(org.springframework.core.task.AsyncListenableTaskExecutor)> -> _SINKS_
<org.springframework.http.HttpHeaders: long getLastModified()> -> _SOURCES_
<org.springframework.ejb.config.JndiLookupBeanDefinitionParser: java.lang.Class getBeanClass(org.w3c.dom.Element)> -> _SOURCES_
<org.springframework.jms.support.destination.JmsDestinationAccessor: org.springframework.jms.support.destination.DestinationResolver getDestinationResolver()> -> _SOURCES_
<org.springframework.cache.concurrent.ConcurrentMapCacheManager: void setStoreByValue(boolean)> -> _SINKS_
<org.springframework.jdbc.datasource.DataSourceUtils: void releaseConnection(java.sql.Connection,javax.sql.DataSource)> -> _CWE306__CWE089__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.util.ContentCachingRequestWrapper: javax.servlet.ServletInputStream getInputStream()> -> _SOURCES_
<org.springframework.messaging.simp.SimpMessagingTemplate: void send(org.springframework.messaging.Message)> -> _SINKS_
<org.springframework.remoting.rmi.RmiServiceExporter: java.rmi.registry.Registry getRegistry(java.lang.String,int,java.rmi.server.RMIClientSocketFactory,java.rmi.server.RMIServerSocketFactory)> -> _SOURCES_
<org.springframework.messaging.simp.annotation.support.SendToMethodReturnValueHandler: java.lang.String getDefaultUserDestinationPrefix()> -> _SOURCES_
<org.springframework.jdbc.support.xml.Jdbc4SqlXmlHandler: org.springframework.jdbc.support.xml.SqlXmlValue newSqlXmlValue(org.springframework.jdbc.support.xml.XmlBinaryStreamProvider)> -> _CWE089__SINKS_
<org.springframework.beans.factory.support.AbstractBeanDefinition: void setDependencyCheck(int)> -> _SINKS_
<org.springframework.http.client.support.InterceptingHttpAccessor: org.springframework.http.client.ClientHttpRequestFactory getRequestFactory()> -> _SOURCES_
<org.springframework.test.util.XpathExpectationsHelper: void assertNumber(byte[],java.lang.String,java.lang.Double)> -> _SINKS_
<org.springframework.web.portlet.mvc.ParameterizableViewController: java.lang.String getViewName()> -> _SOURCES_
<org.springframework.aop.framework.AdvisedSupport: void setTargetClass(java.lang.Class)> -> _SINKS_
<org.springframework.security.provisioning.JdbcUserDetailsManager: void setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)> -> _CWE306__CWE089__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.cache.jcache.interceptor.DefaultJCacheOperationSource: org.springframework.cache.interceptor.CacheResolver getCacheResolver()> -> _SOURCES_
<org.springframework.web.context.request.RequestContextHolder: org.springframework.web.context.request.RequestAttributes currentRequestAttributes()> -> _SOURCES_
<org.springframework.context.annotation.ConditionEvaluator: org.springframework.context.'annotation'.Condition getCondition(java.lang.String,java.lang.ClassLoader)> -> _SOURCES_
<org.springframework.beans.factory.config.ConstructorArgumentValues: org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder getGenericArgumentValue(java.lang.Class)> -> _SOURCES_
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Class)> -> _SOURCES_
<org.springframework.orm.hibernate5.SessionFactoryUtils: org.hibernate.FlushMode getFlushMode(org.hibernate.Session)> -> _SOURCES_
<org.springframework.ejb.support.AbstractEnterpriseBean: org.springframework.beans.factory.BeanFactory getBeanFactory()> -> _SOURCES_
<org.springframework.jms.listener.AbstractJmsListeningContainer: void setBeanName(java.lang.String)> -> _SINKS_
<org.springframework.security.config.http.AuthenticationConfigBuilder: java.util.List getFilters()> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.handler.XhrReceivingTransportHandler: org.springframework.http.HttpStatus getResponseStatus()> -> _SOURCES_
<org.springframework.oxm.castor.CastorMarshaller: void setUseXSITypeAtRoot(boolean)> -> _SINKS_
<org.springframework.scheduling.config.CronTask: java.lang.String getExpression()> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateTemplate: org.hibernate.Session getSession()> -> _SOURCES_
<org.springframework.messaging.support.MessageHeaderAccessor: void setErrorChannelName(java.lang.String)> -> _SINKS_
<org.springframework.web.socket.server.standard.UndertowRequestUpgradeStrategy: java.lang.String[] getSupportedVersions()> -> _SOURCES_
<org.springframework.test.context.support.DelegatingSmartContextLoader: org.springframework.test.context.SmartContextLoader getAnnotationConfigLoader()> -> _SOURCES_
<org.springframework.scheduling.concurrent.ScheduledExecutorFactoryBean: java.util.concurrent.ScheduledExecutorService createExecutor(int,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)> -> _SINKS_
<org.springframework.format.datetime.joda.DurationFormatter: org.joda.time.Duration parse(java.lang.String,java.util.Locale)> -> _SINKS_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configurePathMatch(org.springframework.web.servlet.config.'annotation'.PathMatchConfigurer)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletResponse: void setHeaderValue(java.lang.String,java.lang.Object)> -> _CWE079__SINKS__CWE601_
<org.springframework.mock.web.MockServletContext: java.util.Enumeration getServletNames()> -> _SOURCES_
<org.springframework.web.servlet.mvc.condition.PatternsRequestCondition: java.util.List getMatchingPatterns(java.lang.String)> -> _SOURCES_
<org.springframework.oxm.castor.CastorMarshaller: void setReuseObjects(boolean)> -> _SINKS_
<org.springframework.web.bind.annotation.support.HandlerMethodResolver: org.springframework.web.bind.'annotation'.RequestMapping getTypeLevelMapping()> -> _SOURCES_
<org.springframework.expression.spel.support.StandardEvaluationContext: org.springframework.expression.TypeLocator getTypeLocator()> -> _SOURCES_
<org.springframework.test.web.client.match.ContentRequestMatchers: org.springframework.test.web.client.RequestMatcher string(java.lang.String)> -> _SOURCES_
<org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener: java.lang.String[] getScripts(org.springframework.test.context.jdbc.Sql,org.springframework.test.context.TestContext,boolean)> -> _CWE089__SOURCES_
<org.springframework.http.client.support.AsyncHttpAccessor: org.springframework.http.client.AsyncClientHttpRequest createAsyncRequest(java.net.URI,org.springframework.http.HttpMethod)> -> _SOURCES_
<org.springframework.web.servlet.support.RequestContext: java.lang.String getMessage(org.springframework.context.MessageSourceResolvable,boolean)> -> _SOURCES_
<org.springframework.web.portlet.context.PortletWebRequest: java.lang.Object getNativeResponse(java.lang.Class)> -> _CWE079__SOURCES_
<org.springframework.messaging.simp.user.UserDestinationResult: java.util.Set getTargetDestinations()> -> _SOURCES__CWE862_
<org.springframework.jdbc.core.JdbcTemplate: java.sql.Connection createConnectionProxy(java.sql.Connection)> -> _CWE306__CWE089__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.cache.interceptor.CacheOperation: java.lang.String getCacheResolver()> -> _SOURCES_
<org.springframework.messaging.simp.SimpMessageHeaderAccessor: void setSessionAttributes(java.util.Map)> -> _SINKS_
<org.springframework.mail.SimpleMailMessage: void setFrom(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.portlet.MockMimeResponse: void setForwardedUrl(java.lang.String)> -> _SINKS__CWE601_
<org.springframework.core.StandardReflectionParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object parseKeyElement(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition,java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.DispatcherServlet: void setDetectAllViewResolvers(boolean)> -> _SINKS_
<org.springframework.web.servlet.tags.form.AbstractMultiCheckedElementTag: void setDelimiter(java.lang.String)> -> _SINKS_
<org.springframework.transaction.jta.UserTransactionAdapter: int getStatus()> -> _SOURCES__CWE862_
<org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: void setEntityManagerFactoryInterface(java.lang.Class)> -> _SINKS_
<org.springframework.beans.factory.annotation.CustomAutowireConfigurer: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.jdbc.core.metadata.GenericCallMetaDataProvider: int getRefCursorSqlType()> -> _CWE089__SOURCES_
<org.springframework.beans.factory.support.ManagedProperties: java.lang.Object getSource()> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateTemplate: int bulkUpdate(java.lang.String,java.lang.Object[])> -> _SINKS_
<org.springframework.messaging.support.MessageBuilder: org.springframework.messaging.support.MessageBuilder setErrorChannelName(java.lang.String)> -> _SINKS_
<org.springframework.jms.core.JmsMessagingTemplate: org.springframework.messaging.Message doSendAndReceive(javax.jms.Destination,org.springframework.messaging.Message)> -> _SINKS_
<org.springframework.web.accept.ContentNegotiationManagerFactoryBean: void setIgnoreUnknownPathExtensions(boolean)> -> _SINKS_
<org.springframework.web.filter.DelegatingFilterProxy: void setTargetBeanName(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.MockJspWriter: void println(char)> -> _SINKS_
<org.springframework.scheduling.annotation.AsyncConfigurerSupport: java.util.concurrent.Executor getAsyncExecutor()> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler: java.lang.String getRelayHost()> -> _SOURCES_
<org.springframework.util.concurrent.FutureAdapter: java.lang.Object get()> -> _SOURCES_
<org.springframework.web.servlet.view.AbstractTemplateViewResolver: void setExposeSpringMacroHelpers(boolean)> -> _SINKS_
<org.springframework.messaging.converter.MappingJackson2MessageConverter: com.fasterxml.jackson.databind.ObjectMapper getObjectMapper()> -> _SOURCES_
<org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper: boolean isAddPrefixIfAlreadyExisting()> -> _SOURCES_
<org.springframework.web.servlet.handler.SimpleMappingExceptionResolver: void setExceptionMappings(java.util.Properties)> -> _SINKS_
<org.springframework.jmx.export.assembler.AbstractConfigurableMBeanInfoAssembler: void setNotificationInfoMappings(java.util.Map)> -> _SINKS_
<org.springframework.orm.jdo.LocalPersistenceManagerFactoryBean: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.scheduling.quartz.SchedulerAccessor: void setJobSchedulingDataLocation(java.lang.String)> -> _SINKS_
<org.springframework.validation.beanvalidation.LocalValidatorFactoryBean: void setProviderClass(java.lang.Class)> -> _SINKS_
<org.springframework.jmx.export.SpringModelMBean: void setAttribute(javax.management.Attribute)> -> _SINKS_
<org.springframework.cglib.proxy.MixinEverythingEmitter: java.lang.Class[] getInterfaces(java.lang.Class[])> -> _SOURCES_
<org.springframework.messaging.simp.config.TaskExecutorRegistration: org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor getTaskExecutor()> -> _SOURCES_
<org.springframework.expression.spel.ast.Indexer: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.web.servlet.tags.RequestContextAwareTag: org.springframework.web.servlet.support.RequestContext getRequestContext()> -> _SOURCES_
<org.springframework.util.CustomizableThreadCreator: void setThreadGroupName(java.lang.String)> -> _SINKS_
<org.springframework.web.context.support.ContextExposingHttpServletRequest: void setAttribute(java.lang.String,java.lang.Object)> -> _CWE079__SINKS_
<org.springframework.aop.aspectj.annotation.LazySingletonAspectInstanceFactoryDecorator: int getOrder()> -> _SOURCES_
<org.springframework.web.socket.messaging.SessionDisconnectEvent: org.springframework.web.socket.CloseStatus getCloseStatus()> -> _SOURCES_
<org.springframework.orm.jdo.TransactionAwarePersistenceManagerFactoryProxy: void setAllowCreate(boolean)> -> _SINKS_
<org.springframework.security.config.annotation.web.configurers.openid.OpenIDLoginConfigurer: org.springframework.security.config.'annotation'.web.configurers.openid.OpenIDLoginConfigurer loginPage(java.lang.String)> -> _AUTHENTICATIONS_TO_HIGH_
<org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder: org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder setType(org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType)> -> _CWE089__SINKS_
<org.springframework.beans.BeanWrapperImpl: java.lang.Class getPropertyType(java.lang.String)> -> _SOURCES_
<org.springframework.scheduling.quartz.CronTriggerFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.aop.support.StaticMethodMatcherPointcutAdvisor: org.springframework.aop.Pointcut getPointcut()> -> _SOURCES_
<org.springframework.scheduling.quartz.JobDetailFactoryBean: void setApplicationContext(org.springframework.context.ApplicationContext)> -> _SINKS_
<org.springframework.format.datetime.joda.JodaTimeFormatterRegistrar: org.joda.time.format.DateTimeFormatter getFormatter(org.springframework.format.datetime.joda.JodaTimeFormatterRegistrar$Type)> -> _SOURCES_
<org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory: void setDatabaseType(org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType)> -> _CWE089__SINKS_
<org.springframework.test.context.transaction.TransactionConfigurationAttributes: java.lang.String getTransactionManagerName()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver: org.springframework.web.servlet.mvc.method.'annotation'.RequestResponseBodyAdviceChain getAdvice()> -> _SOURCES_
<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Constructor)> -> _SOURCES_
<org.springframework.validation.AbstractPropertyBindingResult: org.springframework.beans.PropertyEditorRegistry getPropertyEditorRegistry()> -> _SOURCES_
<org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParser: org.springframework.beans.BeanMetadataElement parseUserDetailsClassOrUserMapperRef(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES__CWE862_
<org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession: org.springframework.web.socket.sockjs.frame.SockJsMessageCodec getMessageCodec()> -> _SOURCES_
<org.springframework.jdbc.core.namedparam.EmptySqlParameterSource: int getSqlType(java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.mock.web.MockServletConfig: java.lang.String getServletName()> -> _SOURCES_
<org.springframework.core.io.VfsUtils: java.lang.Object getChild(java.lang.Object,java.lang.String)> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: java.lang.String getServletPath()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.FormTag: java.lang.String getCommandName()> -> _SOURCES_
<org.springframework.jms.listener.serversession.AbstractPoolingServerSessionFactory: void setTaskExecutor(org.springframework.core.task.TaskExecutor)> -> _SINKS_
<org.springframework.jdbc.object.SqlUpdate: void setRequiredRowsAffected(int)> -> _CWE089__SINKS_
<org.springframework.security.core.AuthenticationException: java.lang.Object getExtraInformation()> -> _SOURCES_
<org.springframework.cglib.transform.impl.FieldProviderTransformer: void getTypes()> -> _SOURCES_
<org.springframework.test.context.support.DependencyInjectionTestExecutionListener: int getOrder()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletSession: java.lang.String getId()> -> _SOURCES_
<org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener: void afterTestMethod(org.springframework.test.context.TestContext)> -> _CWE089__SINKS_
<org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager: org.springframework.orm.jpa.persistenceunit.MutablePersistenceUnitInfo getPersistenceUnitInfo(java.lang.String)> -> _SOURCES_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: java.sql.Date getDate(java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.transaction.support.AbstractPlatformTransactionManager: void setTransactionSynchronization(int)> -> _SINKS_
<org.springframework.messaging.simp.config.MessageBrokerRegistry: org.springframework.messaging.simp.config.MessageBrokerRegistry setCacheLimit(int)> -> _SINKS_
<org.springframework.web.context.request.async.CallableProcessingInterceptorAdapter: java.lang.Object handleTimeout(org.springframework.web.context.request.NativeWebRequest,java.util.concurrent.Callable)> -> _SINKS_
<org.springframework.beans.factory.config.MethodInvokingFactoryBean: org.springframework.beans.TypeConverter getDefaultTypeConverter()> -> _SOURCES_
<org.springframework.test.context.jdbc.MergedSqlConfig: java.lang.Enum getEnum(org.springframework.core.'annotation'.AnnotationAttributes,java.lang.String,java.lang.Enum,java.lang.Enum)> -> _CWE089__SOURCES_
<org.springframework.mail.javamail.ConfigurableMimeFileTypeMap: javax.activation.FileTypeMap getFileTypeMap()> -> _SOURCES_
<org.springframework.mail.javamail.MimeMessageHelper: javax.activation.FileTypeMap getFileTypeMap()> -> _SOURCES_
<org.springframework.messaging.simp.annotation.support.SubscriptionMethodReturnValueHandler: org.springframework.messaging.support.MessageHeaderInitializer getHeaderInitializer()> -> _SOURCES_
<org.springframework.test.web.client.MockMvcClientHttpRequestFactory: org.springframework.http.client.ClientHttpRequest createRequest(java.net.URI,org.springframework.http.HttpMethod)> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: org.springframework.web.bind.support.WebBindingInitializer getWebBindingInitializer()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor: java.lang.reflect.Type getGenericType(org.springframework.core.MethodParameter)> -> _SOURCES_
<org.springframework.core.OrderComparator: int getOrder(java.lang.Object)> -> _SOURCES_
<org.springframework.http.client.HttpComponentsClientHttpResponse: org.springframework.http.HttpHeaders getHeaders()> -> _SOURCES__CWE601_
<org.springframework.web.util.ContentCachingResponseWrapper: int getStatusCode()> -> _SOURCES__CWE601_
<org.springframework.beans.factory.config.BeanDefinitionHolder: java.lang.String[] getAliases()> -> _SOURCES_
<org.springframework.scheduling.commonj.WorkManagerTaskExecutor: void setWorkManagerName(java.lang.String)> -> _SINKS_
<org.springframework.test.context.web.socket.MockServerContainer: long getDefaultAsyncSendTimeout()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractHtmlInputElementTag: void setOnblur(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.web.socket.client.standard.EndpointConnectionManager: void setTaskExecutor(org.springframework.core.task.TaskExecutor)> -> _SINKS_
<org.springframework.jmx.export.metadata.ManagedResource: void setPersistName(java.lang.String)> -> _SINKS_
<org.springframework.web.socket.client.standard.WebSocketContainerFactoryBean: void setMaxSessionIdleTimeout(long)> -> _SINKS_
<org.springframework.transaction.support.DefaultTransactionDefinition: java.lang.String getName()> -> _SOURCES_
<org.springframework.util.ConcurrentReferenceHashMap: java.lang.Object get(java.lang.Object)> -> _SOURCES_
<org.springframework.http.client.Netty4ClientHttpResponse: org.springframework.http.HttpHeaders getHeaders()> -> _SOURCES__CWE601_
<org.springframework.web.multipart.support.RequestPartServletServerHttpRequest: java.io.InputStream getBody()> -> _SOURCES_
<org.springframework.web.bind.UnsatisfiedServletRequestParameterException: java.util.List getParamConditionGroups()> -> _SOURCES_
<org.springframework.orm.jpa.persistenceunit.MutablePersistenceUnitInfo: java.util.List getJarFileUrls()> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.handler.EventSourceTransportHandler: org.springframework.web.socket.sockjs.transport.session.StreamingSockJsSession createSession(java.lang.String,org.springframework.web.socket.WebSocketHandler,java.util.Map)> -> _SINKS_
<org.springframework.web.servlet.view.freemarker.FreeMarkerView: freemarker.template.Template getTemplate(java.lang.String,java.util.Locale)> -> _SOURCES_
<org.springframework.web.context.support.AbstractRefreshableWebApplicationContext: void setServletContext(javax.servlet.ServletContext)> -> _SINKS_
<org.springframework.web.socket.sockjs.client.SockJsClient: void setHttpHeaderNames(java.lang.String[])> -> _SINKS_
<org.springframework.web.servlet.support.RequestContext: java.util.Locale getFallbackLocale()> -> _SOURCES_
<org.springframework.web.servlet.mvc.multiaction.MultiActionController: long getLastModified(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.web.socket.handler.PerConnectionWebSocketHandler: org.springframework.web.socket.WebSocketHandler getHandler(org.springframework.web.socket.WebSocketSession)> -> _SOURCES_
<org.springframework.expression.spel.ast.PropertyOrFieldReference: java.lang.String getName()> -> _SOURCES_
<org.springframework.web.filter.OncePerRequestFilter: java.lang.String getAlreadyFilteredAttributeName()> -> _SOURCES_
<org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler: org.springframework.expression.ExpressionParser getExpressionParser()> -> _SOURCES_
<org.springframework.web.portlet.handler.AbstractHandlerExceptionResolver: int getOrder()> -> _SOURCES_
<org.springframework.http.client.Netty4ClientHttpRequestFactory: void setMaxResponseSize(int)> -> _SINKS_
<org.springframework.asm.Type: org.springframework.asm.Type getReturnType(java.lang.String)> -> _SOURCES_
<org.springframework.cglib.core.ReflectUtils: java.lang.Class getClass(java.lang.String,java.lang.ClassLoader,java.lang.String[])> -> _SOURCES_
<org.springframework.web.servlet.tags.form.LabelTag: java.lang.String getName()> -> _SOURCES_
<org.springframework.http.server.ServletServerHttpRequest: org.springframework.http.HttpMethod getMethod()> -> _SOURCES_
<org.springframework.jms.core.JmsMessagingTemplate: void convertAndSend(java.lang.String,java.lang.Object,java.util.Map)> -> _SINKS_
<org.springframework.orm.jpa.persistenceunit.MutablePersistenceUnitInfo: void setJtaDataSource(javax.sql.DataSource)> -> _SINKS_
<org.springframework.oxm.jaxb.Jaxb2Marshaller: javax.xml.bind.JAXBContext getJaxbContext()> -> _SOURCES_
<org.springframework.jmx.support.MBeanServerFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.JettyXhrTransport: void connectInternal(org.springframework.web.socket.sockjs.client.TransportRequest,org.springframework.web.socket.WebSocketHandler,java.net.URI,org.springframework.http.HttpHeaders,org.springframework.web.socket.sockjs.client.XhrClientSockJsSession,org.springframework.util.concurrent.SettableListenableFuture)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler: void setServletContext(javax.servlet.ServletContext)> -> _SINKS_
<org.springframework.format.datetime.standard.DateTimeContextHolder: java.time.format.DateTimeFormatter getFormatter(java.time.format.DateTimeFormatter,java.util.Locale)> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompHeaderAccessor: void setLogin(java.lang.String)> -> _CWE306__SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.cglib.core.ClassEmitter: void setTarget(org.springframework.asm.ClassVisitor)> -> _SINKS_
<org.springframework.security.crypto.encrypt.HexEncodingTextEncryptor: java.lang.String decrypt(java.lang.String)> -> _SANITIZERS_
<org.springframework.web.context.support.XmlWebApplicationContext: java.lang.String[] getDefaultConfigLocations()> -> _SOURCES_
<org.springframework.util.xml.AbstractXMLReader: void setEntityResolver(org.xml.sax.EntityResolver)> -> _SINKS_
<org.springframework.jdbc.datasource.UserCredentialsDataSourceAdapter: void setUsername(java.lang.String)> -> _CWE089__SINKS__CWE862_
<org.springframework.web.bind.ServletRequestUtils: float[] getRequiredFloatParameters(javax.servlet.ServletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.beans.propertyeditors.CustomNumberEditor: java.lang.String getAsText()> -> _SOURCES_
<org.springframework.web.servlet.view.jasperreports.ConfigurableJasperReportsView: net.sf.jasperreports.engine.JRExporter createExporter()> -> _SOURCES_
<org.springframework.http.converter.FormHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)> -> _SINKS_
<org.springframework.core.convert.TypeDescriptor: java.lang.annotation.Annotation[] getAnnotations()> -> _SOURCES_
<org.springframework.web.servlet.i18n.CookieLocaleResolver: void setDefaultTimeZone(java.util.TimeZone)> -> _SINKS_
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: java.lang.Object getBean(java.lang.String,java.lang.Class)> -> _SOURCES_
<org.springframework.jdbc.object.SqlQuery: java.util.List execute(long,java.util.Map)> -> _CWE078__CWE089__SINKS_
<org.springframework.web.portlet.multipart.DefaultMultipartActionRequest: java.util.Map getParameterMap()> -> _SOURCES_
<org.springframework.test.web.client.match.XpathRequestMatchers: org.springframework.test.web.client.RequestMatcher doesNotExist()> -> _SOURCES_
<org.springframework.util.LinkedCaseInsensitiveMap: java.lang.Object get(java.lang.Object)> -> _SOURCES_
<org.springframework.util.ClassUtils: java.lang.String getDescriptiveType(java.lang.Object)> -> _SOURCES_
<org.springframework.beans.factory.config.PropertyOverrideConfigurer: void setBeanNameSeparator(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.datasource.DataSourceUtils: void resetConnectionAfterTransaction(java.sql.Connection,java.lang.Integer)> -> _CWE306__CWE089__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.socket.messaging.DefaultSimpUserRegistry: int getOrder()> -> _SOURCES__CWE862_
<org.springframework.web.socket.messaging.StompSubProtocolHandler: void handleError(org.springframework.web.socket.WebSocketSession,java.lang.Throwable,org.springframework.messaging.Message)> -> _SINKS_
<org.springframework.cglib.proxy.UndeclaredThrowableException: java.lang.Throwable getUndeclaredThrowable()> -> _SOURCES_
<org.springframework.test.annotation.SystemProfileValueSource: org.springframework.test.'annotation'.SystemProfileValueSource getInstance()> -> _SOURCES_
<org.springframework.ejb.access.LocalStatelessSessionProxyFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.web.socket.server.standard.ServerEndpointRegistration: void setEncoders(java.util.List)> -> _SINKS_
<org.springframework.mail.javamail.MimeMessageHelper: java.lang.String getEncoding()> -> _SOURCES_
<org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager: org.springframework.jdbc.datasource.lookup.DataSourceLookup getDataSourceLookup()> -> _SOURCES_
<org.springframework.jms.connection.JmsResourceHolder: javax.jms.Session getSession()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockEventRequest: java.lang.String getLifecyclePhase()> -> _SOURCES_
<org.springframework.http.MediaType: double getQualityValue()> -> _SOURCES_
<org.springframework.mock.http.MockHttpInputMessage: org.springframework.http.HttpHeaders getHeaders()> -> _SOURCES_
<org.springframework.core.SpringProperties: java.lang.String getProperty(java.lang.String)> -> _SOURCES_
<org.springframework.test.web.servlet.DefaultMvcResult: org.springframework.mock.web.MockHttpServletResponse getResponse()> -> _SOURCES_
<org.springframework.orm.hibernate4.support.HibernateDaoSupport: org.hibernate.SessionFactory getSessionFactory()> -> _SOURCES_
<org.springframework.security.authentication.jaas.JaasAuthenticationProvider: void setAuthorityGranters(org.springframework.security.authentication.jaas.AuthorityGranter[])> -> _SINKS_
<org.springframework.expression.common.LiteralExpression: void setValue(java.lang.Object,java.lang.Object)> -> _SINKS_
<org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean: java.util.concurrent.ThreadPoolExecutor createExecutor(int,int,int,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)> -> _SINKS_
<org.springframework.core.annotation.AnnotationAttributes: org.springframework.core.annotation.AnnotationAttributes[] getAnnotationArray(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.view.jasperreports.JasperReportsMultiFormatView: void setContentDispositionMappings(java.util.Properties)> -> _SINKS_
<org.springframework.web.servlet.support.AbstractFlashMapManager: org.springframework.util.MultiValueMap getOriginatingRequestParams(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.jdbc.support.nativejdbc.SimpleNativeJdbcExtractor: boolean isNativeConnectionNecessaryForNativePreparedStatements()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__CWE862_
<org.springframework.core.annotation.AnnotatedElementUtils: java.util.Set getMergedRepeatableAnnotations(java.lang.reflect.AnnotatedElement,java.lang.Class)> -> _SOURCES_
<org.springframework.web.socket.messaging.SubProtocolWebSocketHandler: org.springframework.web.socket.messaging.SubProtocolHandler findProtocolHandler(org.springframework.web.socket.WebSocketSession)> -> _SINKS_
<org.springframework.jms.listener.DefaultMessageListenerContainer: void setMaxMessagesPerTask(int)> -> _SINKS_
<org.springframework.web.filter.DelegatingFilterProxy: void setContextAttribute(java.lang.String)> -> _SINKS_
<org.springframework.web.context.support.StaticWebApplicationContext: void setNamespace(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.UncategorizedSQLException: java.sql.SQLException getSQLException()> -> _CWE089__SOURCES_
<org.springframework.web.method.annotation.SessionAttributesHandler: void cleanupAttributes(org.springframework.web.context.request.WebRequest)> -> _SINKS_
<org.springframework.security.config.annotation.web.builders.HttpSecurity: org.springframework.security.config.'annotation'.web.configurers.openid.OpenIDLoginConfigurer openidLogin()> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.orm.jpa.support.SharedEntityManagerBean: javax.persistence.EntityManager getObject()> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: java.lang.Class getTypeForFactoryBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)> -> _SOURCES_
<org.springframework.remoting.jaxrpc.ServletEndpointSupport: javax.xml.rpc.server.ServletEndpointContext getServletEndpointContext()> -> _SOURCES_
<org.springframework.beans.support.PagedListHolder: int getPageCount()> -> _SOURCES_
<org.springframework.jdbc.datasource.SingleConnectionDataSource: java.sql.Connection getConnection(java.lang.String,java.lang.String)> -> _CWE306__CWE089__SOURCES__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.config.ResourcesBeanDefinitionParser: org.springframework.http.CacheControl parseCacheControl(org.w3c.dom.Element)> -> _SOURCES_
<org.springframework.http.client.HttpComponentsAsyncClientHttpRequest: java.net.URI getURI()> -> _SOURCES_
<org.springframework.jdbc.support.incrementer.HsqlMaxValueIncrementer: long getNextKey()> -> _CWE089__SOURCES_
<org.springframework.web.client.RestTemplate: org.springframework.http.ResponseEntity exchange(java.net.URI,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,org.springframework.core.ParameterizedTypeReference)> -> _SINKS_
<org.springframework.jdbc.datasource.AbstractDataSource: void setLoginTimeout(int)> -> _CWE306__CWE089__SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.jdbc.datasource.SingleConnectionDataSource: void resetConnection()> -> _CWE306__CWE089__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.mvc.condition.ConsumesRequestCondition: java.util.Set getExpressions()> -> _SOURCES_
<org.springframework.web.multipart.support.DefaultMultipartHttpServletRequest: void setMultipartParameters(java.util.Map)> -> _SINKS_
<org.springframework.web.servlet.view.AbstractTemplateViewResolver: void setAllowRequestOverride(boolean)> -> _SINKS_
<org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter: void setCustomArgumentResolver(org.springframework.web.bind.support.WebArgumentResolver)> -> _SINKS_
<org.springframework.web.servlet.mvc.condition.ProducesRequestCondition: java.util.Set getProducibleMediaTypes()> -> _SOURCES_
<org.springframework.web.servlet.mvc.condition.ProducesRequestCondition: java.util.Set parseExpressions(java.lang.String[],java.lang.String[])> -> _SOURCES__SINKS_
<org.springframework.orm.hibernate4.LocalSessionFactoryBuilder: org.springframework.orm.hibernate4.LocalSessionFactoryBuilder setCurrentTenantIdentifierResolver(java.lang.Object)> -> _SINKS_
<org.springframework.validation.AbstractBindingResult: java.util.List getAllErrors()> -> _SOURCES_
<org.springframework.context.support.AbstractApplicationContext: java.util.List getApplicationListeners()> -> _SOURCES_
<org.springframework.remoting.caucho.BurlapClientInterceptor: void setPassword(java.lang.String)> -> _SINKS_
<org.springframework.jms.listener.adapter.MessageListenerAdapter: java.lang.Object getDelegate()> -> _SOURCES_
<org.springframework.beans.factory.config.ServiceLocatorFactoryBean: void setServiceLocatorInterface(java.lang.Class)> -> _SINKS_
<org.springframework.objenesis.strategy.PlatformDescription: int getOldAndroidVersion(java.lang.Class)> -> _SOURCES_
<org.springframework.web.servlet.resource.PathResourceResolver: void setAllowedLocations(org.springframework.core.io.Resource[])> -> _SINKS_
<org.springframework.http.client.OkHttpClientHttpResponse: java.io.InputStream getBody()> -> _SOURCES__CWE601_
<org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint: java.lang.Object getThis()> -> _SOURCES_
<org.springframework.web.servlet.view.UrlBasedViewResolver: java.lang.String[] getExposedContextBeanNames()> -> _SOURCES_
<org.springframework.ui.freemarker.FreeMarkerConfigurationFactory: void setFreemarkerVariables(java.util.Map)> -> _SINKS_
<org.springframework.aop.target.ThreadLocalTargetSource: org.springframework.aop.IntroductionAdvisor getStatsMixin()> -> _SOURCES_
<org.springframework.web.context.request.AbstractRequestAttributesScope: java.lang.Object get(java.lang.String,org.springframework.beans.factory.ObjectFactory)> -> _SOURCES_
<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: void setDirectFieldAccess(boolean)> -> _SINKS_
<org.springframework.jms.core.JmsMessagingTemplate: void convertAndSend(java.lang.String,java.lang.Object,java.util.Map,org.springframework.messaging.core.MessagePostProcessor)> -> _SINKS_
<org.springframework.remoting.httpinvoker.HttpComponentsHttpInvokerRequestExecutor: org.apache.http.client.config.RequestConfig createRequestConfig(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration)> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyAdviceChain: java.lang.Object afterBodyRead(java.lang.Object,org.springframework.http.HttpInputMessage,org.springframework.core.MethodParameter,java.lang.reflect.Type,java.lang.Class)> -> _SOURCES__CWE601_
<org.springframework.context.support.AbstractRefreshableConfigApplicationContext: void setConfigLocations(java.lang.String[])> -> _SINKS_
<org.springframework.http.client.SimpleBufferingClientHttpRequest: org.springframework.http.client.ClientHttpResponse executeInternal(org.springframework.http.HttpHeaders,byte[])> -> _SINKS_
<org.springframework.web.portlet.context.AbstractRefreshablePortletApplicationContext: java.lang.String getApplicationName()> -> _SOURCES_
<org.springframework.web.servlet.support.BindStatus: java.lang.Class getValueType()> -> _SOURCES_
<org.springframework.messaging.core.AbstractMessageSendingTemplate: void convertAndSend(java.lang.Object,java.lang.Object)> -> _SINKS_
<org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor: void setInitAnnotationType(java.lang.Class)> -> _SINKS_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: void setOnkeydown(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.remoting.jaxws.JaxWsPortClientInterceptor: void setCustomProperties(java.util.Map)> -> _SINKS_
<org.springframework.security.authentication.event.LoggerListener: boolean isLogInteractiveAuthenticationSuccessEvents()> -> _AUTHENTICATIONS_NEUTRAL__CWE306_
<org.springframework.jms.connection.TransactionAwareConnectionFactoryProxy: javax.jms.Connection createConnection()> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean: void setPackagesToScan(java.lang.String[])> -> _SINKS_
<org.springframework.mock.web.MockHttpServletResponse: java.lang.String getRedirectedUrl()> -> _SOURCES__CWE601_
<org.springframework.transaction.support.ResourceHolderSupport: void setTimeoutInMillis(long)> -> _SINKS_
<org.springframework.security.core.userdetails.User: java.lang.String getPassword()> -> _SOURCES__CWE862_
<org.springframework.web.servlet.tags.Param: java.lang.String getName()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.ServletCookieValueMethodArgumentResolver: java.lang.Object resolveName(java.lang.String,org.springframework.core.MethodParameter,org.springframework.web.context.request.NativeWebRequest)> -> _SINKS_
<org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer: org.springframework.security.config.'annotation'.web.configurers.AbstractAuthenticationFilterConfigurer loginProcessingUrl(java.lang.String)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.context.support.DefaultMessageSourceResolvable: java.lang.String[] getCodes()> -> _SOURCES_
<org.springframework.context.support.ReloadableResourceBundleMessageSource: void setDefaultEncoding(java.lang.String)> -> _SINKS_
<org.springframework.aop.target.CommonsPoolTargetSource: int getMaxIdle()> -> _SOURCES_
<org.springframework.web.servlet.view.tiles2.SpringBeanPreparerFactory: org.apache.tiles.preparer.ViewPreparer getPreparer(java.lang.String,org.springframework.web.context.WebApplicationContext)> -> _SOURCES_
<org.springframework.http.HttpEntity: org.springframework.http.HttpHeaders getHeaders()> -> _SOURCES_
<org.springframework.asm.CurrentFrame: void execute(int,int,org.springframework.asm.ClassWriter,org.springframework.asm.Item)> -> _CWE078__SINKS_
<org.springframework.web.servlet.mvc.multiaction.MultiActionController: org.springframework.web.bind.support.WebBindingInitializer getWebBindingInitializer()> -> _SOURCES_
<org.springframework.web.servlet.view.RedirectView: java.lang.String urlEncode(java.lang.String,java.lang.String)> -> _SANITIZERS_
<org.springframework.web.portlet.HandlerExecutionChain: void addInterceptor(org.springframework.web.portlet.HandlerInterceptor)> -> _SINKS_
<org.springframework.beans.PropertyValue: void setConvertedValue(java.lang.Object)> -> _SINKS_
<org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver: org.springframework.web.servlet.ModelAndView handleHttpMessageNotReadable(org.springframework.http.converter.HttpMessageNotReadableException,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)> -> _SOURCES__SINKS__CWE601_
<org.springframework.mail.MailSendException: java.util.Map getFailedMessages()> -> _SOURCES_
<org.springframework.beans.factory.parsing.ImportDefinition: org.springframework.core.io.Resource[] getActualResources()> -> _SOURCES_
<org.springframework.web.util.ContentCachingResponseWrapper: byte[] getContentAsByteArray()> -> _SOURCES__CWE601_
<org.springframework.beans.factory.support.DefaultListableBeanFactory: void setAutowireCandidateResolver(org.springframework.beans.factory.support.AutowireCandidateResolver)> -> _SINKS_
<org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver: void setOrder(int)> -> _SINKS_
<org.springframework.security.access.expression.method.AbstractExpressionBasedMethodConfigAttribute: org.springframework.expression.Expression getAuthorizeExpression()> -> _SOURCES_
<org.springframework.expression.spel.ast.SpelNodeImpl: java.lang.Object getValue(org.springframework.expression.spel.ExpressionState,java.lang.Class)> -> _SOURCES_
<org.springframework.web.cors.CorsConfiguration: void setAllowedMethods(java.util.List)> -> _SINKS_
<org.springframework.test.web.servlet.request.MockMvcRequestBuilders: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder post(java.net.URI)> -> _SOURCES_
<org.springframework.web.socket.adapter.jetty.JettyWebSocketSession: void setTextMessageSizeLimit(int)> -> _SINKS_
<org.springframework.util.xml.XMLEventStreamWriter: void writeEmptyElement(java.lang.String,java.lang.String)> -> _SINKS_
<org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: org.springframework.orm.jpa.JpaVendorAdapter getJpaVendorAdapter()> -> _SOURCES_
<org.springframework.beans.propertyeditors.CustomMapEditor: java.lang.String getAsText()> -> _SOURCES_
<org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter: void setCustomModelAndViewResolvers(org.springframework.web.servlet.mvc.annotation.ModelAndViewResolver[])> -> _SINKS_
<org.springframework.jca.work.SimpleTaskWorkManager: void setSyncTaskExecutor(org.springframework.core.task.TaskExecutor)> -> _SINKS_
<org.springframework.web.servlet.ResourceServlet: long getFileTimestamp(java.lang.String)> -> _SOURCES_
<org.springframework.jdbc.core.PreparedStatementCreatorFactory: void setUpdatableResults(boolean)> -> _CWE089__SINKS_
<org.springframework.messaging.support.MessageHeaderAccessor: boolean isReadOnly(java.lang.String)> -> _SOURCES_
<org.springframework.cache.jcache.interceptor.AnnotationJCacheOperationSource: org.springframework.cache.jcache.interceptor.CachePutOperation createCachePutOperation(java.lang.reflect.Method,javax.cache.'annotation'.CacheDefaults,javax.cache.'annotation'.CachePut)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockMultipartActionRequest: java.util.Map getFileMap()> -> _SOURCES_
<org.springframework.transaction.support.DefaultTransactionDefinition: void setReadOnly(boolean)> -> _SINKS_
<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getResourceResolvers()> -> _SOURCES_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.util.concurrent.ListenableFuture exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,java.lang.Class,java.lang.Object[])> -> _SINKS_
<org.springframework.jmx.export.assembler.AbstractMBeanInfoAssembler: javax.management.modelmbean.ModelMBeanNotificationInfo[] getNotificationInfo(java.lang.Object,java.lang.String)> -> _SOURCES_
<org.springframework.scheduling.commonj.ScheduledTimerListener: void setFixedRate(boolean)> -> _SINKS_
<org.springframework.security.provisioning.JdbcUserDetailsManager: void setChangePasswordSql(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.jms.support.JmsUtils: void closeConnection(javax.jms.Connection)> -> _CWE306__AUTHENTICATIONS_TO_LOW__CWE862_
<org.springframework.web.accept.HeaderContentNegotiationStrategy: java.util.List resolveMediaTypes(org.springframework.web.context.request.NativeWebRequest)> -> _SINKS_
<org.springframework.util.xml.StaxUtils: javax.xml.stream.XMLEventWriter getXMLEventWriter(javax.xml.transform.Result)> -> _SOURCES_
<org.springframework.http.client.Netty4ClientHttpRequest: org.springframework.util.concurrent.ListenableFuture executeInternal(org.springframework.http.HttpHeaders)> -> _SINKS_
<org.springframework.validation.AbstractErrors: void setNestedPath(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.view.UrlBasedViewResolver: java.lang.String getPrefix()> -> _SOURCES_
<org.springframework.core.task.SimpleAsyncTaskExecutor: int getConcurrencyLimit()> -> _SOURCES_
<org.springframework.web.socket.server.standard.TomcatRequestUpgradeStrategy: void upgradeInternal(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,java.lang.String,java.util.List,javax.websocket.Endpoint)> -> _SINKS_
<org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler: void setMessageConverter(org.springframework.messaging.converter.MessageConverter)> -> _SINKS_
<org.springframework.jdbc.datasource.embedded.DerbyEmbeddedDatabaseConfigurer: void configureConnectionProperties(org.springframework.jdbc.datasource.embedded.ConnectionProperties,java.lang.String)> -> _CWE306__CWE089__AUTHENTICATIONS_TO_HIGH_
<org.springframework.jms.connection.CachingConnectionFactory: int getSessionCacheSize()> -> _SOURCES_
<org.springframework.cache.ehcache.EhCacheCacheManager: java.util.Collection loadCaches()> -> _SOURCES_
<org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler: void setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)> -> _SINKS_
<org.springframework.web.servlet.support.RequestContext: javax.servlet.ServletContext getServletContext()> -> _SOURCES_
<org.springframework.security.authentication.dao.DaoAuthenticationProvider: org.springframework.security.core.userdetails.UserDetailsService getUserDetailsService()> -> _SOURCES_
<org.springframework.orm.toplink.LocalSessionFactory: java.util.Map getLoginPropertyMap()> -> _CWE306__SOURCES_
<org.springframework.web.client.RestTemplate: java.lang.Object patchForObject(java.lang.String,java.lang.Object,java.lang.Class,java.lang.Object[])> -> _SINKS_
<org.springframework.web.method.support.ModelAndViewContainer: void setRedirectModel(org.springframework.ui.ModelMap)> -> _SINKS_
<org.springframework.security.config.websocket.WebSocketMessageBrokerSecurityBeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.transaction.HeuristicCompletionException: int getOutcomeState()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter: org.springframework.security.config.'annotation'.web.builders.HttpSecurity getHttp()> -> _SOURCES__CWE862_
<org.springframework.oxm.jibx.JibxMarshaller: void setEncoding(java.lang.String)> -> _SINKS_
<org.springframework.util.MethodInvoker: void setStaticMethod(java.lang.String)> -> _SINKS_
<org.springframework.core.env.AbstractEnvironment: java.lang.Object getProperty(java.lang.String,java.lang.Class,java.lang.Object)> -> _SOURCES_
<org.springframework.expression.common.CompositeStringExpression: org.springframework.core.convert.TypeDescriptor getValueTypeDescriptor(java.lang.Object)> -> _SOURCES_
<org.springframework.remoting.jaxrpc.JaxRpcSoapFaultException: java.lang.String getFaultCode()> -> _SOURCES_
<org.springframework.cglib.core.AbstractClassGenerator: void setClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletResponse: int getStatus()> -> _SOURCES__CWE601_
<org.springframework.aop.aspectj.annotation.BeanFactoryAspectInstanceFactory: java.lang.Object getAspectInstance()> -> _SOURCES_
<org.springframework.aop.framework.autoproxy.ProxyCreationContext: java.lang.String getCurrentProxiedBeanName()> -> _SOURCES_
<org.springframework.mail.javamail.MimeMessageHelper: void setText(java.lang.String)> -> _SINKS_
<org.springframework.remoting.support.RemoteInvocationResult: java.lang.Throwable getException()> -> _SOURCES_
<org.springframework.web.servlet.theme.CookieThemeResolver: void setThemeName(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)> -> _CWE079__SINKS_
<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.scheduling.quartz.SchedulerAccessorBean: org.quartz.Scheduler getScheduler()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractMultiCheckedElementTag: void writeMapEntry(org.springframework.web.servlet.tags.form.TagWriter,java.lang.String,java.lang.String,java.util.Map$Entry,int)> -> _SINKS_
<org.springframework.jmx.support.WebLogicMBeanServerFactoryBean: void setServerName(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.DispatcherServlet: void setDetectAllHandlerMappings(boolean)> -> _SINKS_
<org.springframework.messaging.simp.config.StompBrokerRelayRegistration: org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler getMessageHandler(org.springframework.messaging.SubscribableChannel)> -> _SOURCES_
<org.springframework.orm.hibernate4.HibernateTransactionManager: void setEntityInterceptor(org.hibernate.Interceptor)> -> _SINKS_
<org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter: void writeInternal(java.lang.Object,java.lang.reflect.Type,org.springframework.http.HttpOutputMessage)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletResponse: org.w3c.dom.Element getXmlProperty(java.lang.String)> -> _SOURCES__CWE601_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: void setOnkeyup(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping: org.springframework.web.servlet.mvc.method.RequestMappingInfo getMatchingMapping(org.springframework.web.servlet.mvc.method.RequestMappingInfo,javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: void setCatalogName(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.beans.factory.support.MethodOverrides: java.util.Set getOverrides()> -> _SOURCES_
<org.springframework.jms.core.JmsMessagingTemplate: java.lang.Object convertSendAndReceive(java.lang.Object,java.lang.Class,org.springframework.messaging.core.MessagePostProcessor)> -> _SINKS_
<org.springframework.jms.config.DefaultJmsListenerContainerFactory: void setCacheLevel(java.lang.Integer)> -> _SINKS_
<org.springframework.beans.factory.support.AbstractBeanDefinition: void setAutowireCandidate(boolean)> -> _SINKS_
<org.springframework.jdbc.object.SqlCall: void setSqlReadyForUse(boolean)> -> _CWE089__SINKS_
<org.springframework.oxm.jaxb.Jaxb2Marshaller: void setSchemaResourceResolver(org.w3c.dom.ls.LSResourceResolver)> -> _SINKS_
<org.springframework.beans.factory.config.NamedBeanHolder: java.lang.String getBeanName()> -> _SOURCES_
<org.springframework.cache.guava.GuavaCacheManager: void setCacheBuilder(com.google.common.cache.CacheBuilder)> -> _SINKS_
<org.springframework.web.servlet.view.freemarker.FreeMarkerView: freemarker.template.ObjectWrapper getObjectWrapper()> -> _SOURCES_
<org.springframework.validation.AbstractPropertyBindingResult: java.lang.Object getActualFieldValue(java.lang.String)> -> _SOURCES_
<org.springframework.jdbc.datasource.SingleConnectionDataSource: java.lang.Boolean getAutoCommitValue()> -> _CWE089__SOURCES_
<org.springframework.aop.aspectj.annotation.InstantiationModelAwarePointcutAdvisorImpl: org.springframework.aop.aspectj.AspectJExpressionPointcut getDeclaredPointcut()> -> _SOURCES_
<org.springframework.validation.DirectFieldBindingResult: org.springframework.beans.ConfigurablePropertyAccessor getPropertyAccessor()> -> _SOURCES_
<org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory: void setArgumentResolvers(java.util.List)> -> _SINKS_
<org.springframework.beans.factory.xml.XmlBeanDefinitionReader: void setErrorHandler(org.xml.sax.ErrorHandler)> -> _SINKS_
<org.springframework.oxm.support.AbstractMarshaller: org.xml.sax.XMLReader createXmlReader()> -> _SOURCES_
<org.springframework.context.annotation.ClassPathBeanDefinitionScanner: void setIncludeAnnotationConfig(boolean)> -> _SINKS_
<org.springframework.web.socket.config.WebSocketMessageBrokerStats: java.lang.String getExecutorStatsInfo(java.util.concurrent.Executor)> -> _CWE078__SOURCES_
<org.springframework.remoting.support.RemotingSupport: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.context.support.ResourceBundleMessageSource: java.lang.String getStringOrNull(java.util.ResourceBundle,java.lang.String)> -> _SOURCES_
<org.springframework.web.socket.server.support.AbstractHandshakeHandler: void setSupportedProtocols(java.lang.String[])> -> _SINKS_
<org.springframework.util.xml.AbstractXMLStreamReader: java.lang.String getAttributePrefix(int)> -> _SOURCES_
<org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor: java.lang.reflect.Method getCreateMethod(java.lang.Object)> -> _SOURCES_
<org.springframework.web.servlet.ModelAndView: void setView(org.springframework.web.servlet.View)> -> _SINKS_
<org.springframework.orm.ibatis.support.ClobStringTypeHandler: void setParameterInternal(java.sql.PreparedStatement,int,java.lang.Object,java.lang.String,org.springframework.jdbc.support.lob.LobCreator)> -> _SINKS_
<org.springframework.web.method.ControllerAdviceBean: int getOrder()> -> _SOURCES_
<org.springframework.web.socket.server.jetty.JettyRequestUpgradeStrategy: void setServletContext(javax.servlet.ServletContext)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompClientSupport: org.springframework.messaging.converter.MessageConverter getMessageConverter()> -> _SOURCES_
<org.springframework.beans.PropertyEditorRegistrySupport: java.lang.Class getPropertyType(java.lang.String)> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompHeaderAccessor: java.lang.String getHost()> -> _SOURCES_
<org.springframework.expression.spel.ast.CompoundExpression: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.http.HttpHeaders: void setExpires(long)> -> _SINKS_
<org.springframework.jms.connection.DelegatingConnectionFactory: void setShouldStopConnections(boolean)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.jdbc.support.nativejdbc.JBossNativeJdbcExtractor: java.sql.Connection doGetNativeConnection(java.sql.Connection)> -> _CWE306__CWE089__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint: java.lang.Object[] getArgs()> -> _SOURCES_
<org.springframework.cache.caffeine.CaffeineCacheManager: org.springframework.cache.Cache getCache(java.lang.String)> -> _SOURCES_
<org.springframework.aop.scope.ScopedProxyFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.aop.config.ConfigBeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SINKS_
<org.springframework.web.socket.config.annotation.SockJsServiceRegistration: org.springframework.web.socket.config.'annotation'.SockJsServiceRegistration setWebSocketEnabled(boolean)> -> _SINKS_
<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: java.lang.Object getSource()> -> _SOURCES_
<org.springframework.web.servlet.view.velocity.VelocityLayoutView: void setScreenContentKey(java.lang.String)> -> _SINKS_
<org.springframework.orm.hibernate3.SessionHolder: org.hibernate.Transaction getTransaction()> -> _SOURCES_
<org.springframework.context.support.AbstractRefreshableConfigApplicationContext: java.lang.String[] getDefaultConfigLocations()> -> _SOURCES_
<org.springframework.web.servlet.view.script.ScriptTemplateConfigurer: java.lang.String getContentType()> -> _SOURCES_
<org.springframework.test.web.client.match.ContentRequestMatchers: org.springframework.test.web.client.RequestMatcher contentTypeCompatibleWith(org.springframework.http.MediaType)> -> _SOURCES_
<org.springframework.web.socket.client.standard.WebSocketContainerFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.jdbc.support.CustomSQLErrorCodesTranslation: void setErrorCodes(java.lang.String[])> -> _CWE089__SINKS_
<org.springframework.cache.caffeine.CaffeineCache: java.lang.Object get(java.lang.Object,java.util.concurrent.Callable)> -> _SOURCES_
<org.springframework.jdbc.object.RdbmsOperation: int getResultSetType()> -> _CWE089__SOURCES_
<org.springframework.test.web.servlet.htmlunit.HtmlUnitRequestBuilder: void setForwardPostProcessor(org.springframework.test.web.servlet.request.RequestPostProcessor)> -> _CWE079__SINKS_
<org.springframework.expression.spel.ast.OpDivide: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: java.lang.String getCssClass()> -> _CWE079__SOURCES_
<org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration: void setBeanClassLoader(java.lang.ClassLoader)> -> _SOURCES__SINKS_
<org.springframework.web.bind.ServletRequestUtils: float[] getFloatParameters(javax.servlet.ServletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: void setAsyncContext(org.springframework.mock.web.MockAsyncContext)> -> _SINKS_
<org.springframework.jms.remoting.JmsInvokerServiceExporter: void setIgnoreInvalidRequests(boolean)> -> _SINKS_
<org.springframework.scheduling.quartz.CronTriggerFactoryBean: void setStartTime(java.util.Date)> -> _SINKS_
<org.springframework.context.annotation.ClassPathBeanDefinitionScanner: void setBeanDefinitionDefaults(org.springframework.beans.factory.support.BeanDefinitionDefaults)> -> _SINKS_
<org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter: org.springframework.remoting.support.RemoteInvocation readRemoteInvocation(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: java.sql.Time getTime(int,java.util.Calendar)> -> _CWE089__SOURCES_
<org.springframework.scheduling.concurrent.ExecutorConfigurationSupport: void setWaitForTasksToCompleteOnShutdown(boolean)> -> _SINKS_
<org.springframework.security.config.authentication.UserServiceBeanDefinitionParser: java.lang.String getBeanClassName(org.w3c.dom.Element)> -> _SOURCES__CWE862_
<org.springframework.orm.hibernate4.HibernateTemplate: java.util.List loadAll(java.lang.Class)> -> _SOURCES_
<org.springframework.aop.framework.JdkDynamicAopProxy: java.lang.Object getProxy()> -> _SOURCES_
<org.springframework.orm.toplink.support.CommonsLoggingSessionLog904: java.lang.String getSeparator()> -> _SOURCES_
<org.springframework.test.web.servlet.request.MockMvcRequestBuilders: org.springframework.test.web.servlet.request.MockMultipartHttpServletRequestBuilder fileUpload(java.lang.String,java.lang.Object[])> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.session.WebSocketServerSockJsSession: void setBinaryMessageSizeLimit(int)> -> _SINKS_
<org.springframework.orm.jdo.support.StandardPersistenceManagerProxyBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser: org.springframework.beans.factory.config.RuntimeBeanReference getValidator(org.w3c.dom.Element,java.lang.Object,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.web.servlet.resource.VersionResourceResolver: org.springframework.core.io.Resource resolveResourceInternal(javax.servlet.http.HttpServletRequest,java.lang.String,java.util.List,org.springframework.web.servlet.resource.ResourceResolverChain)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletContext: java.lang.String getInitParameter(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.view.script.ScriptTemplateView: java.lang.String getTemplate(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.http.HttpHeaders: java.util.List getAcceptCharset()> -> _SOURCES_
<org.springframework.messaging.simp.config.SimpleBrokerRegistration: org.springframework.messaging.simp.config.SimpleBrokerRegistration setHeartbeatValue(long[])> -> _SINKS_
<org.springframework.jms.support.converter.MessagingMessageConverter: void setHeaderMapper(org.springframework.jms.support.JmsHeaderMapper)> -> _SINKS_
<org.springframework.security.config.annotation.web.messaging.MessageSecurityMetadataSourceRegistry: org.springframework.security.messaging.access.intercept.MessageSecurityMetadataSource createMetadataSource()> -> _SOURCES_
<org.springframework.cache.interceptor.CompositeCacheOperationSource: java.util.Collection getCacheOperations(java.lang.reflect.Method,java.lang.Class)> -> _SOURCES_
<org.springframework.web.socket.client.standard.AnnotatedEndpointConnectionManager: org.springframework.core.task.TaskExecutor getTaskExecutor()> -> _SOURCES_
<org.springframework.orm.hibernate5.HibernateTemplate: void saveOrUpdate(java.lang.Object)> -> _SINKS_
<org.springframework.messaging.simp.config.AbstractMessageBrokerConfiguration: org.springframework.util.PathMatcher getPathMatcher()> -> _SOURCES_
<org.springframework.test.context.ContextConfigurationAttributes: java.lang.String[] getLocations()> -> _SOURCES_
<org.springframework.aop.framework.ProxyFactoryBean: void setProxyClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.remoting.jaxrpc.JaxRpcPortClientInterceptor: java.lang.String getPassword()> -> _SOURCES_
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)> -> _SOURCES_
<org.springframework.web.servlet.support.WebContentGenerator: void setUseCacheControlNoStore(boolean)> -> _SINKS_
<org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactoryBean: void setDatabaseCleaner(org.springframework.jdbc.datasource.init.DatabasePopulator)> -> _CWE089__SINKS_
<org.springframework.orm.ObjectOptimisticLockingFailureException: java.lang.Class getPersistentClass()> -> _SOURCES_
<org.springframework.mock.web.MockSessionCookieConfig: java.lang.String getPath()> -> _SOURCES_
<org.springframework.jdbc.datasource.JdbcTransactionObjectSupport: void setPreviousIsolationLevel(java.lang.Integer)> -> _CWE089__SINKS_
<org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter: void setSupportDtd(boolean)> -> _SINKS_
<org.springframework.jms.listener.AbstractMessageListenerContainer: java.lang.String getMessageSelector()> -> _SOURCES_
<org.springframework.web.bind.ServletRequestUtils: boolean[] getRequiredBooleanParameters(javax.servlet.ServletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.beans.factory.InjectionPoint: java.lang.reflect.Field getField()> -> _SOURCES_
<org.springframework.transaction.support.DelegatingTransactionDefinition: int getIsolationLevel()> -> _SOURCES_
<org.springframework.remoting.jaxws.LocalJaxWsServiceFactory: void setNamespaceUri(java.lang.String)> -> _SINKS_
<org.springframework.aop.config.SimpleBeanFactoryAwareAspectInstanceFactory: int getOrder()> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void setAllowCircularReferences(boolean)> -> _SINKS_
<org.springframework.expression.spel.standard.SpelExpression: org.springframework.core.convert.TypeDescriptor getValueTypeDescriptor(org.springframework.expression.EvaluationContext)> -> _SOURCES_
<org.springframework.util.xml.XMLEventStreamReader: java.lang.String getText()> -> _SOURCES_
<org.springframework.security.util.InMemoryResource: java.lang.String getDescription()> -> _SOURCES_
<org.springframework.cglib.beans.BeanMapEmitter: java.lang.String[] getNames(java.util.Map)> -> _SOURCES_
<org.springframework.orm.hibernate3.support.HibernateDaoSupport: void setSessionFactory(org.hibernate.SessionFactory)> -> _SINKS_
<org.springframework.cglib.proxy.CallbackHelper: java.lang.Class[] getCallbackTypes()> -> _SOURCES_
<org.springframework.beans.factory.annotation.AnnotatedGenericBeanDefinition: org.springframework.core.type.AnnotationMetadata getMetadata()> -> _SOURCES_
<org.springframework.orm.hibernate4.HibernateTemplate: java.lang.String[] getFilterNames()> -> _SOURCES_
<org.springframework.test.web.servlet.DefaultMvcResult: void setInterceptors(org.springframework.web.servlet.HandlerInterceptor[])> -> _SINKS_
<org.springframework.web.util.CookieGenerator: void setCookieSecure(boolean)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod: void setHandlerMethodReturnValueHandlers(org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite)> -> _SINKS_
<org.springframework.mock.web.MockServletContext: void setEffectiveMinorVersion(int)> -> _SINKS_
<org.springframework.web.socket.handler.AbstractWebSocketHandler: void afterConnectionClosed(org.springframework.web.socket.WebSocketSession,org.springframework.web.socket.CloseStatus)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.http.client.AbstractAsyncClientHttpRequest: java.io.OutputStream getBody()> -> _SOURCES_
<org.springframework.jdbc.core.simple.SimpleJdbcInsert: java.lang.Number executeAndReturnKey(org.springframework.jdbc.core.namedparam.SqlParameterSource)> -> _CWE089__SINKS_
<org.springframework.beans.factory.config.ServiceLocatorFactoryBean: void setServiceMappings(java.util.Properties)> -> _SINKS_
<org.springframework.web.socket.handler.LoggingWebSocketHandlerDecorator: void afterConnectionEstablished(org.springframework.web.socket.WebSocketSession)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.core.io.FileSystemResource: java.lang.String getPath()> -> _SOURCES_
<org.springframework.orm.jdo.LocalPersistenceManagerFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.web.socket.config.WebSocketMessageBrokerStats: java.lang.String getClientInboundExecutorStatsInfo()> -> _CWE078__SOURCES_
<org.springframework.jdbc.support.lob.PassThroughClob: java.io.OutputStream setAsciiStream(long)> -> _CWE089__SINKS_
<org.springframework.format.support.FormattingConversionServiceFactoryBean: org.springframework.format.support.FormattingConversionService getObject()> -> _SOURCES_
<org.springframework.jndi.support.SimpleJndiBeanFactory: void setShareableResources(java.lang.String[])> -> _SINKS_
<org.springframework.beans.factory.support.AbstractBeanDefinition: void setAbstract(boolean)> -> _SINKS_
<org.springframework.web.portlet.mvc.annotation.AnnotationMethodHandlerAdapter: void setCustomArgumentResolver(org.springframework.web.bind.support.WebArgumentResolver)> -> _SINKS_
<org.springframework.messaging.core.AbstractDestinationResolvingMessagingTemplate: java.lang.Object convertSendAndReceive(java.lang.String,java.lang.Object,java.lang.Class,org.springframework.messaging.core.MessagePostProcessor)> -> _SINKS_
<org.springframework.orm.ibatis.SqlMapClientFactoryBean: com.ibatis.sqlmap.client.SqlMapClient buildSqlMapClient(org.springframework.core.io.Resource[],org.springframework.core.io.Resource[],java.util.Properties)> -> _SINKS_
<org.springframework.core.type.classreading.MethodMetadataReadingVisitor: org.springframework.util.MultiValueMap getAllAnnotationAttributes(java.lang.String,boolean)> -> _SOURCES_
<org.springframework.cache.jcache.interceptor.DefaultJCacheOperationSource: org.springframework.cache.interceptor.KeyGenerator getDefaultKeyGenerator()> -> _SOURCES_
<org.springframework.jdbc.core.JdbcTemplate: int update(java.lang.String,java.lang.Object[])> -> _CWE089__SINKS_
<org.springframework.messaging.core.AbstractDestinationResolvingMessagingTemplate: void send(java.lang.String,org.springframework.messaging.Message)> -> _SINKS_
<org.springframework.web.context.request.async.WebAsyncManager: void setTaskExecutor(org.springframework.core.task.AsyncTaskExecutor)> -> _SINKS_
<org.springframework.web.portlet.ModelAndViewDefiningException: org.springframework.web.portlet.ModelAndView getModelAndView()> -> _SOURCES_
<org.springframework.jms.core.JmsMessagingTemplate: org.springframework.jms.core.JmsTemplate getJmsTemplate()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.CsrfConfigurer: org.springframework.security.web.access.AccessDeniedHandler createAccessDeniedHandler(org.springframework.security.config.'annotation'.web.HttpSecurityBuilder)> -> _SINKS_
<org.springframework.core.convert.support.IntegerToEnumConverterFactory: org.springframework.core.convert.converter.Converter getConverter(java.lang.Class)> -> _SOURCES_
<org.springframework.orm.hibernate3.LocalSessionFactoryBean: void setMappingLocations(org.springframework.core.io.Resource[])> -> _SINKS_
<org.springframework.jms.connection.DelegatingConnectionFactory: javax.jms.QueueConnection createQueueConnection(java.lang.String,java.lang.String)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.jmx.export.assembler.MethodNameBasedMBeanInfoAssembler: void setManagedMethods(java.lang.String[])> -> _SINKS_
<org.springframework.instrument.classloading.glassfish.GlassFishLoadTimeWeaver: java.lang.ClassLoader getThrowawayClassLoader()> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession: org.springframework.web.socket.sockjs.transport.SockJsServiceConfig getSockJsServiceConfig()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortalContext: java.util.Enumeration getSupportedPortletModes()> -> _SOURCES_
<org.springframework.web.servlet.view.xslt.XsltViewResolver: void setIndent(boolean)> -> _SINKS_
<org.springframework.http.server.ServletServerHttpRequest: org.springframework.http.server.ServerHttpAsyncRequestControl getAsyncRequestControl(org.springframework.http.server.ServerHttpResponse)> -> _SOURCES_
<org.springframework.aop.support.AbstractGenericPointcutAdvisor: org.aopalliance.aop.Advice getAdvice()> -> _SOURCES_
<org.springframework.jdbc.support.lob.TemporaryLobCreator: void setBlobAsBinaryStream(java.sql.PreparedStatement,int,java.io.InputStream,int)> -> _CWE089__SINKS_
<org.springframework.web.filter.GenericFilterBean: javax.servlet.ServletContext getServletContext()> -> _SOURCES_
<org.springframework.web.socket.config.annotation.SockJsServiceRegistration: org.springframework.web.socket.config.'annotation'.SockJsServiceRegistration setTransportHandlerOverrides(org.springframework.web.socket.sockjs.transport.TransportHandler[])> -> _SINKS_
<org.springframework.util.xml.XMLEventStreamReader: javax.xml.stream.events.Namespace getNamespace(int)> -> _SOURCES_
<org.springframework.web.portlet.multipart.DefaultMultipartActionRequest: java.util.List getFiles(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.web.util.OpaqueUriComponents: org.springframework.util.MultiValueMap getQueryParams()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter: org.springframework.security.authentication.AuthenticationManager authenticationManager()> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor: org.aopalliance.aop.Advice getAdvice()> -> _SOURCES_
<org.springframework.jdbc.core.simple.AbstractJdbcCall: java.util.Map doExecute(org.springframework.jdbc.core.namedparam.SqlParameterSource)> -> _CWE078__CWE089__SINKS_
<org.springframework.web.servlet.mvc.condition.ParamsRequestCondition: org.springframework.web.servlet.mvc.condition.ParamsRequestCondition getMatchingCondition(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.asm.TypeReference: int getTypeParameterIndex()> -> _SOURCES_
<org.springframework.jms.listener.DefaultMessageListenerContainer: int getIdleInvokerCount()> -> _SOURCES_
<org.springframework.jdbc.core.BeanPropertyRowMapper: java.lang.Class getMappedClass()> -> _CWE089__SOURCES_
<org.springframework.validation.AbstractBindingResult: int getErrorCount()> -> _SOURCES_
<org.springframework.security.config.http.CsrfBeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.jmx.support.WebLogicMBeanServerFactoryBean: void setPassword(java.lang.String)> -> _SINKS_
<org.springframework.messaging.core.AbstractMessagingTemplate: java.lang.Object convertSendAndReceive(java.lang.Object,java.lang.Object,java.util.Map,java.lang.Class,org.springframework.messaging.core.MessagePostProcessor)> -> _SINKS_
<org.springframework.http.converter.json.MappingJacksonValue: void setValue(java.lang.Object)> -> _SINKS_
<org.springframework.web.servlet.resource.DefaultResourceTransformerChain: org.springframework.web.servlet.resource.ResourceResolverChain getResolverChain()> -> _SOURCES_
<org.springframework.orm.hibernate3.LocalSessionFactoryBean: java.util.Properties getHibernateProperties()> -> _SOURCES_
<org.springframework.remoting.jaxws.SimpleHttpServerJaxWsServiceExporter: void setPort(int)> -> _SINKS_
<org.springframework.http.converter.ResourceHttpMessageConverter: org.springframework.core.io.Resource readInternal(java.lang.Class,org.springframework.http.HttpInputMessage)> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateAccessor: void setSessionFactory(org.hibernate.SessionFactory)> -> _SINKS_
<org.springframework.test.web.servlet.result.StatusResultMatchers: org.springframework.http.HttpStatus$Series getHttpStatusSeries(org.springframework.test.web.servlet.MvcResult)> -> _SOURCES_
<org.springframework.scripting.support.ScriptFactoryPostProcessor: void setResourceLoader(org.springframework.core.io.ResourceLoader)> -> _SOURCES__SINKS_
<org.springframework.jdbc.support.nativejdbc.Jdbc4NativeJdbcExtractor: java.sql.CallableStatement getNativeCallableStatement(java.sql.CallableStatement)> -> _CWE089__SOURCES_
<org.springframework.instrument.classloading.websphere.WebSphereLoadTimeWeaver: java.lang.ClassLoader getInstrumentableClassLoader()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag: java.lang.String getName()> -> _SOURCES_
<org.springframework.test.util.XpathExpectationsHelper: org.w3c.dom.Document parseXmlByteArray(byte[],java.lang.String)> -> _SOURCES__SINKS_
<org.springframework.test.web.servlet.request.MockMvcRequestBuilders: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder patch(java.net.URI)> -> _SOURCES_
<org.springframework.orm.ibatis.SqlMapClientFactoryBean: void setUseTransactionAwareDataSource(boolean)> -> _SINKS_
<org.springframework.core.type.StandardMethodMetadata: java.util.Map getAnnotationAttributes(java.lang.String,boolean)> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompEncoder: java.lang.StringBuilder getStringBuilder(java.lang.StringBuilder,java.lang.String,int)> -> _SOURCES_
<org.springframework.orm.jpa.support.JpaDaoSupport: void setEntityManagerFactory(javax.persistence.EntityManagerFactory)> -> _SINKS_
<org.springframework.test.util.XpathExpectationsHelper: void assertNode(byte[],java.lang.String,org.hamcrest.Matcher)> -> _SINKS_
<org.springframework.jca.work.WorkManagerTaskExecutor: void setBootstrapContext(javax.resource.spi.BootstrapContext)> -> _SINKS_
<org.springframework.messaging.handler.DestinationPatternsMessageCondition: java.lang.String getToStringInfix()> -> _SOURCES_
<org.springframework.web.servlet.view.tiles3.SimpleSpringPreparerFactory: org.apache.tiles.preparer.ViewPreparer getPreparer(java.lang.String,org.springframework.web.context.WebApplicationContext)> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateTemplate: void update(java.lang.Object,org.hibernate.LockMode)> -> _SINKS_
<org.springframework.util.ResponseTimeMonitorImpl: int getAccessCount()> -> _SOURCES__CWE601_
<org.springframework.security.provisioning.JdbcUserDetailsManager: void setFindAllGroupsSql(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.remoting.jaxws.JaxWsSoapFaultException: javax.xml.soap.SOAPFault getFault()> -> _SOURCES_
<org.springframework.jms.connection.JmsTransactionManager: javax.jms.Connection createConnection()> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.mock.web.portlet.MockPortalContext: java.lang.String getPortalInfo()> -> _SOURCES_
<org.springframework.web.client.RestTemplate: org.springframework.http.ResponseEntity postForEntity(java.lang.String,java.lang.Object,java.lang.Class,java.lang.Object[])> -> _SINKS_
<org.springframework.jmx.access.MBeanProxyFactoryBean: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.jdbc.datasource.init.ResourceDatabasePopulator: void setIgnoreFailedDrops(boolean)> -> _CWE089__SINKS_
<org.springframework.core.convert.Property: java.lang.reflect.Field getField()> -> _SOURCES_
<org.springframework.expression.spel.ast.SpelNodeImpl: org.springframework.expression.spel.SpelNode getChild(int)> -> _CWE079__SOURCES_
<org.springframework.web.method.HandlerMethod: org.springframework.core.MethodParameter[] getMethodParameters()> -> _SOURCES_
<org.springframework.web.socket.server.standard.ServerEndpointRegistration: java.lang.String getNegotiatedSubprotocol(java.util.List,java.util.List)> -> _CWE079__SOURCES_
<org.springframework.web.servlet.view.jasperreports.AbstractJasperReportsSingleFormatView: boolean generatesDownloadContent()> -> _SOURCES_
<org.springframework.jdbc.datasource.init.ScriptUtils: void executeSqlScript(java.sql.Connection,org.springframework.core.io.Resource)> -> _CWE089__SINKS_
<org.springframework.web.context.support.RequestHandledEvent: java.lang.String getUserName()> -> _SOURCES_
<org.springframework.jdbc.core.JdbcTemplate: void setSkipUndeclaredResults(boolean)> -> _CWE089__SINKS_
<org.springframework.web.socket.sockjs.client.WebSocketClientSockJsSession: void setTextMessageSizeLimit(int)> -> _SINKS_
<org.springframework.mock.web.MockMultipartHttpServletRequest: org.springframework.http.HttpHeaders getRequestHeaders()> -> _SOURCES_
<org.springframework.scheduling.support.PeriodicTrigger: void setInitialDelay(long)> -> _SINKS_
<org.springframework.orm.jdo.support.SpringPersistenceManagerProxyBean: java.lang.Class getPersistenceManagerInterface()> -> _SOURCES_
<org.springframework.core.serializer.DefaultSerializer: void serialize(java.lang.Object,java.io.OutputStream)> -> _SINKS_
<org.springframework.expression.spel.ast.OpMinus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.messaging.handler.invocation.MethodArgumentResolutionException: java.lang.String getMethodParameterMessage(org.springframework.core.MethodParameter)> -> _SOURCES_
<org.springframework.jca.cci.core.support.CciDaoSupport: javax.resource.cci.ConnectionFactory getConnectionFactory()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.web.cors.DefaultCorsProcessor: java.util.List getHeadersToUse(org.springframework.http.server.ServerHttpRequest,boolean)> -> _SOURCES_
<org.springframework.http.client.OkHttp3ClientHttpRequestFactory: okhttp3.MediaType getContentType(org.springframework.http.HttpHeaders)> -> _SOURCES_
<org.springframework.remoting.rmi.RmiClientInterceptor: void setRegistryClientSocketFactory(java.rmi.server.RMIClientSocketFactory)> -> _SINKS_
<org.springframework.core.annotation.MapAnnotationAttributeExtractor: java.lang.Object getRawAttributeValue(java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager: void setDataSources(java.util.Map)> -> _SINKS_
<org.springframework.jdbc.InvalidResultSetAccessException: java.lang.String getSql()> -> _CWE089__SOURCES_
<org.springframework.core.convert.Property: org.springframework.core.MethodParameter resolveReadMethodParameter()> -> _SOURCES_
<org.springframework.web.client.RestTemplate: org.springframework.http.ResponseEntity exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,java.lang.Class,java.util.Map)> -> _SINKS_
<org.springframework.security.config.annotation.web.configuration.OnMissingBeanCondition: org.springframework.context.'annotation'.ConfigurationCondition$ConfigurationPhase getConfigurationPhase()> -> _SOURCES_
<org.springframework.validation.BindException: java.util.Map getModel()> -> _SOURCES_
<org.springframework.util.StopWatch: long getTotalTimeMillis()> -> _SOURCES_
<org.springframework.jdbc.support.nativejdbc.XAPoolNativeJdbcExtractor: boolean isNativeConnectionNecessaryForNativeCallableStatements()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__CWE862_
<org.springframework.web.socket.sockjs.support.AbstractSockJsService: org.springframework.scheduling.TaskScheduler getTaskScheduler()> -> _SOURCES_
<org.springframework.cglib.core.TypeUtils: org.springframework.asm.Type getType(java.lang.String)> -> _SOURCES_
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getCollectionFieldType(java.lang.reflect.Field)> -> _SOURCES_
<org.springframework.beans.factory.config.YamlProcessor: java.util.Map getFlattenedMap(java.util.Map)> -> _SOURCES_
<org.springframework.scripting.support.StandardScriptEvalException: javax.script.ScriptException getScriptException()> -> _SOURCES_
<org.springframework.remoting.jaxws.JaxWsPortClientInterceptor: java.util.Map getCustomProperties()> -> _SOURCES_
<org.springframework.orm.toplink.LocalSessionFactory: void setSessionName(java.lang.String)> -> _SINKS_
<org.springframework.orm.hibernate3.support.ScopedBeanInterceptor: java.lang.String getEntityName(java.lang.Object)> -> _CWE089__SOURCES_
<org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession: java.security.Principal getPrincipal()> -> _SOURCES_
<org.springframework.web.context.request.async.DeferredResult: java.lang.Object getResult()> -> _SOURCES_
<org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: javax.persistence.spi.PersistenceProvider getPersistenceProvider()> -> _SOURCES_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSetMetaData: java.lang.String getColumnTypeName(int)> -> _CWE089__SOURCES_
<org.springframework.web.socket.messaging.StompSubProtocolHandler: java.lang.String getStatsInfo()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.TextareaTag: void setRows(java.lang.String)> -> _SINKS_
<org.springframework.scripting.jruby.JRubyScriptFactory: java.lang.Object getScriptedObject(org.springframework.scripting.ScriptSource,java.lang.Class[])> -> _SOURCES_
<org.springframework.web.context.request.ServletRequestAttributes: java.lang.Object getSessionMutex()> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.handler.JsonpPollingTransportHandler: org.springframework.web.socket.sockjs.transport.TransportType getTransportType()> -> _SOURCES_
<org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor: void setScheduler(java.lang.Object)> -> _SINKS_
<org.springframework.web.socket.handler.WebSocketSessionDecorator: java.lang.String getAcceptedProtocol()> -> _SOURCES_
<org.springframework.jdbc.support.incrementer.AbstractColumnMaxValueIncrementer: int getCacheSize()> -> _CWE089__SOURCES_
<org.springframework.jndi.JndiObjectLocator: java.lang.String getJndiName()> -> _SOURCES_
<org.springframework.core.enums.StringCodedLabeledEnum: java.lang.String getStringCode()> -> _SOURCES_
<org.springframework.orm.jdo.LocalPersistenceManagerFactoryBean: void setJdoDialect(org.springframework.orm.jdo.JdoDialect)> -> _SINKS_
<org.springframework.beans.propertyeditors.CustomCollectionEditor: void setAsText(java.lang.String)> -> _SINKS_
<org.springframework.beans.factory.support.AbstractBeanFactory: org.springframework.beans.TypeConverter getCustomTypeConverter()> -> _SOURCES_
<org.springframework.web.servlet.mvc.condition.HeadersRequestCondition: java.util.Set getExpressions()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletPreferences: void setReadOnly(java.lang.String,boolean)> -> _SINKS_
<org.springframework.scheduling.support.PeriodicTrigger: void setFixedRate(boolean)> -> _SINKS_
<org.springframework.remoting.caucho.BurlapProxyFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.http.client.BufferingClientHttpRequestFactory: org.springframework.http.client.ClientHttpRequest createRequest(java.net.URI,org.springframework.http.HttpMethod,org.springframework.http.client.ClientHttpRequestFactory)> -> _SOURCES_
<org.springframework.web.portlet.handler.SimplePortletPostProcessor: void setPortletConfig(javax.portlet.PortletConfig)> -> _SINKS_
<org.springframework.jdbc.core.JdbcTemplate: int update(java.lang.String,java.lang.Object[],int[])> -> _CWE089__SINKS_
<org.springframework.util.xml.StaxStreamXMLReader: org.xml.sax.Attributes getAttributes()> -> _SOURCES_
<org.springframework.web.context.request.ServletWebRequest: java.util.Map getParameterMap()> -> _SOURCES__CWE601_
<org.springframework.web.util.UrlPathHelper: void setUrlDecode(boolean)> -> _SINKS_
<org.springframework.test.web.servlet.result.ModelResultMatchers: org.springframework.web.servlet.ModelAndView getModelAndView(org.springframework.test.web.servlet.MvcResult)> -> _SOURCES_
<org.springframework.expression.spel.ast.MethodReference: java.lang.Object[] getArguments(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.util.xml.AbstractXMLStreamReader: java.lang.String getNamespaceURI()> -> _SOURCES_
<org.springframework.remoting.jaxrpc.JaxRpcPortClientInterceptor: void setPassword(java.lang.String)> -> _SINKS_
<org.springframework.web.util.UriUtils: java.lang.String encode(java.lang.String,java.lang.String)> -> _SANITIZERS_
<org.springframework.scheduling.quartz.SchedulerFactoryBean: void setStartupDelay(int)> -> _SINKS_
<org.springframework.jms.core.support.JmsGatewaySupport: org.springframework.jms.core.JmsTemplate getJmsTemplate()> -> _SOURCES_
<org.springframework.scheduling.quartz.JobDetailBean: void setApplicationContext(org.springframework.context.ApplicationContext)> -> _SINKS_
<org.springframework.web.socket.sockjs.transport.handler.XhrPollingTransportHandler: org.springframework.web.socket.sockjs.transport.session.PollingSockJsSession createSession(java.lang.String,org.springframework.web.socket.WebSocketHandler,java.util.Map)> -> _SINKS_
<org.springframework.aop.aspectj.SimpleAspectInstanceFactory: int getOrderForAspectClass(java.lang.Class)> -> _SOURCES_
<org.springframework.util.FileCopyUtils: void copy(byte[],java.io.OutputStream)> -> _SINKS_
<org.springframework.web.servlet.FrameworkServlet: java.lang.String getNamespace()> -> _SOURCES_
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: java.lang.reflect.Method[] getSortedClassMethods(java.lang.Class)> -> _SOURCES_
<org.springframework.aop.aspectj.DeclareParentsAdvisor: org.aopalliance.aop.Advice getAdvice()> -> _SOURCES_
<org.springframework.jdbc.core.support.AbstractSqlTypeValue: void setTypeValue(java.sql.PreparedStatement,int,int,java.lang.String)> -> _CWE089__SINKS_
<org.springframework.messaging.simp.config.AbstractMessageBrokerConfiguration: org.springframework.messaging.simp.config.MessageBrokerRegistry getBrokerRegistry()> -> _SOURCES_
<org.springframework.aop.interceptor.AsyncExecutionAspectSupport: java.util.concurrent.Executor getDefaultExecutor(org.springframework.beans.factory.BeanFactory)> -> _SOURCES__SINKS_
<org.springframework.jmx.export.metadata.AttributesJmxAttributeSource: org.springframework.jmx.export.metadata.ManagedResource getManagedResource(java.lang.Class)> -> _SOURCES_
<org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler: java.util.Collection getDestinationPrefixes()> -> _SOURCES_
<org.springframework.oxm.xmlbeans.XmlOptionsFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.orm.hibernate3.AbstractSessionFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.web.util.HierarchicalUriComponents: byte[] encodeBytes(byte[],org.springframework.web.util.HierarchicalUriComponents$Type)> -> _SANITIZERS__SINKS_
<org.springframework.beans.BeanUtils: java.beans.PropertyDescriptor getPropertyDescriptor(java.lang.Class,java.lang.String)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletRequest: java.lang.String getRemoteUser()> -> _SOURCES_
<org.springframework.jdbc.support.SQLErrorCodes: void setCustomTranslations(org.springframework.jdbc.support.CustomSQLErrorCodesTranslation[])> -> _CWE089__SINKS_
<org.springframework.web.servlet.i18n.CookieLocaleResolver: void parseLocaleCookieIfNecessary(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.scheduling.support.TaskUtils: org.springframework.util.ErrorHandler getDefaultErrorHandler(boolean)> -> _SOURCES_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: org.springframework.jdbc.support.KeyHolder executeInsertAndReturnKeyHolderInternal(java.util.List)> -> _CWE078__CWE089__SINKS_
<org.springframework.security.config.http.HttpSecurityBeanDefinitionParser: org.springframework.beans.factory.config.BeanReference createAuthenticationManager(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.ManagedList)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.aop.support.RegexpMethodPointcutAdvisor: org.springframework.aop.Pointcut getPointcut()> -> _SOURCES_
<org.springframework.jms.core.JmsTemplate: void setPriority(int)> -> _SINKS_
<org.springframework.web.multipart.support.AbstractMultipartHttpServletRequest: org.springframework.http.HttpHeaders getRequestHeaders()> -> _SOURCES_
<org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler: void setTrustResolver(org.springframework.security.authentication.AuthenticationTrustResolver)> -> _SINKS_
<org.springframework.beans.factory.support.AbstractBeanDefinitionReader: int loadBeanDefinitions(java.lang.String[])> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver: org.springframework.web.accept.ContentNegotiationManager getContentNegotiationManager()> -> _SOURCES_
<org.springframework.jms.core.JmsTemplate: javax.jms.Session getSession(org.springframework.jms.connection.JmsResourceHolder)> -> _SOURCES_
<org.springframework.core.annotation.AnnotatedElementUtils: java.lang.annotation.Annotation[] getRawAnnotationsFromContainer(java.lang.reflect.AnnotatedElement,java.lang.'annotation'.Annotation)> -> _SOURCES_
<org.springframework.core.enums.AbstractCachingLabeledEnumResolver: java.util.Set getLabeledEnumSet(java.lang.Class)> -> _SOURCES_
<org.springframework.mail.javamail.MimeMessageHelper: javax.activation.FileTypeMap getDefaultFileTypeMap(javax.mail.internet.MimeMessage)> -> _SOURCES_
<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: java.lang.String getMerge()> -> _SOURCES_
<org.springframework.beans.factory.parsing.BeanComponentDefinition: org.springframework.beans.factory.config.BeanDefinition[] getInnerBeanDefinitions()> -> _SOURCES_
<org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite: java.util.List getHandlers()> -> _SOURCES_
<org.springframework.web.servlet.view.freemarker.FreeMarkerView: java.lang.String getEncoding()> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanDefinition: void setSingleton(boolean)> -> _SINKS_
<org.springframework.mock.web.portlet.ServletWrappingPortletContext: int getMinorVersion()> -> _SOURCES_
<org.springframework.test.context.web.WebMergedContextConfiguration: java.lang.String getResourceBasePath()> -> _SOURCES_
<org.springframework.core.io.ByteArrayResource: byte[] getByteArray()> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateAccessor: java.lang.String[] getFilterNames()> -> _SOURCES_
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setOrder(int)> -> _SINKS_
<org.springframework.web.servlet.support.AbstractDispatcherServletInitializer: java.util.EnumSet getDispatcherTypes()> -> _SOURCES_
<org.springframework.cglib.core.ClassEmitter: org.springframework.cglib.core.ClassInfo getClassInfo()> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.handler.HtmlFileTransportHandler: org.springframework.web.socket.sockjs.frame.SockJsFrameFormat getFrameFormat(org.springframework.http.server.ServerHttpRequest)> -> _CWE079__SOURCES_
<org.springframework.jms.core.JmsMessagingTemplate: java.lang.Object convertSendAndReceive(java.lang.String,java.lang.Object,java.util.Map,java.lang.Class,org.springframework.messaging.core.MessagePostProcessor)> -> _SINKS_
<org.springframework.orm.toplink.support.CommonsLoggingSessionLog904: java.lang.String getSessionName(oracle.toplink.sessions.Session)> -> _SOURCES_
<org.springframework.jms.listener.endpoint.JmsMessageEndpointManager: void setTransactionManager(java.lang.Object)> -> _SINKS_
<org.springframework.web.socket.sockjs.support.AbstractSockJsService: org.springframework.web.cors.CorsConfiguration getCorsConfiguration(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.aop.framework.ProxyFactoryBean: void setFrozen(boolean)> -> _SINKS_
<org.springframework.web.context.support.ServletContextParameterFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: void setAutowireCandidates(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletRequest: java.util.Enumeration getAttributeNames()> -> _SOURCES_
<org.springframework.orm.hibernate3.LocalRegionFactoryProxy: org.hibernate.cache.access.AccessType getDefaultAccessType()> -> _SOURCES_
<org.springframework.orm.hibernate5.SessionFactoryUtils: javax.sql.DataSource getDataSource(org.hibernate.SessionFactory)> -> _SOURCES_
<org.springframework.util.backoff.ExponentialBackOff: long getMaxInterval()> -> _SOURCES_
<org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate: org.springframework.context.ApplicationContext loadContextInternal(org.springframework.test.context.MergedContextConfiguration)> -> _SOURCES_
<org.springframework.web.portlet.bind.PortletRequestUtils: java.lang.Float getFloatParameter(javax.portlet.PortletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator: void setAspectJAdvisorFactory(org.springframework.aop.aspectj.'annotation'.AspectJAdvisorFactory)> -> _SINKS_
<org.springframework.context.event.EventListenerMethodProcessor: void setApplicationContext(org.springframework.context.ApplicationContext)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: java.util.List getMessageConverters()> -> _SOURCES_
<org.springframework.web.context.request.FacesRequestAttributes: java.lang.String[] getAttributeNames(int)> -> _SOURCES_
<org.springframework.jdbc.datasource.init.CompositeDatabasePopulator: void setPopulators(org.springframework.jdbc.datasource.init.DatabasePopulator[])> -> _CWE089__SINKS_
<org.springframework.mock.web.MockHttpServletResponse: void setIncludedUrl(java.lang.String)> -> _SINKS__CWE601_
<org.springframework.util.concurrent.CompletableToListenableFutureAdapter: java.lang.Object get(long,java.util.concurrent.TimeUnit)> -> _SOURCES_
<org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean: javax.persistence.spi.PersistenceUnitInfo getPersistenceUnitInfo()> -> _SOURCES_
<org.springframework.aop.aspectj.AspectJExpressionPointcut: org.aspectj.weaver.tools.ShadowMatch getShadowMatch(java.lang.reflect.Method,java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.orm.jpa.vendor.TopLinkJpaDialect: org.springframework.jdbc.datasource.ConnectionHandle getJdbcConnection(javax.persistence.EntityManager,boolean)> -> _CWE306__SOURCES__CWE862_
<org.springframework.remoting.rmi.RemoteInvocationSerializingExporter: void setContentType(java.lang.String)> -> _SINKS_
<org.springframework.expression.spel.standard.SpelExpression: java.lang.Object getValue(java.lang.Object)> -> _SOURCES_
<org.springframework.jms.connection.SingleConnectionFactory: javax.jms.Connection createConnection(java.lang.String,java.lang.String)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.util.ResponseTimeMonitorImpl: java.util.Date getLoadDate()> -> _SOURCES__CWE601_
<org.springframework.web.socket.sockjs.transport.handler.XhrStreamingTransportHandler: org.springframework.web.socket.sockjs.transport.session.StreamingSockJsSession createSession(java.lang.String,org.springframework.web.socket.WebSocketHandler,java.util.Map)> -> _SINKS_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: java.lang.String getCssStyle()> -> _CWE079__SOURCES_
<org.springframework.messaging.simp.stomp.DefaultStompSession: org.springframework.messaging.simp.stomp.StompSession$Receiptable send(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.core.type.StandardClassMetadata: java.lang.String getEnclosingClassName()> -> _SOURCES_
<org.springframework.web.portlet.bind.PortletRequestUtils: int[] getRequiredIntParameters(javax.portlet.PortletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver: java.lang.Object readWithMessageConverters(org.springframework.http.HttpInputMessage,org.springframework.core.MethodParameter,java.lang.reflect.Type)> -> _SOURCES__CWE601_
<org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver: org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite getReturnValueHandlers()> -> _SOURCES_
<org.springframework.test.web.servlet.result.PrintingResultHandler: void printResolvedException(java.lang.Exception)> -> _SINKS_
<org.springframework.instrument.classloading.ShadowingClassLoader: java.lang.Class loadClass(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor: void writeWithMessageConverters(java.lang.Object,org.springframework.core.MethodParameter,org.springframework.web.context.request.NativeWebRequest)> -> _SINKS_
<org.springframework.test.context.junit4.SpringJUnit4ClassRunner: java.lang.Object createTest()> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanFactory: void setTypeConverter(org.springframework.beans.TypeConverter)> -> _SINKS_
<org.springframework.validation.beanvalidation.LocalValidatorFactoryBean: javax.validation.MessageInterpolator getMessageInterpolator()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.AnonymousConfigurer: org.springframework.security.config.'annotation'.web.configurers.AnonymousConfigurer authenticationFilter(org.springframework.security.web.authentication.AnonymousAuthenticationFilter)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.aop.aspectj.AspectJExpressionPointcutAdvisor: java.lang.String getLocation()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.HttpBasicConfigurer: org.springframework.security.config.'annotation'.web.configurers.HttpBasicConfigurer authenticationDetailsSource(org.springframework.security.authentication.AuthenticationDetailsSource)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.expression.spel.support.ReflectiveMethodResolver: java.util.Collection getMethods(java.lang.Class,java.lang.Object)> -> _SOURCES_
<org.springframework.jms.config.AbstractJmsListenerContainerFactory: void setClientId(java.lang.String)> -> _SINKS_
<org.springframework.http.client.HttpComponentsClientHttpRequestFactory: void setHttpClient(org.apache.http.client.HttpClient)> -> _SINKS_
<org.springframework.web.socket.CloseStatus: java.lang.String getReason()> -> _SOURCES_
<org.springframework.aop.aspectj.AbstractAspectJAdvice: java.lang.Object getDiscoveredReturningGenericType()> -> _SOURCES_
<org.springframework.web.portlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver: org.springframework.web.portlet.ModelAndView getModelAndView(java.lang.Object)> -> _SOURCES_
<org.springframework.oxm.jibx.JibxMarshaller: void setDocTypeInternalSubset(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.datasource.UserCredentialsDataSourceAdapter: java.sql.Connection getConnection(java.lang.String,java.lang.String)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__SOURCES__CWE862_
<org.springframework.scheduling.quartz.SchedulerAccessor: void setTriggers(org.quartz.Trigger[])> -> _SINKS_
<org.springframework.remoting.support.RemoteInvocationBasedAccessor: void setRemoteInvocationFactory(org.springframework.remoting.support.RemoteInvocationFactory)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompHeaderAccessor: java.lang.String getDetailedLogMessage(java.lang.Object)> -> _SOURCES_
<org.springframework.security.access.intercept.AbstractSecurityInterceptor: org.springframework.security.access.intercept.RunAsManager getRunAsManager()> -> _SOURCES_
<org.springframework.remoting.rmi.RmiProxyFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder setResourceDescription(java.lang.String)> -> _SINKS_
<org.springframework.cglib.core.TypeUtils: org.springframework.asm.Type getBoxedType(org.springframework.asm.Type)> -> _SOURCES_
<org.springframework.web.context.support.ServletRequestHandledEvent: java.lang.String getServletName()> -> _SOURCES_
<org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory: javax.validation.ConstraintValidator getInstance(java.lang.Class)> -> _SOURCES_
<org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor: int getOrder()> -> _SOURCES_
<org.springframework.web.accept.AbstractMappingContentNegotiationStrategy: org.springframework.http.MediaType handleNoMatch(org.springframework.web.context.request.NativeWebRequest,java.lang.String)> -> _SINKS_
<org.springframework.mock.web.MockFilterChain: javax.servlet.ServletRequest getRequest()> -> _SOURCES_
<org.springframework.jndi.JndiObjectFactoryBean: void setProxyInterface(java.lang.Class)> -> _SINKS_
<org.springframework.test.context.TestContextManager: java.util.List getTestExecutionListeners()> -> _SOURCES_
<org.springframework.jdbc.support.SQLErrorCodes: void setDeadlockLoserCodes(java.lang.String[])> -> _CWE089__SINKS_
<org.springframework.jca.cci.object.EisOperation: javax.resource.cci.InteractionSpec getInteractionSpec()> -> _SOURCES_
<org.springframework.jdbc.support.incrementer.AbstractDataFieldMaxValueIncrementer: void setPaddingLength(int)> -> _CWE089__SINKS_
<org.springframework.remoting.rmi.JndiRmiClientInterceptor: org.springframework.remoting.support.RemoteInvocationFactory getRemoteInvocationFactory()> -> _SOURCES_
<org.springframework.orm.hibernate4.LocalSessionFactoryBean: void setHibernateProperties(java.util.Properties)> -> _SINKS_
<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: void setReturningName(java.lang.String)> -> _SINKS_
<org.springframework.remoting.rmi.RmiRegistryFactoryBean: java.rmi.registry.Registry getRegistry(int,java.rmi.server.RMIClientSocketFactory,java.rmi.server.RMIServerSocketFactory)> -> _SOURCES_
<org.springframework.web.socket.client.ConnectionManagerSupport: int getPhase()> -> _SOURCES_
<org.springframework.jmx.export.metadata.ManagedMetric: org.springframework.jmx.support.MetricType getMetricType()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletRequest: void setServerPort(int)> -> _SINKS_
<org.springframework.remoting.support.SimpleHttpServerFactoryBean: void setAuthenticator(com.sun.net.httpserver.Authenticator)> -> _CWE306__SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.context.event.ApplicationListenerMethodAdapter: java.lang.Object getTargetBean()> -> _SOURCES_
<org.springframework.web.servlet.handler.HandlerExceptionResolverComposite: void setOrder(int)> -> _SINKS_
<org.springframework.jdbc.object.SqlUpdate: int update(long)> -> _CWE089__SINKS_
<org.springframework.orm.jpa.persistenceunit.PersistenceUnitReader: org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo parsePersistenceUnitInfo(org.w3c.dom.Element)> -> _SOURCES_
<org.springframework.core.annotation.AnnotatedElementUtils: org.springframework.core.'annotation'.AnnotationAttributes getAnnotationAttributes(java.lang.reflect.AnnotatedElement,java.lang.String,boolean,boolean)> -> _SOURCES_
<org.springframework.jms.connection.JmsResourceHolder: void closeAll()> -> _AUTHENTICATIONS_TO_LOW_
<org.springframework.security.access.intercept.RunAsImplAuthenticationProvider: void setMessageSource(org.springframework.context.MessageSource)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver: java.util.Map getExceptionHandlerAdviceCache()> -> _SOURCES_
<org.springframework.web.accept.MappingMediaTypeFileExtensionResolver: java.util.List getAllFileExtensions()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockClientDataRequest: void setContentType(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.mock.web.MockMultipartHttpServletRequest: void addFile(org.springframework.web.multipart.MultipartFile)> -> _CWE079__SINKS_
<org.springframework.transaction.support.ResourceHolderSupport: int getTimeToLiveInSeconds()> -> _SOURCES_
<org.springframework.aop.framework.ReflectiveMethodInvocation: java.lang.Object getProxy()> -> _SOURCES_
<org.springframework.jdbc.object.SqlUpdate: int updateByNamedParam(java.util.Map)> -> _CWE089__SINKS_
<org.springframework.messaging.simp.SimpMessageHeaderAccessor: java.lang.String getSessionId()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletContext: java.lang.String getServerInfo()> -> _SOURCES_
<org.springframework.web.client.AsyncRestTemplate: void setErrorHandler(org.springframework.web.client.ResponseErrorHandler)> -> _SINKS_
<org.springframework.orm.toplink.TopLinkTemplate: java.lang.Object executeQuery(oracle.toplink.queryframework.DatabaseQuery,boolean)> -> _CWE078__SINKS_
<org.springframework.jms.config.MethodJmsListenerEndpoint: void setMethod(java.lang.reflect.Method)> -> _SINKS_
<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: void setAutoGrowNestedPaths(boolean)> -> _SINKS_
<org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter: org.springframework.http.HttpInputMessage createHttpInputMessage(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.web.util.UrlPathHelper: java.lang.String getLookupPathForRequest(javax.servlet.http.HttpServletRequest)> -> _CWE079__SOURCES_
<org.springframework.http.converter.protobuf.ProtobufHttpMessageConverter: void writeInternal(com.google.protobuf.Message,org.springframework.http.HttpOutputMessage)> -> _SINKS_
<org.springframework.web.servlet.resource.FixedVersionStrategy: java.lang.String getResourceVersion(org.springframework.core.io.Resource)> -> _SOURCES_
<org.springframework.web.servlet.resource.AbstractResourceResolver: java.lang.String resolveUrlPath(java.lang.String,java.util.List,org.springframework.web.servlet.resource.ResourceResolverChain)> -> _CWE079__SINKS_
<org.springframework.util.xml.XMLEventStreamWriter: java.lang.Object getProperty(java.lang.String)> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateTemplate: void saveOrUpdate(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.beans.AbstractNestablePropertyAccessor: void setWrappedInstance(java.lang.Object)> -> _SINKS_
<org.springframework.jms.config.MethodJmsListenerEndpoint: java.lang.String getDefaultResponseDestination()> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanDefinitionReader: org.springframework.core.io.ResourceLoader getResourceLoader()> -> _SOURCES_
<org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy: java.sql.Connection getTransactionAwareConnectionProxy(javax.sql.DataSource)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__SOURCES__CWE862_
<org.springframework.web.portlet.context.AbstractRefreshablePortletApplicationContext: void setParent(org.springframework.context.ApplicationContext)> -> _SINKS_
<org.springframework.web.socket.server.standard.ServerEndpointRegistration: void setDecoders(java.util.List)> -> _SINKS_
<org.springframework.web.multipart.support.StandardMultipartHttpServletRequest: java.util.Map getParameterMap()> -> _SOURCES__CWE601_
<org.springframework.web.portlet.mvc.annotation.AnnotationMethodHandlerAdapter: void setCustomArgumentResolvers(org.springframework.web.bind.support.WebArgumentResolver[])> -> _SINKS_
<org.springframework.orm.hibernate4.HibernateTemplate: java.lang.Object execute(org.springframework.orm.hibernate4.HibernateCallback)> -> _SINKS_
<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.net.URL getWsdlDocumentUrl()> -> _SOURCES_
<org.springframework.util.Log4jConfigurer: void setWorkingDirSystemProperty(java.lang.String)> -> _SINKS_
<org.springframework.util.DefaultPropertiesPersister: void doStore(java.util.Properties,java.io.Writer,java.lang.String)> -> _SINKS_
<org.springframework.transaction.jta.JotmFactoryBean: void setDefaultTimeout(int)> -> _SINKS_
<org.springframework.remoting.support.RemoteInvocation: java.util.Map getAttributes()> -> _SOURCES_
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: int getBeanDefinitionCount()> -> _SOURCES_
<org.springframework.aop.framework.AdvisedSupport: java.util.List getInterceptorsAndDynamicInterceptionAdvice(java.lang.reflect.Method,java.lang.Class)> -> _SOURCES_
<org.springframework.util.comparator.InvertibleComparator: void setAscending(boolean)> -> _SINKS_
<org.springframework.security.access.intercept.aspectj.MethodInvocationAdapter: java.lang.Object getThis()> -> _SOURCES_
<org.springframework.scheduling.config.TriggerTask: org.springframework.scheduling.Trigger getTrigger()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: void login(java.lang.String,java.lang.String)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.view.XmlViewResolver: java.lang.Object getCacheKey(java.lang.String,java.util.Locale)> -> _SOURCES_
<org.springframework.remoting.jaxws.LocalJaxWsServiceFactory: javax.xml.namespace.QName getQName(java.lang.String)> -> _SOURCES_
<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.String getTargetField()> -> _SOURCES_
<org.springframework.test.context.MergedContextConfiguration: org.springframework.context.ApplicationContext getParentApplicationContext()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockClientDataRequest: java.lang.String getMethod()> -> _SOURCES_
<org.springframework.context.support.AbstractResourceBasedMessageSource: long getCacheMillis()> -> _SOURCES_
<org.springframework.jdbc.core.namedparam.BeanPropertySqlParameterSource: java.lang.String[] getReadablePropertyNames()> -> _CWE089__SOURCES_
<org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager: void setDefaultPersistenceUnitRootLocation(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.mvc.support.AbstractControllerUrlHandlerMapping: void setIncludeAnnotatedControllers(boolean)> -> _SINKS_
<org.springframework.aop.framework.CglibAopProxy: void setConstructorArguments(java.lang.Object[],java.lang.Class[])> -> _SINKS_
<org.springframework.web.servlet.mvc.condition.ProducesRequestCondition: int compareTo(org.springframework.web.servlet.mvc.condition.ProducesRequestCondition,javax.servlet.http.HttpServletRequest)> -> _SINKS_
<org.springframework.scheduling.quartz.JobDetailFactoryBean: void setDescription(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.handler.MappedInterceptor: void setPathMatcher(org.springframework.util.PathMatcher)> -> _SINKS_
<org.springframework.messaging.simp.user.MultiServerUserRegistry: int getUserCount()> -> _SOURCES__CWE862_
<org.springframework.core.Conventions: java.lang.String getVariableNameForReturnType(java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.web.util.OpaqueUriComponents: int getPort()> -> _SOURCES_
<org.springframework.util.ClassUtils: java.lang.Class[] getAllInterfacesForClass(java.lang.Class,java.lang.ClassLoader)> -> _SOURCES_
<org.springframework.web.socket.sockjs.support.AbstractSockJsService: long getHeartbeatTime()> -> _SOURCES_
<org.springframework.web.method.annotation.SessionStatusMethodArgumentResolver: java.lang.Object resolveArgument(org.springframework.core.MethodParameter,org.springframework.web.method.support.ModelAndViewContainer,org.springframework.web.context.request.NativeWebRequest,org.springframework.web.bind.support.WebDataBinderFactory)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletRequest: void setLocalName(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.transaction.jta.JotmFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockMimeResponse: void setCommitted(boolean)> -> _SINKS__CWE601_
<org.springframework.scripting.groovy.GroovyScriptFactory: java.lang.String getScriptSourceLocator()> -> _SOURCES_
<org.springframework.beans.factory.xml.DefaultDocumentLoader: org.w3c.dom.Document loadDocument(org.xml.sax.InputSource,org.xml.sax.EntityResolver,org.xml.sax.ErrorHandler,int,boolean)> -> _SOURCES_
<org.springframework.web.socket.messaging.DefaultSimpUserRegistry: java.util.Set getUsers()> -> _SOURCES__CWE862_
<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder principal(java.security.Principal)> -> _SOURCES_
<org.springframework.http.converter.AbstractHttpMessageConverter: java.lang.Object read(java.lang.Class,org.springframework.http.HttpInputMessage)> -> _SOURCES_
<org.springframework.beans.factory.config.TypedStringValue: java.lang.Class getTargetType()> -> _SOURCES_
<org.springframework.validation.DataBinder: void setExtractOldValueForEditor(boolean)> -> _SINKS_
<org.springframework.jdbc.support.lob.PassThroughClob: java.lang.String getSubString(long,int)> -> _CWE089__SOURCES_
<org.springframework.jdbc.core.simple.AbstractJdbcCall: void setFunction(boolean)> -> _CWE089__SINKS_
<org.springframework.web.servlet.tags.form.AbstractHtmlInputElementTag: void setReadonly(boolean)> -> _CWE079__SOURCES__SINKS__CWE601_
<org.springframework.web.portlet.FrameworkPortlet: void setContextConfigLocation(java.lang.String)> -> _SINKS_
<org.springframework.oxm.xstream.XStreamMarshaller: void setFieldAliases(java.util.Map)> -> _SINKS_
<org.springframework.remoting.httpinvoker.SimpleHttpInvokerServiceExporter: void writeRemoteInvocationResult(com.sun.net.httpserver.HttpExchange,org.springframework.remoting.support.RemoteInvocationResult)> -> _SINKS_
<org.springframework.context.ApplicationEvent: long getTimestamp()> -> _SOURCES_
<org.springframework.web.servlet.mvc.support.AbstractControllerUrlHandlerMapping: void setExcludedPackages(java.lang.String[])> -> _SINKS_
<org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator: void setSuffix(java.lang.String)> -> _SINKS_
<org.springframework.orm.hibernate4.LocalSessionFactoryBean: void setCacheRegionFactory(org.hibernate.cache.spi.RegionFactory)> -> _SINKS_
<org.springframework.web.servlet.mvc.condition.ProducesRequestCondition: org.springframework.web.servlet.mvc.condition.ProducesRequestCondition getMatchingCondition(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.web.socket.messaging.WebSocketStompClient: void setPhase(int)> -> _SINKS_
<org.springframework.web.filter.AbstractRequestLoggingFilter: void setAfterMessageSuffix(java.lang.String)> -> _SINKS_
<org.springframework.aop.aspectj.AbstractAspectJAdvice: org.aspectj.lang.JoinPoint getJoinPoint()> -> _SOURCES_
<org.springframework.scripting.config.ScriptBeanDefinitionParser: org.springframework.beans.factory.support.AbstractBeanDefinition parseInternal(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletSession: long getLastAccessedTime()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractFormTag: java.lang.String getDisplayString(java.lang.Object)> -> _CWE079__SOURCES_
<org.springframework.web.socket.client.standard.WebSocketContainerFactoryBean: int getMaxBinaryMessageBufferSize()> -> _SOURCES_
<org.springframework.core.env.MapPropertySource: java.lang.Object getProperty(java.lang.String)> -> _SOURCES_
<org.springframework.messaging.support.ChannelInterceptorAdapter: void postSend(org.springframework.messaging.Message,org.springframework.messaging.MessageChannel,boolean)> -> _SINKS_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: java.lang.String getOnmouseover()> -> _CWE079__SOURCES_
<org.springframework.test.context.junit4.AbstractJUnit4SpringContextTests: void setApplicationContext(org.springframework.context.ApplicationContext)> -> _SINKS_
<org.springframework.web.servlet.view.AbstractView: boolean generatesDownloadContent()> -> _SOURCES_
<org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParser: org.springframework.beans.factory.support.RootBeanDefinition parseSearchBean(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES__CWE862_
<org.springframework.mock.jndi.SimpleNamingContextBuilder: org.springframework.mock.jndi.SimpleNamingContextBuilder getCurrentContextBuilder()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletResponse: javax.portlet.PortalContext getPortalContext()> -> _SOURCES__CWE601_
<org.springframework.jdbc.datasource.init.ScriptUtils: void executeSqlScript(java.sql.Connection,org.springframework.core.io.support.EncodedResource,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> -> _CWE078__CWE089__SINKS_
<org.springframework.util.CustomizableThreadCreator: int getThreadPriority()> -> _SOURCES_
<org.springframework.web.method.HandlerMethod: org.springframework.core.MethodParameter getReturnValueType(java.lang.Object)> -> _SOURCES_
<org.springframework.web.client.DefaultResponseErrorHandler: org.springframework.http.HttpStatus getHttpStatusCode(org.springframework.http.client.ClientHttpResponse)> -> _SOURCES__CWE601_
<org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter: java.lang.Long getTimeout()> -> _SOURCES__CWE601_
<org.springframework.aop.framework.autoproxy.target.AbstractBeanFactoryBasedTargetSourceCreator: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.beans.factory.BeanNotOfRequiredTypeException: java.lang.Class getRequiredType()> -> _SOURCES_
<org.springframework.web.servlet.HandlerExecutionChain: void applyPostHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.servlet.ModelAndView)> -> _SINKS_
<org.springframework.jms.connection.SingleConnectionFactory: javax.jms.Connection doCreateConnection()> -> _CWE306__SOURCES__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.messaging.simp.user.DefaultUserSessionRegistry: java.util.Set getSessionIds(java.lang.String)> -> _SOURCES_
<org.springframework.test.jdbc.JdbcTestUtils: void executeSqlScript(org.springframework.jdbc.core.JdbcTemplate,org.springframework.core.io.Resource,boolean)> -> _CWE089__SINKS_
<org.springframework.scheduling.quartz.JobDetailFactoryBean: org.quartz.JobDataMap getJobDataMap()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockResourceRequest: void setCacheability(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.web.portlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver: java.lang.reflect.Method getBestMatchingMethod(java.util.Map,java.lang.Exception)> -> _SOURCES_
<org.springframework.web.util.ContentCachingResponseWrapper: void setStatus(int,java.lang.String)> -> _SINKS__CWE601_
<org.springframework.jms.support.JmsAccessor: javax.jms.ConnectionFactory getConnectionFactory()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.web.socket.handler.WebSocketSessionDecorator: java.net.InetSocketAddress getRemoteAddress()> -> _SOURCES_
<org.springframework.remoting.rmi.RemoteInvocationSerializingExporter: void doWriteRemoteInvocationResult(org.springframework.remoting.support.RemoteInvocationResult,java.io.ObjectOutputStream)> -> _SINKS_
<org.springframework.web.servlet.tags.form.OptionTag: void setLabel(java.lang.String)> -> _SINKS_
<org.springframework.web.socket.sockjs.client.JettyXhrTransport: org.springframework.http.ResponseEntity executeRequest(java.net.URI,org.eclipse.jetty.http.HttpMethod,org.springframework.http.HttpHeaders,java.lang.String)> -> _SINKS_
<org.springframework.core.io.FileSystemResource: java.lang.String getDescription()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setCustomReturnValueHandlers(java.util.List)> -> _SINKS_
<org.springframework.jms.config.AbstractListenerContainerParser: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SINKS_
<org.springframework.web.portlet.util.PortletUtils: void setSessionAttribute(javax.portlet.PortletRequest,java.lang.String,java.lang.Object,int)> -> _SINKS_
<org.springframework.mail.javamail.JavaMailSenderImpl: javax.mail.Transport getTransport(javax.mail.Session)> -> _SOURCES_
<org.springframework.web.portlet.mvc.PortletWrappingController: void setInitParameters(java.util.Map)> -> _SINKS_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: int[] doExecuteBatch(org.springframework.jdbc.core.namedparam.SqlParameterSource[])> -> _CWE078__CWE089__SINKS_
<org.springframework.web.cors.CorsConfiguration: java.util.List getAllowedMethods()> -> _SOURCES_
<org.springframework.jdbc.core.ResultSetSupportingSqlParameter: org.springframework.jdbc.core.ResultSetExtractor getResultSetExtractor()> -> _CWE089__SOURCES_
<org.springframework.orm.jpa.vendor.TopLinkJpaDialect: oracle.toplink.essentials.sessions.Session getSession(javax.persistence.EntityManager)> -> _SOURCES_
<org.springframework.cache.caffeine.CaffeineCache: java.lang.String getName()> -> _SOURCES_
<org.springframework.orm.hibernate5.HibernateTransactionManager: boolean isSameConnectionForEntireSession(org.hibernate.Session)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE862_
<org.springframework.security.access.hierarchicalroles.NullRoleHierarchy: java.util.Collection getReachableGrantedAuthorities(java.util.Collection)> -> _SOURCES_
<org.springframework.beans.BeanWrapperImpl: java.lang.String getNestedPath()> -> _SOURCES_
<org.springframework.mock.web.MockServletContext: java.util.Set getResourcePaths(java.lang.String)> -> _SOURCES_
<org.springframework.mock.http.client.MockClientHttpRequest: org.springframework.http.HttpMethod getMethod()> -> _SOURCES_
<org.springframework.jdbc.core.CallableStatementCreatorFactory: void setUpdatableResults(boolean)> -> _CWE089__SINKS_
<org.springframework.jdbc.object.SqlUpdate: int update(java.lang.String,java.lang.String)> -> _CWE089__SINKS_
<org.springframework.util.xml.StaxResult: void setHandler(org.xml.sax.ContentHandler)> -> _SINKS_
<org.springframework.core.env.SimpleCommandLinePropertySource: java.util.List getNonOptionArgs()> -> _SOURCES_
<org.springframework.web.portlet.bind.PortletRequestUtils: float[] getRequiredFloatParameters(javax.portlet.PortletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockCacheControl: int getExpirationTime()> -> _SOURCES_
<org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean: void setResourceLoader(org.springframework.core.io.ResourceLoader)> -> _SOURCES__SINKS_
<org.springframework.jms.config.MethodJmsListenerEndpoint: java.lang.reflect.Method getMethod()> -> _SOURCES_
<org.springframework.security.authentication.jaas.AbstractJaasAuthenticationProvider: org.springframework.context.ApplicationEventPublisher getApplicationEventPublisher()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockBaseURL: java.lang.String[] getParameterValues(java.lang.String)> -> _SOURCES__CWE601_
<org.springframework.messaging.handler.HandlerMethod: java.lang.String getShortLogMessage()> -> _SOURCES_
<org.springframework.jdbc.support.incrementer.H2SequenceMaxValueIncrementer: java.lang.String getSequenceQuery()> -> _CWE089__SOURCES_
<org.springframework.web.servlet.view.tiles2.TilesView: void setAlwaysInclude(boolean)> -> _SINKS_
<org.springframework.web.servlet.handler.SimpleMappingExceptionResolver: int getDepth(java.lang.String,java.lang.Class,int)> -> _SOURCES_
<org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder: java.util.List getConfigurers(java.lang.Class)> -> _SOURCES_
<org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler: org.springframework.messaging.MessageChannel getClientOutboundChannel()> -> _SOURCES_
<org.springframework.core.convert.support.NumberToNumberConverterFactory: org.springframework.core.convert.converter.Converter getConverter(java.lang.Class)> -> _SOURCES_
<org.springframework.cglib.reflect.FastClass: java.lang.Class getJavaClass()> -> _SOURCES_
<org.springframework.remoting.rmi.RmiClientInterceptorUtils: boolean isConnectFailure(java.rmi.RemoteException)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE862_
<org.springframework.cache.interceptor.CacheAspectSupport: void logInvalidating(org.springframework.cache.interceptor.CacheAspectSupport$CacheOperationContext,org.springframework.cache.interceptor.CacheEvictOperation,java.lang.Object)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession: int getBinaryMessageSizeLimit()> -> _SOURCES_
<org.springframework.messaging.simp.SimpAttributes: void setAttribute(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.cglib.beans.BeanMap: java.lang.Object get(java.lang.Object)> -> _SOURCES_
<org.springframework.test.context.jdbc.MergedSqlConfig: java.lang.String getCommentPrefix()> -> _CWE089__SOURCES_
<org.springframework.cache.interceptor.CacheOperationExpressionEvaluator: java.lang.reflect.Method getTargetMethod(java.lang.Class,java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.oxm.castor.CastorMarshaller: void setRootObject(java.lang.Object)> -> _SINKS_
<org.springframework.web.socket.sockjs.client.XhrClientSockJsSession: java.net.InetSocketAddress getLocalAddress()> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.ViewResolverRegistry: void setContentNegotiationManager(org.springframework.web.accept.ContentNegotiationManager)> -> _SINKS_
<org.springframework.test.context.support.AbstractGenericContextLoader: org.springframework.context.ConfigurableApplicationContext loadContext(java.lang.String[])> -> _SOURCES_
<org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator: void setRemoveSemicolonContent(boolean)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: org.springframework.web.servlet.mvc.method.RequestMappingInfo createRequestMappingInfo(java.lang.reflect.AnnotatedElement)> -> _SOURCES_
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getWrappedInstance()> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompDecoder: org.springframework.messaging.support.MessageHeaderInitializer getHeaderInitializer()> -> _SOURCES_
<org.springframework.objenesis.instantiator.SerializationInstantiatorHelper: java.lang.Class getNonSerializableSuperClass(java.lang.Class)> -> _SOURCES_
<org.springframework.scheduling.quartz.SpringBeanJobFactory: void setSchedulerContext(org.quartz.SchedulerContext)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletResponse: java.util.List getHeaders(java.lang.String)> -> _SOURCES__CWE601_
<org.springframework.web.servlet.handler.SimpleMappingExceptionResolver: org.springframework.web.servlet.ModelAndView getModelAndView(java.lang.String,java.lang.Exception,javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.handler.DefaultSockJsService: java.util.Set getDefaultTransportHandlers(java.util.Collection)> -> _SOURCES_
<org.springframework.web.servlet.tags.form.OptionTag: org.springframework.web.servlet.tags.form.SelectTag getSelectTag()> -> _SOURCES_
<org.springframework.web.method.support.InvocableHandlerMethod: java.lang.Object[] getMethodArgumentValues(org.springframework.web.context.request.NativeWebRequest,org.springframework.web.method.support.ModelAndViewContainer,java.lang.Object[])> -> _SOURCES_
<org.springframework.web.portlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver: void setCustomArgumentResolvers(org.springframework.web.bind.support.WebArgumentResolver[])> -> _SINKS_
<org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.http.converter.json.GsonHttpMessageConverter: void setGson(com.google.gson.Gson)> -> _SINKS_
<org.springframework.jms.config.MethodJmsListenerEndpoint: void setMostSpecificMethod(java.lang.reflect.Method)> -> _SINKS_
<org.springframework.orm.hibernate3.HibernateTemplate: java.lang.Object execute(org.springframework.orm.hibernate3.HibernateCallback)> -> _SINKS_
<org.springframework.scheduling.aspectj.AnnotationAsyncExecutionAspect: java.lang.String getExecutorQualifier(java.lang.reflect.Method)> -> _CWE078__SOURCES__SINKS_
<org.springframework.core.type.classreading.MethodMetadataReadingVisitor: org.springframework.core.'annotation'.AnnotationAttributes getAnnotationAttributes(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: java.lang.String getOnmousemove()> -> _CWE079__SOURCES_
<org.springframework.jms.connection.SingleConnectionFactory102: void setPubSubDomain(boolean)> -> _SINKS_
<org.springframework.test.web.servlet.DefaultMvcResult: java.lang.Object getAsyncResult()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockBaseURL: void setParameter(java.lang.String,java.lang.String)> -> _SINKS_
<org.springframework.security.config.annotation.web.configurers.LogoutConfigurer: org.springframework.security.config.'annotation'.web.configurers.LogoutConfigurer logoutUrl(java.lang.String)> -> _CWE306__AUTHENTICATIONS_TO_LOW__CWE862_
<org.springframework.orm.jpa.JpaTransactionManager: void setJpaDialect(org.springframework.orm.jpa.JpaDialect)> -> _SINKS_
<org.springframework.beans.factory.support.BeanDefinitionDefaults: int getDependencyCheck()> -> _SOURCES_
<org.springframework.web.portlet.context.PortletApplicationContextUtils: org.springframework.context.ApplicationContext getRequiredWebApplicationContext(javax.portlet.PortletContext)> -> _SOURCES_
<org.springframework.http.client.InterceptingAsyncClientHttpRequest: java.net.URI getURI()> -> _SOURCES_
<org.springframework.format.datetime.standard.PeriodFormatter: java.time.Period parse(java.lang.String,java.util.Locale)> -> _SINKS_
<org.springframework.cache.annotation.CachingConfigurationSelector: java.lang.String[] getProxyImports()> -> _SOURCES_
<org.springframework.web.socket.client.jetty.JettyWebSocketClient: org.springframework.util.concurrent.ListenableFuture doHandshakeInternal(org.springframework.web.socket.WebSocketHandler,org.springframework.http.HttpHeaders,java.net.URI,java.util.List,java.util.List,java.util.Map)> -> _SINKS_
<org.springframework.web.portlet.multipart.DefaultMultipartActionRequest: java.util.Map getMultipartParameters()> -> _SOURCES_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.util.concurrent.ListenableFuture postForEntity(java.net.URI,org.springframework.http.HttpEntity,java.lang.Class)> -> _SINKS_
<org.springframework.remoting.jaxws.JaxWsPortClientInterceptor: void setLookupServiceOnStartup(boolean)> -> _SINKS_
<org.springframework.web.servlet.FrameworkServlet: void setContextId(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.FlashMap: org.springframework.util.MultiValueMap getTargetRequestParams()> -> _SOURCES_
<org.springframework.beans.factory.parsing.AliasDefinition: java.lang.String getBeanName()> -> _SOURCES_
<org.springframework.jdbc.UncategorizedSQLException: java.lang.String getSql()> -> _CWE089__SOURCES_
<org.springframework.security.access.expression.method.MethodSecurityExpressionRoot: void setPermissionEvaluator(org.springframework.security.access.PermissionEvaluator)> -> _SINKS_
<org.springframework.beans.factory.config.CustomScopeConfigurer: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.aop.framework.ReflectiveMethodInvocation: java.lang.reflect.AccessibleObject getStaticPart()> -> _SOURCES_
<org.springframework.jdbc.object.SqlQuery: java.util.List execute(int,int,java.util.Map)> -> _CWE078__CWE089__SINKS_
<org.springframework.jdbc.support.incrementer.AbstractIdentityColumnMaxValueIncrementer: void setDeleteSpecificValues(boolean)> -> _CWE089__SINKS_
<org.springframework.remoting.jaxws.JaxWsPortClientInterceptor: void setServiceInterface(java.lang.Class)> -> _SINKS_
<org.springframework.web.servlet.theme.CookieThemeResolver: void setDefaultThemeName(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setSessionAttributeStore(org.springframework.web.bind.support.SessionAttributeStore)> -> _SINKS_
<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object parseValueElement(org.w3c.dom.Element,java.lang.String)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler: org.springframework.messaging.support.MessageHeaderInitializer getHeaderInitializer()> -> _SOURCES_
<org.springframework.format.datetime.joda.JodaDateTimeFormatAnnotationFormatterFactory: org.joda.time.format.DateTimeFormatter getFormatter(org.springframework.format.'annotation'.DateTimeFormat,java.lang.Class)> -> _SOURCES_
<org.springframework.jdbc.core.RowCountCallbackHandler: java.lang.String[] getColumnNames()> -> _CWE089__SOURCES_
<org.springframework.web.socket.client.standard.AnnotatedEndpointConnectionManager: javax.websocket.WebSocketContainer getWebSocketContainer()> -> _SOURCES_
<org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper: void setStringSeparator(java.lang.String)> -> _SINKS_
<org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: void setPersistenceProviderClass(java.lang.Class)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setCustomArgumentResolvers(java.util.List)> -> _SINKS_
<org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler: void setServletContext(javax.servlet.ServletContext)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompHeaderAccessor: java.lang.String getMessageId()> -> _SOURCES_
<org.springframework.orm.hibernate4.HibernateTemplate: void setFilterNames(java.lang.String[])> -> _SINKS_
<org.springframework.http.converter.json.MappingJacksonValue: java.lang.Class getSerializationView()> -> _SOURCES_
<org.springframework.http.client.HttpComponentsClientHttpResponse: int getRawStatusCode()> -> _SOURCES__CWE601_
<org.springframework.orm.hibernate5.SessionHolder: void setTransaction(org.hibernate.Transaction)> -> _SINKS_
<org.springframework.web.socket.config.annotation.AbstractWebSocketHandlerRegistration: org.springframework.web.socket.config.'annotation'.WebSocketHandlerRegistration setHandshakeHandler(org.springframework.web.socket.server.HandshakeHandler)> -> _SINKS_
<org.springframework.mock.env.MockPropertySource: void setProperty(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.messaging.converter.MarshallingMessageConverter: void setMarshaller(org.springframework.oxm.Marshaller)> -> _SINKS_
<org.springframework.security.access.event.AuthenticationCredentialsNotFoundEvent: java.util.Collection getConfigAttributes()> -> _SOURCES__CWE862_
<org.springframework.beans.factory.support.AbstractBeanDefinition: void setFactoryBeanName(java.lang.String)> -> _SINKS_
<org.springframework.context.support.AbstractRefreshableConfigApplicationContext: java.lang.String[] getConfigLocations()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.LogoutConfigurer: org.springframework.security.web.authentication.logout.LogoutFilter createLogoutFilter(org.springframework.security.config.'annotation'.web.HttpSecurityBuilder)> -> _CWE306__AUTHENTICATIONS_TO_LOW__CWE862_
<org.springframework.aop.target.EmptyTargetSource: java.lang.Class getTargetClass()> -> _SOURCES_
<org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider: org.springframework.security.core.userdetails.UserCache getUserCache()> -> _SOURCES__CWE862_
<org.springframework.aop.config.PointcutComponentDefinition: org.springframework.beans.factory.config.BeanDefinition[] getBeanDefinitions()> -> _SOURCES_
<org.springframework.web.portlet.FrameworkPortlet: java.lang.String getPortletContextAttributeName()> -> _SOURCES_
<org.springframework.web.method.support.InvocableHandlerMethod: java.lang.String getArgumentResolutionErrorMessage(java.lang.String,int)> -> _CWE079__SOURCES_
<org.springframework.web.servlet.handler.AbstractHandlerMethodMapping: org.springframework.web.method.HandlerMethod createHandlerMethod(java.lang.Object,java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.jdbc.support.incrementer.AbstractDataFieldMaxValueIncrementer: int getPaddingLength()> -> _CWE089__SOURCES_
<org.springframework.core.MethodParameter: java.lang.Object[] getParameterAnnotations()> -> _SOURCES_
<org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator: void setUsePrefix(boolean)> -> _SINKS_
<org.springframework.http.converter.protobuf.ProtobufHttpMessageConverter: com.google.protobuf.Message readInternal(java.lang.Class,org.springframework.http.HttpInputMessage)> -> _SOURCES_
<org.springframework.jdbc.datasource.WebSphereDataSourceAdapter: java.lang.Object createConnectionSpec(java.lang.Integer,java.lang.Boolean,java.lang.String,java.lang.String)> -> _CWE306__CWE089__SOURCES__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.socket.sockjs.transport.TransportType: org.springframework.http.HttpMethod getHttpMethod()> -> _SOURCES_
<org.springframework.util.StopWatch: long getLastTaskTimeMillis()> -> _SOURCES_
<org.springframework.web.multipart.support.AbstractMultipartHttpServletRequest: org.springframework.http.HttpMethod getRequestMethod()> -> _SOURCES_
<org.springframework.jmx.export.metadata.ManagedNotification: void setDescription(java.lang.String)> -> _SINKS_
<org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler: org.springframework.web.socket.sockjs.SockJsService getSockJsService()> -> _SOURCES_
<org.springframework.aop.framework.CglibAopProxy: java.lang.Object getProxy(java.lang.ClassLoader)> -> _SOURCES_
<org.springframework.instrument.classloading.jboss.JBossModulesAdapter: java.lang.ClassLoader getInstrumentableClassLoader()> -> _SOURCES_
<org.springframework.security.crypto.bcrypt.BCrypt: byte[] decode_base64(java.lang.String,int)> -> _SOURCES_
<org.springframework.jmx.export.assembler.MethodExclusionMBeanInfoAssembler: void setIgnoredMethods(java.lang.String[])> -> _SINKS_
<org.springframework.cache.caffeine.CaffeineCacheManager: java.util.Collection getCacheNames()> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.SockJsClient: org.springframework.util.concurrent.ListenableFuture doHandshake(org.springframework.web.socket.WebSocketHandler,java.lang.String,java.lang.Object[])> -> _SINKS_
<org.springframework.context.support.AbstractXmlApplicationContext: org.springframework.core.io.Resource[] getConfigResources()> -> _SOURCES_
<org.springframework.scheduling.quartz.SimpleTriggerFactoryBean: void setMisfireInstruction(int)> -> _SINKS_
<org.springframework.web.servlet.config.ResourcesBeanDefinitionParser: org.springframework.beans.factory.support.RootBeanDefinition parseVersionResolver(org.springframework.beans.factory.xml.ParserContext,org.w3c.dom.Element,java.lang.Object)> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompHeaderAccessor: java.lang.String getAck()> -> _SOURCES_
<org.springframework.messaging.simp.SimpAttributes: java.lang.String[] getAttributeNames()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.InputTag: void setAlt(java.lang.String)> -> _SINKS_
<org.springframework.web.context.request.async.WebAsyncUtils: org.springframework.web.context.request.async.AsyncWebRequest createAsyncWebRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)> -> _SOURCES_
<org.springframework.web.socket.config.WebSocketMessageBrokerStats: long getLoggingPeriod()> -> _SOURCES_
<org.springframework.core.JdkVersion: java.lang.String getJavaVersion()> -> _SOURCES_
<org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder: org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder setSingleView(org.springframework.web.servlet.View)> -> _SINKS_
<org.springframework.security.provisioning.MutableUser: java.util.Collection getAuthorities()> -> _SOURCES__CWE862_
<org.springframework.util.backoff.ExponentialBackOff: void setMultiplier(double)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletRequest: void setDispatcherType(javax.servlet.DispatcherType)> -> _SINKS_
<org.springframework.mock.web.portlet.MockStateAwareResponse: java.lang.String[] getRenderParameterValues(java.lang.String)> -> _SOURCES__CWE601_
<org.springframework.mock.web.MockServletContext: javax.servlet.FilterRegistration getFilterRegistration(java.lang.String)> -> _SOURCES_
<org.springframework.jdbc.core.JdbcTemplate: org.springframework.jdbc.core.RowMapper getColumnMapRowMapper()> -> _CWE089__SOURCES_
<org.springframework.expression.spel.SpelParseException: org.springframework.expression.spel.SpelMessage getMessageCode()> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry: org.springframework.web.servlet.config.'annotation'.ResourceHandlerRegistry setOrder(int)> -> _SINKS_
<org.springframework.web.servlet.view.json.AbstractJackson2View: void setDisableCaching(boolean)> -> _SINKS_
<org.springframework.http.client.support.InterceptingHttpAccessor: java.util.List getInterceptors()> -> _SOURCES_
<org.springframework.cglib.core.AbstractClassGenerator: void setStrategy(org.springframework.cglib.core.GeneratorStrategy)> -> _SINKS_
<org.springframework.beans.propertyeditors.CurrencyEditor: java.lang.String getAsText()> -> _SOURCES_
<org.springframework.orm.jpa.persistenceunit.MutablePersistenceUnitInfo: void setNonJtaDataSource(javax.sql.DataSource)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: org.springframework.web.servlet.ModelAndView handleInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.method.HandlerMethod)> -> _SINKS_
<org.springframework.context.event.ApplicationListenerMethodAdapter: org.springframework.core.ResolvableType getResolvableType(org.springframework.context.ApplicationEvent)> -> _SOURCES_
<org.springframework.test.web.servlet.request.MockMvcRequestBuilders: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder get(java.net.URI)> -> _SOURCES_
<org.springframework.web.portlet.mvc.annotation.AnnotationMethodHandlerAdapter: org.springframework.web.portlet.ModelAndView handleRender(javax.portlet.RenderRequest,javax.portlet.RenderResponse,java.lang.Object)> -> _SINKS_
<org.springframework.web.servlet.support.RequestContextUtils: java.util.TimeZone getTimeZone(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.expression.spel.SpelParserConfiguration: org.springframework.expression.spel.SpelCompilerMode getCompilerMode()> -> _CWE078__SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: java.util.Enumeration getHeaderNames()> -> _SOURCES_
<org.springframework.asm.commons.GeneratorAdapter: void loadArgs(int,int)> -> _SOURCES_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: byte getByte(int)> -> _CWE089__SOURCES_
<org.springframework.beans.support.PagedListHolder: int getLastLinkedPage()> -> _SOURCES_
<org.springframework.web.servlet.config.ViewControllerBeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.jmx.export.assembler.AbstractMBeanInfoAssembler: java.lang.Class getClassToExpose(java.lang.Class)> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompHeaderAccessor: void setVersion(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.MockJspWriter: void print(int)> -> _SINKS_
<org.springframework.web.servlet.mvc.WebContentInterceptor: void setAlwaysUseFullPath(boolean)> -> _SINKS_
<org.springframework.orm.hibernate5.SpringSessionSynchronization: int getOrder()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder: java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Object[])> -> _SOURCES_
<org.springframework.messaging.simp.SimpSessionScope: java.lang.Object get(java.lang.String,org.springframework.beans.factory.ObjectFactory)> -> _SOURCES_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: float getFloat(java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.web.portlet.context.XmlPortletApplicationContext: void loadBeanDefinitions(org.springframework.beans.factory.support.DefaultListableBeanFactory)> -> _SOURCES_
<org.springframework.messaging.simp.config.MessageBrokerRegistry: org.springframework.messaging.simp.config.ChannelRegistration getBrokerChannelRegistration()> -> _SOURCES_
<org.springframework.core.io.support.DefaultPropertySourceFactory: org.springframework.core.env.PropertySource createPropertySource(java.lang.String,org.springframework.core.io.support.EncodedResource)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletResponse: long getContentLengthLong()> -> _SOURCES__CWE601_
<org.springframework.test.web.client.match.MockRestRequestMatchers: org.springframework.test.web.client.RequestMatcher method(org.springframework.http.HttpMethod)> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateTemplate: java.util.List executeFind(org.springframework.orm.hibernate3.HibernateCallback)> -> _SINKS_
<org.springframework.core.env.SimpleCommandLinePropertySource: java.lang.String[] getPropertyNames()> -> _SOURCES_
<org.springframework.jms.core.JmsTemplate: javax.jms.Connection getConnection(org.springframework.jms.connection.JmsResourceHolder)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.scheduling.timer.TimerTaskExecutor: void execute(java.lang.Runnable)> -> _SINKS_
<org.springframework.remoting.rmi.RmiServiceExporter: void setRegistryServerSocketFactory(java.rmi.server.RMIServerSocketFactory)> -> _SINKS_
<org.springframework.http.client.OkHttpClientHttpRequestFactory: void setWriteTimeout(int)> -> _SINKS_
<org.springframework.web.socket.sockjs.client.AbstractXhrTransport: void setRequestHeaders(org.springframework.http.HttpHeaders)> -> _SINKS_
<org.springframework.expression.spel.standard.SpelExpression: org.springframework.expression.EvaluationContext getEvaluationContext()> -> _SOURCES_
<org.springframework.jmx.export.metadata.AttributesJmxAttributeSource: org.springframework.jmx.export.metadata.ManagedAttribute getManagedAttribute(java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser: java.lang.Class getBeanClass(org.w3c.dom.Element)> -> _SOURCES_
<org.springframework.jdbc.core.PreparedStatementCreatorFactory: void setGeneratedKeysColumnNames(java.lang.String[])> -> _CWE089__SINKS_
<org.springframework.mock.web.MockServletConfig: javax.servlet.ServletContext getServletContext()> -> _SOURCES_
<org.springframework.web.method.annotation.RequestHeaderMethodArgumentResolver: java.lang.Object resolveName(java.lang.String,org.springframework.core.MethodParameter,org.springframework.web.context.request.NativeWebRequest)> -> _SINKS_
<org.springframework.web.context.request.FacesWebRequest: java.lang.String getRemoteUser()> -> _CWE079__SOURCES_
<org.springframework.web.servlet.tags.form.FormTag: java.lang.String getEnctype()> -> _SOURCES_
<org.springframework.jms.connection.TransactionAwareConnectionFactoryProxy: void setSynchedLocalTransactionAllowed(boolean)> -> _SINKS_
<org.springframework.jdbc.datasource.ConnectionHolder: void setTransactionActive(boolean)> -> _CWE089__SINKS_
<org.springframework.scripting.groovy.GroovyScriptEvaluator: void setCompilerConfiguration(org.codehaus.groovy.control.CompilerConfiguration)> -> _CWE078__SINKS_
<org.springframework.beans.BeanWrapperImpl: java.beans.PropertyDescriptor getPropertyDescriptorInternal(java.lang.String)> -> _SOURCES_
<org.springframework.web.context.request.async.DeferredResultInterceptorChain: void applyBeforeConcurrentHandling(org.springframework.web.context.request.NativeWebRequest,org.springframework.web.context.request.async.DeferredResult)> -> _SINKS_
<org.springframework.expression.spel.ast.BooleanLiteral: org.springframework.expression.spel.support.BooleanTypedValue getLiteralValue()> -> _SOURCES_
<org.springframework.mock.web.MockSessionCookieConfig: java.lang.String getDomain()> -> _SOURCES_
<org.springframework.web.servlet.view.tiles3.SpringWildcardServletTilesApplicationContext: java.util.Collection getResources(java.lang.String)> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.AbstractConfigAttributeRequestMatcherRegistry: java.util.LinkedHashMap createRequestMap()> -> _SOURCES_
<org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator: void setDataSource(javax.sql.DataSource)> -> _CWE089__SINKS_
<org.springframework.test.web.servlet.result.PrintingResultHandler: void printModelAndView(org.springframework.web.servlet.ModelAndView)> -> _SINKS_
<org.springframework.transaction.jta.UserTransactionAdapter: javax.transaction.TransactionManager getTransactionManager()> -> _SOURCES__CWE862_
<org.springframework.jms.listener.SimpleMessageListenerContainer102: javax.jms.Session createSession(javax.jms.Connection)> -> _SOURCES_
<org.springframework.web.socket.config.MessageBrokerBeanDefinitionParser: org.springframework.beans.factory.support.RootBeanDefinition getDefaultExecutorBeanDefinition(java.lang.String)> -> _SOURCES__SINKS_
<org.springframework.oxm.config.Jaxb2MarshallerBeanDefinitionParser: java.lang.String getBeanClassName(org.w3c.dom.Element)> -> _SOURCES_
<org.springframework.beans.factory.xml.NamespaceHandlerSupport: org.springframework.beans.factory.xml.BeanDefinitionParser findParserForElement(org.w3c.dom.Element)> -> _SOURCES_
<org.springframework.web.portlet.GenericPortletBean: org.springframework.core.env.ConfigurableEnvironment getEnvironment()> -> _SOURCES_
<org.springframework.remoting.caucho.HessianClientInterceptor: void setOverloadEnabled(boolean)> -> _SOURCES__SINKS_
<org.springframework.format.datetime.joda.JodaDateTimeFormatAnnotationFormatterFactory: org.springframework.format.Parser getParser(org.springframework.format.'annotation'.DateTimeFormat,java.lang.Class)> -> _SOURCES_
<org.springframework.web.portlet.ModelAndView: void setView(java.lang.Object)> -> _SINKS_
<org.springframework.format.datetime.standard.InstantFormatter: java.time.Instant parse(java.lang.String,java.util.Locale)> -> _SINKS_
<org.springframework.jms.connection.SingleConnectionFactory: void setTargetConnectionFactory(javax.jms.ConnectionFactory)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: int doExecute(org.springframework.jdbc.core.namedparam.SqlParameterSource)> -> _CWE078__CWE089__SINKS_
<org.springframework.scheduling.quartz.JobDetailBean: void setJobClass(java.lang.Class)> -> _SINKS_
<org.springframework.jdbc.support.nativejdbc.C3P0NativeJdbcExtractor: java.sql.Connection getRawConnection(java.sql.Connection)> -> _CWE306__CWE089__SOURCES__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.util.StopWatch: org.springframework.util.StopWatch$TaskInfo[] getTaskInfo()> -> _SOURCES_
<org.springframework.cache.jcache.interceptor.DefaultCacheMethodDetails: java.lang.'annotation'.Annotation getCacheAnnotation()> -> _SOURCES_
<org.springframework.jca.support.ResourceAdapterFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.web.servlet.view.AbstractView: java.util.Map createMergedOutputModel(java.util.Map,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)> -> _SOURCES_
<org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler: void setCustomReturnValueHandlers(java.util.List)> -> _SINKS_
<org.springframework.mock.web.MockAsyncContext: void setTimeout(long)> -> _SINKS_
<org.springframework.messaging.simp.SimpMessageTypeMessageCondition: org.springframework.messaging.simp.SimpMessageType getMessageType()> -> _SOURCES_
<org.springframework.test.context.support.MergedTestPropertySources: java.lang.String[] getLocations()> -> _SOURCES_
<org.springframework.security.core.authority.mapping.SimpleAuthorityMapper: void setConvertToUpperCase(boolean)> -> _SINKS_
<org.springframework.jms.listener.adapter.AbstractAdaptableMessageListener: void setHeaderMapper(org.springframework.jms.support.JmsHeaderMapper)> -> _SINKS_
<org.springframework.scheduling.quartz.CronTriggerBean: org.quartz.JobDetail getJobDetail()> -> _SOURCES_
<org.springframework.web.servlet.view.json.AbstractJackson2View: void setObjectMapper(com.fasterxml.jackson.databind.ObjectMapper)> -> _SINKS_
<org.springframework.jdbc.core.metadata.GenericTableMetaDataProvider: java.util.List getTableParameterMetaData()> -> _CWE089__SOURCES_
<org.springframework.web.socket.config.WebSocketMessageBrokerStats: java.lang.String getSockJsTaskSchedulerStatsInfo()> -> _SOURCES_
<org.springframework.core.io.UrlResource: java.io.File getFileForLastModifiedCheck()> -> _SOURCES_
<org.springframework.context.i18n.SimpleTimeZoneAwareLocaleContext: java.util.TimeZone getTimeZone()> -> _SOURCES_
<org.springframework.jms.connection.JmsResourceHolder: void addConnection(javax.jms.Connection)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.orm.ibatis.support.AbstractLobTypeHandler: java.lang.Object getResult(java.sql.ResultSet,int)> -> _SOURCES_
<org.springframework.jdbc.core.RowCountCallbackHandler: int[] getColumnTypes()> -> _CWE089__SOURCES_
<org.springframework.http.converter.protobuf.ProtobufHttpMessageConverter: void writeInternal(java.lang.Object,org.springframework.http.HttpOutputMessage)> -> _SINKS_
<org.springframework.validation.AbstractBindingResult: org.springframework.validation.FieldError getFieldError()> -> _SOURCES_
<org.springframework.mock.web.MockServletContext: javax.servlet.SessionCookieConfig getSessionCookieConfig()> -> _SOURCES_
<org.springframework.web.bind.annotation.support.HandlerMethodInvoker: java.lang.Class getHttpEntityType(org.springframework.core.MethodParameter)> -> _SOURCES_
<org.springframework.web.servlet.support.ServletUriComponentsBuilder: void initPath(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletContext: java.util.Enumeration getAttributeNames()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter: void setObjectPostProcessor(org.springframework.security.config.'annotation'.ObjectPostProcessor)> -> _SINKS_
<org.springframework.web.servlet.handler.AbstractHandlerMapping: void setAlwaysUseFullPath(boolean)> -> _SINKS_
<org.springframework.mock.web.portlet.MockBaseURL: java.lang.String encodeParameter(java.lang.String,java.lang.String)> -> _SANITIZERS_
<org.springframework.cache.jcache.interceptor.BeanFactoryJCacheOperationSourceAdvisor: void setCacheOperationSource(org.springframework.cache.jcache.interceptor.JCacheOperationSource)> -> _SINKS_
<org.springframework.messaging.converter.MarshallingMessageConverter: org.springframework.oxm.Marshaller getMarshaller()> -> _SOURCES_
<org.springframework.context.annotation.CommonAnnotationBeanPostProcessor: void setResourceFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.orm.hibernate5.HibernateTemplate: void setExposeNativeSession(boolean)> -> _SINKS_
<org.springframework.asm.Type: java.lang.String getDescriptor(java.lang.Class)> -> _SOURCES_
<org.springframework.web.socket.messaging.StompSubProtocolHandler: org.springframework.messaging.simp.stomp.StompHeaderAccessor getStompHeaderAccessor(org.springframework.messaging.Message)> -> _SOURCES_
<org.springframework.web.servlet.view.script.ScriptTemplateConfigurer: java.lang.String[] getScripts()> -> _SOURCES_
<org.springframework.context.event.DefaultEventListenerFactory: void setOrder(int)> -> _SINKS_
<org.springframework.beans.factory.support.AbstractBeanDefinition: int getResolvedAutowireMode()> -> _SOURCES_
<org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: javax.persistence.EntityManagerFactory getNativeEntityManagerFactory()> -> _SOURCES_
<org.springframework.web.servlet.view.jasperreports.JasperReportsViewResolver: void setExporterParameters(java.util.Map)> -> _SINKS_
<org.springframework.web.servlet.tags.form.AbstractMultiCheckedElementTag: int writeTagContent(org.springframework.web.servlet.tags.form.TagWriter)> -> _SINKS_
<org.springframework.jms.connection.ChainedExceptionListener: javax.jms.ExceptionListener[] getDelegates()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor: void handleReturnValue(java.lang.Object,org.springframework.core.MethodParameter,org.springframework.web.method.support.ModelAndViewContainer,org.springframework.web.context.request.NativeWebRequest)> -> _SINKS_
<org.springframework.web.socket.adapter.standard.StandardWebSocketHandlerAdapter: void onError(javax.websocket.Session,java.lang.Throwable)> -> _SINKS_
<org.springframework.util.xml.XMLEventStreamReader: javax.xml.namespace.NamespaceContext getNamespaceContext()> -> _SOURCES_
<org.springframework.jdbc.support.lob.PassThroughBlob: int setBytes(long,byte[],int,int)> -> _CWE089__SINKS_
<org.springframework.http.converter.ByteArrayHttpMessageConverter: java.lang.Long getContentLength(byte[],org.springframework.http.MediaType)> -> _SOURCES_
<org.springframework.mock.web.MockBodyContent: void println(char)> -> _SINKS_
<org.springframework.format.datetime.standard.DateTimeFormatterFactory: void setStylePattern(java.lang.String)> -> _SINKS_
<org.springframework.cglib.core.EmitUtils: void load_class_helper(org.springframework.cglib.core.CodeEmitter,org.springframework.asm.Type)> -> _SOURCES_
<org.springframework.web.multipart.support.AbstractMultipartHttpServletRequest: org.springframework.util.MultiValueMap getMultipartFiles()> -> _SOURCES_
<org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurationSupport: org.springframework.messaging.simp.user.SimpUserRegistry createLocalUserRegistry()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.ValueFormatter: java.lang.String getDisplayString(java.lang.Object,java.beans.PropertyEditor,boolean)> -> _SOURCES_
<org.springframework.jca.cci.core.CciTemplate: javax.resource.cci.ConnectionFactory getConnectionFactory()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.util.backoff.FixedBackOff: void setInterval(long)> -> _SINKS_
<org.springframework.transaction.support.DelegatingTransactionDefinition: int getTimeout()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockBaseURL: java.util.Map getParameterMap()> -> _SOURCES_
<org.springframework.jms.core.JmsTemplate: int getPriority()> -> _SOURCES_
<org.springframework.remoting.rmi.JndiRmiClientInterceptor: void setLookupStubOnStartup(boolean)> -> _SINKS_
<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: java.lang.String getInitMethod()> -> _SOURCES_
<org.springframework.core.annotation.AnnotatedElementUtils: java.util.Set getAllMergedAnnotations(java.lang.reflect.AnnotatedElement,java.lang.Class)> -> _SOURCES_
<org.springframework.cache.ehcache.EhCacheFactoryBean: void setDiskPersistent(boolean)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: void setUseSuffixPatternMatch(boolean)> -> _SINKS_
<org.springframework.jmx.support.WebLogicMBeanServerFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.jdbc.support.lob.PassThroughClob: java.io.Reader getCharacterStream(long,long)> -> _CWE089__SOURCES_
<org.springframework.web.context.support.ServletContextAttributeFactoryBean: void setServletContext(javax.servlet.ServletContext)> -> _SINKS_
<org.springframework.jmx.export.assembler.AbstractReflectiveMBeanInfoAssembler: java.lang.Integer getDefaultCurrencyTimeLimit()> -> _SOURCES_
<org.springframework.mock.web.MockServletContext: java.lang.Object getAttribute(java.lang.String)> -> _SOURCES_
<org.springframework.web.portlet.context.PortletContextPropertySource: java.lang.String getProperty(java.lang.String)> -> _SOURCES_
<org.springframework.security.access.expression.SecurityExpressionRoot: void setTrustResolver(org.springframework.security.authentication.AuthenticationTrustResolver)> -> _SINKS_
<org.springframework.beans.factory.support.ManagedMap: java.lang.Object getSource()> -> _SOURCES_
<org.springframework.core.io.support.ResourceRegion: long getCount()> -> _SOURCES_
<org.springframework.jdbc.datasource.DataSourceUtils: java.sql.Connection getConnection(javax.sql.DataSource)> -> _CWE306__CWE089__SOURCES__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.mock.web.MockHttpServletRequest: void setRemotePort(int)> -> _SINKS_
<org.springframework.web.servlet.config.FreeMarkerConfigurerBeanDefinitionParser: void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)> -> _SOURCES_
<org.springframework.beans.support.PagedListHolder: void setPageSize(int)> -> _SINKS_
<org.springframework.cache.interceptor.CacheProxyFactoryBean: void setCacheOperationSources(org.springframework.cache.interceptor.CacheOperationSource[])> -> _SINKS_
<org.springframework.jdbc.support.GeneratedKeyHolder: java.lang.Number getKey()> -> _CWE089__SOURCES_
<org.springframework.orm.hibernate5.HibernateTransactionManager: java.lang.Object getResourceFactory()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletContext: void setAttribute(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider: org.springframework.security.core.Authentication createSuccessAuthentication(java.lang.Object,org.springframework.security.core.Authentication,org.springframework.security.core.userdetails.UserDetails)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.aop.aspectj.annotation.LazySingletonAspectInstanceFactoryDecorator: java.lang.ClassLoader getAspectClassLoader()> -> _SOURCES_
<org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper: java.lang.String getStringSeparator()> -> _SOURCES_
<org.springframework.web.portlet.handler.ParameterHandlerMapping: void setParameterName(java.lang.String)> -> _SINKS_
<org.springframework.core.io.support.PathMatchingResourcePatternResolver: void setPathMatcher(org.springframework.util.PathMatcher)> -> _SINKS_
<org.springframework.cache.ehcache.EhCacheCache: java.lang.Object get(java.lang.Object,java.util.concurrent.Callable)> -> _SOURCES_
<org.springframework.core.env.AbstractEnvironment: void setDefaultProfiles(java.lang.String[])> -> _SINKS_
<org.springframework.beans.MutablePropertyValues: void setPropertyValueAt(org.springframework.beans.PropertyValue,int)> -> _SINKS_
<org.springframework.beans.DirectFieldAccessor: java.lang.Object getPropertyValue(java.lang.String)> -> _SOURCES_
<org.springframework.beans.AbstractNestablePropertyAccessor: void setPropertyValue(org.springframework.beans.PropertyValue)> -> _SINKS_
<org.springframework.jms.connection.CachingConnectionFactory: javax.jms.Session getSession(javax.jms.Connection,java.lang.Integer)> -> _SOURCES_
<org.springframework.aop.support.AbstractGenericPointcutAdvisor: void setAdvice(org.aopalliance.aop.Advice)> -> _SINKS_
<org.springframework.web.servlet.view.script.ScriptTemplateView: void setCharset(java.nio.charset.Charset)> -> _SINKS_
<org.springframework.security.config.annotation.web.configurers.RememberMeConfigurer: java.lang.String getRememberMeParameter()> -> _SOURCES_
<org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter: com.fasterxml.jackson.databind.JavaType getJavaType(java.lang.reflect.Type,java.lang.Class)> -> _SOURCES_
<org.springframework.orm.jpa.persistenceunit.MutablePersistenceUnitInfo: void setPersistenceUnitRootUrl(java.net.URL)> -> _SINKS_
<org.springframework.http.client.HttpComponentsAsyncClientHttpRequest: org.springframework.util.concurrent.ListenableFuture executeInternal(org.springframework.http.HttpHeaders,byte[])> -> _CWE078__SINKS_
<org.springframework.expression.spel.ast.OpMinus: org.springframework.expression.spel.ast.SpelNodeImpl getRightOperand()> -> _SOURCES_
<org.springframework.http.converter.json.GsonHttpMessageConverter: java.lang.Object read(java.lang.reflect.Type,java.lang.Class,org.springframework.http.HttpInputMessage)> -> _SOURCES_
<org.springframework.aop.interceptor.AsyncExecutionInterceptor: java.util.concurrent.Executor getDefaultExecutor(org.springframework.beans.factory.BeanFactory)> -> _SOURCES__SINKS_
<org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractorAdapter: boolean isNativeConnectionNecessaryForNativeStatements()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__CWE862_
<org.springframework.oxm.castor.CastorMarshaller: void setClearCollections(boolean)> -> _SINKS_
<org.springframework.http.converter.json.MappingJacksonValue: java.lang.String getJsonpFunction()> -> _SOURCES_
<org.springframework.cache.transaction.TransactionAwareCacheManagerProxy: java.util.Collection getCacheNames()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: java.lang.String getDir()> -> _CWE079__SOURCES_
<org.springframework.web.servlet.mvc.condition.PatternsRequestCondition: java.lang.String getMatchingPattern(java.lang.String,java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.tags.EscapeBodyTag: void setBodyContent(javax.servlet.jsp.tagext.BodyContent)> -> _SINKS_
<org.springframework.remoting.rmi.JndiRmiProxyFactoryBean: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.http.converter.json.GsonHttpMessageConverter: void setJsonPrefix(java.lang.String)> -> _SINKS_
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getRootInstance()> -> _SOURCES_
<org.springframework.beans.factory.config.MethodInvokingBean: org.springframework.beans.TypeConverter getDefaultTypeConverter()> -> _SOURCES_
<org.springframework.mock.web.MockMultipartHttpServletRequest: org.springframework.http.HttpHeaders getMultipartHeaders(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.web.servlet.view.json.MappingJackson2JsonView: java.util.Set getModelKeys()> -> _SOURCES_
<org.springframework.cglib.reflect.FastMember: java.lang.Class getDeclaringClass()> -> _SOURCES_
<org.springframework.web.servlet.view.AbstractView: void setExposeContextBeansAsAttributes(boolean)> -> _SINKS_
<org.springframework.web.servlet.view.jasperreports.AbstractJasperReportsView: void setSubReportUrls(java.util.Properties)> -> _SINKS_
<org.springframework.remoting.support.RemotingSupport: java.lang.ClassLoader overrideThreadContextClassLoader()> -> _SOURCES_
<org.springframework.core.type.classreading.CachingMetadataReaderFactory: org.springframework.core.type.classreading.MetadataReader getMetadataReader(org.springframework.core.io.Resource)> -> _SOURCES_
<org.springframework.remoting.rmi.JndiRmiClientInterceptor: java.lang.Object getStub()> -> _SOURCES_
<org.springframework.web.socket.handler.AbstractWebSocketHandler: void handlePongMessage(org.springframework.web.socket.WebSocketSession,org.springframework.web.socket.PongMessage)> -> _SINKS_
<org.springframework.web.servlet.support.AbstractFlashMapManager: org.springframework.web.servlet.FlashMap retrieveAndUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)> -> _SINKS_
<org.springframework.web.filter.AbstractRequestLoggingFilter: void setIncludeQueryString(boolean)> -> _SINKS_
<org.springframework.web.portlet.bind.PortletRequestUtils: float[] getFloatParameters(javax.portlet.PortletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.format.number.money.MonetaryAmountFormatter: java.lang.String print(java.lang.Object,java.util.Locale)> -> _SINKS_
<org.springframework.jdbc.support.nativejdbc.WebLogicNativeJdbcExtractor: boolean isNativeConnectionNecessaryForNativeStatements()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__CWE862_
<org.springframework.core.io.ClassPathResource: java.lang.ClassLoader getClassLoader()> -> _SOURCES_
<org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource: java.util.Collection getAllConfigAttributes()> -> _SOURCES_
<org.springframework.security.config.annotation.authentication.configurers.ldap.LdapAuthenticationProviderConfigurer: org.springframework.security.ldap.userdetails.LdapAuthoritiesPopulator getLdapAuthoritiesPopulator()> -> _SOURCES_
<org.springframework.web.portlet.context.PortletWebRequest: java.util.Map getParameterMap()> -> _SOURCES_
<org.springframework.web.util.ExpressionEvaluationUtils: java.util.Map getJspExpressionCache(javax.servlet.jsp.PageContext)> -> _SOURCES_
<org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder: org.springframework.security.config.'annotation'.authentication.builders.AuthenticationManagerBuilder authenticationProvider(org.springframework.security.authentication.AuthenticationProvider)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.messaging.simp.stomp.StompHeaderAccessor: void setAcceptVersion(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.tags.ParamTag: void setValue(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.view.InternalResourceView: javax.servlet.RequestDispatcher getRequestDispatcher(javax.servlet.http.HttpServletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.core.ReflectiveVisitorHelper: java.lang.reflect.Method getMethod(java.lang.Class,java.lang.Object)> -> _SOURCES_
<org.springframework.web.servlet.mvc.multiaction.AbstractUrlMethodNameResolver: void setAlwaysUseFullPath(boolean)> -> _SINKS_
<org.springframework.mock.web.HeaderValueHolder: java.lang.Object getValue()> -> _SOURCES_
<org.springframework.validation.beanvalidation.LocalValidatorFactoryBean: void setValidationPropertyMap(java.util.Map)> -> _SINKS_
<org.springframework.web.method.annotation.SessionAttributesHandler: java.lang.Object retrieveAttribute(org.springframework.web.context.request.WebRequest,java.lang.String)> -> _SINKS_
<org.springframework.http.client.SimpleClientHttpResponse: java.lang.String getStatusText()> -> _SOURCES__CWE601_
<org.springframework.web.servlet.i18n.CookieLocaleResolver: java.util.Locale parseLocaleValue(java.lang.String)> -> _SOURCES__SINKS_
<org.springframework.web.bind.ServletRequestUtils: java.lang.String getStringParameter(javax.servlet.ServletRequest,java.lang.String,java.lang.String)> -> _SOURCES_
<org.springframework.scheduling.timer.ScheduledTimerTask: void setPeriod(long)> -> _SINKS_
<org.springframework.web.servlet.handler.SimpleServletPostProcessor: void setServletContext(javax.servlet.ServletContext)> -> _SINKS_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.'annotation'.RequestMappingHandlerAdapter createRequestMappingHandlerAdapter()> -> _SOURCES_
<org.springframework.orm.hibernate4.SessionHolder: void setPreviousFlushMode(org.hibernate.FlushMode)> -> _SINKS_
<org.springframework.web.servlet.view.script.ScriptTemplateConfigurer: void setSharedEngine(java.lang.Boolean)> -> _SINKS_
<org.springframework.ejb.access.AbstractSlsbInvokerInterceptor: java.lang.Object getHome()> -> _SOURCES_
<org.springframework.scheduling.concurrent.DefaultManagedTaskExecutor: void setResourceRef(boolean)> -> _SINKS_
<org.springframework.oxm.jaxb.Jaxb2Marshaller: void setMappedClass(java.lang.Class)> -> _SINKS_
<org.springframework.aop.support.ControlFlowPointcut: org.springframework.aop.ClassFilter getClassFilter()> -> _SOURCES_
<org.springframework.objenesis.ObjenesisHelper: org.springframework.objenesis.instantiator.ObjectInstantiator getSerializableObjectInstantiatorOf(java.lang.Class)> -> _SOURCES_
<org.springframework.web.servlet.view.script.ScriptTemplateConfigurer: void setScripts(java.lang.String[])> -> _SINKS_
<org.springframework.remoting.httpinvoker.SimpleHttpInvokerServiceExporter: void handle(com.sun.net.httpserver.HttpExchange)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompClientSupport: long getReceiptTimeLimit()> -> _SOURCES_
<org.springframework.http.HttpHeaders: java.util.List getAccept()> -> _SOURCES_
<org.springframework.jmx.access.MBeanClientInterceptor: java.lang.Class getManagementInterface()> -> _SOURCES_
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setAttributesMap(java.util.Map)> -> _SINKS_
<org.springframework.jms.listener.adapter.MessageListenerAdapter: void setDelegate(java.lang.Object)> -> _SINKS_
<org.springframework.web.socket.server.support.AbstractHandshakeHandler: java.lang.String[] getSupportedProtocols()> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateTemplate: java.lang.Object load(java.lang.Class,java.io.Serializable,org.hibernate.LockMode)> -> _SOURCES_
<org.springframework.web.socket.handler.LoggingWebSocketHandlerDecorator: void handleTransportError(org.springframework.web.socket.WebSocketSession,java.lang.Throwable)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletConfig: void setResourceBundle(java.util.Locale,java.util.ResourceBundle)> -> _SINKS_
<org.springframework.expression.spel.standard.SpelCompiler: int getNextSuffix()> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.String[] getRegisteredScopeNames()> -> _SOURCES_
<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.Class getPropertyEditorClass()> -> _SOURCES_
<org.springframework.jdbc.support.lob.DefaultLobHandler: void setStreamAsLob(boolean)> -> _CWE089__SINKS_
<org.springframework.security.config.annotation.SecurityConfigurerAdapter: org.springframework.security.config.'annotation'.SecurityBuilder getBuilder()> -> _SOURCES_
<org.springframework.core.io.UrlResource: java.io.InputStream getInputStream()> -> _SOURCES_
<org.springframework.beans.factory.config.BeanDefinitionHolder: java.lang.String getShortDescription()> -> _SOURCES_
<org.springframework.web.servlet.support.RequestContext: org.springframework.context.MessageSource getMessageSource()> -> _SOURCES_
<org.springframework.oxm.castor.CastorMarshaller: void setMappingLocation(org.springframework.core.io.Resource)> -> _SINKS_
<org.springframework.remoting.support.RemoteInvocation: java.lang.String getMethodName()> -> _SOURCES_
<org.springframework.orm.hibernate4.LocalSessionFactoryBean: void setEntityTypeFilters(org.springframework.core.type.filter.TypeFilter[])> -> _SINKS_
<org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: java.lang.ClassLoader getBeanClassLoader()> -> _SOURCES_
<org.springframework.web.socket.handler.WebSocketHandlerDecorator: void afterConnectionEstablished(org.springframework.web.socket.WebSocketSession)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.http.converter.json.GsonFactoryBean: void setSerializeNulls(boolean)> -> _SINKS_
<org.springframework.web.socket.sockjs.client.SockJsClient: java.lang.String[] getHttpHeaderNames()> -> _SOURCES_
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapKeyReturnType(java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.mail.javamail.JavaMailSenderImpl: java.lang.String getHost()> -> _SOURCES_
<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: void setOrder(int)> -> _SINKS_
<org.springframework.aop.scope.ScopedProxyFactoryBean: void setTargetBeanName(java.lang.String)> -> _SINKS_
<org.springframework.scripting.support.StaticScriptSource: void setScript(java.lang.String)> -> _SINKS_
<org.springframework.cache.guava.GuavaCacheManager: org.springframework.cache.Cache getCache(java.lang.String)> -> _SOURCES_
<org.springframework.security.access.expression.AbstractSecurityExpressionHandler: org.springframework.security.access.PermissionEvaluator getPermissionEvaluator()> -> _SOURCES_
<org.springframework.jms.listener.AbstractJmsListeningContainer: java.lang.String getBeanName()> -> _SOURCES_
<org.springframework.web.util.UriUtils: java.lang.String encodeUserInfo(java.lang.String,java.lang.String)> -> _SANITIZERS_
<org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean: void setBeanName(java.lang.String)> -> _SINKS_
<org.springframework.core.io.support.ResourceArrayPropertyEditor: void setValue(java.lang.Object)> -> _SINKS_
<org.springframework.beans.factory.groovy.GroovyBeanDefinitionWrapper: java.lang.Object getProperty(java.lang.String)> -> _SOURCES_
<org.springframework.jmx.export.naming.KeyNamingStrategy: void setMappingLocation(org.springframework.core.io.Resource)> -> _SINKS_
<org.springframework.web.filter.CharacterEncodingFilter: void setEncoding(java.lang.String)> -> _SINKS_
<org.springframework.aop.support.annotation.AnnotationMatchingPointcut: org.springframework.aop.ClassFilter getClassFilter()> -> _SOURCES_
<org.springframework.jdbc.support.GeneratedKeyHolder: java.util.List getKeyList()> -> _CWE089__SOURCES_
<org.springframework.jms.listener.serversession.CommonsPoolServerSessionFactory: void setMinEvictableIdleTimeMillis(long)> -> _SINKS_
<org.springframework.jdbc.core.namedparam.NamedParameterBatchUpdateUtils: int[] executeBatchUpdateWithNamedParameters(org.springframework.jdbc.core.namedparam.ParsedSql,org.springframework.jdbc.core.namedparam.SqlParameterSource[],org.springframework.jdbc.core.JdbcOperations)> -> _CWE089__SINKS_
<org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurer: org.springframework.security.config.'annotation'.web.configurers.SessionManagementConfigurer sessionAuthenticationErrorUrl(java.lang.String)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.mail.javamail.MimeMessageHelper: void setSentDate(java.util.Date)> -> _SINKS_
<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder headers(org.springframework.http.HttpHeaders)> -> _SOURCES_
<org.springframework.validation.BeanPropertyBindingResult: org.springframework.beans.ConfigurablePropertyAccessor getPropertyAccessor()> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateTemplate: java.lang.Object get(java.lang.String,java.io.Serializable,org.hibernate.LockMode)> -> _SOURCES__SINKS_
<org.springframework.context.support.MessageSourceAccessor: java.lang.String getMessage(java.lang.String,java.lang.Object[],java.lang.String,java.util.Locale)> -> _SOURCES_
<org.springframework.web.client.RestTemplate: java.net.URI postForLocation(java.lang.String,java.lang.Object,java.util.Map)> -> _SINKS_
<org.springframework.jms.config.DefaultJmsListenerContainerFactory: void setRecoveryInterval(java.lang.Long)> -> _SINKS_
<org.springframework.context.annotation.ConfigurationClassPostProcessor: void setResourceLoader(org.springframework.core.io.ResourceLoader)> -> _SOURCES__SINKS_
<org.springframework.security.crypto.bcrypt.BCrypt: void encode_base64(byte[],int,java.lang.StringBuilder)> -> _SANITIZERS_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: org.springframework.web.servlet.mvc.method.RequestMappingInfo getMappingForMethod(java.lang.reflect.Method,java.lang.Class)> -> _SOURCES_
<org.springframework.jms.config.DefaultJmsListenerContainerFactory: void setTaskExecutor(java.util.concurrent.Executor)> -> _SINKS_
<org.springframework.web.socket.server.standard.ServerEndpointRegistration: java.util.Map getUserProperties()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: java.lang.String getAuthType()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag: java.lang.String getNestedPath()> -> _SOURCES_
<org.springframework.expression.spel.ast.CompoundExpression: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)> -> _SINKS_
<org.springframework.scheduling.concurrent.DefaultManagedAwareThreadFactory: void setJndiEnvironment(java.util.Properties)> -> _SINKS_
<org.springframework.http.HttpHeaders: java.util.List getAccessControlAllowMethods()> -> _SOURCES_
<org.springframework.messaging.simp.config.StompBrokerRelayRegistration: org.springframework.messaging.simp.config.StompBrokerRelayRegistration setRelayPort(int)> -> _SINKS_
<org.springframework.format.number.money.CurrencyUnitFormatter: java.lang.String print(java.lang.Object,java.util.Locale)> -> _SINKS_
<org.springframework.web.servlet.mvc.condition.RequestConditionHolder: org.springframework.web.servlet.mvc.condition.RequestCondition getCondition()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletRequest: java.lang.String getResponseContentType()> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateTemplate: java.lang.String getQueryCacheRegion()> -> _SOURCES_
<org.springframework.orm.toplink.ServerSessionFactory: oracle.toplink.sessions.Session getMasterSession()> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.WebSocketClientSockJsSession: java.lang.Object getNativeSession(java.lang.Class)> -> _SOURCES_
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapValueReturnType(java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.security.authentication.AuthenticationTrustResolverImpl: void setRememberMeClass(java.lang.Class)> -> _SINKS_
<org.springframework.aop.framework.AdvisedSupport: void setAdvisorChainFactory(org.springframework.aop.framework.AdvisorChainFactory)> -> _SINKS_
<org.springframework.jca.cci.connection.ConnectionHolder: javax.resource.cci.Connection getConnection()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.beans.factory.support.BeanDefinitionDefaults: void setInitMethodName(java.lang.String)> -> _SINKS_
<org.springframework.http.client.HttpComponentsClientHttpRequestFactory: void setLegacyConnectionTimeout(org.apache.http.client.HttpClient,int)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.portlet.FrameworkPortlet: org.springframework.context.ApplicationContext createPortletApplicationContext(org.springframework.context.ApplicationContext)> -> _SOURCES_
<org.springframework.jndi.support.SimpleJndiBeanFactory: java.lang.Class getType(java.lang.String)> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: javax.servlet.AsyncContext getAsyncContext()> -> _SOURCES_
<org.springframework.test.context.web.ServletTestExecutionListener: boolean alreadyPopulatedRequestContextHolder(org.springframework.test.context.TestContext)> -> _SOURCES__CWE601_
<org.springframework.web.portlet.context.AbstractRefreshablePortletApplicationContext: java.lang.String getNamespace()> -> _SOURCES_
<org.springframework.mail.javamail.JavaMailSenderImpl: void setProtocol(java.lang.String)> -> _SINKS_
<org.springframework.cache.jcache.interceptor.DefaultJCacheOperationSource: void setCacheManager(org.springframework.cache.CacheManager)> -> _SINKS_
<org.springframework.remoting.caucho.HessianClientInterceptor: java.lang.Object createHessianProxy(com.caucho.hessian.client.HessianProxyFactory)> -> _SOURCES_
<org.springframework.web.servlet.mvc.UrlFilenameViewController: java.lang.String getViewNameForRequest(javax.servlet.http.HttpServletRequest)> -> _CWE079__SOURCES_
<org.springframework.context.weaving.AspectJWeavingEnabler: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.test.util.XmlExpectationsHelper: org.w3c.dom.Document parseXmlString(java.lang.String)> -> _SOURCES_
<org.springframework.orm.hibernate4.ConfigurableJtaPlatform: int getCurrentStatus()> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler: void setRelayHost(java.lang.String)> -> _SINKS_
<org.springframework.orm.jpa.EntityManagerFactoryAccessor: void setJpaProperties(java.util.Properties)> -> _SINKS_
<org.springframework.scripting.support.StaticScriptSource: java.lang.String getScriptAsString()> -> _SOURCES_
<org.springframework.scheduling.quartz.SchedulerAccessor: void setJobListeners(org.quartz.JobListener[])> -> _SINKS_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementBodyTag: void setBodyContent(javax.servlet.jsp.tagext.BodyContent)> -> _CWE079__SINKS_
<org.springframework.scheduling.support.MethodInvokingRunnable: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.web.util.HierarchicalUriComponents: java.util.List getPathSegments()> -> _SOURCES_
<org.springframework.web.socket.sockjs.support.AbstractSockJsService: java.util.Collection getAllowedOrigins()> -> _SOURCES_
<org.springframework.web.context.support.ServletContextFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.aop.config.ConfigBeanDefinitionParser: org.springframework.beans.factory.support.AbstractBeanDefinition parseAdvice(java.lang.String,int,org.w3c.dom.Element,org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,java.util.List,java.util.List)> -> _SOURCES_
<org.springframework.beans.factory.parsing.Location: java.lang.Object getSource()> -> _SOURCES_
<org.springframework.cglib.reflect.FastClass: org.springframework.cglib.reflect.FastMethod getMethod(java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory: void setDataSourceFactory(org.springframework.jdbc.datasource.embedded.DataSourceFactory)> -> _CWE089__SINKS_
<org.springframework.jndi.support.SimpleJndiBeanFactory: java.lang.String[] getAliases(java.lang.String)> -> _SOURCES_
<org.springframework.test.context.web.socket.MockServerContainer: java.util.Set getInstalledExtensions()> -> _SOURCES_
<org.springframework.jmx.export.metadata.ManagedAttribute: java.lang.Object getDefaultValue()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockMultipartActionRequest: java.lang.String getMultipartContentType(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.expression.spel.standard.SpelExpression: java.lang.Object getValue(org.springframework.expression.EvaluationContext,java.lang.Class)> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateTemplate: int bulkUpdate(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.aop.aspectj.DeclareParentsAdvisor: org.springframework.aop.ClassFilter getClassFilter()> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompHeaders: void setReceipt(java.lang.String)> -> _SINKS_
<org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider: java.sql.Connection getConnection()> -> _CWE306__SOURCES__AUTHENTICATIONS_TO_LOW__CWE862_
<org.springframework.jms.connection.CachedMessageProducer: void send(javax.jms.Destination,javax.jms.Message)> -> _SINKS_
<org.springframework.cache.config.CacheAdviceParser: org.springframework.beans.factory.support.RootBeanDefinition parseDefinitionSource(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.oxm.xstream.XStreamMarshaller: void setMarshallingStrategy(com.thoughtworks.xstream.MarshallingStrategy)> -> _SINKS_
<org.springframework.remoting.jaxrpc.JaxRpcPortClientInterceptor: void setServiceInterface(java.lang.Class)> -> _SINKS_
<org.springframework.web.servlet.tags.form.FormTag: java.lang.String getTarget()> -> _SOURCES_
<org.springframework.transaction.interceptor.DelegatingTransactionAttribute: java.lang.String getName()> -> _SOURCES_
<org.springframework.messaging.simp.SimpMessageHeaderAccessor: java.security.Principal getUser(java.util.Map)> -> _SOURCES_
<org.springframework.jdbc.support.lob.DefaultLobHandler: org.springframework.jdbc.support.lob.LobCreator getLobCreator()> -> _CWE089__SOURCES_
<org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer: org.springframework.web.servlet.handler.AbstractHandlerMapping getHandlerMapping()> -> _SOURCES_
<org.springframework.util.ClassUtils: java.lang.String getShortNameAsProperty(java.lang.Class)> -> _SOURCES_
<org.springframework.web.socket.adapter.AbstractWebSocketSession: java.util.Map getAttributes()> -> _SOURCES_
<org.springframework.util.xml.StaxStreamHandler: void commentInternal(java.lang.String)> -> _SINKS_
<org.springframework.validation.DataBinder: org.springframework.validation.BindingErrorProcessor getBindingErrorProcessor()> -> _SOURCES_
<org.springframework.web.util.WebUtils: java.lang.Boolean getDefaultHtmlEscape(javax.servlet.ServletContext)> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanDefinition: org.springframework.core.io.Resource getResource()> -> _SOURCES_
<org.springframework.web.context.support.StaticWebApplicationContext: org.springframework.core.io.support.ResourcePatternResolver getResourcePatternResolver()> -> _SOURCES_
<org.springframework.core.io.PathResource: java.lang.String getFilename()> -> _SOURCES_
<org.springframework.web.socket.handler.WebSocketHandlerDecorator: org.springframework.web.socket.WebSocketHandler getLastHandler()> -> _SOURCES_
<org.springframework.jms.listener.AbstractMessageListenerContainer: void setDurableSubscriptionName(java.lang.String)> -> _SINKS_
<org.springframework.core.convert.support.StringToCollectionConverter: java.util.Set getConvertibleTypes()> -> _SOURCES_
<org.springframework.expression.spel.ast.Literal: org.springframework.expression.spel.ast.Literal getRealLiteral(java.lang.String,int,boolean)> -> _SOURCES_
<org.springframework.messaging.simp.config.StompBrokerRelayRegistration: org.springframework.messaging.simp.config.StompBrokerRelayRegistration setUserRegistryBroadcast(java.lang.String)> -> _SINKS_
<org.springframework.web.portlet.handler.AbstractHandlerExceptionResolver: void setMappedHandlerClasses(java.lang.Class[])> -> _SINKS_
<org.springframework.beans.factory.config.PropertyPathFactoryBean: void setResultType(java.lang.Class)> -> _SINKS_
<org.springframework.jmx.support.ConnectorServerFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.web.socket.server.standard.ServletServerContainerFactoryBean: void setAsyncSendTimeout(long)> -> _SINKS_
<org.springframework.jdbc.core.simple.AbstractJdbcCall: java.util.List getCallParameters()> -> _CWE089__SOURCES_
<org.springframework.validation.AbstractPropertyBindingResult: java.lang.Class getFieldType(java.lang.String)> -> _SOURCES_
<org.springframework.web.context.support.GenericWebApplicationContext: javax.servlet.ServletContext getServletContext()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockMimeResponse: void setCharacterEncoding(java.lang.String)> -> _SINKS__CWE601_
<org.springframework.orm.hibernate3.TransactionAwareDataSourceConnectionProvider: javax.sql.DataSource getDataSourceToUse(javax.sql.DataSource)> -> _CWE089__SOURCES_
<org.springframework.messaging.support.AbstractSubscribableChannel: java.util.Set getSubscribers()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.RequestMappingInfo: org.springframework.web.servlet.mvc.method.RequestMappingInfo$Builder paths(java.lang.String[])> -> _SOURCES_
<org.springframework.security.core.AuthenticationException: void setAuthentication(org.springframework.security.core.Authentication)> -> _CWE306__SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.socket.config.annotation.SockJsServiceRegistration: org.springframework.web.socket.sockjs.SockJsService getSockJsService()> -> _SOURCES_
<org.springframework.aop.aspectj.AbstractAspectJAdvice: java.lang.ClassLoader getAspectClassLoader()> -> _SOURCES_
<org.springframework.util.CachingMapDecorator: java.lang.Object get(java.lang.Object)> -> _SOURCES_
<org.springframework.scheduling.annotation.AsyncResult: java.lang.Object get(long,java.util.concurrent.TimeUnit)> -> _SOURCES_
<org.springframework.web.context.support.StaticWebApplicationContext: org.springframework.core.io.Resource getResourceByPath(java.lang.String)> -> _SOURCES_
<org.springframework.security.core.userdetails.memory.UserAttribute: void setEnabled(boolean)> -> _SINKS__CWE862_
<org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource: java.util.Collection getAttributes(java.lang.reflect.Method,java.lang.Class)> -> _SOURCES_
<org.springframework.orm.jpa.EntityManagerHolder: void setTransactionActive(boolean)> -> _SINKS_
<org.springframework.web.socket.adapter.standard.ConvertingEncoderDecoderSupport: org.springframework.core.convert.ConversionService getConversionService()> -> _SOURCES_
<org.springframework.mock.http.client.MockClientHttpRequest: org.springframework.http.client.ClientHttpResponse execute()> -> _CWE078__SINKS_
<org.springframework.jmx.export.naming.KeyNamingStrategy: void setMappings(java.util.Properties)> -> _SINKS_
<org.springframework.remoting.httpinvoker.HttpComponentsHttpInvokerRequestExecutor: void setLegacyConnectionTimeout(org.apache.http.client.HttpClient,int)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.config.ScriptTemplateConfigurerBeanDefinitionParser: void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)> -> _SOURCES_
<org.springframework.mock.web.portlet.ServletWrappingPortletContext: java.lang.String getPortletContextName()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletRequest: void setAttribute(java.lang.String,java.lang.Object)> -> _CWE079__SINKS_
<org.springframework.expression.spel.ast.OpPlus: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.beans.factory.support.BeanDefinitionDefaults: java.lang.String getDestroyMethodName()> -> _SOURCES_
<org.springframework.web.servlet.support.RequestContext: java.lang.String getThemeMessage(java.lang.String,java.lang.Object[],java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer: java.lang.ClassLoader createTemplateClassLoader()> -> _SOURCES_
<org.springframework.context.support.AbstractMessageSource: org.springframework.context.MessageSource getParentMessageSource()> -> _SOURCES_
<org.springframework.web.accept.ContentNegotiationManagerFactoryBean: void setParameterName(java.lang.String)> -> _SINKS_
<org.springframework.orm.jdo.JdoTransactionManager: java.lang.Object getResourceFactory()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletResponse: java.util.List getHeaderValues(java.lang.String)> -> _SOURCES__CWE601_
<org.springframework.web.servlet.mvc.ParameterizableViewController: java.lang.String getViewName()> -> _SOURCES_
<org.springframework.messaging.simp.annotation.support.SendToMethodReturnValueHandler: void setDefaultUserDestinationPrefix(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.mvc.condition.CompositeRequestCondition: java.util.List getConditions()> -> _SOURCES_
<org.springframework.jms.remoting.JmsInvokerClientInterceptor: void setMessageConverter(org.springframework.jms.support.converter.MessageConverter)> -> _SINKS_
<org.springframework.jdbc.core.metadata.TableMetaDataContext: void setCatalogName(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.mock.web.MockSessionCookieConfig: java.lang.String getName()> -> _SOURCES_
<org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl: void setEnableGroups(boolean)> -> _CWE089__SINKS__CWE862_
<org.springframework.jndi.JndiTemplate: java.lang.Object execute(org.springframework.jndi.JndiCallback)> -> _SINKS_
<org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder: org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder setViewResolvers(org.springframework.web.servlet.ViewResolver[])> -> _SINKS_
<org.springframework.web.portlet.context.StaticPortletApplicationContext: org.springframework.core.env.ConfigurableEnvironment createEnvironment()> -> _SOURCES_
<org.springframework.web.portlet.util.PortletUtils: java.lang.Object getSessionAttribute(javax.portlet.PortletRequest,java.lang.String,int)> -> _SOURCES_
<org.springframework.jms.connection.JmsResourceHolder: javax.jms.Connection getConnection()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.http.converter.json.GsonFactoryBean: com.google.gson.Gson getObject()> -> _SOURCES_
<org.springframework.web.socket.WebSocketHttpHeaders: java.lang.String getSecWebSocketKey()> -> _SOURCES_
<org.springframework.security.access.expression.method.ExpressionBasedPreInvocationAdvice: void setExpressionHandler(org.springframework.security.access.expression.method.MethodSecurityExpressionHandler)> -> _SINKS_
<org.springframework.core.annotation.AnnotatedElementUtils: java.lang.'annotation'.Annotation getMergedAnnotation(java.lang.reflect.AnnotatedElement,java.lang.Class)> -> _SOURCES_
<org.springframework.beans.factory.support.DefaultListableBeanFactory: void setAllowBeanDefinitionOverriding(boolean)> -> _SINKS_
<org.springframework.web.servlet.tags.form.InputTag: void setMaxlength(java.lang.String)> -> _SINKS_
<org.springframework.aop.aspectj.annotation.AspectJProxyFactory: java.lang.Object getProxy(java.lang.ClassLoader)> -> _SOURCES_
<org.springframework.jmx.support.WebSphereMBeanServerFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy: boolean shouldObtainFixedConnection(javax.sql.DataSource)> -> _CWE306__CWE089__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.cache.annotation.AbstractCachingConfiguration: void setImportMetadata(org.springframework.core.type.AnnotationMetadata)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompHeaders: java.lang.String getAck()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletResponse: java.lang.String getCharacterEncoding()> -> _SOURCES__CWE601_
<org.springframework.web.multipart.support.DefaultMultipartHttpServletRequest: java.util.Map getMultipartParameters()> -> _SOURCES_
<org.springframework.jdbc.support.SQLErrorCodes: void setCannotSerializeTransactionCodes(java.lang.String[])> -> _CWE089__SINKS_
<org.springframework.web.socket.sockjs.transport.handler.WebSocketTransportHandler: org.springframework.web.socket.sockjs.transport.TransportType getTransportType()> -> _SOURCES_
<org.springframework.orm.ibatis.support.BlobByteArrayTypeHandler: void setParameterInternal(java.sql.PreparedStatement,int,java.lang.Object,java.lang.String,org.springframework.jdbc.support.lob.LobCreator)> -> _SINKS_
<org.springframework.web.bind.ServletRequestUtils: float getFloatParameter(javax.servlet.ServletRequest,java.lang.String,float)> -> _SOURCES_
<org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter: java.util.Map getJpaPropertyMap()> -> _SOURCES_
<org.springframework.web.servlet.FrameworkServlet: void setContextAttribute(java.lang.String)> -> _SINKS_
<org.springframework.cglib.proxy.Enhancer: java.lang.String getCallbackField(int)> -> _SOURCES_
<org.springframework.jms.connection.TransactionAwareConnectionFactoryProxy: javax.jms.TopicConnection createTopicConnection()> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.orm.jpa.vendor.OpenJpaVendorAdapter: javax.persistence.spi.PersistenceProvider getPersistenceProvider()> -> _SOURCES_
<org.springframework.orm.hibernate3.LocalSessionFactoryBean: void setCollectionCacheStrategies(java.util.Properties)> -> _SINKS_
<org.springframework.expression.ExpressionException: java.lang.String getExpressionString()> -> _SOURCES_
<org.springframework.jms.config.AbstractJmsListenerEndpoint: java.lang.String getDestination()> -> _SOURCES_
<org.springframework.core.annotation.AnnotationAttributes: java.lang.String getAliasedString(java.lang.String,java.lang.Class,java.lang.Object)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletSession: long getCreationTime()> -> _SOURCES_
<org.springframework.orm.hibernate5.support.HibernateDaoSupport: org.springframework.orm.hibernate5.HibernateTemplate getHibernateTemplate()> -> _SOURCES_
<org.springframework.test.context.ContextConfigurationAttributes: java.lang.Class[] getClasses()> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.RedirectViewControllerRegistration: java.lang.String getUrlPath()> -> _SOURCES_
<org.springframework.orm.toplink.LocalSessionFactory: void setLoginProperties(java.util.Properties)> -> _CWE306__SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.view.jasperreports.JasperReportsHtmlView: net.sf.jasperreports.engine.JRExporter createExporter()> -> _SOURCES_
<org.springframework.web.socket.config.MessageBrokerBeanDefinitionParser: org.springframework.beans.factory.config.RuntimeBeanReference getMessageChannel(java.lang.String,org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)> -> _SOURCES__SINKS_
<org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver: org.springframework.web.servlet.ModelAndView handleMissingPathVariable(org.springframework.web.bind.MissingPathVariableException,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)> -> _SINKS_
<org.springframework.core.io.InputStreamResource: java.io.InputStream getInputStream()> -> _SOURCES_
<org.springframework.web.jsf.DelegatingNavigationHandlerProxy: void handleNavigation(javax.faces.context.FacesContext,java.lang.String,java.lang.String)> -> _SINKS_
<org.springframework.jdbc.object.RdbmsOperation: void setGeneratedKeysColumnNames(java.lang.String[])> -> _CWE089__SINKS_
<org.springframework.jms.connection.JmsResourceHolder: javax.jms.Session getSession(java.lang.Class)> -> _SOURCES_
<org.springframework.orm.jpa.persistenceunit.PersistenceUnitReader: org.w3c.dom.Document validateResource(org.xml.sax.ErrorHandler,java.io.InputStream)> -> _SINKS_
<org.springframework.util.xml.AbstractXMLReader: org.xml.sax.ErrorHandler getErrorHandler()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.ExceptionHandlingConfigurer: org.springframework.security.web.AuthenticationEntryPoint getAuthenticationEntryPoint(org.springframework.security.config.'annotation'.web.HttpSecurityBuilder)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: java.lang.String getRemoteUser()> -> _SOURCES_
<org.springframework.web.servlet.handler.HandlerMappingIntrospector: org.springframework.web.cors.CorsConfiguration getCorsConfiguration(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.mock.web.MockServletContext: java.lang.String getMimeType(java.lang.String)> -> _SOURCES_
<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: java.lang.String getAutowireCandidates()> -> _SOURCES_
<org.springframework.scripting.bsh.BshScriptFactory: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler: void setEmbeddedValueResolver(org.springframework.util.StringValueResolver)> -> _SINKS_
<org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver: java.lang.ClassLoader getInstrumentableClassLoader()> -> _SOURCES_
<org.springframework.messaging.simp.SimpMessageHeaderAccessor: java.lang.String getSubscriptionId()> -> _SOURCES_
<org.springframework.aop.support.StaticMethodMatcherPointcutAdvisor: int getOrder()> -> _SOURCES_
<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.config.BeanDefinition parseCustomElement(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition)> -> _SOURCES__SINKS_
<org.springframework.orm.hibernate5.support.OpenSessionInViewInterceptor: org.hibernate.SessionFactory getSessionFactory()> -> _SOURCES_
<org.springframework.security.authentication.dao.DaoAuthenticationProvider: org.springframework.security.authentication.dao.SaltSource getSaltSource()> -> _SOURCES_
<org.springframework.web.servlet.view.freemarker.FreeMarkerView: freemarker.template.Configuration getConfiguration()> -> _SOURCES_
<org.springframework.jms.connection.CachedMessageProducer: void publish(javax.jms.Message,int,int,long)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompHeaderAccessor: long[] getHeartbeat()> -> _SOURCES_
<org.springframework.web.filter.AbstractRequestLoggingFilter: void setBeforeMessageSuffix(java.lang.String)> -> _SINKS_
<org.springframework.orm.hibernate4.HibernateTemplate: void setFetchSize(int)> -> _SINKS_
<org.springframework.web.servlet.ModelAndView: org.springframework.ui.ModelMap getModelMap()> -> _SOURCES_
<org.springframework.core.io.VfsResource: java.net.URI getURI()> -> _SOURCES_
<org.springframework.core.io.VfsResource: java.net.URL getURL()> -> _SOURCES_
<org.springframework.security.core.token.SecureRandomFactoryBean: void setSeed(org.springframework.core.io.Resource)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler: void setVirtualHost(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.config.annotation.ViewResolverRegistry: void enableContentNegotiation(boolean,org.springframework.web.servlet.View[])> -> _SINKS_
<org.springframework.validation.BindException: java.lang.String getMessage()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockRenderRequest: java.lang.String getETag()> -> _CWE079__SOURCES_
<org.springframework.remoting.httpinvoker.HttpComponentsHttpInvokerRequestExecutor: void setConnectionRequestTimeout(int)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.ejb.access.LocalStatelessSessionProxyFactoryBean: java.lang.Class getBusinessInterface()> -> _SOURCES_
<org.springframework.web.bind.WebDataBinder: java.lang.String getFieldMarkerPrefix()> -> _SOURCES_
<org.springframework.scheduling.backportconcurrent.ScheduledExecutorFactoryBean: void setScheduledExecutorTasks(org.springframework.scheduling.backportconcurrent.ScheduledExecutorTask[])> -> _SINKS_
<org.springframework.cache.jcache.interceptor.AnnotationJCacheOperationSource: org.springframework.cache.jcache.interceptor.CacheResultOperation createCacheResultOperation(java.lang.reflect.Method,javax.cache.'annotation'.CacheDefaults,javax.cache.'annotation'.CacheResult)> -> _SOURCES_
<org.springframework.orm.hibernate4.HibernateTransactionManager: void setSessionFactory(org.hibernate.SessionFactory)> -> _SINKS_
<org.springframework.web.servlet.handler.AbstractHandlerMapping: void setPathMatcher(org.springframework.util.PathMatcher)> -> _SINKS_
<org.springframework.web.servlet.resource.ResourceTransformerSupport: void setResourceUrlProvider(org.springframework.web.servlet.resource.ResourceUrlProvider)> -> _SINKS_
<org.springframework.format.datetime.DateFormatterRegistrar: void setFormatter(org.springframework.format.datetime.DateFormatter)> -> _SINKS_
<org.springframework.jdbc.datasource.init.ResourceDatabasePopulator: void execute(javax.sql.DataSource)> -> _CWE089__SINKS_
<org.springframework.context.support.GenericApplicationContext: void setParent(org.springframework.context.ApplicationContext)> -> _SINKS_
<org.springframework.web.servlet.tags.form.OptionWriter: void writeOptions(org.springframework.web.servlet.tags.form.TagWriter)> -> _SINKS_
<org.springframework.mock.web.MockPageContext: javax.servlet.http.HttpSession getSession()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractMultiCheckedElementTag: java.lang.String getDelimiter()> -> _SOURCES_
<org.springframework.context.annotation.ConfigurationClassPostProcessor: void setMetadataReaderFactory(org.springframework.core.type.classreading.MetadataReaderFactory)> -> _SINKS_
<org.springframework.remoting.support.RemoteExporter: java.lang.String getExporterName()> -> _SOURCES_
<org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter: void setPathMatcher(org.springframework.util.PathMatcher)> -> _SINKS_
<org.springframework.web.socket.sockjs.transport.handler.AbstractHttpSendingTransportHandler: void handleRequestInternal(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession)> -> _SINKS_
<org.springframework.web.util.UriUtils: java.lang.String encodeAuthority(java.lang.String,java.lang.String)> -> _SANITIZERS_
<org.springframework.jdbc.datasource.embedded.HsqlEmbeddedDatabaseConfigurer: org.springframework.jdbc.datasource.embedded.HsqlEmbeddedDatabaseConfigurer getInstance()> -> _CWE089__SOURCES_
<org.springframework.mock.web.HeaderValueHolder: org.springframework.mock.web.HeaderValueHolder getByName(java.util.Map,java.lang.String)> -> _SOURCES_
<org.springframework.web.portlet.handler.PortletModeHandlerMapping: void setMappings(java.util.Properties)> -> _SINKS_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: java.lang.String getCssErrorClass()> -> _CWE079__SOURCES_
<org.springframework.http.client.support.AsyncHttpAccessor: void setAsyncRequestFactory(org.springframework.http.client.AsyncClientHttpRequestFactory)> -> _SINKS_
<org.springframework.context.support.ResourceBundleMessageSource: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.remoting.httpinvoker.AbstractHttpInvokerRequestExecutor: void doWriteRemoteInvocation(org.springframework.remoting.support.RemoteInvocation,java.io.ObjectOutputStream)> -> _SINKS_
<org.springframework.web.context.request.ServletWebRequest: java.lang.String getContextPath()> -> _CWE079__SOURCES_
<org.springframework.security.config.annotation.authentication.configurers.userdetails.AbstractDaoAuthenticationConfigurer: void configure(org.springframework.security.config.'annotation'.authentication.ProviderManagerBuilder)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.accept.AbstractMappingContentNegotiationStrategy: java.util.List resolveMediaTypeKey(org.springframework.web.context.request.NativeWebRequest,java.lang.String)> -> _SINKS_
<org.springframework.cache.jcache.interceptor.DefaultJCacheOperationSource: void setCacheResolver(org.springframework.cache.interceptor.CacheResolver)> -> _SINKS_
<org.springframework.util.comparator.InstanceComparator: int getOrder(java.lang.Object)> -> _SOURCES_
<org.springframework.expression.common.TemplateParserContext: java.lang.String getExpressionPrefix()> -> _SOURCES_
<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: boolean alreadyBound(java.lang.String)> -> _SOURCES_
<org.springframework.test.context.support.AbstractDelegatingSmartContextLoader: org.springframework.context.ApplicationContext loadContext(java.lang.String[])> -> _SOURCES_
<org.springframework.web.servlet.view.xslt.XsltView: void setTransformerFactoryClass(java.lang.Class)> -> _SINKS_
<org.springframework.context.support.PropertySourcesPlaceholderConfigurer: org.springframework.core.env.PropertySources getAppliedPropertySources()> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.ViewResolverRegistry: void enableContentNegotiation(org.springframework.web.servlet.View[])> -> _SINKS_
<org.springframework.jdbc.core.RowCountCallbackHandler: int getColumnCount()> -> _CWE089__SOURCES_
<org.springframework.security.authentication.encoding.LdapShaPasswordEncoder: void setForceLowerCasePrefix(boolean)> -> _SINKS_
<org.springframework.transaction.support.AbstractPlatformTransactionManager: int getDefaultTimeout()> -> _SOURCES_
<org.springframework.context.annotation.AnnotatedBeanDefinitionReader: org.springframework.core.env.Environment getOrCreateEnvironment(org.springframework.beans.factory.support.BeanDefinitionRegistry)> -> _SOURCES_
<org.springframework.web.portlet.context.StaticPortletApplicationContext: void setPortletConfig(javax.portlet.PortletConfig)> -> _SINKS_
<org.springframework.web.filter.DelegatingFilterProxy: void setTargetFilterLifecycle(boolean)> -> _SINKS_
<org.springframework.test.context.junit4.SpringJUnit4ClassRunner: void run(org.junit.runner.notification.RunNotifier)> -> _SINKS_
<org.springframework.test.context.MergedContextConfiguration: java.lang.Class[] getClasses()> -> _SOURCES_
<org.springframework.web.bind.ServletRequestUtils: double getRequiredDoubleParameter(javax.servlet.ServletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.scheduling.quartz.CronTriggerFactoryBean: void setBeanName(java.lang.String)> -> _SINKS_
<org.springframework.beans.factory.xml.XmlBeanDefinitionReader: void setValidating(boolean)> -> _SINKS_
<org.springframework.util.xml.AbstractXMLReader: boolean getFeature(java.lang.String)> -> _SOURCES_
<org.springframework.remoting.httpinvoker.SimpleHttpInvokerServiceExporter: org.springframework.remoting.support.RemoteInvocation readRemoteInvocation(com.sun.net.httpserver.HttpExchange)> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractMultiCheckedElementTag: void setItemLabel(java.lang.String)> -> _SINKS_
<org.springframework.cache.ehcache.EhCacheFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.context.annotation.CommonAnnotationBeanPostProcessor: void setAlwaysUseJndiLookup(boolean)> -> _SINKS_
<org.springframework.web.util.ContentCachingResponseWrapper: java.io.InputStream getContentInputStream()> -> _SOURCES__CWE601_
<org.springframework.web.portlet.handler.PortletModeParameterHandlerMapping: void setPortletModeParameterMap(java.util.Map)> -> _SINKS_
<org.springframework.jdbc.support.lob.OracleLobHandler: void setCache(boolean)> -> _CWE089__SINKS_
<org.springframework.web.socket.handler.WebSocketSessionDecorator: java.net.URI getUri()> -> _SOURCES_
<org.springframework.core.enums.ShortCodedLabeledEnum: java.lang.Comparable getCode()> -> _SOURCES_
<org.springframework.jndi.JndiTemplate: javax.naming.Context getContext()> -> _SOURCES_
<org.springframework.beans.factory.access.SingletonBeanFactoryLocator: org.springframework.beans.factory.access.BeanFactoryLocator getInstance(java.lang.String)> -> _SOURCES_
<org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.SockJsClient: org.springframework.http.HttpHeaders getHttpRequestHeaders(org.springframework.http.HttpHeaders)> -> _SOURCES_
<org.springframework.web.servlet.view.script.ScriptTemplateConfigurer: void setContentType(java.lang.String)> -> _SINKS_
<org.springframework.core.io.support.PathMatchingResourcePatternResolver: java.util.jar.JarFile getJarFile(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.tags.BindTag: org.springframework.validation.Errors getErrors()> -> _SOURCES_
<org.springframework.jms.listener.SimpleMessageListenerContainer: javax.jms.MessageConsumer createListenerConsumer(javax.jms.Session)> -> _SOURCES_
<org.springframework.web.util.ContentCachingResponseWrapper: void sendError(int,java.lang.String)> -> _SINKS__CWE601_
<org.springframework.web.portlet.DispatcherPortlet: void setForwardActionException(boolean)> -> _SINKS_
<org.springframework.orm.hibernate3.support.BlobSerializableType: java.lang.Object deepCopy(java.lang.Object)> -> _SINKS_
<org.springframework.security.access.method.AbstractFallbackMethodSecurityMetadataSource: java.util.Collection getAttributes(java.lang.reflect.Method,java.lang.Class)> -> _SOURCES_
<org.springframework.beans.factory.xml.XmlBeanDefinitionReader: org.xml.sax.EntityResolver getEntityResolver()> -> _SOURCES_
<org.springframework.cglib.core.Signature: org.springframework.asm.Type[] getArgumentTypes()> -> _SOURCES_
<org.springframework.aop.support.AopUtils: java.lang.reflect.Method getMostSpecificMethod(java.lang.reflect.Method,java.lang.Class)> -> _SOURCES_
<org.springframework.util.xml.XMLEventStreamWriter: void setNamespaceContext(javax.xml.namespace.NamespaceContext)> -> _SINKS_
<org.springframework.jca.context.SpringContextResourceAdapter: void loadBeanDefinitions(org.springframework.beans.factory.support.BeanDefinitionRegistry,java.lang.String[])> -> _SOURCES_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: java.lang.Object execute(java.lang.String,org.springframework.jdbc.core.namedparam.SqlParameterSource,org.springframework.jdbc.core.PreparedStatementCallback)> -> _CWE078__CWE089__SINKS_
<org.springframework.cglib.proxy.MethodInterceptorGenerator: java.lang.String getMethodField(org.springframework.cglib.core.Signature)> -> _SOURCES_
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setAttributes(java.util.Properties)> -> _SINKS_
<org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean: void setAnnotatedPackages(java.lang.String[])> -> _SINKS_
<org.springframework.web.servlet.config.annotation.InterceptorRegistration: java.lang.Object getInterceptor()> -> _SOURCES_
<org.springframework.web.servlet.view.groovy.GroovyMarkupView: groovy.text.Template getTemplate(java.lang.String)> -> _SOURCES_
<org.springframework.cache.jcache.interceptor.AnnotationJCacheOperationSource: org.springframework.cache.jcache.interceptor.CacheRemoveAllOperation createCacheRemoveAllOperation(java.lang.reflect.Method,javax.cache.'annotation'.CacheDefaults,javax.cache.'annotation'.CacheRemoveAll)> -> _SOURCES_
<org.springframework.web.servlet.handler.AbstractHandlerMethodMapping: java.util.Map getHandlerMethods()> -> _SOURCES_
<org.springframework.transaction.interceptor.RuleBasedTransactionAttribute: java.util.List getRollbackRules()> -> _SOURCES_
<org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader: void loadBeanDefinitionsFromRegistrars(java.util.Map)> -> _SOURCES_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: long getLong(int)> -> _CWE089__SOURCES_
<org.springframework.web.method.support.ModelAndViewContainer: void setBindingDisabled(java.lang.String)> -> _SINKS_
<org.springframework.beans.factory.InjectionPoint: org.springframework.core.MethodParameter getMethodParameter()> -> _SOURCES_
<org.springframework.web.servlet.view.script.ScriptTemplateConfigurer: void setCharset(java.nio.charset.Charset)> -> _SINKS_
<org.springframework.aop.framework.AdvisedSupport: java.lang.Class[] getProxiedInterfaces()> -> _SOURCES_
<org.springframework.validation.beanvalidation.CustomValidatorBean: void setTraversableResolver(javax.validation.TraversableResolver)> -> _SINKS_
<org.springframework.beans.factory.support.PropertiesBeanDefinitionReader: int loadBeanDefinitions(org.springframework.core.io.Resource,java.lang.String)> -> _SOURCES_
<org.springframework.http.converter.feed.AbstractWireFeedHttpMessageConverter: com.rometools.rome.feed.WireFeed readInternal(java.lang.Class,org.springframework.http.HttpInputMessage)> -> _SOURCES_
<org.springframework.util.xml.SimpleNamespaceContext: void setBindings(java.util.Map)> -> _SINKS_
<org.springframework.http.HttpHeaders: void setIfNoneMatch(java.lang.String)> -> _SINKS_
<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: java.lang.Class getTargetClass()> -> _SOURCES_
<org.springframework.test.util.ReflectionTestUtils: java.lang.Object getField(java.lang.Class,java.lang.String)> -> _SOURCES_
<org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler: void setReturnValueHandlers(java.util.List)> -> _SINKS_
<org.springframework.http.MediaType: org.springframework.http.MediaType parseMediaType(java.lang.String)> -> _SINKS_
<org.springframework.orm.hibernate3.LocalSessionFactoryBean: void setConfigurationClass(java.lang.Class)> -> _SINKS_
<org.springframework.web.servlet.tags.form.AbstractMultiCheckedElementTag: void writeElementTag(org.springframework.web.servlet.tags.form.TagWriter,java.lang.Object,java.lang.Object,java.lang.Object,int)> -> _SINKS_
<org.springframework.scheduling.concurrent.DefaultManagedTaskScheduler: void setResourceRef(boolean)> -> _SINKS_
<org.springframework.web.socket.sockjs.frame.SockJsFrame: org.springframework.web.socket.sockjs.frame.SockJsFrame messageFrame(org.springframework.web.socket.sockjs.frame.SockJsMessageCodec,java.lang.String[])> -> _SINKS_
<org.springframework.beans.factory.support.PropertiesBeanDefinitionReader: org.springframework.util.PropertiesPersister getPropertiesPersister()> -> _SOURCES_
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(org.springframework.beans.BeanWrapperImpl$PropertyTokenHolder)> -> _SOURCES_
<org.springframework.scheduling.config.ScheduledTaskRegistrar: org.springframework.scheduling.TaskScheduler getScheduler()> -> _SOURCES_
<org.springframework.mock.web.MockMultipartHttpServletRequest: org.springframework.util.MultiValueMap getMultiFileMap()> -> _SOURCES_
<org.springframework.beans.factory.wiring.BeanConfigurerSupport: void setBeanWiringInfoResolver(org.springframework.beans.factory.wiring.BeanWiringInfoResolver)> -> _SINKS_
<org.springframework.security.config.method.GlobalMethodSecurityBeanDefinitionParser: java.util.Map parseProtectPointcuts(org.springframework.beans.factory.xml.ParserContext,java.util.List)> -> _SOURCES_
<org.springframework.aop.framework.AopProxyUtils: java.lang.Class getTargetClass(java.lang.Object)> -> _SOURCES_
<org.springframework.util.xml.SimpleNamespaceContext: java.util.Set getPrefixesSet(java.lang.String)> -> _SOURCES_
<org.springframework.aop.framework.Cglib2AopProxy: java.lang.Object getProxy(java.lang.ClassLoader)> -> _SOURCES_
<org.springframework.metadata.commons.CommonsAttributes: java.util.Collection getAttributes(java.lang.reflect.Field,java.lang.Class)> -> _SOURCES_
<org.springframework.mail.javamail.MimeMessageHelper: javax.mail.internet.MimeBodyPart getMainPart()> -> _SOURCES_
<org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver: java.util.List getHandledExceptions(java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.objenesis.strategy.PlatformDescription: int getAndroidVersion0()> -> _SOURCES_
<org.springframework.jms.support.JmsMessageHeaderAccessor: java.lang.Long getTimestamp()> -> _SOURCES_
<org.springframework.scripting.config.LangNamespaceHandler: void registerScriptBeanDefinitionParser(java.lang.String,java.lang.String)> -> _SINKS_
<org.springframework.scheduling.quartz.SchedulerFactoryBean: org.quartz.Scheduler getScheduler()> -> _SOURCES_
<org.springframework.web.socket.messaging.StompSubProtocolHandler: org.springframework.web.socket.messaging.StompSubProtocolErrorHandler getErrorHandler()> -> _SOURCES_
<org.springframework.http.converter.xml.SourceHttpMessageConverter: void writeInternal(java.lang.Object,org.springframework.http.HttpOutputMessage)> -> _SINKS_
<org.springframework.jdbc.datasource.UserCredentialsDataSourceAdapter: java.sql.Connection doGetConnection(java.lang.String,java.lang.String)> -> _CWE306__CWE089__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.messaging.simp.config.ChannelRegistration: org.springframework.messaging.simp.config.ChannelRegistration setInterceptors(org.springframework.messaging.support.ChannelInterceptor[])> -> _SINKS_
<org.springframework.jms.config.DefaultJmsListenerContainerFactory: void setCacheLevelName(java.lang.String)> -> _SINKS_
<org.springframework.jms.connection.CachedMessageProducer: void send(javax.jms.Message,int,int,long)> -> _SINKS_
<org.springframework.cache.interceptor.CacheExpressionRootObject: java.lang.Object getTarget()> -> _SOURCES_
<org.springframework.test.web.servlet.htmlunit.MockMvcWebConnectionBuilderSupport: com.gargoylesoftware.htmlunit.WebConnection createConnection(com.gargoylesoftware.htmlunit.WebClient)> -> _CWE306__CWE079__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl: boolean getEnableGroups()> -> _CWE089__SOURCES__CWE862_
<org.springframework.web.servlet.resource.VersionResourceResolver: java.lang.String resolveUrlPathInternal(java.lang.String,java.util.List,org.springframework.web.servlet.resource.ResourceResolverChain)> -> _CWE079__SINKS_
<org.springframework.expression.spel.ExpressionState: org.springframework.expression.EvaluationContext getEvaluationContext()> -> _SOURCES_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.web.client.AsyncRequestCallback httpEntityCallback(org.springframework.http.HttpEntity,java.lang.reflect.Type)> -> _SOURCES_
<org.springframework.oxm.castor.CastorMarshaller: void setTargetPackage(java.lang.String)> -> _SINKS_
<org.springframework.jms.connection.CachedMessageProducer: void setDeliveryMode(int)> -> _SINKS_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: float getFloat(int)> -> _CWE089__SOURCES_
<org.springframework.web.servlet.view.AbstractCachingViewResolver: void setCache(boolean)> -> _SINKS_
<org.springframework.core.AttributeAccessorSupport: void setAttribute(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletRequest: java.io.BufferedReader getReader()> -> _SOURCES__CWE601_
<org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor: int getCorePoolSize()> -> _SOURCES_
<org.springframework.web.servlet.view.groovy.GroovyMarkupView: void setTemplateEngine(groovy.text.markup.MarkupTemplateEngine)> -> _SINKS_
<org.springframework.web.context.request.Log4jNestedDiagnosticContextInterceptor: java.lang.String getNestedDiagnosticContextMessage(org.springframework.web.context.request.WebRequest)> -> _CWE079__SOURCES_
<org.aopalliance.aop.AspectException: java.lang.String getMessage()> -> _SOURCES_
<org.springframework.context.annotation.ConfigurationClass: java.lang.String getSimpleName()> -> _SOURCES_
<org.springframework.web.util.WebUtils: void setSessionAttribute(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: java.lang.String getString(int)> -> _CWE089__SOURCES_
<org.springframework.cache.jcache.interceptor.AbstractJCacheOperation: java.lang.String getCacheName()> -> _SOURCES_
<org.springframework.jca.cci.core.CciTemplate: javax.resource.cci.Record execute(javax.resource.cci.InteractionSpec,javax.resource.cci.Record)> -> _SINKS_
<org.springframework.web.socket.config.annotation.WebSocketTransportRegistration: java.lang.Integer getMessageSizeLimit()> -> _SOURCES_
<org.springframework.oxm.castor.CastorMarshaller: java.lang.String getDefaultEncoding()> -> _SOURCES_
<org.springframework.web.socket.handler.WebSocketSessionDecorator: java.util.List getExtensions()> -> _SOURCES_
<org.springframework.messaging.support.MessageHeaderAccessor: org.springframework.util.MimeType getContentType()> -> _SOURCES_
<org.springframework.web.util.HierarchicalUriComponents: java.lang.String getPath()> -> _SOURCES_
<org.springframework.orm.ibatis.SqlMapClientFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.orm.hibernate5.HibernateTemplate: void update(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.messaging.core.AbstractDestinationResolvingMessagingTemplate: java.lang.Object convertSendAndReceive(java.lang.String,java.lang.Object,java.util.Map,java.lang.Class)> -> _SINKS_
<org.springframework.http.client.Netty4ClientHttpResponse: int getRawStatusCode()> -> _SOURCES__CWE601_
<org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyAdviceChain: java.util.List getAdvice(java.lang.Class)> -> _SOURCES__CWE601_
<org.springframework.orm.hibernate4.HibernateTransactionManager: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor: int getOrder()> -> _SOURCES_
<org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: void setPersistenceProvider(javax.persistence.spi.PersistenceProvider)> -> _SINKS_
<org.springframework.jmx.export.metadata.ManagedAttribute: void setDefaultValue(java.lang.Object)> -> _SINKS_
<org.springframework.web.socket.messaging.WebSocketStompClient: org.springframework.util.concurrent.ListenableFuture connect(java.lang.String,org.springframework.web.socket.WebSocketHttpHeaders,org.springframework.messaging.simp.stomp.StompHeaders,org.springframework.messaging.simp.stomp.StompSessionHandler,java.lang.Object[])> -> _CWE306__SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.cglib.core.ReflectUtils: org.springframework.cglib.core.Signature getSignature(java.lang.reflect.Member)> -> _SOURCES_
<org.springframework.orm.hibernate3.LocalTransactionManagerLookup: javax.transaction.TransactionManager getTransactionManager(java.util.Properties)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletContext: void setPortletContextName(java.lang.String)> -> _SINKS_
<org.springframework.transaction.jta.OC4JJtaTransactionManager: void loadOC4JTransactionClasses()> -> _SOURCES_
<org.springframework.cglib.proxy.MixinEmitter: java.lang.reflect.Method[] getMethods(java.lang.Class)> -> _SOURCES_
<org.springframework.aop.framework.AbstractSingletonProxyFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.beans.TypeMismatchException: java.lang.Object getValue()> -> _SOURCES_
<org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser: java.lang.String getAsyncTimeout(org.w3c.dom.Element)> -> _SOURCES_
<org.springframework.web.portlet.handler.PortletModeHandlerMapping: javax.portlet.PortletMode getLookupKey(javax.portlet.PortletRequest)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockBaseURL: void write(java.io.Writer,boolean)> -> _SINKS_
<org.springframework.scheduling.timer.TimerFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.jdbc.core.namedparam.ParsedSql: void setTotalParameterCount(int)> -> _CWE089__SINKS_
<org.springframework.web.util.HtmlUtils: java.lang.String htmlEscape(java.lang.String)> -> _SANITIZERS__CWE079_
<org.springframework.web.servlet.handler.HandlerInterceptorAdapter: void postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView)> -> _SINKS_
<org.springframework.mock.web.MockJspWriter: void println(java.lang.Object)> -> _SINKS_
<org.springframework.orm.toplink.LocalSessionFactory: void setLoginPropertyMap(java.util.Map)> -> _CWE306__SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.security.config.http.FormLoginBeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.core.io.PathResource: java.net.URI getURI()> -> _SOURCES_
<org.springframework.core.io.PathResource: java.net.URL getURL()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.OptionTag: void renderOption(java.lang.Object,java.lang.String,org.springframework.web.servlet.tags.form.TagWriter)> -> _SINKS_
<org.springframework.context.event.SimpleApplicationEventMulticaster: org.springframework.core.task.TaskExecutor getTaskExecutor()> -> _SOURCES_
<org.springframework.web.portlet.context.PortletApplicationObjectSupport: void setPortletContext(javax.portlet.PortletContext)> -> _SINKS_
<org.springframework.mock.web.portlet.MockRenderRequest: java.lang.String getLifecyclePhase()> -> _SOURCES_
<org.springframework.cache.caffeine.CaffeineCacheManager: void setCacheSpecification(java.lang.String)> -> _SINKS_
<org.springframework.web.portlet.bind.PortletRequestUtils: java.lang.Long getLongParameter(javax.portlet.PortletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.mvc.multiaction.InternalPathMethodNameResolver: java.lang.String getSuffix()> -> _SOURCES_
<org.springframework.scheduling.quartz.SchedulerFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.web.socket.config.annotation.DelegatingWebSocketMessageBrokerConfiguration: void setConfigurers(java.util.List)> -> _SINKS_
<org.springframework.web.portlet.multipart.DefaultMultipartActionRequest: org.springframework.web.multipart.MultipartFile getFile(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.jmx.export.assembler.MethodNameBasedMBeanInfoAssembler: boolean includeReadAttribute(java.lang.reflect.Method,java.lang.String)> -> _SOURCES_
<org.springframework.oxm.jaxb.Jaxb2Marshaller: void setCheckForXmlRootElement(boolean)> -> _SINKS_
<org.springframework.orm.toplink.SessionFactoryUtils: oracle.toplink.sessions.Session getSession(org.springframework.orm.toplink.SessionFactory,boolean)> -> _SOURCES_
<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.xml.XmlReaderContext getReaderContext()> -> _SOURCES_
<org.springframework.format.datetime.joda.YearMonthFormatter: org.joda.time.YearMonth parse(java.lang.String,java.util.Locale)> -> _SINKS_
<org.springframework.orm.hibernate4.support.OpenSessionInViewFilter: void setSessionFactoryBeanName(java.lang.String)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompHeaders: java.lang.String getSubscription()> -> _SOURCES_
<org.springframework.remoting.rmi.RmiServiceExporter: void setClientSocketFactory(java.rmi.server.RMIClientSocketFactory)> -> _SINKS_
<org.springframework.web.bind.support.DefaultSessionAttributeStore: java.lang.Object retrieveAttribute(org.springframework.web.context.request.WebRequest,java.lang.String)> -> _SINKS_
<org.springframework.web.portlet.DispatcherPortlet: void setDetectAllViewResolvers(boolean)> -> _SINKS_
<org.springframework.web.portlet.mvc.PortletWrappingController: void setPortletConfig(javax.portlet.PortletConfig)> -> _SINKS_
<org.springframework.remoting.rmi.JndiRmiProxyFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.web.servlet.handler.HandlerExceptionResolverComposite: int getOrder()> -> _SOURCES_
<org.springframework.jms.listener.serversession.CommonsPoolServerSessionFactory: void setMaxIdle(int)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompHeaders: java.lang.String getId()> -> _SOURCES_
<org.springframework.orm.jpa.vendor.AbstractJpaVendorAdapter: java.lang.Class getEntityManagerFactoryInterface()> -> _SOURCES_
<org.springframework.beans.factory.config.DependencyDescriptor: java.lang.Object[] getAnnotations()> -> _SOURCES_
<org.springframework.security.access.intercept.RunAsManagerImpl: void setRolePrefix(java.lang.String)> -> _SINKS_
<org.springframework.beans.factory.groovy.GroovyBeanDefinitionWrapper: void setBeanDefinition(org.springframework.beans.factory.support.AbstractBeanDefinition)> -> _SINKS_
<org.springframework.mock.web.portlet.MockCacheControl: java.lang.String getETag()> -> _SOURCES_
<org.springframework.jdbc.core.metadata.GenericCallMetaDataProvider: void setSupportsCatalogsInProcedureCalls(boolean)> -> _CWE089__SINKS_
<org.springframework.beans.factory.config.DependencyDescriptor: java.lang.Class getMapKeyType()> -> _SOURCES_
<org.springframework.jdbc.support.incrementer.AbstractColumnMaxValueIncrementer: java.lang.String getColumnName()> -> _CWE089__SOURCES_
<org.springframework.messaging.simp.SimpMessagingTemplate: void setSendTimeout(long)> -> _SINKS_
<org.springframework.security.core.context.InheritableThreadLocalSecurityContextHolderStrategy: void setContext(org.springframework.security.core.context.SecurityContext)> -> _SINKS_
<org.springframework.beans.factory.support.AbstractBeanDefinitionReader: int loadBeanDefinitions(java.lang.String,java.util.Set)> -> _SOURCES_
<org.springframework.jndi.support.SimpleJndiBeanFactory: java.lang.Object getBean(java.lang.String)> -> _SOURCES_
<org.springframework.orm.toplink.TopLinkTransactionManager: javax.sql.DataSource getDataSource()> -> _SOURCES_
<org.springframework.web.context.support.GenericWebApplicationContext: org.springframework.core.io.support.ResourcePatternResolver getResourcePatternResolver()> -> _SOURCES_
<org.springframework.instrument.classloading.jboss.JBossLoadTimeWeaver: java.lang.ClassLoader getThrowawayClassLoader()> -> _SOURCES_
<org.springframework.web.servlet.handler.WebRequestHandlerInterceptorAdapter: void postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView)> -> _SINKS_
<org.springframework.security.config.http.FilterInvocationSecurityMetadataSourceParser: org.springframework.beans.factory.support.ManagedMap parseInterceptUrlsForFilterInvocationRequestMap(org.springframework.security.config.http.MatcherType,java.util.List,boolean,boolean,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.expression.common.LiteralExpression: java.lang.String getValue(org.springframework.expression.EvaluationContext,java.lang.Object)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletRequest: void setWindowState(javax.portlet.WindowState)> -> _SINKS_
<org.springframework.web.servlet.config.annotation.ViewResolverRegistry: java.util.List getViewResolvers()> -> _SOURCES_
<org.springframework.security.authentication.jaas.JaasAuthenticationProvider: void setLoginExceptionResolver(org.springframework.security.authentication.jaas.LoginExceptionResolver)> -> _CWE306__SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler: void setErrorHandler(org.springframework.util.ErrorHandler)> -> _SINKS_
<org.springframework.web.socket.client.standard.WebSocketContainerFactoryBean: void setMaxTextMessageBufferSize(int)> -> _SINKS_
<org.springframework.jdbc.support.SQLErrorCodes: java.lang.String[] getTransientDataAccessResourceCodes()> -> _CWE089__SOURCES_
<org.springframework.jdbc.support.SQLErrorCodesFactory: org.springframework.jdbc.support.SQLErrorCodes getErrorCodes(javax.sql.DataSource)> -> _CWE089__SOURCES_
<org.springframework.jms.core.JmsMessagingTemplate: void convertAndSend(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.web.socket.messaging.SubProtocolWebSocketHandler: int getSendTimeLimit()> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanDefinition: java.lang.String getBeanClassName()> -> _SOURCES_
<org.springframework.web.socket.WebSocketHttpHeaders: void setSecWebSocketProtocol(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.cache.interceptor.AbstractFallbackCacheOperationSource: java.lang.Object getCacheKey(java.lang.reflect.Method,java.lang.Class)> -> _SOURCES_
<org.springframework.web.context.support.GenericWebApplicationContext: org.springframework.core.io.Resource getResourceByPath(java.lang.String)> -> _SOURCES_
<org.springframework.messaging.support.AbstractMessageChannel: void setInterceptors(java.util.List)> -> _SINKS_
<org.springframework.jdbc.datasource.embedded.SimpleDriverDataSourceFactory: javax.sql.DataSource getDataSource()> -> _CWE089__SOURCES_
<org.springframework.util.xml.StaxStreamHandler: void setDocumentLocator(org.xml.sax.Locator)> -> _SINKS_
<org.springframework.format.number.money.MonetaryAmountFormatter: void setFormatName(java.lang.String)> -> _SINKS_
<org.springframework.scheduling.config.ScheduledTaskRegistrar: void setCronTasks(java.util.Map)> -> _SINKS_
<org.springframework.transaction.jta.JtaTransactionManager: void setAutodetectUserTransaction(boolean)> -> _SINKS_
<org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint: org.aspectj.lang.Signature getSignature()> -> _SOURCES_
<org.springframework.security.authentication.TestingAuthenticationProvider: org.springframework.security.core.Authentication authenticate(org.springframework.security.core.Authentication)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.transaction.jta.JtaTransactionManager: void setTransactionSynchronizationRegistryName(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.i18n.CookieLocaleResolver: java.util.TimeZone getDefaultTimeZone()> -> _SOURCES_
<org.springframework.web.servlet.handler.AbstractHandlerMapping: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)> -> _SINKS_
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.ClassLoader getTempClassLoader()> -> _SOURCES_
<org.springframework.http.converter.json.GsonHttpMessageConverter: java.nio.charset.Charset getCharset(org.springframework.http.HttpHeaders)> -> _SOURCES_
<org.springframework.orm.jpa.JpaAccessor: org.springframework.orm.jpa.JpaDialect getJpaDialect()> -> _SOURCES_
<org.springframework.orm.toplink.LocalSessionFactory: void setDatabaseLogin(oracle.toplink.sessions.DatabaseLogin)> -> _CWE306__SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.orm.hibernate3.LocalTransactionManagerLookup: java.lang.String getUserTransactionName()> -> _SOURCES_
<org.springframework.beans.factory.config.RuntimeBeanReference: void setSource(java.lang.Object)> -> _SINKS_
<org.springframework.web.method.HandlerMethod: java.lang.Object getBean()> -> _SOURCES_
<org.springframework.validation.BindException: java.util.List getFieldErrors()> -> _SOURCES_
<org.springframework.scheduling.config.TaskExecutorFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.web.portlet.context.PortletContextScope: java.lang.Object get(java.lang.String,org.springframework.beans.factory.ObjectFactory)> -> _SOURCES_
<org.springframework.core.SpringVersion: java.lang.String getVersion()> -> _SOURCES_
<org.springframework.aop.aspectj.AspectJAfterThrowingAdvice: void setThrowingName(java.lang.String)> -> _SINKS_
<org.springframework.messaging.support.IdTimestampMessageHeaderInitializer: org.springframework.util.IdGenerator getIdGenerator()> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession: java.lang.String getId()> -> _SOURCES_
<org.springframework.web.socket.config.annotation.WebSocketTransportRegistration: java.util.List getDecoratorFactories()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletRequest: java.lang.String getProperty(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.beans.factory.config.CustomEditorConfigurer: void setPropertyEditorRegistrars(org.springframework.beans.PropertyEditorRegistrar[])> -> _SINKS_
<org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser: void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)> -> _SINKS_
<org.springframework.web.socket.adapter.standard.StandardWebSocketSession: void sendPongMessage(org.springframework.web.socket.PongMessage)> -> _SINKS_
<org.springframework.jdbc.core.SingleColumnRowMapper: java.lang.Object getColumnValue(java.sql.ResultSet,int,java.lang.Class)> -> _CWE089__SOURCES_
<org.springframework.web.servlet.support.BindStatus: java.lang.String getDisplayValue()> -> _SOURCES_
<org.springframework.web.socket.server.support.WebSocketHttpRequestHandler: org.springframework.web.socket.server.HandshakeHandler getHandshakeHandler()> -> _SOURCES_
<org.springframework.messaging.simp.SimpMessageHeaderAccessor: java.lang.String getDetailedLogMessage(java.lang.Object)> -> _SOURCES_
<org.springframework.messaging.simp.annotation.support.SendToMethodReturnValueHandler: void handleReturnValue(java.lang.Object,org.springframework.core.MethodParameter,org.springframework.messaging.Message)> -> _SINKS_
<org.springframework.web.portlet.context.PortletWebRequest: java.lang.Object getNativeResponse()> -> _SOURCES_
<org.springframework.orm.toplink.TopLinkTemplate: java.lang.Object executeNamedQuery(java.lang.Class,java.lang.String,boolean)> -> _CWE078__SINKS_
<org.springframework.web.portlet.context.StaticPortletApplicationContext: org.springframework.core.io.support.ResourcePatternResolver getResourcePatternResolver()> -> _SOURCES_
<org.springframework.web.socket.messaging.SubProtocolWebSocketHandler: void setSendBufferSizeLimit(int)> -> _SINKS_
<org.springframework.jmx.export.assembler.AbstractConfigurableMBeanInfoAssembler: void setNotificationInfos(org.springframework.jmx.export.metadata.ManagedNotification[])> -> _SINKS_
<org.springframework.web.servlet.config.annotation.PathMatchConfigurer: org.springframework.web.servlet.config.'annotation'.PathMatchConfigurer setUseTrailingSlashMatch(java.lang.Boolean)> -> _SINKS_
<org.springframework.test.context.TestContextManager: org.springframework.test.context.TestContext getTestContext()> -> _SOURCES_
<org.springframework.messaging.simp.user.UserDestinationMessageHandler: java.lang.String getBroadcastDestination()> -> _SOURCES__CWE862_
<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer$PointcutBody getPointcutBody(java.lang.String[],int)> -> _SOURCES_
<org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider: void setForcePrincipalAsString(boolean)> -> _SINKS__CWE862_
<org.springframework.web.servlet.FrameworkServlet: void setContextInitializerClasses(java.lang.String)> -> _SINKS_
<org.springframework.web.multipart.support.StringMultipartFileEditor: void setValue(java.lang.Object)> -> _SINKS_
<org.springframework.http.converter.json.GsonHttpMessageConverter: void setPrefixJson(boolean)> -> _SINKS_
<org.springframework.core.annotation.AnnotationUtils: java.lang.Object getValue(java.lang.'annotation'.Annotation,java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.CorsRegistration: java.lang.String getPathPattern()> -> _SOURCES_
<org.springframework.web.portlet.context.StaticPortletApplicationContext: javax.servlet.ServletContext getServletContext()> -> _SOURCES_
<org.springframework.web.servlet.view.AbstractTemplateView: void setExposeSessionAttributes(boolean)> -> _SINKS_
<org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration: void setGlobalAuthenticationConfigurers(java.util.List)> -> _CWE306__SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.jdbc.core.simple.SimpleJdbcTemplate: int update(java.lang.String,java.lang.Object[])> -> _CWE089__SINKS_
<org.springframework.aop.target.CommonsPoolTargetSource: java.lang.Object getTarget()> -> _SOURCES_
<org.springframework.web.util.HierarchicalUriComponents: org.springframework.web.util.HierarchicalUriComponents$Type getHostType()> -> _SOURCES_
<org.springframework.web.servlet.view.tiles3.TilesConfigurer: void setServletContext(javax.servlet.ServletContext)> -> _SINKS_
<org.springframework.web.socket.server.standard.AbstractTyrusRequestUpgradeStrategy: java.util.List getInstalledExtensions(javax.websocket.WebSocketContainer)> -> _SOURCES_
<org.springframework.context.i18n.LocaleContextHolder: org.springframework.context.i18n.LocaleContext getLocaleContext()> -> _SOURCES_
<org.springframework.core.env.MissingRequiredPropertiesException: java.lang.String getMessage()> -> _SOURCES_
<org.springframework.messaging.simp.SimpMessageMappingInfo: org.springframework.messaging.simp.SimpMessageTypeMessageCondition getMessageTypeMessageCondition()> -> _SOURCES_
<org.springframework.cache.transaction.TransactionAwareCacheDecorator: org.springframework.cache.Cache getTargetCache()> -> _SOURCES_
<org.springframework.jms.connection.CachedMessageConsumer: javax.jms.MessageListener getMessageListener()> -> _SOURCES_
<org.springframework.asm.TypeReference: int getSuperTypeIndex()> -> _SOURCES_
<org.springframework.security.authentication.encoding.PlaintextPasswordEncoder: void setIgnorePasswordCase(boolean)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompHeaderAccessor: java.lang.Integer getContentLength()> -> _SOURCES_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: org.springframework.jdbc.support.KeyHolder doExecuteAndReturnKeyHolder(java.util.Map)> -> _CWE078__CWE089__SINKS_
<org.springframework.jdbc.support.nativejdbc.WebLogicNativeJdbcExtractor: java.sql.Connection doGetNativeConnection(java.sql.Connection)> -> _CWE306__CWE089__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.orm.hibernate4.LocalSessionFactoryBean: void setMultiTenantConnectionProvider(java.lang.Object)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.cglib.proxy.MethodProxy: int getSuperIndex()> -> _SOURCES_
<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder setLazyInit(boolean)> -> _SINKS_
<org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractorAdapter: java.sql.ResultSet getNativeResultSet(java.sql.ResultSet)> -> _CWE089__SOURCES_
<org.springframework.orm.hibernate3.HibernateInterceptor: void setExceptionConversionEnabled(boolean)> -> _SINKS_
<org.springframework.cache.concurrent.ConcurrentMapCache: java.util.concurrent.ConcurrentMap getNativeCache()> -> _SOURCES_
<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.web.bind.MethodArgumentNotValidException: java.lang.String getMessage()> -> _SOURCES_
<org.springframework.http.client.HttpComponentsClientHttpRequestFactory: org.apache.http.client.config.RequestConfig mergeRequestConfig(org.apache.http.client.config.RequestConfig)> -> _SOURCES_
<org.springframework.orm.ibatis.SqlMapClientFactoryBean: void setTransactionConfigProperties(java.util.Properties)> -> _SINKS_
<org.springframework.scheduling.concurrent.ForkJoinPoolFactoryBean: void setCommonPool(boolean)> -> _SINKS_
<org.springframework.web.accept.ContentNegotiationManagerFactoryBean: org.springframework.web.accept.ContentNegotiationManager getObject()> -> _SOURCES_
<org.springframework.security.authentication.event.AbstractAuthenticationFailureEvent: org.springframework.security.core.AuthenticationException getException()> -> _SOURCES_
<org.springframework.messaging.converter.AbstractMessageConverter: java.lang.Class getSerializedPayloadClass()> -> _SOURCES_
<org.springframework.web.socket.client.ConnectionManagerSupport: java.net.URI getUri()> -> _SOURCES_
<org.springframework.jdbc.datasource.embedded.H2EmbeddedDatabaseConfigurer: org.springframework.jdbc.datasource.embedded.H2EmbeddedDatabaseConfigurer getInstance()> -> _CWE089__SOURCES_
<org.springframework.web.socket.client.jetty.JettyWebSocketClient: org.springframework.core.task.AsyncListenableTaskExecutor getTaskExecutor()> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer: org.springframework.web.accept.ContentNegotiationManager getContentNegotiationManager()> -> _SOURCES_
<org.springframework.jca.cci.connection.ConnectionFactoryUtils: javax.resource.cci.Connection getConnection(javax.resource.cci.ConnectionFactory,javax.resource.cci.ConnectionSpec)> -> _CWE306__SOURCES__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.security.authentication.dao.SystemWideSaltSource: java.lang.Object getSalt(org.springframework.security.core.userdetails.UserDetails)> -> _SOURCES_
<org.springframework.scheduling.quartz.SimpleThreadPoolTaskExecutor: void setWaitForJobsToCompleteOnShutdown(boolean)> -> _SINKS_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.'annotation'.RequestMappingHandlerMapping createRequestMappingHandlerMapping()> -> _SOURCES_
<org.springframework.web.socket.server.support.WebSocketHttpRequestHandler: void setHandshakeInterceptors(java.util.List)> -> _SINKS_
<org.springframework.web.method.annotation.RequestParamMethodArgumentResolver: java.lang.Object resolveName(java.lang.String,org.springframework.core.MethodParameter,org.springframework.web.context.request.NativeWebRequest)> -> _SINKS_
<org.springframework.security.core.parameters.AnnotationParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.beans.factory.config.AbstractFactoryBean: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.web.portlet.context.StaticPortletApplicationContext: org.springframework.core.io.Resource getResourceByPath(java.lang.String)> -> _SOURCES_
<org.springframework.web.socket.client.standard.WebSocketContainerFactoryBean: void setMaxBinaryMessageBufferSize(int)> -> _SINKS_
<org.springframework.util.xml.AbstractXMLStreamReader: java.lang.String getPrefix()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: org.springframework.web.servlet.mvc.method.RequestMappingInfo createRequestMappingInfo(org.springframework.web.bind.'annotation'.RequestMapping,org.springframework.web.servlet.mvc.condition.RequestCondition)> -> _SOURCES_
<org.springframework.web.servlet.view.RedirectView: java.lang.String[] getHosts()> -> _SOURCES_
<org.springframework.web.servlet.resource.VersionResourceResolver: void setStrategyMap(java.util.Map)> -> _SINKS_
<org.springframework.jdbc.support.lob.OracleLobHandler: java.io.Reader getClobAsCharacterStream(java.sql.ResultSet,int)> -> _CWE089__SOURCES_
<org.springframework.cache.interceptor.CacheAspectSupport: org.springframework.cache.interceptor.KeyGenerator getKeyGenerator()> -> _SOURCES_
<org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor: void setExtendedPersistenceContexts(java.util.Map)> -> _SINKS_
<org.springframework.orm.hibernate5.HibernateTransactionManager: void setAutodetectDataSource(boolean)> -> _SINKS_
<org.springframework.web.servlet.support.RequestContext: java.lang.String getQueryString()> -> _SOURCES_
<org.springframework.jdbc.core.simple.SimpleJdbcCall: java.lang.Object executeFunction(java.lang.Class,org.springframework.jdbc.core.namedparam.MapSqlParameterSource)> -> _CWE089__SINKS_
<org.springframework.ui.freemarker.FreeMarkerConfigurationFactory: void setPostTemplateLoaders(freemarker.cache.TemplateLoader[])> -> _SINKS_
<org.springframework.web.bind.support.SpringWebConstraintValidatorFactory: javax.validation.ConstraintValidator getInstance(java.lang.Class)> -> _SOURCES_
<org.springframework.web.servlet.support.RequestContext: java.lang.String getThemeMessage(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.mock.web.portlet.MockActionResponse: void setPortletMode(javax.portlet.PortletMode)> -> _SINKS__CWE601_
<org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler: void setHeartbeatValue(long[])> -> _SINKS_
<org.springframework.web.servlet.view.AbstractView: java.util.Map getStaticAttributes()> -> _SOURCES_
<org.springframework.aop.support.DelegatePerTargetObjectIntroductionInterceptor: java.lang.Object getIntroductionDelegateFor(java.lang.Object)> -> _SOURCES_
<org.springframework.jms.connection.SingleConnectionFactory: javax.jms.QueueConnection createQueueConnection(java.lang.String,java.lang.String)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.portlet.handler.SimpleMappingExceptionResolver: int getDepth(java.lang.String,java.lang.Class,int)> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.validation.Validator getValidator()> -> _SOURCES_
<org.springframework.mock.http.client.MockClientHttpResponse: java.lang.String getStatusText()> -> _SOURCES__CWE601_
<org.springframework.remoting.support.RemoteExporter: void setRegisterTraceInterceptor(boolean)> -> _SINKS_
<org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter: void setAlwaysUseFullPath(boolean)> -> _SINKS_
<org.springframework.web.servlet.view.document.AbstractPdfView: int getViewerPreferences()> -> _SOURCES_
<org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurationSupport: org.springframework.web.socket.WebSocketHandler decorateWebSocketHandler(org.springframework.web.socket.WebSocketHandler)> -> _SINKS_
<org.springframework.security.authentication.ProviderManager: void setEraseCredentialsAfterAuthentication(boolean)> -> _CWE306__SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.messaging.simp.stomp.DefaultStompSession: void setReceiptTimeLimit(long)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompHeaders: void setAck(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.config.annotation.ViewControllerRegistration: org.springframework.web.servlet.mvc.ParameterizableViewController getViewController()> -> _SOURCES_
<org.springframework.scheduling.backportconcurrent.ScheduledExecutorFactoryBean: void setRejectedExecutionHandler(edu.emory.mathcs.backport.java.util.concurrent.RejectedExecutionHandler)> -> _SINKS_
<org.springframework.security.config.annotation.web.configurers.ChannelSecurityConfigurer: java.util.List getChannelProcessors(org.springframework.security.config.'annotation'.web.HttpSecurityBuilder)> -> _SOURCES_
<org.springframework.jdbc.core.simple.SimpleJdbcTemplate: int[] doExecuteBatchUpdateWithNamedParameters(java.lang.String,org.springframework.jdbc.core.namedparam.SqlParameterSource[])> -> _CWE089__SINKS_
<org.springframework.web.util.HierarchicalUriComponents: java.lang.String encodeUriComponent(java.lang.String,java.lang.String,org.springframework.web.util.HierarchicalUriComponents$Type)> -> _SANITIZERS_
<org.springframework.aop.config.AdvisorComponentDefinition: java.lang.String getName()> -> _SOURCES_
<org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper: java.util.Set getMappableAttributes()> -> _SOURCES_
<org.springframework.ejb.support.AbstractEnterpriseBean: void setBeanFactoryLocator(org.springframework.beans.factory.access.BeanFactoryLocator)> -> _SINKS_
<org.springframework.test.web.servlet.result.StatusResultMatchers: org.springframework.test.web.servlet.ResultMatcher isProxyAuthenticationRequired()> -> _AUTHENTICATIONS_NEUTRAL__CWE306_
<org.springframework.orm.hibernate4.LocalSessionFactoryBean: void setPackagesToScan(java.lang.String[])> -> _SINKS_
<org.springframework.jms.listener.endpoint.JmsActivationSpecConfig: int getPrefetchSize()> -> _SOURCES_
<org.springframework.context.support.AbstractMessageSource: java.lang.String getMessage(org.springframework.context.MessageSourceResolvable,java.util.Locale)> -> _SOURCES_
<org.springframework.beans.propertyeditors.InputSourceEditor: java.lang.String getAsText()> -> _SOURCES_
<org.springframework.context.annotation.ConfigurationMethod: org.springframework.core.type.MethodMetadata getMetadata()> -> _SOURCES_
<org.springframework.validation.DataBinder: java.lang.String[] getAllowedFields()> -> _SOURCES_
<org.springframework.web.servlet.mvc.multiaction.PropertiesMethodNameResolver: void setMappings(java.util.Properties)> -> _SINKS_
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.util.Map getBeansOfType(java.lang.Class,boolean,boolean)> -> _SOURCES_
<org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry: void setCacheLimit(int)> -> _SINKS_
<org.springframework.web.socket.messaging.StompSubProtocolHandler: void setUserSessionRegistry(org.springframework.messaging.simp.user.UserSessionRegistry)> -> _SINKS_
<org.springframework.web.servlet.tags.form.InputTag: void setAutocomplete(java.lang.String)> -> _SINKS_
<org.springframework.web.socket.messaging.StompSubProtocolHandler: void setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)> -> _SINKS_
<org.springframework.aop.target.CommonsPool2TargetSource: long getMaxWait()> -> _SOURCES_
<org.springframework.expression.common.LiteralExpression: java.lang.Class getValueType()> -> _SOURCES_
<org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter: void setCacheSecondsForSessionAttributeHandlers(int)> -> _SINKS_
<org.springframework.web.socket.sockjs.client.XhrClientSockJsSession: void setTextMessageSizeLimit(int)> -> _SINKS_
<org.springframework.jms.connection.SingleConnectionFactory: javax.jms.Session getSession(javax.jms.Connection,java.lang.Integer)> -> _SOURCES_
<org.springframework.web.portlet.mvc.annotation.AnnotationMethodHandlerAdapter: void setCacheSecondsForSessionAttributeHandlers(int)> -> _SINKS_
<org.springframework.security.authentication.ProviderManager: java.util.List getProviders()> -> _SOURCES_
<org.springframework.web.context.ContextLoaderServlet: java.lang.String getServletInfo()> -> _SOURCES_
<org.springframework.messaging.handler.invocation.InvocableHandlerMethod: org.springframework.core.MethodParameter getAsyncReturnValueType(java.lang.Object)> -> _SOURCES_
<org.springframework.core.io.ClassPathResource: java.io.File getFile()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.SelectTag: void writeHiddenTagIfNecessary(org.springframework.web.servlet.tags.form.TagWriter)> -> _SINKS_
<org.springframework.mock.web.MockSessionCookieConfig: void setSecure(boolean)> -> _SINKS_
<org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession: void close(org.springframework.web.socket.CloseStatus)> -> _AUTHENTICATIONS_TO_LOW__SINKS_
<org.springframework.web.context.request.ServletRequestAttributes: java.lang.Object getAttribute(java.lang.String,int)> -> _SOURCES_
<org.springframework.web.socket.adapter.jetty.JettyWebSocketSession: void sendTextMessage(org.springframework.web.socket.TextMessage)> -> _SINKS_
<org.springframework.orm.toplink.TopLinkTransactionManager: org.springframework.jdbc.support.SQLExceptionTranslator getJdbcExceptionTranslator()> -> _SOURCES_
<org.springframework.core.convert.support.ObjectToCollectionConverter: java.util.Set getConvertibleTypes()> -> _SOURCES_
<org.springframework.security.core.authority.mapping.MapBasedAttributes2GrantedAuthoritiesMapper: java.util.List getGrantedAuthorities(java.util.Collection)> -> _SOURCES_
<org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler: int getPoolSize()> -> _SOURCES_
<org.springframework.ejb.access.AbstractSlsbInvokerInterceptor: void setLookupHomeOnStartup(boolean)> -> _SINKS_
<org.springframework.web.socket.adapter.jetty.JettyWebSocketSession: java.lang.String getId()> -> _SOURCES_
<org.springframework.web.servlet.support.WebContentGenerator: void setVaryByRequestHeaders(java.lang.String[])> -> _SINKS_
<org.springframework.mock.web.MockHttpServletRequest: java.util.Collection getParts()> -> _SOURCES_
<org.springframework.test.context.support.DefaultTestContext: void updateState(java.lang.Object,java.lang.reflect.Method,java.lang.Throwable)> -> _SINKS_
<org.springframework.beans.factory.serviceloader.ServiceFactoryBean: java.lang.Object getObjectToExpose(java.util.ServiceLoader)> -> _SOURCES_
<org.springframework.util.ObjectUtils: java.lang.String getDisplayString(java.lang.Object)> -> _SOURCES_
<org.springframework.web.context.request.async.DeferredResultInterceptorChain: java.lang.Object applyPostProcess(org.springframework.web.context.request.NativeWebRequest,org.springframework.web.context.request.async.DeferredResult,java.lang.Object)> -> _SINKS_
<org.springframework.messaging.handler.annotation.support.PayloadArgumentResolver: java.lang.String getParameterName(org.springframework.core.MethodParameter)> -> _SOURCES_
<org.springframework.oxm.xstream.XStreamMarshaller: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.web.socket.messaging.StompSubProtocolHandler: java.security.Principal getUser(org.springframework.web.socket.WebSocketSession)> -> _SOURCES_
<org.springframework.asm.commons.GeneratorAdapter: void loadArgs()> -> _SOURCES_
<org.springframework.web.socket.AbstractWebSocketMessage: java.lang.Object getPayload()> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configureContentNegotiation(org.springframework.web.servlet.config.'annotation'.ContentNegotiationConfigurer)> -> _SINKS_
<org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer: org.springframework.security.access.expression.SecurityExpressionHandler getExpressionHandler(org.springframework.security.config.'annotation'.web.HttpSecurityBuilder)> -> _SOURCES_
<org.springframework.web.bind.EscapedErrors: int getFieldErrorCount()> -> _SOURCES_
<org.springframework.format.datetime.joda.JodaDateTimeFormatAnnotationFormatterFactory: java.util.Set getFieldTypes()> -> _SOURCES_
<org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider: org.springframework.core.io.ResourceLoader getResourceLoader()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletConfig: java.util.Enumeration getSupportedLocales()> -> _SOURCES_
<org.springframework.remoting.httpinvoker.CommonsHttpInvokerRequestExecutor: void executePostMethod(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration,org.apache.commons.httpclient.HttpClient,org.apache.commons.httpclient.methods.PostMethod)> -> _CWE078__SINKS_
<org.springframework.remoting.rmi.RmiClientInterceptor: void setRefreshStubOnConnectFailure(boolean)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: void setDependencyCheck(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: void setCssStyle(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.beans.factory.support.AbstractBeanFactory: org.springframework.beans.factory.config.BeanDefinition getMergedBeanDefinition(java.lang.String)> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletResponse: void setStatus(int)> -> _SINKS__CWE601_
<org.springframework.http.converter.xml.SourceHttpMessageConverter: javax.xml.transform.Source readInternal(java.lang.Class,org.springframework.http.HttpInputMessage)> -> _SOURCES_
<org.springframework.scheduling.quartz.CronTriggerFactoryBean: void setGroup(java.lang.String)> -> _SINKS_
<org.springframework.security.config.authentication.CachingUserDetailsService: void setUserCache(org.springframework.security.core.userdetails.UserCache)> -> _SINKS__CWE862_
<org.springframework.orm.jpa.JpaTransactionManager: void setJpaPropertyMap(java.util.Map)> -> _SINKS_
<org.springframework.jms.connection.CachedMessageProducer: javax.jms.Queue getQueue()> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter: void addResourceHandlers(org.springframework.web.servlet.config.'annotation'.ResourceHandlerRegistry)> -> _SINKS_
<org.springframework.http.client.SimpleBufferingAsyncClientHttpRequest: org.springframework.http.HttpMethod getMethod()> -> _SOURCES_
<org.springframework.test.context.ContextConfigurationAttributes: java.lang.Class[] getInitializers()> -> _SOURCES_
<org.springframework.cache.interceptor.CacheAspectSupport: java.lang.Class getTargetClass(java.lang.Object)> -> _SOURCES_
<org.springframework.security.config.http.UserDetailsServiceFactoryBean: void setApplicationContext(org.springframework.context.ApplicationContext)> -> _SINKS__CWE862_
<org.springframework.security.scheduling.DelegatingSecurityContextSchedulingTaskExecutor: org.springframework.scheduling.SchedulingTaskExecutor getDelegate()> -> _SOURCES_
<org.springframework.jdbc.object.GenericSqlQuery: void setRowMapper(org.springframework.jdbc.core.RowMapper)> -> _CWE089__SINKS_
<org.springframework.remoting.caucho.HessianClientInterceptor: void setSendCollectionType(boolean)> -> _SINKS_
<org.springframework.mock.web.MockServletContext: java.util.Map getFilterRegistrations()> -> _SOURCES_
<org.springframework.http.converter.AbstractHttpMessageConverter: boolean canRead(org.springframework.http.MediaType)> -> _SOURCES_
<org.springframework.web.servlet.tags.form.CheckboxTag: java.lang.String getInputType()> -> _SOURCES_
<org.springframework.web.servlet.view.xslt.XsltView: void setIndent(boolean)> -> _SINKS_
<org.springframework.context.config.MBeanExportBeanDefinitionParser: org.springframework.beans.factory.support.AbstractBeanDefinition parseInternal(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.oxm.jaxb.Jaxb2Marshaller: void setMtomEnabled(boolean)> -> _SINKS_
<org.springframework.mock.web.portlet.ServletWrappingPortletContext: int getMajorVersion()> -> _SOURCES_
<org.springframework.mail.javamail.MimeMailMessage: void setText(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.tags.form.ButtonTag: void setValue(java.lang.String)> -> _SINKS_
<org.springframework.web.client.RestTemplate: org.springframework.http.HttpHeaders headForHeaders(java.net.URI)> -> _SINKS_
<org.springframework.util.MethodInvoker: java.lang.Object getTargetObject()> -> _SOURCES_
<org.springframework.security.authentication.encoding.BaseDigestPasswordEncoder: boolean getEncodeHashAsBase64()> -> _SOURCES_
<org.springframework.web.socket.server.standard.SpringConfigurator: java.lang.String getBeanNameByType(org.springframework.web.context.WebApplicationContext,java.lang.Class)> -> _SOURCES_
<org.springframework.web.socket.handler.AbstractWebSocketHandler: void handleBinaryMessage(org.springframework.web.socket.WebSocketSession,org.springframework.web.socket.BinaryMessage)> -> _SINKS_
<org.springframework.core.env.CommandLineArgs: java.util.List getNonOptionArgs()> -> _SOURCES_
<org.springframework.cache.interceptor.AbstractCacheInvoker: org.springframework.cache.interceptor.CacheErrorHandler getErrorHandler()> -> _SOURCES_
<org.springframework.scheduling.quartz.SchedulerAccessor: void setSchedulerListeners(org.quartz.SchedulerListener[])> -> _SINKS_
<org.springframework.context.annotation.ConditionEvaluator: java.util.List getConditionClasses(org.springframework.core.type.AnnotatedTypeMetadata)> -> _SOURCES_
<org.springframework.aop.target.CommonsPool2TargetSource: void setMinIdle(int)> -> _SINKS_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSetMetaData: int getColumnCount()> -> _CWE089__SOURCES_
<org.springframework.aop.aspectj.AbstractAspectJAdvice: void setReturningName(java.lang.String)> -> _SINKS_
<org.springframework.context.support.ConversionServiceFactoryBean: org.springframework.core.convert.ConversionService getObject()> -> _SOURCES_
<org.springframework.jdbc.core.JdbcTemplate: java.lang.Object execute(java.lang.String,org.springframework.jdbc.core.PreparedStatementCallback)> -> _CWE078__CWE089__SINKS_
<org.springframework.orm.hibernate3.SessionHolder: org.hibernate.FlushMode getPreviousFlushMode()> -> _SOURCES_
<org.springframework.jms.connection.ConnectionFactoryUtils: void releaseConnection(javax.jms.Connection,javax.jms.ConnectionFactory,boolean)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.core.io.support.VfsPatternUtils: java.lang.String getPath(java.lang.Object)> -> _SOURCES_
<org.springframework.web.servlet.support.WebContentGenerator: void setUseCacheControlHeader(boolean)> -> _SINKS_
<org.springframework.expression.spel.support.StandardEvaluationContext: void setTypeComparator(org.springframework.expression.TypeComparator)> -> _SINKS_
<org.springframework.http.converter.xml.AbstractJaxb2HttpMessageConverter: javax.xml.bind.Marshaller createMarshaller(java.lang.Class)> -> _SOURCES_
<org.springframework.test.web.client.match.JsonPathRequestMatchers: org.springframework.test.web.client.RequestMatcher exists()> -> _SOURCES_
<org.springframework.orm.toplink.LocalSessionFactoryBean: void setJdbcExceptionTranslator(org.springframework.jdbc.support.SQLExceptionTranslator)> -> _SINKS_
<org.springframework.orm.hibernate3.HibernateTemplate: java.util.List loadAll(java.lang.Class)> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.X509Configurer: org.springframework.security.config.'annotation'.web.configurers.X509Configurer authenticationDetailsSource(org.springframework.security.authentication.AuthenticationDetailsSource)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.security.access.event.AuthorizedEvent: java.util.Collection getConfigAttributes()> -> _SOURCES_
<org.springframework.http.client.BufferingClientHttpRequestWrapper: org.springframework.http.HttpMethod getMethod()> -> _SOURCES_
<org.springframework.web.context.request.FacesRequestAttributes: void setAttribute(java.lang.String,java.lang.Object,int)> -> _CWE079__SINKS_
<org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurer: org.springframework.security.web.authentication.session.SessionAuthenticationStrategy getSessionAuthenticationStrategy(org.springframework.security.config.'annotation'.web.HttpSecurityBuilder)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES_
<org.springframework.web.servlet.support.SessionFlashMapManager: void updateFlashMaps(java.util.List,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletContext: java.util.Enumeration getInitParameterNames()> -> _SOURCES_
<org.springframework.jms.core.JmsTemplate102: javax.jms.Connection getConnection(org.springframework.jms.connection.JmsResourceHolder)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.remoting.jaxws.JaxWsPortClientInterceptor: void setJaxWsService(javax.xml.ws.Service)> -> _SINKS_
<org.springframework.beans.BeanMetadataAttribute: void setSource(java.lang.Object)> -> _SINKS_
<org.springframework.security.authentication.encoding.LdapShaPasswordEncoder: java.lang.String encodePassword(java.lang.String,java.lang.Object)> -> _SANITIZERS_
<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: java.lang.Object getCacheKey(java.lang.Class,java.lang.String)> -> _SOURCES_
<org.springframework.remoting.rmi.RmiRegistryFactoryBean: void setHost(java.lang.String)> -> _SINKS_
<org.springframework.beans.support.RefreshablePagedListHolder: java.lang.Object getFilter()> -> _SOURCES_
<org.springframework.security.config.authentication.AuthenticationManagerBeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SINKS_
<org.springframework.orm.hibernate3.HibernateTemplate: int bulkUpdate(java.lang.String)> -> _SINKS_
<org.springframework.orm.ibatis.SqlMapClientFactoryBean: void setMappingLocations(org.springframework.core.io.Resource[])> -> _SINKS_
<org.springframework.scripting.support.ScriptFactoryPostProcessor: int getOrder()> -> _SOURCES_
<org.springframework.expression.spel.InternalParseException: org.springframework.expression.spel.SpelParseException getCause()> -> _SOURCES_
<org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor: void setQueueCapacity(int)> -> _SINKS_
<org.springframework.web.servlet.tags.HtmlEscapingAwareTag: java.lang.String htmlEscape(java.lang.String)> -> _SANITIZERS__CWE079_
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapKeyReturnType(java.lang.reflect.Method,int)> -> _SOURCES_
<org.springframework.web.portlet.bind.MissingPortletRequestParameterException: java.lang.String getMessage()> -> _SOURCES_
<org.springframework.cglib.core.ReflectUtils: org.springframework.cglib.core.MethodInfo getMethodInfo(java.lang.reflect.Member)> -> _SOURCES_
<org.springframework.scheduling.concurrent.ScheduledExecutorTask: java.util.concurrent.TimeUnit getTimeUnit()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.OptionsTag: void setItemLabel(java.lang.String)> -> _SINKS_
<org.springframework.aop.interceptor.AbstractTraceInterceptor: void setHideProxyClassNames(boolean)> -> _SINKS_
<org.springframework.beans.factory.BeanDefinitionStoreException: java.lang.String getResourceDescription()> -> _SOURCES_
<org.springframework.oxm.jaxb.Jaxb2Marshaller: void setSupportDtd(boolean)> -> _SINKS_
<org.springframework.format.datetime.standard.YearMonthFormatter: java.time.YearMonth parse(java.lang.String,java.util.Locale)> -> _SINKS_
<org.springframework.jmx.support.JmxUtils: java.lang.Class getClassToExpose(java.lang.Object)> -> _SOURCES_
<org.springframework.cache.support.AbstractCacheManager: org.springframework.cache.Cache getCache(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.view.tiles2.TilesConfigurer: void setDefinitions(java.lang.String[])> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortalContext: java.util.Enumeration getPropertyNames()> -> _SOURCES_
<org.springframework.mail.SimpleMailMessage: void setTo(java.lang.String[])> -> _SINKS_
<org.springframework.mock.web.MockServletContext: int getEffectiveMajorVersion()> -> _SOURCES_
<org.springframework.test.web.client.AbstractRequestExpectationManager: java.util.List getExpectations()> -> _SOURCES_
<org.springframework.orm.toplink.SessionBrokerSessionFactory: oracle.toplink.sessions.Session getMasterSession()> -> _SOURCES_
<org.springframework.expression.spel.ast.SpelNodeImpl: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.jms.connection.TransactionAwareConnectionFactoryProxy: javax.jms.TopicConnection createTopicConnection(java.lang.String,java.lang.String)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.util.DefaultUriTemplateHandler: void setParsePath(boolean)> -> _SINKS_
<org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession: int getTextMessageSizeLimit()> -> _SOURCES_
<org.springframework.messaging.support.MessageHeaderAccessor: java.lang.Object getErrorChannel()> -> _SOURCES_
<org.springframework.asm.Type: java.lang.String getMethodDescriptor(java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.web.context.support.ServletContextResource: java.lang.String getFilename()> -> _SOURCES_
<org.springframework.messaging.simp.config.SimpleBrokerRegistration: org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler getMessageHandler(org.springframework.messaging.SubscribableChannel)> -> _SOURCES_
<org.springframework.messaging.support.AbstractHeaderMapper: java.lang.Object getHeaderIfAvailable(java.util.Map,java.lang.String,java.lang.Class)> -> _SOURCES_
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getCollectionReturnType(java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.context.event.AbstractApplicationEventMulticaster: void setConcurrentUpdates(boolean)> -> _SINKS_
<org.springframework.core.io.VfsUtils: java.io.InputStream getInputStream(java.lang.Object)> -> _SOURCES_
<org.springframework.core.PrioritizedParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.web.socket.client.standard.EndpointConnectionManager: org.springframework.core.task.TaskExecutor getTaskExecutor()> -> _SOURCES_
<org.springframework.web.socket.messaging.StompSubProtocolHandler: org.springframework.messaging.simp.stomp.StompHeaderAccessor convertConnectAcktoStompConnected(org.springframework.messaging.simp.stomp.StompHeaderAccessor)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: void setPlaceholderPrefix(java.lang.String)> -> _SINKS_
<org.springframework.web.portlet.mvc.AbstractController: void setSynchronizeOnSession(boolean)> -> _SINKS_
<org.springframework.oxm.jaxb.Jaxb2Marshaller: javax.xml.bind.Unmarshaller createUnmarshaller()> -> _SOURCES_
<org.springframework.remoting.jaxrpc.JaxRpcPortClientInterceptor: void setEndpointAddress(java.lang.String)> -> _SINKS_
<org.springframework.jmx.export.metadata.ManagedMetric: java.lang.String getPersistPolicy()> -> _SOURCES_
<org.springframework.orm.jdo.support.SpringPersistenceManagerProxyBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.jms.listener.DefaultMessageListenerContainer: void setCacheLevel(int)> -> _SINKS_
<org.springframework.aop.support.AopUtils: java.lang.Class getTargetClass(java.lang.Object)> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler: org.springframework.web.servlet.mvc.method.'annotation'.ResponseBodyEmitterAdapter getAdapterFor(java.lang.Class)> -> _SOURCES__CWE601_
<org.springframework.asm.TypePath: int getStepArgument(int)> -> _SOURCES_
<org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: void setJpaPropertyMap(java.util.Map)> -> _SINKS_
<org.springframework.jms.config.JmsListenerEndpointRegistrar: void setContainerFactory(org.springframework.jms.config.JmsListenerContainerFactory)> -> _SINKS_
<org.springframework.jms.listener.endpoint.JmsActivationSpecConfig: void setAcknowledgeMode(int)> -> _SINKS_
<org.springframework.cache.interceptor.BeanFactoryCacheOperationSourceAdvisor: void setClassFilter(org.springframework.aop.ClassFilter)> -> _SINKS_
<org.springframework.aop.support.AbstractExpressionPointcut: void setExpression(java.lang.String)> -> _SINKS_
<org.springframework.core.Constants: java.util.Set getNames(java.lang.String)> -> _SOURCES_
<org.springframework.aop.aspectj.annotation.InstantiationModelAwarePointcutAdvisorImpl: org.springframework.aop.aspectj.'annotation'.AspectMetadata getAspectMetadata()> -> _SOURCES_
<org.springframework.cglib.core.DefaultGeneratorStrategy: org.springframework.asm.ClassWriter getClassWriter()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.ExceptionHandlingConfigurer: org.springframework.security.web.AuthenticationEntryPoint getAuthenticationEntryPoint()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES_
<org.springframework.aop.support.DynamicMethodMatcherPointcut: org.springframework.aop.MethodMatcher getMethodMatcher()> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.AbstractClientSockJsSession: void handleCloseFrame(org.springframework.web.socket.sockjs.frame.SockJsFrame)> -> _SINKS_
<org.springframework.oxm.jaxb.Jaxb2Marshaller: void setUnmarshallerProperties(java.util.Map)> -> _SINKS_
<org.springframework.mock.web.MockServletContext: void setMajorVersion(int)> -> _SINKS_
<org.springframework.scripting.bsh.BshScriptFactory: java.lang.Class[] getScriptInterfaces()> -> _SOURCES_
<org.springframework.test.web.client.DefaultRequestExpectation: org.springframework.test.web.client.DefaultRequestExpectation$RequestCount getRequestCount()> -> _SOURCES_
<org.springframework.format.datetime.standard.Jsr310DateTimeFormatAnnotationFormatterFactory: java.time.format.DateTimeFormatter getFormatter(org.springframework.format.'annotation'.DateTimeFormat,java.lang.Class)> -> _SOURCES_
<org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)> -> _SINKS_
<org.springframework.mock.web.portlet.ServletWrappingPortletContext: java.io.InputStream getResourceAsStream(java.lang.String)> -> _SOURCES_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: java.sql.Date getDate(java.lang.String,java.util.Calendar)> -> _CWE089__SOURCES_
<org.springframework.format.datetime.joda.PeriodFormatter: java.lang.String print(java.lang.Object,java.util.Locale)> -> _SINKS_
<org.springframework.orm.hibernate4.LocalSessionFactoryBean: void setAnnotatedClasses(java.lang.Class[])> -> _SINKS_
<org.springframework.remoting.httpinvoker.HttpComponentsHttpInvokerRequestExecutor: org.apache.http.client.config.RequestConfig mergeRequestConfig(org.apache.http.client.config.RequestConfig)> -> _SOURCES_
<org.springframework.jdbc.core.JdbcTemplate: java.lang.Object execute(java.lang.String,org.springframework.jdbc.core.CallableStatementCallback)> -> _CWE078__CWE089__SINKS_
<org.springframework.format.support.FormattingConversionService: void setEmbeddedValueResolver(org.springframework.util.StringValueResolver)> -> _SINKS_
<org.springframework.core.annotation.AnnotatedElementUtils: org.springframework.util.MultiValueMap getAllAnnotationAttributes(java.lang.reflect.AnnotatedElement,java.lang.String,boolean,boolean)> -> _SOURCES_
<org.springframework.jdbc.core.support.JdbcDaoSupport: java.sql.Connection getConnection()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__SOURCES__CWE862_
<org.springframework.web.servlet.tags.form.AbstractHtmlInputElementTag: java.lang.String getOnfocus()> -> _CWE079__SOURCES_
<org.springframework.messaging.simp.stomp.StompHeaders: java.lang.String getFirst(java.lang.String)> -> _SOURCES_
<org.springframework.cache.interceptor.AbstractCacheResolver: org.springframework.cache.CacheManager getCacheManager()> -> _SOURCES_
<org.springframework.web.servlet.mvc.condition.CompositeRequestCondition: org.springframework.web.servlet.mvc.condition.CompositeRequestCondition combine(org.springframework.web.servlet.mvc.condition.CompositeRequestCondition)> -> _SINKS_
<org.springframework.orm.hibernate5.HibernateTemplate: int getMaxResults()> -> _SOURCES_
<org.springframework.web.servlet.view.UrlBasedViewResolver: java.lang.Class getViewClass()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletRequest: void setUserPrincipal(java.security.Principal)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletResponse: java.util.Set getXmlPropertyNames()> -> _SOURCES__CWE601_
<org.springframework.http.HttpHeaders: java.util.List getValuesAsList(java.lang.String)> -> _SOURCES_
<org.springframework.format.datetime.joda.JodaDateTimeFormatAnnotationFormatterFactory: org.springframework.format.Parser getParser(java.lang.'annotation'.Annotation,java.lang.Class)> -> _SOURCES__SINKS_
<org.springframework.jms.listener.DefaultMessageListenerContainer102: javax.jms.MessageConsumer createConsumer(javax.jms.Session,javax.jms.Destination)> -> _SOURCES_
<org.springframework.orm.jpa.persistenceunit.MutablePersistenceUnitInfo: void setPersistenceProviderPackageName(java.lang.String)> -> _SINKS_
<org.springframework.jmx.export.MBeanExporter: void setListeners(org.springframework.jmx.export.MBeanExporterListener[])> -> _SINKS_
<org.springframework.core.type.StandardClassMetadata: java.lang.String[] getInterfaceNames()> -> _SOURCES_
<org.springframework.cache.annotation.SpringCacheAnnotationParser: java.util.Collection parseCacheAnnotations(org.springframework.cache.'annotation'.SpringCacheAnnotationParser$DefaultCacheConfig,java.lang.reflect.AnnotatedElement)> -> _SOURCES__SINKS_
<org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator: void setIncludePatterns(java.util.List)> -> _SINKS_
<org.springframework.web.servlet.view.ContentNegotiatingViewResolver: java.util.List getCandidateViews(java.lang.String,java.util.Locale,java.util.List)> -> _SOURCES_
<org.springframework.beans.factory.xml.XmlBeanDefinitionReader: int loadBeanDefinitions(org.springframework.core.io.support.EncodedResource)> -> _SOURCES_
<org.springframework.cglib.core.TypeUtils: java.lang.String getClassName(org.springframework.asm.Type)> -> _SOURCES_
<org.springframework.messaging.handler.HandlerMethod: java.lang.Class getBeanType()> -> _SOURCES_
<org.springframework.expression.spel.standard.SpelCompiler: void dump(java.lang.String,java.lang.String,byte[])> -> _SINKS_
<org.springframework.scripting.support.StandardScriptEvaluator: void setEngineName(java.lang.String)> -> _SINKS_
<org.springframework.core.io.FileSystemResource: java.io.File getFile()> -> _SOURCES_
<org.springframework.remoting.jaxws.JaxWsPortClientInterceptor: javax.xml.namespace.QName getPortQName()> -> _SOURCES_
<org.springframework.expression.common.CompositeStringExpression: java.lang.Class getValueType(org.springframework.expression.EvaluationContext)> -> _SOURCES_
<org.springframework.web.cors.CorsConfiguration: void setMaxAge(java.lang.Long)> -> _SINKS_
<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder servletPath(java.lang.String)> -> _SOURCES_
<org.springframework.web.context.support.AbstractRefreshableWebApplicationContext: java.lang.String getNamespace()> -> _SOURCES_
<org.springframework.http.converter.xml.SourceHttpMessageConverter: javax.xml.transform.stream.StreamSource readStreamSource(java.io.InputStream)> -> _SOURCES_
<org.springframework.jca.cci.connection.SingleConnectionFactory: void prepareConnection(javax.resource.cci.Connection)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.socket.sockjs.transport.session.WebSocketServerSockJsSession: void sendMessageInternal(java.lang.String)> -> _SINKS_
<org.springframework.web.client.RestTemplate: java.net.URI postForLocation(java.net.URI,java.lang.Object)> -> _SINKS_
<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: java.lang.Object parsePropertyValue(org.w3c.dom.Element,org.springframework.beans.factory.config.BeanDefinition,java.lang.String)> -> _SOURCES__SINKS_
<org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean: void setAutoDetectGettersSetters(boolean)> -> _SINKS_
<org.springframework.transaction.jta.JtaTransactionManager: void setTransactionManagerName(java.lang.String)> -> _SINKS_
<org.springframework.jms.listener.AbstractPollingMessageListenerContainer: void setReceiveTimeout(long)> -> _SINKS_
<org.springframework.messaging.tcp.reactor.Reactor2TcpConnection: org.springframework.util.concurrent.ListenableFuture send(org.springframework.messaging.Message)> -> _SINKS_
<org.springframework.mock.web.portlet.MockClientDataRequest: java.lang.String getContentType()> -> _SOURCES_
<org.springframework.aop.support.AbstractRegexpMethodPointcut: void setExcludedPatterns(java.lang.String[])> -> _SINKS_
<org.springframework.web.socket.sockjs.client.SockJsClient: org.springframework.web.socket.sockjs.frame.SockJsMessageCodec getMessageCodec()> -> _SOURCES_
<org.springframework.jmx.export.MBeanExporter: void setAutodetectMode(int)> -> _SINKS_
<org.springframework.web.socket.sockjs.transport.handler.JsonpPollingTransportHandler: void handleRequestInternal(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletConfig: java.util.Enumeration getProcessingEventQNames()> -> _SOURCES_
<org.springframework.test.web.client.match.JsonPathRequestMatchers: org.springframework.test.web.client.RequestMatcher value(org.hamcrest.Matcher)> -> _SOURCES_
<org.springframework.remoting.jaxrpc.JaxRpcPortClientInterceptor: void setCustomProperties(java.util.Properties)> -> _SINKS_
<org.springframework.jmx.export.assembler.InterfaceBasedMBeanInfoAssembler: void setInterfaceMappings(java.util.Properties)> -> _SINKS_
<org.springframework.scripting.support.StandardScriptEvaluator: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletResponse: void setNamespace(java.lang.String)> -> _SINKS__CWE601_
<org.springframework.jca.endpoint.GenericMessageEndpointManager: void setActivationSpec(javax.resource.spi.ActivationSpec)> -> _SINKS_
<org.springframework.beans.factory.support.AbstractBeanDefinition: java.lang.String getDestroyMethodName()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockBaseURL: void setParameter(java.lang.String,java.lang.String[])> -> _SINKS_
<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: void setIgnoreUnresolvablePlaceholders(boolean)> -> _SINKS_
<org.springframework.security.config.annotation.web.configurers.openid.OpenIDLoginConfigurer: org.openid4java.consumer.ConsumerManager getConsumerManager()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: void updateCorsConfig(org.springframework.web.cors.CorsConfiguration,org.springframework.web.bind.'annotation'.CrossOrigin)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor: java.lang.Object resolveArgument(org.springframework.core.MethodParameter,org.springframework.web.method.support.ModelAndViewContainer,org.springframework.web.context.request.NativeWebRequest,org.springframework.web.bind.support.WebDataBinderFactory)> -> _SINKS_
<org.springframework.util.xml.AbstractXMLStreamReader: java.lang.String getElementText()> -> _SOURCES_
<org.springframework.jms.core.support.JmsGatewaySupport: javax.jms.ConnectionFactory getConnectionFactory()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.web.socket.client.WebSocketConnectionManager: void closeConnection()> -> _CWE306__AUTHENTICATIONS_TO_LOW__CWE862_
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: java.lang.reflect.Member getLastReadInvokerPair()> -> _SOURCES_
<org.springframework.web.socket.messaging.StompSubProtocolHandler: org.springframework.messaging.support.MessageHeaderInitializer getHeaderInitializer()> -> _SOURCES_
<org.springframework.transaction.annotation.SpringTransactionAnnotationParser: org.springframework.transaction.interceptor.TransactionAttribute parseTransactionAnnotation(java.lang.reflect.AnnotatedElement)> -> _SOURCES_
<org.springframework.web.socket.client.standard.EndpointConnectionManager: void setSupportedProtocols(java.lang.String[])> -> _CWE079__SINKS_
<org.springframework.web.servlet.mvc.method.RequestMappingInfo: org.springframework.web.servlet.mvc.condition.RequestCondition getCustomCondition()> -> _SOURCES_
<org.springframework.expression.common.LiteralExpression: void setValue(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)> -> _SINKS_
<org.springframework.core.env.AbstractPropertyResolver: java.lang.Object getRequiredProperty(java.lang.String,java.lang.Class)> -> _SOURCES_
<org.springframework.orm.jdo.JdoTemplate: java.lang.Object execute(org.springframework.orm.jdo.JdoCallback)> -> _CWE078__SINKS_
<org.springframework.web.servlet.support.RequestContext: java.lang.String getRequestUri()> -> _SOURCES_
<org.springframework.aop.aspectj.AspectJExpressionPointcutAdvisor: void setLocation(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.support.SQLErrorCodes: java.lang.String[] getBadSqlGrammarCodes()> -> _CWE089__SOURCES_
<org.springframework.mock.web.MockServletContext: void log(java.lang.Exception,java.lang.String)> -> _SINKS_
<org.springframework.http.client.InterceptingAsyncClientHttpRequestFactory: org.springframework.http.client.AsyncClientHttpRequest createAsyncRequest(java.net.URI,org.springframework.http.HttpMethod)> -> _SOURCES_
<org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder: org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder setValidator(org.springframework.validation.Validator)> -> _SINKS_
<org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean: void setSerializers(com.fasterxml.jackson.databind.JsonSerializer[])> -> _SINKS_
<org.springframework.context.support.AbstractApplicationContext: void setParent(org.springframework.context.ApplicationContext)> -> _SINKS_
<org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler: void setValidator(org.springframework.validation.Validator)> -> _SINKS_
<org.springframework.web.socket.server.standard.AbstractStandardUpgradeStrategy: void upgrade(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,java.lang.String,java.util.List,java.security.Principal,org.springframework.web.socket.WebSocketHandler,java.util.Map)> -> _SINKS_
<org.springframework.jmx.export.metadata.ManagedMetric: int getPersistPeriod()> -> _SOURCES_
<org.springframework.web.context.request.ServletWebRequest: javax.servlet.http.HttpServletResponse getResponse()> -> _SOURCES_
<org.springframework.messaging.simp.config.StompBrokerRelayRegistration: org.springframework.messaging.simp.config.StompBrokerRelayRegistration setAutoStartup(boolean)> -> _SINKS_
<org.springframework.expression.spel.standard.SpelExpression: org.springframework.core.convert.TypeDescriptor getValueTypeDescriptor(org.springframework.expression.EvaluationContext,java.lang.Object)> -> _SOURCES_
<org.springframework.web.servlet.view.tiles2.TilesConfigurer: void setCheckRefresh(boolean)> -> _SINKS_
<org.springframework.orm.hibernate4.support.OpenSessionInViewFilter: java.lang.String getSessionFactoryBeanName()> -> _SOURCES_
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapValueFieldType(java.lang.reflect.Field,int)> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.AbstractClientSockJsSession: java.lang.String getId()> -> _SOURCES_
<org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl: java.util.Collection getReachableGrantedAuthorities(java.util.Collection)> -> _SOURCES_
<org.springframework.core.convert.ConversionFailedException: java.lang.Object getValue()> -> _SOURCES_
<org.springframework.web.portlet.mvc.PortletWrappingController: void setPortletClass(java.lang.Class)> -> _SINKS_
<org.springframework.web.jsf.el.WebApplicationContextFacesELResolver: java.lang.Object getValue(javax.el.ELContext,java.lang.Object,java.lang.Object)> -> _SOURCES_
<org.springframework.jca.context.SpringContextResourceAdapter: void setContextConfigLocation(java.lang.String)> -> _SINKS_
<org.springframework.messaging.simp.annotation.support.SendToMethodReturnValueHandler: java.lang.String getUserName(org.springframework.messaging.Message,org.springframework.messaging.MessageHeaders)> -> _SOURCES_
<org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor: void setExecutor(java.util.concurrent.Executor)> -> _SINKS_
<org.springframework.scheduling.concurrent.ForkJoinPoolFactoryBean: void setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)> -> _SINKS_
<org.springframework.util.xml.XMLEventStreamReader: javax.xml.stream.events.Attribute getAttribute(int)> -> _SOURCES_
<org.springframework.cache.interceptor.AbstractCacheInvoker: void setErrorHandler(org.springframework.cache.interceptor.CacheErrorHandler)> -> _SINKS_
<org.springframework.scripting.support.StandardScriptUtils: javax.script.Bindings getBindings(java.util.Map)> -> _SOURCES_
<org.springframework.web.socket.config.annotation.AbstractWebSocketHandlerRegistration: org.springframework.web.socket.config.'annotation'.WebSocketHandlerRegistration setAllowedOrigins(java.lang.String[])> -> _SINKS_
<org.springframework.orm.hibernate4.support.AsyncRequestInterceptor: boolean handleTimeout(org.springframework.web.context.request.NativeWebRequest,org.springframework.web.context.request.async.DeferredResult)> -> _SINKS_
<org.springframework.test.web.servlet.DefaultMvcResult: java.lang.Object getAsyncResult(long)> -> _SOURCES_
<org.springframework.orm.jpa.persistenceunit.MutablePersistenceUnitInfo: java.lang.ClassLoader getNewTempClassLoader()> -> _SOURCES_
<org.springframework.web.client.RestTemplate: java.lang.Object getForObject(java.net.URI,java.lang.Class)> -> _SOURCES__SINKS_
<org.springframework.util.MimeType: java.nio.charset.Charset getCharSet()> -> _SOURCES_
<org.springframework.jca.cci.connection.DelegatingConnectionFactory: void setReference(javax.naming.Reference)> -> _SINKS_
<org.springframework.web.socket.client.jetty.JettyWebSocketClient: java.security.Principal getUser()> -> _SOURCES_
<org.springframework.web.servlet.view.script.ScriptTemplateConfigurer: void setRenderFunction(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.portlet.MockResourceRequest: void setResourceID(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.scripting.jruby.JRubyScriptFactory: java.lang.Class getScriptedObjectType(org.springframework.scripting.ScriptSource)> -> _SOURCES_
<org.springframework.mail.SimpleMailMessage: void setCc(java.lang.String[])> -> _SINKS_
<org.springframework.aop.aspectj.AspectJExpressionPointcut: java.lang.String replaceBooleanOperators(java.lang.String)> -> _SANITIZERS__SINKS_
<org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler: java.lang.String getVirtualHost()> -> _SOURCES_
<org.springframework.util.LinkedMultiValueMap: void set(java.lang.Object,java.lang.Object)> -> _SINKS_
<org.springframework.aop.aspectj.AbstractAspectJAdvice: void setThrowingNameNoCheck(java.lang.String)> -> _SINKS_
<org.springframework.jms.connection.UserCredentialsConnectionFactoryAdapter: void setTargetConnectionFactory(javax.jms.ConnectionFactory)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.jndi.JndiObjectFactoryBean: void setProxyInterfaces(java.lang.Class[])> -> _SINKS_
<org.springframework.web.portlet.bind.PortletRequestUtils: boolean getRequiredBooleanParameter(javax.portlet.PortletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.core.task.SimpleAsyncTaskExecutor: void doExecute(java.lang.Runnable)> -> _SINKS_
<org.springframework.jms.listener.AbstractMessageListenerContainer: void setExposeListenerSession(boolean)> -> _SINKS_
<org.springframework.orm.jpa.vendor.OpenJpaDialect: org.springframework.jdbc.datasource.ConnectionHandle getJdbcConnection(javax.persistence.EntityManager,boolean)> -> _CWE306__SOURCES__CWE862_
<org.springframework.context.support.GenericApplicationContext: org.springframework.beans.factory.support.DefaultListableBeanFactory getDefaultListableBeanFactory()> -> _SOURCES_
<org.springframework.web.context.support.ServletContextParameterFactoryBean: void setServletContext(javax.servlet.ServletContext)> -> _SINKS_
<org.springframework.http.converter.ResourceRegionHttpMessageConverter: org.springframework.http.MediaType getDefaultContentType(java.lang.Object)> -> _SOURCES_
<org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler: boolean includeReadAttribute(java.lang.reflect.Method,java.lang.String)> -> _SOURCES_
<org.springframework.jmx.export.assembler.AbstractReflectiveMBeanInfoAssembler: javax.management.modelmbean.ModelMBeanOperationInfo[] getOperationInfo(java.lang.Object,java.lang.String)> -> _SOURCES_
<org.springframework.ui.velocity.VelocityEngineFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.web.socket.adapter.jetty.JettyWebSocketSession: java.net.InetSocketAddress getLocalAddress()> -> _SOURCES_
<org.springframework.util.xml.StaxStreamHandler: void processingInstructionInternal(java.lang.String,java.lang.String)> -> _SINKS_
<org.springframework.web.socket.handler.AbstractWebSocketHandler: void handleTextMessage(org.springframework.web.socket.WebSocketSession,org.springframework.web.socket.TextMessage)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: org.springframework.web.bind.support.WebDataBinderFactory getDataBinderFactory(org.springframework.web.method.HandlerMethod)> -> _SOURCES_
<org.springframework.jdbc.core.metadata.CallMetaDataContext: void setProcedureName(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.jms.listener.AbstractJmsListeningContainer: void prepareSharedConnection(javax.jms.Connection)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.beans.factory.support.GenericTypeAwareAutowireCandidateResolver: org.springframework.beans.factory.BeanFactory getBeanFactory()> -> _SOURCES_
<org.springframework.context.event.EventExpressionRootObject: org.springframework.context.ApplicationEvent getEvent()> -> _SOURCES_
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: org.springframework.beans.factory.BeanFactory getParentBeanFactory()> -> _SOURCES_
<org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl: void setUsernameBasedPrimaryKey(boolean)> -> _CWE089__SINKS__CWE862_
<org.springframework.orm.ibatis.support.BlobSerializableTypeHandler: java.lang.Object getResultInternal(java.sql.ResultSet,int,org.springframework.jdbc.support.lob.LobHandler)> -> _SOURCES_
<org.springframework.asm.commons.Method: java.lang.String getDescriptor()> -> _SOURCES_
<org.springframework.expression.spel.ast.InlineMap: java.util.Map getConstantValue()> -> _SOURCES_
<org.springframework.orm.ibatis.SqlMapClientTemplate: com.ibatis.common.util.PaginatedList queryForPaginatedList(java.lang.String,java.lang.Object,int)> -> _SINKS_
<org.springframework.web.servlet.view.document.AbstractXlsView: org.apache.poi.ss.usermodel.Workbook createWorkbook(java.util.Map,javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.orm.jpa.vendor.OpenJpaDialect: org.apache.openjpa.persistence.OpenJPAEntityManager getOpenJPAEntityManager(javax.persistence.EntityManager)> -> _SOURCES_
<org.springframework.http.client.SimpleClientHttpRequestFactory: void setBufferRequestBody(boolean)> -> _SINKS_
<org.springframework.format.datetime.standard.MonthDayFormatter: java.lang.String print(java.lang.Object,java.util.Locale)> -> _SINKS_
<org.springframework.validation.BindingResultUtils: org.springframework.validation.BindingResult getRequiredBindingResult(java.util.Map,java.lang.String)> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.X509Configurer: org.springframework.security.web.authentication.preauth.x509.X509AuthenticationFilter getFilter(org.springframework.security.authentication.AuthenticationManager)> -> _SOURCES_
<org.springframework.web.context.support.WebApplicationContextUtils: org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.servlet.ServletContext,java.lang.String)> -> _SOURCES_
<org.springframework.asm.commons.Method: org.springframework.asm.commons.Method getMethod(java.lang.String)> -> _SOURCES_
<org.springframework.jmx.export.assembler.AbstractMBeanInfoAssembler: java.lang.String getDescription(java.lang.Object,java.lang.String)> -> _SOURCES_
<org.springframework.remoting.jaxrpc.support.AxisBeanMappingServicePostProcessor: void setBeanClasses(java.lang.Class[])> -> _SINKS_
<org.springframework.context.annotation.ConfigurationClass: java.util.Map getImportBeanDefinitionRegistrars()> -> _SOURCES_
<org.springframework.jms.listener.endpoint.JmsActivationSpecConfig: void setPubSubDomain(boolean)> -> _SINKS_
<org.springframework.jca.support.ResourceAdapterFactoryBean: void setXaTerminator(javax.resource.spi.XATerminator)> -> _SINKS_
<org.springframework.context.support.MessageSourceAccessor: java.lang.String getMessage(java.lang.String,java.lang.Object[],java.util.Locale)> -> _SOURCES_
<org.springframework.orm.jpa.vendor.AbstractJpaVendorAdapter: java.lang.String getPersistenceProviderRootPackage()> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanDefinition: void setInitMethodName(java.lang.String)> -> _SINKS_
<org.springframework.format.datetime.joda.JodaTimeContextHolder: org.springframework.format.datetime.joda.JodaTimeContext getJodaTimeContext()> -> _SOURCES_
<org.springframework.core.annotation.AnnotationAttributes: java.lang.Class[] getAliasedClassArray(java.lang.String,java.lang.Class,java.lang.Object)> -> _SOURCES_
<org.springframework.core.task.SimpleAsyncTaskExecutor: void execute(java.lang.Runnable)> -> _CWE078__SINKS_
<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: void setEnvironmentMap(java.util.Map)> -> _SINKS_
<org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractorAdapter: java.sql.PreparedStatement getNativePreparedStatement(java.sql.PreparedStatement)> -> _CWE089__SOURCES_
<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: void setAdvisorAdapterRegistry(org.springframework.aop.framework.adapter.AdvisorAdapterRegistry)> -> _SINKS_
<org.springframework.jmx.support.MBeanRegistrationSupport: void setRegistrationBehavior(int)> -> _SINKS_
<org.springframework.web.servlet.tags.UrlTag: void setContext(java.lang.String)> -> _SINKS_
<org.springframework.test.web.servlet.htmlunit.webdriver.WebConnectionHtmlUnitDriver: void setWebConnection(com.gargoylesoftware.htmlunit.WebConnection)> -> _CWE306__CWE079__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.view.json.AbstractJackson2View: void renderMergedOutputModel(java.util.Map,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)> -> _SINKS_
<org.springframework.context.annotation.ConfigurationClassPostProcessor: void setProblemReporter(org.springframework.beans.factory.parsing.ProblemReporter)> -> _SINKS_
<org.springframework.web.servlet.mvc.AbstractUrlViewController: void setUrlDecode(boolean)> -> _SOURCES__SINKS_
<org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean: void setSerializationInclusion(com.fasterxml.jackson.'annotation'.JsonInclude$Include)> -> _SINKS_
<org.springframework.beans.support.PagedListHolder: org.springframework.beans.support.SortDefinition getSort()> -> _SOURCES_
<org.springframework.web.servlet.view.AbstractTemplateView: void setAllowRequestOverride(boolean)> -> _SINKS_
<org.springframework.web.servlet.theme.CookieThemeResolver: java.lang.String getDefaultThemeName()> -> _SOURCES_
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: long getStartupDate()> -> _SOURCES_
<org.springframework.beans.factory.config.YamlProcessor: void setMatchDefault(boolean)> -> _SINKS_
<org.springframework.scheduling.backportconcurrent.ThreadPoolTaskExecutor: int getKeepAliveSeconds()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.FormTag: void setAction(java.lang.String)> -> _SINKS_
<org.springframework.util.ResourceUtils: java.io.File getFile(java.net.URI,java.lang.String)> -> _SOURCES_
<org.springframework.test.context.testng.AbstractTransactionalTestNGSpringContextTests: void executeSqlScript(java.lang.String,boolean)> -> _CWE078__SINKS_
<org.springframework.util.LinkedMultiValueMap: java.lang.Object getFirst(java.lang.Object)> -> _SOURCES_
<org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource: void setTargetBeanName(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.support.RequestContextUtils: org.springframework.web.servlet.FlashMap getOutputFlashMap(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.jdbc.support.lob.DefaultLobHandler: byte[] getBlobAsBytes(java.sql.ResultSet,int)> -> _CWE089__SOURCES_
<org.springframework.web.servlet.theme.AbstractThemeResolver: void setDefaultThemeName(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.mvc.multiaction.AbstractUrlMethodNameResolver: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)> -> _SINKS_
<org.springframework.context.support.DelegatingMessageSource: org.springframework.context.MessageSource getParentMessageSource()> -> _SOURCES_
<org.springframework.web.servlet.view.freemarker.FreeMarkerView: void setEncoding(java.lang.String)> -> _SINKS_
<org.springframework.ui.freemarker.FreeMarkerConfigurationFactory: void setTemplateLoaders(freemarker.cache.TemplateLoader[])> -> _SINKS_
<org.springframework.orm.hibernate3.LocalSessionFactoryBean: void setFilterDefinitions(org.hibernate.engine.FilterDefinition[])> -> _SINKS_
<org.springframework.orm.hibernate3.HibernateTemplate: void update(java.lang.Object)> -> _SINKS_
<org.springframework.orm.hibernate5.HibernateTemplate: void setCacheQueries(boolean)> -> _SINKS_
<org.springframework.transaction.jta.ManagedTransactionAdapter: int getStatus()> -> _SOURCES_
<org.springframework.orm.hibernate4.support.OpenSessionInViewInterceptor: void afterConcurrentHandlingStarted(org.springframework.web.context.request.WebRequest)> -> _SINKS_
<org.springframework.asm.commons.GeneratorAdapter: void loadArg(int)> -> _SOURCES_
<org.springframework.orm.jdo.TransactionAwarePersistenceManagerFactoryProxy: javax.jdo.PersistenceManagerFactory getTargetPersistenceManagerFactory()> -> _SOURCES_
<org.springframework.aop.framework.ProxyProcessorSupport: java.lang.ClassLoader getProxyClassLoader()> -> _SOURCES_
<org.springframework.core.annotation.AnnotationUtils: java.util.Map getAnnotationAttributes(java.lang.'annotation'.Annotation)> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: void setOnkeypress(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.web.client.HttpMessageConverterExtractor: org.springframework.http.MediaType getContentType(org.springframework.http.client.ClientHttpResponse)> -> _SOURCES_
<org.springframework.beans.factory.access.el.SpringBeanELResolver: void setValue(javax.el.ELContext,java.lang.Object,java.lang.Object,java.lang.Object)> -> _SINKS_
<org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter: void setHandlerMethod(org.springframework.messaging.handler.invocation.InvocableHandlerMethod)> -> _SINKS_
<org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.web.socket.server.standard.ServerEndpointRegistration: java.util.List getNegotiatedExtensions(java.util.List,java.util.List)> -> _SOURCES_
<org.springframework.web.servlet.mvc.condition.ConsumesRequestCondition: java.lang.String getToStringInfix()> -> _SOURCES_
<org.springframework.test.context.support.TestPropertySourceAttributes: java.lang.String[] getProperties()> -> _SOURCES_
<org.springframework.web.util.HtmlCharacterEntityDecoder: java.lang.String getReferenceSubstring(int)> -> _CWE079__SOURCES_
<org.springframework.jmx.support.ObjectNameManager: javax.management.ObjectName getInstance(java.lang.Object)> -> _SOURCES_
<org.springframework.web.context.support.WebApplicationObjectSupport: javax.servlet.ServletContext getServletContext()> -> _SOURCES_
<org.springframework.test.context.ContextConfigurationAttributes: void setLocations(java.lang.String[])> -> _SINKS_
<org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor: javax.jdo.PersistenceManagerFactory getPersistenceManagerFactory()> -> _SOURCES_
<org.springframework.web.socket.config.annotation.WebSocketConfigurationSupport: void registerWebSocketHandlers(org.springframework.web.socket.config.'annotation'.WebSocketHandlerRegistry)> -> _SINKS_
<org.springframework.web.servlet.tags.UrlTag: void setVar(java.lang.String)> -> _SINKS_
<org.springframework.web.client.RestClientResponseException: java.lang.String getStatusText()> -> _SOURCES__CWE601_
<org.springframework.orm.hibernate5.HibernateTemplate: void load(java.lang.Object,java.io.Serializable)> -> _SOURCES_
<org.springframework.web.servlet.tags.form.InputTag: java.lang.String getAlt()> -> _SOURCES_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: boolean getBoolean(java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean: void setBusinessInterface(java.lang.Class)> -> _SINKS_
<org.springframework.validation.AbstractBindingResult: org.springframework.validation.FieldError getFieldError(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.view.AbstractUrlBasedView: java.lang.String getUrl()> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler: java.lang.String getStatsInfo()> -> _SOURCES_
<org.springframework.jdbc.datasource.IsolationLevelDataSourceAdapter: java.lang.Integer getIsolationLevel()> -> _CWE089__SOURCES_
<org.springframework.security.config.annotation.web.configurers.UrlAuthorizationConfigurer: java.util.List getDecisionVoters(org.springframework.security.config.'annotation'.web.HttpSecurityBuilder)> -> _SOURCES_
<org.springframework.web.servlet.DispatcherServlet: org.springframework.web.servlet.HandlerAdapter getHandlerAdapter(java.lang.Object)> -> _SOURCES_
<org.springframework.beans.factory.config.MethodInvokingBean: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.core.Constants: java.util.Set getValues(java.lang.String)> -> _SOURCES_
<org.springframework.scheduling.quartz.ResourceLoaderClassLoadHelper: java.lang.ClassLoader getClassLoader()> -> _SOURCES_
<org.springframework.security.access.intercept.AbstractSecurityInterceptor: org.springframework.security.core.Authentication authenticateIfRequired()> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.orm.hibernate3.HibernateTransactionManager: void setHibernateManagedSession(boolean)> -> _SINKS_
<org.springframework.security.access.intercept.aspectj.MethodInvocationAdapter: java.lang.reflect.Method getMethod()> -> _SOURCES_
<org.springframework.cache.caffeine.CaffeineCache: com.github.benmanes.caffeine.cache.Cache getNativeCache()> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanDefinitionReader: int loadBeanDefinitions(org.springframework.core.io.Resource[])> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateTemplate: void setCheckWriteOperations(boolean)> -> _SINKS_
<org.springframework.web.socket.CloseStatus: int getCode()> -> _SOURCES_
<org.springframework.expression.spel.standard.SpelExpression: org.springframework.core.convert.TypeDescriptor getValueTypeDescriptor()> -> _SOURCES_
<org.springframework.beans.AbstractNestablePropertyAccessor: void setPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder,org.springframework.beans.PropertyValue)> -> _SINKS_
<org.springframework.web.socket.sockjs.transport.session.WebSocketServerSockJsSession: int getBinaryMessageSizeLimit()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor: java.util.List getVaryRequestHeadersToAdd(org.springframework.http.HttpHeaders,org.springframework.http.HttpHeaders)> -> _SOURCES_
<org.springframework.remoting.jaxws.LocalJaxWsServiceFactory: void setExecutor(java.util.concurrent.Executor)> -> _SINKS_
<org.springframework.orm.toplink.LocalSessionFactory: void setSessionLog(oracle.toplink.sessions.SessionLog)> -> _SINKS_
<org.springframework.http.HttpHeaders: java.util.List get(java.lang.Object)> -> _SOURCES_
<org.springframework.test.web.client.match.MockRestRequestMatchers: org.springframework.test.web.client.RequestMatcher requestTo(java.lang.String)> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateTransactionManager: javax.sql.DataSource getDataSource()> -> _SOURCES_
<org.springframework.jdbc.support.lob.PassThroughClob: void truncate(long)> -> _CWE089__SINKS_
<org.springframework.cache.jcache.interceptor.DefaultCacheInvocationContext: java.util.Set getAnnotations()> -> _SOURCES_
<org.springframework.jms.listener.adapter.MessageListenerAdapter: org.springframework.jms.support.converter.MessageConverter getMessageConverter()> -> _SOURCES_
<org.springframework.jdbc.object.SqlFunction: void setResultType(java.lang.Class)> -> _CWE089__SINKS_
<org.springframework.beans.factory.support.SimpleSecurityContextProvider: java.security.AccessControlContext getAccessControlContext()> -> _SOURCES_
<org.springframework.web.method.support.ModelAndViewContainer: void setRequestHandled(boolean)> -> _SINKS_
<org.springframework.context.support.DelegatingMessageSource: java.lang.String getMessage(org.springframework.context.MessageSourceResolvable,java.util.Locale)> -> _SOURCES_
<org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver: org.springframework.web.servlet.ModelAndView handleNoHandlerFoundException(org.springframework.web.servlet.NoHandlerFoundException,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)> -> _SINKS_
<org.springframework.orm.hibernate5.ConfigurableJtaPlatform: int getCurrentStatus()> -> _SOURCES_
<org.springframework.web.servlet.view.AbstractCachingViewResolver: void setCacheLimit(int)> -> _SINKS_
<org.springframework.jca.cci.core.CciTemplate: java.lang.Object execute(org.springframework.jca.cci.core.ConnectionCallback)> -> _SINKS_
<org.springframework.scheduling.backportconcurrent.ConcurrentTaskExecutor: void setConcurrentExecutor(edu.emory.mathcs.backport.java.util.concurrent.Executor)> -> _SINKS_
<org.springframework.remoting.httpinvoker.HttpComponentsHttpInvokerRequestExecutor: void setHttpClient(org.apache.http.client.HttpClient)> -> _SINKS_
<org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder: org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder setFlashMapManager(org.springframework.web.servlet.FlashMapManager)> -> _SINKS_
<org.springframework.beans.factory.config.BeanDefinitionHolder: org.springframework.beans.factory.config.BeanDefinition getBeanDefinition()> -> _SOURCES_
<org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider: org.springframework.security.core.userdetails.UserDetailsChecker getPostAuthenticationChecks()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.web.portlet.context.StaticPortletApplicationContext: javax.portlet.PortletContext getPortletContext()> -> _SOURCES_
<org.springframework.jms.remoting.JmsInvokerClientInterceptor: void setReceiveTimeout(long)> -> _SINKS_
<org.springframework.jdbc.support.JdbcAccessor: void setExceptionTranslator(org.springframework.jdbc.support.SQLExceptionTranslator)> -> _CWE089__SINKS_
<org.springframework.mock.web.MockHttpServletRequest: javax.servlet.ServletContext getServletContext()> -> _SOURCES_
<org.springframework.jdbc.datasource.SimpleDriverDataSource: java.sql.Connection getConnectionFromDriver(java.util.Properties)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__SOURCES__CWE862_
<org.springframework.orm.ibatis.SqlMapClientTemplate: int update(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.tags.form.AbstractFormTag: java.lang.String getDisplayString(java.lang.Object,java.beans.PropertyEditor)> -> _CWE079__SOURCES_
<org.springframework.core.env.AbstractPropertyResolver: java.lang.String getProperty(java.lang.String,java.lang.String)> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompHeaders: void setServer(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver: java.util.List getAllSupportedMediaTypes(java.util.List)> -> _SOURCES_
<org.springframework.core.io.AbstractFileResolvingResource: java.io.File getFile()> -> _SOURCES_
<org.springframework.beans.BeanMetadataAttributeAccessor: java.lang.Object getAttribute(java.lang.String)> -> _SOURCES_
<org.springframework.test.web.ModelAndViewAssert: void assertModelAttributeAvailable(org.springframework.web.servlet.ModelAndView,java.lang.String)> -> _SINKS_
<org.springframework.beans.factory.config.YamlProcessor: void setResources(org.springframework.core.io.Resource[])> -> _SINKS_
<org.springframework.scheduling.commonj.TimerManagerAccessor: void setTimerManagerName(java.lang.String)> -> _SINKS_
<org.springframework.test.context.web.GenericGroovyXmlWebContextLoader: java.lang.String getResourceSuffix()> -> _SOURCES_
<org.springframework.jms.listener.DefaultMessageListenerContainer: boolean sharedConnectionEnabled()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE862_
<org.springframework.util.DefaultPropertiesPersister: java.lang.String escape(java.lang.String,boolean)> -> _SANITIZERS_
<org.springframework.security.access.intercept.AbstractSecurityInterceptor: void setAlwaysReauthenticate(boolean)> -> _CWE306__SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.cache.guava.GuavaCacheManager: void setCacheSpecification(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.view.json.MappingJackson2JsonView: void setModelKeys(java.util.Set)> -> _SINKS_
<org.springframework.security.authentication.jaas.AbstractJaasAuthenticationProvider: void setLoginContextName(java.lang.String)> -> _CWE306__SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.util.ClassUtils: java.lang.Class getUserClass(java.lang.Object)> -> _SOURCES_
<org.springframework.test.context.support.GenericPropertiesContextLoader: org.springframework.beans.factory.support.BeanDefinitionReader createBeanDefinitionReader(org.springframework.context.support.GenericApplicationContext)> -> _SOURCES_
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.lang.String[] getBeanDefinitionNames()> -> _SOURCES_
<org.springframework.jdbc.BadSqlGrammarException: java.sql.SQLException getSQLException()> -> _CWE089__SOURCES_
<org.springframework.mail.javamail.JavaMailSenderImpl: void doSend(javax.mail.internet.MimeMessage[],java.lang.Object[])> -> _SINKS_
<org.springframework.cglib.core.ReflectUtils: java.beans.PropertyDescriptor[] getBeanProperties(java.lang.Class)> -> _SOURCES_
<org.springframework.web.servlet.view.UrlBasedViewResolver: java.lang.Object getCacheKey(java.lang.String,java.util.Locale)> -> _SOURCES_
<org.springframework.jdbc.support.incrementer.AbstractSequenceMaxValueIncrementer: long getNextKey()> -> _CWE089__SOURCES_
<org.springframework.jdbc.core.simple.SimpleJdbcTemplate: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations getNamedParameterJdbcOperations()> -> _CWE089__SOURCES_
<org.springframework.mail.javamail.MimeMailMessage: void setBcc(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.support.SQLErrorCodes: void setUseSqlStateForTranslation(boolean)> -> _CWE089__SINKS_
<org.springframework.format.datetime.standard.DateTimeContext: java.time.chrono.Chronology getChronology()> -> _SOURCES_
<org.springframework.core.io.DefaultResourceLoader: java.lang.ClassLoader getClassLoader()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockStateAwareResponse: javax.portlet.WindowState getWindowState()> -> _SOURCES__CWE601_
<org.springframework.web.socket.sockjs.client.WebSocketClientSockJsSession: java.util.List getExtensions()> -> _SOURCES_
<org.springframework.transaction.support.AbstractPlatformTransactionManager: org.springframework.transaction.TransactionStatus getTransaction(org.springframework.transaction.TransactionDefinition)> -> _SOURCES_
<org.springframework.http.client.InterceptingAsyncClientHttpRequest: org.springframework.util.concurrent.ListenableFuture executeInternal(org.springframework.http.HttpHeaders,byte[])> -> _CWE078__SINKS_
<org.springframework.web.socket.config.annotation.SockJsServiceRegistration: org.springframework.web.socket.config.'annotation'.SockJsServiceRegistration setSessionCookieNeeded(boolean)> -> _SINKS_
<org.springframework.core.OverridingClassLoader: java.lang.Class loadClass(java.lang.String,boolean)> -> _SOURCES_
<org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.security.core.userdetails.memory.UserAttribute: void setPassword(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: java.util.List getCustomReturnValueHandlers()> -> _SOURCES_
<org.springframework.security.core.authority.mapping.SimpleMappableAttributesRetriever: java.util.Set getMappableAttributes()> -> _SOURCES_
<org.springframework.web.servlet.view.XmlViewResolver: int getOrder()> -> _SOURCES_
<org.springframework.aop.interceptor.AsyncExecutionInterceptor: int getOrder()> -> _SOURCES_
<org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource: java.util.Collection getAllConfigAttributes()> -> _SOURCES_
<org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager: void setDataSourceLookup(org.springframework.jdbc.datasource.lookup.DataSourceLookup)> -> _SINKS_
<org.springframework.mock.http.client.MockClientHttpResponse: int getRawStatusCode()> -> _SOURCES__CWE601_
<org.springframework.jms.config.DefaultJmsListenerContainerFactory: void setBackOff(org.springframework.util.backoff.BackOff)> -> _SINKS_
<org.springframework.core.enums.StaticLabeledEnum: java.lang.String getLabel()> -> _SOURCES_
<org.springframework.aop.aspectj.annotation.InstantiationModelAwarePointcutAdvisorImpl: org.springframework.aop.aspectj.'annotation'.MetadataAwareAspectInstanceFactory getAspectInstanceFactory()> -> _SOURCES_
<org.springframework.web.socket.sockjs.support.AbstractSockJsService: void setAllowedOrigins(java.util.Collection)> -> _SINKS_
<org.springframework.web.portlet.context.PortletRequestAttributes: java.lang.Object getAttribute(java.lang.String,int)> -> _SOURCES_
<org.springframework.web.servlet.tags.form.HiddenInputTag: int writeTagContent(org.springframework.web.servlet.tags.form.TagWriter)> -> _SINKS_
<org.springframework.format.datetime.standard.Jsr310DateTimeFormatAnnotationFormatterFactory: org.springframework.format.Parser getParser(java.lang.'annotation'.Annotation,java.lang.Class)> -> _SOURCES__SINKS_
<org.springframework.jmx.access.MBeanProxyFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.orm.toplink.SessionHolder: oracle.toplink.sessions.Session getSession()> -> _SOURCES_
<org.springframework.cache.jcache.JCacheManagerFactoryBean: javax.cache.CacheManager getObject()> -> _SOURCES_
<org.springframework.orm.hibernate5.HibernateJdbcException: java.sql.SQLException getSQLException()> -> _CWE089__SOURCES_
<org.springframework.web.portlet.context.AbstractRefreshablePortletApplicationContext: javax.portlet.PortletConfig getPortletConfig()> -> _SOURCES_
<org.springframework.web.portlet.context.PortletWebRequest: java.lang.String getContextPath()> -> _CWE079__SOURCES_
<org.springframework.messaging.simp.user.DefaultUserDestinationResolver: org.springframework.messaging.simp.user.DefaultUserDestinationResolver$ParseResult parse(org.springframework.messaging.Message)> -> _SOURCES__SINKS__CWE862_
<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: void setInterceptorNames(java.lang.String[])> -> _SINKS_
<org.springframework.messaging.simp.SimpMessageHeaderAccessor: void setSessionId(java.lang.String)> -> _SINKS_
<org.springframework.http.client.SimpleClientHttpRequestFactory: void prepareConnection(java.net.HttpURLConnection,java.lang.String)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.view.ViewResolverComposite: void setApplicationContext(org.springframework.context.ApplicationContext)> -> _SINKS_
<org.springframework.web.method.annotation.ModelFactory: java.lang.String getNameForParameter(org.springframework.core.MethodParameter)> -> _CWE079__SOURCES_
<org.springframework.web.servlet.support.AbstractDispatcherServletInitializer: javax.servlet.Filter[] getServletFilters()> -> _SOURCES_
<org.springframework.jms.core.support.JmsGatewaySupport: void setConnectionFactory(javax.jms.ConnectionFactory)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.instrument.classloading.ShadowingClassLoader: java.util.Enumeration getResources(java.lang.String)> -> _SOURCES_
<org.springframework.jms.config.AbstractJmsListenerContainerFactory: void setPhase(int)> -> _SINKS_
<org.springframework.core.io.support.ResourceArrayPropertyEditor: void setAsText(java.lang.String)> -> _SINKS_
<org.springframework.scheduling.quartz.SimpleTriggerFactoryBean: void setName(java.lang.String)> -> _SINKS_
<org.springframework.aop.aspectj.SingletonAspectInstanceFactory: java.lang.ClassLoader getAspectClassLoader()> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.handler.SockJsWebSocketHandler: void handleTextMessage(org.springframework.web.socket.WebSocketSession,org.springframework.web.socket.TextMessage)> -> _SINKS_
<org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter: java.lang.Class getEntityManagerFactoryInterface()> -> _SOURCES_
<org.springframework.mock.web.portlet.ServletWrappingPortletContext: java.util.Set getResourcePaths(java.lang.String)> -> _SOURCES_
<org.springframework.remoting.httpinvoker.HttpComponentsHttpInvokerRequestExecutor: java.io.InputStream getResponseBody(org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration,org.apache.http.HttpResponse)> -> _SOURCES_
<org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: javax.persistence.spi.PersistenceUnitInfo getPersistenceUnitInfo()> -> _SOURCES_
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapValueFieldType(java.lang.reflect.Field)> -> _SOURCES_
<org.springframework.mock.http.client.MockClientHttpRequest: java.net.URI getURI()> -> _SOURCES_
<org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.web.servlet.FlashMap: void setTargetRequestPath(java.lang.String)> -> _SINKS_
<org.springframework.core.env.AbstractEnvironment: java.lang.String[] getDefaultProfiles()> -> _SOURCES_
<org.springframework.orm.jpa.JpaAccessor: javax.persistence.EntityManager getEntityManager()> -> _SOURCES_
<org.springframework.web.jsf.FacesContextUtils: org.springframework.web.context.WebApplicationContext getRequiredWebApplicationContext(javax.faces.context.FacesContext)> -> _SOURCES_
<org.springframework.scheduling.quartz.SimpleTriggerBean: org.quartz.JobDetail getJobDetail()> -> _SOURCES_
<org.springframework.transaction.interceptor.TransactionAspectSupport: void setTransactionAttributeSource(org.springframework.transaction.interceptor.TransactionAttributeSource)> -> _SINKS_
<org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor: java.lang.Object getSessionBeanInstance()> -> _SOURCES_
<org.springframework.format.datetime.joda.DateTimeFormatterFactory: void setStyle(java.lang.String)> -> _SINKS_
<org.springframework.web.context.support.StaticWebApplicationContext: java.lang.String getNamespace()> -> _SOURCES_
<org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver: void setLayoutKey(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.MockServletContext: java.lang.String getContextPath()> -> _SOURCES_
<org.springframework.beans.BeanWrapperImpl: void setPropertyValue(org.springframework.beans.PropertyValue)> -> _SINKS_
<org.springframework.oxm.config.XmlBeansMarshallerBeanDefinitionParser: java.lang.String getBeanClassName(org.w3c.dom.Element)> -> _SOURCES_
<org.springframework.web.servlet.handler.HandlerExceptionResolverComposite: java.util.List getExceptionResolvers()> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.DefaultTransportRequest: void setTimeoutValue(long)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver: org.springframework.context.ApplicationContext getApplicationContext()> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer: java.util.List getDeferredResultInterceptors()> -> _SOURCES_
<org.springframework.jndi.JndiObjectLocator: void setJndiName(java.lang.String)> -> _SINKS_
<org.springframework.http.server.ServletServerHttpResponse: javax.servlet.http.HttpServletResponse getServletResponse()> -> _SOURCES__CWE601_
<org.springframework.orm.jpa.vendor.TopLinkJpaVendorAdapter: java.lang.String getPersistenceProviderRootPackage()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: void setCssClass(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.web.util.WebUtils: java.lang.Object getRequiredSessionAttribute(javax.servlet.http.HttpServletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.scheduling.annotation.AsyncResult: org.springframework.util.concurrent.ListenableFuture forExecutionException(java.lang.Throwable)> -> _SINKS_
<org.springframework.web.servlet.view.tiles3.TilesConfigurer: void setPreparerFactoryClass(java.lang.Class)> -> _SINKS_
<org.springframework.web.context.request.ServletRequestAttributes: java.lang.String[] getAttributeNames(int)> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: void setAuthType(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.aop.target.AbstractPoolingTargetSource: org.springframework.aop.support.DefaultIntroductionAdvisor getPoolingConfigMixin()> -> _SOURCES_
<org.springframework.web.servlet.view.UrlBasedViewResolver: java.lang.Boolean getExposeContextBeansAsAttributes()> -> _SOURCES_
<org.springframework.web.socket.config.annotation.WebMvcStompEndpointRegistry: org.springframework.web.util.UrlPathHelper getUrlPathHelper()> -> _SOURCES_
<org.springframework.http.converter.ResourceHttpMessageConverter: void writeInternal(java.lang.Object,org.springframework.http.HttpOutputMessage)> -> _SINKS_
<org.springframework.messaging.simp.stomp.DefaultStompSession: org.springframework.scheduling.TaskScheduler getTaskScheduler()> -> _SOURCES_
<org.springframework.ui.velocity.VelocityEngineFactory: void initSpringResourceLoader(org.apache.velocity.app.VelocityEngine,java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.support.RequestContextUtils: org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.servlet.ServletRequest)> -> _SOURCES_
<org.springframework.core.ResolvableType: org.springframework.core.ResolvableType getSuperType()> -> _SOURCES_
<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder pathInfo(java.lang.String)> -> _SOURCES_
<org.springframework.jdbc.support.SQLErrorCodes: java.lang.String[] getDeadlockLoserCodes()> -> _CWE089__SOURCES_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: org.springframework.validation.MessageCodesResolver getMessageCodesResolver()> -> _SOURCES_
<org.springframework.jdbc.core.SqlParameterValue: java.lang.Object getValue()> -> _CWE089__SOURCES_
<org.springframework.http.converter.StringHttpMessageConverter: java.nio.charset.Charset getContentTypeCharset(org.springframework.http.MediaType)> -> _SOURCES_
<org.springframework.jdbc.support.incrementer.AbstractDataFieldMaxValueIncrementer: void setDataSource(javax.sql.DataSource)> -> _CWE089__SINKS_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: org.springframework.beans.factory.config.ConfigurableBeanFactory getBeanFactory()> -> _SOURCES_
<org.springframework.format.datetime.joda.DateTimeFormatterFactory: void setIso(org.springframework.format.'annotation'.DateTimeFormat$ISO)> -> _SINKS_
<org.springframework.cache.concurrent.ConcurrentMapCache: java.lang.String getName()> -> _SOURCES_
<org.springframework.util.ClassLoaderUtils: java.lang.String showClassLoaderHierarchy(java.lang.ClassLoader,java.lang.String,java.lang.String,int)> -> _SOURCES_
<org.springframework.http.HttpHeaders: org.springframework.http.MediaType getContentType()> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.ViewControllerRegistration: java.lang.String getUrlPath()> -> _SOURCES_
<org.springframework.beans.factory.support.PropertiesBeanDefinitionReader: void setPropertiesPersister(org.springframework.util.PropertiesPersister)> -> _SINKS_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: java.lang.String getLang()> -> _CWE079__SOURCES_
<org.springframework.util.ResourceUtils: java.io.File getFile(java.net.URL,java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.support.RequestContextUtils: org.springframework.web.servlet.FlashMapManager getFlashMapManager(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.jdbc.datasource.SimpleDriverDataSource: void setDriver(java.sql.Driver)> -> _CWE089__SINKS_
<org.springframework.cache.interceptor.CacheAspectSupport: java.lang.Object getBean(java.lang.String,java.lang.Class)> -> _SOURCES_
<org.springframework.jdbc.datasource.DataSourceUtils: java.sql.Connection doGetConnection(javax.sql.DataSource)> -> _CWE306__CWE089__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.portlet.util.PortletUtils: java.lang.Object getOrCreateSessionAttribute(javax.portlet.PortletSession,java.lang.String,java.lang.Class,int)> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.openid.OpenIDLoginConfigurer: org.springframework.security.openid.OpenIDConsumer getConsumer()> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateQueryException: java.lang.String getQueryString()> -> _SOURCES_
<org.springframework.ui.context.support.DelegatingThemeSource: org.springframework.ui.context.ThemeSource getParentThemeSource()> -> _SOURCES_
<org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory: org.springframework.aop.Advisor getAdvisor(java.lang.reflect.Method,org.springframework.aop.aspectj.'annotation'.MetadataAwareAspectInstanceFactory,int,java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.i18n.AbstractLocaleResolver: void setDefaultLocale(java.util.Locale)> -> _SINKS_
<org.springframework.web.portlet.DispatcherPortlet: void setDetectAllHandlerExceptionResolvers(boolean)> -> _SINKS_
<org.springframework.security.authentication.jaas.AbstractJaasAuthenticationProvider: void setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher)> -> _SINKS_
<org.springframework.format.datetime.DateFormatter: int getStylePatternForChar(int)> -> _SOURCES_
<org.springframework.expression.spel.ast.VariableReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping: void setBasePackage(java.lang.String)> -> _SINKS_
<org.springframework.web.context.request.async.CallableInterceptorChain: void applyPreProcess(org.springframework.web.context.request.NativeWebRequest,java.util.concurrent.Callable)> -> _SINKS_
<org.springframework.aop.target.CommonsPoolTargetSource: void setMaxWait(long)> -> _SINKS_
<org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler: org.springframework.core.convert.ConversionService getConversionService()> -> _SOURCES_
<org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver: void setDefaultLocale(java.util.Locale)> -> _SINKS_
<org.springframework.core.io.VfsResource: java.io.File getFile()> -> _SOURCES_
<org.springframework.validation.BindException: java.lang.Object getFieldValue(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.tags.form.ErrorsTag: void setDelimiter(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.view.AbstractView: org.springframework.web.servlet.support.RequestContext createRequestContext(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Map)> -> _SOURCES_
<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.security.authentication.rcp.RemoteAuthenticationProvider: org.springframework.security.authentication.rcp.RemoteAuthenticationManager getRemoteAuthenticationManager()> -> _CWE306__SOURCES__AUTHENTICATIONS_TO_HIGH_
<org.springframework.orm.hibernate5.LocalSessionFactoryBean: void setMappingResources(java.lang.String[])> -> _SINKS_
<org.springframework.beans.propertyeditors.StringArrayPropertyEditor: java.lang.String getAsText()> -> _SOURCES_
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: java.util.Map getBeansOfType(java.lang.Class,boolean,boolean)> -> _SOURCES_
<org.springframework.jmx.export.metadata.ManagedResource: java.lang.String getPersistPolicy()> -> _SOURCES_
<org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser: org.springframework.beans.factory.support.ManagedList getReturnValueHandlers(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.oxm.xmlbeans.XmlBeansMarshaller: java.lang.Object unmarshalSaxReader(org.xml.sax.XMLReader,org.xml.sax.InputSource)> -> _SOURCES_
<org.springframework.jdbc.support.xml.Jdbc4SqlXmlHandler: java.lang.String getXmlAsString(java.sql.ResultSet,int)> -> _CWE089__SOURCES_
<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: org.springframework.beans.factory.config.BeanDefinitionHolder parseBeanDefinitionElement(org.w3c.dom.Element)> -> _SINKS_
<org.springframework.scheduling.config.ScheduledTaskRegistrar: void setFixedDelayTasksList(java.util.List)> -> _SINKS_
<org.springframework.mock.web.portlet.MockClientDataRequest: java.io.BufferedReader getReader()> -> _SOURCES_
<org.springframework.jms.listener.DefaultMessageListenerContainer: int getMaxMessagesPerTask()> -> _SOURCES_
<org.springframework.ui.velocity.VelocityEngineFactory: void setVelocityProperties(java.util.Properties)> -> _SINKS_
<org.springframework.web.servlet.config.TilesConfigurerBeanDefinitionParser: void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)> -> _SOURCES_
<org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor: void setApplicationContext(org.springframework.context.ApplicationContext)> -> _SINKS_
<org.springframework.core.io.support.PathMatchingResourcePatternResolver: java.lang.ClassLoader getClassLoader()> -> _SOURCES_
<org.springframework.remoting.support.RemoteInvocationBasedExporter: void setRemoteInvocationExecutor(org.springframework.remoting.support.RemoteInvocationExecutor)> -> _SINKS_
<org.springframework.jca.work.DelegatingWork: java.lang.Runnable getDelegate()> -> _SOURCES_
<org.springframework.jms.config.DefaultJmsListenerContainerFactory: void setMaxMessagesPerTask(java.lang.Integer)> -> _SINKS_
<org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler: java.lang.String getSockJsPath(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.web.socket.handler.LoggingWebSocketHandlerDecorator: void handleMessage(org.springframework.web.socket.WebSocketSession,org.springframework.web.socket.WebSocketMessage)> -> _SINKS_
<org.springframework.http.converter.xml.SourceHttpMessageConverter: javax.xml.transform.dom.DOMSource readDOMSource(java.io.InputStream)> -> _SOURCES_
<org.springframework.web.bind.ServletRequestUtils: java.lang.Long getLongParameter(javax.servlet.ServletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.tags.BindErrorsTag: org.springframework.validation.Errors getErrors()> -> _SOURCES_
<org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler: void setArgumentResolvers(java.util.List)> -> _SINKS_
<org.springframework.mock.web.MockJspWriter: void print(float)> -> _SINKS_
<org.springframework.web.socket.server.standard.ServletServerContainerFactoryBean: java.lang.Long getMaxSessionIdleTimeout()> -> _SOURCES_
<org.springframework.beans.BeanUtils: java.beans.PropertyDescriptor[] getPropertyDescriptors(java.lang.Class)> -> _SOURCES_
<org.springframework.validation.BindException: java.lang.Class getFieldType(java.lang.String)> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.JeeConfigurer: org.springframework.security.core.userdetails.AuthenticationUserDetailsService getUserDetailsService()> -> _SOURCES_
<org.springframework.test.web.client.match.MockRestRequestMatchers: org.springframework.test.web.client.match.ContentRequestMatchers content()> -> _SOURCES_
<org.springframework.orm.hibernate4.LocalSessionFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.web.client.RestTemplate: void put(java.lang.String,java.lang.Object,java.util.Map)> -> _SINKS_
<org.springframework.orm.hibernate4.LocalSessionFactoryBean: void setAnnotatedPackages(java.lang.String[])> -> _SINKS_
<org.springframework.jdbc.datasource.AbstractDriverBasedDataSource: java.util.Properties getConnectionProperties()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__SOURCES__CWE862_
<org.springframework.web.servlet.FrameworkServlet: void setPublishEvents(boolean)> -> _SINKS_
<org.springframework.jdbc.datasource.DelegatingDataSource: java.io.PrintWriter getLogWriter()> -> _CWE089__SOURCES_
<org.springframework.web.servlet.view.jasperreports.JasperReportsViewResolver: void setJdbcDataSource(javax.sql.DataSource)> -> _SINKS_
<org.springframework.web.servlet.view.script.ScriptTemplateConfigurer: java.lang.String getRenderObject()> -> _SOURCES_
<org.springframework.web.servlet.handler.MappedInterceptor: org.springframework.web.servlet.HandlerInterceptor getInterceptor()> -> _SOURCES_
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getWrappedInstance()> -> _SOURCES_
<org.springframework.web.bind.ServletRequestUtils: long[] getLongParameters(javax.servlet.ServletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.instrument.classloading.websphere.WebSphereLoadTimeWeaver: java.lang.ClassLoader getThrowawayClassLoader()> -> _SOURCES_
<org.springframework.web.portlet.context.XmlPortletApplicationContext: void initBeanDefinitionReader(org.springframework.beans.factory.xml.XmlBeanDefinitionReader)> -> _SOURCES_
<org.springframework.core.task.SyncTaskExecutor: void execute(java.lang.Runnable)> -> _SINKS_
<org.springframework.core.ResolvableType: org.springframework.core.ResolvableType getGeneric(int[])> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag: java.lang.String getPath()> -> _SOURCES_
<org.springframework.test.web.servlet.result.PrintingResultHandler: org.springframework.test.web.servlet.result.PrintingResultHandler$ResultValuePrinter getPrinter()> -> _SOURCES_
<org.springframework.orm.jpa.support.SharedEntityManagerBean: void setEntityManagerInterface(java.lang.Class)> -> _SINKS_
<org.springframework.web.socket.sockjs.client.DefaultTransportRequest: void setFallbackRequest(org.springframework.web.socket.sockjs.client.DefaultTransportRequest)> -> _SINKS_
<org.springframework.web.context.support.ServletContextScope: java.lang.String getConversationId()> -> _SOURCES_
<org.springframework.web.servlet.view.script.ScriptTemplateView: void setRenderFunction(java.lang.String)> -> _SINKS_
<org.springframework.validation.AbstractBindingResult: java.lang.String getObjectName()> -> _SOURCES_
<org.springframework.web.jsf.el.SpringBeanFacesELResolver: org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.el.ELContext)> -> _SOURCES_
<org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor: java.lang.String getParticipateAttributeName()> -> _SOURCES_
<org.springframework.web.servlet.handler.SimpleUrlHandlerMapping: java.util.Map getUrlMap()> -> _SOURCES_
<org.springframework.beans.factory.serviceloader.AbstractServiceLoaderBasedFactoryBean: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.mock.web.MockPageContext: javax.servlet.jsp.el.ExpressionEvaluator getExpressionEvaluator()> -> _SOURCES_
<org.springframework.web.servlet.view.ResourceBundleViewResolver: void setBasename(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.aop.framework.AdvisedSupport: org.springframework.aop.TargetSource getTargetSource()> -> _SOURCES_
<org.springframework.aop.support.AbstractPointcutAdvisor: int getOrder()> -> _SOURCES_
<org.springframework.core.annotation.AnnotationAttributes: java.lang.Object getAttribute(java.lang.String,java.lang.Class)> -> _SOURCES_
<org.springframework.mock.web.MockBodyContent: java.lang.String getString()> -> _SOURCES_
<org.springframework.http.client.BufferingClientHttpResponseWrapper: java.lang.String getStatusText()> -> _SOURCES__CWE601_
<org.springframework.http.HttpHeaders: java.util.List getAccessControlExposeHeaders()> -> _SOURCES_
<org.springframework.web.context.support.ServletRequestHandledEvent: java.lang.String getMethod()> -> _SOURCES_
<org.springframework.beans.GenericTypeAwarePropertyDescriptor: org.springframework.core.MethodParameter getWriteMethodParameter()> -> _SOURCES_
<org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter: java.lang.String getPersistenceProviderRootPackage()> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession: void setBinaryMessageSizeLimit(int)> -> _SINKS_
<org.springframework.cglib.proxy.Enhancer: void getMethods(java.lang.Class,java.lang.Class[],java.util.List)> -> _SOURCES_
<org.springframework.web.util.HierarchicalUriComponents: java.lang.String getUserInfo()> -> _SOURCES_
<org.springframework.beans.propertyeditors.ZoneIdEditor: java.lang.String getAsText()> -> _SOURCES_
<org.springframework.expression.common.TemplateAwareExpressionParser: org.springframework.expression.Expression parseExpression(java.lang.String,org.springframework.expression.ParserContext)> -> _SINKS_
<org.springframework.http.client.AbstractClientHttpRequestFactoryWrapper: org.springframework.http.client.ClientHttpRequest createRequest(java.net.URI,org.springframework.http.HttpMethod)> -> _SOURCES_
<org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader: void loadBeanDefinitionsForConfigurationClass(org.springframework.context.'annotation'.ConfigurationClass,org.springframework.context.'annotation'.ConfigurationClassBeanDefinitionReader$TrackedConditionEvaluator)> -> _SOURCES_
<org.springframework.ui.freemarker.FreeMarkerConfigurationFactory: void setFreemarkerSettings(java.util.Properties)> -> _SINKS_
<org.springframework.messaging.handler.annotation.support.DestinationVariableMethodArgumentResolver: org.springframework.messaging.handler.'annotation'.support.AbstractNamedValueMethodArgumentResolver$NamedValueInfo createNamedValueInfo(org.springframework.core.MethodParameter)> -> _SOURCES_
<org.springframework.test.web.servlet.DefaultMvcResult: java.lang.Exception getResolvedException()> -> _SOURCES_
<org.springframework.context.support.AbstractApplicationContext: java.util.Map getLifecycleBeans()> -> _SOURCES_
<org.springframework.core.env.JOptCommandLinePropertySource: java.util.List getNonOptionArgs()> -> _SOURCES_
<org.springframework.oxm.jaxb.Jaxb2Marshaller: void setClassesToBeBound(java.lang.Class[])> -> _SINKS_
<org.springframework.context.event.EventPublicationInterceptor: void setApplicationEventClass(java.lang.Class)> -> _SINKS_
<org.springframework.aop.support.AbstractRegexpMethodPointcut: java.lang.String[] getExcludedPatterns()> -> _SOURCES_
<org.springframework.security.access.expression.method.AbstractExpressionBasedMethodConfigAttribute: java.lang.String getAttribute()> -> _SOURCES_
<org.springframework.remoting.jaxws.AbstractJaxWsServiceExporter: void setTaskExecutor(org.springframework.core.task.TaskExecutor)> -> _SINKS_
<org.springframework.jms.listener.SimpleMessageListenerContainer: void prepareSharedConnection(javax.jms.Connection)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.jsf.el.WebApplicationContextFacesELResolver: org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.el.ELContext)> -> _SOURCES_
<org.springframework.scheduling.concurrent.ScheduledExecutorFactoryBean: void setThreadFactory(java.util.concurrent.ThreadFactory)> -> _SINKS_
<org.springframework.jdbc.support.JdbcAccessor: javax.sql.DataSource getDataSource()> -> _CWE089__SOURCES_
<org.springframework.web.socket.messaging.WebSocketStompClient: org.springframework.util.concurrent.ListenableFuture connect(java.lang.String,org.springframework.messaging.simp.stomp.StompSessionHandler,java.lang.Object[])> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.remoting.jaxrpc.JaxRpcPortClientInterceptor: java.lang.Class getPortInterface()> -> _SOURCES_
<org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: void setEntityManagerInterface(java.lang.Class)> -> _SINKS_
<org.springframework.jmx.access.NotificationListenerRegistrar: void setServiceUrl(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletURL: javax.portlet.PortletMode getPortletMode()> -> _SOURCES_
<org.springframework.cglib.reflect.FastMember: int getIndex()> -> _SOURCES_
<org.springframework.format.number.NumberStyleFormatter: java.text.NumberFormat getNumberFormat(java.util.Locale)> -> _SOURCES_
<org.springframework.beans.factory.config.PropertyPathFactoryBean: void setPropertyPath(java.lang.String)> -> _SINKS_
<org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder: java.lang.Object getSharedObject(java.lang.Class)> -> _SOURCES_
<org.springframework.beans.factory.support.StaticListableBeanFactory: int getBeanDefinitionCount()> -> _SOURCES_
<org.springframework.messaging.support.MessageHeaderAccessor: void setLeaveMutable(boolean)> -> _SINKS_
<org.springframework.remoting.jaxws.SimpleHttpServerJaxWsServiceExporter: void setServer(com.sun.net.httpserver.HttpServer)> -> _SINKS_
<org.springframework.web.bind.annotation.support.HandlerMethodInvoker: void initBinder(java.lang.Object,java.lang.String,org.springframework.web.bind.WebDataBinder,org.springframework.web.context.request.NativeWebRequest)> -> _SINKS_
<org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter: long getLastModified(javax.servlet.http.HttpServletRequest,java.lang.Object)> -> _SOURCES_
<org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer: void setRaiseExceptions(boolean)> -> _SINKS_
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,boolean)> -> _SOURCES_
<org.springframework.aop.support.IntroductionInfoSupport: void readObject(java.io.ObjectInputStream)> -> _SOURCES_
<org.springframework.jms.core.JmsTemplate: java.lang.Object execute(org.springframework.jms.core.ProducerCallback)> -> _CWE078__SINKS_
<org.springframework.messaging.simp.user.UserSessionRegistryAdapter: int getUserCount()> -> _SOURCES__CWE862_
<org.springframework.orm.ibatis.support.BlobByteArrayTypeHandler: java.lang.Object getResultInternal(java.sql.ResultSet,int,org.springframework.jdbc.support.lob.LobHandler)> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.handler.JsonpReceivingTransportHandler: void handleRequestInternal(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,org.springframework.web.socket.WebSocketHandler,org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession)> -> _SINKS_
<org.springframework.core.env.ReadOnlySystemAttributesMap: java.lang.String get(java.lang.Object)> -> _SOURCES_
<org.springframework.messaging.core.AbstractMessageSendingTemplate: void convertAndSend(java.lang.Object,java.lang.Object,java.util.Map,org.springframework.messaging.core.MessagePostProcessor)> -> _SINKS_
<org.springframework.messaging.MessagingException: org.springframework.messaging.Message getFailedMessage()> -> _SOURCES_
<org.springframework.util.concurrent.CompletableToListenableFutureAdapter: java.lang.Object get()> -> _SOURCES_
<org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder: org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder setCustomReturnValueHandlers(org.springframework.web.method.support.HandlerMethodReturnValueHandler[])> -> _SINKS_
<org.springframework.scheduling.backportconcurrent.ScheduledExecutorTask: edu.emory.mathcs.backport.java.util.concurrent.TimeUnit getTimeUnit()> -> _SOURCES_
<org.springframework.orm.hibernate4.HibernateTemplate: java.lang.Object get(java.lang.Class,java.io.Serializable)> -> _SOURCES_
<org.springframework.web.portlet.context.PortletContextResource: java.io.InputStream getInputStream()> -> _SOURCES_
<org.springframework.beans.PropertyAccessorUtils: int getNestedPropertySeparatorIndex(java.lang.String,boolean)> -> _SOURCES_
<org.springframework.objenesis.instantiator.android.Android10Instantiator: java.lang.reflect.Method getNewStaticMethod()> -> _SOURCES_
<org.springframework.web.portlet.context.AbstractRefreshablePortletApplicationContext: void setNamespace(java.lang.String)> -> _SINKS_
<org.springframework.cglib.core.DefaultNamingPolicy: java.lang.String getTag()> -> _SOURCES_
<org.springframework.web.servlet.tags.MessageTag: void setCode(java.lang.String)> -> _SINKS_
<org.springframework.core.io.PathResource: java.io.InputStream getInputStream()> -> _SOURCES_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: java.lang.String getString(java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.jdbc.support.nativejdbc.JBossNativeJdbcExtractor: java.sql.ResultSet getNativeResultSet(java.sql.ResultSet)> -> _CWE089__SOURCES_
<org.springframework.beans.ExtendedBeanInfo: java.beans.BeanDescriptor getBeanDescriptor()> -> _SOURCES_
<org.springframework.aop.target.AbstractLazyCreationTargetSource: java.lang.Object getTarget()> -> _SOURCES_
<org.springframework.remoting.jaxrpc.JaxRpcSoapFaultException: javax.xml.namespace.QName getFaultCodeAsQName()> -> _SOURCES_
<org.springframework.scheduling.quartz.CronTriggerFactoryBean: void setTimeZone(java.util.TimeZone)> -> _SINKS_
<org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter: void setCustomModelAndViewResolver(org.springframework.web.servlet.mvc.'annotation'.ModelAndViewResolver)> -> _SINKS_
<org.springframework.orm.jdo.PersistenceManagerHolder: void setTransactionActive(boolean)> -> _SINKS_
<org.springframework.web.socket.server.standard.ServerEndpointRegistration: void setExtensions(java.util.List)> -> _SINKS_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSetMetaData: java.lang.String[] getColumnNames()> -> _CWE089__SOURCES_
<org.springframework.security.util.SimpleMethodInvocation: java.lang.reflect.AccessibleObject getStaticPart()> -> _SOURCES_
<org.springframework.test.web.servlet.htmlunit.HtmlUnitRequestBuilder: java.nio.charset.Charset getCharset()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor: java.lang.Object createAttributeFromRequestValue(java.lang.String,java.lang.String,org.springframework.core.MethodParameter,org.springframework.web.bind.support.WebDataBinderFactory,org.springframework.web.context.request.NativeWebRequest)> -> _SINKS_
<org.springframework.remoting.jaxrpc.JaxRpcPortProxyFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.security.access.expression.AbstractSecurityExpressionHandler: org.springframework.expression.ExpressionParser getExpressionParser()> -> _SOURCES_
<org.springframework.messaging.support.MessageHeaderAccessor: org.springframework.messaging.MessageHeaders getMessageHeaders()> -> _SOURCES_
<org.springframework.security.authentication.UsernamePasswordAuthenticationToken: java.lang.Object getPrincipal()> -> _SOURCES__CWE862_
<org.springframework.mock.web.MockHttpServletRequest: java.lang.String getRealPath(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.mock.web.MockHttpServletResponse: void sendRedirect(java.lang.String)> -> _SINKS__CWE601_
<org.springframework.asm.Type: java.lang.String getDescriptor()> -> _SOURCES_
<org.springframework.scheduling.quartz.SimpleThreadPoolTaskExecutor: void execute(java.lang.Runnable)> -> _SINKS_
<org.springframework.format.datetime.joda.DateTimeFormatterFactory: void setPattern(java.lang.String)> -> _SINKS_
<org.springframework.validation.beanvalidation.MethodValidationPostProcessor: void setValidatorFactory(javax.validation.ValidatorFactory)> -> _SINKS_
<org.springframework.security.access.expression.method.MethodSecurityEvaluationContext: void setParameterNameDiscoverer(org.springframework.core.ParameterNameDiscoverer)> -> _SINKS_
<org.springframework.messaging.simp.config.StompBrokerRelayRegistration: java.lang.String getUserDestinationBroadcast()> -> _SOURCES_
<org.springframework.jdbc.support.incrementer.SybaseMaxValueIncrementer: long getNextKey()> -> _CWE089__SOURCES_
<org.springframework.web.servlet.support.RequestContext: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)> -> _SINKS_
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: org.springframework.core.env.Environment getEnvironment()> -> _SOURCES_
<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource[] getAllowedLocations()> -> _SOURCES_
<org.springframework.jms.support.JmsAccessor: void setSessionTransacted(boolean)> -> _SINKS_
<org.springframework.security.authentication.RememberMeAuthenticationToken: java.lang.Object getPrincipal()> -> _SOURCES_
<org.springframework.core.io.support.PropertiesLoaderSupport: void setLocalOverride(boolean)> -> _SINKS_
<org.springframework.web.servlet.tags.UrlTag: java.lang.String replaceUriTemplateParams(java.lang.String,java.util.List,java.util.Set)> -> _SANITIZERS__CWE079__SINKS_
<org.springframework.web.socket.sockjs.client.SockJsUrlInfo: java.lang.String getSessionId()> -> _SOURCES_
<org.springframework.web.servlet.view.RedirectView: java.lang.String createTargetUrl(java.util.Map,javax.servlet.http.HttpServletRequest)> -> _CWE079__SOURCES_
<org.springframework.context.expression.MapAccessor: java.lang.Class[] getSpecificTargetClasses()> -> _SOURCES_
<org.springframework.messaging.support.GenericMessage: org.springframework.messaging.MessageHeaders getHeaders()> -> _SOURCES_
<org.springframework.expression.common.CompositeStringExpression: void setValue(java.lang.Object,java.lang.Object)> -> _SINKS_
<org.springframework.web.portlet.DispatcherPortlet: void setDetectAllHandlerAdapters(boolean)> -> _SINKS_
<org.springframework.transaction.support.SimpleTransactionScope: java.lang.String getConversationId()> -> _SOURCES_
<org.springframework.jmx.support.ConnectorServerFactoryBean: void setEnvironment(java.util.Properties)> -> _SINKS_
<org.springframework.web.servlet.resource.ResourceUrlProvider: int getLookupPathIndex(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.objenesis.instantiator.sun.SunReflectionFactoryInstantiator: java.lang.reflect.Constructor getJavaLangObjectConstructor()> -> _SOURCES_
<org.springframework.web.socket.client.WebSocketConnectionManager: org.springframework.http.HttpHeaders getHeaders()> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.CorsRegistration: org.springframework.web.cors.CorsConfiguration getCorsConfiguration()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.RequestMappingInfo: org.springframework.web.servlet.mvc.condition.HeadersRequestCondition getHeadersCondition()> -> _SOURCES_
<org.springframework.orm.hibernate4.LocalSessionFactoryBean: void setMappingLocations(org.springframework.core.io.Resource[])> -> _SINKS_
<org.springframework.web.portlet.handler.AbstractHandlerExceptionResolver: void setMappedHandlers(java.util.Set)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.SessionAttributeMethodArgumentResolver: org.springframework.web.method.'annotation'.AbstractNamedValueMethodArgumentResolver$NamedValueInfo createNamedValueInfo(org.springframework.core.MethodParameter)> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler: long getSystemHeartbeatReceiveInterval()> -> _SOURCES_
<org.springframework.messaging.simp.config.MessageBrokerRegistry: org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler getStompBrokerRelay(org.springframework.messaging.SubscribableChannel)> -> _SOURCES_
<org.springframework.web.servlet.view.xslt.XsltView: javax.xml.transform.Source getStylesheetSource()> -> _SOURCES_
<org.springframework.web.socket.adapter.jetty.JettyWebSocketSession: void sendPingMessage(org.springframework.web.socket.PingMessage)> -> _SINKS_
<org.springframework.util.xml.AbstractXMLReader: void setFeature(java.lang.String,boolean)> -> _SINKS_
<org.springframework.cglib.beans.BeanGenerator: java.security.ProtectionDomain getProtectionDomain()> -> _SOURCES_
<org.springframework.expression.common.LiteralExpression: java.lang.Object getValue(java.lang.Object,java.lang.Class)> -> _SOURCES_
<org.springframework.aop.framework.ProxyFactory: java.lang.Object getProxy(java.lang.ClassLoader)> -> _SOURCES_
<org.springframework.core.io.support.PathMatchingResourcePatternResolver: org.springframework.core.io.Resource convertClassLoaderURL(java.net.URL)> -> _SOURCES_
<org.springframework.validation.BindingResultUtils: org.springframework.validation.BindingResult getBindingResult(java.util.Map,java.lang.String)> -> _SOURCES_
<org.springframework.security.authentication.rcp.RemoteAuthenticationManagerImpl: void setAuthenticationManager(org.springframework.security.authentication.AuthenticationManager)> -> _CWE306__SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.bind.EscapedErrors: org.springframework.validation.ObjectError getGlobalError()> -> _SOURCES_
<org.springframework.security.core.SpringSecurityMessageSource: org.springframework.context.support.MessageSourceAccessor getAccessor()> -> _SOURCES_
<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,org.springframework.core.io.Resource)> -> _SOURCES_
<org.springframework.web.servlet.tags.form.FormTag: java.lang.String getServletRelativeAction()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletResponse: java.util.Collection getHeaderNames()> -> _SOURCES__CWE601_
<org.springframework.web.socket.sockjs.transport.handler.WebSocketTransportHandler: void setServletContext(javax.servlet.ServletContext)> -> _SINKS_
<org.springframework.transaction.jta.WebLogicJtaTransactionManager: void loadWebLogicTransactionHelperClass()> -> _SOURCES_
<org.springframework.web.portlet.context.PortletWebRequest: java.lang.Object getNativeRequest(java.lang.Class)> -> _CWE079__SOURCES_
<org.springframework.orm.jpa.JpaTransactionManager: void setJpaProperties(java.util.Properties)> -> _SINKS_
<org.springframework.core.annotation.AnnotationAttributes: java.lang.String getString(java.lang.String)> -> _SOURCES_
<org.springframework.scheduling.config.ScheduledTaskRegistrar: void setFixedDelayTasks(java.util.Map)> -> _SINKS_
<org.springframework.web.servlet.view.ResourceBundleViewResolver: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)> -> _SOURCES_
<org.springframework.messaging.core.BeanFactoryMessageChannelDestinationResolver: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.web.servlet.support.AbstractFlashMapManager: java.util.List getExpiredFlashMaps(java.util.List)> -> _SOURCES_
<org.springframework.orm.hibernate4.HibernateTemplate: void saveOrUpdate(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.security.config.http.AuthenticationConfigBuilder: void createFormLoginFilter(org.springframework.beans.factory.config.BeanReference,org.springframework.beans.factory.config.BeanReference)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler: void setApplicationContext(org.springframework.context.ApplicationContext)> -> _SINKS_
<org.springframework.web.multipart.support.StandardServletMultipartResolver: org.springframework.web.multipart.MultipartHttpServletRequest resolveMultipart(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.http.client.SimpleStreamingAsyncClientHttpRequest: org.springframework.util.concurrent.ListenableFuture executeInternal(org.springframework.http.HttpHeaders)> -> _SINKS_
<org.springframework.mail.javamail.MimeMailMessage: void setSentDate(java.util.Date)> -> _SINKS_
<org.springframework.expression.spel.ast.AstUtils: java.util.List getPropertyAccessorsToTry(java.lang.Class,java.util.List)> -> _SOURCES_
<org.springframework.jms.config.AbstractJmsListenerContainerFactory: void setSubscriptionShared(java.lang.Boolean)> -> _SINKS_
<org.springframework.web.socket.adapter.jetty.JettyWebSocketSession: java.net.InetSocketAddress getRemoteAddress()> -> _SOURCES_
<org.springframework.web.servlet.mvc.multiaction.InternalPathMethodNameResolver: java.lang.String getHandlerMethodNameForUrlPath(java.lang.String)> -> _CWE079__SOURCES__SINKS_
<org.springframework.web.socket.sockjs.client.DefaultTransportRequest: org.springframework.web.socket.sockjs.frame.SockJsMessageCodec getMessageCodec()> -> _SOURCES_
<org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer: void setTemplateEngine(groovy.text.markup.MarkupTemplateEngine)> -> _SINKS_
<org.springframework.web.HttpMediaTypeException: java.util.List getSupportedMediaTypes()> -> _SOURCES_
<org.springframework.messaging.support.ChannelInterceptorAdapter: void afterSendCompletion(org.springframework.messaging.Message,org.springframework.messaging.MessageChannel,boolean,java.lang.Exception)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler: void setClientPasscode(java.lang.String)> -> _SINKS_
<org.springframework.web.multipart.support.DefaultMultipartHttpServletRequest: org.springframework.http.HttpHeaders getMultipartHeaders(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.remoting.support.RemoteInvocation: java.lang.Object[] getArguments()> -> _SOURCES_
<org.springframework.instrument.classloading.ShadowingClassLoader: java.lang.Class doLoadClass(java.lang.String)> -> _SOURCES_
<org.springframework.orm.toplink.TopLinkTransactionManager: java.lang.Object getResourceFactory()> -> _SOURCES_
<org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()> -> _SOURCES_
<org.springframework.web.accept.ContentNegotiationManagerFactoryBean: void setUseJaf(boolean)> -> _SINKS_
<org.springframework.core.io.VfsResource: java.lang.String getFilename()> -> _SOURCES_
<org.springframework.web.socket.adapter.jetty.JettyWebSocketSession: void sendPongMessage(org.springframework.web.socket.PongMessage)> -> _SINKS_
<org.springframework.test.context.support.TestPropertySourceAttributes: java.lang.String[] getLocations()> -> _SOURCES_
<org.springframework.web.socket.config.annotation.ServletWebSocketHandlerRegistry: int getOrder()> -> _SOURCES_
<org.springframework.test.context.junit4.AbstractTransactionalJUnit4SpringContextTests: void executeSqlScript(java.lang.String,boolean)> -> _CWE078__SINKS_
<org.springframework.web.servlet.mvc.ParameterizableViewController: org.springframework.web.servlet.View getView()> -> _SOURCES_
<org.springframework.mock.web.MockHttpSession: java.lang.Object getAttribute(java.lang.String)> -> _SOURCES_
<org.springframework.http.HttpHeaders: java.lang.String getCacheControl()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.FormTag: void setModelAttribute(java.lang.String)> -> _SINKS_
<org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor: void setPersistenceContexts(java.util.Map)> -> _SINKS_
<org.springframework.orm.jpa.vendor.HibernateJpaSessionFactoryBean: org.hibernate.SessionFactory getObject()> -> _SOURCES_
<org.springframework.web.servlet.view.json.AbstractJackson2View: void writeContent(java.io.OutputStream,java.lang.Object)> -> _SINKS_
<org.springframework.aop.interceptor.CustomizableTraceInterceptor: void setEnterMessage(java.lang.String)> -> _SINKS_
<org.springframework.transaction.support.DefaultTransactionDefinition: void setPropagationBehavior(int)> -> _SINKS_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addReturnValueHandlers(java.util.List)> -> _SINKS_
<org.springframework.aop.interceptor.ExposeBeanNameAdvisors: java.lang.String getBeanName()> -> _SOURCES_
<org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource: org.springframework.transaction.interceptor.TransactionAttribute getTransactionAttribute(java.lang.reflect.Method,java.lang.Class)> -> _SOURCES_
<org.springframework.jms.listener.serversession.ServerSessionMessageListenerContainer: javax.jms.ConnectionConsumer getConsumer()> -> _SOURCES_
<org.springframework.core.annotation.OrderUtils: java.lang.Integer getPriority(java.lang.Class)> -> _SOURCES_
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getPropertyValue(java.lang.String)> -> _SOURCES_
<org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler: org.springframework.util.PathMatcher getPathMatcher()> -> _SOURCES_
<org.springframework.context.support.ResourceMapFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.web.servlet.tags.BindTag: java.lang.String getProperty()> -> _SOURCES_
<org.springframework.messaging.simp.SimpMessagingTemplate: void sendInternal(org.springframework.messaging.Message)> -> _SINKS_
<org.springframework.web.method.annotation.MethodArgumentConversionNotSupportedException: org.springframework.core.MethodParameter getParameter()> -> _SOURCES_
<org.springframework.orm.toplink.TopLinkTemplate: java.lang.Object executeQuery(oracle.toplink.queryframework.DatabaseQuery,java.lang.Object[],boolean)> -> _CWE078__SINKS_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: java.sql.Time getTime(int)> -> _CWE089__SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.AbstractMappingJacksonResponseBodyAdvice: org.springframework.http.converter.json.MappingJacksonValue getOrCreateContainer(java.lang.Object)> -> _SOURCES__CWE601_
<org.springframework.orm.toplink.TopLinkTemplate: java.lang.Object executeNamedQuery(java.lang.Class,java.lang.String,java.lang.Object[],boolean)> -> _CWE078__SINKS_
<org.springframework.web.servlet.i18n.FixedLocaleResolver: void setLocaleContext(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.context.i18n.LocaleContext)> -> _SINKS_
<org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void configureDefaultServletHandling(org.springframework.web.servlet.config.'annotation'.DefaultServletHandlerConfigurer)> -> _SINKS_
<org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor: org.aopalliance.aop.Advice getAdvice()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractMultiCheckedElementTag: void setItems(java.lang.Object)> -> _SINKS_
<org.springframework.context.annotation.ConfigurationClass: void setBeanName(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletRequest: void setServerName(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.scheduling.support.ScheduledMethodRunnable: java.lang.Object getTarget()> -> _SOURCES_
<org.springframework.web.servlet.support.RequestContext: java.util.TimeZone getFallbackTimeZone()> -> _SOURCES_
<org.springframework.aop.aspectj.annotation.BeanFactoryAspectInstanceFactory: org.springframework.aop.aspectj.'annotation'.AspectMetadata getAspectMetadata()> -> _SOURCES_
<org.springframework.jdbc.core.PreparedStatementCreatorFactory: void setResultSetType(int)> -> _CWE089__SINKS_
<org.springframework.web.socket.config.annotation.SockJsServiceRegistration: org.springframework.web.socket.config.'annotation'.SockJsServiceRegistration setHeartbeatTime(long)> -> _SINKS_
<org.springframework.web.socket.messaging.StompSubProtocolHandler: void afterSessionEnded(org.springframework.web.socket.WebSocketSession,org.springframework.web.socket.CloseStatus,org.springframework.messaging.MessageChannel)> -> _SINKS_
<org.springframework.core.ConfigurableObjectInputStream: java.lang.ClassLoader getFallbackClassLoader()> -> _SOURCES_
<org.springframework.jmx.support.ObjectNameManager: javax.management.ObjectName getInstance(java.lang.String,java.util.Hashtable)> -> _SOURCES_
<org.springframework.web.client.RestTemplate: org.springframework.http.ResponseEntity postForEntity(java.lang.String,java.lang.Object,java.lang.Class,java.util.Map)> -> _SINKS_
<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: void setConversionService(org.springframework.core.convert.ConversionService)> -> _SINKS_
<org.springframework.jms.core.JmsTemplate: void setDeliveryPersistent(boolean)> -> _SINKS_
<org.springframework.orm.hibernate5.HibernateTemplate: java.lang.Object load(java.lang.String,java.io.Serializable,org.hibernate.LockMode)> -> _SOURCES__SINKS_
<org.springframework.cache.interceptor.CacheAspectSupport: java.util.Collection getCaches(org.springframework.cache.interceptor.CacheOperationInvocationContext,org.springframework.cache.interceptor.CacheResolver)> -> _SOURCES_
<org.springframework.remoting.rmi.JndiRmiServiceExporter: void setJndiName(java.lang.String)> -> _SINKS_
<org.springframework.cglib.proxy.MixinBeanEmitter: java.lang.Class[] getInterfaces(java.lang.Class[])> -> _SOURCES_
<org.springframework.aop.framework.adapter.MethodBeforeAdviceAdapter: org.aopalliance.intercept.MethodInterceptor getInterceptor(org.springframework.aop.Advisor)> -> _SOURCES_
<org.springframework.jdbc.core.simple.AbstractJdbcCall: org.springframework.jdbc.core.CallableStatementCreatorFactory getCallableStatementFactory()> -> _CWE089__SOURCES_
<org.springframework.context.support.AbstractRefreshableConfigApplicationContext: void setId(java.lang.String)> -> _SINKS_
<org.springframework.format.datetime.standard.DateTimeFormatterFactoryBean: java.time.format.DateTimeFormatter getObject()> -> _SOURCES_
<org.springframework.test.context.web.socket.MockServerContainer: javax.websocket.Session connectToServer(javax.websocket.Endpoint,javax.websocket.ClientEndpointConfig,java.net.URI)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.remoting.rmi._RmiInvocationHandler_Stub: java.lang.String getTargetInterfaceName()> -> _SOURCES_
<org.springframework.jdbc.datasource.DataSourceUtils: int getConnectionSynchronizationOrder(javax.sql.DataSource)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__SOURCES__CWE862_
<org.springframework.format.number.CurrencyStyleFormatter: void setFractionDigits(int)> -> _SINKS_
<org.springframework.aop.framework.ProxyFactoryBean: java.lang.Object getSingletonInstance()> -> _SOURCES_
<org.springframework.format.datetime.DateFormatter: java.lang.String print(java.lang.Object,java.util.Locale)> -> _SINKS_
<org.springframework.cache.jcache.interceptor.AbstractJCacheOperation: java.util.Set getAnnotations()> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateTemplate: int getFetchSize()> -> _SOURCES_
<org.springframework.web.socket.WebSocketHttpHeaders: void setSecWebSocketKey(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.aop.interceptor.AbstractTraceInterceptor: java.lang.Class getClassForLogging(java.lang.Object)> -> _SOURCES_
<org.springframework.core.env.AbstractPropertyResolver: void setValueSeparator(java.lang.String)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompEncoder: void writeBody(byte[],java.io.DataOutputStream)> -> _SINKS_
<org.springframework.cglib.proxy.Enhancer: java.security.ProtectionDomain getProtectionDomain()> -> _SOURCES_
<org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler: java.util.List getArgumentResolvers()> -> _SOURCES_
<org.springframework.objenesis.strategy.PlatformDescription: int getAndroidVersion()> -> _SOURCES_
<org.springframework.jdbc.core.simple.SimpleJdbcInsert: org.springframework.jdbc.support.KeyHolder executeAndReturnKeyHolder(java.util.Map)> -> _CWE089__SINKS_
<org.springframework.web.bind.support.SpringWebConstraintValidatorFactory: org.springframework.web.context.WebApplicationContext getWebApplicationContext()> -> _SOURCES_
<org.springframework.context.support.AbstractResourceBasedMessageSource: void setCacheSeconds(int)> -> _SINKS_
<org.springframework.messaging.simp.user.MultiServerUserRegistry: java.lang.Object getLocalRegistryDto()> -> _SOURCES__CWE862_
<org.springframework.messaging.simp.user.UserDestinationResult: java.lang.String getUser()> -> _SOURCES__CWE862_
<org.springframework.orm.hibernate4.HibernateTransactionManager: void setHibernateManagedSession(boolean)> -> _SINKS_
<org.springframework.web.portlet.handler.HandlerInterceptorAdapter: boolean preHandleAction(javax.portlet.ActionRequest,javax.portlet.ActionResponse,java.lang.Object)> -> _SINKS_
<org.springframework.aop.support.ControlFlowPointcut: int getEvaluations()> -> _SOURCES_
<org.springframework.ejb.access.AbstractSlsbInvokerInterceptor: void setExposeAccessContext(boolean)> -> _SINKS_
<org.springframework.expression.spel.standard.SpelExpression: java.lang.String getExpressionString()> -> _SOURCES_
<org.springframework.scheduling.annotation.AbstractAsyncConfiguration: void setConfigurers(java.util.Collection)> -> _SINKS_
<org.springframework.ui.freemarker.SpringTemplateLoader: java.io.Reader getReader(java.lang.Object,java.lang.String)> -> _SOURCES_
<org.springframework.oxm.xstream.XStreamMarshaller: void setEncoding(java.lang.String)> -> _SINKS_
<org.springframework.scheduling.concurrent.DefaultManagedAwareThreadFactory: void setJndiTemplate(org.springframework.jndi.JndiTemplate)> -> _SINKS_
<org.springframework.security.core.SpringSecurityCoreVersion: java.lang.String getVersion()> -> _SOURCES_
<org.springframework.transaction.interceptor.TransactionProxyFactoryBean: void setTransactionManager(org.springframework.transaction.PlatformTransactionManager)> -> _SINKS_
<org.springframework.web.servlet.tags.Param: void setValue(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.ViewNameMethodReturnValueHandler: void setRedirectPatterns(java.lang.String[])> -> _SINKS_
<org.springframework.jms.connection.UserCredentialsConnectionFactoryAdapter: javax.jms.Connection createConnection(java.lang.String,java.lang.String)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.core.SpringProperties: boolean getFlag(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: org.springframework.web.servlet.mvc.condition.RequestCondition getCustomTypeCondition(java.lang.Class)> -> _SOURCES_
<org.springframework.orm.toplink.TopLinkTemplate: java.lang.Object execute(org.springframework.orm.toplink.TopLinkCallback)> -> _SINKS_
<org.springframework.format.support.FormattingConversionServiceFactoryBean: void setFormatterRegistrars(java.util.Set)> -> _SINKS_
<org.springframework.scheduling.backportconcurrent.ConcurrentTaskExecutor: void execute(java.lang.Runnable)> -> _CWE078__SINKS_
<org.springframework.orm.hibernate3.SessionFactoryUtils: org.hibernate.Session getSession(org.hibernate.SessionFactory,org.hibernate.Interceptor,org.springframework.jdbc.support.SQLExceptionTranslator)> -> _CWE089__SOURCES_
<org.springframework.messaging.support.MessageHeaderAccessor: java.lang.String getShortPayloadLogMessage(java.lang.Object)> -> _SOURCES_
<org.springframework.messaging.support.MessageHeaderAccessor: java.lang.String getShortLogMessage(java.lang.Object)> -> _SOURCES_
<org.springframework.core.annotation.AnnotationUtils: java.lang.annotation.Annotation[] getAnnotations(java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.web.socket.messaging.StompSubProtocolHandler: void handleMessageToClient(org.springframework.web.socket.WebSocketSession,org.springframework.messaging.Message)> -> _SINKS_
<org.springframework.messaging.core.AbstractMessageSendingTemplate: org.springframework.messaging.converter.MessageConverter getMessageConverter()> -> _SOURCES_
<org.springframework.web.portlet.mvc.annotation.AnnotationMethodHandlerAdapter: void setCustomModelAndViewResolver(org.springframework.web.servlet.mvc.'annotation'.ModelAndViewResolver)> -> _SINKS_
<org.springframework.mock.web.MockBodyContent: void println(double)> -> _SINKS_
<org.springframework.messaging.support.MessageHeaderAccessor: java.lang.String getDetailedPayloadLogMessage(java.lang.Object)> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateTransactionManager: void setSessionFactory(org.hibernate.SessionFactory)> -> _SINKS_
<org.springframework.security.authentication.AuthenticationTrustResolverImpl: java.lang.Class getAnonymousClass()> -> _SOURCES_
<org.springframework.beans.propertyeditors.TimeZoneEditor: void setAsText(java.lang.String)> -> _SINKS_
<org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter: java.util.Map getJpaPropertyMap()> -> _SOURCES_
<org.springframework.aop.aspectj.annotation.SingletonMetadataAwareAspectInstanceFactory: int getOrderForAspectClass(java.lang.Class)> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.session.WebSocketServerSockJsSession: java.net.InetSocketAddress getLocalAddress()> -> _SOURCES_
<org.springframework.test.web.client.match.ContentRequestMatchers: org.springframework.test.web.client.RequestMatcher node(org.hamcrest.Matcher)> -> _SOURCES_
<org.springframework.cache.interceptor.CacheAspectSupport: void setCacheOperationSources(org.springframework.cache.interceptor.CacheOperationSource[])> -> _SINKS_
<org.springframework.web.bind.annotation.support.HandlerMethodInvoker: org.springframework.web.bind.WebDataBinder createBinder(org.springframework.web.context.request.NativeWebRequest,java.lang.Object,java.lang.String)> -> _SINKS_
<org.springframework.messaging.handler.invocation.MethodArgumentResolutionException: org.springframework.core.MethodParameter getMethodParameter()> -> _SOURCES_
<org.springframework.beans.factory.serviceloader.AbstractServiceLoaderBasedFactoryBean: void setServiceType(java.lang.Class)> -> _SINKS_
<org.springframework.scheduling.quartz.CronTriggerFactoryBean: void setJobDataAsMap(java.util.Map)> -> _SINKS_
<org.springframework.security.config.annotation.web.builders.HttpSecurity: org.springframework.security.config.'annotation'.web.configurers.ChannelSecurityConfigurer$ChannelRequestMatcherRegistry requiresChannel()> -> _SOURCES_
<org.springframework.ui.context.support.ResourceBundleThemeSource: void setBasenamePrefix(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer: org.springframework.web.context.WebApplicationContext createRootApplicationContext()> -> _SOURCES_
<org.springframework.web.servlet.support.SessionFlashMapManager: java.lang.Object getFlashMapsMutex(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.ServletRequestDataBinderFactory: org.springframework.web.bind.ServletRequestDataBinder createBinderInstance(java.lang.Object,java.lang.String,org.springframework.web.context.request.NativeWebRequest)> -> _SOURCES__SINKS_
<org.springframework.jca.work.WorkManagerTaskExecutor: void execute(java.lang.Runnable)> -> _CWE078__SINKS_
<org.springframework.mock.web.MockServletConfig: java.lang.String getInitParameter(java.lang.String)> -> _SOURCES_
<org.springframework.scheduling.commonj.TimerManagerFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.web.jsf.WebApplicationContextVariableResolver: org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.faces.context.FacesContext)> -> _SOURCES_
<org.springframework.beans.factory.config.PlaceholderConfigurerSupport: void setTrimValues(boolean)> -> _SINKS_
<org.springframework.jdbc.object.StoredProcedure: java.util.Map execute(java.util.Map)> -> _CWE089__SINKS_
<org.springframework.web.servlet.support.WebContentGenerator: void setCacheControl(org.springframework.http.CacheControl)> -> _SINKS_
<org.springframework.messaging.converter.AbstractMessageConverter: org.springframework.messaging.converter.ContentTypeResolver getContentTypeResolver()> -> _SOURCES_
<org.springframework.security.core.token.DefaultToken: java.lang.String getKey()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.OptionsTag: int writeTagContent(org.springframework.web.servlet.tags.form.TagWriter)> -> _SINKS_
<org.springframework.beans.factory.serviceloader.ServiceListFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.messaging.converter.AbstractMessageConverter: org.springframework.util.MimeType getDefaultContentType(java.lang.Object)> -> _SOURCES_
<org.springframework.context.event.SimpleApplicationEventMulticaster: void setTaskExecutor(org.springframework.core.task.TaskExecutor)> -> _SINKS_
<org.springframework.security.core.token.KeyBasedPersistenceTokenService: void setServerSecret(java.lang.String)> -> _SINKS_
<org.springframework.expression.spel.ast.OpPlus: org.springframework.expression.spel.ast.SpelNodeImpl getRightOperand()> -> _SOURCES_
<org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver: void handleResolvedValue(java.lang.Object,java.lang.String,org.springframework.core.MethodParameter,org.springframework.web.method.support.ModelAndViewContainer,org.springframework.web.context.request.NativeWebRequest)> -> _SINKS_
<org.springframework.oxm.xstream.XStreamMarshaller: void setSupportedClasses(java.lang.Class[])> -> _SINKS_
<org.springframework.web.context.request.async.NoSupportAsyncWebRequest: void setTimeout(java.lang.Long)> -> _SINKS_
<org.springframework.beans.factory.generic.GenericBeanFactoryAccessor: java.util.Map getBeansOfType(java.lang.Class,boolean,boolean)> -> _SOURCES_
<org.springframework.scheduling.annotation.AsyncResult: java.lang.Object get()> -> _SOURCES_
<org.springframework.cache.ehcache.EhCacheFactoryBean: void setCacheManager(net.sf.ehcache.CacheManager)> -> _SINKS_
<org.springframework.beans.factory.xml.XmlBeanDefinitionReader: void setEventListener(org.springframework.beans.factory.parsing.ReaderEventListener)> -> _SINKS_
<org.springframework.jms.config.JmsListenerEndpointRegistrar: org.springframework.messaging.handler.'annotation'.support.MessageHandlerMethodFactory getMessageHandlerMethodFactory()> -> _SOURCES_
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getCollectionReturnType(java.lang.reflect.Method,int)> -> _SOURCES_
<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.web.context.support.GroovyWebApplicationContext: void setProperty(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.web.bind.UnsatisfiedServletRequestParameterException: java.lang.String[] getParamConditions()> -> _SOURCES_
<org.springframework.jms.connection.SingleConnectionFactory: javax.jms.QueueConnection createQueueConnection()> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.format.datetime.standard.DateTimeContextHolder: org.springframework.format.datetime.standard.DateTimeContext getDateTimeContext()> -> _SOURCES_
<org.springframework.mock.web.MockHttpSession: int getMaxInactiveInterval()> -> _SOURCES_
<org.springframework.scheduling.config.IntervalTask: long getInitialDelay()> -> _SOURCES_
<org.springframework.core.env.PropertySourcesPropertyResolver: java.lang.Object getProperty(java.lang.String,java.lang.Class)> -> _SOURCES_
<org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.aop.framework.ReflectiveMethodInvocation: java.util.Map getUserAttributes()> -> _SOURCES_
<org.springframework.util.xml.StaxUtils: javax.xml.stream.XMLEventReader getXMLEventReader(javax.xml.transform.Source)> -> _SOURCES_
<org.springframework.test.util.AopTestUtils: java.lang.Object getUltimateTargetObject(java.lang.Object)> -> _SOURCES_
<org.springframework.mock.web.MockPageContext: javax.servlet.ServletResponse getResponse()> -> _SOURCES_
<org.springframework.web.servlet.i18n.SessionLocaleResolver: void setTimeZoneAttributeName(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.support.nativejdbc.C3P0NativeJdbcExtractor: java.sql.Connection doGetNativeConnection(java.sql.Connection)> -> _CWE306__CWE089__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.beans.factory.xml.XmlBeanDefinitionReader: org.springframework.beans.factory.xml.BeanDefinitionDocumentReader createBeanDefinitionDocumentReader()> -> _SOURCES_
<org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: void setJpaProperties(java.util.Properties)> -> _SINKS_
<org.springframework.web.servlet.mvc.ParameterizableViewController: void setStatusOnly(boolean)> -> _SINKS_
<org.springframework.scheduling.commonj.ScheduledTimerListener: long getDelay()> -> _SOURCES_
<org.springframework.format.number.NumberFormatAnnotationFormatterFactory: org.springframework.format.Printer getPrinter(org.springframework.format.'annotation'.NumberFormat,java.lang.Class)> -> _SOURCES_
<org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler: void setSubscriptionRegistry(org.springframework.messaging.simp.broker.SubscriptionRegistry)> -> _SINKS_
<org.springframework.security.config.annotation.authentication.configurers.userdetails.AbstractDaoAuthenticationConfigurer: org.springframework.security.config.'annotation'.authentication.configurers.userdetails.AbstractDaoAuthenticationConfigurer withObjectPostProcessor(org.springframework.security.config.'annotation'.ObjectPostProcessor)> -> _CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.test.web.servlet.result.StatusResultMatchers: org.springframework.test.web.servlet.ResultMatcher isNetworkAuthenticationRequired()> -> _AUTHENTICATIONS_NEUTRAL__CWE306_
<org.springframework.beans.support.RefreshablePagedListHolder: void setLocale(java.util.Locale)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompHeaderAccessor: java.util.Map getNativeHeaders()> -> _SOURCES_
<org.springframework.web.jsf.el.WebApplicationContextFacesELResolver: void setValue(javax.el.ELContext,java.lang.Object,java.lang.Object,java.lang.Object)> -> _SINKS_
<org.springframework.core.enums.LetterCodedLabeledEnum: char getLetterCode()> -> _SOURCES_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.util.concurrent.ListenableFuture getForEntity(java.lang.String,java.lang.Class,java.lang.Object[])> -> _SOURCES__SINKS_
<org.springframework.web.bind.ServletRequestUtils: boolean getRequiredBooleanParameter(javax.servlet.ServletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.beans.propertyeditors.URLEditor: void setAsText(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.config.DatabasePopulatorConfigUtils: java.lang.String getSeparator(org.w3c.dom.Element,org.w3c.dom.Element)> -> _CWE089__SOURCES_
<org.springframework.transaction.support.AbstractPlatformTransactionManager: void setFailEarlyOnGlobalRollbackOnly(boolean)> -> _SINKS_
<org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration: org.springframework.security.authentication.AuthenticationManager getAuthenticationManager()> -> _CWE306__SOURCES__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor: void setAllowCoreThreadTimeOut(boolean)> -> _SINKS_
<org.springframework.web.portlet.handler.UserRoleAuthorizationInterceptor: void setAuthorizedRoles(java.lang.String[])> -> _SINKS_
<org.springframework.jms.config.JmsListenerEndpointRegistrar: org.springframework.jms.config.JmsListenerEndpointRegistry getEndpointRegistry()> -> _SOURCES_
<org.springframework.web.portlet.bind.PortletRequestUtils: boolean[] getRequiredBooleanParameters(javax.portlet.PortletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.jca.work.WorkManagerTaskExecutor: javax.resource.spi.work.WorkManager getDefaultWorkManager()> -> _SOURCES_
<org.springframework.context.annotation.AnnotationConfigApplicationContext: void setBeanNameGenerator(org.springframework.beans.factory.support.BeanNameGenerator)> -> _SINKS_
<org.springframework.web.socket.sockjs.support.AbstractSockJsService: void setSessionCookieNeeded(boolean)> -> _SINKS_
<org.springframework.oxm.xstream.XStreamMarshaller: void setAnnotatedClasses(java.lang.Class[])> -> _SINKS_
<org.springframework.security.access.intercept.AbstractSecurityInterceptor: boolean isAlwaysReauthenticate()> -> _AUTHENTICATIONS_NEUTRAL__CWE306_
<org.springframework.web.portlet.bind.PortletRequestUtils: double getDoubleParameter(javax.portlet.PortletRequest,java.lang.String,double)> -> _SOURCES_
<org.springframework.util.xml.AbstractXMLStreamReader: java.lang.String getNamespaceURI(java.lang.String)> -> _SOURCES_
<org.springframework.beans.factory.config.YamlPropertiesFactoryBean: java.util.Properties getObject()> -> _SOURCES_
<org.springframework.orm.jpa.vendor.OpenJpaVendorAdapter: org.springframework.orm.jpa.JpaDialect getJpaDialect()> -> _SOURCES_
<org.springframework.oxm.castor.CastorMarshaller: void setIdResolver(org.exolab.castor.xml.IDResolver)> -> _SINKS_
<org.springframework.mock.web.portlet.MockStateAwareResponse: void setPortletMode(javax.portlet.PortletMode)> -> _SINKS__CWE601_
<org.springframework.messaging.simp.SimpMessageMappingInfo: org.springframework.messaging.handler.DestinationPatternsMessageCondition getDestinationConditions()> -> _SOURCES_
<org.springframework.jdbc.support.SQLErrorCodesFactory: org.springframework.jdbc.support.SQLErrorCodesFactory getInstance()> -> _CWE089__SOURCES_
<org.springframework.orm.hibernate3.LocalSessionFactoryBean: void setLobHandler(org.springframework.jdbc.support.lob.LobHandler)> -> _SINKS_
<org.springframework.security.core.session.SessionRegistryImpl: java.util.List getAllSessions(java.lang.Object,boolean)> -> _SOURCES_
<org.springframework.context.weaving.DefaultContextLoadTimeWeaver: java.lang.ClassLoader getInstrumentableClassLoader()> -> _SOURCES_
<org.springframework.jdbc.object.RdbmsOperation: void setUpdatableResults(boolean)> -> _CWE089__SINKS_
<org.springframework.http.converter.feed.AbstractWireFeedHttpMessageConverter: void writeInternal(java.lang.Object,org.springframework.http.HttpOutputMessage)> -> _SINKS_
<org.springframework.orm.hibernate4.HibernateTemplate: void setMaxResults(int)> -> _SINKS_
<org.springframework.http.client.support.InterceptingAsyncHttpAccessor: java.util.List getInterceptors()> -> _SOURCES_
<org.springframework.security.authentication.dao.ReflectionSaltSource: void setUserPropertyToUse(java.lang.String)> -> _SINKS_
<org.springframework.web.context.request.async.CallableInterceptorChain: java.lang.Object triggerAfterTimeout(org.springframework.web.context.request.NativeWebRequest,java.util.concurrent.Callable)> -> _SINKS_
<org.springframework.messaging.simp.user.DefaultUserDestinationResolver: void setUserDestinationPrefix(java.lang.String)> -> _SINKS_
<org.springframework.messaging.handler.annotation.support.AbstractMethodArgumentResolutionException: java.lang.String getMethodParamMessage(org.springframework.core.MethodParameter)> -> _SOURCES_
<org.springframework.remoting.support.RemoteExporter: void setServiceInterface(java.lang.Class)> -> _SINKS_
<org.springframework.scheduling.config.ScheduledTaskRegistrar: java.util.List getFixedRateTaskList()> -> _SOURCES_
<org.springframework.orm.hibernate3.TypeDefinitionBean: java.lang.String getTypeName()> -> _SOURCES_
<org.springframework.mock.web.MockJspWriter: int getRemaining()> -> _SOURCES_
<org.springframework.jdbc.datasource.SimpleConnectionHandle: java.sql.Connection getConnection()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__SOURCES__CWE862_
<org.springframework.jmx.export.MBeanExporter: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.expression.spel.ast.InlineList: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.expression.spel.ast.InlineList: java.util.List getConstantValue()> -> _SOURCES_
<org.springframework.jmx.export.metadata.AbstractJmxAttribute: int getCurrencyTimeLimit()> -> _SOURCES_
<org.springframework.jms.config.MethodJmsListenerEndpoint: void setEmbeddedValueResolver(org.springframework.util.StringValueResolver)> -> _SINKS_
<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder secure(boolean)> -> _SOURCES_
<org.springframework.web.socket.client.standard.WebSocketContainerFactoryBean: void setAsyncSendTimeout(long)> -> _SINKS_
<org.springframework.test.web.servlet.htmlunit.DelegatingWebConnection: com.gargoylesoftware.htmlunit.WebResponse getResponse(com.gargoylesoftware.htmlunit.WebRequest)> -> _CWE079__SOURCES__SINKS_
<org.springframework.http.HttpHeaders: java.lang.String getETag()> -> _SOURCES_
<org.springframework.remoting.httpinvoker.HttpInvokerClientInterceptor: org.springframework.remoting.httpinvoker.HttpInvokerRequestExecutor getHttpInvokerRequestExecutor()> -> _SOURCES_
<org.springframework.messaging.core.AbstractMessagingTemplate: org.springframework.messaging.Message sendAndReceive(java.lang.Object,org.springframework.messaging.Message)> -> _SINKS_
<org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: java.lang.Class getEntityManagerInterface()> -> _SOURCES_
<org.springframework.jms.support.JmsMessageHeaderAccessor: javax.jms.Destination getDestination()> -> _SOURCES_
<org.springframework.web.servlet.handler.SimpleUrlHandlerMapping: void setUrlMap(java.util.Map)> -> _SINKS_
<org.springframework.aop.support.DynamicMethodMatcherPointcut: org.springframework.aop.ClassFilter getClassFilter()> -> _SOURCES_
<org.springframework.context.support.AbstractApplicationContext: java.lang.String getMessage(java.lang.String,java.lang.Object[],java.util.Locale)> -> _SOURCES_
<org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource: void setDataSourceLookup(org.springframework.jdbc.datasource.lookup.DataSourceLookup)> -> _CWE089__SINKS_
<org.springframework.security.config.http.UserDetailsServiceFactoryBean: org.springframework.security.core.userdetails.AuthenticationUserDetailsService authenticationUserDetailsService(java.lang.String)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.orm.hibernate3.LocalSessionFactoryBean: void setNamingStrategy(org.hibernate.cfg.NamingStrategy)> -> _SINKS_
<org.springframework.jms.connection.UserCredentialsConnectionFactoryAdapter: javax.jms.Connection doCreateConnection(java.lang.String,java.lang.String)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.mock.web.MockHttpServletRequest: java.lang.StringBuffer getRequestURL()> -> _SOURCES_
<org.springframework.cglib.core.Signature: java.lang.String getName()> -> _SOURCES_
<org.springframework.web.socket.messaging.WebSocketStompClient: void setTaskScheduler(org.springframework.scheduling.TaskScheduler)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletRequest: java.lang.String getRequestURI()> -> _SOURCES_
<org.springframework.orm.hibernate4.HibernateTransactionManager: void setEntityInterceptorBeanName(java.lang.String)> -> _SINKS_
<org.springframework.scripting.jruby.JRubyScriptFactory: java.lang.String getScriptSourceLocator()> -> _SOURCES_
<org.springframework.beans.factory.support.ChildBeanDefinition: java.lang.String getParentName()> -> _SOURCES_
<org.springframework.jdbc.core.metadata.GenericCallMetaDataProvider: java.util.List getCallParameterMetaData()> -> _CWE089__SOURCES_
<org.springframework.security.config.annotation.web.configurers.openid.OpenIDLoginConfigurer: org.springframework.security.config.'annotation'.web.configurers.openid.OpenIDLoginConfigurer authenticationUserDetailsService(org.springframework.security.core.userdetails.AuthenticationUserDetailsService)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.jdbc.core.ResultSetSupportingSqlParameter: org.springframework.jdbc.core.RowMapper getRowMapper()> -> _CWE089__SOURCES_
<org.springframework.orm.hibernate3.SessionHolder: void setTransaction(org.hibernate.Transaction)> -> _SINKS_
<org.springframework.web.servlet.handler.AbstractHandlerMapping: org.springframework.web.cors.CorsProcessor getCorsProcessor()> -> _SOURCES_
<org.springframework.scripting.groovy.GroovyScriptFactory: java.lang.Object executeScript(org.springframework.scripting.ScriptSource,java.lang.Class)> -> _SINKS_
<org.springframework.beans.AbstractNestablePropertyAccessor: org.springframework.beans.AbstractNestablePropertyAccessor getPropertyAccessorForPropertyPath(java.lang.String)> -> _SOURCES_
<org.springframework.web.portlet.multipart.DefaultMultipartActionRequest: void setMultipartParameterContentTypes(java.util.Map)> -> _SINKS_
<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: java.lang.String parseStringValue(java.lang.String,java.util.Properties,java.util.Set)> -> _SOURCES__SINKS_
<org.springframework.http.RequestEntity: java.net.URI getUrl()> -> _SOURCES_
<org.springframework.orm.jdo.LocalPersistenceManagerFactoryBean: void setJdoProperties(java.util.Properties)> -> _SINKS_
<org.springframework.mock.web.portlet.MockMimeResponse: javax.portlet.PortletURL createRenderURL()> -> _SOURCES__CWE601_
<org.springframework.jmx.access.MBeanProxyFactoryBean: void setProxyInterface(java.lang.Class)> -> _SINKS_
<org.springframework.remoting.caucho.SimpleHessianServiceExporter: void handle(com.sun.net.httpserver.HttpExchange)> -> _SINKS_
<org.springframework.remoting.jaxrpc.support.AxisBeanMappingServicePostProcessor: void setTypeNamespaceUri(java.lang.String)> -> _SINKS_
<org.springframework.scheduling.backportconcurrent.ScheduledExecutorFactoryBean: void setPoolSize(int)> -> _SINKS_
<org.springframework.web.servlet.mvc.condition.AbstractMediaTypeExpression: org.springframework.http.MediaType getMediaType()> -> _SOURCES_
<org.springframework.cache.ehcache.EhCacheManagerFactoryBean: void setShared(boolean)> -> _SINKS_
<org.springframework.web.socket.server.support.WebSocketHttpRequestHandler: org.springframework.web.socket.WebSocketHandler getWebSocketHandler()> -> _SOURCES_
<org.springframework.web.servlet.tags.MessageTag: org.springframework.context.MessageSource getMessageSource()> -> _SOURCES_
<org.springframework.web.client.RestTemplate: org.springframework.http.ResponseEntity getForEntity(java.lang.String,java.lang.Class,java.lang.Object[])> -> _SOURCES__SINKS_
<org.springframework.cglib.beans.BeanMap: java.lang.Object getBean()> -> _SOURCES_
<org.springframework.web.servlet.view.document.AbstractExcelView: org.apache.poi.hssf.usermodel.HSSFCell getCell(org.apache.poi.hssf.usermodel.HSSFSheet,int,int)> -> _SOURCES_
<org.springframework.jdbc.core.ColumnMapRowMapper: java.lang.Object getColumnValue(java.sql.ResultSet,int)> -> _CWE089__SOURCES_
<org.springframework.orm.hibernate4.HibernateTemplate: org.hibernate.SessionFactory getSessionFactory()> -> _SOURCES_
<org.springframework.jmx.export.assembler.AbstractReflectiveMBeanInfoAssembler: java.lang.String getAttributeDescription(java.beans.PropertyDescriptor,java.lang.String)> -> _SOURCES_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.util.concurrent.ListenableFuture execute(java.net.URI,org.springframework.http.HttpMethod,org.springframework.web.client.AsyncRequestCallback,org.springframework.web.client.ResponseExtractor)> -> _SINKS_
<org.springframework.jdbc.object.SqlQuery: java.util.List execute(long)> -> _CWE078__CWE089__SINKS_
<org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession: void handleInitialRequest(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,org.springframework.web.socket.sockjs.frame.SockJsFrameFormat)> -> _SINKS_
<org.springframework.jms.listener.AbstractJmsListeningContainer: javax.jms.Connection getSharedConnection()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer: org.springframework.web.servlet.config.'annotation'.ContentNegotiationConfigurer defaultContentTypeStrategy(org.springframework.web.accept.ContentNegotiationStrategy)> -> _SINKS_
<org.springframework.remoting.jaxws.AbstractJaxWsServiceExporter: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.jdbc.support.SQLErrorCodesFactory: org.springframework.core.io.Resource loadResource(java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.http.client.OkHttpClientHttpRequestFactory: void setConnectTimeout(int)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.aop.config.PointcutComponentDefinition: java.lang.Object getSource()> -> _SOURCES_
<org.springframework.orm.hibernate3.SpringSessionSynchronization: org.hibernate.Session getCurrentSession()> -> _SOURCES_
<org.springframework.web.portlet.mvc.AbstractController: void setRenderWhenMinimized(boolean)> -> _SINKS_
<org.springframework.beans.factory.xml.XmlBeanDefinitionReader: void setNamespaceAware(boolean)> -> _SINKS_
<org.springframework.messaging.tcp.reactor.AbstractPromiseToListenableFutureAdapter: java.lang.Object get(long,java.util.concurrent.TimeUnit)> -> _SOURCES_
<org.springframework.jdbc.support.lob.TemporaryLobCreator: void setClobAsCharacterStream(java.sql.PreparedStatement,int,java.io.Reader,int)> -> _CWE089__SINKS_
<org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor: java.lang.Class getRequiredAnnotationType()> -> _SOURCES_
<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.MethodExecutor getCachedExecutor(org.springframework.expression.EvaluationContext,java.lang.Object,org.springframework.core.convert.TypeDescriptor,java.util.List)> -> _SOURCES__SINKS_
<org.springframework.web.servlet.view.velocity.VelocityView: void setNumberToolAttribute(java.lang.String)> -> _SINKS_
<org.springframework.oxm.castor.CastorMarshaller: void setSuppressXsiType(boolean)> -> _SINKS_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: java.sql.Time getTime(java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.http.client.OkHttp3ClientHttpResponse: int getRawStatusCode()> -> _SOURCES__CWE601_
<org.springframework.web.portlet.GenericPortletBean: void setEnvironment(org.springframework.core.env.Environment)> -> _SINKS_
<org.springframework.jmx.export.naming.MetadataNamingStrategy: javax.management.ObjectName getObjectName(java.lang.Object,java.lang.String)> -> _SOURCES_
<org.springframework.transaction.interceptor.MatchAlwaysTransactionAttributeSource: void setTransactionAttribute(org.springframework.transaction.interceptor.TransactionAttribute)> -> _SINKS_
<org.springframework.security.authentication.jaas.DefaultJaasAuthenticationProvider: void setConfiguration(javax.security.auth.login.Configuration)> -> _SINKS_
<org.springframework.core.env.AbstractPropertyResolver: void setConversionService(org.springframework.core.convert.support.ConfigurableConversionService)> -> _SINKS_
<org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean: void setFilters(com.fasterxml.jackson.databind.ser.FilterProvider)> -> _SINKS_
<org.springframework.test.context.support.DefaultTestContext: java.lang.Object getTestInstance()> -> _SOURCES_
<org.springframework.jdbc.core.namedparam.EmptySqlParameterSource: java.lang.String getTypeName(java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.security.authentication.dao.SystemWideSaltSource: java.lang.String getSystemWideSalt()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMethodMappingNamingStrategy: java.lang.String getName(org.springframework.web.method.HandlerMethod,org.springframework.web.servlet.mvc.method.RequestMappingInfo)> -> _CWE079__SOURCES__SINKS_
<org.springframework.web.socket.client.standard.AnnotatedEndpointConnectionManager: void closeConnection()> -> _CWE306__AUTHENTICATIONS_TO_LOW__CWE862_
<org.springframework.mock.web.portlet.MockPortletRequest: java.lang.String getAuthType()> -> _SOURCES_
<org.springframework.security.authentication.jaas.DefaultJaasAuthenticationProvider: javax.security.auth.login.LoginContext createLoginContext(javax.security.auth.callback.CallbackHandler)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.jdbc.core.simple.AbstractJdbcCall: void setInParameterNames(java.util.Set)> -> _CWE089__SINKS_
<org.springframework.mock.web.portlet.MockStateAwareResponse: void setRenderParameter(java.lang.String,java.lang.String[])> -> _SINKS__CWE601_
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: java.lang.String getMessage(java.lang.String,java.lang.Object[],java.lang.String,java.util.Locale)> -> _SOURCES_
<org.springframework.instrument.classloading.SimpleLoadTimeWeaver: java.lang.ClassLoader getInstrumentableClassLoader()> -> _SOURCES_
<org.springframework.util.xml.StaxUtils: javax.xml.stream.XMLStreamWriter getXMLStreamWriter(javax.xml.transform.Result)> -> _SOURCES_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: java.sql.ResultSet getResultSet()> -> _CWE089__SOURCES_
<org.springframework.jdbc.support.JdbcUtils: java.lang.Object getResultSetValue(java.sql.ResultSet,int,java.lang.Class)> -> _CWE089__SOURCES_
<org.springframework.asm.TypeReference: int getTypeArgumentIndex()> -> _SOURCES_
<org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper: org.springframework.security.core.GrantedAuthority getGrantedAuthority(java.lang.String)> -> _SOURCES_
<org.springframework.jdbc.object.SqlUpdate: void setMaxRowsAffected(int)> -> _CWE089__SINKS_
<org.springframework.web.portlet.handler.SimpleMappingExceptionResolver: org.springframework.web.portlet.ModelAndView getModelAndView(java.lang.String,java.lang.Exception)> -> _SOURCES_
<org.springframework.ui.freemarker.FreeMarkerConfigurationFactory: void setConfigLocation(org.springframework.core.io.Resource)> -> _SINKS_
<org.springframework.orm.hibernate5.LocalSessionFactoryBean: void setEntityInterceptor(org.hibernate.Interceptor)> -> _SINKS_
<org.springframework.format.datetime.joda.ReadableInstantPrinter: java.lang.String print(org.joda.time.ReadableInstant,java.util.Locale)> -> _SINKS_
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setExposedContextBeanNames(java.lang.String[])> -> _SINKS_
<org.springframework.messaging.support.MessageHeaderAccessor: void setModified(boolean)> -> _SINKS_
<org.springframework.http.client.BufferingClientHttpResponseWrapper: java.io.InputStream getBody()> -> _SOURCES__CWE601_
<org.springframework.beans.factory.config.PropertyOverrideConfigurer: void setIgnoreInvalidKeys(boolean)> -> _SINKS_
<org.springframework.jdbc.support.incrementer.DerbyMaxValueIncrementer: long getNextKey()> -> _CWE089__SOURCES_
<org.springframework.http.converter.ObjectToStringHttpMessageConverter: void setWriteAcceptCharset(boolean)> -> _SINKS_
<org.springframework.context.support.AbstractApplicationContext: org.springframework.context.MessageSource getInternalParentMessageSource()> -> _SOURCES_
<org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: javax.sql.DataSource getDataSource()> -> _SOURCES_
<org.springframework.jdbc.object.BatchSqlUpdate: int update(java.lang.Object[])> -> _CWE089__SINKS_
<org.springframework.core.convert.support.GenericConversionService: org.springframework.core.convert.converter.GenericConverter getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)> -> _SOURCES_
<org.springframework.context.event.EventListenerMethodProcessor: java.util.List getEventListenerFactories()> -> _SOURCES_
<org.springframework.oxm.jibx.JibxMarshaller: java.lang.Object unmarshalXmlEventReader(javax.xml.stream.XMLEventReader)> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder: org.springframework.web.context.WebApplicationContext getWebApplicationContext()> -> _SOURCES_
<org.springframework.messaging.simp.user.DefaultUserDestinationResolver: java.util.Set getSessionIdsByUser(java.lang.String,java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver: void setLocale(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Locale)> -> _SINKS_
<org.springframework.web.servlet.view.AbstractView: void setBeanName(java.lang.String)> -> _SINKS_
<org.springframework.remoting.jaxrpc.JaxRpcPortClientInterceptor: javax.xml.rpc.Service getJaxRpcService()> -> _SOURCES_
<org.springframework.security.config.http.ClearCredentialsMethodInvokingFactoryBean: boolean isEraseCredentialsAfterAuthentication()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE862_
<org.springframework.mock.web.MockServletContext: void setSessionTrackingModes(java.util.Set)> -> _SINKS_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configureDefaultServletHandling(org.springframework.web.servlet.config.'annotation'.DefaultServletHandlerConfigurer)> -> _SINKS_
<org.springframework.jms.connection.DelegatingConnectionFactory: javax.jms.QueueConnection createQueueConnection()> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.expression.spel.support.ReflectiveConstructorExecutor: org.springframework.expression.TypedValue execute(org.springframework.expression.EvaluationContext,java.lang.Object[])> -> _SINKS_
<org.springframework.web.servlet.handler.SimpleMappingExceptionResolver: void setExceptionAttribute(java.lang.String)> -> _SINKS_
<org.springframework.test.util.ReflectionTestUtils: java.lang.Object getField(java.lang.Object,java.lang.Class,java.lang.String)> -> _SOURCES_
<org.springframework.format.datetime.DateTimeFormatAnnotationFormatterFactory: java.util.Set getFieldTypes()> -> _SOURCES_
<org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache: void setCache(net.sf.ehcache.Ehcache)> -> _SINKS__CWE862_
<org.springframework.web.portlet.context.PortletContextResourceLoader: org.springframework.core.io.Resource getResourceByPath(java.lang.String)> -> _SOURCES_
<org.springframework.scheduling.backportconcurrent.ScheduledExecutorFactoryBean: void setExposeUnconfigurableExecutor(boolean)> -> _SINKS_
<org.springframework.security.core.userdetails.cache.NullUserCache: org.springframework.security.core.userdetails.UserDetails getUserFromCache(java.lang.String)> -> _SOURCES__CWE862_
<org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession: java.net.InetSocketAddress getRemoteAddress()> -> _SOURCES_
<org.springframework.web.multipart.support.DefaultMultipartHttpServletRequest: java.util.Map getParameterMap()> -> _SOURCES__CWE601_
<org.springframework.beans.factory.parsing.CompositeComponentDefinition: org.springframework.beans.factory.parsing.ComponentDefinition[] getNestedComponents()> -> _SOURCES_
<org.springframework.jdbc.support.incrementer.AbstractDataFieldMaxValueIncrementer: javax.sql.DataSource getDataSource()> -> _CWE089__SOURCES_
<org.springframework.web.servlet.mvc.condition.PatternsRequestCondition: int compareTo(org.springframework.web.servlet.mvc.condition.PatternsRequestCondition,javax.servlet.http.HttpServletRequest)> -> _SINKS_
<org.springframework.orm.hibernate4.ConfigurableJtaPlatform: java.lang.Object getJtaPlatformProxy()> -> _SOURCES_
<org.springframework.web.servlet.mvc.ServletWrappingController: void setServletName(java.lang.String)> -> _SINKS_
<org.springframework.validation.BindException: java.util.List getFieldErrors(java.lang.String)> -> _SOURCES_
<org.springframework.scheduling.quartz.JobDetailFactoryBean: void setJobDataMap(org.quartz.JobDataMap)> -> _SINKS_
<org.springframework.validation.DataBinder: org.springframework.beans.SimpleTypeConverter getSimpleTypeConverter()> -> _SOURCES_
<org.springframework.mail.SimpleMailMessage: void setCc(java.lang.String)> -> _SINKS_
<org.springframework.beans.factory.config.DependencyDescriptor: java.lang.reflect.Field getField()> -> _SOURCES_
<org.springframework.web.socket.messaging.WebSocketStompClient: org.springframework.util.concurrent.ListenableFuture connect(java.net.URI,org.springframework.web.socket.WebSocketHttpHeaders,org.springframework.messaging.simp.stomp.StompHeaders,org.springframework.messaging.simp.stomp.StompSessionHandler)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.beans.factory.support.StaticListableBeanFactory: java.util.Map getBeansOfType(java.lang.Class,boolean,boolean)> -> _SOURCES_
<org.springframework.jdbc.support.SQLErrorCodes: void setDatabaseProductName(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.http.converter.BufferedImageHttpMessageConverter: java.util.List getSupportedMediaTypes()> -> _SOURCES_
<org.springframework.messaging.core.AbstractDestinationResolvingMessagingTemplate: org.springframework.messaging.core.DestinationResolver getDestinationResolver()> -> _SOURCES_
<org.springframework.core.env.PropertySourcesPropertyResolver: java.lang.String getPropertyAsRawString(java.lang.String)> -> _SOURCES_
<org.springframework.jmx.export.assembler.SimpleReflectiveMBeanInfoAssembler: boolean includeReadAttribute(java.lang.reflect.Method,java.lang.String)> -> _SOURCES_
<org.springframework.jca.cci.core.CciTemplate: org.springframework.jca.cci.core.RecordCreator getOutputRecordCreator()> -> _SOURCES_
<org.springframework.beans.factory.BeanCreationException: java.lang.String getResourceDescription()> -> _SOURCES_
<org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl: java.lang.String getUsersByUsernameQuery()> -> _CWE089__SOURCES__CWE862_
<org.springframework.jms.config.AbstractJmsListenerContainerFactory: void setReplyPubSubDomain(java.lang.Boolean)> -> _SINKS_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.util.concurrent.ListenableFuture execute(java.lang.String,org.springframework.http.HttpMethod,org.springframework.web.client.AsyncRequestCallback,org.springframework.web.client.ResponseExtractor,java.util.Map)> -> _SINKS_
<org.springframework.remoting.rmi.JndiRmiClientInterceptor: org.springframework.remoting.support.RemoteInvocation createRemoteInvocation(org.aopalliance.intercept.MethodInvocation)> -> _SOURCES_
<org.springframework.security.access.intercept.AbstractSecurityInterceptor: void setValidateConfigAttributes(boolean)> -> _SINKS_
<org.springframework.core.io.DefaultResourceLoader: void setClassLoader(java.lang.ClassLoader)> -> _SOURCES__SINKS_
<org.springframework.web.servlet.view.ResourceBundleViewResolver: void setLocalesToInitialize(java.util.Locale[])> -> _SINKS_
<org.springframework.core.env.AbstractPropertyResolver: void setPlaceholderSuffix(java.lang.String)> -> _SINKS_
<org.springframework.security.config.annotation.web.configurers.LogoutConfigurer: org.springframework.security.config.'annotation'.web.configurers.LogoutConfigurer logoutSuccessUrl(java.lang.String)> -> _CWE306__AUTHENTICATIONS_TO_LOW__CWE862_
<org.springframework.cglib.reflect.FastClassEmitter: int[] getIntRange(int)> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver: void setCustomArgumentResolvers(java.util.List)> -> _SINKS_
<org.springframework.aop.target.CommonsPool2TargetSource: void setBlockWhenExhausted(boolean)> -> _SINKS_
<org.springframework.cglib.core.CodeEmitter: org.springframework.cglib.core.MethodInfo getMethodInfo()> -> _SOURCES_
<org.springframework.security.access.event.AuthorizedEvent: org.springframework.security.core.Authentication getAuthentication()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES_
<org.springframework.jdbc.support.nativejdbc.C3P0NativeJdbcExtractor: boolean isNativeConnectionNecessaryForNativeStatements()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__CWE862_
<org.springframework.web.client.RestTemplate: org.springframework.web.client.RequestCallback acceptHeaderRequestCallback(java.lang.Class)> -> _SOURCES_
<org.springframework.web.client.RestTemplate: org.springframework.http.HttpHeaders headForHeaders(java.lang.String,java.util.Map)> -> _SINKS_
<org.springframework.remoting.jaxrpc.JaxRpcPortProxyFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.jms.connection.SingleConnectionFactory: void setExceptionListener(javax.jms.ExceptionListener)> -> _SINKS_
<org.springframework.jms.listener.endpoint.StandardJmsActivationSpecFactory: void setActivationSpecClass(java.lang.Class)> -> _SINKS_
<org.springframework.mock.web.portlet.MockEvent: javax.xml.namespace.QName getQName()> -> _SOURCES_
<org.springframework.jca.support.ResourceAdapterFactoryBean: void setBootstrapContext(javax.resource.spi.BootstrapContext)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletRequest: java.util.Map getParameterMap()> -> _SOURCES_
<org.springframework.test.context.TestContextManager: java.util.List getReversedTestExecutionListeners()> -> _SOURCES_
<org.springframework.jdbc.support.nativejdbc.Jdbc4NativeJdbcExtractor: java.sql.Statement getNativeStatement(java.sql.Statement)> -> _CWE089__SOURCES_
<org.springframework.aop.interceptor.AbstractMonitoringInterceptor: void setLogTargetClassInvocation(boolean)> -> _SINKS_
<org.springframework.web.socket.sockjs.transport.handler.EventSourceTransportHandler: org.springframework.http.MediaType getContentType()> -> _SOURCES_
<org.springframework.http.client.SimpleStreamingClientHttpRequest: org.springframework.http.HttpMethod getMethod()> -> _SOURCES_
<org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor: void setThreadNamePrefix(java.lang.String)> -> _SINKS_
<org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurer: org.springframework.security.config.'annotation'.web.configurers.SessionManagementConfigurer addSessionAuthenticationStrategy(org.springframework.security.web.authentication.session.SessionAuthenticationStrategy)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.config.annotation.InterceptorRegistry: java.util.List getInterceptors()> -> _SOURCES_
<org.springframework.test.web.servlet.htmlunit.webdriver.WebConnectionHtmlUnitDriver: com.gargoylesoftware.htmlunit.WebConnection getWebConnection()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.orm.jdo.TransactionAwarePersistenceManagerFactoryProxy: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.jdbc.object.SqlFunction: java.lang.Object runGeneric(java.lang.Object[])> -> _CWE089__SINKS_
<org.springframework.orm.hibernate4.LocalSessionFactoryBean: void setDataSource(javax.sql.DataSource)> -> _CWE089__SINKS_
<org.springframework.web.socket.adapter.standard.StandardWebSocketSession: int getBinaryMessageSizeLimit()> -> _SOURCES_
<org.springframework.web.context.request.FacesWebRequest: java.lang.String getParameter(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.security.config.annotation.web.configurers.JeeConfigurer: org.springframework.security.web.authentication.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSource createWebAuthenticationDetailsSource()> -> _CWE306__SOURCES__AUTHENTICATIONS_TO_HIGH_
<org.springframework.messaging.support.MessageHeaderAccessor: boolean isReadableContentType()> -> _SOURCES_
<org.springframework.beans.BeanMetadataAttribute: java.lang.Object getValue()> -> _SOURCES_
<org.springframework.aop.aspectj.AbstractAspectJAdvice: void setThrowingName(java.lang.String)> -> _SINKS_
<org.springframework.aop.interceptor.CustomizableTraceInterceptor: void setExitMessage(java.lang.String)> -> _SINKS_
<org.springframework.jmx.support.ConnectorServerFactoryBean: void setServiceUrl(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.support.nativejdbc.SimpleNativeJdbcExtractor: boolean isNativeConnectionNecessaryForNativeStatements()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__CWE862_
<org.springframework.core.env.SimpleCommandLinePropertySource: java.util.List getOptionValues(java.lang.String)> -> _SOURCES_
<org.springframework.beans.support.PagedListHolder: java.util.List getSource()> -> _SOURCES_
<org.springframework.web.servlet.view.jasperreports.AbstractJasperReportsView: java.util.Map getConvertedExporterParameters()> -> _SOURCES_
<org.springframework.jms.connection.SingleConnectionFactory: javax.jms.ExceptionListener getExceptionListener()> -> _SOURCES_
<org.springframework.util.xml.AbstractXMLReader: void setProperty(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: java.lang.Number doExecuteAndReturnKey(java.util.Map)> -> _CWE078__CWE089__SINKS_
<org.springframework.jca.endpoint.GenericMessageEndpointManager: javax.resource.spi.endpoint.MessageEndpointFactory getMessageEndpointFactory()> -> _SOURCES_
<org.springframework.jms.connection.CachedMessageConsumer: boolean getNoLocal()> -> _SOURCES_
<org.springframework.web.servlet.support.JspAwareRequestContext: java.util.Locale getFallbackLocale()> -> _SOURCES_
<org.springframework.http.converter.FormHttpMessageConverter: void setMultipartCharset(java.nio.charset.Charset)> -> _SINKS_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: void setOnmousemove(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.web.servlet.mvc.method.RequestMappingInfo: org.springframework.web.servlet.mvc.condition.ProducesRequestCondition getProducesCondition()> -> _SOURCES_
<org.springframework.beans.factory.config.BeanReferenceFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanDefinition: java.lang.String getFactoryMethodName()> -> _SOURCES_
<org.springframework.web.jsf.el.WebApplicationContextFacesELResolver: java.lang.Class getType(javax.el.ELContext,java.lang.Object,java.lang.Object)> -> _SOURCES_
<org.springframework.orm.hibernate4.SessionHolder: org.hibernate.Session getSession()> -> _SOURCES_
<org.springframework.web.portlet.mvc.annotation.AnnotationMethodHandlerAdapter: void setSessionAttributeStore(org.springframework.web.bind.support.SessionAttributeStore)> -> _SINKS_
<org.springframework.core.io.ClassPathResource: java.lang.String getPath()> -> _SOURCES_
<org.springframework.messaging.simp.config.MessageBrokerRegistry: java.lang.String getUserRegistryBroadcast()> -> _SOURCES_
<org.springframework.web.socket.adapter.standard.StandardWebSocketSession: void initializeNativeSession(javax.websocket.Session)> -> _SINKS_
<org.springframework.web.servlet.config.GroovyMarkupConfigurerBeanDefinitionParser: java.lang.String getBeanClassName(org.w3c.dom.Element)> -> _SOURCES_
<org.springframework.aop.aspectj.AspectJExpressionPointcut: org.aspectj.weaver.tools.PointcutExpression getPointcutExpression()> -> _SOURCES_
<org.springframework.jca.cci.connection.DelegatingConnectionFactory: javax.resource.cci.ConnectionFactory getTargetConnectionFactory()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.web.portlet.handler.AbstractHandlerExceptionResolver: void setOrder(int)> -> _SINKS_
<org.springframework.jdbc.object.SqlFunction: java.lang.Object runGeneric(int)> -> _CWE089__SINKS_
<org.springframework.cache.ehcache.EhCacheManagerFactoryBean: void setCacheManagerName(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.tags.form.TextareaTag: java.lang.String getCols()> -> _SOURCES_
<org.springframework.core.annotation.OrderUtils: java.lang.Integer getOrder(java.lang.Class)> -> _SOURCES_
<org.springframework.orm.hibernate4.HibernateTemplate: void update(java.lang.Object,org.hibernate.LockMode)> -> _SINKS_
<org.springframework.instrument.classloading.ShadowingClassLoader: java.net.URL getResource(java.lang.String)> -> _SOURCES_
<org.springframework.jmx.support.NotificationListenerHolder: void setNotificationFilter(javax.management.NotificationFilter)> -> _SINKS_
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: javax.servlet.ServletContext getServletContext()> -> _SOURCES_
<org.springframework.remoting.support.SimpleHttpServerFactoryBean: void setBacklog(int)> -> _SINKS_
<org.springframework.http.client.Netty4ClientHttpRequestFactory: void setSslContext(io.netty.handler.ssl.SslContext)> -> _SINKS_
<org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver: void setCustomArgumentResolver(org.springframework.web.bind.support.WebArgumentResolver)> -> _SINKS_
<org.springframework.context.annotation.MBeanExportConfiguration: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.web.multipart.support.AbstractMultipartHttpServletRequest: org.springframework.web.multipart.MultipartFile getFile(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.scripting.groovy.GroovyScriptFactory: java.lang.Object getScriptedObject(org.springframework.scripting.ScriptSource,java.lang.Class[])> -> _SOURCES_
<org.springframework.remoting.rmi.JndiRmiClientInterceptor: boolean isConnectFailure(java.rmi.RemoteException)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE862_
<org.springframework.web.util.UriUtils: java.lang.String decode(java.lang.String,java.lang.String)> -> _SOURCES_
<org.springframework.oxm.castor.CastorMarshaller: void setSchemaLocation(java.lang.String)> -> _SINKS_
<org.springframework.messaging.simp.user.UserRegistryMessageHandler: void setRegistryExpirationPeriod(long)> -> _SINKS__CWE862_
<org.springframework.cache.ehcache.EhCacheCacheManager: org.springframework.cache.Cache getMissingCache(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.view.script.ScriptTemplateConfigurer: java.nio.charset.Charset getCharset()> -> _SOURCES_
<org.springframework.cglib.core.ReflectUtils: java.lang.String[] getNames(java.lang.Class[])> -> _SOURCES_
<org.springframework.cache.interceptor.CacheAspectSupport: org.springframework.cache.interceptor.CacheResolver getCacheResolver()> -> _SOURCES_
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: java.lang.String[] getBeanNamesForAnnotation(java.lang.Class)> -> _SOURCES_
<org.springframework.scheduling.quartz.CronTriggerFactoryBean: org.quartz.CronTrigger getObject()> -> _SOURCES_
<org.springframework.jdbc.core.simple.SimpleJdbcTemplate: int update(java.lang.String,org.springframework.jdbc.core.namedparam.SqlParameterSource)> -> _CWE089__SINKS_
<org.springframework.util.ResponseTimeMonitorImpl: int getBestResponseTimeMillis()> -> _SOURCES__CWE601_
<org.springframework.web.socket.server.support.WebSocketHttpRequestHandler: void setServletContext(javax.servlet.ServletContext)> -> _SINKS_
<org.springframework.util.ReflectionUtils: void setField(java.lang.reflect.Field,java.lang.Object,java.lang.Object)> -> _SINKS_
<org.springframework.web.servlet.i18n.CookieLocaleResolver: java.util.Locale resolveLocale(javax.servlet.http.HttpServletRequest)> -> _SINKS_
<org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener: void beforeTestMethod(org.springframework.test.context.TestContext)> -> _CWE089__SINKS_
<org.springframework.mock.web.portlet.ServletWrappingPortletContext: void log(java.lang.String)> -> _SINKS_
<org.springframework.test.context.support.DefaultTestContext: java.lang.Throwable getTestException()> -> _SOURCES_
<org.springframework.web.servlet.view.script.ScriptTemplateView: void renderMergedOutputModel(java.util.Map,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)> -> _SINKS_
<org.springframework.beans.factory.support.AbstractBeanDefinition: void setBeanClass(java.lang.Class)> -> _SINKS_
<org.springframework.web.bind.ServletRequestUtils: int getIntParameter(javax.servlet.ServletRequest,java.lang.String,int)> -> _SOURCES_
<org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer: void setLocale(java.util.Locale)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletRequest: java.lang.String getParameter(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.List getArgumentResolvers()> -> _SOURCES_
<org.springframework.beans.factory.config.PlaceholderConfigurerSupport: void setNullValue(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: void writeDefaultAttributes(org.springframework.web.servlet.tags.form.TagWriter)> -> _CWE079__SINKS_
<org.springframework.web.multipart.support.DefaultMultipartHttpServletRequest: java.lang.String getMultipartContentType(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.scheduling.concurrent.ScheduledExecutorTask: void setPeriod(long)> -> _SINKS_
<org.springframework.context.annotation.ScannedGenericBeanDefinition: org.springframework.core.type.AnnotationMetadata getMetadata()> -> _SOURCES_
<org.springframework.web.servlet.view.tiles2.TilesConfigurer: void setTilesInitializer(org.apache.tiles.startup.TilesInitializer)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletContext: java.lang.String getPortletContextName()> -> _SOURCES_
<org.springframework.messaging.core.AbstractMessageSendingTemplate: void send(java.lang.Object,org.springframework.messaging.Message)> -> _SINKS_
<org.springframework.mock.web.portlet.MockClientDataRequest: java.io.InputStream getPortletInputStream()> -> _SOURCES_
<org.springframework.web.portlet.mvc.annotation.AnnotationMethodHandlerAdapter: int getOrder()> -> _SOURCES_
<org.springframework.cache.jcache.JCacheManagerFactoryBean: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.orm.toplink.support.CommonsLoggingSessionLog: java.lang.String getMessageString(oracle.toplink.logging.SessionLogEntry)> -> _SOURCES_
<org.springframework.jms.listener.adapter.MessageListenerAdapter: void handleResult(java.lang.Object,javax.jms.Message,javax.jms.Session)> -> _SINKS_
<org.springframework.util.concurrent.SettableListenableFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)> -> _SOURCES_
<org.springframework.web.socket.server.standard.ServletServerContainerFactoryBean: java.lang.Integer getMaxTextMessageBufferSize()> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateTransactionManager: org.springframework.jdbc.support.SQLExceptionTranslator getJdbcExceptionTranslator()> -> _SOURCES_
<org.springframework.jdbc.object.SqlCall: void setFunction(boolean)> -> _CWE089__SINKS_
<org.springframework.jdbc.core.StatementCreatorUtils: void setParameterValue(java.sql.PreparedStatement,int,org.springframework.jdbc.core.SqlParameter,java.lang.Object)> -> _CWE089__SINKS_
<org.springframework.expression.spel.support.StandardEvaluationContext: void setRootObject(java.lang.Object)> -> _SINKS_
<org.springframework.jdbc.datasource.DataSourceTransactionManager: javax.sql.DataSource getDataSource()> -> _CWE089__SOURCES_
<org.springframework.web.socket.adapter.jetty.JettyWebSocketSession: void initializeNativeSession(org.eclipse.jetty.websocket.api.Session)> -> _SINKS_
<org.springframework.web.servlet.support.AbstractFlashMapManager: java.lang.Object getFlashMapsMutex(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.jms.listener.AbstractPollingMessageListenerContainer: boolean receiveAndExecute(java.lang.Object,javax.jms.Session,javax.jms.MessageConsumer)> -> _SINKS_
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: java.lang.Object getBean(java.lang.Class,java.lang.Object[])> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompHeaderAccessor: java.lang.String getMessage()> -> _SOURCES_
<org.springframework.web.portlet.context.XmlPortletApplicationContext: java.lang.String[] getDefaultConfigLocations()> -> _SOURCES_
<org.springframework.test.web.servlet.htmlunit.HtmlUnitRequestBuilder: void setContextPath(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.web.servlet.handler.AbstractHandlerMethodMapping: void setHandlerMethodMappingNamingStrategy(org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy)> -> _SINKS_
<org.springframework.messaging.simp.SimpMessageHeaderAccessor: java.lang.String getDestination(java.util.Map)> -> _SOURCES_
<org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler: java.util.concurrent.ScheduledThreadPoolExecutor getScheduledThreadPoolExecutor()> -> _SOURCES_
<org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.String)> -> _SOURCES_
<org.springframework.aop.target.AbstractPrototypeBasedTargetSource: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.jdbc.core.simple.SimpleJdbcCall: java.lang.Object executeObject(java.lang.Class,java.util.Map)> -> _CWE089__SINKS_
<org.springframework.validation.beanvalidation.SpringValidatorAdapter: java.lang.Object[] getArgumentsForConstraint(java.lang.String,java.lang.String,javax.validation.metadata.ConstraintDescriptor)> -> _SOURCES_
<org.springframework.web.socket.messaging.SubProtocolWebSocketHandler: void afterConnectionClosed(org.springframework.web.socket.WebSocketSession,org.springframework.web.socket.CloseStatus)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.messaging.handler.annotation.support.MethodArgumentNotValidException: org.springframework.validation.BindingResult getBindingResult()> -> _SOURCES_
<org.springframework.orm.hibernate5.HibernateTemplate: void setMaxResults(int)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletPreferences: java.util.Map getMap()> -> _SOURCES_
<org.springframework.core.env.AbstractEnvironment: void setRequiredProperties(java.lang.String[])> -> _SINKS_
<org.springframework.remoting.httpinvoker.AbstractHttpInvokerRequestExecutor: java.lang.String getContentType()> -> _SOURCES_
<org.springframework.web.portlet.context.PortletContextScope: java.lang.String getConversationId()> -> _SOURCES_
<org.springframework.core.io.PathResource: java.lang.String getPath()> -> _SOURCES_
<org.springframework.expression.spel.support.ReflectiveMethodResolver: java.lang.reflect.Method[] getMethods(java.lang.Class)> -> _SOURCES_
<org.springframework.mock.web.MockBodyContent: void println(int)> -> _SINKS_
<org.springframework.web.portlet.handler.PortletModeParameterHandlerMapping: void registerHandler(javax.portlet.PortletMode,java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.jdbc.core.PreparedStatementCreatorFactory: void setNativeJdbcExtractor(org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor)> -> _CWE089__SINKS_
<org.springframework.security.authentication.encoding.Md4PasswordEncoder: java.lang.String encodePassword(java.lang.String,java.lang.Object)> -> _SANITIZERS_
<org.springframework.test.web.client.AbstractRequestExpectationManager: org.springframework.test.web.client.ResponseActions expectRequest(org.springframework.test.web.client.ExpectedCount,org.springframework.test.web.client.RequestMatcher)> -> _SINKS_
<org.springframework.orm.hibernate3.support.OpenSessionInViewFilter: java.lang.String getSessionFactoryBeanName()> -> _SOURCES_
<org.springframework.orm.ibatis.support.BlobSerializableTypeHandler: void setParameterInternal(java.sql.PreparedStatement,int,java.lang.Object,java.lang.String,org.springframework.jdbc.support.lob.LobCreator)> -> _SINKS_
<org.springframework.cache.interceptor.AbstractCacheResolver: void setCacheManager(org.springframework.cache.CacheManager)> -> _SINKS_
<org.springframework.jndi.JndiObjectFactoryBean: void setCache(boolean)> -> _SINKS_
<org.springframework.jdbc.support.JdbcAccessor: org.springframework.jdbc.support.SQLExceptionTranslator getExceptionTranslator()> -> _CWE089__SOURCES_
<org.springframework.cglib.core.AbstractClassGenerator: org.springframework.cglib.core.GeneratorStrategy getStrategy()> -> _SOURCES_
<org.springframework.web.socket.handler.PerConnectionWebSocketHandler: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.mock.web.MockJspWriter: void println(int)> -> _SINKS_
<org.springframework.aop.config.ConfigBeanDefinitionParser: org.springframework.beans.factory.support.AbstractBeanDefinition parsePointcut(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.jdbc.datasource.init.DataSourceInitializer: void setDataSource(javax.sql.DataSource)> -> _CWE089__SINKS_
<org.springframework.cache.support.NoOpCache: java.lang.String getName()> -> _SOURCES_
<org.springframework.core.enums.StaticLabeledEnum: java.lang.Comparable getCode()> -> _SOURCES_
<org.springframework.messaging.support.ExecutorSubscribableChannel: boolean sendInternal(org.springframework.messaging.Message,long)> -> _SINKS_
<org.springframework.jdbc.support.incrementer.SybaseAnywhereMaxValueIncrementer: java.lang.String getIncrementStatement()> -> _CWE089__SOURCES_
<org.springframework.scheduling.quartz.LocalTaskExecutorThreadPool: boolean runInThread(java.lang.Runnable)> -> _SINKS_
<org.springframework.messaging.support.MessageHeaderAccessor: void setContentType(org.springframework.util.MimeType)> -> _SINKS_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: java.sql.Date getDate(int,java.util.Calendar)> -> _CWE089__SOURCES_
<org.springframework.web.portlet.multipart.CommonsPortletMultipartResolver: org.springframework.web.multipart.commons.CommonsFileUploadSupport$MultipartParsingResult parseRequest(javax.portlet.ActionRequest)> -> _SOURCES__SINKS_
<org.springframework.util.DigestUtils: char[] encodeHex(byte[])> -> _SANITIZERS_
<org.springframework.jca.cci.core.CciTemplate: java.lang.Object execute(javax.resource.cci.InteractionSpec,org.springframework.jca.cci.core.RecordCreator,org.springframework.jca.cci.core.RecordExtractor)> -> _SINKS_
<org.springframework.orm.hibernate4.support.AsyncRequestInterceptor: java.lang.Object handleTimeout(org.springframework.web.context.request.NativeWebRequest,java.util.concurrent.Callable)> -> _SINKS_
<org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver: int getOrder()> -> _SOURCES_
<org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurationSupport: org.springframework.web.socket.config.'annotation'.WebSocketTransportRegistration getTransportRegistration()> -> _SOURCES_
<org.springframework.cglib.proxy.Enhancer: void setInterfaces(java.lang.Class[])> -> _SINKS_
<org.springframework.test.web.client.match.JsonPathRequestMatchers: org.springframework.test.web.client.RequestMatcher isNotEmpty()> -> _SOURCES_
<org.springframework.jmx.support.WebLogicJndiMBeanServerFactoryBean: void setMbeanHomeName(java.lang.String)> -> _SINKS_
<org.springframework.beans.factory.config.BeanDefinitionHolder: java.lang.String getBeanName()> -> _SOURCES_
<org.springframework.mail.SimpleMailMessage: void setTo(java.lang.String)> -> _SINKS_
<org.springframework.orm.hibernate4.HibernateTemplate: java.lang.Object load(java.lang.String,java.io.Serializable,org.hibernate.LockMode)> -> _SOURCES__SINKS_
<org.springframework.jms.core.JmsTemplate: void setReceiveTimeout(long)> -> _SINKS_
<org.springframework.jms.connection.CachedMessageProducer: void send(javax.jms.Queue,javax.jms.Message)> -> _SINKS_
<org.springframework.web.portlet.context.PortletApplicationObjectSupport: javax.portlet.PortletContext getPortletContext()> -> _SOURCES_
<org.springframework.util.StopWatch: double getTotalTimeSeconds()> -> _SOURCES_
<org.springframework.orm.hibernate5.LocalSessionFactoryBean: void setConfigLocation(org.springframework.core.io.Resource)> -> _SINKS_
<org.springframework.test.context.support.AbstractTestContextBootstrapper: org.springframework.test.context.BootstrapContext getBootstrapContext()> -> _SOURCES_
<org.springframework.web.socket.handler.PerConnectionWebSocketHandler: void destroyHandler(org.springframework.web.socket.WebSocketSession)> -> _SINKS_
<org.springframework.jmx.export.MBeanExporter: void setAssembler(org.springframework.jmx.export.assembler.MBeanInfoAssembler)> -> _SINKS_
<org.springframework.http.converter.json.GsonFactoryBean: void setDateFormatPattern(java.lang.String)> -> _SINKS_
<org.springframework.jms.listener.AbstractPollingMessageListenerContainer: javax.jms.Connection getConnection(org.springframework.jms.connection.JmsResourceHolder)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.aop.interceptor.AbstractMonitoringInterceptor: void setSuffix(java.lang.String)> -> _SINKS_
<org.springframework.format.support.FormatterPropertyEditorAdapter: java.lang.Class getFieldType()> -> _SOURCES_
<org.springframework.format.datetime.standard.DateTimeFormatterFactory: void setPattern(java.lang.String)> -> _SINKS_
<org.springframework.scheduling.backportconcurrent.ThreadPoolTaskExecutor: void setBeanName(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.view.AbstractView: void setRequestContextAttribute(java.lang.String)> -> _SINKS_
<org.springframework.remoting.rmi.RmiBasedExporter: java.rmi.Remote getObjectToExport()> -> _SOURCES_
<org.springframework.jdbc.core.JdbcTemplate: int getQueryTimeout()> -> _SOURCES_
<org.springframework.web.servlet.handler.AbstractHandlerMethodMapping: org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry getMappingRegistry()> -> _SOURCES_
<org.springframework.security.authentication.dao.DaoAuthenticationProvider: org.springframework.security.core.userdetails.UserDetails retrieveUser(java.lang.String,org.springframework.security.authentication.UsernamePasswordAuthenticationToken)> -> _AUTHENTICATIONS_TO_HIGH_
<org.springframework.jdbc.object.SqlQuery: java.lang.Object findObjectByNamedParam(java.util.Map,java.util.Map)> -> _CWE089__SINKS_
<org.springframework.web.bind.ServletRequestUtils: float getRequiredFloatParameter(javax.servlet.ServletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.beans.GenericTypeAwarePropertyDescriptor: java.lang.reflect.Method getWriteMethod()> -> _SOURCES_
<org.springframework.messaging.converter.MarshallingMessageConverter: void setUnmarshaller(org.springframework.oxm.Unmarshaller)> -> _SINKS_
<org.springframework.web.socket.messaging.WebSocketStompClient: int getPhase()> -> _SOURCES_
<org.springframework.web.socket.server.standard.SpringConfigurator: java.lang.Object getEndpointInstance(java.lang.Class)> -> _SOURCES_
<org.springframework.jms.config.SimpleJmsListenerEndpoint: javax.jms.MessageListener getMessageListener()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: void setDynamicAttribute(java.lang.String,java.lang.String,java.lang.Object)> -> _CWE079__SINKS_
<org.springframework.web.multipart.support.ByteArrayMultipartFileEditor: void setValue(java.lang.Object)> -> _SINKS_
<org.springframework.orm.hibernate3.LocalSessionFactoryBean: org.springframework.jdbc.support.lob.LobHandler getConfigTimeLobHandler()> -> _SOURCES_
<org.springframework.beans.factory.parsing.ReaderContext: org.springframework.core.io.Resource getResource()> -> _SOURCES_
<org.springframework.messaging.simp.stomp.DefaultStompSession: java.lang.String getSessionId()> -> _SOURCES_
<org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder: org.springframework.security.config.'annotation'.SecurityConfigurer getConfigurer(java.lang.Class)> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: void setServerPort(int)> -> _SINKS_
<org.springframework.http.HttpHeaders: java.lang.Object getFirst(java.lang.Object)> -> _SOURCES_
<org.springframework.web.servlet.tags.form.OptionsTag: java.lang.String getItemLabel()> -> _SOURCES_
<org.springframework.messaging.simp.config.StompBrokerRelayRegistration: java.lang.String getUserRegistryBroadcast()> -> _SOURCES_
<org.springframework.orm.hibernate5.support.OpenSessionInViewFilter: boolean applySessionBindingInterceptor(org.springframework.web.context.request.async.WebAsyncManager,java.lang.String)> -> _SINKS_
<org.springframework.orm.jpa.vendor.AbstractJpaVendorAdapter: java.lang.String getDatabasePlatform()> -> _SOURCES_
<org.springframework.expression.spel.ast.OpInc: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.web.servlet.view.tiles3.TilesView: void setRenderer(org.apache.tiles.request.render.Renderer)> -> _SINKS_
<org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate: org.springframework.test.context.cache.ContextCache getContextCache()> -> _SOURCES_
<org.springframework.web.socket.sockjs.frame.SockJsFrame: org.springframework.web.socket.sockjs.frame.SockJsFrame closeFrameAnotherConnectionOpen()> -> _CWE306__AUTHENTICATIONS_TO_LOW__CWE862_
<org.springframework.core.MethodParameter: int getNestingLevel()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: java.util.List getDefaultArgumentResolvers()> -> _SOURCES_
<org.springframework.cache.interceptor.CacheAspectSupport: void setApplicationContext(org.springframework.context.ApplicationContext)> -> _SINKS_
<org.springframework.web.portlet.bind.PortletRequestUtils: java.lang.String getStringParameter(javax.portlet.PortletRequest,java.lang.String,java.lang.String)> -> _SOURCES_
<org.springframework.format.datetime.DateTimeFormatAnnotationFormatterFactory: org.springframework.format.Printer getPrinter(org.springframework.format.'annotation'.DateTimeFormat,java.lang.Class)> -> _SOURCES_
<org.springframework.security.core.token.SecureRandomFactoryBean: java.security.SecureRandom getObject()> -> _SOURCES_
<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: void setServiceUrl(java.lang.String)> -> _SINKS_
<org.springframework.context.support.MessageSourceAccessor: java.lang.String getMessage(java.lang.String,java.lang.Object[])> -> _SOURCES_
<org.springframework.web.portlet.bind.PortletRequestUtils: java.lang.String getRequiredStringParameter(javax.portlet.PortletRequest,java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.http.HttpHeaders: java.util.List getIfMatch()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletRequest: void setParameter(java.lang.String,java.lang.String[])> -> _CWE079__SINKS_
<org.springframework.orm.hibernate5.HibernateTemplate: java.lang.Object load(java.lang.String,java.io.Serializable)> -> _SOURCES_
<org.springframework.jdbc.object.SqlFunction: int run(int)> -> _CWE089__SINKS_
<org.springframework.context.weaving.AspectJWeavingEnabler: void setLoadTimeWeaver(org.springframework.instrument.classloading.LoadTimeWeaver)> -> _SINKS_
<org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider: void setPreAuthenticationChecks(org.springframework.security.core.userdetails.UserDetailsChecker)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.handler.MappedInterceptor: java.lang.String[] getPathPatterns()> -> _SOURCES_
<org.springframework.jndi.JndiObjectFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.util.xml.SimpleNamespaceContext: java.util.Iterator getPrefixes(java.lang.String)> -> _SOURCES_
<org.springframework.orm.hibernate3.support.HibernateDaoSupport: org.hibernate.Session getSession()> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.AbstractClientSockJsSession: org.springframework.web.socket.sockjs.frame.SockJsMessageCodec getMessageCodec()> -> _SOURCES_
<org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParser: org.springframework.beans.factory.support.RootBeanDefinition parseAuthoritiesPopulator(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES__CWE862_
<org.springframework.cache.jcache.interceptor.AbstractFallbackJCacheOperationSource: org.springframework.cache.jcache.interceptor.JCacheOperation getCacheOperation(java.lang.reflect.Method,java.lang.Class)> -> _SOURCES_
<org.springframework.web.context.request.RequestContextHolder: void setRequestAttributes(org.springframework.web.context.request.RequestAttributes,boolean)> -> _SINKS_
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getGenericParameterType(org.springframework.core.MethodParameter,java.lang.Class,int)> -> _SOURCES_
<org.springframework.http.client.OkHttp3AsyncClientHttpRequest: org.springframework.util.concurrent.ListenableFuture executeInternal(org.springframework.http.HttpHeaders,byte[])> -> _SINKS_
<org.springframework.beans.propertyeditors.ReaderEditor: void setAsText(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletConfig: java.lang.String getDefaultNamespace()> -> _SOURCES_
<org.springframework.mail.javamail.JavaMailSenderImpl: java.lang.String getProtocol()> -> _SOURCES_
<org.springframework.expression.common.LiteralExpression: java.lang.Object getValue(org.springframework.expression.EvaluationContext,java.lang.Class)> -> _SOURCES_
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getCollectionParameterType(org.springframework.core.MethodParameter)> -> _SOURCES_
<org.springframework.ejb.access.LocalSlsbInvokerInterceptor: java.lang.Object getSessionBeanInstance()> -> _SOURCES_
<org.springframework.jms.connection.TransactionAwareConnectionFactoryProxy: void setTargetConnectionFactory(javax.jms.ConnectionFactory)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.security.authentication.AnonymousAuthenticationProvider: void setMessageSource(org.springframework.context.MessageSource)> -> _SINKS_
<org.springframework.asm.Type: java.lang.String getMethodDescriptor(org.springframework.asm.Type,org.springframework.asm.Type[])> -> _SOURCES_
<org.springframework.web.portlet.handler.AbstractHandlerMapping: int getOrder()> -> _SOURCES_
<org.springframework.orm.hibernate3.LocalSessionFactoryBean: javax.sql.DataSource getConfigTimeDataSource()> -> _SOURCES_
<org.springframework.web.servlet.support.BindStatus: org.springframework.validation.Errors getErrors()> -> _SOURCES_
<org.springframework.web.multipart.support.AbstractMultipartHttpServletRequest: java.util.Map getFileMap()> -> _SOURCES_
<org.springframework.web.portlet.multipart.CommonsPortletMultipartResolver: org.springframework.web.portlet.multipart.MultipartActionRequest resolveMultipart(javax.portlet.ActionRequest)> -> _SOURCES__SINKS_
<org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: void setConfigurers(java.util.List)> -> _SINKS_
<org.springframework.jdbc.datasource.AbstractDriverBasedDataSource: java.sql.Connection getConnection()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__SOURCES__CWE862_
<org.springframework.jms.connection.CachedMessageProducer: void setDisableMessageTimestamp(boolean)> -> _SINKS_
<org.springframework.orm.hibernate3.LocalSessionFactoryBean: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.http.client.BufferingClientHttpRequestWrapper: java.net.URI getURI()> -> _SOURCES_
<org.springframework.web.servlet.view.xslt.XsltView: javax.xml.transform.Transformer createTransformer(javax.xml.transform.Templates)> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.session.PollingSockJsSession: void handleRequestInternal(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,boolean)> -> _SINKS_
<org.springframework.jdbc.object.RdbmsOperation: java.util.List getDeclaredParameters()> -> _CWE089__SOURCES_
<org.springframework.jmx.access.NotificationListenerRegistrar: void setServer(javax.management.MBeanServerConnection)> -> _SINKS_
<org.springframework.http.client.HttpComponentsAsyncClientHttpRequestFactory: void setHttpAsyncClient(org.apache.http.impl.nio.client.CloseableHttpAsyncClient)> -> _SINKS_
<org.springframework.jdbc.support.nativejdbc.WebLogicNativeJdbcExtractor: boolean isNativeConnectionNecessaryForNativePreparedStatements()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__CWE862_
<org.springframework.beans.factory.config.ListFactoryBean: void setTargetListClass(java.lang.Class)> -> _SINKS_
<org.springframework.test.context.jdbc.MergedSqlConfig: java.lang.String getBlockCommentEndDelimiter()> -> _CWE089__SOURCES_
<org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration: void setApplicationContext(org.springframework.context.ApplicationContext)> -> _SINKS_
<org.springframework.messaging.simp.SimpMessageHeaderAccessor: void setMessageTypeIfNotSet(org.springframework.messaging.simp.SimpMessageType)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler: void setSystemHeartbeatReceiveInterval(long)> -> _SINKS_
<org.springframework.test.web.client.ExpectedCount: int getMinCount()> -> _SOURCES_
<org.springframework.jmx.support.JmxUtils: java.lang.String[] getMethodSignature(java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.context.support.AbstractApplicationContext: void setDisplayName(java.lang.String)> -> _SINKS_
<org.springframework.cache.support.NoOpCache: java.lang.Object get(java.lang.Object,java.util.concurrent.Callable)> -> _SOURCES_
<org.springframework.mail.javamail.MimeMessageHelper: void setBcc(javax.mail.internet.InternetAddress[])> -> _SINKS_
<org.springframework.cache.config.CacheAdviceParser: void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)> -> _SINKS_
<org.springframework.security.authentication.jaas.AbstractJaasAuthenticationProvider: void setLoginExceptionResolver(org.springframework.security.authentication.jaas.LoginExceptionResolver)> -> _CWE306__SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.asm.commons.GeneratorAdapter: void getStatic(org.springframework.asm.Type,java.lang.String,org.springframework.asm.Type)> -> _SOURCES_
<org.springframework.http.CacheControl: java.lang.String getHeaderValue()> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.handler.JsonpPollingTransportHandler: org.springframework.web.socket.sockjs.frame.SockJsFrameFormat getFrameFormat(org.springframework.http.server.ServerHttpRequest)> -> _SOURCES_
<org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper: void setUserDetailsService(org.springframework.security.core.userdetails.UserDetailsService)> -> _SINKS__CWE862_
<org.springframework.remoting.jaxws.LocalJaxWsServiceFactory: void setTaskExecutor(org.springframework.core.task.TaskExecutor)> -> _SINKS_
<org.springframework.orm.ibatis.SqlMapClientFactoryBean: void setTransactionConfigClass(java.lang.Class)> -> _SINKS_
<org.springframework.orm.toplink.TopLinkAccessor: org.springframework.orm.toplink.SessionFactory getSessionFactory()> -> _SOURCES_
<org.springframework.web.context.request.FacesWebRequest: java.util.Map getParameterMap()> -> _SOURCES_
<org.springframework.jndi.JndiObjectFactoryBean: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.beans.factory.config.CustomScopeConfigurer: void setOrder(int)> -> _SINKS_
<org.springframework.web.servlet.support.WebContentGenerator: int getCacheSeconds()> -> _SOURCES_
<org.springframework.util.xml.XMLEventStreamWriter: void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)> -> _SINKS_
<org.springframework.test.web.servlet.request.MockMvcRequestBuilders: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder delete(java.lang.String,java.lang.Object[])> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.UndertowXhrTransport: org.springframework.http.ResponseEntity executeInfoRequestInternal(java.net.URI,org.springframework.http.HttpHeaders)> -> _CWE078__SINKS_
<org.springframework.jdbc.core.simple.SimpleJdbcTemplate: java.lang.Object[] getArguments(java.lang.Object[])> -> _CWE089__SOURCES_
<org.springframework.web.servlet.view.groovy.GroovyMarkupViewResolver: java.lang.Object getCacheKey(java.lang.String,java.util.Locale)> -> _SOURCES_
<org.springframework.web.servlet.view.velocity.VelocityConfigurer: org.apache.velocity.app.VelocityEngine getVelocityEngine()> -> _SOURCES_
<org.springframework.expression.common.CompositeStringExpression: java.lang.Object getValue(org.springframework.expression.EvaluationContext,java.lang.Class)> -> _SOURCES_
<org.springframework.orm.hibernate5.HibernateTransactionManager: void setEntityInterceptor(org.hibernate.Interceptor)> -> _SINKS_
<org.springframework.security.access.intercept.InterceptorStatusToken: org.springframework.security.core.Authentication getAuthentication()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES_
<org.springframework.beans.factory.wiring.BeanWiringInfo: java.lang.String getBeanName()> -> _SOURCES_
<org.springframework.beans.factory.config.CustomEditorConfigurer: void setCustomEditors(java.util.Map)> -> _SINKS_
<org.springframework.orm.hibernate5.LocalSessionFactoryBean: void setConfigLocations(org.springframework.core.io.Resource[])> -> _SINKS_
<org.springframework.orm.ibatis.SqlMapClientTemplate: void setSqlMapClient(com.ibatis.sqlmap.client.SqlMapClient)> -> _SINKS_
<org.springframework.security.access.expression.method.MethodSecurityExpressionRoot: java.lang.Object getFilterObject()> -> _SOURCES_
<org.springframework.scheduling.quartz.SchedulerAccessor: void setTriggerListeners(org.quartz.TriggerListener[])> -> _SINKS_
<org.springframework.http.client.OkHttpClientHttpResponse: int getRawStatusCode()> -> _SOURCES__CWE601_
<org.springframework.web.servlet.view.ResourceBundleViewResolver: void setBasenames(java.lang.String[])> -> _SINKS_
<org.springframework.jdbc.support.xml.Jdbc4SqlXmlHandler: java.io.Reader getXmlAsCharacterStream(java.sql.ResultSet,int)> -> _CWE089__SOURCES_
<org.springframework.format.datetime.DateFormatter: void setTimeZone(java.util.TimeZone)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletResponse: void setIntHeader(java.lang.String,int)> -> _CWE079__SINKS__CWE601_
<org.springframework.format.datetime.standard.DateTimeFormatterRegistrar: void setDateTimeFormatter(java.time.format.DateTimeFormatter)> -> _SINKS_
<org.springframework.cache.interceptor.CacheOperation: java.lang.String getName()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockMimeResponse: byte[] getContentAsByteArray()> -> _SOURCES__CWE601_
<org.springframework.web.portlet.util.PortletUtils: java.lang.String getRealPath(javax.portlet.PortletContext,java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.support.AbstractDispatcherServletInitializer: java.lang.String getServletName()> -> _SOURCES_
<org.springframework.http.client.SimpleClientHttpResponse: int getRawStatusCode()> -> _SOURCES__CWE601_
<org.springframework.beans.propertyeditors.PathEditor: void setAsText(java.lang.String)> -> _SINKS_
<org.springframework.jmx.export.assembler.InterfaceBasedMBeanInfoAssembler: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.web.util.WebUtils: java.lang.Object getSessionMutex(javax.servlet.http.HttpSession)> -> _SOURCES_
<org.springframework.transaction.support.TransactionSynchronizationManager: java.lang.Integer getCurrentTransactionIsolationLevel()> -> _SOURCES_
<org.springframework.transaction.jta.JtaTransactionManager: void setAllowCustomIsolationLevels(boolean)> -> _SINKS_
<org.springframework.jca.work.jboss.JBossWorkManagerUtils: javax.resource.spi.work.WorkManager getWorkManager()> -> _SOURCES_
<org.springframework.web.socket.config.WebSocketMessageBrokerStats: java.lang.String getStompBrokerRelayStatsInfo()> -> _SOURCES_
<org.springframework.test.context.support.GenericGroovyXmlContextLoader: java.lang.String getResourceSuffix()> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanFactory: void setTempClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.orm.toplink.LocalSessionFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.mock.web.MockJspWriter: void println(char[])> -> _SINKS_
<org.springframework.jdbc.config.InitializeDatabaseBeanDefinitionParser: org.springframework.beans.factory.support.AbstractBeanDefinition parseInternal(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _CWE089__SOURCES_
<org.springframework.jdbc.support.SQLErrorCodes: java.lang.String[] getDataIntegrityViolationCodes()> -> _CWE089__SOURCES_
<org.springframework.format.support.FormattingConversionService: java.lang.Class getAnnotationType(org.springframework.format.AnnotationFormatterFactory)> -> _SOURCES_
<org.springframework.web.servlet.view.RedirectView: void setStatusCode(org.springframework.http.HttpStatus)> -> _SINKS_
<org.springframework.util.comparator.CompoundComparator: void setComparator(int,java.util.Comparator,boolean)> -> _SINKS_
<org.springframework.web.context.request.async.WebAsyncTask: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.jca.cci.connection.ConnectionFactoryUtils: void doReleaseConnection(javax.resource.cci.Connection,javax.resource.cci.ConnectionFactory)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.asm.TypeReference: int getFormalParameterIndex()> -> _SOURCES_
<org.springframework.validation.DataBinder: void setAllowedFields(java.lang.String[])> -> _SINKS_
<org.springframework.http.server.ServletServerHttpRequest: java.io.InputStream getBodyFromServletRequestParameters(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.web.method.annotation.ExceptionHandlerMethodResolver: java.lang.reflect.Method getMappedMethod(java.lang.Class)> -> _SOURCES_
<org.springframework.web.servlet.view.velocity.VelocityToolboxView: void setToolboxConfigLocation(java.lang.String)> -> _SINKS_
<org.springframework.beans.factory.config.PropertyPathFactoryBean: void setTargetBeanName(java.lang.String)> -> _SINKS_
<org.springframework.security.core.context.SecurityContextImpl: org.springframework.security.core.Authentication getAuthentication()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES_
<org.springframework.beans.propertyeditors.CustomCollectionEditor: void setValue(java.lang.Object)> -> _SINKS_
<org.springframework.http.client.SimpleClientHttpRequestFactory: void setChunkSize(int)> -> _SINKS_
<org.springframework.jmx.export.assembler.AbstractReflectiveMBeanInfoAssembler: void setDefaultCurrencyTimeLimit(java.lang.Integer)> -> _SINKS_
<org.springframework.cache.annotation.SpringCacheAnnotationParser: java.util.Collection parseCacheAnnotations(java.lang.reflect.Method)> -> _SINKS_
<org.springframework.web.socket.sockjs.support.AbstractSockJsService: void setWebSocketEnabled(boolean)> -> _SINKS_
<org.springframework.jms.core.support.JmsGatewaySupport: void setJmsTemplate(org.springframework.jms.core.JmsTemplate)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletRequest: void setSession(javax.servlet.http.HttpSession)> -> _CWE079__SINKS_
<org.springframework.security.access.vote.AuthenticatedVoter: boolean isFullyAuthenticated(org.springframework.security.core.Authentication)> -> _AUTHENTICATIONS_NEUTRAL__CWE306_
<org.springframework.messaging.core.AbstractDestinationResolvingMessagingTemplate: void convertAndSend(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.security.config.authentication.PasswordEncoderParser: org.springframework.beans.factory.config.BeanDefinition createPasswordEncoderBeanDefinition(java.lang.String,boolean)> -> _SANITIZERS_
<org.springframework.security.config.annotation.web.configurers.RequestCacheConfigurer: org.springframework.security.web.savedrequest.RequestCache getRequestCache(org.springframework.security.config.'annotation'.web.HttpSecurityBuilder)> -> _SOURCES_
<org.springframework.expression.spel.standard.SpelExpression: void setEvaluationContext(org.springframework.expression.EvaluationContext)> -> _SINKS_
<org.springframework.orm.toplink.support.TopLinkDaoSupport: oracle.toplink.sessions.Session getSession()> -> _SOURCES_
<org.springframework.jca.cci.connection.DelegatingConnectionFactory: javax.resource.cci.ResourceAdapterMetaData getMetaData()> -> _SOURCES_
<org.springframework.orm.hibernate5.LocalSessionFactoryBean: void setPhysicalNamingStrategy(org.hibernate.boot.model.naming.PhysicalNamingStrategy)> -> _SINKS_
<org.springframework.context.support.GenericXmlApplicationContext: void load(java.lang.Class,java.lang.String[])> -> _SOURCES_
<org.springframework.util.ConcurrentReferenceHashMap: int getHash(java.lang.Object)> -> _SOURCES_
<org.springframework.core.enums.AbstractCachingLabeledEnumResolver: org.springframework.core.enums.LabeledEnum getLabeledEnumByLabel(java.lang.Class,java.lang.String)> -> _SOURCES_
<org.springframework.context.annotation.ConfigurationClass: java.util.Set getBeanMethods()> -> _SOURCES_
<org.springframework.jms.listener.serversession.CommonsPoolServerSessionFactory: int getMinIdle()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.ErrorsTag: java.lang.String getName()> -> _SOURCES_
<org.springframework.orm.hibernate3.LocalSessionFactoryBean: void setEventListeners(java.util.Map)> -> _SINKS_
<org.springframework.jmx.access.MBeanClientInterceptor: void setUseStrictCasing(boolean)> -> _SINKS_
<org.springframework.format.datetime.standard.PeriodFormatter: java.lang.String print(java.lang.Object,java.util.Locale)> -> _SINKS_
<org.springframework.jms.config.DefaultJmsListenerContainerFactory: void setReceiveTimeout(java.lang.Long)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler: int getRelayPort()> -> _SOURCES_
<org.springframework.http.converter.AbstractHttpMessageConverter: java.util.List getSupportedMediaTypes()> -> _SOURCES_
<org.springframework.util.ReflectionUtils: java.lang.Object getField(java.lang.reflect.Field,java.lang.Object)> -> _SOURCES_
<org.springframework.cache.guava.GuavaCache: java.lang.String getName()> -> _SOURCES_
<org.springframework.oxm.castor.CastorMarshaller: void setRootElement(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: javax.servlet.ServletContext getServletContext()> -> _SOURCES_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: void setGeneratedKeyName(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.cache.jcache.interceptor.BeanFactoryJCacheOperationSourceAdvisor: void setClassFilter(org.springframework.aop.ClassFilter)> -> _SINKS_
<org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder: java.security.MessageDigest getMessageDigest()> -> _SOURCES_
<org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl: void setHierarchy(java.lang.String)> -> _SINKS_
<org.springframework.cglib.core.CodeEmitter: org.springframework.cglib.core.Signature getSignature()> -> _SOURCES_
<org.springframework.web.context.request.async.TimeoutCallableProcessingInterceptor: java.lang.Object handleTimeout(org.springframework.web.context.request.NativeWebRequest,java.util.concurrent.Callable)> -> _SINKS_
<org.springframework.util.ClassUtils: java.util.Set getAllInterfacesForClassAsSet(java.lang.Class,java.lang.ClassLoader)> -> _SOURCES_
<org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver: void setCustomArgumentResolvers(org.springframework.web.bind.support.WebArgumentResolver[])> -> _SINKS_
<org.springframework.orm.jpa.persistenceunit.MutablePersistenceUnitInfo: void setPersistenceUnitName(java.lang.String)> -> _SINKS_
<org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean: void setDateFormat(java.text.DateFormat)> -> _SINKS_
<org.springframework.util.xml.XMLEventStreamReader: java.lang.String getEncoding()> -> _SOURCES_
<org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: javax.persistence.EntityManagerFactory getObject()> -> _SOURCES_
<org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter: org.springframework.remoting.support.RemoteInvocation readRemoteInvocation(javax.servlet.http.HttpServletRequest,java.io.InputStream)> -> _SOURCES_
<org.springframework.security.authentication.jaas.JaasAuthenticationProvider: org.springframework.security.authentication.jaas.LoginExceptionResolver getLoginExceptionResolver()> -> _CWE306__SOURCES_
<org.springframework.oxm.xstream.XStreamMarshaller: com.thoughtworks.xstream.io.HierarchicalStreamDriver getDefaultDriver()> -> _SOURCES_
<org.springframework.http.client.HttpComponentsStreamingClientHttpRequest: java.net.URI getURI()> -> _SOURCES_
<org.springframework.scheduling.backportconcurrent.ScheduledExecutorFactoryBean: void setContinueScheduledExecutionAfterException(boolean)> -> _SINKS_
<org.springframework.format.datetime.joda.JodaTimeContext: org.joda.time.DateTimeZone getTimeZone()> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession: java.util.Queue getMessageCache()> -> _SOURCES_
<org.springframework.web.socket.messaging.SubProtocolWebSocketHandler: java.util.List getSubProtocols()> -> _SOURCES_
<org.springframework.web.context.support.ContextExposingHttpServletRequest: org.springframework.web.context.WebApplicationContext getWebApplicationContext()> -> _SOURCES_
<org.springframework.format.datetime.joda.YearMonthFormatter: java.lang.String print(java.lang.Object,java.util.Locale)> -> _SINKS_
<org.springframework.expression.spel.support.StandardEvaluationContext: org.springframework.expression.TypeConverter getTypeConverter()> -> _SOURCES_
<org.springframework.web.servlet.view.RedirectView: void setHosts(java.lang.String[])> -> _SINKS_
<org.springframework.jms.connection.TransactionAwareConnectionFactoryProxy: javax.jms.ConnectionFactory getTargetConnectionFactory()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.security.access.intercept.AbstractSecurityInterceptor: void setAfterInvocationManager(org.springframework.security.access.intercept.AfterInvocationManager)> -> _SINKS_
<org.springframework.web.context.support.AnnotationConfigWebApplicationContext: org.springframework.context.'annotation'.ClassPathBeanDefinitionScanner getClassPathBeanDefinitionScanner(org.springframework.beans.factory.support.DefaultListableBeanFactory)> -> _SOURCES_
<org.springframework.http.converter.StringHttpMessageConverter: void writeInternal(java.lang.Object,org.springframework.http.HttpOutputMessage)> -> _SINKS_
<org.springframework.beans.factory.access.el.SpringBeanELResolver: java.lang.Class getType(javax.el.ELContext,java.lang.Object,java.lang.Object)> -> _SOURCES_
<org.springframework.http.HttpHeaders: java.util.List getAccessControlAllowHeaders()> -> _SOURCES_
<org.springframework.cache.ehcache.EhCacheFactoryBean: void setBeanName(java.lang.String)> -> _SINKS_
<org.springframework.mail.javamail.MimeMailMessage: void setFrom(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.resource.ResourceUrlProvider: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)> -> _SINKS_
<org.springframework.context.expression.CachedExpressionEvaluator: org.springframework.expression.spel.standard.SpelExpressionParser getParser()> -> _SOURCES_
<org.springframework.transaction.support.TransactionTemplate: org.springframework.transaction.PlatformTransactionManager getTransactionManager()> -> _SOURCES_
<org.springframework.aop.framework.ProxyConfig: void setExposeProxy(boolean)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletResponse: javax.servlet.http.Cookie getCookie(java.lang.String)> -> _SOURCES__CWE601_
<org.springframework.web.servlet.view.tiles3.TilesConfigurer: void setTilesInitializer(org.apache.tiles.startup.TilesInitializer)> -> _SINKS_
<org.springframework.beans.factory.BeanCreationException: java.lang.String getBeanName()> -> _SOURCES_
<org.springframework.core.MethodParameter: void setParameterType(java.lang.Class)> -> _SINKS_
<org.springframework.mock.web.portlet.MockClientDataRequest: void setCharacterEncoding(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.web.servlet.tags.form.AbstractSingleCheckedElementTag: java.lang.Object getValue()> -> _SOURCES_
<org.springframework.orm.ibatis.SqlMapClientTemplate: void queryWithRowHandler(java.lang.String,java.lang.Object,com.ibatis.sqlmap.client.event.RowHandler)> -> _SINKS_
<org.springframework.validation.AbstractErrors: org.springframework.validation.FieldError getFieldError()> -> _SOURCES_
<org.springframework.web.servlet.DispatcherServlet: void setDetectAllHandlerAdapters(boolean)> -> _SINKS_
<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setContentNegotiationManager(org.springframework.web.accept.ContentNegotiationManager)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompHeaders: java.util.List get(java.lang.Object)> -> _SOURCES_
<org.springframework.security.access.intercept.AbstractSecurityInterceptor: org.springframework.security.access.intercept.AfterInvocationManager getAfterInvocationManager()> -> _SOURCES_
<org.springframework.orm.hibernate3.AbstractSessionFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.cache.jcache.interceptor.DefaultCacheMethodDetails: java.lang.reflect.Method getMethod()> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.handler.HtmlFileTransportHandler: org.springframework.web.socket.sockjs.transport.TransportType getTransportType()> -> _SOURCES_
<org.springframework.ui.velocity.SpringResourceLoader: long getLastModified(org.apache.velocity.runtime.resource.Resource)> -> _SOURCES_
<org.springframework.web.servlet.view.velocity.VelocityView: void setEncoding(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.support.RequestContext: java.util.TimeZone getTimeZone()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.ExceptionHandlingConfigurer: org.springframework.security.config.'annotation'.web.configurers.ExceptionHandlingConfigurer authenticationEntryPoint(org.springframework.security.web.AuthenticationEntryPoint)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.cors.UrlBasedCorsConfigurationSource: void setPathMatcher(org.springframework.util.PathMatcher)> -> _SINKS_
<org.springframework.beans.factory.parsing.ImportDefinition: java.lang.String getImportedResource()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.ExceptionHandlingConfigurer: org.springframework.security.config.'annotation'.web.configurers.ExceptionHandlingConfigurer defaultAuthenticationEntryPointFor(org.springframework.security.web.AuthenticationEntryPoint,org.springframework.security.web.util.matcher.RequestMatcher)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.method.annotation.MethodArgumentConversionNotSupportedException: java.lang.String getName()> -> _SOURCES_
<org.springframework.web.servlet.handler.AbstractUrlHandlerMapping: java.lang.Object getHandlerInternal(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.test.context.support.GenericGroovyXmlContextLoader: void loadBeanDefinitions(org.springframework.context.support.GenericApplicationContext,org.springframework.test.context.MergedContextConfiguration)> -> _SOURCES_
<org.springframework.web.client.support.RestGatewaySupport: org.springframework.web.client.RestTemplate getRestTemplate()> -> _SOURCES_
<org.springframework.validation.AbstractPropertyBindingResult: java.beans.PropertyEditor getCustomEditor(java.lang.String)> -> _SOURCES_
<org.springframework.core.annotation.AnnotatedElementUtils: org.springframework.core.'annotation'.AnnotationAttributes getMergedAnnotationAttributes(java.lang.reflect.AnnotatedElement,java.lang.String,boolean,boolean)> -> _SOURCES_
<org.springframework.orm.jdo.JdoAccessor: javax.jdo.PersistenceManagerFactory getPersistenceManagerFactory()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.PasswordInputTag: void setShowPassword(boolean)> -> _SINKS_
<org.springframework.objenesis.ObjenesisBase: org.springframework.objenesis.instantiator.ObjectInstantiator getInstantiatorOf(java.lang.Class)> -> _SOURCES_
<org.springframework.expression.spel.ast.OperatorNot: org.springframework.expression.spel.support.BooleanTypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.security.authentication.dao.ReflectionSaltSource: java.lang.Object getSalt(org.springframework.security.core.userdetails.UserDetails)> -> _SOURCES_
<org.springframework.test.web.client.match.MockRestRequestMatchers: org.springframework.test.web.client.match.JsonPathRequestMatchers jsonPath(java.lang.String,java.lang.Object[])> -> _SOURCES_
<org.springframework.http.HttpHeaders: void setConnection(java.lang.String)> -> _CWE306__SINKS_
<org.springframework.jmx.export.MBeanExporter: void setExposeManagedResourceClassLoader(boolean)> -> _SINKS_
<org.springframework.jms.connection.UserCredentialsConnectionFactoryAdapter: javax.jms.QueueConnection createQueueConnection()> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler: void setPathMatcher(org.springframework.util.PathMatcher)> -> _SINKS_
<org.springframework.beans.factory.support.AbstractBeanDefinition: java.lang.String[] getDependsOn()> -> _SOURCES_
<org.springframework.web.servlet.handler.AbstractHandlerMapping: void setRemoveSemicolonContent(boolean)> -> _SINKS_
<org.springframework.web.multipart.support.AbstractMultipartHttpServletRequest: javax.servlet.http.HttpServletRequest getRequest()> -> _SOURCES_
<org.springframework.orm.toplink.LocalSessionFactory: void setConfigLocation(java.lang.String)> -> _SINKS_
<org.springframework.scheduling.backportconcurrent.ScheduledExecutorTask: void setRunnable(java.lang.Runnable)> -> _SINKS_
<org.springframework.web.socket.config.annotation.SockJsServiceRegistration: org.springframework.web.socket.config.'annotation'.SockJsServiceRegistration setInterceptors(org.springframework.web.socket.server.HandshakeInterceptor[])> -> _SINKS_
<org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.web.socket.handler.ExceptionWebSocketHandlerDecorator: void afterConnectionClosed(org.springframework.web.socket.WebSocketSession,org.springframework.web.socket.CloseStatus)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.validation.beanvalidation.MethodValidationPostProcessor: void setValidator(javax.validation.Validator)> -> _SINKS_
<org.springframework.mock.web.portlet.ServletWrappingPortletContext: java.lang.Object getAttribute(java.lang.String)> -> _SOURCES_
<org.springframework.web.socket.adapter.jetty.JettyWebSocketSession: int getTextMessageSizeLimit()> -> _SOURCES_
<org.springframework.web.portlet.bind.PortletRequestUtils: double[] getDoubleParameters(javax.portlet.PortletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.jmx.export.MBeanExporter: void setNotificationListeners(org.springframework.jmx.export.NotificationListenerBean[])> -> _SINKS_
<org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer: java.lang.Long getTimeout()> -> _SOURCES_
<org.springframework.web.bind.EscapedErrors: void setNestedPath(java.lang.String)> -> _SINKS_
<org.springframework.messaging.handler.annotation.support.MethodArgumentNotValidException: java.lang.String getValidationErrorMessage(org.springframework.validation.BindingResult)> -> _SOURCES_
<org.springframework.web.portlet.bind.PortletRequestUtils: double getRequiredDoubleParameter(javax.portlet.PortletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.support.RequestContext: org.springframework.ui.context.Theme getFallbackTheme()> -> _SOURCES_
<org.springframework.cache.interceptor.CacheExpressionRootObject: java.util.Collection getCaches()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.AbstractInterceptUrlConfigurer: org.springframework.security.access.AccessDecisionManager getAccessDecisionManager(org.springframework.security.config.'annotation'.web.HttpSecurityBuilder)> -> _SOURCES_
<org.springframework.test.web.client.match.MockRestRequestMatchers: org.springframework.test.web.client.RequestMatcher queryParam(java.lang.String,java.lang.String[])> -> _SOURCES_
<org.springframework.security.authentication.ProviderManager: void setMessageSource(org.springframework.context.MessageSource)> -> _SINKS_
<org.springframework.context.support.AbstractApplicationContext: java.lang.Class getType(java.lang.String)> -> _SOURCES_
<org.springframework.jms.listener.adapter.AbstractAdaptableMessageListener: void sendResponse(javax.jms.Session,javax.jms.Destination,javax.jms.Message)> -> _SINKS_
<org.springframework.core.Conventions: java.lang.String getVariableNameForParameter(org.springframework.core.MethodParameter)> -> _SOURCES_
<org.springframework.test.context.web.socket.MockServerContainer: void setDefaultMaxSessionIdleTimeout(long)> -> _SINKS_
<org.springframework.web.servlet.DispatcherServlet: java.lang.String getDefaultViewName(javax.servlet.http.HttpServletRequest)> -> _CWE079__SOURCES_
<org.springframework.context.annotation.AnnotationScopeMetadataResolver: void setScopeAnnotationType(java.lang.Class)> -> _SINKS_
<org.springframework.metadata.commons.CommonsAttributes: java.util.Collection getAttributes(java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.expression.spel.standard.SpelCompiler: org.springframework.expression.spel.standard.SpelCompiler getCompiler(java.lang.ClassLoader)> -> _CWE078__SOURCES_
<org.springframework.mock.web.MockHttpServletResponse: byte[] getContentAsByteArray()> -> _SOURCES__CWE601_
<org.springframework.beans.factory.BeanCreationException: void printStackTrace(java.io.PrintWriter)> -> _SINKS_
<org.springframework.scheduling.concurrent.ScheduledExecutorFactoryBean: void setBeanName(java.lang.String)> -> _SINKS_
<org.springframework.web.portlet.DispatcherPortlet: java.util.List getDefaultStrategies(org.springframework.context.ApplicationContext,java.lang.Class)> -> _SOURCES_
<org.springframework.orm.jdo.PersistenceManagerHolder: javax.jdo.PersistenceManager getPersistenceManager()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.AnonymousConfigurer: org.springframework.security.config.'annotation'.web.configurers.AnonymousConfigurer authenticationProvider(org.springframework.security.authentication.AuthenticationProvider)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addCorsMappings(org.springframework.web.servlet.config.'annotation'.CorsRegistry)> -> _SINKS_
<org.springframework.cglib.transform.ClassTransformerChain: void setTarget(org.springframework.asm.ClassVisitor)> -> _SINKS_
<org.springframework.scheduling.concurrent.ScheduledExecutorTask: void setDelay(long)> -> _SINKS_
<org.springframework.web.portlet.context.PortletApplicationContextUtils: org.springframework.web.portlet.context.PortletRequestAttributes currentRequestAttributes()> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration: org.springframework.web.servlet.config.'annotation'.ResourceHandlerRegistration setCacheControl(org.springframework.http.CacheControl)> -> _SINKS_
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object getObjectForBeanInstance(java.lang.Object,java.lang.String,java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)> -> _SOURCES_
<org.springframework.security.config.http.CsrfBeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition getCsrfAuthenticationStrategy()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES_
<org.springframework.messaging.simp.stomp.DefaultStompSession: boolean isConnected()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE862_
<org.springframework.expression.spel.support.ReflectiveConstructorExecutor: java.lang.reflect.Constructor getConstructor()> -> _SOURCES_
<org.springframework.oxm.xstream.XStreamMarshaller: java.lang.Object unmarshalXmlStreamReader(javax.xml.stream.XMLStreamReader)> -> _SOURCES_
<org.springframework.core.io.PathResource: java.io.OutputStream getOutputStream()> -> _SOURCES_
<org.springframework.web.client.RestTemplate: java.util.Set optionsForAllow(java.lang.String,java.util.Map)> -> _SINKS_
<org.springframework.web.portlet.context.PortletContextResource: java.lang.String getPathWithinContext()> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.DefaultTransportRequest: void setUser(java.security.Principal)> -> _SINKS_
<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: org.springframework.validation.Validator getValidator()> -> _SOURCES_
<org.springframework.core.env.SimpleCommandLineArgsParser: org.springframework.core.env.CommandLineArgs parse(java.lang.String[])> -> _SINKS_
<org.springframework.security.authentication.jaas.event.JaasAuthenticationEvent: org.springframework.security.core.Authentication getAuthentication()> -> _CWE306__SOURCES__AUTHENTICATIONS_TO_HIGH_
<org.springframework.expression.spel.ast.PropertyOrFieldReference: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.web.context.request.ServletWebRequest: java.lang.Object getNativeResponse()> -> _SOURCES_
<org.springframework.web.servlet.view.tiles3.TilesConfigurer: void setDefinitionsFactoryClass(java.lang.Class)> -> _SINKS_
<org.springframework.messaging.simp.SimpMessagingTemplate: void convertAndSendToUser(java.lang.String,java.lang.String,java.lang.Object,java.util.Map,org.springframework.messaging.core.MessagePostProcessor)> -> _SINKS_
<org.springframework.beans.factory.support.MethodOverride: java.lang.String getMethodName()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: java.lang.String getOnkeyup()> -> _CWE079__SOURCES_
<org.springframework.messaging.simp.stomp.DefaultStompSession: void afterConnected(org.springframework.messaging.tcp.TcpConnection)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.socket.sockjs.transport.session.WebSocketServerSockJsSession: org.springframework.http.HttpHeaders getHandshakeHeaders()> -> _SOURCES_
<org.springframework.web.jsf.el.WebApplicationContextFacesELResolver: boolean isReadOnly(javax.el.ELContext,java.lang.Object,java.lang.Object)> -> _SOURCES_
<org.springframework.web.servlet.handler.AbstractUrlHandlerMapping: org.springframework.web.servlet.handler.RequestMatchResult match(javax.servlet.http.HttpServletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.mock.web.MockBodyContent: void print(java.lang.Object)> -> _SINKS_
<org.springframework.beans.ExtendedBeanInfoFactory: int getOrder()> -> _SOURCES_
<org.springframework.cglib.proxy.CallbackInfo: org.springframework.cglib.proxy.CallbackGenerator getGenerator(org.springframework.asm.Type)> -> _SOURCES_
<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletRequest: java.lang.String getServerName()> -> _SOURCES_
<org.springframework.core.env.AbstractPropertyResolver: java.lang.Object getProperty(java.lang.String,java.lang.Class,java.lang.Object)> -> _SOURCES_
<org.springframework.format.datetime.standard.DurationFormatter: java.lang.String print(java.lang.Object,java.util.Locale)> -> _SINKS_
<org.springframework.jdbc.core.metadata.CallParameterMetaData: int getParameterType()> -> _CWE089__SOURCES_
<org.springframework.web.socket.messaging.SubProtocolWebSocketHandler: java.util.Map getProtocolHandlerMap()> -> _SOURCES_
<org.springframework.context.support.AbstractMessageSource: java.lang.String getMessage(java.lang.String,java.lang.Object[],java.util.Locale)> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompHeaders: java.lang.String getMessageId()> -> _SOURCES_
<org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver: void setDefaultMethodName(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: java.lang.Number executeInsertAndReturnKeyInternal(java.util.List)> -> _CWE078__CWE089__SINKS_
<org.springframework.web.context.support.ServletContextAttributeFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.web.util.UrlPathHelper: java.lang.String getDefaultEncoding()> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.handler.AbstractTransportHandler: org.springframework.web.socket.sockjs.transport.SockJsServiceConfig getServiceConfig()> -> _SOURCES_
<org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver: void setSupportedLocales(java.util.List)> -> _SINKS_
<org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractorAdapter: java.sql.CallableStatement getNativeCallableStatement(java.sql.CallableStatement)> -> _CWE089__SOURCES_
<org.springframework.jdbc.core.simple.SimpleJdbcInsert: int execute(java.util.Map)> -> _CWE089__SINKS_
<org.springframework.test.web.client.match.JsonPathRequestMatchers: org.springframework.test.web.client.RequestMatcher doesNotExist()> -> _SOURCES_
<org.springframework.orm.hibernate3.LocalSessionFactoryBean: javax.transaction.TransactionManager getConfigTimeTransactionManager()> -> _SOURCES_
<org.springframework.scheduling.backportconcurrent.ThreadPoolTaskExecutor: void execute(java.lang.Runnable)> -> _CWE078__SINKS_
<org.springframework.beans.propertyeditors.StringTrimmerEditor: java.lang.String getAsText()> -> _SOURCES_
<org.springframework.cglib.transform.AbstractClassLoader: java.lang.Class loadClass(java.lang.String)> -> _SOURCES_
<org.springframework.messaging.simp.SimpMessagingTemplate: void convertAndSendToUser(java.lang.String,java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.jms.connection.CachedMessageProducer: void close()> -> _AUTHENTICATIONS_TO_LOW_
<org.springframework.beans.factory.support.AutowireCandidateQualifier: java.lang.String getTypeName()> -> _SOURCES_
<org.springframework.aop.support.StaticMethodMatcherPointcut: org.springframework.aop.ClassFilter getClassFilter()> -> _SOURCES_
<org.springframework.jdbc.datasource.embedded.HsqlEmbeddedDatabaseConfigurer: void configureConnectionProperties(org.springframework.jdbc.datasource.embedded.ConnectionProperties,java.lang.String)> -> _CWE306__CWE089__AUTHENTICATIONS_TO_HIGH_
<org.springframework.util.ResponseTimeMonitorImpl: int getWorstResponseTimeMillis()> -> _SOURCES__CWE601_
<org.springframework.web.socket.handler.PerConnectionWebSocketHandler: void afterConnectionClosed(org.springframework.web.socket.WebSocketSession,org.springframework.web.socket.CloseStatus)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.beans.factory.support.AbstractBeanDefinition: java.lang.String getInitMethodName()> -> _SOURCES_
<org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager: void setDefaultDataSource(javax.sql.DataSource)> -> _SINKS_
<org.springframework.beans.factory.xml.DefaultDocumentLoader: javax.xml.parsers.DocumentBuilder createDocumentBuilder(javax.xml.parsers.DocumentBuilderFactory,org.xml.sax.EntityResolver,org.xml.sax.ErrorHandler)> -> _SOURCES_
<org.springframework.orm.ibatis.support.SqlMapClientDaoSupport: void setSqlMapClientTemplate(org.springframework.orm.ibatis.SqlMapClientTemplate)> -> _SINKS_
<org.springframework.web.filter.AbstractRequestLoggingFilter: java.lang.String createMessage(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.beans.propertyeditors.ClassEditor: java.lang.String getAsText()> -> _SOURCES_
<org.springframework.jdbc.datasource.DelegatingDataSource: void setLogWriter(java.io.PrintWriter)> -> _CWE089__SINKS_
<org.springframework.asm.Type: org.springframework.asm.Type[] getArgumentTypes(java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.jms.support.converter.MappingJackson2MessageConverter: javax.jms.TextMessage mapToTextMessage(java.lang.Object,javax.jms.Session,com.fasterxml.jackson.databind.ObjectWriter)> -> _SINKS_
<org.springframework.format.datetime.standard.InstantFormatter: java.lang.String print(java.lang.Object,java.util.Locale)> -> _SINKS_
<org.springframework.http.converter.BufferedImageHttpMessageConverter: void setDefaultContentType(org.springframework.http.MediaType)> -> _SINKS_
<org.springframework.format.datetime.joda.JodaTimeContextHolder: void setJodaTimeContext(org.springframework.format.datetime.joda.JodaTimeContext)> -> _SINKS_
<org.springframework.security.config.http.AuthenticationConfigBuilder: org.springframework.beans.BeanMetadataElement getEntryPointBean()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: void setOnmouseover(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.mock.web.MockBodyContent: void print(char[])> -> _SINKS_
<org.springframework.beans.factory.parsing.BeanComponentDefinition: org.springframework.beans.factory.config.BeanReference[] getBeanReferences()> -> _SOURCES_
<org.springframework.scheduling.commonj.TimerManagerAccessor: void setTimerManager(commonj.timers.TimerManager)> -> _SINKS_
<org.springframework.context.support.MessageSourceSupport: void setAlwaysUseMessageFormat(boolean)> -> _SINKS_
<org.springframework.aop.target.CommonsPool2TargetSource: int getMaxIdle()> -> _SOURCES_
<org.springframework.context.support.AbstractApplicationContext: org.springframework.context.ApplicationContext getParent()> -> _SOURCES_
<org.springframework.jdbc.datasource.init.DataSourceInitializer: void execute(org.springframework.jdbc.datasource.init.DatabasePopulator)> -> _CWE089__SINKS_
<org.springframework.mock.web.MockHttpServletRequest: java.lang.String getRemoteHost()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletResponse: java.lang.String getIncludedUrl()> -> _SOURCES__CWE601_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: org.springframework.web.servlet.mvc.method.'annotation'.ExceptionHandlerExceptionResolver createExceptionHandlerExceptionResolver()> -> _SOURCES_
<org.springframework.messaging.simp.config.AbstractBrokerRegistration: java.util.Collection getDestinationPrefixes()> -> _SOURCES_
<org.springframework.http.converter.xml.Jaxb2CollectionHttpMessageConverter: void write(java.lang.Object,java.lang.reflect.Type,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)> -> _SINKS_
<org.springframework.jmx.support.JmxUtils: java.lang.Class getClassToExpose(java.lang.Class)> -> _SOURCES_
<org.springframework.orm.hibernate3.SessionFactoryUtils: org.hibernate.Session getNewSession(org.hibernate.SessionFactory)> -> _SOURCES_
<org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean: void setBeanName(java.lang.String)> -> _SINKS_
<org.springframework.expression.ExpressionException: java.lang.String getMessage()> -> _SOURCES_
<org.springframework.cglib.reflect.FastMethod: java.lang.Class getReturnType()> -> _SOURCES_
<org.springframework.mail.javamail.ConfigurableMimeFileTypeMap: void setMappingLocation(org.springframework.core.io.Resource)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setTaskExecutor(org.springframework.core.task.AsyncTaskExecutor)> -> _SINKS_
<org.springframework.web.portlet.context.PortletRequestHandledEvent: java.lang.String getDescription()> -> _SOURCES_
<org.springframework.http.converter.ActivationMediaTypeFactory: org.springframework.http.MediaType getMediaType(org.springframework.core.io.Resource)> -> _SOURCES_
<org.springframework.core.NestedCheckedException: java.lang.Throwable getRootCause()> -> _SOURCES_
<org.springframework.jms.connection.CachedMessageProducer: void setDisableMessageID(boolean)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler: void setClientLogin(java.lang.String)> -> _CWE306__SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.core.convert.support.IdToEntityConverter: java.lang.reflect.Method getFinder(java.lang.Class)> -> _SOURCES_
<org.springframework.web.servlet.view.json.AbstractJackson2View: void setUpdateContentLength(boolean)> -> _SINKS_
<org.springframework.web.servlet.mvc.condition.CompositeRequestCondition: int compareTo(org.springframework.web.servlet.mvc.condition.CompositeRequestCondition,javax.servlet.http.HttpServletRequest)> -> _SINKS_
<org.springframework.core.io.AbstractResource: boolean isReadable()> -> _SOURCES_
<org.springframework.jdbc.support.SQLErrorCodes: java.lang.String getDatabaseProductName()> -> _CWE089__SOURCES_
<org.springframework.orm.hibernate5.LocalSessionFactoryBean: void setHibernateProperties(java.util.Properties)> -> _SINKS_
<org.springframework.web.servlet.view.RedirectView: void setExposeModelAttributes(boolean)> -> _SINKS_
<org.springframework.aop.aspectj.AspectJExpressionPointcut: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.web.servlet.config.annotation.RedirectViewControllerRegistration: org.springframework.web.servlet.config.'annotation'.RedirectViewControllerRegistration setKeepQueryParams(boolean)> -> _SINKS_
<org.springframework.web.servlet.tags.form.LabelTag: java.lang.String getFor()> -> _SOURCES_
<org.springframework.web.servlet.handler.AbstractHandlerMapping: void setCorsConfigurations(java.util.Map)> -> _SINKS_
<org.springframework.http.client.HttpComponentsAsyncClientHttpRequest: org.apache.http.protocol.HttpContext getHttpContext()> -> _SOURCES_
<org.springframework.jms.listener.SimpleMessageListenerContainer102: javax.jms.MessageConsumer createConsumer(javax.jms.Session,javax.jms.Destination)> -> _SOURCES_
<org.springframework.jdbc.datasource.init.ResourceDatabasePopulator: void setSqlScriptEncoding(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: org.springframework.beans.factory.config.AutowireCapableBeanFactory getAutowireCapableBeanFactory()> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompDecoder: org.springframework.messaging.Message decodeMessage(java.nio.ByteBuffer,org.springframework.util.MultiValueMap)> -> _SOURCES_
<org.springframework.jdbc.core.simple.SimpleJdbcTemplate: int[] batchUpdate(java.lang.String,org.springframework.jdbc.core.namedparam.SqlParameterSource[])> -> _CWE089__SINKS_
<org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener: javax.sql.DataSource getDataSourceFromTransactionManager(org.springframework.transaction.PlatformTransactionManager)> -> _CWE089__SOURCES_
<org.springframework.jms.listener.DefaultMessageListenerContainer: int getIdleTaskExecutionLimit()> -> _SOURCES_
<org.springframework.expression.spel.support.ReflectivePropertyAccessor: java.lang.String[] getPropertyMethodSuffixes(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.resource.ContentVersionStrategy: java.lang.String getResourceVersion(org.springframework.core.io.Resource)> -> _SOURCES_
<org.springframework.jca.cci.core.CciTemplate: org.springframework.jca.cci.core.CciTemplate getDerivedTemplate(javax.resource.cci.ConnectionSpec)> -> _SOURCES_
<org.springframework.mock.web.MockBodyContent: void print(boolean)> -> _SINKS_
<org.springframework.security.config.http.FilterChainBeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.web.socket.messaging.StompSubProtocolHandler: org.springframework.messaging.simp.user.UserSessionRegistry getUserSessionRegistry()> -> _SOURCES_
<org.springframework.web.servlet.view.RedirectView: org.springframework.http.HttpStatus getHttp11StatusCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)> -> _SOURCES_
<org.springframework.test.util.XpathExpectationsHelper: void assertBoolean(byte[],java.lang.String,boolean)> -> _SINKS_
<org.springframework.orm.hibernate3.AbstractSessionFactoryBean: void setJdbcExceptionTranslator(org.springframework.jdbc.support.SQLExceptionTranslator)> -> _CWE089__SINKS_
<org.springframework.web.util.UriUtils: java.lang.String encodeFragment(java.lang.String,java.lang.String)> -> _SANITIZERS_
<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: void setAutowire(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.NoHandlerFoundException: org.springframework.http.HttpHeaders getHeaders()> -> _SOURCES_
<org.springframework.jdbc.core.namedparam.ParsedSql: java.lang.String getOriginalSql()> -> _CWE089__SOURCES_
<org.springframework.mock.web.portlet.MockPortletRequest: java.lang.String[] getParameterValues(java.lang.String)> -> _SOURCES_
<org.springframework.web.socket.messaging.WebSocketStompClient: void setAutoStartup(boolean)> -> _SINKS_
<org.springframework.messaging.simp.config.ChannelRegistration: org.springframework.messaging.simp.config.TaskExecutorRegistration getOrCreateTaskExecRegistration()> -> _SOURCES_
<org.springframework.test.util.XpathExpectationsHelper: void doesNotExist(byte[],java.lang.String)> -> _SINKS_
<org.springframework.web.socket.adapter.standard.StandardWebSocketSession: void sendBinaryMessage(org.springframework.web.socket.BinaryMessage)> -> _SINKS_
<org.springframework.web.socket.WebSocketHttpHeaders: void set(java.lang.Object,java.lang.Object)> -> _SINKS_
<org.springframework.web.socket.handler.WebSocketSessionDecorator: void setTextMessageSizeLimit(int)> -> _SINKS_
<org.springframework.mail.javamail.MimeMessageHelper: void setHtmlTextToMimePart(javax.mail.internet.MimePart,java.lang.String)> -> _SINKS_
<org.springframework.jdbc.datasource.SimpleDriverDataSource: java.sql.Driver getDriver()> -> _CWE089__SOURCES_
<org.springframework.web.servlet.FrameworkServlet: java.lang.Class getContextClass()> -> _SOURCES_
<org.springframework.web.servlet.handler.SimpleServletHandlerAdapter: long getLastModified(javax.servlet.http.HttpServletRequest,java.lang.Object)> -> _SOURCES_
<org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.format.datetime.standard.TemporalAccessorPrinter: java.lang.String print(java.lang.Object,java.util.Locale)> -> _SINKS_
<org.springframework.beans.factory.config.SetFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.context.support.AbstractMessageSource: java.lang.String getMessageFromParent(java.lang.String,java.lang.Object[],java.util.Locale)> -> _SOURCES_
<org.springframework.security.authentication.jaas.JaasAuthenticationProvider: void setLoginContextName(java.lang.String)> -> _CWE306__SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.support.AbstractFlashMapManager: org.springframework.web.servlet.FlashMap getMatchingFlashMap(java.util.List,javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.jdbc.support.incrementer.DB2MainframeSequenceMaxValueIncrementer: java.lang.String getSequenceQuery()> -> _CWE089__SOURCES_
<org.springframework.oxm.xstream.XStreamMarshaller: void setStreamDriver(com.thoughtworks.xstream.io.HierarchicalStreamDriver)> -> _SINKS_
<org.springframework.remoting.httpinvoker.CommonsHttpInvokerRequestExecutor: void setHttpClient(org.apache.commons.httpclient.HttpClient)> -> _SINKS_
<org.springframework.web.portlet.mvc.annotation.AnnotationMethodHandlerAdapter: void setWebBindingInitializer(org.springframework.web.bind.support.WebBindingInitializer)> -> _SINKS_
<org.springframework.web.socket.sockjs.support.AbstractSockJsService: void setSuppressCors(boolean)> -> _SINKS_
<org.springframework.context.config.LoadTimeWeaverBeanDefinitionParser: java.lang.String getBeanClassName(org.w3c.dom.Element)> -> _SOURCES_
<org.springframework.security.core.authority.mapping.SimpleMappableAttributesRetriever: void setMappableAttributes(java.util.Set)> -> _SINKS_
<org.springframework.web.multipart.support.DefaultMultipartHttpServletRequest: java.util.Enumeration getParameterNames()> -> _SOURCES__CWE601_
<org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter: void setWebBindingInitializer(org.springframework.web.bind.support.WebBindingInitializer)> -> _SINKS_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: java.lang.Number doExecuteAndReturnKey(org.springframework.jdbc.core.namedparam.SqlParameterSource)> -> _CWE078__CWE089__SINKS_
<org.springframework.orm.jpa.vendor.TopLinkJpaVendorAdapter: java.util.Map getJpaPropertyMap()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockResourceURL: java.lang.String getResourceID()> -> _SOURCES_
<org.springframework.web.servlet.view.velocity.VelocityViewResolver: void setToolboxConfigLocation(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.core.JdbcTemplate: java.util.Map call(org.springframework.jdbc.core.CallableStatementCreator,java.util.List)> -> _CWE089__SINKS_
<org.springframework.web.socket.sockjs.client.XhrClientSockJsSession: java.util.List getExtensions()> -> _SOURCES_
<org.springframework.expression.spel.support.StandardEvaluationContext: void setOperatorOverloader(org.springframework.expression.OperatorOverloader)> -> _SINKS_
<org.springframework.security.access.vote.ConsensusBased: void setAllowIfEqualGrantedDeniedDecisions(boolean)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.RequestAttributeMethodArgumentResolver: org.springframework.web.method.'annotation'.AbstractNamedValueMethodArgumentResolver$NamedValueInfo createNamedValueInfo(org.springframework.core.MethodParameter)> -> _SOURCES_
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: java.lang.Class getTypeForFactoryBean(org.springframework.beans.factory.FactoryBean)> -> _SOURCES_
<org.springframework.transaction.support.AbstractPlatformTransactionManager: void setRollbackOnCommitFailure(boolean)> -> _SINKS_
<org.springframework.orm.hibernate5.HibernateTransactionManager: org.hibernate.Interceptor getEntityInterceptor()> -> _SOURCES_
<org.springframework.web.servlet.view.document.AbstractXlsxStreamingView: org.apache.poi.xssf.streaming.SXSSFWorkbook createWorkbook(java.util.Map,javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.mock.web.MockSessionCookieConfig: void setName(java.lang.String)> -> _SINKS_
<org.springframework.validation.beanvalidation.SpringValidatorAdapter: void setTargetValidator(javax.validation.Validator)> -> _SINKS_
<org.springframework.orm.hibernate4.LocalSessionFactoryBean: void setMappingJarLocations(org.springframework.core.io.Resource[])> -> _SINKS_
<org.springframework.mock.web.MockBodyContent: void write(char[],int,int)> -> _SINKS_
<org.springframework.expression.spel.ast.MethodReference: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.scheduling.config.TaskExecutorFactoryBean: void setQueueCapacity(int)> -> _SINKS_
<org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator: void setFrozen(boolean)> -> _SINKS_
<org.springframework.orm.hibernate4.HibernateTemplate: java.lang.Object get(java.lang.Class,java.io.Serializable,org.hibernate.LockMode)> -> _SOURCES_
<org.springframework.cglib.reflect.FastClass: java.lang.String getSignatureWithoutReturnType(java.lang.String,java.lang.Class[])> -> _SOURCES_
<org.springframework.http.HttpHeaders: java.lang.String getUpgrade()> -> _SOURCES_
<org.springframework.orm.toplink.TopLinkTransactionManager: void setDataSource(javax.sql.DataSource)> -> _SINKS_
<org.springframework.scheduling.quartz.SimpleTriggerBean: void setTriggerListenerNames(java.lang.String[])> -> _SINKS_
<org.springframework.mock.web.MockHttpSession: long getCreationTime()> -> _SOURCES_
<org.springframework.web.context.request.async.WebAsyncTask: org.springframework.core.task.AsyncTaskExecutor getExecutor()> -> _SOURCES_
<org.springframework.web.servlet.view.RedirectView: java.lang.String updateTargetUrl(java.lang.String,java.util.Map,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)> -> _CWE079__SINKS_
<org.springframework.web.socket.server.standard.AbstractStandardUpgradeStrategy: javax.servlet.http.HttpServletRequest getHttpServletRequest(org.springframework.http.server.ServerHttpRequest)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockActionResponse: void sendRedirect(java.lang.String,java.lang.String)> -> _SINKS__CWE601_
<org.springframework.util.ConcurrencyThrottleSupport: int getConcurrencyLimit()> -> _SOURCES_
<org.springframework.format.number.NumberFormatAnnotationFormatterFactory: org.springframework.format.Parser getParser(java.lang.'annotation'.Annotation,java.lang.Class)> -> _SOURCES__SINKS_
<org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader: void loadBeanDefinitionsFromImportedResources(java.util.Map)> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: java.lang.String getContentType()> -> _SOURCES_
<org.springframework.orm.jpa.persistenceunit.MutablePersistenceUnitInfo: javax.persistence.spi.PersistenceUnitTransactionType getTransactionType()> -> _SOURCES_
<org.springframework.orm.jpa.persistenceunit.MutablePersistenceUnitInfo: java.lang.String getPersistenceProviderClassName()> -> _SOURCES_
<org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator: java.lang.String getViewName(javax.servlet.http.HttpServletRequest)> -> _CWE079__SOURCES_
<org.springframework.jmx.export.metadata.ManagedAttribute: java.lang.String getPersistPolicy()> -> _SOURCES_
<org.springframework.remoting.jaxws.JaxWsPortClientInterceptor: javax.xml.ws.Service getJaxWsService()> -> _SOURCES_
<org.springframework.security.authentication.dao.DaoAuthenticationProvider: void setSaltSource(org.springframework.security.authentication.dao.SaltSource)> -> _SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.aop.framework.AbstractSingletonProxyFactoryBean: void setAdvisorAdapterRegistry(org.springframework.aop.framework.adapter.AdvisorAdapterRegistry)> -> _SINKS_
<org.springframework.util.xml.XMLEventStreamWriter: void setPrefix(java.lang.String,java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.tags.form.FormTag: int writeTagContent(org.springframework.web.servlet.tags.form.TagWriter)> -> _SINKS_
<org.springframework.messaging.simp.SimpSessionScope: java.lang.String getConversationId()> -> _SOURCES_
<org.springframework.web.servlet.view.AbstractView: java.util.Map getAttributesMap()> -> _SOURCES_
<org.springframework.context.support.ResourceBundleMessageSource: void setBundleClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletResponse: java.lang.String getErrorMessage()> -> _SOURCES__CWE601_
<org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler: void setDestinationPrefixes(java.util.Collection)> -> _SINKS_
<org.springframework.scheduling.quartz.SchedulerAccessor: void setGlobalTriggerListeners(org.quartz.TriggerListener[])> -> _SINKS_
<org.springframework.cglib.proxy.MethodInterceptorGenerator: java.lang.String getMethodProxyField(org.springframework.cglib.core.Signature)> -> _SOURCES_
<org.springframework.jms.connection.ConnectionFactoryUtils: javax.jms.Session getTransactionalSession(javax.jms.ConnectionFactory,javax.jms.Connection,boolean)> -> _SOURCES_
<org.springframework.web.servlet.handler.HandlerMappingIntrospector: org.springframework.web.servlet.handler.MatchableHandlerMapping getMatchableHandlerMapping(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateTransactionManager: void setEarlyFlushBeforeCommit(boolean)> -> _SINKS_
<org.springframework.web.servlet.ModelAndView: org.springframework.http.HttpStatus getStatus()> -> _SOURCES_
<org.springframework.web.socket.handler.BeanCreatingHandlerProvider: java.lang.Object getHandler()> -> _SOURCES_
<org.springframework.ui.freemarker.FreeMarkerConfigurationFactory: void setTemplateLoaderPaths(java.lang.String[])> -> _SINKS_
<org.springframework.web.bind.EscapedErrors: java.lang.Class getFieldType(java.lang.String)> -> _SOURCES_
<org.springframework.jdbc.datasource.AbstractDataSource: int getLoginTimeout()> -> _CWE306__CWE089__SOURCES_
<org.springframework.test.web.servlet.request.MockMvcRequestBuilders: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder put(java.net.URI)> -> _SOURCES_
<org.springframework.jdbc.core.JdbcTemplate: org.springframework.jdbc.core.RowMapper getSingleColumnRowMapper(java.lang.Class)> -> _CWE089__SOURCES_
<org.springframework.http.HttpHeaders: java.lang.String encodeHeaderFieldParam(java.lang.String,java.nio.charset.Charset)> -> _SANITIZERS_
<org.springframework.web.servlet.mvc.method.RequestMappingInfo: org.springframework.web.servlet.mvc.condition.ConsumesRequestCondition getConsumesCondition()> -> _SOURCES_
<org.springframework.context.support.AbstractResourceBasedMessageSource: void setBasenames(java.lang.String[])> -> _SINKS_
<org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor: java.util.concurrent.ThreadPoolExecutor getThreadPoolExecutor()> -> _SOURCES_
<org.springframework.mock.web.MockServletContext: int getMinorVersion()> -> _SOURCES_
<org.springframework.orm.jpa.vendor.HibernateJpaDialect: org.springframework.jdbc.datasource.ConnectionHandle getJdbcConnection(javax.persistence.EntityManager,boolean)> -> _CWE306__SOURCES__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.jca.cci.connection.ConnectionFactoryUtils: javax.resource.cci.Connection doGetConnection(javax.resource.cci.ConnectionFactory)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.util.StopWatch: void setKeepTaskList(boolean)> -> _SINKS_
<org.springframework.core.annotation.DefaultAnnotationAttributeExtractor: java.lang.Object getRawAttributeValue(java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.web.socket.client.WebSocketConnectionManager: void setHeaders(org.springframework.http.HttpHeaders)> -> _SINKS_
<org.springframework.cache.guava.GuavaCacheManager: void setCacheNames(java.util.Collection)> -> _SINKS_
<org.springframework.core.convert.TypeDescriptor: java.lang.Class getType()> -> _SOURCES_
<org.springframework.jmx.export.metadata.ManagedMetric: void setMetricType(org.springframework.jmx.support.MetricType)> -> _SINKS_
<org.springframework.orm.jpa.JpaInterceptor: void setExceptionConversionEnabled(boolean)> -> _SINKS_
<org.springframework.http.client.Netty4ClientHttpRequestFactory: void setConnectTimeout(int)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.mvc.condition.PatternsRequestCondition: java.lang.String getToStringInfix()> -> _SOURCES_
<org.springframework.web.portlet.bind.PortletRequestUtils: long[] getLongParameters(javax.portlet.PortletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.web.context.support.ServletContextPropertySource: java.lang.String[] getPropertyNames()> -> _SOURCES_
<org.springframework.objenesis.instantiator.basic.ClassDefinitionUtils: java.lang.Class getExistingClass(java.lang.ClassLoader,java.lang.String)> -> _SOURCES_
<org.springframework.messaging.simp.user.DefaultUserDestinationResolver: org.springframework.messaging.simp.user.SimpUserRegistry getSimpUserRegistry()> -> _SOURCES__CWE862_
<org.springframework.web.servlet.FrameworkServlet: void setDispatchOptionsRequest(boolean)> -> _SINKS_
<org.springframework.jdbc.support.lob.AbstractLobHandler: java.io.InputStream getClobAsAsciiStream(java.sql.ResultSet,java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.jdbc.support.nativejdbc.CommonsDbcpNativeJdbcExtractor: java.sql.Connection doGetNativeConnection(java.sql.Connection)> -> _CWE306__CWE089__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.context.annotation.ConfigurationClass: java.lang.String getBeanName()> -> _SOURCES_
<org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader: int loadBeanDefinitions(org.springframework.core.io.support.EncodedResource)> -> _SOURCES_
<org.springframework.cglib.core.AbstractClassGenerator: java.security.ProtectionDomain getProtectionDomain()> -> _SOURCES_
<org.springframework.web.socket.server.standard.AbstractStandardUpgradeStrategy: java.util.List getSupportedExtensions(org.springframework.http.server.ServerHttpRequest)> -> _SOURCES_
<org.springframework.web.jsf.el.WebApplicationContextFacesELResolver: java.util.Iterator getFeatureDescriptors(javax.el.ELContext,java.lang.Object)> -> _SOURCES_
<org.springframework.security.access.intercept.AfterInvocationProviderManager: java.util.List getProviders()> -> _SOURCES_
<org.springframework.jms.support.converter.MessagingMessageConverter: javax.jms.Message createMessageForPayload(java.lang.Object,javax.jms.Session,java.lang.Object)> -> _SOURCES_
<org.springframework.core.NestedRuntimeException: java.lang.Throwable getMostSpecificCause()> -> _SOURCES_
<org.springframework.web.portlet.bind.PortletRequestUtils: float getRequiredFloatParameter(javax.portlet.PortletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockMimeResponse: java.lang.String getContentAsString()> -> _SOURCES__CWE601_
<org.springframework.mock.web.MockPageContext: java.util.Enumeration getAttributeNames()> -> _SOURCES_
<org.springframework.aop.aspectj.AspectJPointcutAdvisor: org.springframework.aop.Pointcut getPointcut()> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.ResourceChainRegistration: java.util.List getResourceTransformers()> -> _SOURCES_
<org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean: void setConcurrent(boolean)> -> _SINKS_
<org.springframework.security.access.vote.AbstractAccessDecisionManager: void setMessageSource(org.springframework.context.MessageSource)> -> _SINKS_
<org.springframework.jms.listener.serversession.SimpleServerSessionFactory: javax.jms.ServerSession getServerSession(org.springframework.jms.listener.serversession.ListenerSessionManager)> -> _SOURCES_
<org.springframework.scripting.support.ScriptFactoryPostProcessor: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.web.servlet.tags.form.ButtonTag: java.lang.String getType()> -> _SOURCES_
<org.springframework.util.xml.XMLEventStreamWriter: javax.xml.namespace.NamespaceContext getNamespaceContext()> -> _SOURCES_
<org.springframework.jmx.access.MBeanClientInterceptor: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.context.expression.EnvironmentAccessor: java.lang.Class[] getSpecificTargetClasses()> -> _SOURCES_
<org.springframework.jdbc.core.metadata.CallMetaDataContext: java.lang.String getProcedureName()> -> _CWE089__SOURCES_
<org.springframework.util.xml.DomContentHandler: org.w3c.dom.Node getParent()> -> _SOURCES_
<org.springframework.mock.http.MockHttpOutputMessage: java.io.OutputStream getBody()> -> _SOURCES_
<org.springframework.test.context.ContextConfigurationAttributes: java.lang.Class getContextLoaderClass()> -> _SOURCES_
<org.springframework.orm.hibernate5.HibernateTransactionManager: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.beans.ExtendedBeanInfo: int getDefaultEventIndex()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockActionResponse: void setRenderParameter(java.lang.String,java.lang.String)> -> _CWE079__SINKS__CWE601_
<org.springframework.oxm.xstream.XStreamMarshaller: void setAliases(java.util.Map)> -> _SINKS_
<org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy: void setReobtainTransactionalConnections(boolean)> -> _CWE306__CWE089__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.orm.hibernate4.support.HibernateDaoSupport: org.springframework.orm.hibernate4.HibernateTemplate getHibernateTemplate()> -> _SOURCES_
<org.springframework.cache.interceptor.CacheExpressionRootObject: java.lang.String getMethodName()> -> _SOURCES_
<org.springframework.test.context.jdbc.MergedSqlConfig: java.lang.String getTransactionManager()> -> _CWE089__SOURCES_
<org.springframework.core.env.AbstractEnvironment: java.lang.String getProperty(java.lang.String)> -> _SOURCES_
<org.springframework.expression.spel.support.StandardEvaluationContext: org.springframework.expression.TypedValue getRootObject()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockResourceRequest: java.util.Map getPrivateRenderParameterMap()> -> _SOURCES_
<org.springframework.web.util.HtmlCharacterEntityDecoder: java.lang.String decode()> -> _CWE079__SOURCES_
<org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession: void sendMessage(org.springframework.web.socket.WebSocketMessage)> -> _SINKS_
<org.springframework.web.method.support.ModelAndViewContainer: void setView(java.lang.Object)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.RequestBodyAdviceAdapter: org.springframework.http.HttpInputMessage beforeBodyRead(org.springframework.http.HttpInputMessage,org.springframework.core.MethodParameter,java.lang.reflect.Type,java.lang.Class)> -> _SOURCES__CWE601_
<org.springframework.test.context.cache.DefaultContextCache: int getParentContextCount()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.FormTag: void setCommandName(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSetMetaData: java.lang.String getColumnName(int)> -> _CWE089__SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.JsonViewRequestBodyAdvice: org.springframework.http.HttpInputMessage beforeBodyRead(org.springframework.http.HttpInputMessage,org.springframework.core.MethodParameter,java.lang.reflect.Type,java.lang.Class)> -> _SOURCES__CWE601_
<org.springframework.asm.TypeReference: int getTypeParameterBoundIndex()> -> _SOURCES_
<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder flashAttr(java.lang.String,java.lang.Object)> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor: java.lang.String getRequestValueForAttribute(java.lang.String,org.springframework.web.context.request.NativeWebRequest)> -> _CWE079__SOURCES__SINKS_
<org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler: org.springframework.messaging.SubscribableChannel getClientInboundChannel()> -> _SOURCES_
<org.springframework.format.datetime.joda.ReadablePartialPrinter: java.lang.String print(java.lang.Object,java.util.Locale)> -> _SINKS_
<org.springframework.jdbc.support.nativejdbc.JBossNativeJdbcExtractor: java.sql.Statement getNativeStatement(java.sql.Statement)> -> _CWE089__SOURCES_
<org.springframework.jca.cci.connection.SingleConnectionFactory: javax.resource.cci.Connection doCreateConnection()> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.beans.CachedIntrospectionResults: java.beans.BeanInfo getBeanInfo()> -> _SOURCES_
<org.springframework.web.portlet.context.PortletRequestHandledEvent: java.lang.String getPortletName()> -> _SOURCES_
<org.springframework.messaging.core.GenericMessagingTemplate: void doSend(org.springframework.messaging.MessageChannel,org.springframework.messaging.Message)> -> _SINKS_
<org.springframework.web.socket.config.annotation.WebMvcStompWebSocketEndpointRegistration: org.springframework.web.socket.server.HandshakeInterceptor[] getInterceptors()> -> _SOURCES_
<org.springframework.expression.spel.ast.NullLiteral: org.springframework.expression.TypedValue getLiteralValue()> -> _SOURCES_
<org.springframework.web.socket.server.standard.WebSphereRequestUpgradeStrategy: void upgradeInternal(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,java.lang.String,java.util.List,javax.websocket.Endpoint)> -> _SINKS_
<org.springframework.orm.jpa.persistenceunit.PersistenceUnitReader: java.util.List parseDocument(org.springframework.core.io.Resource,org.w3c.dom.Document,java.util.List)> -> _SOURCES_
<org.springframework.test.web.servlet.request.MockMvcRequestBuilders: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder options(java.lang.String,java.lang.Object[])> -> _SOURCES_
<org.springframework.jms.config.MethodJmsListenerEndpoint: java.lang.Object getBean()> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanFactory: org.springframework.beans.factory.support.RootBeanDefinition getMergedBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)> -> _SOURCES_
<org.springframework.orm.toplink.support.TransactionAwareSessionAdapter: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanDefinition: java.lang.String getResourceDescription()> -> _SOURCES_
<org.springframework.orm.jdo.support.StandardPersistenceManagerProxyBean: javax.jdo.PersistenceManager getObject()> -> _SOURCES_
<org.springframework.jms.connection.CachedMessageConsumer: javax.jms.Queue getQueue()> -> _SOURCES_
<org.springframework.web.servlet.mvc.support.ControllerBeanNameHandlerMapping: void setUrlPrefix(java.lang.String)> -> _SINKS_
<org.springframework.jms.config.JmsListenerEndpointRegistry: org.springframework.jms.listener.MessageListenerContainer createListenerContainer(org.springframework.jms.config.JmsListenerEndpoint,org.springframework.jms.config.JmsListenerContainerFactory)> -> _SOURCES_
<org.springframework.mock.web.MockHttpSession: void setNew(boolean)> -> _SINKS_
<org.springframework.web.bind.ServletRequestUtils: java.lang.String[] getStringParameters(javax.servlet.ServletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.view.ResourceBundleViewResolver: java.lang.ClassLoader getBundleClassLoader()> -> _SOURCES_
<org.springframework.beans.factory.support.ManagedList: java.lang.Object getSource()> -> _SOURCES_
<org.springframework.cache.jcache.interceptor.AbstractJCacheKeyOperation: javax.cache.annotation.CacheInvocationParameter[] getKeyParameters(java.lang.Object[])> -> _SOURCES_
<org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder: org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder setBlockCommentEndDelimiter(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.security.access.annotation.SecuredAnnotationSecurityMetadataSource: java.util.Collection getAllConfigAttributes()> -> _SOURCES_
<org.springframework.orm.jdo.JdoTemplate: java.lang.Object getObjectById(java.lang.Object)> -> _SOURCES_
<org.springframework.beans.factory.parsing.BeanComponentDefinition: java.lang.String getName()> -> _SOURCES_
<org.springframework.web.accept.ServletPathExtensionContentNegotiationStrategy: org.springframework.http.MediaType getMediaTypeForResource(org.springframework.core.io.Resource)> -> _SOURCES_
<org.springframework.jmx.export.metadata.ManagedResource: void setLogFile(java.lang.String)> -> _SINKS_
<org.springframework.expression.spel.standard.SpelExpression: void setValue(java.lang.Object,java.lang.Object)> -> _SINKS_
<org.springframework.aop.target.SimpleBeanTargetSource: java.lang.Object getTarget()> -> _SOURCES_
<org.springframework.http.HttpHeaders: void setIfModifiedSince(long)> -> _SINKS_
<org.springframework.test.context.web.AbstractGenericWebContextLoader: org.springframework.context.ApplicationContext loadContext(java.lang.String[])> -> _SOURCES_
<org.springframework.mock.http.MockHttpOutputMessage: java.lang.String getBodyAsString(java.nio.charset.Charset)> -> _SOURCES_
<org.springframework.orm.hibernate5.HibernateTemplate: java.lang.String[] getFilterNames()> -> _SOURCES_
<org.springframework.web.client.RestTemplate: org.springframework.http.ResponseEntity getForEntity(java.net.URI,java.lang.Class)> -> _SOURCES__SINKS_
<org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor: void setPersistenceUnits(java.util.Map)> -> _SINKS_
<org.springframework.web.socket.config.annotation.SockJsServiceRegistration: org.springframework.web.socket.config.'annotation'.SockJsServiceRegistration setAllowedOrigins(java.lang.String[])> -> _SINKS_
<org.springframework.web.servlet.tags.form.FormTag: java.lang.String getOnsubmit()> -> _SOURCES_
<org.springframework.http.client.OkHttp3ClientHttpRequest: java.net.URI getURI()> -> _SOURCES_
<org.springframework.test.web.client.match.ContentRequestMatchers: org.springframework.test.web.client.RequestMatcher contentType(java.lang.String)> -> _SOURCES__SINKS_
<org.springframework.security.core.token.KeyBasedPersistenceTokenService: void setSecureRandom(java.security.SecureRandom)> -> _SINKS_
<org.springframework.web.socket.sockjs.transport.handler.HtmlFileTransportHandler: org.springframework.http.MediaType getContentType()> -> _SOURCES_
<org.springframework.security.access.method.AbstractMethodSecurityMetadataSource: java.util.Collection getAttributes(java.lang.Object)> -> _SOURCES_
<org.springframework.security.concurrent.DelegatingSecurityContextScheduledExecutorService: java.util.concurrent.ScheduledExecutorService getDelegate()> -> _SOURCES_
<org.springframework.web.socket.server.standard.ServerEndpointRegistration: java.util.List getExtensions()> -> _SOURCES_
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getCollectionFieldType(java.lang.reflect.Field,int)> -> _SOURCES_
<org.springframework.security.authentication.jaas.JaasAuthenticationProvider: void setRefreshConfigurationOnStartup(boolean)> -> _SINKS_
<org.springframework.web.socket.adapter.jetty.JettyWebSocketSession: void setBinaryMessageSizeLimit(int)> -> _SINKS_
<org.springframework.http.client.HttpComponentsAsyncClientHttpRequestFactory: org.springframework.http.client.AsyncClientHttpRequest createAsyncRequest(java.net.URI,org.springframework.http.HttpMethod)> -> _SOURCES_
<org.springframework.context.annotation.ScopeMetadata: void setScopeName(java.lang.String)> -> _SINKS_
<org.springframework.test.web.servlet.result.XpathResultMatchers: java.lang.String getDefinedEncoding(org.springframework.mock.web.MockHttpServletResponse)> -> _CWE079__SOURCES_
<org.springframework.web.portlet.handler.PortletContentGenerator: int getCacheSeconds()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.ErrorsTag: void setElement(java.lang.String)> -> _SINKS_
<org.springframework.beans.factory.support.ManagedProperties: void setSource(java.lang.Object)> -> _SINKS_
<org.springframework.jms.listener.AbstractMessageListenerContainer: java.lang.String getDurableSubscriptionName()> -> _SOURCES_
<org.springframework.http.client.AbstractBufferingAsyncClientHttpRequest: java.io.OutputStream getBodyInternal(org.springframework.http.HttpHeaders)> -> _SOURCES_
<org.springframework.remoting.support.SimpleHttpServerFactoryBean: void setExecutor(java.util.concurrent.Executor)> -> _SINKS_
<org.springframework.core.io.support.EncodedResource: java.io.Reader getReader()> -> _SOURCES_
<org.springframework.security.crypto.codec.Base64: byte[] encode(byte[])> -> _SANITIZERS_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: java.lang.Object execute(java.lang.String,java.util.Map,org.springframework.jdbc.core.PreparedStatementCallback)> -> _CWE078__CWE089__SINKS_
<org.springframework.web.socket.server.standard.GlassFishRequestUpgradeStrategy: org.springframework.web.socket.server.standard.AbstractTyrusRequestUpgradeStrategy$TyrusEndpointHelper getEndpointHelper()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.ButtonTag: void setDisabled(boolean)> -> _SINKS_
<org.springframework.beans.factory.xml.DefaultDocumentLoader: javax.xml.parsers.DocumentBuilderFactory createDocumentBuilderFactory(int,boolean)> -> _SOURCES_
<org.springframework.jms.support.JmsMessageHeaderAccessor: java.lang.String getType()> -> _SOURCES_
<org.springframework.mock.web.MockExpressionEvaluator: javax.servlet.jsp.el.Expression parseExpression(java.lang.String,java.lang.Class,javax.servlet.jsp.el.FunctionMapper)> -> _SOURCES__SINKS_
<org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate: org.springframework.context.ApplicationContext loadContext(org.springframework.test.context.MergedContextConfiguration)> -> _SOURCES_
<org.springframework.cache.interceptor.CacheProxyFactoryBean: void setPointcut(org.springframework.aop.Pointcut)> -> _SINKS_
<org.springframework.web.socket.server.standard.TomcatRequestUpgradeStrategy: org.apache.tomcat.websocket.server.WsServerContainer getContainer(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void addResourceHandlers(org.springframework.web.servlet.config.'annotation'.ResourceHandlerRegistry)> -> _SINKS_
<org.springframework.core.convert.Property: org.springframework.core.MethodParameter getMethodParameter()> -> _SOURCES_
<org.springframework.oxm.castor.CastorMarshaller: void setSuppressNamespaces(boolean)> -> _SINKS_
<org.springframework.jdbc.object.SqlUpdate: int update(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean: void setAllowNullValues(boolean)> -> _SINKS_
<org.springframework.jca.cci.connection.ConnectionFactoryUtils: void releaseConnection(javax.resource.cci.Connection,javax.resource.cci.ConnectionFactory)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.beans.factory.support.AbstractBeanDefinition: void setOriginatingBeanDefinition(org.springframework.beans.factory.config.BeanDefinition)> -> _SINKS_
<org.springframework.asm.commons.GeneratorAdapter: void loadLocal(int)> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: org.springframework.validation.Validator getValidator()> -> _SOURCES_
<org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler: org.springframework.context.ApplicationEventPublisher getApplicationEventPublisher()> -> _SOURCES_
<org.springframework.http.client.OkHttp3AsyncClientHttpRequest: org.springframework.http.HttpMethod getMethod()> -> _SOURCES_
<org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource: java.lang.Class getTargetClass()> -> _SOURCES_
<org.springframework.web.util.UriUtils: java.lang.String encodePort(java.lang.String,java.lang.String)> -> _SANITIZERS_
<org.springframework.web.portlet.multipart.DefaultMultipartActionRequest: void setMultipartParameters(java.util.Map)> -> _SINKS_
<org.springframework.oxm.jibx.JibxMarshaller: void setDocTypePublicId(java.lang.String)> -> _SINKS_
<org.springframework.scheduling.quartz.JobDetailFactoryBean: void setRequestsRecovery(boolean)> -> _SINKS_
<org.springframework.beans.factory.config.RuntimeBeanNameReference: java.lang.Object getSource()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.AbstractJsonpResponseBodyAdvice: org.springframework.http.MediaType getContentType(org.springframework.http.MediaType,org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse)> -> _SOURCES__CWE601_
<org.springframework.context.weaving.LoadTimeWeaverAwareProcessor: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.aop.target.SingletonTargetSource: java.lang.Object getTarget()> -> _SOURCES_
<org.springframework.web.context.support.GroovyWebApplicationContext: java.lang.Object getProperty(java.lang.String)> -> _SOURCES_
<org.springframework.http.HttpHeaders: long getIfUnmodifiedSince()> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: java.util.Map getDefaultMediaTypes()> -> _SOURCES_
<org.springframework.jms.remoting.JmsInvokerServiceExporter: void writeRemoteInvocationResult(javax.jms.Message,javax.jms.Session,org.springframework.remoting.support.RemoteInvocationResult)> -> _SINKS_
<org.springframework.web.socket.config.annotation.WebSocketTransportRegistration: org.springframework.web.socket.config.'annotation'.WebSocketTransportRegistration setMessageSizeLimit(int)> -> _SINKS_
<org.springframework.jdbc.core.support.JdbcDaoSupport: void releaseConnection(java.sql.Connection)> -> _CWE306__CWE089__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.orm.hibernate3.HibernateTemplate: void setExposeNativeSession(boolean)> -> _SINKS_
<org.springframework.web.portlet.context.PortletApplicationObjectSupport: java.io.File getTempDir()> -> _SOURCES_
<org.springframework.jdbc.support.lob.DefaultLobHandler: java.lang.String getClobAsString(java.sql.ResultSet,int)> -> _CWE089__SOURCES_
<org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor: void postHandle(org.springframework.web.context.request.WebRequest,org.springframework.ui.ModelMap)> -> _SINKS_
<org.springframework.oxm.castor.CastorMarshaller: void setIgnoreExtraElements(boolean)> -> _SINKS_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport: void setServletContext(javax.servlet.ServletContext)> -> _SINKS_
<org.springframework.scheduling.concurrent.ForkJoinPoolFactoryBean: void setAsyncMode(boolean)> -> _SINKS_
<org.springframework.web.portlet.util.PortletUtils: javax.servlet.http.Cookie getCookie(javax.portlet.PortletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.security.crypto.keygen.SharedKeyGenerator: int getKeyLength()> -> _SOURCES_
<org.springframework.jms.connection.CachingConnectionFactory: javax.jms.Session getCachedSessionProxy(javax.jms.Session,java.util.LinkedList)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockResourceRequest: java.lang.String getCacheability()> -> _SOURCES_
<org.springframework.test.context.support.AbstractTestContextBootstrapper: org.springframework.test.context.CacheAwareContextLoaderDelegate getCacheAwareContextLoaderDelegate()> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter: org.springframework.validation.MessageCodesResolver getMessageCodesResolver()> -> _SOURCES_
<org.springframework.beans.factory.xml.XmlBeanDefinitionReader: void setProblemReporter(org.springframework.beans.factory.parsing.ProblemReporter)> -> _SINKS_
<org.springframework.mail.SimpleMailMessage: java.lang.String getFrom()> -> _SOURCES_
<org.springframework.web.servlet.i18n.AbstractLocaleContextResolver: void setDefaultTimeZone(java.util.TimeZone)> -> _SINKS_
<org.springframework.beans.propertyeditors.CustomDateEditor: void setAsText(java.lang.String)> -> _SINKS_
<org.springframework.asm.Type: java.lang.String getInternalName()> -> _SOURCES_
<org.springframework.web.servlet.HandlerExecutionChain: void addInterceptors(org.springframework.web.servlet.HandlerInterceptor[])> -> _SINKS_
<org.springframework.aop.framework.AdvisedSupport: boolean replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor)> -> _SINKS_
<org.springframework.asm.Handle: java.lang.String getDesc()> -> _SOURCES_
<org.springframework.web.servlet.support.RequestContextUtils: org.springframework.web.servlet.ThemeResolver getThemeResolver(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: void setAttribute(java.lang.String,java.lang.Object)> -> _CWE079__SINKS_
<org.springframework.mail.javamail.MimeMessageHelper: void setSubject(java.lang.String)> -> _SINKS_
<org.springframework.context.support.AbstractResourceBasedMessageSource: void setFallbackToSystemLocale(boolean)> -> _SINKS_
<org.springframework.security.config.annotation.authentication.configurers.userdetails.UserDetailsServiceConfigurer: org.springframework.security.core.userdetails.UserDetailsService getUserDetailsService()> -> _SOURCES__CWE862_
<org.springframework.test.web.client.ExpectedCount: int getMaxCount()> -> _SOURCES_
<org.springframework.web.util.CookieGenerator: void setCookieName(java.lang.String)> -> _SINKS_
<org.springframework.core.io.VfsUtils: java.lang.String getName(java.lang.Object)> -> _SOURCES_
<org.springframework.scheduling.timer.TimerFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.mock.web.MockMultipartHttpServletRequest: java.util.Map getFileMap()> -> _SOURCES_
<org.springframework.transaction.annotation.Ejb3TransactionAnnotationParser: org.springframework.transaction.interceptor.TransactionAttribute parseTransactionAnnotation(java.lang.reflect.AnnotatedElement)> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.session.WebSocketServerSockJsSession: void initializeDelegateSession(org.springframework.web.socket.WebSocketSession)> -> _SINKS_
<org.springframework.web.bind.UnsatisfiedServletRequestParameterException: java.lang.String getMessage()> -> _SOURCES_
<org.springframework.cache.interceptor.CacheOperation: java.lang.String getCacheManager()> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.WebSocketClientSockJsSession: java.net.InetSocketAddress getRemoteAddress()> -> _SOURCES_
<org.springframework.web.bind.MissingPathVariableException: java.lang.String getVariableName()> -> _SOURCES_
<org.springframework.web.socket.adapter.standard.StandardWebSocketSession: org.springframework.http.HttpHeaders getHandshakeHeaders()> -> _SOURCES_
<org.springframework.web.multipart.support.StandardMultipartHttpServletRequest: void parseRequest(javax.servlet.http.HttpServletRequest)> -> _CWE079__SOURCES_
<org.springframework.core.env.PropertySource: java.lang.String getName()> -> _SOURCES_
<org.springframework.remoting.jaxws.LocalJaxWsServiceFactory: void setServiceName(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.core.simple.SimpleJdbcInsert: int execute(org.springframework.jdbc.core.namedparam.SqlParameterSource)> -> _CWE089__SINKS_
<org.springframework.web.context.support.GroovyWebApplicationContext: java.lang.String[] getDefaultConfigLocations()> -> _SOURCES_
<org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration: org.springframework.security.config.'annotation'.authentication.configuration.AuthenticationConfiguration getAuthenticationConfiguration()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES_
<org.springframework.util.xml.AbstractXMLStreamReader: int getTextCharacters(int,char[],int,int)> -> _SOURCES_
<org.springframework.core.type.classreading.SimpleMetadataReaderFactory: org.springframework.core.type.classreading.MetadataReader getMetadataReader(java.lang.String)> -> _SOURCES_
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapKeyParameterType(org.springframework.core.MethodParameter)> -> _SOURCES_
<org.springframework.oxm.castor.CastorMarshaller: java.lang.Object unmarshalXmlEventReader(javax.xml.stream.XMLEventReader)> -> _SOURCES_
<org.springframework.web.multipart.support.StandardServletMultipartResolver: void setResolveLazily(boolean)> -> _SINKS_
<org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider: org.springframework.security.core.Authentication authenticate(org.springframework.security.core.Authentication)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.http.client.support.ProxyFactoryBean: void setHostname(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: java.util.List getModelAndViewResolvers()> -> _SOURCES_
<org.springframework.web.portlet.handler.AbstractHandlerExceptionResolver: void setWarnLogCategory(java.lang.String)> -> _SINKS_
<org.springframework.http.client.SimpleBufferingAsyncClientHttpRequest: java.net.URI getURI()> -> _SOURCES_
<org.springframework.web.util.OpaqueUriComponents: org.springframework.web.util.UriComponents expandInternal(org.springframework.web.util.UriComponents$UriTemplateVariables)> -> _SINKS_
<org.springframework.security.authentication.event.InteractiveAuthenticationSuccessEvent: java.lang.Class getGeneratedBy()> -> _SOURCES_
<org.springframework.beans.factory.parsing.BeanComponentDefinition: java.lang.String getDescription()> -> _SOURCES_
<org.springframework.mock.web.MockServletContext: void setMinorVersion(int)> -> _SINKS_
<org.springframework.security.authentication.AnonymousAuthenticationToken: java.lang.Object getCredentials()> -> _SOURCES_
<org.springframework.remoting.httpinvoker.AbstractHttpInvokerRequestExecutor: org.springframework.remoting.support.RemoteInvocationResult doReadRemoteInvocationResult(java.io.ObjectInputStream)> -> _SOURCES__CWE601_
<org.springframework.jdbc.core.namedparam.BeanPropertySqlParameterSource: int getSqlType(java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.web.servlet.mvc.multiaction.InternalPathMethodNameResolver: void setSuffix(java.lang.String)> -> _SINKS_
<org.springframework.jms.listener.serversession.AbstractPoolingServerSessionFactory: void setMaxSize(int)> -> _SINKS_
<org.springframework.beans.factory.support.AbstractBeanDefinition: java.util.Set getQualifiers()> -> _SOURCES_
<org.springframework.web.socket.config.annotation.WebMvcStompWebSocketEndpointRegistration: org.springframework.web.socket.config.'annotation'.StompWebSocketEndpointRegistration setAllowedOrigins(java.lang.String[])> -> _SINKS_
<org.springframework.context.event.ApplicationContextEvent: org.springframework.context.ApplicationContext getApplicationContext()> -> _SOURCES_
<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void parseReplacedMethodSubElements(org.w3c.dom.Element,org.springframework.beans.factory.support.MethodOverrides)> -> _SINKS_
<org.springframework.security.authentication.AbstractAuthenticationToken: java.lang.Object getDetails()> -> _SOURCES_
<org.springframework.test.web.servlet.TestDispatcherServlet: void render(org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)> -> _SINKS_
<org.springframework.web.util.WebUtils: java.lang.String getRealPath(javax.servlet.ServletContext,java.lang.String)> -> _SOURCES_
<org.springframework.asm.Type: int getOpcode(int)> -> _SOURCES_
<org.springframework.cglib.core.ReflectUtils: java.security.ProtectionDomain getProtectionDomain(java.lang.Class)> -> _SOURCES_
<org.springframework.core.io.ByteArrayResource: java.lang.String getDescription()> -> _SOURCES_
<org.springframework.web.socket.server.standard.ServerEndpointExporter: void setAnnotatedEndpointClasses(java.lang.Class[])> -> _SINKS_
<org.springframework.util.xml.XMLEventStreamReader: java.lang.String getNamespacePrefix(int)> -> _SOURCES_
<org.springframework.orm.hibernate4.HibernateJdbcException: java.sql.SQLException getSQLException()> -> _CWE089__SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setMessageConverters(java.util.List)> -> _SINKS_
<org.springframework.core.io.support.ResourceRegion: org.springframework.core.io.Resource getResource()> -> _SOURCES_
<org.springframework.web.servlet.theme.AbstractThemeResolver: java.lang.String getDefaultThemeName()> -> _SOURCES_
<org.springframework.web.servlet.view.json.MappingJackson2JsonView: void setResponseContentType(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)> -> _SINKS_
<org.springframework.security.provisioning.MutableUser: java.lang.String getPassword()> -> _SOURCES__CWE862_
<org.springframework.beans.factory.serviceloader.ServiceLoaderFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.jms.listener.AbstractPollingMessageListenerContainer: void setTransactionName(java.lang.String)> -> _SINKS_
<org.springframework.web.socket.handler.TextWebSocketHandler: void handleBinaryMessage(org.springframework.web.socket.WebSocketSession,org.springframework.web.socket.BinaryMessage)> -> _SINKS_
<org.springframework.jdbc.support.SQLErrorCodes: void setPermissionDeniedCodes(java.lang.String[])> -> _CWE089__SINKS_
<org.springframework.web.socket.handler.BeanCreatingHandlerProvider: java.lang.Class getHandlerType()> -> _SOURCES_
<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.lang.Class getJaxRpcServiceInterface()> -> _SOURCES_
<org.springframework.aop.framework.adapter.DefaultAdvisorAdapterRegistry: org.aopalliance.intercept.MethodInterceptor[] getInterceptors(org.springframework.aop.Advisor)> -> _SOURCES_
<org.springframework.orm.hibernate5.ConfigurableJtaPlatform: java.lang.Object getTransactionIdentifier(javax.transaction.Transaction)> -> _SOURCES_
<org.springframework.aop.support.IntroductionInfoSupport: java.lang.Class[] getInterfaces()> -> _SOURCES_
<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder contentType(java.lang.String)> -> _SOURCES__SINKS_
<org.springframework.security.config.annotation.web.configurers.X509Configurer: org.springframework.security.config.'annotation'.web.configurers.X509Configurer x509AuthenticationFilter(org.springframework.security.web.authentication.preauth.x509.X509AuthenticationFilter)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.oxm.jaxb.Jaxb2Marshaller: void setSchema(org.springframework.core.io.Resource)> -> _SINKS_
<org.springframework.jmx.support.WebLogicMBeanServerFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.orm.jpa.persistenceunit.MutablePersistenceUnitInfo: java.lang.String getPersistenceUnitName()> -> _SOURCES_
<org.springframework.jdbc.datasource.AbstractDriverBasedDataSource: java.sql.Connection getConnectionFromDriver(java.lang.String,java.lang.String)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__SOURCES_
<org.springframework.context.support.ApplicationObjectSupport: org.springframework.context.ApplicationContext getApplicationContext()> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.AbstractClientSockJsSession: org.springframework.web.socket.WebSocketHandler getWebSocketHandler()> -> _SOURCES_
<org.springframework.web.servlet.config.TilesConfigurerBeanDefinitionParser: java.lang.String getBeanClassName(org.w3c.dom.Element)> -> _SOURCES_
<org.springframework.web.servlet.i18n.LocaleChangeInterceptor: void setIgnoreInvalidLocale(boolean)> -> _SINKS_
<org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader: org.springframework.beans.factory.groovy.GroovyDynamicElementReader createDynamicElementReader(java.lang.String)> -> _SOURCES_
<org.springframework.beans.factory.config.PropertiesFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.jdbc.core.simple.SimpleJdbcTemplate: int[] batchUpdate(java.lang.String,java.util.List)> -> _CWE089__SINKS_
<org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler: org.springframework.messaging.SubscribableChannel getBrokerChannel()> -> _SOURCES_
<org.springframework.messaging.simp.user.DefaultUserDestinationResolver: org.springframework.messaging.simp.user.DefaultUserDestinationResolver$ParseResult parseMessage(org.springframework.messaging.MessageHeaders,java.lang.String)> -> _SOURCES__CWE862_
<org.springframework.messaging.simp.stomp.StompHeaderAccessor: void setSubscriptionId(java.lang.String)> -> _SINKS_
<org.springframework.beans.factory.NoSuchBeanDefinitionException: java.lang.String getBeanName()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.LogoutConfigurer: org.springframework.security.web.util.matcher.RequestMatcher getLogoutRequestMatcher(org.springframework.security.config.'annotation'.web.HttpSecurityBuilder)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.web.method.annotation.AbstractCookieValueMethodArgumentResolver: org.springframework.web.method.'annotation'.AbstractNamedValueMethodArgumentResolver$NamedValueInfo createNamedValueInfo(org.springframework.core.MethodParameter)> -> _SOURCES_
<org.springframework.security.provisioning.JdbcUserDetailsManager: void setCreateUserSql(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.web.servlet.DispatcherServlet: void setCleanupAfterInclude(boolean)> -> _SINKS_
<org.springframework.beans.factory.config.ConstructorArgumentValues: org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder getIndexedArgumentValue(int,java.lang.Class)> -> _SOURCES_
<org.springframework.scheduling.commonj.WorkManagerTaskExecutor: void execute(java.lang.Runnable)> -> _SINKS_
<org.springframework.cache.support.CompositeCacheManager: void setCacheManagers(java.util.Collection)> -> _SINKS_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcDaoSupport: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate getNamedParameterJdbcTemplate()> -> _CWE089__SOURCES_
<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: void setBeanName(java.lang.String)> -> _SINKS_
<org.springframework.transaction.support.TransactionSynchronizationManager: void setCurrentTransactionName(java.lang.String)> -> _SINKS_
<org.springframework.web.socket.messaging.SubProtocolWebSocketHandler: void setDefaultProtocolHandler(org.springframework.web.socket.messaging.SubProtocolHandler)> -> _SINKS_
<org.springframework.test.context.support.DefaultTestContext: java.lang.Class getTestClass()> -> _SOURCES_
<org.springframework.scheduling.quartz.SimpleTriggerFactoryBean: void setDescription(java.lang.String)> -> _SINKS_
<org.springframework.web.socket.client.ConnectionManagerSupport: void setPhase(int)> -> _SINKS_
<org.springframework.http.converter.json.MappingJacksonValue: void setSerializationView(java.lang.Class)> -> _SINKS_
<org.springframework.security.authentication.jaas.AbstractJaasAuthenticationProvider: java.lang.String getLoginContextName()> -> _CWE306__SOURCES_
<org.springframework.asm.TypeReference: int getSort()> -> _SOURCES_
<org.springframework.orm.hibernate3.support.OpenSessionInterceptor: org.hibernate.SessionFactory getSessionFactory()> -> _SOURCES_
<org.springframework.format.number.CurrencyStyleFormatter: java.math.BigDecimal parse(java.lang.String,java.util.Locale)> -> _SINKS_
<org.springframework.security.authentication.jaas.event.JaasAuthenticationFailedEvent: java.lang.Exception getException()> -> _SOURCES_
<org.springframework.scheduling.backportconcurrent.ScheduledExecutorTask: void setDelay(long)> -> _SINKS_
<org.springframework.http.HttpHeaders: void setDate(long)> -> _SINKS_
<org.springframework.transaction.support.AbstractTransactionStatus: java.lang.Object getSavepoint()> -> _SOURCES_
<org.springframework.format.datetime.joda.JodaTimeContext: void setChronology(org.joda.time.Chronology)> -> _SINKS_
<org.springframework.beans.factory.access.el.SpringBeanELResolver: java.util.Iterator getFeatureDescriptors(javax.el.ELContext,java.lang.Object)> -> _SOURCES_
<org.springframework.validation.beanvalidation.LocalValidatorFactoryBean: void setValidationMessageSource(org.springframework.context.MessageSource)> -> _SINKS_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: java.lang.String getCatalogName()> -> _CWE089__SOURCES_
<org.springframework.test.context.web.socket.MockServerContainer: int getDefaultMaxTextMessageBufferSize()> -> _SOURCES_
<org.springframework.validation.AbstractErrors: int getErrorCount()> -> _SOURCES_
<org.springframework.test.web.client.match.ContentRequestMatchers: org.springframework.test.web.client.RequestMatcher bytes(byte[])> -> _SOURCES_
<org.springframework.messaging.simp.config.StompBrokerRelayRegistration: org.springframework.messaging.simp.config.StompBrokerRelayRegistration setSystemLogin(java.lang.String)> -> _CWE306__SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.aop.interceptor.AbstractMonitoringInterceptor: java.lang.String getSuffix()> -> _SOURCES_
<org.springframework.remoting.jaxrpc.JaxRpcPortClientInterceptor: boolean isConnectFailure(java.rmi.RemoteException)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE862_
<org.springframework.security.config.http.SecurityFilters: int getOrder()> -> _SOURCES_
<org.springframework.jms.JmsException: java.lang.String getMessage()> -> _SOURCES_
<org.springframework.expression.spel.standard.SpelExpression: java.lang.Class getValueType(java.lang.Object)> -> _SOURCES_
<org.springframework.web.util.UrlPathHelper: java.lang.String getOriginatingRequestUri(javax.servlet.http.HttpServletRequest)> -> _CWE079__SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setReturnValueHandlers(java.util.List)> -> _SINKS_
<org.springframework.format.datetime.standard.Jsr310DateTimeFormatAnnotationFormatterFactory: org.springframework.format.Parser getParser(org.springframework.format.'annotation'.DateTimeFormat,java.lang.Class)> -> _SOURCES_
<org.springframework.cache.jcache.interceptor.AnnotationJCacheOperationSource: org.springframework.cache.jcache.interceptor.CacheRemoveOperation createCacheRemoveOperation(java.lang.reflect.Method,javax.cache.'annotation'.CacheDefaults,javax.cache.'annotation'.CacheRemove)> -> _SOURCES_
<org.springframework.jdbc.support.incrementer.AbstractColumnMaxValueIncrementer: void setCacheSize(int)> -> _CWE089__SINKS_
<org.springframework.jdbc.core.StatementCreatorUtils: void setParameterValue(java.sql.PreparedStatement,int,int,java.lang.Object)> -> _CWE089__SINKS_
<org.springframework.mock.web.portlet.MockMimeResponse: java.io.PrintWriter getWriter()> -> _SOURCES__CWE601_
<org.springframework.util.concurrent.FutureAdapter: java.util.concurrent.Future getAdaptee()> -> _SOURCES_
<org.springframework.format.datetime.standard.DateTimeFormatterFactory: void setTimeZone(java.util.TimeZone)> -> _SINKS_
<org.springframework.core.env.CommandLinePropertySource: java.lang.String getProperty(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.mvc.condition.ProducesRequestCondition: java.util.List getContent()> -> _SOURCES_
<org.springframework.util.backoff.ExponentialBackOff: void setInitialInterval(long)> -> _SINKS_
<org.springframework.web.socket.adapter.standard.ConvertingEncoderDecoderSupport: org.springframework.core.convert.TypeDescriptor getMessageType()> -> _SOURCES_
<org.springframework.orm.jpa.EntityManagerHolder: org.springframework.transaction.SavepointManager getSavepointManager()> -> _SOURCES_
<org.springframework.web.multipart.support.AbstractMultipartHttpServletRequest: java.util.List getFiles(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.expression.spel.standard.SpelExpression: java.lang.Object getValue(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Class)> -> _SOURCES_
<org.springframework.jms.connection.UserCredentialsConnectionFactoryAdapter: void setPassword(java.lang.String)> -> _SINKS__CWE862_
<org.springframework.web.servlet.view.AbstractTemplateViewResolver: void setAllowSessionOverride(boolean)> -> _SINKS_
<org.springframework.messaging.support.AbstractHeaderMapper: void setInboundPrefix(java.lang.String)> -> _SINKS_
<org.springframework.aop.aspectj.SingletonAspectInstanceFactory: int getOrderForAspectClass(java.lang.Class)> -> _SOURCES_
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: java.lang.String getDisplayName()> -> _SOURCES_
<org.springframework.ui.context.support.ResourceBundleThemeSource: org.springframework.ui.context.ThemeSource getParentThemeSource()> -> _SOURCES_
<org.springframework.orm.hibernate4.HibernateTemplate: void load(java.lang.Object,java.io.Serializable)> -> _SOURCES_
<org.springframework.jms.core.JmsMessagingTemplate: void send(org.springframework.messaging.Message)> -> _SINKS_
<org.springframework.web.socket.adapter.standard.StandardWebSocketSession: void sendPingMessage(org.springframework.web.socket.PingMessage)> -> _SINKS_
<org.springframework.context.i18n.LocaleContextHolder: void setLocaleContext(org.springframework.context.i18n.LocaleContext,boolean)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletRequest: javax.servlet.http.Part getPart(java.lang.String)> -> _SOURCES_
<org.springframework.security.util.FieldUtils: java.lang.String getMutatorName(java.lang.String)> -> _SOURCES_
<org.springframework.jdbc.core.namedparam.ParsedSql: void setUnnamedParameterCount(int)> -> _CWE089__SINKS_
<org.springframework.http.client.OkHttpClientHttpResponse: org.springframework.http.HttpHeaders getHeaders()> -> _SOURCES__CWE601_
<org.springframework.security.authentication.rcp.RemoteAuthenticationManagerImpl: org.springframework.security.authentication.AuthenticationManager getAuthenticationManager()> -> _CWE306__SOURCES__AUTHENTICATIONS_TO_HIGH_
<org.springframework.jdbc.datasource.SingleConnectionDataSource: java.sql.Connection getCloseSuppressingConnectionProxy(java.sql.Connection)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__SOURCES__CWE862_
<org.springframework.core.type.classreading.MethodMetadataReadingVisitor: java.lang.String getDeclaringClassName()> -> _SOURCES_
<org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter: void setMethodNameResolver(org.springframework.web.servlet.mvc.multiaction.MethodNameResolver)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler: int getConnectionCount()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.mock.web.MockPageContext: javax.servlet.ServletContext getServletContext()> -> _SOURCES_
<org.springframework.jdbc.core.metadata.CallMetaDataContext: java.lang.String getScalarOutParameterName()> -> _CWE089__SOURCES_
<org.springframework.validation.beanvalidation.BeanValidationPostProcessor: void setValidator(javax.validation.Validator)> -> _SINKS_
<org.springframework.util.xml.StaxStreamHandler: void charactersInternal(java.lang.String)> -> _SINKS_
<org.springframework.http.client.OkHttp3ClientHttpRequest: org.springframework.http.client.ClientHttpResponse executeInternal(org.springframework.http.HttpHeaders,byte[])> -> _CWE078__SINKS_
<org.springframework.web.servlet.resource.AppCacheManifestTransformer: org.springframework.core.io.Resource transform(javax.servlet.http.HttpServletRequest,org.springframework.core.io.Resource,org.springframework.web.servlet.resource.ResourceTransformerChain)> -> _SINKS_
<org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator: void setSqlErrorCodes(org.springframework.jdbc.support.SQLErrorCodes)> -> _CWE089__SINKS_
<org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder: org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder setCustomArgumentResolvers(org.springframework.web.method.support.HandlerMethodArgumentResolver[])> -> _SINKS_
<org.springframework.web.servlet.resource.ResourceUrlProvider: int getEndPathIndex(java.lang.String)> -> _SOURCES_
<org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter: org.springframework.security.authentication.AuthenticationManager authenticationManagerBean()> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.util.ContentCachingResponseWrapper: javax.servlet.ServletOutputStream getOutputStream()> -> _SOURCES__CWE601_
<org.springframework.jms.support.JmsUtils: void closeConnection(javax.jms.Connection,boolean)> -> _CWE306__AUTHENTICATIONS_TO_LOW__CWE862_
<org.springframework.web.portlet.bind.PortletRequestUtils: java.lang.String[] getStringParameters(javax.portlet.PortletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockCacheControl: void setPublicScope(boolean)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletRequest: void setCharacterEncoding(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.jdbc.support.nativejdbc.SimpleNativeJdbcExtractor: void setNativeConnectionNecessaryForNativeCallableStatements(boolean)> -> _CWE306__CWE089__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.core.ExceptionDepthComparator: int getDepth(java.lang.Class,java.lang.Class,int)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletPreferences: java.lang.String getValue(java.lang.String,java.lang.String)> -> _SOURCES_
<org.springframework.security.access.event.AuthorizationFailureEvent: org.springframework.security.access.AccessDeniedException getAccessDeniedException()> -> _SOURCES_
<org.springframework.validation.BeanPropertyBindingResult: java.lang.Object getTarget()> -> _SOURCES_
<org.springframework.util.ClassUtils: java.lang.String getPackageName(java.lang.Class)> -> _SOURCES_
<org.springframework.web.servlet.support.RequestContext: java.lang.String getThemeMessage(java.lang.String,java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.security.access.intercept.AbstractSecurityInterceptor: void setRunAsManager(org.springframework.security.access.intercept.RunAsManager)> -> _SINKS_
<org.springframework.messaging.simp.SimpMessageHeaderAccessor: java.security.Principal getUser()> -> _SOURCES_
<org.springframework.test.context.web.socket.MockServerContainer: javax.websocket.Session connectToServer(java.lang.Class,java.net.URI)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.test.web.client.match.XpathRequestMatchers: org.springframework.test.web.client.RequestMatcher nodeCount(org.hamcrest.Matcher)> -> _SOURCES_
<org.springframework.util.MethodInvoker: java.lang.reflect.Method getPreparedMethod()> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanDefinition: void setMethodOverrides(org.springframework.beans.factory.support.MethodOverrides)> -> _SINKS_
<org.springframework.security.config.ldap.ContextSourceSettingPostProcessor: void setDefaultNameRequired(boolean)> -> _SINKS_
<org.springframework.web.portlet.DispatcherPortlet: void setDetectAllHandlerMappings(boolean)> -> _SINKS_
<org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler: org.springframework.messaging.support.MessageHeaderInitializer getHeaderInitializer()> -> _SOURCES_
<org.springframework.web.context.request.async.CallableProcessingInterceptorAdapter: void beforeConcurrentHandling(org.springframework.web.context.request.NativeWebRequest,java.util.concurrent.Callable)> -> _SINKS_
<org.springframework.jms.listener.SimpleMessageListenerContainer102: javax.jms.Connection createConnection()> -> _CWE306__SOURCES__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.beans.factory.support.AbstractBeanDefinition: void setScope(java.lang.String)> -> _SINKS_
<org.springframework.aop.aspectj.annotation.NotAnAtAspectException: java.lang.Class getNonAspectClass()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.ButtonTag: void setName(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.mvc.ServletWrappingController: void setInitParameters(java.util.Properties)> -> _SINKS_
<org.springframework.oxm.castor.CastorMarshaller: void setProcessingInstructions(java.util.Map)> -> _SINKS_
<org.springframework.jms.connection.CachedMessageProducer: void send(javax.jms.Destination,javax.jms.Message,int,int,long)> -> _SINKS_
<org.springframework.aop.target.HotSwappableTargetSource: java.lang.Class getTargetClass()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.CallableMethodReturnValueHandler: void handleReturnValue(java.lang.Object,org.springframework.core.MethodParameter,org.springframework.web.method.support.ModelAndViewContainer,org.springframework.web.context.request.NativeWebRequest)> -> _SINKS_
<org.springframework.jms.listener.endpoint.JmsActivationSpecConfig: void setMaxConcurrency(int)> -> _SINKS_
<org.springframework.jmx.support.NotificationListenerHolder: void setMappedObjectNames(java.lang.Object[])> -> _SINKS_
<org.springframework.web.servlet.view.jasperreports.JasperReportsCsvView: net.sf.jasperreports.engine.JRExporter createExporter()> -> _SOURCES_
<org.springframework.web.servlet.view.script.ScriptTemplateConfigurer: void setEngine(javax.script.ScriptEngine)> -> _SINKS_
<org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler: void setDefaultServletName(java.lang.String)> -> _SINKS_
<org.springframework.cglib.proxy.MethodProxy: org.springframework.cglib.reflect.FastClass getFastClass()> -> _SOURCES_
<org.springframework.cglib.reflect.FastMember: int getModifiers()> -> _SOURCES_
<org.springframework.jdbc.datasource.init.ResourceDatabasePopulator: void setCommentPrefix(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.orm.hibernate5.HibernateTransactionManager: org.hibernate.SessionFactory getSessionFactory()> -> _SOURCES_
<org.springframework.context.support.PropertySourcesPlaceholderConfigurer: void setEnvironment(org.springframework.core.env.Environment)> -> _SINKS_
<org.springframework.orm.ObjectRetrievalFailureException: java.lang.Class getPersistentClass()> -> _SOURCES_
<org.springframework.security.authentication.AnonymousAuthenticationToken: java.lang.Object getPrincipal()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.CsrfConfigurer: org.springframework.security.web.access.AccessDeniedHandler getDefaultAccessDeniedHandler(org.springframework.security.config.'annotation'.web.HttpSecurityBuilder)> -> _SOURCES__SINKS_
<org.springframework.test.web.client.match.MockRestRequestMatchers: org.springframework.test.web.client.RequestMatcher queryParam(java.lang.String,org.hamcrest.Matcher[])> -> _SOURCES_
<org.springframework.beans.factory.config.RuntimeBeanReference: java.lang.Object getSource()> -> _SOURCES_
<org.springframework.beans.factory.config.ServiceLocatorFactoryBean: void setServiceLocatorExceptionClass(java.lang.Class)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setCacheSecondsForSessionAttributeHandlers(int)> -> _SINKS_
<org.springframework.web.socket.server.standard.WebLogicRequestUpgradeStrategy: java.lang.Object getNativeRequest(javax.servlet.ServletRequest)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletSession: java.lang.Object getAttribute(java.lang.String)> -> _SOURCES_
<org.springframework.orm.jpa.EntityManagerFactoryUtils: javax.persistence.EntityManager getTransactionalEntityManager(javax.persistence.EntityManagerFactory,java.util.Map)> -> _SOURCES_
<org.springframework.security.core.context.InheritableThreadLocalSecurityContextHolderStrategy: org.springframework.security.core.context.SecurityContext getContext()> -> _SOURCES_
<org.springframework.scheduling.config.ScheduledTaskRegistrar: void setFixedRateTasks(java.util.Map)> -> _SINKS_
<org.springframework.web.servlet.tags.form.CheckboxesTag: int writeTagContent(org.springframework.web.servlet.tags.form.TagWriter)> -> _SINKS_
<org.springframework.core.enums.AbstractLabeledEnum: java.lang.Class getType()> -> _SOURCES_
<org.springframework.expression.common.CompositeStringExpression: org.springframework.expression.Expression[] getExpressions()> -> _SOURCES_
<org.springframework.messaging.simp.SimpMessageHeaderAccessor: java.lang.StringBuilder getBaseLogMessage()> -> _SOURCES_
<org.springframework.expression.spel.ast.SpelNodeImpl: void setValue(org.springframework.expression.spel.ExpressionState,java.lang.Object)> -> _SINKS_
<org.springframework.web.servlet.view.freemarker.FreeMarkerView: freemarker.template.Template getTemplate(java.util.Locale)> -> _SOURCES_
<org.springframework.http.client.HttpComponentsAsyncClientHttpResponse: java.lang.String getStatusText()> -> _SOURCES__CWE601_
<org.springframework.security.util.FieldUtils: java.lang.Object getFieldValue(java.lang.Object,java.lang.String)> -> _SOURCES_
<org.springframework.expression.spel.CodeFlow: java.lang.String getClassname()> -> _SOURCES_
<org.springframework.web.portlet.bind.PortletRequestUtils: boolean getBooleanParameter(javax.portlet.PortletRequest,java.lang.String,boolean)> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanFactory: org.springframework.beans.factory.support.RootBeanDefinition getMergedLocalBeanDefinition(java.lang.String)> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.handler.JsonpReceivingTransportHandler: org.springframework.http.HttpStatus getResponseStatus()> -> _SOURCES_
<org.springframework.orm.hibernate4.support.OpenSessionInViewFilter: boolean applySessionBindingInterceptor(org.springframework.web.context.request.async.WebAsyncManager,java.lang.String)> -> _SINKS_
<org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor: void setExceptionHandler(org.springframework.aop.interceptor.AsyncUncaughtExceptionHandler)> -> _SINKS_
<org.springframework.beans.factory.support.RootBeanDefinition: void setParentName(java.lang.String)> -> _SINKS_
<org.springframework.beans.PropertyBatchUpdateException: org.springframework.beans.PropertyAccessException getPropertyAccessException(java.lang.String)> -> _SOURCES_
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: org.springframework.core.io.Resource getResource(java.lang.String)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockRenderResponse: void setNextPossiblePortletModes(java.util.Collection)> -> _SINKS__CWE601_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSetMetaData: java.lang.String getColumnLabel(int)> -> _CWE089__SOURCES_
<org.springframework.web.socket.config.MessageBrokerBeanDefinitionParser: org.springframework.beans.factory.config.RuntimeBeanReference registerRequestHandler(org.w3c.dom.Element,org.springframework.beans.factory.config.RuntimeBeanReference,org.springframework.beans.factory.xml.ParserContext,java.lang.Object)> -> _SINKS_
<org.springframework.web.servlet.view.ViewResolverComposite: void setServletContext(javax.servlet.ServletContext)> -> _SINKS_
<org.springframework.web.jsf.DecoratingNavigationHandler: javax.faces.application.NavigationHandler getDecoratedNavigationHandler()> -> _SOURCES_
<org.springframework.jms.core.JmsMessagingTemplate: java.lang.Object convertSendAndReceive(java.lang.String,java.lang.Object,java.util.Map,java.lang.Class)> -> _SINKS_
<org.springframework.test.web.servlet.TestDispatcherServlet: org.springframework.test.web.servlet.DefaultMvcResult getMvcResult(javax.servlet.ServletRequest)> -> _SOURCES_
<org.springframework.http.client.Netty4ClientHttpRequest: java.io.OutputStream getBodyInternal(org.springframework.http.HttpHeaders)> -> _SOURCES_
<org.springframework.web.servlet.tags.EvalTag: void setVar(java.lang.String)> -> _SINKS_
<org.springframework.cache.support.AbstractValueAdaptingCache: org.springframework.cache.Cache$ValueWrapper get(java.lang.Object)> -> _SOURCES_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSetMetaData: int getPrecision(int)> -> _CWE089__SOURCES_
<org.springframework.test.jdbc.JdbcTestUtils: void executeSqlScript(org.springframework.jdbc.core.JdbcTemplate,org.springframework.core.io.support.EncodedResource,boolean)> -> _CWE078__CWE089__SINKS_
<org.springframework.cache.transaction.TransactionAwareCacheDecorator: java.lang.Object getNativeCache()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.TagWriter: void writeOptionalAttributeValue(java.lang.String,java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: void setTitle(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.mock.web.MockMultipartFile: java.lang.String getContentType()> -> _SOURCES_
<org.springframework.web.socket.server.standard.ServletServerContainerFactoryBean: void setMaxSessionIdleTimeout(long)> -> _SINKS_
<org.springframework.asm.commons.Method: java.lang.String getName()> -> _SOURCES_
<org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter: int getOrder()> -> _SOURCES_
<org.springframework.cglib.core.TypeUtils: int getStackSize(org.springframework.asm.Type[])> -> _SOURCES_
<org.springframework.http.client.HttpComponentsClientHttpRequestFactory: void setBufferRequestBody(boolean)> -> _SINKS_
<org.springframework.expression.spel.ast.Literal: java.lang.String getOriginalValue()> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.WebSocketTransport: java.util.List getTransportTypes()> -> _SOURCES_
<org.springframework.util.MethodInvoker: java.lang.String getTargetMethod()> -> _SOURCES_
<org.springframework.web.servlet.view.ResourceBundleViewResolver: int getOrder()> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompHeaderAccessor: java.lang.String getShortLogMessage(java.lang.Object)> -> _SOURCES_
<org.springframework.core.convert.TypeDescriptor: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration: org.springframework.web.servlet.support.RequestDataValueProcessor requestDataValueProcessor()> -> _SOURCES_
<org.springframework.remoting.jaxrpc.JaxRpcSoapFaultException: java.lang.String getFaultActor()> -> _SOURCES_
<org.springframework.orm.ibatis.support.SqlMapClientDaoSupport: void setDataSource(javax.sql.DataSource)> -> _SINKS_
<org.springframework.cache.ehcache.EhCacheFactoryBean: void setBlocking(boolean)> -> _SINKS_
<org.springframework.jdbc.support.incrementer.PostgreSQLSequenceMaxValueIncrementer: java.lang.String getSequenceQuery()> -> _CWE089__SOURCES_
<org.springframework.orm.hibernate5.HibernateTemplate: void update(java.lang.String,java.lang.Object,org.hibernate.LockMode)> -> _SINKS_
<org.springframework.jms.listener.endpoint.JmsMessageEndpointFactory: void setMessageListener(javax.jms.MessageListener)> -> _SINKS_
<org.springframework.beans.factory.support.AbstractBeanDefinition: void setConstructorArgumentValues(org.springframework.beans.factory.config.ConstructorArgumentValues)> -> _SINKS_
<org.springframework.web.servlet.tags.form.AbstractMultiCheckedElementTag: java.lang.String getItemLabel()> -> _SOURCES_
<org.springframework.test.context.support.TestPropertySourceAttributes: java.lang.Class getDeclaringClass()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder: java.lang.String getTypeRequestMapping(java.lang.Class)> -> _CWE079__SOURCES_
<org.springframework.orm.hibernate5.LocalSessionFactoryBuilder: org.springframework.orm.hibernate5.LocalSessionFactoryBuilder setJtaTransactionManager(java.lang.Object)> -> _SINKS_
<org.springframework.web.context.support.ServletContextResource: javax.servlet.ServletContext getServletContext()> -> _SOURCES_
<org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder: java.lang.String getAlgorithm()> -> _SOURCES_
<org.springframework.mail.javamail.JavaMailSenderImpl: void send(javax.mail.internet.MimeMessage[])> -> _SINKS_
<org.springframework.core.env.MutablePropertySources: org.springframework.core.env.PropertySource get(java.lang.String)> -> _SOURCES_
<org.springframework.aop.interceptor.AsyncExecutionAspectSupport: java.util.concurrent.Executor findQualifiedExecutor(org.springframework.beans.factory.BeanFactory,java.lang.String)> -> _SINKS_
<org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean: void setEntityTypeFilters(org.springframework.core.type.filter.TypeFilter[])> -> _SINKS_
<org.springframework.cglib.transform.ClassTransformerTee: void setTarget(org.springframework.asm.ClassVisitor)> -> _SINKS_
<org.springframework.beans.support.PagedListHolder: int getPage()> -> _SOURCES_
<org.springframework.mock.web.MockPageContext: java.lang.Object getPage()> -> _SOURCES_
<org.springframework.core.io.VfsUtils: java.io.File getFile(java.lang.Object)> -> _SOURCES_
<org.springframework.messaging.support.MessageHeaderAccessor: void setIdGenerator(org.springframework.util.IdGenerator)> -> _SINKS_
<org.springframework.jms.support.JmsMessageHeaderAccessor: java.lang.Integer getPriority()> -> _SOURCES_
<org.springframework.cglib.beans.BulkBean: java.lang.String[] getSetters()> -> _SOURCES_
<org.springframework.cglib.proxy.Enhancer: int[] getCallbackKeys()> -> _SOURCES_
<org.springframework.jdbc.object.SqlQuery: java.util.List executeByNamedParam(java.util.Map,java.util.Map)> -> _CWE089__SINKS_
<org.springframework.scheduling.concurrent.ConcurrentTaskExecutor: void execute(java.lang.Runnable)> -> _CWE078__SINKS_
<org.springframework.jms.listener.AbstractMessageListenerContainer: void setDestinationName(java.lang.String)> -> _SINKS_
<org.springframework.messaging.core.AbstractMessagingTemplate: java.lang.Object convertSendAndReceive(java.lang.Object,java.lang.Object,java.lang.Class)> -> _SINKS_
<org.springframework.remoting.jaxws.JaxWsSoapFaultException: java.lang.String getFaultString()> -> _SOURCES_
<org.springframework.web.servlet.view.ResourceBundleViewResolver: void setDefaultParentView(java.lang.String)> -> _SINKS_
<org.springframework.core.type.StandardAnnotationMetadata: java.util.Set getMetaAnnotationTypes(java.lang.String)> -> _SOURCES_
<org.springframework.web.client.RestClientResponseException: int getRawStatusCode()> -> _SOURCES__CWE601_
<org.springframework.expression.common.LiteralExpression: java.lang.String getExpressionString()> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession: void sendMessageInternal(java.lang.String)> -> _SINKS_
<org.springframework.context.annotation.AnnotationConfigApplicationContext: void setScopeMetadataResolver(org.springframework.context.'annotation'.ScopeMetadataResolver)> -> _SINKS_
<org.springframework.web.servlet.handler.AbstractUrlHandlerMapping: java.lang.Object getRootHandler()> -> _SOURCES_
<org.springframework.messaging.handler.invocation.InvocableHandlerMethod: java.lang.String getInvocationErrorMessage(java.lang.String,java.lang.Object[])> -> _SOURCES_
<org.springframework.aop.target.CommonsPool2TargetSource: void setMaxIdle(int)> -> _SINKS_
<org.springframework.http.client.SimpleClientHttpRequestFactory: org.springframework.http.client.ClientHttpRequest createRequest(java.net.URI,org.springframework.http.HttpMethod)> -> _SOURCES_
<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder flashAttrs(java.util.Map)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletConfig: java.util.Map getContainerRuntimeOptions()> -> _SOURCES_
<org.springframework.web.bind.annotation.support.HandlerMethodInvoker: java.lang.Object invokeHandlerMethod(java.lang.reflect.Method,java.lang.Object,org.springframework.web.context.request.NativeWebRequest,org.springframework.ui.ExtendedModelMap)> -> _SINKS_
<org.springframework.asm.commons.GeneratorAdapter: void arrayLoad(org.springframework.asm.Type)> -> _SOURCES_
<org.springframework.security.config.annotation.authentication.configurers.ldap.LdapAuthenticationProviderConfigurer: org.springframework.ldap.core.support.BaseLdapPathContextSource getContextSource()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.AbstractConfigAttributeRequestMatcherRegistry: java.util.List getUrlMappings()> -> _SOURCES_
<org.springframework.cache.ehcache.EhCacheFactoryBean: void setCacheName(java.lang.String)> -> _SINKS_
<org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter: void setContentNegotationStrategy(org.springframework.web.accept.ContentNegotiationStrategy)> -> _SINKS_
<org.springframework.util.DefaultPropertiesPersister: void load(java.util.Properties,java.io.InputStream)> -> _SOURCES_
<org.springframework.web.multipart.commons.CommonsMultipartResolver: void cleanupMultipart(org.springframework.web.multipart.MultipartHttpServletRequest)> -> _SINKS_
<org.springframework.cache.interceptor.CacheAspectSupport: void setCacheManager(org.springframework.cache.CacheManager)> -> _SINKS_
<org.springframework.web.socket.server.standard.ServletServerContainerFactoryBean: void setServletContext(javax.servlet.ServletContext)> -> _SINKS_
<org.springframework.mock.web.HeaderValueHolder: java.lang.String getStringValue()> -> _SOURCES_
<org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener: int getOrder()> -> _SOURCES_
<org.springframework.jca.work.SimpleTaskWorkManager: long executeWork(org.springframework.core.task.TaskExecutor,javax.resource.spi.work.Work,long,boolean,javax.resource.spi.work.ExecutionContext,javax.resource.spi.work.WorkListener)> -> _CWE078__SINKS_
<org.springframework.aop.framework.ProxyFactory: java.lang.Object getProxy(java.lang.Class,org.springframework.aop.TargetSource)> -> _SOURCES_
<org.springframework.web.servlet.view.tiles2.TilesConfigurer: void setDefinitionsFactoryClass(java.lang.Class)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompHeaderAccessor: void setReceipt(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.portlet.MockEventRequest: void setMethod(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.web.accept.ContentNegotiationManager getContentNegotiationManager()> -> _SOURCES_
<org.springframework.messaging.simp.annotation.support.SendToMethodReturnValueHandler: void setDefaultDestinationPrefix(java.lang.String)> -> _SINKS_
<org.springframework.security.authentication.jaas.JaasAuthenticationProvider: void handleLogout(org.springframework.security.core.session.SessionDestroyedEvent)> -> _CWE306__AUTHENTICATIONS_TO_LOW__CWE862_
<org.springframework.web.multipart.support.DefaultMultipartHttpServletRequest: java.lang.String getParameter(java.lang.String)> -> _CWE079__SOURCES__CWE601_
<org.springframework.web.socket.sockjs.client.AbstractClientSockJsSession: java.net.URI getUri()> -> _SOURCES_
<org.springframework.jms.core.JmsTemplate102: javax.jms.Session getSession(org.springframework.jms.connection.JmsResourceHolder)> -> _SOURCES_
<org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler: org.springframework.messaging.simp.broker.SubscriptionRegistry getSubscriptionRegistry()> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompHeaders: java.lang.String getPasscode()> -> _SOURCES_
<org.springframework.web.servlet.view.velocity.VelocityView: org.apache.velocity.context.Context createVelocityContext(java.util.Map,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.handler.XhrReceivingTransportHandler: java.lang.String[] readMessages(org.springframework.http.server.ServerHttpRequest)> -> _SOURCES_
<org.springframework.security.config.annotation.authentication.configurers.userdetails.DaoAuthenticationConfigurer: void configure(org.springframework.security.config.'annotation'.authentication.ProviderManagerBuilder)> -> _CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.view.xslt.XsltViewResolver: void setErrorListener(javax.xml.transform.ErrorListener)> -> _SINKS_
<org.springframework.beans.factory.support.MethodOverride: java.lang.Object getSource()> -> _SOURCES_
<org.springframework.scheduling.timer.ScheduledTimerTask: java.util.TimerTask getTimerTask()> -> _SOURCES_
<org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver: org.springframework.web.method.'annotation'.AbstractNamedValueMethodArgumentResolver$NamedValueInfo getNamedValueInfo(org.springframework.core.MethodParameter)> -> _SOURCES_
<org.springframework.jdbc.support.nativejdbc.CommonsDbcpNativeJdbcExtractor: java.sql.ResultSet getNativeResultSet(java.sql.ResultSet)> -> _CWE089__SOURCES_
<org.springframework.orm.hibernate3.LocalSessionFactoryBean: void setEntityCacheStrategies(java.util.Properties)> -> _SINKS_
<org.springframework.web.portlet.handler.PortletModeParameterHandlerMapping: org.springframework.web.portlet.handler.PortletModeParameterLookupKey getLookupKey(javax.portlet.PortletRequest)> -> _SOURCES_
<org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean: java.lang.Class getTargetClass()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockResourceURL: void setCacheability(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.mvc.multiaction.MultiActionController: void setDelegate(java.lang.Object)> -> _SINKS_
<org.springframework.web.servlet.mvc.condition.ConsumesRequestCondition: java.util.Collection getContent()> -> _SOURCES_
<org.springframework.util.ClassUtils: java.lang.String getClassFileName(java.lang.Class)> -> _SOURCES_
<org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor: int getMaxPoolSize()> -> _SOURCES_
<org.springframework.cache.interceptor.CacheAspectSupport: void setCacheResolver(org.springframework.cache.interceptor.CacheResolver)> -> _SINKS_
<org.springframework.web.bind.ServletRequestUtils: double[] getDoubleParameters(javax.servlet.ServletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.mail.MailSendException: java.lang.Exception[] getMessageExceptions()> -> _SOURCES_
<org.springframework.orm.jdo.support.SpringPersistenceManagerProxyBean: javax.jdo.PersistenceManager getObject()> -> _SOURCES_
<org.springframework.web.socket.server.standard.AbstractTyrusRequestUpgradeStrategy: void unregisterTyrusEndpoint(org.glassfish.tyrus.core.TyrusWebSocketEngine,java.lang.Object)> -> _SINKS_
<org.springframework.format.datetime.DateFormatter: void setLenient(boolean)> -> _SINKS_
<org.springframework.messaging.simp.config.MessageBrokerRegistry: java.util.Collection getApplicationDestinationPrefixes()> -> _SOURCES_
<org.springframework.cglib.reflect.FastConstructor: java.lang.reflect.Constructor getJavaConstructor()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletResponse: org.w3c.dom.Element[] getXmlProperties(java.lang.String)> -> _SOURCES__CWE601_
<org.springframework.scheduling.config.Task: java.lang.Runnable getRunnable()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.PathVariableMethodArgumentResolver: java.lang.Object resolveName(java.lang.String,org.springframework.core.MethodParameter,org.springframework.web.context.request.NativeWebRequest)> -> _SINKS_
<org.springframework.cache.interceptor.CacheAspectSupport: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.orm.hibernate4.LocalSessionFactoryBean: void setResourceLoader(org.springframework.core.io.ResourceLoader)> -> _SOURCES__SINKS_
<org.springframework.beans.factory.parsing.AbstractComponentDefinition: org.springframework.beans.factory.config.BeanDefinition[] getInnerBeanDefinitions()> -> _SOURCES_
<org.springframework.web.jsf.DelegatingNavigationHandlerProxy: java.lang.String getTargetBeanName(javax.faces.context.FacesContext)> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setParameterNameDiscoverer(org.springframework.core.ParameterNameDiscoverer)> -> _SINKS_
<org.springframework.beans.factory.support.MethodOverrides: org.springframework.beans.factory.support.MethodOverride getOverride(java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.web.method.support.CompositeUriComponentsContributor: void contributeMethodArgument(org.springframework.core.MethodParameter,java.lang.Object,org.springframework.web.util.UriComponentsBuilder,java.util.Map,org.springframework.core.convert.ConversionService)> -> _SINKS_
<org.springframework.validation.beanvalidation.LocalValidatorFactoryBean: void setValidationProperties(java.util.Properties)> -> _SINKS_
<org.springframework.oxm.xstream.XStreamMarshaller: void setConverterLookup(com.thoughtworks.xstream.converters.ConverterLookup)> -> _SINKS_
<org.springframework.expression.spel.ast.OpMultiply: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.jdbc.datasource.lookup.BeanFactoryDataSourceLookup: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _CWE089__SINKS_
<org.springframework.orm.ibatis.support.AbstractLobTypeHandler: void setParameter(java.sql.PreparedStatement,int,java.lang.Object,java.lang.String)> -> _SINKS_
<org.springframework.jms.remoting.JmsInvokerProxyFactoryBean: void setServiceInterface(java.lang.Class)> -> _SINKS_
<org.springframework.core.annotation.AnnotationAttributes: java.lang.Number getNumber(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.view.script.ScriptTemplateConfigurer: java.lang.String getEngineName()> -> _SOURCES_
<org.springframework.oxm.jaxb.Jaxb2Marshaller: void setLazyInit(boolean)> -> _SINKS_
<org.springframework.mail.javamail.MimeMessageHelper: void setText(java.lang.String,boolean)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompHeaders: void setSession(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.portlet.MockMultipartActionRequest: java.util.Iterator getFileNames()> -> _SOURCES_
<org.springframework.cglib.proxy.Enhancer: void setInterceptDuringConstruction(boolean)> -> _SINKS_
<org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor: org.springframework.aop.Pointcut getPointcut()> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer: org.springframework.web.servlet.config.'annotation'.ContentNegotiationConfigurer replaceMediaTypes(java.util.Map)> -> _SINKS_
<org.springframework.web.servlet.resource.TransformedResource: java.lang.String getFilename()> -> _SOURCES_
<org.springframework.jdbc.BadSqlGrammarException: java.lang.String getSql()> -> _CWE089__SOURCES_
<org.springframework.web.servlet.config.ResourcesBeanDefinitionParser: void parseResourceResolversTransformers(boolean,org.springframework.beans.factory.support.ManagedList,org.springframework.beans.factory.support.ManagedList,org.springframework.beans.factory.xml.ParserContext,org.w3c.dom.Element,java.lang.Object)> -> _SOURCES__SINKS_
<org.springframework.context.event.AbstractApplicationEventMulticaster: void setCollectionClass(java.lang.Class)> -> _SINKS_
<org.springframework.jdbc.core.simple.SimpleJdbcTemplate: int update(java.lang.String,java.util.Map)> -> _CWE089__SINKS_
<org.springframework.orm.jdo.support.JdoDaoSupport: javax.jdo.PersistenceManagerFactory getPersistenceManagerFactory()> -> _SOURCES_
<org.springframework.beans.support.RefreshablePagedListHolder: void setFilter(java.lang.Object)> -> _SINKS_
<org.springframework.aop.aspectj.annotation.InstantiationModelAwarePointcutAdvisorImpl: org.springframework.aop.Pointcut getPointcut()> -> _SOURCES_
<org.springframework.web.multipart.commons.CommonsFileUploadSupport: void setUploadTempDir(org.springframework.core.io.Resource)> -> _SOURCES__SINKS_
<org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod: void invokeAndHandle(org.springframework.web.context.request.ServletWebRequest,org.springframework.web.method.support.ModelAndViewContainer,java.lang.Object[])> -> _SINKS_
<org.springframework.orm.hibernate3.HibernateAccessor: void setFilterNames(java.lang.String[])> -> _SINKS_
<org.springframework.test.context.support.DefaultTestContext: java.lang.reflect.Method getTestMethod()> -> _SOURCES_
<org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler: javax.management.modelmbean.ModelMBeanNotificationInfo[] getNotificationInfo(java.lang.Object,java.lang.String)> -> _SOURCES_
<org.springframework.orm.hibernate5.support.HibernateDaoSupport: void setSessionFactory(org.hibernate.SessionFactory)> -> _SINKS_
<org.springframework.asm.Handle: java.lang.String getName()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractSingleCheckedElementTag: void setLabel(java.lang.Object)> -> _SINKS_
<org.springframework.cache.interceptor.CacheOperation: java.lang.String getKey()> -> _SOURCES_
<org.springframework.util.ClassUtils: java.lang.Class[] getAllInterfacesForClass(java.lang.Class)> -> _SOURCES_
<org.springframework.jdbc.core.JdbcTemplate: java.lang.Object execute(org.springframework.jdbc.core.ConnectionCallback)> -> _CWE089__SINKS_
<org.springframework.orm.hibernate5.HibernateJdbcException: java.lang.String getSql()> -> _CWE089__SOURCES_
<org.springframework.web.socket.adapter.standard.StandardWebSocketSession: java.security.Principal getPrincipal()> -> _SOURCES_
<org.springframework.mock.jndi.SimpleNamingContext: javax.naming.NameParser getNameParser(java.lang.String)> -> _SOURCES__SINKS_
<org.springframework.beans.factory.annotation.CustomAutowireConfigurer: void setOrder(int)> -> _SINKS_
<org.springframework.web.socket.sockjs.transport.handler.XhrReceivingTransportHandler: org.springframework.web.socket.sockjs.transport.TransportType getTransportType()> -> _SOURCES_
<org.springframework.jdbc.object.SqlUpdate: int update(java.lang.Object[],org.springframework.jdbc.support.KeyHolder)> -> _CWE089__SINKS_
<org.springframework.beans.factory.config.PropertyPathFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.web.servlet.handler.SimpleMappingExceptionResolver: int getDepth(java.lang.String,java.lang.Exception)> -> _SOURCES_
<org.springframework.jms.listener.adapter.AbstractAdaptableMessageListener: javax.jms.Destination getResponseDestination(javax.jms.Message,javax.jms.Message,javax.jms.Session)> -> _SOURCES_
<org.springframework.context.event.ApplicationListenerMethodAdapter: java.lang.String getInvocationErrorMessage(java.lang.Object,java.lang.String,java.lang.Object[])> -> _SOURCES_
<org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl: void setUsersByUsernameQuery(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.test.web.servlet.request.MockMultipartHttpServletRequestBuilder: org.springframework.mock.web.MockHttpServletRequest createServletRequest(javax.servlet.ServletContext)> -> _SOURCES_
<org.springframework.expression.ExpressionException: java.lang.String getSimpleMessage()> -> _SOURCES_
<org.springframework.jmx.access.NotificationListenerRegistrar: void setAgentId(java.lang.String)> -> _SINKS_
<org.springframework.oxm.xstream.XStreamMarshaller: void setMapper(com.thoughtworks.xstream.mapper.Mapper)> -> _SINKS_
<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.XmlReaderContext getReaderContext()> -> _SOURCES_
<org.springframework.cglib.core.AbstractClassGenerator: java.lang.ClassLoader getClassLoader()> -> _SOURCES_
<org.springframework.cglib.core.ReflectUtils: java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])> -> _SOURCES_
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.Object getSingletonMutex()> -> _SOURCES_
<org.springframework.beans.factory.config.PropertyResourceConfigurer: void setOrder(int)> -> _SINKS_
<org.springframework.jms.core.JmsMessagingTemplate: void setDefaultDestinationName(java.lang.String)> -> _SINKS_
<org.springframework.web.socket.handler.ConcurrentWebSocketSessionDecorator: void close(org.springframework.web.socket.CloseStatus)> -> _SINKS_
<org.springframework.web.socket.client.standard.StandardWebSocketClient: java.util.Map getUserProperties()> -> _SOURCES_
<org.springframework.format.datetime.joda.LocalDateTimeParser: org.joda.time.LocalDateTime parse(java.lang.String,java.util.Locale)> -> _SINKS_
<org.springframework.jmx.export.SpringModelMBean: void setManagedResource(java.lang.Object,java.lang.String)> -> _SINKS_
<org.springframework.core.type.StandardClassMetadata: java.lang.Class getIntrospectedClass()> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanDefinition: void setDependsOn(java.lang.String[])> -> _SINKS_
<org.springframework.security.authentication.jaas.AbstractJaasAuthenticationProvider: org.springframework.security.authentication.jaas.LoginExceptionResolver getLoginExceptionResolver()> -> _CWE306__SOURCES_
<org.springframework.test.web.servlet.request.MockMultipartHttpServletRequestBuilder: org.springframework.test.web.servlet.request.MockMultipartHttpServletRequestBuilder file(java.lang.String,byte[])> -> _SOURCES_
<org.springframework.web.method.annotation.ExpressionValueMethodArgumentResolver: org.springframework.web.method.'annotation'.AbstractNamedValueMethodArgumentResolver$NamedValueInfo createNamedValueInfo(org.springframework.core.MethodParameter)> -> _SOURCES_
<org.springframework.orm.hibernate5.SessionHolder: org.hibernate.Transaction getTransaction()> -> _SOURCES_
<org.springframework.messaging.support.MessageHeaderAccessor: java.lang.Object getHeader(java.lang.String)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletRequest: void setSecure(boolean)> -> _SINKS_
<org.springframework.jdbc.support.JdbcAccessor: void setDataSource(javax.sql.DataSource)> -> _CWE089__SINKS_
<org.springframework.scheduling.quartz.CronTriggerFactoryBean: void setPriority(int)> -> _SINKS_
<org.springframework.web.context.support.StaticWebApplicationContext: void setServletContext(javax.servlet.ServletContext)> -> _SINKS_
<org.springframework.test.context.jdbc.MergedSqlConfig: org.springframework.test.context.jdbc.SqlConfig$TransactionMode getTransactionMode()> -> _CWE089__SOURCES_
<org.springframework.http.client.BufferingClientHttpRequestWrapper: org.springframework.http.client.ClientHttpResponse executeInternal(org.springframework.http.HttpHeaders,byte[])> -> _CWE078__SINKS_
<org.springframework.beans.factory.config.YamlPropertiesFactoryBean: void setSingleton(boolean)> -> _SINKS_
<org.springframework.remoting.jaxws.JaxWsPortClientInterceptor: void setUseSoapAction(boolean)> -> _SINKS_
<org.springframework.core.annotation.AnnotationAwareOrderComparator: int getOrder(java.lang.Object)> -> _SOURCES_
<org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader: void setBinding(groovy.lang.Binding)> -> _SINKS_
<org.springframework.jms.listener.AbstractPollingMessageListenerContainer: org.springframework.transaction.PlatformTransactionManager getTransactionManager()> -> _SOURCES_
<org.springframework.jms.core.JmsTemplate: void convertAndSend(javax.jms.Destination,java.lang.Object)> -> _SINKS_
<org.springframework.remoting.rmi.RmiClientInterceptor: boolean isConnectFailure(java.rmi.RemoteException)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE862_
<org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader: void setMetaClass(groovy.lang.MetaClass)> -> _SINKS_
<org.springframework.jdbc.core.JdbcTemplate: void setNativeJdbcExtractor(org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor)> -> _CWE089__SINKS_
<org.springframework.core.OverridingClassLoader: byte[] loadBytesForClass(java.lang.String)> -> _SOURCES_
<org.springframework.cglib.proxy.InterfaceMaker: java.lang.ClassLoader getDefaultClassLoader()> -> _SOURCES_
<org.springframework.cache.ehcache.EhCacheCache: java.lang.Object loadValue(java.lang.Object,java.util.concurrent.Callable)> -> _SOURCES_
<org.springframework.scheduling.support.CronSequenceGenerator: java.lang.String replaceOrdinals(java.lang.String,java.lang.String)> -> _SANITIZERS__SINKS_
<org.springframework.scheduling.concurrent.ScheduledExecutorFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.web.client.RestTemplate: java.lang.Object execute(java.lang.String,org.springframework.http.HttpMethod,org.springframework.web.client.RequestCallback,org.springframework.web.client.ResponseExtractor,java.util.Map)> -> _SINKS_
<org.springframework.security.config.annotation.web.builders.HttpSecurity: org.springframework.security.config.'annotation'.web.configurers.FormLoginConfigurer formLogin()> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.http.converter.xml.AbstractJaxb2HttpMessageConverter: javax.xml.bind.JAXBContext getJaxbContext(java.lang.Class)> -> _SOURCES_
<org.springframework.asm.commons.GeneratorAdapter: void loadLocal(int,org.springframework.asm.Type)> -> _SOURCES_
<org.springframework.jca.cci.object.SimpleRecordOperation: javax.resource.cci.Record execute(javax.resource.cci.Record)> -> _CWE078__SINKS_
<org.springframework.mock.web.portlet.MockPortletRequest: javax.portlet.PortletSession getPortletSession(boolean)> -> _CWE079__SOURCES_
<org.springframework.web.bind.ServletRequestUtils: int[] getRequiredIntParameters(javax.servlet.ServletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.web.context.request.async.DeferredResult: boolean setResultInternal(java.lang.Object)> -> _SINKS_
<org.springframework.web.servlet.resource.ResourceUrlProvider: java.util.Map getHandlerMap()> -> _SOURCES_
<org.springframework.remoting.rmi.RemoteInvocationSerializingExporter: java.lang.String getContentType()> -> _SOURCES_
<org.springframework.web.context.support.GroovyWebApplicationContext: void loadBeanDefinitions(org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader)> -> _SOURCES_
<org.springframework.jdbc.object.SqlUpdate: int update(int,int)> -> _CWE089__SINKS_
<org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler: java.lang.Object getMatchingMapping(java.lang.Object,org.springframework.messaging.Message)> -> _SOURCES_
<org.springframework.context.annotation.AnnotatedBeanDefinitionReader: org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()> -> _SOURCES_
<org.springframework.orm.ibatis.support.ClobStringTypeHandler: java.lang.Object getResultInternal(java.sql.ResultSet,int,org.springframework.jdbc.support.lob.LobHandler)> -> _SOURCES_
<org.springframework.beans.MutablePropertyValues: org.springframework.beans.PropertyValue getPropertyValue(java.lang.String)> -> _SOURCES_
<org.springframework.validation.beanvalidation.MethodValidationPostProcessor: void setValidatedAnnotationType(java.lang.Class)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletRequest: java.security.Principal getUserPrincipal()> -> _SOURCES_
<org.springframework.web.portlet.context.StaticPortletApplicationContext: void setConfigLocation(java.lang.String)> -> _SINKS_
<org.springframework.orm.jpa.vendor.OpenJpaVendorAdapter: java.util.Map getJpaPropertyMap()> -> _SOURCES_
<org.springframework.jdbc.core.ColumnMapRowMapper: java.lang.String getColumnKey(java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.web.servlet.view.velocity.VelocityLayoutView: void setLayoutUrl(java.lang.String)> -> _SINKS_
<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypeConverter getTypeConverter()> -> _SOURCES_
<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: void setMessageCodesResolver(org.springframework.validation.MessageCodesResolver)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor: java.util.List getProducibleMediaTypes(javax.servlet.http.HttpServletRequest,java.lang.Class,java.lang.reflect.Type)> -> _SOURCES_
<org.springframework.web.cors.DefaultCorsProcessor: org.springframework.http.HttpMethod getMethodToUse(org.springframework.http.server.ServerHttpRequest,boolean)> -> _SOURCES_
<org.springframework.beans.factory.config.TypedStringValue: java.lang.String getValue()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletConfig: javax.portlet.PortletContext getPortletContext()> -> _SOURCES_
<org.springframework.context.annotation.ConfigurationClassPostProcessor: int getOrder()> -> _SOURCES_
<org.springframework.web.socket.client.jetty.JettyWebSocketClient: void setTaskExecutor(org.springframework.core.task.AsyncListenableTaskExecutor)> -> _SINKS_
<org.springframework.jmx.support.ConnectorServerFactoryBean: void setObjectName(java.lang.Object)> -> _SINKS_
<org.springframework.context.expression.BeanExpressionContextAccessor: java.lang.Class[] getSpecificTargetClasses()> -> _SOURCES_
<org.springframework.format.datetime.standard.DateTimeFormatterRegistrar: void setTimeFormatter(java.time.format.DateTimeFormatter)> -> _SINKS_
<org.springframework.context.annotation.LoadTimeWeavingConfiguration: void setLoadTimeWeavingConfigurer(org.springframework.context.'annotation'.LoadTimeWeavingConfigurer)> -> _SINKS_
<org.springframework.aop.config.AspectComponentDefinition: org.springframework.beans.factory.config.BeanDefinition[] getBeanDefinitions()> -> _SOURCES_
<org.springframework.cglib.proxy.MethodProxy: java.lang.String getSuperName()> -> _SOURCES_
<org.springframework.web.bind.support.DefaultSessionAttributeStore: void cleanupAttribute(org.springframework.web.context.request.WebRequest,java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.DispatcherServlet: org.springframework.web.servlet.View resolveViewName(java.lang.String,java.util.Map,java.util.Locale,javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateAccessor: org.hibernate.SessionFactory getSessionFactory()> -> _SOURCES_
<org.springframework.beans.factory.support.DefaultListableBeanFactory: org.springframework.beans.factory.support.AutowireCandidateResolver getAutowireCandidateResolver()> -> _SOURCES_
<org.springframework.context.annotation.ComponentScanBeanDefinitionParser: void parseTypeFilters(org.w3c.dom.Element,org.springframework.context.'annotation'.ClassPathBeanDefinitionScanner,org.springframework.beans.factory.xml.XmlReaderContext)> -> _SOURCES_
<org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler: org.springframework.context.ApplicationContext getApplicationContext()> -> _SOURCES_
<org.springframework.aop.aspectj.AspectJExpressionPointcutAdvisor: void setParameterTypes(java.lang.Class[])> -> _SINKS_
<org.springframework.context.support.ResourceBundleMessageSource: java.util.ResourceBundle getResourceBundle(java.lang.String,java.util.Locale)> -> _SOURCES_
<org.springframework.jdbc.core.metadata.TableMetaDataContext: java.lang.String getTableName()> -> _CWE089__SOURCES_
<org.springframework.scripting.support.StandardScriptFactory: java.lang.String getScriptSourceLocator()> -> _SOURCES_
<org.springframework.jms.listener.endpoint.StandardJmsActivationSpecFactory: void setDestinationResolver(org.springframework.jms.support.destination.DestinationResolver)> -> _SINKS_
<org.springframework.http.converter.json.GsonHttpMessageConverter: java.lang.Object readTypeToken(com.google.gson.reflect.TypeToken,org.springframework.http.HttpInputMessage)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockResourceRequest: java.lang.String getETag()> -> _CWE079__SOURCES_
<org.springframework.orm.jpa.vendor.EclipseLinkJpaDialect: org.springframework.jdbc.datasource.ConnectionHandle getJdbcConnection(javax.persistence.EntityManager,boolean)> -> _CWE306__SOURCES__CWE862_
<org.springframework.messaging.simp.stomp.StompHeaders: void set(java.lang.String,java.lang.String)> -> _SINKS_
<org.springframework.messaging.simp.config.AbstractMessageBrokerConfiguration: org.springframework.context.ApplicationContext getApplicationContext()> -> _SOURCES_
<org.springframework.http.client.OkHttpAsyncClientHttpRequest: java.net.URI getURI()> -> _SOURCES_
<org.springframework.transaction.interceptor.TransactionInterceptor: void writeObject(java.io.ObjectOutputStream)> -> _SINKS_
<org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler: org.springframework.messaging.simp.SimpMessageMappingInfo getMatchingMapping(org.springframework.messaging.simp.SimpMessageMappingInfo,org.springframework.messaging.Message)> -> _SOURCES_
<org.springframework.mock.web.MockPageContext: void setAttribute(java.lang.String,java.lang.Object,int)> -> _CWE079__SINKS_
<org.springframework.test.context.support.AbstractGenericContextLoader: org.springframework.context.ConfigurableApplicationContext loadContext(org.springframework.test.context.MergedContextConfiguration)> -> _SOURCES_
<org.springframework.mock.web.MockBodyContent: void print(int)> -> _SINKS_
<org.springframework.cache.ehcache.EhCacheFactoryBean: void setDiskExpiryThreadIntervalSeconds(int)> -> _SINKS_
<org.springframework.messaging.simp.SimpMessageHeaderAccessor: org.springframework.messaging.simp.SimpMessageType getMessageType(java.util.Map)> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanDefinition: int getRole()> -> _SOURCES_
<org.springframework.web.util.UriComponentsBuilder: org.springframework.web.util.UriComponentsBuilder replaceQuery(java.lang.String)> -> _SINKS_
<org.springframework.aop.target.CommonsPool2TargetSource: int getMinIdle()> -> _SOURCES_
<org.springframework.util.ClassUtils: java.lang.String getQualifiedNameForArray(java.lang.Class)> -> _SOURCES_
<org.springframework.security.crypto.codec.Base64: byte[] getAlphabet(int)> -> _SOURCES_
<org.springframework.core.annotation.AnnotationUtils: java.lang.Object getDefaultValue(java.lang.Class,java.lang.String)> -> _SOURCES_
<org.springframework.messaging.simp.stomp.DefaultStompSession: void setMessageConverter(org.springframework.messaging.converter.MessageConverter)> -> _SINKS_
<org.springframework.mock.web.MockServletContext: boolean setInitParameter(java.lang.String,java.lang.String)> -> _SINKS_
<org.springframework.asm.Frame: void execute(int,int,org.springframework.asm.ClassWriter,org.springframework.asm.Item)> -> _SINKS_
<org.springframework.web.util.HierarchicalUriComponents: org.springframework.web.util.HierarchicalUriComponents expandInternal(org.springframework.web.util.UriComponents$UriTemplateVariables)> -> _SINKS_
<org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean: void setPropertyNamingStrategy(com.fasterxml.jackson.databind.PropertyNamingStrategy)> -> _SINKS_
<org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean: void setTimeZone(java.util.TimeZone)> -> _SINKS_
<org.springframework.test.context.support.AbstractTestContextBootstrapper: java.util.Set getContextCustomizers(java.lang.Class,java.util.List)> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMethodMappingNamingStrategy: java.lang.String getName(org.springframework.web.method.HandlerMethod,java.lang.Object)> -> _CWE079__SOURCES__SINKS_
<org.springframework.web.servlet.mvc.method.annotation.SseEmitter: void send(java.lang.Object)> -> _SINKS_
<org.springframework.orm.hibernate5.SessionHolder: org.hibernate.Session getSession()> -> _SOURCES_
<org.springframework.mail.javamail.JavaMailSenderImpl: void setJavaMailProperties(java.util.Properties)> -> _SINKS_
<org.springframework.web.servlet.ResourceServlet: void setContentType(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver: java.lang.Object[] resolveHandlerArguments(java.lang.reflect.Method,java.lang.Object,org.springframework.web.context.request.NativeWebRequest,java.lang.Exception)> -> _SINKS_
<org.springframework.web.servlet.HttpServletBean: org.springframework.core.env.ConfigurableEnvironment createEnvironment()> -> _SOURCES_
<org.springframework.scheduling.concurrent.ForkJoinPoolFactoryBean: void setThreadFactory(java.util.concurrent.ForkJoinPool$ForkJoinWorkerThreadFactory)> -> _SINKS_
<org.springframework.core.type.classreading.SimpleMetadataReader: org.springframework.core.type.ClassMetadata getClassMetadata()> -> _SOURCES_
<org.springframework.beans.propertyeditors.PropertiesEditor: void setAsText(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.view.AbstractCachingViewResolver: int getCacheLimit()> -> _SOURCES_
<org.springframework.web.servlet.support.WebContentGenerator: void setUseExpiresHeader(boolean)> -> _SINKS_
<org.springframework.context.support.GenericGroovyApplicationContext: void load(java.lang.String[])> -> _SOURCES_
<org.springframework.oxm.jibx.JibxMarshaller: void setTargetClass(java.lang.Class)> -> _SINKS_
<org.springframework.jdbc.config.SortedResourcesFactoryBean: java.lang.Class getObjectType()> -> _CWE089__SOURCES_
<org.springframework.web.portlet.util.PortletUtils: java.lang.Object getNativeResponse(javax.portlet.PortletResponse,java.lang.Class)> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler: java.lang.String getSystemLogin()> -> _CWE306__SOURCES_
<org.springframework.aop.target.CommonsPool2TargetSource: void setMinEvictableIdleTimeMillis(long)> -> _SINKS_
<org.springframework.web.servlet.handler.HandlerExceptionResolverComposite: void setExceptionResolvers(java.util.List)> -> _SINKS_
<org.springframework.security.concurrent.DelegatingSecurityContextExecutor: java.util.concurrent.Executor getDelegateExecutor()> -> _SOURCES_
<org.springframework.web.servlet.mvc.multiaction.MultiActionController: org.springframework.web.servlet.ModelAndView handleNoSuchRequestHandlingMethod(org.springframework.web.servlet.mvc.multiaction.NoSuchRequestHandlingMethodException,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)> -> _SINKS_
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: java.lang.String getMessage(java.lang.String,java.lang.Object[],java.util.Locale)> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompHeaderAccessor: java.lang.Integer getContentLength(java.util.Map)> -> _SOURCES_
<org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean: java.util.concurrent.ExecutorService initializeExecutor(java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)> -> _SINKS_
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getGenericFieldType(java.lang.reflect.Field,java.lang.Class,int,int)> -> _SOURCES_
<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource getResource(java.lang.String,java.util.List)> -> _SOURCES_
<org.springframework.validation.BindException: java.lang.String getNestedPath()> -> _SOURCES_
<org.springframework.orm.toplink.LocalSessionFactory: void setSessionClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.security.authentication.RememberMeAuthenticationProvider: void setKey(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy: java.sql.Connection getConnection()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__SOURCES__CWE862_
<org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader: org.springframework.beans.factory.xml.XmlReaderContext getReaderContext()> -> _SOURCES_
<org.springframework.aop.target.CommonsPoolTargetSource: int getMinIdle()> -> _SOURCES_
<org.springframework.context.weaving.DefaultContextLoadTimeWeaver: java.lang.ClassLoader getThrowawayClassLoader()> -> _SOURCES_
<org.springframework.context.support.GenericGroovyApplicationContext: void setMetaClass(groovy.lang.MetaClass)> -> _SINKS_
<org.springframework.web.servlet.resource.CachingResourceResolver: org.springframework.core.io.Resource resolveResourceInternal(javax.servlet.http.HttpServletRequest,java.lang.String,java.util.List,org.springframework.web.servlet.resource.ResourceResolverChain)> -> _SINKS_
<org.springframework.web.servlet.view.jasperreports.AbstractJasperReportsView: javax.sql.DataSource getJdbcDataSource()> -> _SOURCES_
<org.springframework.aop.target.CommonsPoolTargetSource: void setMinEvictableIdleTimeMillis(long)> -> _SINKS_
<org.springframework.web.multipart.commons.CommonsMultipartResolver: void setResolveLazily(boolean)> -> _SINKS_
<org.springframework.transaction.config.TxAdviceBeanDefinitionParser: org.springframework.beans.factory.support.RootBeanDefinition parseAttributeSource(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.test.web.client.match.XpathRequestMatchers: org.springframework.test.web.client.RequestMatcher exists()> -> _SOURCES_
<org.springframework.web.util.HtmlUtils: java.lang.String htmlEscapeHex(java.lang.String)> -> _SANITIZERS__CWE079_
<org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper: void setConvertAttributeToUpperCase(boolean)> -> _SINKS_
<org.springframework.util.DefaultPropertiesPersister: void doLoad(java.util.Properties,java.io.Reader)> -> _SOURCES_
<org.springframework.mock.web.MockMultipartHttpServletRequest: org.springframework.web.multipart.MultipartFile getFile(java.lang.String)> -> _SOURCES_
<org.springframework.scheduling.annotation.AsyncAnnotationAdvisor: void setAsyncAnnotationType(java.lang.Class)> -> _SINKS_
<org.springframework.jdbc.core.namedparam.ParsedSql: int getNamedParameterCount()> -> _CWE089__SOURCES_
<org.springframework.mock.web.MockBodyContent: void println(boolean)> -> _SINKS_
<org.springframework.test.context.support.AnnotationConfigContextLoader: org.springframework.beans.factory.support.BeanDefinitionReader createBeanDefinitionReader(org.springframework.context.support.GenericApplicationContext)> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.RememberMeConfigurer: org.springframework.security.web.authentication.RememberMeServices getRememberMeServices(org.springframework.security.config.'annotation'.web.HttpSecurityBuilder,java.lang.String)> -> _SOURCES_
<org.springframework.beans.factory.support.RootBeanDefinition: java.lang.String getParentName()> -> _SOURCES_
<org.springframework.http.converter.xml.SourceHttpMessageConverter: javax.xml.transform.Source readStAXSource(java.io.InputStream)> -> _SOURCES_
<org.springframework.web.servlet.view.ContentNegotiatingViewResolver: org.springframework.web.servlet.View getBestView(java.util.List,java.util.List,org.springframework.web.context.request.RequestAttributes)> -> _SOURCES_
<org.springframework.jdbc.datasource.lookup.MapDataSourceLookup: javax.sql.DataSource getDataSource(java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.beans.support.PagedListHolder: int getLastElementOnPage()> -> _SOURCES_
<org.springframework.web.servlet.ResourceServlet: void setAllowedResources(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletRequest: void setRequestedSessionIdValid(boolean)> -> _SINKS_
<org.springframework.security.config.http.HttpConfigurationBuilder: org.springframework.beans.factory.support.ManagedMap parseInterceptUrlsForChannelSecurity()> -> _SOURCES_
<org.aopalliance.aop.AspectException: java.lang.Throwable getCause()> -> _SOURCES_
<org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver: void setPreventResponseCaching(boolean)> -> _SINKS_
<org.springframework.security.access.intercept.AbstractSecurityInterceptor: void setAccessDecisionManager(org.springframework.security.access.AccessDecisionManager)> -> _SINKS_
<org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler: org.springframework.messaging.support.MessageHeaderInitializer getHeaderInitializer()> -> _SOURCES_
<org.springframework.cglib.core.TypeUtils: java.lang.String escapeType(java.lang.String)> -> _SANITIZERS_
<org.springframework.aop.aspectj.SimpleAspectInstanceFactory: java.lang.Object getAspectInstance()> -> _SOURCES_
<org.springframework.mock.web.MockPageContext: javax.el.ELContext getELContext()> -> _SOURCES_
<org.springframework.web.util.WebUtils: void setWebAppRootSystemProperty(javax.servlet.ServletContext)> -> _SINKS_
<org.springframework.scheduling.timer.ScheduledTimerTask: void setFixedRate(boolean)> -> _SINKS_
<org.springframework.security.config.authentication.CachingUserDetailsService: org.springframework.security.core.userdetails.UserCache getUserCache()> -> _SOURCES__CWE862_
<org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler: org.springframework.messaging.handler.invocation.InvocableHandlerMethod getExceptionHandlerMethod(org.springframework.messaging.handler.HandlerMethod,java.lang.Exception)> -> _SOURCES_
<org.springframework.web.servlet.view.json.AbstractJackson2View: com.fasterxml.jackson.databind.ObjectMapper getObjectMapper()> -> _SOURCES_
<org.springframework.jdbc.object.SqlQuery: java.util.List execute(int,java.util.Map)> -> _CWE078__CWE089__SINKS_
<org.springframework.web.servlet.tags.UrlTag: void setScope(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.core.metadata.TableMetaDataContext: void setTableName(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.orm.hibernate3.HibernateTemplate: void setQueryCacheRegion(java.lang.String)> -> _SINKS_
<org.springframework.web.util.CookieGenerator: java.lang.String getCookieDomain()> -> _SOURCES_
<org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.ModelAndViewMethodReturnValueHandler: void handleReturnValue(java.lang.Object,org.springframework.core.MethodParameter,org.springframework.web.method.support.ModelAndViewContainer,org.springframework.web.context.request.NativeWebRequest)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletResponse: void setLocale(java.util.Locale)> -> _SINKS__CWE601_
<org.springframework.http.converter.AbstractHttpMessageConverter: org.springframework.http.MediaType getDefaultContentType(java.lang.Object)> -> _SOURCES_
<org.springframework.web.multipart.support.MultipartFilter: void setMultipartResolverBeanName(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.config.ScriptTemplateConfigurerBeanDefinitionParser: java.lang.String getBeanClassName(org.w3c.dom.Element)> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.ViewResolverRegistry: void setApplicationContext(org.springframework.context.ApplicationContext)> -> _SINKS_
<org.springframework.instrument.classloading.websphere.WebSphereClassLoaderAdapter: java.lang.ClassLoader getClassLoader()> -> _SOURCES_
<org.springframework.jms.listener.serversession.ServerSessionMessageListenerContainer: void setMaxMessagesPerTask(int)> -> _SINKS_
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setSuffix(java.lang.String)> -> _SINKS_
<org.springframework.beans.factory.parsing.ReaderContext: org.springframework.beans.factory.parsing.SourceExtractor getSourceExtractor()> -> _SOURCES_
<org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: org.springframework.orm.jpa.JpaDialect getJpaDialect()> -> _SOURCES_
<org.springframework.orm.toplink.support.CommonsLoggingSessionLog904: void log(oracle.toplink.sessions.SessionLogEntry)> -> _SINKS_
<org.springframework.scheduling.aspectj.AbstractAsyncExecutionAspect: java.lang.Object ajc$around$org_springframework_scheduling_aspectj_AbstractAsyncExecutionAspect$1$6c004c3e(org.aspectj.runtime.internal.AroundClosure,org.aspectj.lang.JoinPoint$StaticPart,org.aspectj.lang.JoinPoint)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.RequestBodyAdviceAdapter: java.lang.Object afterBodyRead(java.lang.Object,org.springframework.http.HttpInputMessage,org.springframework.core.MethodParameter,java.lang.reflect.Type,java.lang.Class)> -> _SOURCES__CWE601_
<org.springframework.core.convert.support.ObjectToObjectConverter: java.lang.reflect.Member getValidatedMember(java.lang.Class,java.lang.Class)> -> _SOURCES_
<org.springframework.jms.listener.DefaultMessageListenerContainer: void setIdleTaskExecutionLimit(int)> -> _SINKS_
<org.springframework.web.bind.MethodArgumentNotValidException: org.springframework.validation.BindingResult getBindingResult()> -> _SOURCES_
<org.springframework.security.access.event.AuthorizationFailureEvent: java.util.Collection getConfigAttributes()> -> _SOURCES_
<org.springframework.jms.config.JmsListenerEndpointRegistry: int getPhase()> -> _SOURCES_
<org.springframework.core.convert.support.CollectionToStringConverter: java.util.Set getConvertibleTypes()> -> _SOURCES_
<org.springframework.beans.factory.support.ManagedMap: void setSource(java.lang.Object)> -> _SINKS_
<org.springframework.scheduling.support.ScheduledMethodRunnable: java.lang.reflect.Method getMethod()> -> _SOURCES_
<org.springframework.beans.factory.parsing.Problem: java.lang.String getMessage()> -> _SOURCES_
<org.springframework.orm.ibatis.SqlMapClientTemplate: com.ibatis.sqlmap.client.SqlMapClient getSqlMapClient()> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanDefinition: void setAutowireMode(int)> -> _SINKS_
<org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver: void setMappedHandlerClasses(java.lang.Class[])> -> _SINKS_
<org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor: void setDefaultPersistenceUnitName(java.lang.String)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler: void setTcpClient(org.springframework.messaging.tcp.TcpOperations)> -> _SINKS_
<org.springframework.jca.cci.connection.SingleConnectionFactory: javax.resource.cci.Connection getCloseSuppressingConnectionProxy(javax.resource.cci.Connection)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: java.lang.String getPersistenceUnitName()> -> _SOURCES_
<org.springframework.web.context.support.WebApplicationContextUtils: org.springframework.web.context.WebApplicationContext getRequiredWebApplicationContext(javax.servlet.ServletContext)> -> _SOURCES_
<org.springframework.web.socket.handler.ConcurrentWebSocketSessionDecorator: void setLimitExceeded(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.web.multipart.commons.CommonsMultipartResolver: org.springframework.web.multipart.commons.CommonsFileUploadSupport$MultipartParsingResult parseRequest(javax.servlet.http.HttpServletRequest)> -> _SOURCES__SINKS_
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.CachedIntrospectionResults getCachedIntrospectionResults()> -> _SOURCES_
<org.springframework.transaction.support.AbstractPlatformTransactionManager: int getTransactionSynchronization()> -> _SOURCES_
<org.springframework.web.util.UrlPathHelper: java.lang.String getPathWithinServletMapping(javax.servlet.http.HttpServletRequest)> -> _CWE079__SOURCES_
<org.springframework.web.socket.server.standard.AbstractTyrusRequestUpgradeStrategy: java.lang.String[] getSupportedVersions()> -> _SOURCES_
<org.springframework.test.web.servlet.request.MockMvcRequestBuilders: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder request(org.springframework.http.HttpMethod,java.net.URI)> -> _SOURCES_
<org.springframework.security.config.ldap.LdapUserServiceBeanDefinitionParser: java.lang.String getBeanClassName(org.w3c.dom.Element)> -> _SOURCES__CWE862_
<org.springframework.transaction.support.DelegatingTransactionDefinition: int getPropagationBehavior()> -> _SOURCES_
<org.springframework.cglib.transform.AbstractTransformTask: void setVerbose(boolean)> -> _SINKS_
<org.springframework.scheduling.quartz.CronTriggerFactoryBean: void setMisfireInstructionName(java.lang.String)> -> _SINKS_
<org.springframework.cache.transaction.TransactionAwareCacheDecorator: java.lang.String getName()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setCallableInterceptors(java.util.List)> -> _SINKS_
<org.springframework.core.env.PropertySourcesPropertyResolver: java.lang.Object getProperty(java.lang.String,java.lang.Class,boolean)> -> _SOURCES_
<org.springframework.orm.ObjectOptimisticLockingFailureException: java.lang.String getPersistentClassName()> -> _SOURCES_
<org.springframework.jdbc.core.SingleColumnRowMapper: java.lang.Object getColumnValue(java.sql.ResultSet,int)> -> _CWE089__SOURCES_
<org.springframework.security.access.intercept.aspectj.MethodInvocationAdapter: java.lang.Object[] getArguments()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: void setLang(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.web.servlet.support.RequestContextUtils: org.springframework.web.servlet.LocaleResolver getLocaleResolver(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.scheduling.quartz.JobDetailFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.web.servlet.config.FreeMarkerConfigurerBeanDefinitionParser: java.lang.String getBeanClassName(org.w3c.dom.Element)> -> _SOURCES_
<org.springframework.beans.factory.config.YamlPropertiesFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.beans.factory.NoUniqueBeanDefinitionException: int getNumberOfBeansFound()> -> _SOURCES_
<org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter: org.springframework.http.converter.HttpMessageConverter[] getMessageConverters()> -> _SOURCES_
<org.springframework.web.portlet.context.PortletConfigPropertySource: java.lang.String getProperty(java.lang.String)> -> _SOURCES_
<org.springframework.aop.aspectj.AspectJExpressionPointcut: org.springframework.aop.MethodMatcher getMethodMatcher()> -> _SOURCES_
<org.springframework.web.servlet.i18n.LocaleChangeInterceptor: java.util.Locale parseLocaleValue(java.lang.String)> -> _SOURCES__SINKS_
<org.springframework.jca.cci.object.MappingRecordOperation: java.lang.Object execute(java.lang.Object)> -> _CWE078__SINKS_
<org.springframework.web.method.support.ModelAndViewContainer: void setRedirectModelScenario(boolean)> -> _SINKS_
<org.springframework.orm.hibernate4.HibernateQueryException: java.lang.String getQueryString()> -> _SOURCES_
<org.springframework.messaging.support.MessageBuilder: org.springframework.messaging.support.MessageBuilder setReplyChannel(org.springframework.messaging.MessageChannel)> -> _SINKS_
<org.springframework.scheduling.concurrent.ScheduledExecutorTask: long getDelay()> -> _SOURCES_
<org.springframework.jdbc.datasource.DelegatingDataSource: java.sql.Connection getConnection(java.lang.String,java.lang.String)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__SOURCES_
<org.springframework.expression.spel.ast.PropertyOrFieldReference: void writeProperty(org.springframework.expression.TypedValue,org.springframework.expression.EvaluationContext,java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.transaction.jta.JotmFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.web.servlet.view.tiles2.TilesConfigurer: void setServletContext(javax.servlet.ServletContext)> -> _SINKS_
<org.springframework.web.socket.handler.ConcurrentWebSocketSessionDecorator: long getTimeSinceSendStarted()> -> _SOURCES_
<org.springframework.orm.jpa.persistenceunit.MutablePersistenceUnitInfo: java.lang.ClassLoader getClassLoader()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletRequest: javax.servlet.http.Cookie[] getCookies()> -> _SOURCES_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: org.springframework.jdbc.core.namedparam.ParsedSql getParsedSql(java.lang.String)> -> _CWE089__SOURCES__SINKS_
<org.springframework.aop.aspectj.AbstractAspectJAdvice: int getOrder()> -> _SOURCES_
<org.springframework.remoting.rmi.RmiClientInterceptor: java.rmi.Remote getStub()> -> _SOURCES_
<org.springframework.web.servlet.mvc.condition.PatternsRequestCondition: org.springframework.web.servlet.mvc.condition.PatternsRequestCondition getMatchingCondition(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.security.provisioning.MutableUser: java.lang.String getUsername()> -> _SOURCES__CWE862_
<org.springframework.web.servlet.tags.form.AbstractSingleCheckedElementTag: void setValue(java.lang.Object)> -> _SINKS_
<org.springframework.beans.BeanWrapperImpl: org.springframework.beans.BeanWrapperImpl getBeanWrapperForPropertyPath(java.lang.String)> -> _SOURCES_
<org.springframework.web.context.support.StaticWebApplicationContext: javax.servlet.ServletContext getServletContext()> -> _SOURCES_
<org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader: java.util.Enumeration getResources(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping: java.util.Set getMappingPathPatterns(java.lang.Object)> -> _SOURCES_
<org.springframework.validation.AbstractBindingResult: java.lang.Object getRawFieldValue(java.lang.String)> -> _SOURCES_
<org.springframework.scheduling.backportconcurrent.ThreadPoolTaskExecutor: int getCorePoolSize()> -> _SOURCES_
<org.springframework.orm.hibernate3.support.BlobStringType: java.lang.String getCharacterEncoding()> -> _SOURCES_
<org.springframework.core.enums.LetterCodedLabeledEnum: java.lang.Comparable getCode()> -> _SOURCES_
<org.springframework.messaging.simp.user.UserDestinationMessageHandler: org.springframework.messaging.simp.user.UserDestinationResolver getUserDestinationResolver()> -> _SOURCES__CWE862_
<org.springframework.orm.ibatis.SqlMapClientTemplate: java.util.Map queryForMap(java.lang.String,java.lang.Object,java.lang.String)> -> _SINKS_
<org.springframework.test.web.client.match.XpathRequestMatchers: org.springframework.test.web.client.RequestMatcher string(java.lang.String)> -> _SOURCES_
<org.springframework.jdbc.object.BatchSqlUpdate: int getQueueCount()> -> _CWE089__SOURCES_
<org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: java.util.Map getJpaPropertyMap()> -> _SOURCES_
<org.springframework.web.servlet.mvc.ParameterizableViewController: void setStatusCode(org.springframework.http.HttpStatus)> -> _SINKS_
<org.springframework.jms.support.converter.MappingJackson2MessageConverter: java.lang.Class getSerializationView(java.lang.Object)> -> _SOURCES_
<org.springframework.remoting.jaxws.JaxWsPortClientInterceptor: void setMaintainSession(boolean)> -> _SINKS_
<org.springframework.mail.javamail.MimeMessageHelper: void setPlainTextToMimePart(javax.mail.internet.MimePart,java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.tags.MessageTag: void setArguments(java.lang.Object)> -> _SINKS_
<org.springframework.web.servlet.mvc.multiaction.AbstractUrlMethodNameResolver: java.lang.String getHandlerMethodName(javax.servlet.http.HttpServletRequest)> -> _CWE079__SOURCES_
<org.springframework.orm.hibernate3.LocalSessionFactoryBean: void setCacheableMappingLocations(org.springframework.core.io.Resource[])> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setDeferredResultInterceptors(java.util.List)> -> _SINKS_
<org.springframework.scheduling.quartz.SchedulerFactoryBean: javax.sql.DataSource getConfigTimeNonTransactionalDataSource()> -> _SOURCES_
<org.springframework.web.servlet.view.tiles3.TilesView: void setAlwaysInclude(boolean)> -> _SINKS_
<org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint: java.lang.String getKind()> -> _SOURCES_
<org.springframework.web.socket.client.standard.EndpointConnectionManager: void setWebSocketContainer(javax.websocket.WebSocketContainer)> -> _SINKS_
<org.springframework.orm.hibernate3.HibernateTemplate: java.lang.Object executeWithNativeSession(org.springframework.orm.hibernate3.HibernateCallback)> -> _SINKS_
<org.springframework.orm.jpa.JpaAccessor: void setJpaDialect(org.springframework.orm.jpa.JpaDialect)> -> _SINKS_
<org.springframework.mock.web.portlet.MockBaseURL: void setProperty(java.lang.String,java.lang.String)> -> _SINKS_
<org.springframework.aop.support.AbstractPointcutAdvisor: void setOrder(int)> -> _SINKS_
<org.springframework.orm.hibernate5.HibernateTransactionManager: void setDataSource(javax.sql.DataSource)> -> _CWE089__SINKS_
<org.springframework.jmx.export.assembler.InterfaceBasedMBeanInfoAssembler: boolean includeReadAttribute(java.lang.reflect.Method,java.lang.String)> -> _SOURCES_
<org.springframework.expression.spel.standard.SpelExpression: java.lang.Object getValue()> -> _SOURCES_
<org.springframework.web.servlet.support.RequestContext: java.lang.String getContextUrl(java.lang.String,java.util.Map)> -> _CWE079__SOURCES_
<org.springframework.aop.framework.adapter.AdvisorAdapterRegistrationManager: void setAdvisorAdapterRegistry(org.springframework.aop.framework.adapter.AdvisorAdapterRegistry)> -> _SINKS_
<org.springframework.web.servlet.view.script.ScriptTemplateView: void setEngine(javax.script.ScriptEngine)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletRequest: javax.portlet.WindowState getWindowState()> -> _SOURCES_
<org.springframework.beans.factory.config.ServiceLocatorFactoryBean: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.aop.aspectj.annotation.InstantiationModelAwarePointcutAdvisorImpl: int getDeclarationOrder()> -> _SOURCES_
<org.springframework.web.servlet.view.UrlBasedViewResolver: java.lang.String getContentType()> -> _SOURCES_
<org.springframework.ejb.access.LocalSlsbInvokerInterceptor: java.lang.reflect.Method getCreateMethod(java.lang.Object)> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping: java.util.Set getMappingPathPatterns(org.springframework.web.servlet.mvc.method.RequestMappingInfo)> -> _SOURCES_
<org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver: void setLayoutUrl(java.lang.String)> -> _SINKS_
<org.springframework.remoting.httpinvoker.HttpInvokerClientInterceptor: void setHttpInvokerRequestExecutor(org.springframework.remoting.httpinvoker.HttpInvokerRequestExecutor)> -> _SINKS_
<org.springframework.jdbc.datasource.AbstractDataSource: void setLogWriter(java.io.PrintWriter)> -> _CWE089__SINKS_
<org.springframework.jms.connection.JmsTransactionManager: java.lang.Object getResourceFactory()> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Class getTypeForFactoryBean(java.lang.String,org.springframework.beans.factory.support.RootBeanDefinition)> -> _SOURCES_
<org.springframework.messaging.MessageHeaders: java.lang.Object getErrorChannel()> -> _SOURCES_
<org.springframework.web.socket.client.standard.AnnotatedEndpointConnectionManager: void setTaskExecutor(org.springframework.core.task.TaskExecutor)> -> _SINKS_
<org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean: void setFailOnEmptyBeans(boolean)> -> _SINKS_
<org.springframework.scheduling.commonj.ScheduledTimerListener: commonj.timers.TimerListener getTimerListener()> -> _SOURCES_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: java.sql.Time getTime(java.lang.String,java.util.Calendar)> -> _CWE089__SOURCES_
<org.springframework.beans.factory.CannotLoadBeanClassException: java.lang.String getBeanClassName()> -> _SOURCES_
<org.springframework.web.socket.config.annotation.SockJsServiceRegistration: org.springframework.web.socket.config.'annotation'.SockJsServiceRegistration setTaskScheduler(org.springframework.scheduling.TaskScheduler)> -> _SINKS_
<org.springframework.web.multipart.commons.CommonsFileUploadSupport: void setMaxUploadSize(long)> -> _SOURCES__SINKS_
<org.springframework.orm.hibernate4.HibernateTransactionManager: void setAllowResultAccessAfterCompletion(boolean)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletResponse: void setStatus(int,java.lang.String)> -> _CWE079__SINKS__CWE601_
<org.springframework.web.filter.GenericFilterBean: void setBeanName(java.lang.String)> -> _SINKS_
<org.springframework.security.access.vote.AbstractAclVoter: java.lang.Object getDomainObjectInstance(java.lang.Object)> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateTemplate: void setAllowCreate(boolean)> -> _SINKS_
<org.springframework.core.convert.support.StringToNumberConverterFactory: org.springframework.core.convert.converter.Converter getConverter(java.lang.Class)> -> _SOURCES_
<org.springframework.context.support.GenericGroovyApplicationContext: void load(org.springframework.core.io.Resource[])> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletContext: java.lang.String getMimeType(java.lang.String)> -> _SOURCES_
<org.springframework.web.socket.config.WebSocketMessageBrokerStats: void setStompBrokerRelay(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler)> -> _SINKS_
<org.springframework.web.servlet.support.RequestContext: java.util.Locale getLocale()> -> _SOURCES_
<org.springframework.web.servlet.resource.ResourceUrlProvider: org.springframework.web.util.UrlPathHelper getPathHelper()> -> _SOURCES_
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: java.lang.Object getBean(java.lang.String)> -> _SOURCES_
<org.springframework.jms.connection.CachedMessageProducer: boolean getDisableMessageTimestamp()> -> _SOURCES_
<org.springframework.remoting.caucho.BurlapClientInterceptor: void setOverloadEnabled(boolean)> -> _SOURCES__SINKS_
<org.springframework.web.servlet.view.ResourceBundleViewResolver: org.springframework.web.servlet.View loadView(java.lang.String,java.util.Locale)> -> _SOURCES_
<org.springframework.beans.factory.config.FieldRetrievingFactoryBean: void setTargetField(java.lang.String)> -> _SINKS_
<org.springframework.util.xml.XMLEventStreamWriter: void writeEmptyElement(java.lang.String)> -> _SINKS_
<org.springframework.jms.listener.DefaultMessageListenerContainer: void setMaxConcurrentConsumers(int)> -> _SINKS_
<org.springframework.web.context.support.ServletContextResource: java.lang.String getPathWithinContext()> -> _SOURCES_
<org.springframework.web.servlet.handler.AbstractHandlerMapping: void setCorsProcessor(org.springframework.web.cors.CorsProcessor)> -> _SINKS_
<org.springframework.beans.support.PagedListHolder: void setSort(org.springframework.beans.support.SortDefinition)> -> _SINKS_
<org.springframework.test.web.servlet.result.PrintingResultHandler: void printResponse(org.springframework.mock.web.MockHttpServletResponse)> -> _SINKS_
<org.springframework.beans.factory.support.BeanDefinitionResource: java.lang.String getDescription()> -> _SOURCES_
<org.springframework.jms.listener.serversession.CommonsPoolServerSessionFactory: int getMaxIdle()> -> _SOURCES_
<org.springframework.security.authentication.dao.DaoAuthenticationProvider: org.springframework.security.authentication.encoding.PasswordEncoder getPasswordEncoder()> -> _SOURCES_
<org.springframework.jca.cci.connection.SingleConnectionFactory: void initConnection()> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.ui.context.support.SimpleTheme: org.springframework.context.MessageSource getMessageSource()> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanDefinition: void setBeanClassName(java.lang.String)> -> _SINKS_
<org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler: void sendMessageToSubscribers(java.lang.String,org.springframework.messaging.Message)> -> _SINKS_
<org.springframework.web.servlet.tags.form.AbstractMultiCheckedElementTag: void setElement(java.lang.String)> -> _SINKS_
<org.springframework.expression.spel.ast.SpelNodeImpl: java.lang.Object getValue(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag: java.beans.PropertyEditor getPropertyEditor()> -> _SOURCES_
<org.springframework.mock.web.portlet.ServletWrappingPortletContext: javax.portlet.PortletRequestDispatcher getRequestDispatcher(java.lang.String)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockMimeResponse: void setLocale(java.util.Locale)> -> _SINKS__CWE601_
<org.springframework.security.config.http.RememberMeBeanDefinitionParser: java.lang.String getRememberMeServicesId()> -> _SOURCES_
<org.springframework.context.support.LiveBeansView: java.lang.String getEscapedResourceDescription(org.springframework.beans.factory.config.BeanDefinition)> -> _SOURCES_
<org.springframework.scheduling.backportconcurrent.ThreadPoolTaskExecutor: int getPoolSize()> -> _SOURCES_
<org.springframework.test.web.servlet.DefaultMvcResult: org.springframework.web.servlet.FlashMap getFlashMap()> -> _SOURCES_
<org.springframework.messaging.MessageHeaders: java.lang.Object get(java.lang.Object,java.lang.Class)> -> _SOURCES_
<org.springframework.jmx.export.assembler.AbstractReflectiveMBeanInfoAssembler: javax.management.MBeanParameterInfo[] getOperationParameters(java.lang.reflect.Method,java.lang.String)> -> _SOURCES_
<org.springframework.asm.commons.GeneratorAdapter: void getField(org.springframework.asm.Type,java.lang.String,org.springframework.asm.Type)> -> _SOURCES_
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.String[] getDependentBeans(java.lang.String)> -> _SOURCES_
<org.springframework.aop.framework.ProxyFactoryBean: java.lang.Object getProxy(org.springframework.aop.framework.AopProxy)> -> _SOURCES_
<org.springframework.remoting.support.RemoteInvocation: void setArguments(java.lang.Object[])> -> _SINKS_
<org.springframework.web.portlet.util.PortletUtils: void setSessionAttribute(javax.portlet.PortletRequest,java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.web.socket.WebSocketExtension: java.lang.String getName()> -> _SOURCES_
<org.springframework.http.client.HttpComponentsClientHttpRequestFactory: org.apache.http.client.methods.HttpUriRequest createHttpUriRequest(org.springframework.http.HttpMethod,java.net.URI)> -> _SOURCES_
<org.springframework.http.client.SimpleStreamingClientHttpRequest: java.net.URI getURI()> -> _SOURCES_
<org.springframework.aop.framework.ProxyFactoryBean: void setProxyInterfaces(java.lang.Class[])> -> _SINKS_
<org.springframework.test.context.support.GenericXmlContextLoader: org.springframework.beans.factory.support.BeanDefinitionReader createBeanDefinitionReader(org.springframework.context.support.GenericApplicationContext)> -> _SOURCES_
<org.springframework.web.socket.sockjs.support.AbstractSockJsService: void setDisconnectDelay(long)> -> _CWE306__SINKS_
<org.springframework.security.authentication.AnonymousAuthenticationToken: int getKeyHash()> -> _SOURCES_
<org.springframework.context.annotation.ConfigurationClassPostProcessor: void setEnvironment(org.springframework.core.env.Environment)> -> _SINKS_
<org.springframework.mock.web.MockSessionCookieConfig: void setPath(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletRequest: void setParameter(java.lang.String,java.lang.String)> -> _CWE079__SINKS_
<org.springframework.web.servlet.resource.GzipResourceResolver: java.lang.String resolveUrlPathInternal(java.lang.String,java.util.List,org.springframework.web.servlet.resource.ResourceResolverChain)> -> _CWE079__SINKS_
<org.springframework.messaging.simp.SimpMessageMappingInfo: org.springframework.messaging.simp.SimpMessageMappingInfo getMatchingCondition(org.springframework.messaging.Message)> -> _SOURCES_
<org.springframework.web.servlet.i18n.AbstractLocaleContextResolver: java.util.TimeZone getDefaultTimeZone()> -> _SOURCES_
<org.springframework.transaction.support.ResourceHolderSupport: java.util.Date getDeadline()> -> _SOURCES_
<org.springframework.http.server.ServletServerHttpRequest: java.net.URI getURI()> -> _SOURCES_
<org.springframework.cache.jcache.interceptor.JCacheAspectSupport: org.springframework.cache.jcache.interceptor.JCacheOperationSource getCacheOperationSource()> -> _SOURCES_
<org.springframework.cglib.core.TypeUtils: java.lang.String getPackageName(java.lang.String)> -> _SOURCES_
<org.springframework.web.socket.adapter.standard.StandardWebSocketSession: void setBinaryMessageSizeLimit(int)> -> _SINKS_
<org.springframework.orm.hibernate3.AbstractSessionFactoryBean: org.hibernate.SessionFactory getSessionFactory()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletConfig: java.lang.String getPortletName()> -> _SOURCES_
<org.springframework.jca.cci.core.support.CciDaoSupport: void releaseConnection(javax.resource.cci.Connection)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.context.event.DefaultEventListenerFactory: int getOrder()> -> _SOURCES_
<org.springframework.cache.ehcache.EhCacheCache: org.springframework.cache.Cache$ValueWrapper get(java.lang.Object)> -> _SOURCES_
<org.springframework.mock.web.MockFilterConfig: java.util.Enumeration getInitParameterNames()> -> _SOURCES_
<org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder: org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder setHandlerExceptionResolvers(java.util.List)> -> _SINKS_
<org.springframework.security.config.annotation.web.configurers.ExceptionHandlingConfigurer: org.springframework.security.web.savedrequest.RequestCache getRequestCache(org.springframework.security.config.'annotation'.web.HttpSecurityBuilder)> -> _SOURCES_
<org.springframework.jdbc.core.namedparam.NamedParameterUtils: java.lang.String substituteNamedParameters(java.lang.String,org.springframework.jdbc.core.namedparam.SqlParameterSource)> -> _CWE089__SINKS_
<org.springframework.web.portlet.util.PortletUtils: java.lang.Object getRequiredSessionAttribute(javax.portlet.PortletRequest,java.lang.String,int)> -> _SOURCES_
<org.springframework.orm.hibernate5.HibernateTransactionManager: boolean isPhysicallyConnected(org.hibernate.Session)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE862_
<org.springframework.context.support.ApplicationObjectSupport: void setApplicationContext(org.springframework.context.ApplicationContext)> -> _SINKS_
<org.springframework.cache.guava.GuavaCacheManager: java.util.Collection getCacheNames()> -> _SOURCES_
<org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean: java.lang.String getPersistenceUnitName()> -> _SOURCES_
<org.springframework.context.expression.CachedExpressionEvaluator: org.springframework.core.ParameterNameDiscoverer getParameterNameDiscoverer()> -> _SOURCES_
<org.springframework.remoting.rmi.JndiRmiClientInterceptor: void setRemoteInvocationFactory(org.springframework.remoting.support.RemoteInvocationFactory)> -> _SINKS_
<org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader: void parseBeanDefinitions(org.w3c.dom.Element,org.springframework.beans.factory.xml.BeanDefinitionParserDelegate)> -> _SINKS_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: byte getByte(java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.jca.work.WorkManagerTaskExecutor: void setBlockUntilStarted(boolean)> -> _SINKS_
<org.springframework.web.context.request.async.DeferredResult: java.lang.Long getTimeoutValue()> -> _SOURCES_
<org.springframework.validation.DefaultBindingErrorProcessor: java.lang.Object[] getArgumentsForBindError(java.lang.String,java.lang.String)> -> _SOURCES_
<org.springframework.aop.target.AbstractPoolingTargetSource: int getMaxSize()> -> _SOURCES_
<org.springframework.context.support.AbstractResourceBasedMessageSource: java.util.Set getBasenameSet()> -> _SOURCES_
<org.springframework.jca.cci.core.CciTemplate: void setConnectionFactory(javax.resource.cci.ConnectionFactory)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.http.client.OkHttp3ClientHttpResponse: java.lang.String getStatusText()> -> _SOURCES__CWE601_
<org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean: void setResourceLoader(org.springframework.core.io.ResourceLoader)> -> _SINKS_
<org.springframework.jca.cci.core.CciTemplate: javax.resource.cci.ConnectionSpec getConnectionSpec()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.web.servlet.mvc.condition.ProducesRequestCondition: void <init>(java.lang.String[],java.lang.String[],org.springframework.web.accept.ContentNegotiationManager)> -> _SINKS_
<org.springframework.http.client.support.AsyncHttpAccessor: org.springframework.http.client.AsyncClientHttpRequestFactory getAsyncRequestFactory()> -> _SOURCES_
<org.springframework.http.client.HttpComponentsClientHttpRequestFactory: void setConnectionRequestTimeout(int)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean: void setFeaturesToDisable(java.lang.Object[])> -> _SINKS_
<org.springframework.oxm.jaxb.Jaxb2Marshaller: void setJaxbContextProperties(java.util.Map)> -> _SINKS_
<org.springframework.web.portlet.FrameworkPortlet: void setNamespace(java.lang.String)> -> _SINKS_
<org.springframework.messaging.simp.stomp.DefaultStompSession: long getReceiptTimeLimit()> -> _SOURCES_
<org.springframework.aop.framework.AbstractSingletonProxyFactoryBean: void setPostInterceptors(java.lang.Object[])> -> _SINKS_
<org.springframework.http.server.ServletServerHttpRequest: java.net.InetSocketAddress getLocalAddress()> -> _SOURCES_
<org.springframework.context.support.AbstractApplicationContext: java.lang.String getMessage(java.lang.String,java.lang.Object[],java.lang.String,java.util.Locale)> -> _SOURCES_
<org.springframework.expression.spel.support.StandardTypeLocator: java.util.List getImportPrefixes()> -> _SOURCES_
<org.springframework.orm.hibernate4.HibernateTemplate: int getMaxResults()> -> _SOURCES_
<org.springframework.mock.web.MockBodyContent: void println(java.lang.Object)> -> _SINKS_
<org.springframework.web.method.support.CompositeUriComponentsContributor: void contributeMethodArgument(org.springframework.core.MethodParameter,java.lang.Object,org.springframework.web.util.UriComponentsBuilder,java.util.Map)> -> _SINKS_
<org.springframework.web.portlet.util.PortletUtils: java.lang.String getSubmitParameter(javax.portlet.PortletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer: org.springframework.context.ApplicationContext getApplicationContext()> -> _SOURCES_
<org.springframework.jms.support.converter.MappingJackson2MessageConverter: void setTypeIdPropertyName(java.lang.String)> -> _SINKS_
<org.springframework.web.socket.handler.PerConnectionWebSocketHandler: void afterConnectionEstablished(org.springframework.web.socket.WebSocketSession)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter: java.lang.Object read(java.lang.reflect.Type,java.lang.Class,org.springframework.http.HttpInputMessage)> -> _SOURCES_
<org.springframework.web.socket.WebSocketHttpHeaders: java.util.List get(java.lang.Object)> -> _SOURCES_
<org.springframework.web.servlet.view.json.MappingJackson2JsonView: void setModelKey(java.lang.String)> -> _SINKS_
<org.springframework.aop.target.CommonsPool2TargetSource: int getActiveCount()> -> _SOURCES_
<org.springframework.jdbc.object.RdbmsOperation: void setTypes(int[])> -> _CWE089__SINKS_
<org.springframework.context.i18n.LocaleContextHolder: void setLocale(java.util.Locale)> -> _SINKS_
<org.springframework.web.util.AbstractUriTemplateHandler: void setBaseUrl(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.security.access.expression.method.MethodSecurityExpressionRoot: java.lang.Object getReturnObject()> -> _SOURCES_
<org.springframework.context.annotation.ConfigurationClass: org.springframework.core.type.AnnotationMetadata getMetadata()> -> _SOURCES_
<org.springframework.security.authentication.dao.DaoAuthenticationProvider: void setIncludeDetailsObject(boolean)> -> _SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.scheduling.concurrent.DefaultManagedTaskExecutor: void setJndiTemplate(org.springframework.jndi.JndiTemplate)> -> _SINKS_
<org.springframework.util.CustomizableThreadCreator: void setThreadPriority(int)> -> _SINKS_
<org.springframework.core.convert.support.ObjectToArrayConverter: java.util.Set getConvertibleTypes()> -> _SOURCES_
<org.springframework.web.socket.adapter.standard.StandardWebSocketSession: java.net.InetSocketAddress getLocalAddress()> -> _SOURCES_
<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setResourceRegionHttpMessageConverter(org.springframework.http.converter.ResourceRegionHttpMessageConverter)> -> _SINKS_
<org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor: void setWaitForTasksToCompleteOnShutdown(boolean)> -> _SINKS_
<org.springframework.context.support.ReloadableResourceBundleMessageSource: void setPropertiesPersister(org.springframework.util.PropertiesPersister)> -> _SINKS_
<org.springframework.web.client.RestTemplate: java.util.List getMessageConverters()> -> _SOURCES_
<org.springframework.orm.ibatis.SqlMapClientTemplate: javax.sql.DataSource getDataSource()> -> _SOURCES_
<org.springframework.orm.ibatis.SqlMapClientTemplate: int delete(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.aop.support.StaticMethodMatcherPointcutAdvisor: void setAdvice(org.aopalliance.aop.Advice)> -> _SINKS_
<org.springframework.jdbc.support.nativejdbc.WebSphereNativeJdbcExtractor: boolean isNativeConnectionNecessaryForNativePreparedStatements()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__CWE862_
<org.springframework.orm.hibernate5.LocalSessionFactoryBean: void setCurrentTenantIdentifierResolver(org.hibernate.context.spi.CurrentTenantIdentifierResolver)> -> _SINKS_
<org.springframework.web.context.request.async.TimeoutDeferredResultProcessingInterceptor: boolean handleTimeout(org.springframework.web.context.request.NativeWebRequest,org.springframework.web.context.request.async.DeferredResult)> -> _SINKS_
<org.springframework.jdbc.core.JdbcTemplate: int update(org.springframework.jdbc.core.PreparedStatementCreator,org.springframework.jdbc.support.KeyHolder)> -> _CWE089__SINKS_
<org.springframework.web.context.request.async.WebAsyncManager: org.springframework.web.context.request.async.CallableProcessingInterceptor getCallableInterceptor(java.lang.Object)> -> _SOURCES_
<org.springframework.http.client.OkHttp3AsyncClientHttpRequest: java.net.URI getURI()> -> _SOURCES_
<org.springframework.beans.BeanWrapperImpl: java.lang.Object getRootInstance()> -> _SOURCES_
<org.springframework.beans.factory.config.ConstructorArgumentValues: java.util.List getGenericArgumentValues()> -> _SOURCES_
<org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy: java.sql.Connection getConnection(java.lang.String,java.lang.String)> -> _CWE306__CWE089__SOURCES__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter: void setParameterNameDiscoverer(org.springframework.core.ParameterNameDiscoverer)> -> _SINKS_
<org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean: void setQueueCapacity(int)> -> _SINKS_
<org.springframework.jmx.access.MBeanClientInterceptor: void setServiceUrl(java.lang.String)> -> _SINKS_
<org.springframework.http.client.HttpComponentsStreamingClientHttpRequest: org.springframework.http.HttpMethod getMethod()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver: java.util.List getMessageConverters()> -> _SOURCES_
<org.springframework.beans.factory.groovy.GroovyBeanDefinitionWrapper: void setProperty(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.http.client.SimpleBufferingClientHttpRequest: java.net.URI getURI()> -> _SOURCES_
<org.springframework.orm.toplink.TopLinkTemplate: java.util.List executeFind(org.springframework.orm.toplink.TopLinkCallback)> -> _CWE078__SINKS_
<org.springframework.mock.web.MockHttpServletRequest: void setAsyncSupported(boolean)> -> _SINKS_
<org.springframework.jms.listener.serversession.CommonsPoolServerSessionFactory: org.apache.commons.pool.ObjectPool createObjectPool(org.springframework.jms.listener.serversession.ListenerSessionManager)> -> _SOURCES_
<org.springframework.test.web.servlet.result.PrintingResultHandler: void printCookies(javax.servlet.http.Cookie[])> -> _SINKS_
<org.springframework.scheduling.quartz.SchedulerAccessorBean: void setSchedulerName(java.lang.String)> -> _SINKS_
<org.springframework.scheduling.concurrent.ScheduledExecutorTask: void setRunnable(java.lang.Runnable)> -> _SINKS_
<org.springframework.web.servlet.view.script.ScriptTemplateView: void setSharedEngine(java.lang.Boolean)> -> _SINKS_
<org.springframework.test.web.servlet.result.StatusResultMatchers: org.springframework.test.web.servlet.ResultMatcher isAlreadyReported()> -> _SOURCES__CWE601_
<org.springframework.web.servlet.config.annotation.PathMatchConfigurer: org.springframework.web.servlet.config.'annotation'.PathMatchConfigurer setUseRegisteredSuffixPatternMatch(java.lang.Boolean)> -> _SINKS_
<org.springframework.mock.web.MockServletContext: void setAttribute(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.web.util.UrlPathHelper: java.lang.String decodeAndCleanUriString(javax.servlet.http.HttpServletRequest,java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener: int getOrder()> -> _CWE089__SOURCES_
<org.springframework.security.config.annotation.web.configurers.openid.OpenIDLoginConfigurer: void initDefaultLoginFilter(org.springframework.security.config.'annotation'.web.HttpSecurityBuilder)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.expression.common.CompositeStringExpression: void setValue(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Object)> -> _SINKS_
<org.springframework.security.core.session.SessionInformation: java.lang.Object getPrincipal()> -> _SOURCES_
<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: java.util.List getLocations()> -> _SOURCES_
<org.springframework.beans.factory.support.BeanDefinitionResource: org.springframework.beans.factory.config.BeanDefinition getBeanDefinition()> -> _SOURCES_
<org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder: org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder setControllerAdvice(java.lang.Object[])> -> _SINKS_
<org.springframework.core.annotation.AnnotationUtils: java.lang.'annotation'.Annotation getAnnotation(java.lang.reflect.Method,java.lang.Class)> -> _SOURCES_
<org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean: void setFindModulesViaServiceLoader(boolean)> -> _SINKS_
<org.springframework.beans.ExtendedBeanInfo: java.beans.PropertyDescriptor[] getPropertyDescriptors()> -> _SOURCES_
<org.springframework.objenesis.instantiator.basic.ClassDefinitionUtils: void writeClass(java.lang.String,byte[])> -> _SINKS_
<org.springframework.jdbc.InvalidResultSetAccessException: java.sql.SQLException getSQLException()> -> _CWE089__SOURCES_
<org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder: org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder setMessageConverters(org.springframework.http.converter.HttpMessageConverter[])> -> _SINKS_
<org.springframework.mock.web.portlet.MockMimeResponse: java.lang.String getCharacterEncoding()> -> _SOURCES__CWE601_
<org.springframework.web.cors.CorsConfiguration: void setAllowedHeaders(java.util.List)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompHeaderAccessor: void setMessageId(java.lang.String)> -> _SINKS_
<org.springframework.web.socket.client.WebSocketConnectionManager: org.springframework.web.socket.WebSocketHandler decorateWebSocketHandler(org.springframework.web.socket.WebSocketHandler)> -> _SINKS_
<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: void setResourceHttpMessageConverter(org.springframework.http.converter.ResourceHttpMessageConverter)> -> _SINKS_
<org.springframework.format.datetime.joda.JodaTimeFormatterRegistrar: void setDateTimeFormatter(org.joda.time.format.DateTimeFormatter)> -> _SINKS_
<org.springframework.jdbc.object.RdbmsOperation: void setSql(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.beans.factory.config.YamlProcessor: void setDocumentMatchers(org.springframework.beans.factory.config.YamlProcessor$DocumentMatcher[])> -> _SINKS_
<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder sessionAttr(java.lang.String,java.lang.Object)> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.openid.OpenIDLoginConfigurer: org.springframework.security.web.util.matcher.RequestMatcher createLoginProcessingUrlMatcher(java.lang.String)> -> _CWE306__SOURCES__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.bind.support.WebRequestDataBinder: void bind(org.springframework.web.context.request.WebRequest)> -> _SINKS_
<org.springframework.expression.common.LiteralExpression: java.lang.Object getValue(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Class)> -> _SOURCES_
<org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractorAdapter: java.sql.Connection doGetNativeConnection(java.sql.Connection)> -> _CWE306__CWE089__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.beans.PropertyValuesEditor: void setAsText(java.lang.String)> -> _SINKS_
<org.springframework.beans.factory.support.ManagedProperties: void setMergeEnabled(boolean)> -> _SINKS_
<org.springframework.jdbc.core.namedparam.BeanPropertySqlParameterSource: java.lang.Object getValue(java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.scheduling.commonj.ScheduledTimerListener: void setTimerListener(commonj.timers.TimerListener)> -> _SINKS_
<org.springframework.web.client.MessageBodyClientHttpResponseWrapper: java.io.InputStream getBody()> -> _SOURCES__CWE601_
<org.springframework.http.client.Netty4ClientHttpRequestFactory: org.springframework.http.client.AsyncClientHttpRequest createAsyncRequest(java.net.URI,org.springframework.http.HttpMethod)> -> _SOURCES_
<org.springframework.transaction.support.DefaultTransactionStatus: org.springframework.transaction.SavepointManager getSavepointManager()> -> _SOURCES_
<org.springframework.web.servlet.view.xslt.XsltView: javax.xml.transform.TransformerFactory getTransformerFactory()> -> _SOURCES_
<org.springframework.security.authentication.jaas.JaasAuthenticationProvider: void setLoginConfig(org.springframework.core.io.Resource)> -> _CWE306__SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.http.server.ServletServerHttpRequest: org.springframework.http.HttpHeaders getHeaders()> -> _SOURCES_
<org.springframework.core.env.CommandLineArgs: java.util.List getOptionValues(java.lang.String)> -> _SOURCES_
<org.springframework.oxm.castor.CastorMarshaller: void setEntityResolver(org.xml.sax.EntityResolver)> -> _SINKS_
<org.springframework.security.config.ldap.LdapServerBeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.mock.web.MockServletContext: int getEffectiveMinorVersion()> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory: void setInstantiationStrategy(org.springframework.beans.factory.support.InstantiationStrategy)> -> _SINKS_
<org.springframework.orm.hibernate3.LocalSessionFactoryBean: void setMappingJarLocations(org.springframework.core.io.Resource[])> -> _SINKS_
<org.springframework.oxm.castor.CastorMarshaller: void setMarshalExtendedType(boolean)> -> _SINKS_
<org.springframework.scheduling.quartz.SimpleTriggerFactoryBean: void setStartDelay(long)> -> _SINKS_
<org.springframework.security.authentication.jaas.DefaultJaasAuthenticationProvider: javax.security.auth.login.Configuration getConfiguration()> -> _SOURCES_
<org.springframework.test.web.servlet.MockMvc: void setDefaultRequest(org.springframework.test.web.servlet.RequestBuilder)> -> _SINKS_
<org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite: java.util.List getResolvers()> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateTransactionManager: void setJdbcExceptionTranslator(org.springframework.jdbc.support.SQLExceptionTranslator)> -> _CWE089__SINKS_
<org.springframework.util.xml.StaxSource: javax.xml.stream.XMLEventReader getXMLEventReader()> -> _SOURCES_
<org.springframework.web.bind.ServletRequestUtils: java.lang.String getRequiredStringParameter(javax.servlet.ServletRequest,java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.orm.jpa.support.JpaDaoSupport: void setEntityManager(javax.persistence.EntityManager)> -> _SINKS_
<org.springframework.remoting.rmi.RmiClientInterceptorUtils: boolean isCorbaConnectFailure(java.lang.Throwable)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE862_
<org.springframework.core.ResolvableType: java.lang.reflect.Type getType()> -> _SOURCES_
<org.springframework.web.socket.adapter.AbstractWebSocketSession: java.lang.Object getNativeSession(java.lang.Class)> -> _SOURCES_
<org.springframework.web.servlet.view.RedirectView: void setEncodingScheme(java.lang.String)> -> _SINKS_
<org.springframework.test.util.ReflectionTestUtils: java.lang.Object getField(java.lang.Object,java.lang.String)> -> _SOURCES_
<org.springframework.cache.jcache.interceptor.CacheResolverAdapter: javax.cache.'annotation'.CacheResolver getTarget()> -> _SOURCES_
<org.springframework.jms.listener.AbstractMessageListenerContainer: javax.jms.Destination getDestination()> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.SockJsUrlInfo: java.lang.String getServerId()> -> _SOURCES_
<org.springframework.http.client.SimpleStreamingAsyncClientHttpRequest: java.io.OutputStream getBodyInternal(org.springframework.http.HttpHeaders)> -> _SOURCES_
<org.springframework.messaging.simp.stomp.DefaultStompSession: org.springframework.messaging.simp.stomp.StompSessionHandler getSessionHandler()> -> _SOURCES_
<org.springframework.beans.factory.config.TypedStringValue: void setTargetType(java.lang.Class)> -> _SINKS_
<org.springframework.jms.connection.CachingConnectionFactory: void setCacheProducers(boolean)> -> _SINKS_
<org.springframework.context.support.StaticApplicationContext: org.springframework.context.support.StaticMessageSource getStaticMessageSource()> -> _SOURCES_
<org.springframework.web.util.CookieGenerator: void setCookiePath(java.lang.String)> -> _SINKS_
<org.springframework.messaging.core.AbstractMessagingTemplate: java.lang.Object convertSendAndReceive(java.lang.Object,java.lang.Object,java.util.Map,java.lang.Class)> -> _SINKS_
<org.springframework.context.support.GenericApplicationContext: org.springframework.core.io.Resource getResource(java.lang.String)> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.LogoutConfigurer: java.lang.String getLogoutSuccessUrl()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactoryBean: javax.sql.DataSource getObject()> -> _CWE089__SOURCES_
<org.springframework.http.converter.json.GsonFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.jca.cci.connection.ConnectionSpecConnectionFactoryAdapter: javax.resource.cci.Connection doGetConnection(javax.resource.cci.ConnectionSpec)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder: java.lang.String getMethodRequestMapping(java.lang.reflect.Method)> -> _CWE079__SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: org.springframework.web.servlet.ModelAndView invokeHandlerMethod(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.method.HandlerMethod)> -> _SINKS_
<org.springframework.web.socket.sockjs.support.AbstractSockJsService: void setSockJsClientLibraryUrl(java.lang.String)> -> _SINKS_
<org.springframework.jca.context.SpringContextResourceAdapter: javax.transaction.xa.XAResource[] getXAResources(javax.resource.spi.ActivationSpec[])> -> _SOURCES_
<org.springframework.beans.propertyeditors.CharacterEditor: void setAsText(java.lang.String)> -> _SINKS_
<org.springframework.web.filter.AbstractRequestLoggingFilter: java.lang.String getBeforeMessage(javax.servlet.http.HttpServletRequest)> -> _CWE079__SOURCES_
<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.util.Properties getJaxRpcServiceProperties()> -> _SOURCES_
<org.springframework.security.config.http.AuthenticationConfigBuilder: java.util.List getProviders()> -> _SOURCES_
<org.springframework.web.socket.server.standard.AbstractStandardUpgradeStrategy: javax.websocket.server.ServerContainer getContainer(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.orm.jpa.EntityManagerFactoryAccessor: javax.persistence.EntityManagerFactory getEntityManagerFactory()> -> _SOURCES_
<org.springframework.orm.jdo.support.SpringPersistenceManagerProxyBean: void setPersistenceManagerInterface(java.lang.Class)> -> _SINKS_
<org.springframework.core.convert.Property: java.lang.reflect.Method getReadMethod()> -> _SOURCES_
<org.springframework.context.support.MessageSourceAccessor: java.util.Locale getDefaultLocale()> -> _SOURCES_
<org.springframework.beans.factory.generic.GenericBeanFactoryAccessor: org.springframework.beans.factory.ListableBeanFactory getBeanFactory()> -> _SOURCES_
<org.springframework.format.datetime.joda.LocalDateParser: org.joda.time.LocalDate parse(java.lang.String,java.util.Locale)> -> _SINKS_
<org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag: void setId(java.lang.String)> -> _SINKS_
<org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor: void setPointcut(org.springframework.aop.Pointcut)> -> _SINKS_
<org.springframework.security.access.intercept.MethodInvocationPrivilegeEvaluator: void setSecurityInterceptor(org.springframework.security.access.intercept.AbstractSecurityInterceptor)> -> _SINKS_
<org.springframework.remoting.support.RemoteExporter: void setInterceptors(java.lang.Object[])> -> _SINKS_
<org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.beans.support.PagedListHolder: int getPageSize()> -> _SOURCES_
<org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: void setJpaDialect(org.springframework.orm.jpa.JpaDialect)> -> _SINKS_
<org.springframework.jmx.export.naming.IdentityNamingStrategy: javax.management.ObjectName getObjectName(java.lang.Object,java.lang.String)> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.RememberMeConfigurer: org.springframework.security.core.userdetails.UserDetailsService getUserDetailsService(org.springframework.security.config.'annotation'.web.HttpSecurityBuilder)> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.String[] getAliases(java.lang.String)> -> _SOURCES_
<org.springframework.orm.hibernate5.HibernateTemplate: java.lang.Object get(java.lang.Class,java.io.Serializable,org.hibernate.LockMode)> -> _SOURCES_
<org.springframework.validation.beanvalidation.SpringValidatorAdapter: org.springframework.context.MessageSourceResolvable getResolvableField(java.lang.String,java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.RequestMappingInfo: org.springframework.web.servlet.mvc.condition.RequestMethodsRequestCondition getMethodsCondition()> -> _SOURCES_
<org.springframework.scheduling.quartz.SimpleTriggerFactoryBean: void setJobDetail(org.quartz.JobDetail)> -> _SINKS_
<org.springframework.web.servlet.support.RequestContextUtils: org.springframework.ui.context.ThemeSource getThemeSource(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.web.servlet.support.AbstractFlashMapManager: java.lang.String decodeAndNormalizePath(java.lang.String,javax.servlet.http.HttpServletRequest)> -> _CWE079__SOURCES_
<org.springframework.web.accept.ContentNegotiationManagerFactoryBean: void setDefaultContentTypeStrategy(org.springframework.web.accept.ContentNegotiationStrategy)> -> _SINKS_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: void setGeneratedKeyNames(java.lang.String[])> -> _CWE089__SINKS_
<org.springframework.cache.support.AbstractValueAdaptingCache: java.lang.Object get(java.lang.Object,java.lang.Class)> -> _SOURCES_
<org.springframework.web.servlet.view.AbstractTemplateView: void setExposeSpringMacroHelpers(boolean)> -> _SINKS_
<org.springframework.messaging.support.AbstractMessageChannel: boolean send(org.springframework.messaging.Message,long)> -> _SINKS_
<org.springframework.beans.factory.xml.BeanDefinitionParserDelegate: void parseQualifierElements(org.w3c.dom.Element,org.springframework.beans.factory.support.AbstractBeanDefinition)> -> _SINKS_
<org.springframework.aop.target.HotSwappableTargetSource: java.lang.Object getTarget()> -> _SOURCES_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: java.lang.String getTableName()> -> _CWE089__SOURCES_
<org.springframework.jdbc.core.SqlOutParameter: org.springframework.jdbc.core.SqlReturnType getSqlReturnType()> -> _CWE089__SOURCES_
<org.springframework.util.ResourceUtils: java.net.URL getURL(java.lang.String)> -> _SOURCES_
<org.springframework.web.bind.EscapedErrors: java.lang.String getObjectName()> -> _SOURCES_
<org.springframework.beans.factory.config.AbstractFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.jms.connection.ConnectionFactoryUtils: javax.jms.QueueSession getTransactionalQueueSession(javax.jms.QueueConnectionFactory,javax.jms.QueueConnection,boolean)> -> _SOURCES_
<org.springframework.test.context.MergedContextConfiguration: org.springframework.test.context.MergedContextConfiguration getParent()> -> _SOURCES_
<org.springframework.test.web.client.MockRestServiceServer: org.springframework.test.web.client.ResponseActions expect(org.springframework.test.web.client.RequestMatcher)> -> _SINKS_
<org.springframework.web.servlet.view.XmlViewResolver: void setLocation(org.springframework.core.io.Resource)> -> _SINKS_
<org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: int getLineNumber()> -> _SOURCES_
<org.springframework.jdbc.core.namedparam.ParsedSql: java.util.List getParameterNames()> -> _CWE089__SOURCES_
<org.springframework.web.socket.sockjs.client.SockJsUrlInfo: java.net.URI getSockJsUrl()> -> _SOURCES_
<org.springframework.jdbc.support.nativejdbc.CommonsDbcpNativeJdbcExtractor: java.sql.Statement getNativeStatement(java.sql.Statement)> -> _CWE089__SOURCES_
<org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler: java.util.Set getDirectLookupDestinations(org.springframework.messaging.simp.SimpMessageMappingInfo)> -> _SOURCES_
<org.springframework.beans.PropertyValue: java.lang.Object getConvertedValue()> -> _SOURCES_
<org.springframework.web.servlet.FrameworkServlet: void setPublishContext(boolean)> -> _SINKS_
<org.springframework.web.socket.sockjs.client.SockJsUrlInfo: java.net.URI getInfoUrl()> -> _SOURCES_
<org.springframework.test.web.client.match.MockRestRequestMatchers: org.springframework.test.web.client.RequestMatcher jsonPath(java.lang.String,org.hamcrest.Matcher)> -> _SOURCES_
<org.springframework.metadata.commons.CommonsAttributes: java.util.Collection getAttributes(java.lang.Class)> -> _SOURCES_
<org.springframework.context.support.GenericXmlApplicationContext: void setEnvironment(org.springframework.core.env.ConfigurableEnvironment)> -> _SINKS_
<org.springframework.validation.DataBinder: org.springframework.validation.AbstractPropertyBindingResult getInternalBindingResult()> -> _SOURCES_
<org.springframework.scheduling.quartz.SchedulerFactoryBean: void setSchedulerFactoryClass(java.lang.Class)> -> _SINKS_
<org.springframework.orm.toplink.LocalSessionFactoryBean: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.cglib.core.ClassEmitter: org.springframework.asm.Type getSuperType()> -> _SOURCES_
<org.springframework.web.servlet.mvc.WebContentInterceptor: void postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView)> -> _SINKS_
<org.springframework.aop.framework.AbstractSingletonProxyFactoryBean: void setProxyClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.jdbc.datasource.init.DataSourceInitializer: void setDatabaseCleaner(org.springframework.jdbc.datasource.init.DatabasePopulator)> -> _CWE089__SINKS_
<org.springframework.aop.config.AspectComponentDefinition: org.springframework.beans.factory.config.BeanReference[] getBeanReferences()> -> _SOURCES_
<org.springframework.jmx.access.MBeanProxyFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser: java.lang.String getBeanClassName(org.w3c.dom.Element)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockMimeResponse: void setBufferSize(int)> -> _SINKS__CWE601_
<org.springframework.cache.ehcache.EhCacheFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.util.xml.DomUtils: java.lang.String getChildElementValueByTagName(org.w3c.dom.Element,java.lang.String)> -> _SOURCES_
<org.springframework.orm.hibernate4.LocalSessionFactoryBean: void setConfigLocation(org.springframework.core.io.Resource)> -> _SINKS_
<org.springframework.context.support.AbstractApplicationContext: java.lang.Object getBean(java.lang.String,java.lang.Object[])> -> _SOURCES_
<org.springframework.instrument.classloading.tomcat.TomcatLoadTimeWeaver: java.lang.ClassLoader getInstrumentableClassLoader()> -> _SOURCES_
<org.springframework.jdbc.object.SqlUpdate: int update(long,long)> -> _CWE089__SINKS_
<org.springframework.cglib.core.TinyBitSet: void set(int)> -> _SINKS_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.util.concurrent.ListenableFuture getForEntity(java.lang.String,java.lang.Class,java.util.Map)> -> _SOURCES__SINKS_
<org.springframework.scheduling.annotation.AbstractAsyncConfiguration: void setImportMetadata(org.springframework.core.type.AnnotationMetadata)> -> _SINKS_
<org.springframework.mail.javamail.JavaMailSenderImpl: java.lang.String getUsername()> -> _SOURCES_
<org.springframework.web.servlet.support.JstlUtils: org.springframework.context.MessageSource getJstlAwareMessageSource(javax.servlet.ServletContext,org.springframework.context.MessageSource)> -> _SOURCES_
<org.springframework.web.socket.sockjs.support.AbstractSockJsService: void handleRequest(org.springframework.http.server.ServerHttpRequest,org.springframework.http.server.ServerHttpResponse,java.lang.String,org.springframework.web.socket.WebSocketHandler)> -> _SINKS_
<org.springframework.messaging.handler.annotation.support.HeaderMethodArgumentResolver: java.lang.Object getNativeHeaderValue(org.springframework.messaging.Message,java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser: org.springframework.beans.factory.support.ManagedList getMessageConverters(org.w3c.dom.Element,java.lang.Object,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.jdbc.support.SQLErrorCodesFactory: org.springframework.jdbc.support.SQLErrorCodes getErrorCodes(java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.web.util.UriComponentsBuilder: org.springframework.web.util.UriComponentsBuilder replacePath(java.lang.String)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompHeaders: void setId(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.core.metadata.TableMetaDataContext: void setAccessTableParameterMetaData(boolean)> -> _CWE089__SINKS_
<org.springframework.test.web.client.AbstractRequestExpectationManager: java.util.List getRequests()> -> _SOURCES_
<org.springframework.scheduling.quartz.SchedulerAccessorBean: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.jms.connection.CachedMessageProducer: void send(javax.jms.Message)> -> _SINKS_
<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypeComparator getTypeComparator()> -> _SOURCES_
<org.springframework.http.client.support.HttpAccessor: org.springframework.http.client.ClientHttpRequest createRequest(java.net.URI,org.springframework.http.HttpMethod)> -> _SOURCES_
<org.springframework.orm.toplink.support.CommonsLoggingSessionLog904: void setSeparator(java.lang.String)> -> _SINKS_
<org.springframework.jms.listener.serversession.AbstractPoolingServerSessionFactory: org.springframework.core.task.TaskExecutor getTaskExecutor()> -> _SOURCES_
<org.springframework.test.web.client.AbstractRequestExpectationManager: java.lang.String getRequestDetails()> -> _SOURCES_
<org.springframework.cglib.core.TypeUtils: org.springframework.asm.Type getComponentType(org.springframework.asm.Type)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletConfig: void addContainerRuntimeOption(java.lang.String,java.lang.String[])> -> _SINKS_
<org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager: org.springframework.instrument.classloading.LoadTimeWeaver getLoadTimeWeaver()> -> _SOURCES_
<org.springframework.core.Constants: int getSize()> -> _SOURCES_
<org.springframework.core.task.support.ConcurrentExecutorAdapter: void execute(java.lang.Runnable)> -> _CWE078__SINKS_
<org.springframework.scheduling.concurrent.ForkJoinPoolFactoryBean: void setParallelism(int)> -> _SINKS_
<org.springframework.web.servlet.mvc.AbstractUrlViewController: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)> -> _SINKS_
<org.springframework.security.authentication.rcp.RemoteAuthenticationProvider: void setRemoteAuthenticationManager(org.springframework.security.authentication.rcp.RemoteAuthenticationManager)> -> _CWE306__SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.transaction.jta.WebSphereUowTransactionManager: void setUowManager(com.ibm.wsspi.uow.UOWManager)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletResponse: java.lang.String getHeader(java.lang.String)> -> _CWE079__SOURCES__CWE601_
<org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean: void setAllowCoreThreadTimeOut(boolean)> -> _SINKS_
<org.springframework.http.converter.AbstractHttpMessageConverter: java.nio.charset.Charset getDefaultCharset()> -> _SOURCES_
<org.springframework.expression.spel.ast.OpAnd: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.transaction.jta.WebSphereTransactionManagerFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.web.servlet.view.tiles3.TilesConfigurer: void setCheckRefresh(boolean)> -> _SINKS_
<org.springframework.expression.spel.ast.TypeCode: java.lang.Class getType()> -> _SOURCES_
<org.springframework.scheduling.quartz.SimpleTriggerFactoryBean: void setRepeatInterval(long)> -> _SINKS_
<org.springframework.transaction.config.JtaTransactionManagerBeanDefinitionParser: java.lang.String getBeanClassName(org.w3c.dom.Element)> -> _SOURCES_
<org.springframework.aop.config.SimpleBeanFactoryAwareAspectInstanceFactory: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.jdbc.core.JdbcTemplate: void setQueryTimeout(int)> -> _CWE089__SINKS_
<org.springframework.jdbc.core.JdbcTemplate: java.lang.String getSql(java.lang.Object)> -> _CWE089__SOURCES_
<org.springframework.jca.cci.connection.CciLocalTransactionManager: void setConnectionFactory(javax.resource.cci.ConnectionFactory)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.orm.toplink.TopLinkTransactionManager: java.sql.Connection getJdbcConnection(oracle.toplink.sessions.Session)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.web.bind.MissingPathVariableException: org.springframework.core.MethodParameter getParameter()> -> _SOURCES_
<org.springframework.web.context.request.SessionScope: java.lang.String getConversationId()> -> _SOURCES_
<org.springframework.web.servlet.tags.NestedPathTag: java.lang.String getPath()> -> _SOURCES_
<org.springframework.messaging.handler.HandlerMethod: java.lang.reflect.Method getMethod()> -> _SOURCES_
<org.springframework.context.annotation.CommonAnnotationBeanPostProcessor: java.lang.Object getResource(org.springframework.context.'annotation'.CommonAnnotationBeanPostProcessor$LookupElement,java.lang.String)> -> _SOURCES_
<org.springframework.web.socket.handler.AbstractWebSocketHandler: void afterConnectionEstablished(org.springframework.web.socket.WebSocketSession)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder: org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder setScriptEncoding(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.messaging.support.MessageHeaderAccessor: java.lang.Object getReplyChannel()> -> _SOURCES_
<org.springframework.http.converter.BufferedImageHttpMessageConverter: void write(java.lang.Object,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)> -> _SINKS_
<org.springframework.web.bind.annotation.support.HandlerMethodInvoker: java.lang.String getRequiredParameterName(org.springframework.core.MethodParameter)> -> _SOURCES_
<org.springframework.jdbc.support.SQLErrorCodes: java.lang.String[] getInvalidResultSetAccessCodes()> -> _CWE089__SOURCES_
<org.springframework.jdbc.core.simple.SimpleJdbcTemplate: int[] doExecuteBatchUpdate(java.lang.String,java.util.List,int[])> -> _CWE089__SINKS_
<org.springframework.http.client.SimpleClientHttpRequestFactory: void setOutputStreaming(boolean)> -> _SINKS_
<org.springframework.jms.listener.adapter.MessageListenerAdapter: org.springframework.jms.support.destination.DestinationResolver getDestinationResolver()> -> _SOURCES_
<org.springframework.jdbc.object.SqlQuery: java.util.List execute()> -> _CWE078__CWE089__SINKS_
<org.springframework.web.servlet.view.AbstractUrlBasedView: void setUrl(java.lang.String)> -> _SINKS_
<org.springframework.test.web.client.match.XpathRequestMatchers: org.springframework.test.web.client.RequestMatcher number(java.lang.Double)> -> _SOURCES_
<org.springframework.scheduling.quartz.SchedulerAccessor: void setResourceLoader(org.springframework.core.io.ResourceLoader)> -> _SOURCES__SINKS_
<org.springframework.beans.factory.support.PropertiesBeanDefinitionReader: java.lang.String getDefaultParentBean()> -> _SOURCES_
<org.springframework.core.annotation.AnnotatedElementUtils: org.springframework.util.MultiValueMap getAllAnnotationAttributes(java.lang.reflect.AnnotatedElement,java.lang.String)> -> _SOURCES_
<org.springframework.orm.ObjectRetrievalFailureException: java.lang.Object getIdentifier()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: void setRemoteAddr(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.beans.propertyeditors.PropertiesEditor: void setValue(java.lang.Object)> -> _SINKS_
<org.springframework.http.converter.json.GsonHttpMessageConverter: java.lang.Object readInternal(java.lang.Class,org.springframework.http.HttpInputMessage)> -> _SOURCES_
<org.springframework.web.servlet.resource.ResourceUrlProvider: org.springframework.web.util.UrlPathHelper getUrlPathHelper()> -> _SOURCES_
<org.springframework.beans.propertyeditors.URIEditor: java.lang.String getAsText()> -> _SOURCES_
<org.springframework.beans.factory.xml.AbstractBeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES__SINKS_
<org.springframework.jca.cci.core.support.CommAreaRecord: void setRecordShortDescription(java.lang.String)> -> _SINKS_
<org.springframework.remoting.jaxws.JaxWsPortClientInterceptor: void setPortName(java.lang.String)> -> _SINKS_
<org.springframework.web.portlet.multipart.DefaultMultipartActionRequest: java.util.Enumeration getParameterNames()> -> _SOURCES_
<org.springframework.cglib.beans.BulkBeanException: int getIndex()> -> _SOURCES_
<org.springframework.jmx.export.naming.MetadataNamingStrategy: void setDefaultDomain(java.lang.String)> -> _SINKS_
<org.springframework.security.authentication.jaas.JaasGrantedAuthority: java.security.Principal getPrincipal()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.RequestMappingInfo: org.springframework.web.servlet.mvc.method.RequestMappingInfo getMatchingCondition(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor: java.util.List getProducibleMediaTypes(javax.servlet.http.HttpServletRequest,java.lang.Class)> -> _SOURCES_
<org.springframework.jdbc.core.metadata.PostgresTableMetaDataProvider: java.lang.String getSimpleQueryForGetGeneratedKey(java.lang.String,java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.test.context.support.MergedTestPropertySources: java.lang.String[] getProperties()> -> _SOURCES_
<org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor: void preHandle(org.springframework.web.context.request.WebRequest)> -> _SINKS_
<org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver: org.springframework.web.servlet.ModelAndView resolveResponseStatus(org.springframework.web.bind.'annotation'.ResponseStatus,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)> -> _SINKS__CWE601_
<org.springframework.ejb.support.AbstractEnterpriseBean: void setBeanFactoryLocatorKey(java.lang.String)> -> _SINKS_
<org.springframework.beans.support.RefreshablePagedListHolder: org.springframework.beans.support.PagedListSourceProvider getSourceProvider()> -> _SOURCES_
<org.springframework.core.env.AbstractPropertyResolver: org.springframework.core.convert.support.ConfigurableConversionService getConversionService()> -> _SOURCES_
<org.springframework.jms.listener.endpoint.JmsMessageEndpointManager: void setMessageListener(javax.jms.MessageListener)> -> _SINKS_
<org.springframework.jms.core.JmsTemplate: java.lang.Object execute(java.lang.String,org.springframework.jms.core.ProducerCallback)> -> _CWE078__SINKS_
<org.springframework.http.client.support.HttpAccessor: org.springframework.http.client.ClientHttpRequestFactory getRequestFactory()> -> _SOURCES_
<org.springframework.mock.web.MockPageContext: void setAttribute(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.beans.support.PagedListHolder: void setPage(int)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.SessionAttributeMethodArgumentResolver: java.lang.Object resolveName(java.lang.String,org.springframework.core.MethodParameter,org.springframework.web.context.request.NativeWebRequest)> -> _SINKS_
<org.springframework.remoting.httpinvoker.AbstractHttpInvokerRequestExecutor: void setContentType(java.lang.String)> -> _SINKS_
<org.springframework.beans.BeanMetadataAttributeAccessor: org.springframework.beans.BeanMetadataAttribute getMetadataAttribute(java.lang.String)> -> _SOURCES_
<org.springframework.test.context.junit4.SpringJUnit4ClassRunner: long getSpringTimeout(org.junit.runners.model.FrameworkMethod)> -> _SOURCES_
<org.springframework.core.task.support.TaskExecutorAdapter: void execute(java.lang.Runnable)> -> _SINKS_
<org.springframework.web.bind.EscapedErrors: java.lang.Object getFieldValue(java.lang.String)> -> _SOURCES_
<org.springframework.jca.cci.connection.ConnectionFactoryUtils: boolean isConnectionTransactional(javax.resource.cci.Connection,javax.resource.cci.ConnectionFactory)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.tags.form.InputTag: java.lang.String getType()> -> _SOURCES_
<org.springframework.core.io.FileSystemResource: java.net.URI getURI()> -> _SOURCES_
<org.springframework.asm.Attribute: org.springframework.asm.Label[] getLabels()> -> _SOURCES_
<org.springframework.jdbc.datasource.IsolationLevelDataSourceAdapter: java.lang.Boolean getCurrentReadOnlyFlag()> -> _CWE089__SOURCES_
<org.springframework.remoting.caucho.HessianClientInterceptor: void setUsername(java.lang.String)> -> _SINKS_
<org.springframework.test.web.servlet.request.MockMvcRequestBuilders: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder request(org.springframework.http.HttpMethod,java.lang.String,java.lang.Object[])> -> _SOURCES_
<org.springframework.core.MethodParameter: int getParameterIndex()> -> _SOURCES_
<org.springframework.jca.endpoint.GenericMessageEndpointManager: javax.resource.spi.ResourceAdapter getResourceAdapter()> -> _SOURCES_
<org.springframework.core.io.FileSystemResource: java.net.URL getURL()> -> _SOURCES_
<org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser: org.springframework.beans.factory.support.ManagedList getArgumentResolvers(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.test.util.XpathExpectationsHelper: void assertNodeCount(byte[],java.lang.String,org.hamcrest.Matcher)> -> _SINKS_
<org.springframework.jmx.export.metadata.ManagedOperationParameter: void setIndex(int)> -> _SINKS_
<org.springframework.web.multipart.commons.CommonsFileUploadSupport: void setMaxInMemorySize(int)> -> _SINKS_
<org.springframework.cglib.core.ClassEmitter: org.springframework.cglib.core.ClassEmitter$FieldInfo getFieldInfo(java.lang.String)> -> _SOURCES_
<org.springframework.scheduling.concurrent.ScheduledExecutorFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.jdbc.core.metadata.TableParameterMetaData: java.lang.String getParameterName()> -> _CWE089__SOURCES_
<org.springframework.test.context.support.AbstractTestContextBootstrapper: java.util.Set getDefaultTestExecutionListenerClasses()> -> _SOURCES_
<org.springframework.scripting.support.ScriptFactoryPostProcessor: void setDefaultRefreshCheckDelay(long)> -> _SINKS_
<org.springframework.orm.hibernate3.HibernateTransactionManager: void setPrepareConnection(boolean)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.validation.AbstractErrors: org.springframework.validation.FieldError getFieldError(java.lang.String)> -> _SOURCES_
<org.springframework.cglib.proxy.LazyLoaderGenerator: org.springframework.cglib.core.Signature loadMethod(int)> -> _SOURCES_
<org.springframework.orm.jdo.LocalPersistenceManagerFactoryBean: void setJdoPropertyMap(java.util.Map)> -> _SINKS_
<org.springframework.remoting.caucho.BurlapClientInterceptor: java.lang.Object createBurlapProxy(com.caucho.burlap.client.BurlapProxyFactory)> -> _SOURCES_
<org.springframework.web.jsf.FacesContextUtils: java.lang.Object getSessionMutex(javax.faces.context.FacesContext)> -> _SOURCES_
<org.springframework.messaging.core.AbstractMessagingTemplate: java.lang.Object convertSendAndReceive(java.lang.Object,java.lang.Class)> -> _SINKS_
<org.springframework.jms.listener.endpoint.JmsActivationSpecConfig: java.lang.String getDestinationName()> -> _SOURCES_
<org.springframework.messaging.simp.SimpMessageTypeMessageCondition: org.springframework.messaging.simp.SimpMessageTypeMessageCondition getMatchingCondition(org.springframework.messaging.Message)> -> _SOURCES_
<org.springframework.beans.support.ArgumentConvertingMethodInvoker: void setTypeConverter(org.springframework.beans.TypeConverter)> -> _SINKS_
<org.springframework.orm.jdo.JdoTemplate: void setAllowCreate(boolean)> -> _SINKS_
<org.springframework.web.socket.server.standard.AbstractStandardUpgradeStrategy: javax.servlet.http.HttpServletResponse getHttpServletResponse(org.springframework.http.server.ServerHttpResponse)> -> _SOURCES_
<org.springframework.remoting.rmi.RmiServiceExporter: java.rmi.registry.Registry getRegistry(int,java.rmi.server.RMIClientSocketFactory,java.rmi.server.RMIServerSocketFactory)> -> _SOURCES_
<org.springframework.jms.listener.serversession.ServerSessionMessageListenerContainer: void executeListenerSession(javax.jms.Session)> -> _SINKS_
<org.springframework.test.web.client.DefaultRequestExpectation: org.springframework.test.web.client.ResponseCreator getResponseCreator()> -> _SOURCES_
<org.springframework.scripting.bsh.BshScriptFactory: java.lang.Class getScriptedObjectType(org.springframework.scripting.ScriptSource)> -> _SOURCES_
<org.springframework.oxm.config.JibxMarshallerBeanDefinitionParser: java.lang.String getBeanClassName(org.w3c.dom.Element)> -> _SOURCES_
<org.springframework.mail.javamail.SmartMimeMessage: java.lang.String getDefaultEncoding()> -> _SOURCES_
<org.springframework.web.servlet.view.document.AbstractJExcelView: void setUrl(java.lang.String)> -> _SINKS_
<org.springframework.test.context.support.DefaultTestContextBootstrapper: java.lang.Class getDefaultContextLoaderClass(java.lang.Class)> -> _SOURCES_
<org.springframework.remoting.jaxws.SimpleJaxWsServiceExporter: void setBaseAddress(java.lang.String)> -> _SINKS_
<org.springframework.beans.propertyeditors.InputStreamEditor: java.lang.String getAsText()> -> _SOURCES_
<org.springframework.cglib.proxy.Enhancer: void getMethods(java.lang.Class,java.lang.Class[],java.util.List,java.util.List,java.util.Set)> -> _SOURCES_
<org.springframework.jdbc.support.SQLErrorCodes: void setTransientDataAccessResourceCodes(java.lang.String[])> -> _CWE089__SINKS_
<org.springframework.http.client.Netty4ClientHttpRequestFactory: io.netty.handler.ssl.SslContext getDefaultClientSslContext()> -> _SOURCES_
<org.springframework.jdbc.core.JdbcTemplate: java.lang.Object query(org.springframework.jdbc.core.PreparedStatementCreator,org.springframework.jdbc.core.PreparedStatementSetter,org.springframework.jdbc.core.ResultSetExtractor)> -> _CWE089__SINKS_
<org.springframework.validation.AbstractErrors: java.util.List getAllErrors()> -> _SOURCES_
<org.springframework.web.socket.sockjs.client.XhrClientSockJsSession: void sendInternal(org.springframework.web.socket.TextMessage)> -> _SINKS_
<org.springframework.web.context.request.async.WebAsyncUtils: org.springframework.web.context.request.async.WebAsyncManager getAsyncManager(org.springframework.web.context.request.WebRequest)> -> _SOURCES_
<org.springframework.context.annotation.MBeanExportConfiguration: void setEnvironment(org.springframework.core.env.Environment)> -> _SINKS_
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(java.lang.String)> -> _SOURCES_
<org.springframework.web.portlet.util.PortletUtils: java.io.File getTempDir(javax.portlet.PortletContext)> -> _SOURCES_
<org.springframework.scheduling.backportconcurrent.ScheduledExecutorTask: void setPeriod(long)> -> _SINKS_
<org.springframework.beans.CachedIntrospectionResults: boolean isClassLoaderAccepted(java.lang.ClassLoader)> -> _SOURCES_
<org.springframework.security.config.http.LogoutBeanDefinitionParser: org.springframework.beans.factory.support.ManagedList getLogoutHandlers()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.remoting.jaxws.LocalJaxWsServiceFactory: java.lang.String getServiceName()> -> _SOURCES_
<org.springframework.web.method.HandlerMethod: java.lang.'annotation'.Annotation getMethodAnnotation(java.lang.Class)> -> _SOURCES_
<org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseConfigurerFactory: org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseConfigurer getConfigurer(org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType)> -> _CWE089__SOURCES_
<org.springframework.web.servlet.view.ContentNegotiatingViewResolver: org.springframework.web.accept.ContentNegotiationManager getContentNegotiationManager()> -> _SOURCES_
<org.springframework.cache.caffeine.CaffeineCacheManager: void setAllowNullValues(boolean)> -> _SINKS_
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: java.lang.Class getType(java.lang.String)> -> _SOURCES_
<org.springframework.util.MethodInvoker: java.lang.Class getTargetClass()> -> _SOURCES_
<org.springframework.jdbc.core.metadata.TableMetaDataContext: java.lang.String getSimulationQueryForGetGeneratedKey(java.lang.String,java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.jms.config.AbstractJmsListenerContainerFactory: void setDestinationResolver(org.springframework.jms.support.destination.DestinationResolver)> -> _SINKS_
<org.springframework.test.web.servlet.setup.StubWebApplicationContext: java.lang.String[] getBeanNamesForType(java.lang.Class,boolean,boolean)> -> _SOURCES_
<org.springframework.web.portlet.context.PortletRequestAttributes: javax.portlet.PortletSession getSession(boolean)> -> _SOURCES_
<org.springframework.web.portlet.bind.PortletRequestUtils: long[] getRequiredLongParameters(javax.portlet.PortletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean: org.springframework.cache.concurrent.ConcurrentMapCache getObject()> -> _SOURCES_
<org.springframework.jdbc.datasource.AbstractDriverBasedDataSource: void setPassword(java.lang.String)> -> _CWE089__SINKS_
<org.springframework.messaging.simp.stomp.StompHeaders: java.lang.String getReceipt()> -> _SOURCES_
<org.springframework.jms.annotation.JmsListenerAnnotationBeanPostProcessor: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.jms.remoting.JmsInvokerClientInterceptor: void setQueue(javax.jms.Queue)> -> _SINKS_
<org.springframework.remoting.rmi.RmiRegistryFactoryBean: void setServerSocketFactory(java.rmi.server.RMIServerSocketFactory)> -> _SINKS_
<org.springframework.http.HttpHeaders: java.util.List getVary()> -> _SOURCES_
<org.springframework.scheduling.config.ScheduledTaskRegistrar: void setTriggerTasks(java.util.Map)> -> _SINKS_
<org.springframework.jmx.export.metadata.ManagedAttribute: void setPersistPolicy(java.lang.String)> -> _SINKS_
<org.springframework.jms.config.MethodJmsListenerEndpoint: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: void setSystemPropertiesModeName(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletRequest: java.util.Locale getLocale()> -> _SOURCES_
<org.springframework.aop.config.SimpleBeanFactoryAwareAspectInstanceFactory: java.lang.Object getAspectInstance()> -> _SOURCES_
<org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor: void prepareConnection(java.net.HttpURLConnection,int)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.core.io.AbstractFileResolvingResource: void customizeConnection(java.net.HttpURLConnection)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.view.script.ScriptTemplateConfigurer: java.lang.String getResourceLoaderPath()> -> _SOURCES_
<org.springframework.web.socket.config.WebSocketMessageBrokerStats: void setInboundChannelExecutor(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor)> -> _SINKS_
<org.springframework.core.NestedRuntimeException: java.lang.String getMessage()> -> _CWE078__SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: void setPreferredLocales(java.util.List)> -> _SINKS_
<org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter: java.lang.Class getEntityManagerInterface()> -> _SOURCES_
<org.springframework.scheduling.quartz.LocalDataSourceJobStore: void closeConnection(java.sql.Connection)> -> _CWE306__AUTHENTICATIONS_TO_LOW__CWE862_
<org.springframework.security.config.annotation.authentication.configurers.provisioning.JdbcUserDetailsManagerConfigurer: org.springframework.jdbc.datasource.init.DataSourceInitializer getDataSourceInit()> -> _CWE089__SOURCES__CWE862_
<org.springframework.jca.endpoint.GenericMessageEndpointManager: void setAutoStartup(boolean)> -> _SINKS_
<org.springframework.jdbc.IncorrectResultSetColumnCountException: int getExpectedCount()> -> _CWE089__SOURCES_
<org.springframework.jdbc.support.incrementer.AbstractDataFieldMaxValueIncrementer: java.lang.String getIncrementerName()> -> _CWE089__SOURCES_
<org.springframework.oxm.castor.CastorMarshaller: void setTargetClass(java.lang.Class)> -> _SINKS_
<org.springframework.jmx.support.WebSphereMBeanServerFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.jdbc.support.lob.AbstractLobHandler: java.io.InputStream getBlobAsBinaryStream(java.sql.ResultSet,java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.beans.propertyeditors.TimeZoneEditor: java.lang.String getAsText()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: org.springframework.web.servlet.mvc.method.'annotation'.ServletInvocableHandlerMethod createInvocableHandlerMethod(org.springframework.web.method.HandlerMethod)> -> _SINKS_
<org.springframework.core.io.VfsUtils: long getSize(java.lang.Object)> -> _SOURCES_
<org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter: org.springframework.orm.jpa.JpaDialect getJpaDialect()> -> _SOURCES_
<org.springframework.web.servlet.resource.WebJarsResourceResolver: java.lang.String resolveUrlPathInternal(java.lang.String,java.util.List,org.springframework.web.servlet.resource.ResourceResolverChain)> -> _CWE079__SINKS_
<org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter: void handleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)> -> _SINKS_
<org.springframework.orm.jpa.JpaTransactionManager: void setDataSource(javax.sql.DataSource)> -> _SINKS_
<org.springframework.remoting.rmi.RmiRegistryFactoryBean: void setAlwaysCreate(boolean)> -> _SINKS_
<org.springframework.mail.javamail.MimeMessageHelper: void setFileTypeMap(javax.activation.FileTypeMap)> -> _SINKS_
<org.springframework.format.datetime.DateFormatter: java.text.DateFormat getDateFormat(java.util.Locale)> -> _SOURCES_
<org.springframework.aop.support.AbstractExpressionPointcut: java.lang.String getLocation()> -> _SOURCES_
<org.springframework.mock.web.MockJspWriter: void print(char[])> -> _SINKS_
<org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: void setPersistenceUnitName(java.lang.String)> -> _SINKS_
<org.springframework.jms.listener.DefaultMessageListenerContainer102: javax.jms.Session getSession(org.springframework.jms.connection.JmsResourceHolder)> -> _SOURCES_
<org.springframework.http.converter.json.MappingJacksonValue: void setJsonpFunction(java.lang.String)> -> _SINKS_
<org.springframework.scheduling.annotation.AsyncAnnotationAdvisor: void setTaskExecutor(java.util.concurrent.Executor)> -> _SINKS_
<org.springframework.web.servlet.view.jasperreports.JasperReportsViewResolver: void setSubReportUrls(java.util.Properties)> -> _SINKS_
<org.springframework.orm.hibernate4.support.OpenSessionInViewInterceptor: void setSessionFactory(org.hibernate.SessionFactory)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletRequest: java.lang.String getPathTranslated()> -> _CWE079__SOURCES_
<org.springframework.format.support.FormattingConversionServiceFactoryBean: void setEmbeddedValueResolver(org.springframework.util.StringValueResolver)> -> _SINKS_
<org.springframework.aop.aspectj.annotation.SimpleMetadataAwareAspectInstanceFactory: org.springframework.aop.aspectj.'annotation'.AspectMetadata getAspectMetadata()> -> _SOURCES_
<org.springframework.oxm.xmlbeans.XmlBeansMarshaller: void setXmlOptions(org.apache.xmlbeans.XmlOptions)> -> _SINKS_
<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor: int getOrder()> -> _SOURCES_
<org.springframework.jca.cci.core.CciTemplate: java.lang.Object doExecute(javax.resource.cci.InteractionSpec,javax.resource.cci.Record,javax.resource.cci.Record,org.springframework.jca.cci.core.RecordExtractor)> -> _CWE078__SINKS_
<org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider: void setMessageSource(org.springframework.context.MessageSource)> -> _SINKS__CWE862_
<org.springframework.web.servlet.config.annotation.UrlBasedViewResolverRegistration: org.springframework.web.servlet.view.UrlBasedViewResolver getViewResolver()> -> _SOURCES_
<org.springframework.util.FileCopyUtils: void copy(java.lang.String,java.io.Writer)> -> _SINKS_
<org.springframework.mock.web.portlet.MockStateAwareResponse: java.util.Iterator getEventNames()> -> _SOURCES__CWE601_
<org.springframework.web.method.support.ModelAndViewContainer: void setStatus(org.springframework.http.HttpStatus)> -> _SINKS_
<org.springframework.web.socket.BinaryMessage: int getPayloadLength()> -> _SOURCES_
<org.springframework.web.context.support.AbstractRefreshableWebApplicationContext: org.springframework.ui.context.Theme getTheme(java.lang.String)> -> _SOURCES_
<org.springframework.orm.jdo.JdoTransactionManager: void setAutodetectDataSource(boolean)> -> _SINKS_
<org.springframework.beans.PropertyValue: org.springframework.beans.PropertyValue getOriginalPropertyValue()> -> _SOURCES_
<org.springframework.web.servlet.config.AnnotationDrivenBeanDefinitionParser: java.util.Properties getDefaultMediaTypes()> -> _SOURCES_
<org.springframework.http.HttpHeaders: long getFirstDate(java.lang.String,boolean)> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletResponse: void setWriterAccessAllowed(boolean)> -> _SINKS__CWE601_
<org.springframework.core.convert.ConverterNotFoundException: org.springframework.core.convert.TypeDescriptor getTargetType()> -> _SOURCES_
<org.springframework.jms.support.converter.MappingJackson2MessageConverter: void setTargetType(org.springframework.jms.support.converter.MessageType)> -> _SINKS_
<org.springframework.web.util.Log4jConfigServlet: java.lang.String getServletInfo()> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.handler.WebSocketTransportHandler: org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession createSession(java.lang.String,org.springframework.web.socket.WebSocketHandler,java.util.Map)> -> _SINKS_
<org.springframework.web.socket.handler.WebSocketHandlerDecorator: void handleTransportError(org.springframework.web.socket.WebSocketSession,java.lang.Throwable)> -> _SINKS_
<org.springframework.util.DigestUtils: java.security.MessageDigest getDigest(java.lang.String)> -> _SOURCES_
<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder contentType(org.springframework.http.MediaType)> -> _SOURCES_
<org.springframework.web.cors.UrlBasedCorsConfigurationSource: void setCorsConfigurations(java.util.Map)> -> _SINKS_
<org.springframework.jmx.export.metadata.ManagedNotification: void setName(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: java.lang.String getOnkeydown()> -> _CWE079__SOURCES_
<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: org.springframework.core.convert.ConversionService getConversionService()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortalContext: void setProperty(java.lang.String,java.lang.String)> -> _SINKS_
<org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite: org.springframework.web.method.support.HandlerMethodReturnValueHandler getReturnValueHandler(org.springframework.core.MethodParameter)> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.handler.SockJsWebSocketHandler: void handleTransportError(org.springframework.web.socket.WebSocketSession,java.lang.Throwable)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletRequest: java.util.Enumeration getAttributeNames()> -> _SOURCES_
<org.springframework.beans.propertyeditors.URLEditor: java.lang.String getAsText()> -> _SOURCES_
<org.springframework.context.annotation.AnnotatedBeanDefinitionReader: void setEnvironment(org.springframework.core.env.Environment)> -> _SINKS_
<org.springframework.validation.DataBinder: void setBindingErrorProcessor(org.springframework.validation.BindingErrorProcessor)> -> _SINKS_
<org.springframework.web.cors.CorsConfiguration: java.util.List getExposedHeaders()> -> _SOURCES_
<org.springframework.remoting.jaxws.JaxWsPortClientInterceptor: java.lang.Class getServiceInterface()> -> _SOURCES_
<org.springframework.web.servlet.handler.AbstractUrlHandlerMapping: void setRootHandler(java.lang.Object)> -> _SINKS_
<org.springframework.validation.BindException: java.lang.Object getRawFieldValue(java.lang.String)> -> _SOURCES_
<org.springframework.beans.factory.BeanCreationException: void printStackTrace(java.io.PrintStream)> -> _SINKS_
<org.springframework.aop.interceptor.CustomizableTraceInterceptor: java.lang.Object invokeUnderTrace(org.aopalliance.intercept.MethodInvocation,org.apache.commons.logging.Log)> -> _SINKS_
<org.springframework.beans.factory.config.DependencyDescriptor: java.lang.Class getDependencyType()> -> _SOURCES_
<org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor: void setAdviceBeanName(java.lang.String)> -> _SINKS_
<org.springframework.web.util.CookieGenerator: java.lang.String getCookiePath()> -> _SOURCES_
<org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.core.enums.AbstractGenericLabeledEnum: java.lang.String getLabel()> -> _SOURCES_
<org.springframework.web.servlet.DispatcherServlet: java.lang.Object getDefaultStrategy(org.springframework.context.ApplicationContext,java.lang.Class)> -> _SOURCES_
<org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer: java.lang.String getResourceLoaderPath()> -> _SOURCES_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: short getShort(int)> -> _CWE089__SOURCES_
<org.springframework.orm.hibernate5.HibernateTemplate: java.lang.Object executeWithNativeSession(org.springframework.orm.hibernate5.HibernateCallback)> -> _SINKS_
<org.springframework.jms.core.JmsTemplate: void convertAndSend(javax.jms.Destination,java.lang.Object,org.springframework.jms.core.MessagePostProcessor)> -> _SINKS_
<org.springframework.web.servlet.tags.form.FormTag: java.lang.String getName()> -> _SOURCES_
<org.springframework.http.client.HttpComponentsAsyncClientHttpRequest: org.springframework.http.HttpMethod getMethod()> -> _SOURCES_
<org.springframework.web.socket.config.annotation.WebMvcStompEndpointRegistry: void setUrlPathHelper(org.springframework.web.util.UrlPathHelper)> -> _SINKS_
<org.springframework.orm.hibernate3.support.AbstractLobType: java.lang.Object replace(java.lang.Object,java.lang.Object,java.lang.Object)> -> _SINKS_
<org.springframework.mock.web.MockHttpServletRequest: int getIntHeader(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.security.config.http.AuthenticationConfigBuilder: void createOpenIDLoginFilter(org.springframework.beans.factory.config.BeanReference,org.springframework.beans.factory.config.BeanReference)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.security.access.expression.SecurityExpressionRoot: org.springframework.security.core.Authentication getAuthentication()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES_
<org.springframework.beans.factory.xml.XmlBeanDefinitionReader: int loadBeanDefinitions(org.xml.sax.InputSource)> -> _SOURCES_
<org.springframework.jms.remoting.JmsInvokerClientInterceptor: void setConnectionFactory(javax.jms.ConnectionFactory)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.jdbc.core.simple.AbstractJdbcCall: java.util.Set getInParameterNames()> -> _CWE089__SOURCES_
<org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler: java.util.Map getHandlerMethods()> -> _SOURCES_
<org.springframework.scheduling.concurrent.ConcurrentTaskScheduler: void setScheduledExecutor(java.util.concurrent.ScheduledExecutorService)> -> _SINKS_
<org.springframework.cache.jcache.interceptor.AnnotationJCacheOperationSource: org.springframework.cache.interceptor.CacheResolver getCacheResolver(javax.cache.'annotation'.CacheResolverFactory,javax.cache.'annotation'.CacheMethodDetails)> -> _SOURCES_
<org.springframework.core.annotation.AnnotationAttributes: java.lang.'annotation'.Annotation getAnnotation(java.lang.String,java.lang.Class)> -> _SOURCES_
<org.springframework.aop.support.NameMatchMethodPointcut: void setMappedNames(java.lang.String[])> -> _SINKS_
<org.springframework.web.servlet.tags.form.RadioButtonTag: java.lang.String getInputType()> -> _SOURCES_
<org.springframework.web.portlet.mvc.PortletWrappingController: void setPortletName(java.lang.String)> -> _SINKS_
<org.springframework.messaging.simp.annotation.support.SendToMethodReturnValueHandler: java.lang.String[] getTargetDestinations(java.lang.'annotation'.Annotation,org.springframework.messaging.Message,java.lang.String)> -> _SOURCES_
<org.springframework.core.annotation.AbstractAliasAwareAnnotationAttributeExtractor: java.lang.Object getAttributeValue(java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.cache.support.NoOpCacheManager: org.springframework.cache.Cache getCache(java.lang.String)> -> _SOURCES_
<org.springframework.remoting.rmi.RemoteInvocationSerializingExporter: java.io.ObjectInputStream createObjectInputStream(java.io.InputStream)> -> _SOURCES_
<org.springframework.objenesis.instantiator.android.AndroidSerializationInstantiator: java.lang.reflect.Method getNewInstanceMethod()> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler: void setSystemLogin(java.lang.String)> -> _CWE306__SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: int update(java.lang.String,java.util.Map)> -> _CWE089__SINKS_
<org.springframework.web.servlet.mvc.WebContentInterceptor: void setPathMatcher(org.springframework.util.PathMatcher)> -> _SINKS_
<org.springframework.web.servlet.view.tiles2.TilesConfigurer: void setPreparerFactoryClass(java.lang.Class)> -> _SINKS_
<org.springframework.web.accept.ParameterContentNegotiationStrategy: org.springframework.http.MediaType handleNoMatch(org.springframework.web.context.request.NativeWebRequest,java.lang.String)> -> _SINKS_
<org.springframework.http.converter.xml.MarshallingHttpMessageConverter: void setUnmarshaller(org.springframework.oxm.Unmarshaller)> -> _SINKS_
<org.springframework.mock.web.MockJspWriter: void print(double)> -> _SINKS_
<org.springframework.aop.framework.autoproxy.ProxyCreationContext: void setCurrentProxiedBeanName(java.lang.String)> -> _SINKS_
<org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter: void setApplicationContext(org.springframework.context.ApplicationContext)> -> _SINKS_
<org.springframework.orm.hibernate4.support.HibernateDaoSupport: void setHibernateTemplate(org.springframework.orm.hibernate4.HibernateTemplate)> -> _SINKS_
<org.springframework.jdbc.support.lob.TemporaryLobCreator: void setClobAsAsciiStream(java.sql.PreparedStatement,int,java.io.InputStream,int)> -> _CWE089__SINKS_
<org.springframework.validation.AbstractErrors: int getGlobalErrorCount()> -> _SOURCES_
<org.springframework.remoting.jaxrpc.ServletEndpointSupport: javax.servlet.ServletContext getServletContext()> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompClientSupport: long[] getDefaultHeartbeat()> -> _SOURCES_
<org.springframework.web.method.support.HandlerMethodArgumentResolverComposite: java.lang.Object resolveArgument(org.springframework.core.MethodParameter,org.springframework.web.method.support.ModelAndViewContainer,org.springframework.web.context.request.NativeWebRequest,org.springframework.web.bind.support.WebDataBinderFactory)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: org.springframework.web.accept.ContentNegotiationManager getContentNegotiationManager()> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanDefinition: void setRole(int)> -> _SINKS_
<org.springframework.jms.listener.serversession.SimpleServerSessionFactory: void setTaskExecutor(org.springframework.core.task.TaskExecutor)> -> _SINKS_
<org.springframework.web.socket.handler.WebSocketHandlerDecorator: void handleMessage(org.springframework.web.socket.WebSocketSession,org.springframework.web.socket.WebSocketMessage)> -> _SINKS_
<org.springframework.web.servlet.mvc.multiaction.MultiActionController: org.springframework.web.servlet.mvc.multiaction.MethodNameResolver getMethodNameResolver()> -> _SOURCES_
<org.springframework.web.socket.config.annotation.WebMvcStompEndpointRegistry: void setOrder(int)> -> _SINKS_
<org.springframework.web.servlet.view.jasperreports.AbstractJasperReportsSingleFormatView: void renderReportUsingOutputStream(net.sf.jasperreports.engine.JRExporter,net.sf.jasperreports.engine.JasperPrint,javax.servlet.http.HttpServletResponse)> -> _SINKS_
<org.springframework.core.io.FileSystemResourceLoader: org.springframework.core.io.Resource getResourceByPath(java.lang.String)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletPreferences: void setValue(java.lang.String,java.lang.String)> -> _CWE079__SINKS_
<org.springframework.web.servlet.tags.form.AbstractHtmlElementTag: void setDir(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.web.context.request.SessionScope: java.lang.Object get(java.lang.String,org.springframework.beans.factory.ObjectFactory)> -> _SOURCES_
<org.springframework.web.portlet.context.PortletContextPropertySource: java.lang.String[] getPropertyNames()> -> _SOURCES_
<org.springframework.aop.aspectj.annotation.LazySingletonAspectInstanceFactoryDecorator: java.lang.Object getAspectInstance()> -> _SOURCES_
<org.springframework.jms.support.JmsAccessor: javax.jms.Connection createConnection()> -> _CWE306__SOURCES__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.aop.config.MethodLocatingFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.messaging.core.AbstractMessageSendingTemplate: void setMessageConverter(org.springframework.messaging.converter.MessageConverter)> -> _SINKS_
<org.springframework.util.MimeType: java.lang.String getSubtype()> -> _SOURCES_
<org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory: void setConversionService(org.springframework.core.convert.ConversionService)> -> _SINKS_
<org.springframework.scripting.jruby.JRubyScriptFactory: java.lang.Class[] getScriptInterfaces()> -> _SOURCES_
<org.springframework.core.convert.support.DefaultConversionService: org.springframework.core.convert.ConversionService getSharedInstance()> -> _SOURCES_
<org.springframework.http.converter.FormHttpMessageConverter: java.util.List getSupportedMediaTypes()> -> _SOURCES_
<org.springframework.web.method.HandlerMethod: java.lang.String getShortLogMessage()> -> _SOURCES_
<org.springframework.aop.framework.Cglib2AopProxy: net.sf.cglib.proxy.Callback[] getCallbacks(java.lang.Class)> -> _SOURCES_
<org.springframework.beans.BeanMetadataAttributeAccessor: void setSource(java.lang.Object)> -> _SINKS_
<org.springframework.web.portlet.context.PortletRequestAttributes: java.lang.Object getSessionMutex()> -> _SOURCES_
<org.springframework.expression.spel.ast.Selection: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.beans.factory.support.AbstractBeanDefinition: org.springframework.beans.factory.config.BeanDefinition getOriginatingBeanDefinition()> -> _SOURCES_
<org.springframework.jdbc.core.namedparam.ParsedSql: int[] getParameterIndexes(int)> -> _CWE089__SOURCES_
<org.springframework.core.env.AbstractEnvironment: java.lang.Object getRequiredProperty(java.lang.String,java.lang.Class)> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler: org.springframework.http.ResponseEntity handleHttpMessageNotWritable(org.springframework.http.converter.HttpMessageNotWritableException,org.springframework.http.HttpHeaders,org.springframework.http.HttpStatus,org.springframework.web.context.request.WebRequest)> -> _SINKS__CWE601_
<org.springframework.http.converter.json.GsonFactoryBean: void setDisableHtmlEscaping(boolean)> -> _SINKS_
<org.springframework.validation.AbstractBindingResult: void setMessageCodesResolver(org.springframework.validation.MessageCodesResolver)> -> _SINKS_
<org.springframework.cglib.core.CodeEmitter: void getstatic(org.springframework.asm.Type,java.lang.String,org.springframework.asm.Type)> -> _SOURCES_
<org.springframework.test.web.servlet.DefaultMvcResult: org.springframework.web.servlet.ModelAndView getModelAndView()> -> _SOURCES_
<org.springframework.web.util.HtmlCharacterEntityDecoder: boolean processNamedReference()> -> _CWE079__SOURCES_
<org.springframework.jms.listener.serversession.ServerSessionMessageListenerContainer102: javax.jms.ConnectionConsumer createConsumer(javax.jms.Connection,javax.jms.Destination,javax.jms.ServerSessionPool)> -> _SOURCES_
<org.springframework.cglib.reflect.FastMember: java.lang.String getName()> -> _SOURCES_
<org.springframework.web.servlet.view.AbstractTemplateViewResolver: void setExposeSessionAttributes(boolean)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletRequest: void setPortletMode(javax.portlet.PortletMode)> -> _SINKS_
<org.springframework.aop.framework.ProxyFactoryBean: void setInterceptorNames(java.lang.String[])> -> _SINKS_
<org.springframework.cache.jcache.interceptor.DefaultJCacheOperationSource: java.lang.Object getBean(java.lang.Class)> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: java.util.Enumeration getLocales()> -> _SOURCES_
<org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor: void setClassFilter(org.springframework.aop.ClassFilter)> -> _SINKS_
<org.springframework.oxm.support.SaxResourceUtils: java.lang.String getSystemId(org.springframework.core.io.Resource)> -> _SOURCES_
<org.springframework.core.OverridingClassLoader: java.lang.Class loadClassForOverriding(java.lang.String)> -> _SOURCES_
<org.springframework.mock.web.MockServletContext: java.util.Map getServletRegistrations()> -> _SOURCES_
<org.springframework.orm.jdo.JdoTransactionManager: void setJdoDialect(org.springframework.orm.jdo.JdoDialect)> -> _SINKS_
<org.springframework.asm.Type: org.springframework.asm.Type getType(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.HandlerExecutionChain: org.springframework.web.servlet.HandlerInterceptor[] getInterceptors()> -> _SOURCES_
<org.springframework.jdbc.core.CallableStatementCreatorFactory: void setResultSetType(int)> -> _CWE089__SINKS_
<org.springframework.web.portlet.DispatcherPortlet: javax.portlet.ActionRequest checkMultipart(javax.portlet.ActionRequest)> -> _SOURCES_
<org.springframework.core.io.PathResource: java.lang.String getDescription()> -> _SOURCES_
<org.springframework.core.type.classreading.SimpleMetadataReaderFactory: org.springframework.core.type.classreading.MetadataReader getMetadataReader(org.springframework.core.io.Resource)> -> _SOURCES_
<org.springframework.web.servlet.mvc.AbstractUrlViewController: void setRemoveSemicolonContent(boolean)> -> _SINKS_
<org.springframework.web.servlet.support.RequestContext: java.lang.String getMessage(java.lang.String,java.util.List)> -> _CWE079__SOURCES_
<org.springframework.orm.jpa.support.SharedEntityManagerBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.web.context.support.ServletContextAttributeFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter: javax.persistence.spi.PersistenceProvider getPersistenceProvider()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.ButtonTag: int writeTagContent(org.springframework.web.servlet.tags.form.TagWriter)> -> _SINKS_
<org.springframework.web.method.support.HandlerMethodArgumentResolverComposite: java.util.List getResolvers()> -> _SOURCES_
<org.springframework.jms.connection.UserCredentialsConnectionFactoryAdapter: javax.jms.QueueConnection createQueueConnection(java.lang.String,java.lang.String)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter: java.lang.Object readInternal(java.lang.Class,org.springframework.http.HttpInputMessage)> -> _SOURCES_
<org.springframework.format.datetime.standard.Jsr310DateTimeFormatAnnotationFormatterFactory: org.springframework.format.Printer getPrinter(java.lang.'annotation'.Annotation,java.lang.Class)> -> _SOURCES_
<org.springframework.beans.MutablePropertyValues: org.springframework.beans.PropertyValue[] getPropertyValues()> -> _SOURCES_
<org.springframework.messaging.MessageHeaders: java.lang.Object get(java.lang.Object)> -> _SOURCES_
<org.springframework.beans.PropertyValue: java.lang.Object getValue()> -> _SOURCES_
<org.springframework.http.converter.AbstractHttpMessageConverter: java.lang.Long getContentLength(java.lang.Object,org.springframework.http.MediaType)> -> _SOURCES_
<org.springframework.transaction.interceptor.TransactionProxyFactoryBean: void setTransactionAttributeSource(org.springframework.transaction.interceptor.TransactionAttributeSource)> -> _SINKS_
<org.springframework.web.servlet.support.RequestContext: java.lang.String getMessage(java.lang.String,java.lang.Object[],boolean)> -> _SOURCES_
<org.springframework.web.servlet.DispatcherServlet: void setDetectAllHandlerExceptionResolvers(boolean)> -> _SINKS_
<org.springframework.cache.interceptor.CacheableOperation: java.lang.String getUnless()> -> _SOURCES_
<org.springframework.beans.factory.support.DefaultSingletonBeanRegistry: java.lang.String[] getDependenciesForBean(java.lang.String)> -> _SOURCES_
<org.springframework.http.client.OkHttp3ClientHttpRequest: org.springframework.http.HttpMethod getMethod()> -> _SOURCES_
<org.springframework.web.servlet.handler.SimpleServletPostProcessor: void setUseSharedServletConfig(boolean)> -> _SINKS_
<org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler: java.lang.String getLookupDestination(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.BeanTypeNotPresentCondition: org.springframework.context.'annotation'.ConfigurationCondition$ConfigurationPhase getConfigurationPhase()> -> _SOURCES_
<org.springframework.http.server.ServletServerHttpRequest: java.io.InputStream getBody()> -> _SOURCES_
<org.springframework.mock.web.MockSessionCookieConfig: int getMaxAge()> -> _SOURCES_
<org.springframework.web.servlet.view.document.AbstractXlsxView: org.apache.poi.ss.usermodel.Workbook createWorkbook(java.util.Map,javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.beans.factory.config.CommonsLogFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.mock.web.MockMultipartFile: long getSize()> -> _SOURCES_
<org.springframework.web.context.request.async.WebAsyncTask: org.springframework.web.context.request.async.CallableProcessingInterceptor getInterceptor()> -> _SOURCES_
<org.springframework.oxm.xmlbeans.XmlBeansMarshaller: java.lang.Object unmarshalXmlStreamReader(javax.xml.stream.XMLStreamReader)> -> _SOURCES_
<org.springframework.util.ClassUtils: java.lang.Class getUserClass(java.lang.Class)> -> _SOURCES_
<org.springframework.scheduling.concurrent.DefaultManagedAwareThreadFactory: void setJndiName(java.lang.String)> -> _SINKS_
<org.springframework.web.context.request.FacesRequestAttributes: javax.faces.context.ExternalContext getExternalContext()> -> _SOURCES_
<org.springframework.web.context.support.GroovyWebApplicationContext: void initBeanDefinitionReader(org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader)> -> _SOURCES_
<org.springframework.jmx.export.metadata.ManagedOperationParameter: java.lang.String getName()> -> _SOURCES_
<org.springframework.beans.factory.config.YamlMapFactoryBean: java.util.Map getObject()> -> _SOURCES_
<org.springframework.jms.core.JmsTemplate: void setPubSubNoLocal(boolean)> -> _SINKS_
<org.springframework.http.client.BufferingClientHttpResponseWrapper: org.springframework.http.HttpHeaders getHeaders()> -> _SOURCES__CWE601_
<org.springframework.aop.support.DefaultIntroductionAdvisor: org.springframework.aop.ClassFilter getClassFilter()> -> _SOURCES_
<org.springframework.web.servlet.support.WebContentGenerator: java.util.Collection getVaryRequestHeadersToAdd(javax.servlet.http.HttpServletResponse)> -> _SOURCES_
<org.springframework.context.annotation.ClassPathBeanDefinitionScanner: org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()> -> _SOURCES_
<org.springframework.context.support.ConversionServiceFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.beans.factory.config.PropertyPlaceholderConfigurer: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.context.support.AbstractApplicationContext: java.lang.String[] getBeanNamesForType(java.lang.Class,boolean,boolean)> -> _SOURCES_
<org.springframework.messaging.MessageHeaders: java.lang.Long getTimestamp()> -> _SOURCES_
<org.springframework.remoting.rmi.JndiRmiClientInterceptor: boolean isConnectFailure(org.omg.CORBA.SystemException)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE862_
<org.springframework.aop.aspectj.AspectJExpressionPointcutAdvisor: void setExpression(java.lang.String)> -> _SINKS_
<org.springframework.test.context.support.AbstractTestContextBootstrapper: java.util.List getTestExecutionListeners()> -> _SOURCES_
<org.springframework.scheduling.quartz.SchedulerAccessor: void setGlobalJobListeners(org.quartz.JobListener[])> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletResponse: java.lang.String getProperty(java.lang.String)> -> _SOURCES__CWE601_
<org.springframework.http.client.SimpleBufferingAsyncClientHttpRequest: org.springframework.util.concurrent.ListenableFuture executeInternal(org.springframework.http.HttpHeaders,byte[])> -> _SINKS_
<org.springframework.core.GenericCollectionTypeResolver: java.lang.Class getMapKeyType(java.lang.Class)> -> _SOURCES_
<org.springframework.http.client.SimpleStreamingClientHttpRequest: org.springframework.http.client.ClientHttpResponse executeInternal(org.springframework.http.HttpHeaders)> -> _SINKS_
<org.springframework.transaction.event.TransactionalEventListenerFactory: void setOrder(int)> -> _SINKS_
<org.springframework.web.context.request.async.DeferredResultInterceptorChain: void triggerAfterCompletion(org.springframework.web.context.request.NativeWebRequest,org.springframework.web.context.request.async.DeferredResult)> -> _SINKS_
<org.springframework.util.ConcurrentReferenceHashMap: org.springframework.util.ConcurrentReferenceHashMap$Segment getSegmentForHash(int)> -> _SOURCES_
<org.springframework.remoting.support.SimpleHttpServerFactoryBean: void setTaskExecutor(org.springframework.core.task.TaskExecutor)> -> _SINKS_
<org.springframework.scheduling.quartz.JobDetailBean: void setApplicationContextJobDataKey(java.lang.String)> -> _SINKS_
<org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter: javax.persistence.spi.PersistenceProvider getPersistenceProvider()> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateTemplate: java.lang.Object load(java.lang.String,java.io.Serializable,org.hibernate.LockMode)> -> _SOURCES__SINKS_
<org.springframework.orm.hibernate5.LocalSessionFactoryBean: void setEntityTypeFilters(org.springframework.core.type.filter.TypeFilter[])> -> _SINKS_
<org.springframework.web.servlet.view.document.AbstractXlsView: boolean generatesDownloadContent()> -> _SOURCES_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: org.springframework.jdbc.core.JdbcTemplate getJdbcTemplate()> -> _CWE089__SOURCES_
<org.springframework.http.converter.AbstractGenericHttpMessageConverter: void writeInternal(java.lang.Object,org.springframework.http.HttpOutputMessage)> -> _SINKS_
<org.springframework.util.concurrent.FutureAdapter: java.lang.Object get(long,java.util.concurrent.TimeUnit)> -> _SOURCES_
<org.springframework.expression.common.CompositeStringExpression: java.lang.String getValue(org.springframework.expression.EvaluationContext,java.lang.Object)> -> _SOURCES_
<org.springframework.http.HttpHeaders: java.util.List getConnection()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.util.ClassUtils: java.lang.reflect.Method getStaticMethod(java.lang.Class,java.lang.String,java.lang.Class[])> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod: java.lang.String getReturnValueHandlingErrorMessage(java.lang.String,java.lang.Object)> -> _CWE079__SOURCES_
<org.springframework.beans.factory.annotation.AnnotationBeanWiringInfoResolver: java.lang.String getDefaultBeanName(java.lang.Object)> -> _SOURCES_
<org.springframework.instrument.classloading.glassfish.GlassFishLoadTimeWeaver: com.sun.enterprise.loader.InstrumentableClassLoader determineClassLoader(java.lang.ClassLoader)> -> _SOURCES_
<org.springframework.web.portlet.context.PortletWebRequest: java.util.Iterator getParameterNames()> -> _SOURCES_
<org.springframework.orm.toplink.LocalSessionFactory: oracle.toplink.sessions.DatabaseSession loadDatabaseSession(java.lang.String,java.lang.String,java.lang.ClassLoader)> -> _SOURCES_
<org.springframework.jms.listener.AbstractJmsListeningContainer: javax.jms.Connection createSharedConnection()> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.jdbc.core.SqlParameter: java.lang.String getName()> -> _CWE089__SOURCES_
<org.springframework.cache.caffeine.CaffeineCacheManager: void setCacheLoader(com.github.benmanes.caffeine.cache.CacheLoader)> -> _SINKS_
<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: java.lang.String getServiceName()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.JeeConfigurer: org.springframework.security.config.'annotation'.web.configurers.JeeConfigurer j2eePreAuthenticatedProcessingFilter(org.springframework.security.web.authentication.preauth.j2ee.J2eePreAuthenticatedProcessingFilter)> -> _CWE306__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.socket.messaging.DefaultSimpUserRegistry: int getUserCount()> -> _SOURCES__CWE862_
<org.springframework.cache.ehcache.EhCacheFactoryBean: void setCacheEntryFactory(net.sf.ehcache.constructs.blocking.CacheEntryFactory)> -> _SINKS_
<org.springframework.test.web.servlet.result.PrintingResultHandler: void printRequest(org.springframework.mock.web.MockHttpServletRequest)> -> _SINKS_
<org.springframework.web.servlet.i18n.CookieLocaleResolver: java.util.Locale getDefaultLocale()> -> _SOURCES_
<org.springframework.mock.web.MockJspWriter: void println(double)> -> _SINKS_
<org.springframework.remoting.rmi._RmiInvocationWrapper_Tie: org.omg.CORBA.portable.OutputStream _invoke(java.lang.String,org.omg.CORBA.portable.InputStream,org.omg.CORBA.portable.ResponseHandler)> -> _SINKS_
<org.springframework.security.config.annotation.SecurityConfigurerAdapter: void setBuilder(org.springframework.security.config.'annotation'.SecurityBuilder)> -> _SINKS_
<org.springframework.core.LocalVariableTableParameterNameDiscoverer: org.springframework.asm.ClassReader getClassReader(java.lang.Class)> -> _SOURCES_
<org.springframework.web.servlet.tags.form.OptionsTag: org.springframework.web.servlet.support.BindStatus getBindStatus()> -> _SOURCES_
<org.springframework.core.StandardReflectionParameterNameDiscoverer: java.lang.String[] getParameterNames(java.lang.reflect.Constructor)> -> _SOURCES_
<org.springframework.web.servlet.view.document.AbstractPdfView: com.lowagie.text.Document newDocument()> -> _SOURCES_
<org.springframework.security.core.authority.mapping.SimpleAuthorityMapper: void setPrefix(java.lang.String)> -> _SINKS_
<org.springframework.scheduling.concurrent.DefaultManagedTaskScheduler: void setJndiName(java.lang.String)> -> _SINKS_
<org.springframework.web.socket.sockjs.client.DefaultTransportRequest: org.springframework.http.HttpHeaders getHttpRequestHeaders()> -> _SOURCES_
<org.springframework.jdbc.support.nativejdbc.C3P0NativeJdbcExtractor: boolean isNativeConnectionNecessaryForNativeCallableStatements()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__CWE862_
<org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry: org.springframework.util.PathMatcher getPathMatcher()> -> _SOURCES_
<org.springframework.web.portlet.bind.PortletRequestUtils: double[] getRequiredDoubleParameters(javax.portlet.PortletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.web.multipart.support.StandardMultipartHttpServletRequest: java.lang.String getMultipartContentType(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.cache.support.NoOpCache: java.lang.Object getNativeCache()> -> _SOURCES_
<org.springframework.oxm.castor.CastorMarshaller: void setValidating(boolean)> -> _SINKS_
<org.springframework.web.servlet.view.tiles3.SpringWildcardServletTilesApplicationContext: org.apache.tiles.request.ApplicationResource getResource(java.lang.String)> -> _SOURCES_
<org.springframework.web.accept.MappingMediaTypeFileExtensionResolver: java.util.List getAllMediaTypes()> -> _SOURCES_
<org.springframework.http.converter.FormHttpMessageConverter: void write(org.springframework.util.MultiValueMap,org.springframework.http.MediaType,org.springframework.http.HttpOutputMessage)> -> _SINKS_
<org.springframework.beans.DirectFieldAccessor: java.lang.Class getPropertyType(java.lang.String)> -> _SOURCES_
<org.springframework.orm.hibernate3.HibernateTemplate: void update(java.lang.String,java.lang.Object)> -> _SINKS_
<org.springframework.security.crypto.codec.Base64: byte[] encode3to4(byte[],int,int,byte[],int,int)> -> _SANITIZERS_
<org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag: java.lang.String getId()> -> _SOURCES_
<org.springframework.web.socket.PingMessage: int getPayloadLength()> -> _SOURCES_
<org.springframework.core.convert.support.ArrayToStringConverter: java.util.Set getConvertibleTypes()> -> _SOURCES_
<org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory: org.springframework.jdbc.datasource.embedded.EmbeddedDatabase getDatabase()> -> _CWE089__SOURCES_
<org.springframework.web.servlet.view.jasperreports.JasperReportsMultiFormatView: java.util.Properties getContentDispositionMappings()> -> _SOURCES_
<org.springframework.core.io.ClassPathResource: java.lang.String getDescription()> -> _SOURCES_
<org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor: int getOrder()> -> _SOURCES_
<org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor: void setOrder(int)> -> _SINKS_
<org.springframework.core.convert.TypeDescriptor: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)> -> _SOURCES_
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.Object getPropertyValue(org.springframework.beans.AbstractNestablePropertyAccessor$PropertyTokenHolder)> -> _SOURCES_
<org.springframework.context.annotation.LoadTimeWeavingConfiguration: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.web.servlet.support.BindStatus: java.lang.String getErrorCode()> -> _SOURCES_
<org.springframework.mail.javamail.MimeMessageHelper: void setCc(javax.mail.internet.InternetAddress[])> -> _SINKS_
<org.springframework.core.annotation.AnnotationAttributes: java.lang.Class[] getClassArray(java.lang.String)> -> _SOURCES_
<org.springframework.orm.jpa.vendor.TopLinkJpaVendorAdapter: javax.persistence.spi.PersistenceProvider getPersistenceProvider()> -> _SOURCES_
<org.springframework.orm.hibernate3.SpringTransactionFactory: org.hibernate.ConnectionReleaseMode getDefaultReleaseMode()> -> _SOURCES_
<org.springframework.util.xml.AbstractXMLReader: java.lang.Object getProperty(java.lang.String)> -> _SOURCES_
<org.springframework.web.filter.GenericFilterBean: java.lang.String getFilterName()> -> _SOURCES_
<org.springframework.messaging.simp.SimpAttributesContextHolder: void setAttributesFromMessage(org.springframework.messaging.Message)> -> _SINKS_
<org.springframework.web.socket.sockjs.client.AbstractXhrTransport: java.lang.String executeInfoRequest(java.net.URI,org.springframework.http.HttpHeaders)> -> _CWE078__CWE079__SINKS_
<org.springframework.context.annotation.ConfigurationMethod: java.lang.String getShortMethodName(java.lang.String)> -> _SOURCES_
<org.springframework.jmx.export.SpringModelMBean: javax.management.AttributeList setAttributes(javax.management.AttributeList)> -> _SINKS_
<org.springframework.web.servlet.tags.ThemeTag: org.springframework.context.MessageSource getMessageSource()> -> _SOURCES_
<org.springframework.transaction.support.AbstractPlatformTransactionManager: void setGlobalRollbackOnParticipationFailure(boolean)> -> _SINKS_
<org.springframework.jms.connection.SingleConnectionFactory: void prepareConnection(javax.jms.Connection)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.orm.jpa.persistenceunit.MutablePersistenceUnitInfo: java.lang.String getPersistenceProviderPackageName()> -> _SOURCES_
<org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator: void setStripExtension(boolean)> -> _SINKS_
<org.springframework.http.client.OkHttp3ClientHttpRequestFactory: org.springframework.http.client.ClientHttpRequest createRequest(java.net.URI,org.springframework.http.HttpMethod)> -> _SOURCES_
<org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor: void setCreateSession(boolean)> -> _SINKS_
<org.springframework.http.converter.json.GsonHttpMessageConverter: com.google.gson.Gson getGson()> -> _SOURCES_
<org.springframework.web.servlet.mvc.condition.ParamsRequestCondition: org.springframework.web.servlet.mvc.condition.ParamsRequestCondition combine(org.springframework.web.servlet.mvc.condition.ParamsRequestCondition)> -> _SINKS_
<org.springframework.aop.aspectj.annotation.AspectJProxyFactory: java.lang.Object getSingletonAspectInstance(java.lang.Class)> -> _SOURCES_
<org.springframework.jms.connection.CachedMessageProducer: void send(javax.jms.Queue,javax.jms.Message,int,int,long)> -> _SINKS_
<org.springframework.transaction.InvalidTimeoutException: int getTimeout()> -> _SOURCES_
<org.springframework.web.socket.server.standard.ServerEndpointExporter: javax.websocket.server.ServerContainer getServerContainer()> -> _SOURCES_
<org.springframework.remoting.support.RemoteInvocation: void setMethodName(java.lang.String)> -> _SINKS_
<org.springframework.core.annotation.AnnotationUtils: java.lang.Object getDefaultValue(java.lang.'annotation'.Annotation,java.lang.String)> -> _SOURCES_
<org.springframework.util.xml.StaxStreamHandler: void ignorableWhitespaceInternal(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder: org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping getRequestMappingInfoHandlerMapping()> -> _SOURCES_
<org.springframework.core.Conventions: java.lang.String getVariableNameForReturnType(java.lang.reflect.Method,java.lang.Object)> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configureAsyncSupport(org.springframework.web.servlet.config.'annotation'.AsyncSupportConfigurer)> -> _SINKS_
<org.springframework.web.socket.sockjs.transport.session.WebSocketServerSockJsSession: java.security.Principal getPrincipal()> -> _SOURCES_
<org.springframework.web.client.RestTemplate: org.springframework.web.client.RequestCallback httpEntityCallback(java.lang.Object,java.lang.reflect.Type)> -> _SOURCES_
<org.springframework.jdbc.core.metadata.CallParameterMetaData: java.lang.String getParameterName()> -> _CWE089__SOURCES_
<org.springframework.jdbc.support.lob.OracleLobHandler: org.springframework.jdbc.support.lob.LobCreator getLobCreator()> -> _CWE089__SOURCES_
<org.springframework.jms.core.JmsTemplate: void setMessageConverter(org.springframework.jms.support.converter.MessageConverter)> -> _SINKS_
<org.springframework.mock.web.MockMultipartHttpServletRequest: java.util.List getFiles(java.lang.String)> -> _SOURCES_
<org.springframework.web.servlet.tags.form.InputTag: void setSize(java.lang.String)> -> _SINKS_
<org.springframework.http.HttpHeaders: void setCacheControl(java.lang.String)> -> _SINKS_
<org.springframework.beans.factory.support.AbstractBeanDefinition: java.lang.String getScope()> -> _SOURCES_
<org.springframework.test.context.support.AbstractDelegatingSmartContextLoader: org.springframework.context.ApplicationContext delegateLoading(org.springframework.test.context.SmartContextLoader,org.springframework.test.context.MergedContextConfiguration)> -> _SOURCES_
<org.springframework.remoting.jaxrpc.JaxRpcPortClientInterceptor: java.rmi.Remote getPortStub()> -> _SOURCES_
<org.springframework.remoting.jaxrpc.JaxRpcSoapFaultException: javax.xml.rpc.soap.SOAPFaultException getOriginalException()> -> _SOURCES_
<org.springframework.orm.toplink.TopLinkAccessor: org.springframework.jdbc.support.SQLExceptionTranslator getJdbcExceptionTranslator()> -> _SOURCES_
<org.springframework.context.annotation.ComponentScanBeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.transaction.jta.ManagedTransactionAdapter: javax.transaction.TransactionManager getTransactionManager()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver: java.util.List getCustomReturnValueHandlers()> -> _SOURCES_
<org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache: net.sf.ehcache.Ehcache getCache()> -> _SOURCES__CWE862_
<org.springframework.web.servlet.view.jasperreports.AbstractJasperReportsView: void setJdbcDataSource(javax.sql.DataSource)> -> _SINKS_
<org.springframework.web.servlet.mvc.WebContentInterceptor: void setCacheMappings(java.util.Properties)> -> _SINKS_
<org.springframework.scheduling.quartz.JobDetailFactoryBean: void setJobClass(java.lang.Class)> -> _SINKS_
<org.springframework.orm.hibernate3.support.AsyncRequestInterceptor: java.lang.Object handleTimeout(org.springframework.web.context.request.NativeWebRequest,java.util.concurrent.Callable)> -> _SINKS_
<org.springframework.orm.toplink.support.CommonsLoggingSessionLog: oracle.toplink.publicinterface.Session getSession(oracle.toplink.logging.SessionLogEntry)> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor: void writeWithMessageConverters(java.lang.Object,org.springframework.core.MethodParameter,org.springframework.http.server.ServletServerHttpRequest,org.springframework.http.server.ServletServerHttpResponse)> -> _SINKS_
<org.springframework.scheduling.concurrent.ForkJoinPoolFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.beans.factory.parsing.BeanComponentDefinition: org.springframework.beans.factory.config.BeanDefinition[] getBeanDefinitions()> -> _SOURCES_
<org.springframework.format.datetime.joda.JodaDateTimeFormatAnnotationFormatterFactory: org.springframework.format.Printer getPrinter(java.lang.'annotation'.Annotation,java.lang.Class)> -> _SOURCES_
<org.springframework.aop.support.annotation.AnnotationMatchingPointcut: org.springframework.aop.MethodMatcher getMethodMatcher()> -> _SOURCES_
<org.springframework.mock.web.MockPageContext: java.lang.Object getAttribute(java.lang.String,int)> -> _SOURCES_
<org.springframework.web.util.AbstractUriTemplateHandler: java.util.Map getDefaultUriVariables()> -> _SOURCES_
<org.springframework.jdbc.support.incrementer.AbstractIdentityColumnMaxValueIncrementer: java.lang.String getDeleteStatement(long[])> -> _CWE089__SOURCES_
<org.springframework.expression.spel.ExpressionState: java.util.List getPropertyAccessors()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setWebBindingInitializer(org.springframework.web.bind.support.WebBindingInitializer)> -> _SINKS_
<org.springframework.jms.listener.DefaultMessageListenerContainer102: javax.jms.Connection getConnection(org.springframework.jms.connection.JmsResourceHolder)> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES__CWE862_
<org.springframework.jmx.export.MBeanExporter: void setAutodetectModeName(java.lang.String)> -> _SINKS_
<org.springframework.orm.hibernate4.HibernateTemplate: void update(java.lang.String,java.lang.Object,org.hibernate.LockMode)> -> _SINKS_
<org.springframework.jmx.support.NotificationListenerHolder: javax.management.ObjectName[] getResolvedObjectNames()> -> _SOURCES_
<org.springframework.jdbc.support.lob.AbstractLobHandler: byte[] getBlobAsBytes(java.sql.ResultSet,java.lang.String)> -> _CWE089__SOURCES_
<org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource: void setRefreshCheckDelay(long)> -> _SINKS_
<org.springframework.jms.core.JmsTemplate: javax.jms.Queue getDefaultQueue()> -> _SOURCES_
<org.springframework.context.support.DefaultLifecycleProcessor: int getPhase(org.springframework.context.Lifecycle)> -> _SOURCES_
<org.springframework.jms.connection.TransactionAwareConnectionFactoryProxy: javax.jms.QueueConnection createQueueConnection()> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.scripting.ScriptCompilationException: org.springframework.scripting.ScriptSource getScriptSource()> -> _SOURCES_
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setExposePathVariables(java.lang.Boolean)> -> _SINKS_
<org.springframework.web.servlet.view.tiles3.TilesView: void setExposeJstlAttributes(boolean)> -> _SINKS_
<org.springframework.web.socket.sockjs.frame.DefaultSockJsFrameFormat: java.lang.String format(org.springframework.web.socket.sockjs.frame.SockJsFrame)> -> _CWE079__SINKS_
<org.springframework.messaging.support.MessageHeaderAccessor: org.springframework.messaging.support.MessageHeaderAccessor getAccessor(org.springframework.messaging.MessageHeaders,java.lang.Class)> -> _SOURCES_
<org.springframework.mock.web.MockServletContext: javax.servlet.ServletContext getContext(java.lang.String)> -> _SOURCES_
<org.springframework.context.support.ReloadableResourceBundleMessageSource: void setFallbackToSystemLocale(boolean)> -> _SINKS_
<org.springframework.web.socket.client.standard.EndpointConnectionManager: void setConfigurator(javax.websocket.ClientEndpointConfig$Configurator)> -> _SINKS_
<org.springframework.messaging.simp.annotation.support.SendToMethodReturnValueHandler: java.lang.String getDefaultDestinationPrefix()> -> _SOURCES_
<org.springframework.jms.listener.serversession.CommonsPoolServerSessionFactory: void setMaxWait(long)> -> _SINKS_
<org.springframework.web.client.RestTemplate: org.springframework.http.ResponseEntity exchange(java.net.URI,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,java.lang.Class)> -> _SINKS_
<org.springframework.web.socket.sockjs.transport.handler.XhrPollingTransportHandler: org.springframework.http.MediaType getContentType()> -> _SOURCES_
<org.springframework.security.config.annotation.web.servlet.configuration.WebMvcSecurityConfiguration: org.springframework.web.servlet.support.RequestDataValueProcessor requestDataValueProcessor()> -> _SOURCES_
<org.springframework.security.util.InMemoryResource: java.io.InputStream getInputStream()> -> _SOURCES_
<org.springframework.jms.support.converter.MappingJackson2MessageConverter: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.aop.target.CommonsPoolTargetSource: void setMaxIdle(int)> -> _SINKS_
<org.springframework.orm.jdo.support.OpenPersistenceManagerInViewInterceptor: void setPersistenceManagerFactory(javax.jdo.PersistenceManagerFactory)> -> _SINKS_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: java.sql.Timestamp getTimestamp(int)> -> _CWE089__SOURCES_
<org.springframework.http.client.InterceptingAsyncClientHttpRequest: org.springframework.http.HttpMethod getMethod()> -> _SOURCES_
<org.springframework.orm.hibernate3.support.HibernateDaoSupport: org.hibernate.Session getSession(boolean)> -> _SOURCES_
<org.springframework.jms.annotation.JmsListenerAnnotationBeanPostProcessor: java.lang.String getEndpointId(org.springframework.jms.'annotation'.JmsListener)> -> _SOURCES_
<org.springframework.context.PayloadApplicationEvent: org.springframework.core.ResolvableType getResolvableType()> -> _SOURCES_
<org.springframework.expression.common.CompositeStringExpression: java.lang.Class getValueType(org.springframework.expression.EvaluationContext,java.lang.Object)> -> _SOURCES_
<org.springframework.security.core.userdetails.memory.UserAttribute: java.util.List getAuthorities()> -> _SOURCES__CWE862_
<org.springframework.beans.support.PagedListHolder: int getMaxLinkedPages()> -> _SOURCES_
<org.springframework.aop.aspectj.AspectJExpressionPointcut: void setParameterNames(java.lang.String[])> -> _SINKS_
<org.springframework.util.xml.DomUtils: java.util.List getChildElementsByTagName(org.w3c.dom.Element,java.lang.String)> -> _SOURCES_
<org.springframework.web.portlet.handler.HandlerInterceptorAdapter: boolean preHandleEvent(javax.portlet.EventRequest,javax.portlet.EventResponse,java.lang.Object)> -> _SINKS_
<org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator: org.springframework.jdbc.support.SQLExceptionTranslator getFallbackTranslator()> -> _CWE089__SOURCES_
<org.springframework.web.servlet.view.jasperreports.AbstractJasperReportsView: void setReportDataKey(java.lang.String)> -> _SINKS_
<org.springframework.remoting.jaxrpc.JaxRpcPortProxyFactoryBean: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.orm.jdo.LocalPersistenceManagerFactoryBean: void setConfigLocation(org.springframework.core.io.Resource)> -> _SINKS_
<org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor: void setAutowiredAnnotationType(java.lang.Class)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortalContext: java.lang.String getProperty(java.lang.String)> -> _SOURCES_
<org.springframework.security.authentication.jaas.SecurityContextLoginModule: org.springframework.security.core.Authentication getAuthentication()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES_
<org.springframework.core.io.support.PathMatchingResourcePatternResolver: org.springframework.core.io.ResourceLoader getResourceLoader()> -> _SOURCES_
<org.springframework.context.annotation.MBeanExportConfiguration: void setImportMetadata(org.springframework.core.type.AnnotationMetadata)> -> _SINKS_
<org.springframework.security.config.annotation.web.builders.HttpSecurity: org.springframework.security.config.'annotation'.web.builders.HttpSecurity authenticationProvider(org.springframework.security.authentication.AuthenticationProvider)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.transaction.interceptor.MethodMapTransactionAttributeSource: org.springframework.transaction.interceptor.TransactionAttribute getTransactionAttribute(java.lang.reflect.Method,java.lang.Class)> -> _SOURCES_
<org.springframework.jdbc.core.metadata.GenericTableMetaDataProvider: java.lang.String getDatabaseVersion()> -> _CWE089__SOURCES_
<org.springframework.web.servlet.tags.form.TextareaTag: void setOnselect(java.lang.String)> -> _SINKS_
<org.springframework.beans.factory.support.AbstractBeanFactory: org.springframework.beans.factory.BeanFactory getParentBeanFactory()> -> _SOURCES_
<org.springframework.orm.hibernate3.TypeDefinitionBean: void setBeanName(java.lang.String)> -> _SINKS_
<org.springframework.web.accept.PathExtensionContentNegotiationStrategy: java.lang.String getMediaTypeKey(org.springframework.web.context.request.NativeWebRequest)> -> _CWE079__SOURCES_
<org.springframework.web.socket.WebSocketHttpHeaders: java.util.List getSecWebSocketExtensions()> -> _SOURCES_
<org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator: void setAlwaysUseFullPath(boolean)> -> _SINKS_
<org.springframework.web.servlet.tags.EvalTag: void setScope(java.lang.String)> -> _SINKS_
<org.springframework.orm.hibernate3.HibernateTemplate: java.lang.Object get(java.lang.String,java.io.Serializable)> -> _SOURCES_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: java.math.BigDecimal getBigDecimal(int)> -> _CWE089__SOURCES_
<org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver: java.lang.Object getLazyResolutionProxyIfNecessary(org.springframework.beans.factory.config.DependencyDescriptor,java.lang.String)> -> _SOURCES_
<org.springframework.scheduling.backportconcurrent.ScheduledExecutorFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.web.socket.server.standard.ServletServerContainerFactoryBean: javax.websocket.server.ServerContainer getObject()> -> _SOURCES_
<org.springframework.security.crypto.password.NoOpPasswordEncoder: org.springframework.security.crypto.password.PasswordEncoder getInstance()> -> _SOURCES_
<org.springframework.validation.AbstractBindingResult: java.util.List getFieldErrors(java.lang.String)> -> _SOURCES_
<org.springframework.format.datetime.standard.DateTimeFormatterRegistrar: void setDateStyle(java.time.format.FormatStyle)> -> _SINKS_
<org.springframework.jmx.export.assembler.AbstractMBeanInfoAssembler: javax.management.modelmbean.ModelMBeanInfo getMBeanInfo(java.lang.Object,java.lang.String)> -> _SOURCES_
<org.springframework.web.socket.sockjs.support.AbstractSockJsService: void setHttpMessageCacheSize(int)> -> _SINKS_
<org.springframework.web.servlet.FrameworkServlet: java.lang.String getContextAttribute()> -> _SOURCES_
<org.springframework.expression.spel.ast.VariableReference: org.springframework.expression.spel.ast.ValueRef getValueRef(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.cache.jcache.interceptor.CacheResultOperation: org.springframework.util.ExceptionTypeFilter getExceptionTypeFilter()> -> _SOURCES_
<org.springframework.orm.hibernate3.FilterDefinitionFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.orm.jdo.support.SpringPersistenceManagerProxyBean: void setPersistenceManagerFactory(javax.jdo.PersistenceManagerFactory)> -> _SINKS_
<org.springframework.scheduling.support.CronSequenceGenerator: void setDays(java.util.BitSet,java.lang.String,int)> -> _SINKS_
<org.springframework.jms.listener.serversession.ServerSessionMessageListenerContainer: void setServerSessionFactory(org.springframework.jms.listener.serversession.ServerSessionFactory)> -> _SINKS_
<org.springframework.jdbc.config.EmbeddedDatabaseBeanDefinitionParser: org.springframework.beans.factory.support.AbstractBeanDefinition parseInternal(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _CWE089__SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: void setRequestBodyAdvice(java.util.List)> -> _SINKS_
<org.springframework.util.concurrent.SettableListenableFuture: boolean set(java.lang.Object)> -> _SINKS_
<org.springframework.web.servlet.view.script.ScriptTemplateView: void setResourceLoaderPath(java.lang.String)> -> _SOURCES__SINKS_
<org.springframework.jmx.support.MBeanServerFactoryBean: void setDefaultDomain(java.lang.String)> -> _SINKS_
<org.springframework.security.config.http.HttpConfigurationBuilder: void setLogoutHandlers(org.springframework.beans.factory.support.ManagedList)> -> _CWE306__AUTHENTICATIONS_TO_LOW__SINKS__CWE862_
<org.springframework.core.convert.ConversionFailedException: org.springframework.core.convert.TypeDescriptor getTargetType()> -> _SOURCES_
<org.springframework.aop.interceptor.CustomizableTraceInterceptor: void setExceptionMessage(java.lang.String)> -> _SINKS_
<org.springframework.messaging.core.AbstractMessageSendingTemplate: void setDefaultDestination(java.lang.Object)> -> _SINKS_
<org.springframework.cache.ehcache.EhCacheCache: java.lang.Object get(java.lang.Object,java.lang.Class)> -> _SOURCES_
<org.springframework.core.env.AbstractEnvironment: void setIgnoreUnresolvableNestedPlaceholders(boolean)> -> _SINKS_
<org.springframework.orm.toplink.LocalSessionFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.jdbc.core.simple.AbstractJdbcCall: void setAccessCallParameterMetaData(boolean)> -> _CWE089__SINKS_
<org.springframework.cache.interceptor.CacheAspectSupport: org.springframework.cache.interceptor.CacheOperationSource getCacheOperationSource()> -> _SOURCES_
<org.springframework.cglib.core.ReflectUtils: java.beans.PropertyDescriptor[] getBeanSetters(java.lang.Class)> -> _SOURCES_
<org.springframework.format.datetime.standard.DateTimeFormatterRegistrar: void setDateTimeStyle(java.time.format.FormatStyle)> -> _SINKS_
<org.springframework.web.servlet.support.RequestContextUtils: org.springframework.ui.context.Theme getTheme(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean: void setMixIns(java.util.Map)> -> _SINKS_
<org.springframework.remoting.rmi.RmiClientInterceptor: java.lang.Object handleRemoteConnectFailure(org.aopalliance.intercept.MethodInvocation,java.lang.Exception)> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.jmx.support.MBeanServerConnectionFactoryBean: void connect()> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.orm.toplink.TopLinkTransactionManager: org.springframework.orm.toplink.SessionFactory getSessionFactory()> -> _SOURCES_
<org.springframework.web.servlet.HttpServletBean: void setEnvironment(org.springframework.core.env.Environment)> -> _SINKS_
<org.springframework.cglib.transform.AbstractTransformTask: byte[] getBytes(java.util.zip.ZipInputStream)> -> _SOURCES_
<org.springframework.jms.connection.SingleConnectionFactory: void setReconnectOnException(boolean)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.core.annotation.AnnotatedElementUtils: java.util.Set getMetaAnnotationTypes(java.lang.reflect.AnnotatedElement,java.lang.String)> -> _SOURCES_
<org.springframework.jdbc.core.JdbcTemplate: int update(org.springframework.jdbc.core.PreparedStatementCreator)> -> _CWE089__SINKS_
<org.springframework.web.portlet.handler.AbstractHandlerMapping: java.lang.Object getDefaultHandler()> -> _SOURCES_
<org.springframework.cache.jcache.interceptor.SimpleExceptionCacheResolver: java.util.Collection getCacheNames(org.springframework.cache.interceptor.CacheOperationInvocationContext)> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.ViewControllerRegistry: void setOrder(int)> -> _SINKS_
<org.springframework.web.servlet.view.velocity.VelocityConfigurer: void setServletContext(javax.servlet.ServletContext)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.RequestMappingInfo: org.springframework.web.servlet.mvc.condition.ParamsRequestCondition getParamsCondition()> -> _SOURCES_
<org.springframework.jdbc.support.nativejdbc.Jdbc4NativeJdbcExtractor: java.sql.Connection doGetNativeConnection(java.sql.Connection)> -> _CWE306__CWE089__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.messaging.support.NativeMessageHeaderAccessor: java.util.Map getNativeHeaders()> -> _SOURCES_
<org.springframework.messaging.support.ChannelInterceptorAdapter: org.springframework.messaging.Message preSend(org.springframework.messaging.Message,org.springframework.messaging.MessageChannel)> -> _SINKS_
<org.springframework.mock.web.MockServletContext: java.net.URL getResource(java.lang.String)> -> _SOURCES_
<org.springframework.jms.listener.adapter.MessageListenerAdapter: void setDefaultResponseTopicName(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.datasource.JdbcTransactionObjectSupport: java.lang.Integer getPreviousIsolationLevel()> -> _CWE089__SOURCES_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: int update(java.lang.String,org.springframework.jdbc.core.namedparam.SqlParameterSource,org.springframework.jdbc.support.KeyHolder)> -> _CWE089__SINKS_
<org.springframework.orm.toplink.support.CommonsLoggingSessionLog: java.lang.String getCategory(oracle.toplink.logging.SessionLogEntry)> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.RememberMeConfigurer: org.springframework.security.config.'annotation'.web.configurers.RememberMeConfigurer authenticationSuccessHandler(org.springframework.security.web.authentication.AuthenticationSuccessHandler)> -> _CWE306__SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory: void setCustomArgumentResolvers(java.util.List)> -> _SINKS_
<org.springframework.http.converter.StringHttpMessageConverter: void setWriteAcceptCharset(boolean)> -> _SINKS_
<org.springframework.jdbc.core.simple.AbstractJdbcCall: java.lang.String getScalarOutParameterName()> -> _CWE089__SOURCES_
<org.springframework.mail.javamail.MimeMessageHelper: void setTo(javax.mail.internet.InternetAddress[])> -> _SINKS_
<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder locale(java.util.Locale[])> -> _SOURCES_
<org.springframework.orm.jpa.EntityManagerFactoryUtils: javax.persistence.EntityManager getTransactionalEntityManager(javax.persistence.EntityManagerFactory)> -> _SOURCES_
<org.springframework.test.web.servlet.htmlunit.MockMvcWebConnection: com.gargoylesoftware.htmlunit.WebResponse getResponse(com.gargoylesoftware.htmlunit.WebRequest)> -> _CWE079__SOURCES_
<org.springframework.security.config.annotation.authentication.configurers.userdetails.AbstractDaoAuthenticationConfigurer: org.springframework.security.core.userdetails.UserDetailsService getUserDetailsService()> -> _SOURCES__CWE862_
<org.springframework.jms.listener.endpoint.JmsActivationSpecConfig: void setMessageSelector(java.lang.String)> -> _SINKS_
<org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration: void setFilterChainProxySecurityConfigurer(org.springframework.security.config.'annotation'.ObjectPostProcessor,java.util.List)> -> _SINKS_
<org.springframework.web.context.request.ServletRequestAttributes: javax.servlet.http.HttpSession getSession(boolean)> -> _SOURCES_
<org.springframework.util.CustomizableThreadCreator: void setThreadGroup(java.lang.ThreadGroup)> -> _SINKS_
<org.springframework.jmx.export.MBeanExporter: javax.management.modelmbean.ModelMBean createAndConfigureMBean(java.lang.Object,java.lang.String)> -> _SOURCES_
<org.springframework.orm.toplink.TopLinkTemplate: java.lang.Object executeQuery(oracle.toplink.queryframework.DatabaseQuery,java.lang.Object[])> -> _CWE078__SINKS_
<org.springframework.orm.hibernate3.LocalTransactionManagerLookup: java.lang.Object getTransactionIdentifier(javax.transaction.Transaction)> -> _SOURCES_
<org.springframework.format.datetime.standard.MonthDayFormatter: java.time.MonthDay parse(java.lang.String,java.util.Locale)> -> _SINKS_
<org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration: void setImportMetadata(org.springframework.core.type.AnnotationMetadata)> -> _SINKS_
<org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractorAdapter: boolean isNativeConnectionNecessaryForNativePreparedStatements()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__CWE862_
<org.springframework.scheduling.quartz.SchedulerFactoryBean: org.springframework.core.task.TaskExecutor getConfigTimeTaskExecutor()> -> _SOURCES_
<org.springframework.cglib.core.ReflectUtils: org.springframework.asm.Type[] getExceptionTypes(java.lang.reflect.Member)> -> _SOURCES_
<org.springframework.oxm.castor.CastorMarshaller: void setNamespaceToPackageMapping(java.util.Map)> -> _SINKS_
<org.springframework.jca.endpoint.AbstractMessageEndpointFactory: void setTransactionManager(java.lang.Object)> -> _SINKS_
<org.springframework.test.web.servlet.request.MockMvcRequestBuilders: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder head(java.lang.String,java.lang.Object[])> -> _SOURCES_
<org.springframework.core.annotation.AnnotatedElementUtils: org.springframework.core.'annotation'.AnnotationAttributes getMergedAnnotationAttributes(java.lang.reflect.AnnotatedElement,java.lang.Class)> -> _SOURCES_
<org.springframework.jdbc.core.SqlParameter: java.lang.String getTypeName()> -> _CWE089__SOURCES_
<org.springframework.beans.factory.parsing.CompositeComponentDefinition: java.lang.Object getSource()> -> _SOURCES_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: int update(java.lang.String,org.springframework.jdbc.core.namedparam.SqlParameterSource)> -> _CWE089__SINKS_
<org.springframework.objenesis.strategy.PlatformDescription: boolean getIsAndroidOpenJDK()> -> _SOURCES_
<org.springframework.web.client.RestTemplate: java.lang.Object postForObject(java.net.URI,java.lang.Object,java.lang.Class)> -> _SINKS_
<org.springframework.asm.Label: int getOffset()> -> _SOURCES_
<org.springframework.context.support.AbstractMessageSource: java.lang.String getDefaultMessage(java.lang.String)> -> _SOURCES_
<org.springframework.cache.ehcache.EhCacheManagerFactoryBean: void setConfigLocation(org.springframework.core.io.Resource)> -> _SINKS_
<org.springframework.oxm.castor.CastorMarshaller: void setNamespaceMappings(java.util.Map)> -> _SINKS_
<org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter: long getLastModified(javax.servlet.http.HttpServletRequest,java.lang.Object)> -> _SOURCES_
<org.springframework.orm.hibernate3.FilterDefinitionFactoryBean: void setFilterName(java.lang.String)> -> _SINKS_
<org.springframework.jms.support.converter.MappingJackson2MessageConverter: void setObjectMapper(com.fasterxml.jackson.databind.ObjectMapper)> -> _SINKS_
<org.springframework.scheduling.quartz.SchedulerAccessor: void setTransactionManager(org.springframework.transaction.PlatformTransactionManager)> -> _SINKS_
<org.springframework.jdbc.datasource.SingleConnectionDataSource: void initConnection()> -> _CWE306__CWE089__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.expression.spel.ast.IntLiteral: org.springframework.expression.TypedValue getLiteralValue()> -> _SOURCES_
<org.springframework.orm.hibernate4.LocalSessionFactoryBean: void setNamingStrategy(org.hibernate.cfg.NamingStrategy)> -> _SINKS_
<org.springframework.format.datetime.joda.JodaTimeFormatterRegistrar: void setTimeFormatter(org.joda.time.format.DateTimeFormatter)> -> _SINKS_
<org.springframework.jms.config.MethodJmsListenerEndpoint: org.springframework.messaging.handler.'annotation'.SendTo getSendTo(java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.web.portlet.context.PortletWebRequest: java.lang.String getHeader(java.lang.String)> -> _CWE079__SOURCES_
<org.springframework.cglib.proxy.Enhancer: void setCallbacksHelper(java.lang.Class,org.springframework.cglib.proxy.Callback[],java.lang.String)> -> _SINKS_
<org.springframework.web.portlet.mvc.annotation.AnnotationMethodHandlerAdapter: void setParameterNameDiscoverer(org.springframework.core.ParameterNameDiscoverer)> -> _SINKS_
<org.springframework.orm.jpa.AbstractEntityManagerFactoryBean: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.orm.jdo.support.StandardPersistenceManagerProxyBean: void setPersistenceManagerFactory(javax.jdo.PersistenceManagerFactory)> -> _SINKS_
<org.springframework.remoting.jaxrpc.ServletEndpointSupport: java.io.File getTempDir()> -> _SOURCES_
<org.springframework.oxm.jibx.JibxMarshaller: void setDocTypeSystemId(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.portlet.MockPortletConfig: java.lang.String getInitParameter(java.lang.String)> -> _SOURCES_
<org.springframework.aop.target.ThreadLocalTargetSource: int getHitCount()> -> _SOURCES_
<org.springframework.beans.factory.xml.XmlBeanDefinitionReader: void setSourceExtractor(org.springframework.beans.factory.parsing.SourceExtractor)> -> _SINKS_
<org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurer: org.springframework.security.core.session.SessionRegistry getSessionRegistry(org.springframework.security.config.'annotation'.web.HttpSecurityBuilder)> -> _SOURCES_
<org.springframework.mock.http.client.MockClientHttpRequest: void setMethod(org.springframework.http.HttpMethod)> -> _SINKS_
<org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper: java.lang.String getAttributePrefix()> -> _SOURCES_
<org.springframework.expression.spel.support.StandardEvaluationContext: void setVariables(java.util.Map)> -> _SINKS_
<org.springframework.core.io.support.PropertiesLoaderSupport: void setPropertiesPersister(org.springframework.util.PropertiesPersister)> -> _SINKS_
<org.springframework.context.support.AbstractApplicationContext: java.lang.String getDisplayName()> -> _SOURCES_
<org.springframework.mock.http.client.MockClientHttpResponse: org.springframework.http.HttpStatus getStatusCode()> -> _SOURCES__CWE601_
<org.springframework.ui.velocity.VelocityEngineFactory: void setResourceLoaderPath(java.lang.String)> -> _SINKS_
<org.springframework.jms.config.SimpleJmsListenerEndpoint: void setMessageListener(javax.jms.MessageListener)> -> _SINKS_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite: void configureViewResolvers(org.springframework.web.servlet.config.'annotation'.ViewResolverRegistry)> -> _SINKS_
<org.springframework.web.multipart.support.StandardServletMultipartResolver: void cleanupMultipart(org.springframework.web.multipart.MultipartHttpServletRequest)> -> _SINKS_
<org.springframework.expression.spel.ast.LongLiteral: org.springframework.expression.TypedValue getLiteralValue()> -> _SOURCES_
<org.springframework.util.xml.XMLEventStreamReader: javax.xml.namespace.QName getName()> -> _SOURCES_
<org.springframework.messaging.simp.stomp.BufferingStompDecoder: java.lang.Integer getExpectedContentLength()> -> _SOURCES_
<org.springframework.web.bind.annotation.support.HandlerMethodResolver: java.util.Set getModelAttributeMethods()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletRequest: javax.portlet.PortletPreferences getPreferences()> -> _SOURCES_
<org.springframework.orm.toplink.TopLinkTransactionManager: void setJdbcExceptionTranslator(org.springframework.jdbc.support.SQLExceptionTranslator)> -> _SINKS_
<org.springframework.mock.web.MockServletContext: javax.servlet.descriptor.JspConfigDescriptor getJspConfigDescriptor()> -> _SOURCES_
<org.springframework.jms.core.JmsTemplate: void send(org.springframework.jms.core.MessageCreator)> -> _SINKS_
<org.springframework.messaging.simp.SimpMessageHeaderAccessor: java.lang.String getSubscriptionId(java.util.Map)> -> _SOURCES_
<org.springframework.web.servlet.tags.form.LabelTag: int writeTagContent(org.springframework.web.servlet.tags.form.TagWriter)> -> _SINKS_
<org.springframework.oxm.xmlbeans.XmlOptionsFactoryBean: org.apache.xmlbeans.XmlOptions getObject()> -> _SOURCES_
<org.springframework.cache.support.CompositeCacheManager: void setFallbackToNoOpCache(boolean)> -> _SINKS_
<org.springframework.security.config.ldap.ContextSourceSettingPostProcessor: int getOrder()> -> _SOURCES_
<org.springframework.web.servlet.view.ContentNegotiatingViewResolver: void setUseNotAcceptableStatusCode(boolean)> -> _SINKS_
<org.springframework.web.socket.sockjs.client.AbstractXhrTransport: java.util.List getTransportTypes()> -> _SOURCES_
<org.springframework.jdbc.support.GeneratedKeyHolder: java.util.Map getKeys()> -> _CWE089__SOURCES_
<org.springframework.remoting.jaxws.JaxWsPortClientInterceptor: void setPassword(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.MockAsyncContext: javax.servlet.ServletResponse getResponse()> -> _SOURCES_
<org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor: org.springframework.security.access.method.MethodSecurityMetadataSource getSecurityMetadataSource()> -> _SOURCES_
<org.springframework.web.portlet.context.PortletRequestHandledEvent: java.lang.String getShortDescription()> -> _SOURCES_
<org.springframework.web.servlet.resource.PathResourceResolver: org.springframework.core.io.Resource resolveResourceInternal(javax.servlet.http.HttpServletRequest,java.lang.String,java.util.List,org.springframework.web.servlet.resource.ResourceResolverChain)> -> _SINKS_
<org.springframework.core.env.CommandLinePropertySource: void setNonOptionArgsPropertyName(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer: org.springframework.web.servlet.config.'annotation'.AsyncSupportConfigurer setTaskExecutor(org.springframework.core.task.AsyncTaskExecutor)> -> _SINKS_
<org.springframework.http.client.OkHttpAsyncClientHttpRequest: org.springframework.http.HttpMethod getMethod()> -> _SOURCES_
<org.springframework.test.web.servlet.htmlunit.MockWebResponseBuilder: com.gargoylesoftware.htmlunit.util.Cookie createCookie(javax.servlet.http.Cookie)> -> _CWE079__SOURCES__CWE601_
<org.springframework.jdbc.core.metadata.CallMetaDataContext: void setLimitedInParameterNames(java.util.Set)> -> _CWE089__SINKS_
<org.springframework.format.number.money.Jsr354NumberFormatAnnotationFormatterFactory: org.springframework.format.Parser getParser(org.springframework.format.'annotation'.NumberFormat,java.lang.Class)> -> _SOURCES_
<org.springframework.web.servlet.view.json.AbstractJackson2View: void setPrettyPrint(boolean)> -> _SINKS_
<org.springframework.aop.framework.Cglib2AopProxy: void setConstructorArguments(java.lang.Object[],java.lang.Class[])> -> _SINKS_
<org.springframework.jdbc.datasource.DelegatingDataSource: java.sql.Connection getConnection()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__CWE089__SOURCES__CWE862_
<org.springframework.core.type.StandardAnnotationMetadata: java.util.Set getAnnotationTypes()> -> _SOURCES_
<org.springframework.context.expression.MapAccessor: java.lang.Class getPropertyType()> -> _SOURCES_
<org.springframework.instrument.classloading.weblogic.WebLogicLoadTimeWeaver: java.lang.ClassLoader getThrowawayClassLoader()> -> _SOURCES_
<org.springframework.validation.AbstractErrors: int getFieldErrorCount(java.lang.String)> -> _SOURCES_
<org.springframework.orm.hibernate5.support.OpenSessionInViewFilter: void setSessionFactoryBeanName(java.lang.String)> -> _SINKS_
<org.springframework.web.socket.sockjs.client.AbstractClientSockJsSession: void closeInternal(org.springframework.web.socket.CloseStatus)> -> _AUTHENTICATIONS_TO_LOW_
<org.springframework.scheduling.quartz.SimpleTriggerFactoryBean: void setRepeatCount(int)> -> _SINKS_
<org.springframework.aop.framework.ReflectiveMethodInvocation: java.lang.Object getUserAttribute(java.lang.String)> -> _SOURCES_
<org.springframework.beans.factory.config.PlaceholderConfigurerSupport: void setValueSeparator(java.lang.String)> -> _SINKS_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.util.concurrent.ListenableFuture delete(java.lang.String,java.util.Map)> -> _SINKS_
<org.springframework.validation.beanvalidation.CustomValidatorBean: void setMessageInterpolator(javax.validation.MessageInterpolator)> -> _SINKS_
<org.springframework.jdbc.support.lob.OracleLobHandler: java.lang.String getClobAsString(java.sql.ResultSet,int)> -> _CWE089__SOURCES_
<org.springframework.context.event.AbstractApplicationEventMulticaster: java.util.Collection getApplicationListeners()> -> _SOURCES_
<org.springframework.beans.PropertyAccessorUtils: int getLastNestedPropertySeparatorIndex(java.lang.String)> -> _SOURCES_
<org.springframework.web.context.request.RequestScope: java.lang.String getConversationId()> -> _SOURCES_
<org.springframework.web.servlet.resource.ResourceTransformerSupport: org.springframework.web.servlet.resource.ResourceUrlProvider getResourceUrlProvider()> -> _SOURCES_
<org.springframework.jndi.JndiObjectTargetSource: void setLookupOnStartup(boolean)> -> _SINKS_
<org.springframework.cglib.beans.BeanGenerator: java.lang.ClassLoader getDefaultClassLoader()> -> _SOURCES_
<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: void setServiceFactoryClass(java.lang.Class)> -> _SINKS_
<org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer: java.lang.String getFailureUrl()> -> _SOURCES_
<org.springframework.context.support.AbstractRefreshableApplicationContext: org.springframework.beans.factory.config.ConfigurableListableBeanFactory getBeanFactory()> -> _SOURCES_
<org.springframework.security.authentication.TestingAuthenticationToken: java.lang.Object getPrincipal()> -> _SOURCES_
<org.springframework.messaging.core.AbstractMessageSendingTemplate: void send(org.springframework.messaging.Message)> -> _SINKS_
<org.springframework.jdbc.core.metadata.GenericCallMetaDataProvider: void setStoresUpperCaseIdentifiers(boolean)> -> _CWE089__SINKS_
<org.springframework.orm.hibernate5.HibernateTemplate: void setFetchSize(int)> -> _SINKS_
<org.springframework.web.socket.config.MessageBrokerBeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES__SINKS_
<org.springframework.web.servlet.FrameworkServlet: java.lang.String getContextId()> -> _SOURCES_
<org.springframework.beans.factory.support.DefaultListableBeanFactory: java.lang.String[] getBeanNamesForType(java.lang.Class,boolean,boolean)> -> _SOURCES_
<org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor: org.springframework.aop.Pointcut getPointcut()> -> _SOURCES_
<org.springframework.core.type.classreading.AbstractRecursiveAnnotationVisitor: java.lang.Object getEnumValue(java.lang.String,java.lang.String)> -> _SOURCES_
<org.springframework.aop.aspectj.AbstractAspectJAdvice: void setReturningNameNoCheck(java.lang.String)> -> _SINKS_
<org.springframework.web.method.support.ModelAndViewContainer: void setIgnoreDefaultModelOnRedirect(boolean)> -> _SINKS_
<org.springframework.messaging.simp.SimpAttributesContextHolder: org.springframework.messaging.simp.SimpAttributes getAttributes()> -> _SOURCES_
<org.springframework.web.method.HandlerMethod: org.springframework.web.method.HandlerMethod getResolvedFromHandlerMethod()> -> _SOURCES_
<org.springframework.orm.hibernate4.ConfigurableJtaPlatform: java.lang.Object getTransactionIdentifier(javax.transaction.Transaction)> -> _SOURCES_
<org.springframework.context.support.AbstractXmlApplicationContext: void loadBeanDefinitions(org.springframework.beans.factory.support.DefaultListableBeanFactory)> -> _SOURCES_
<org.springframework.web.servlet.support.AbstractDispatcherServletInitializer: org.springframework.context.ApplicationContextInitializer[] getServletApplicationContextInitializers()> -> _SOURCES_
<org.springframework.web.bind.ServletRequestUtils: long[] getRequiredLongParameters(javax.servlet.ServletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.orm.hibernate3.TypeDefinitionBean: java.util.Properties getParameters()> -> _SOURCES_
<org.springframework.aop.target.SingletonTargetSource: java.lang.Class getTargetClass()> -> _SOURCES_
<org.springframework.web.socket.messaging.SubProtocolWebSocketHandler: void setProtocolHandlers(java.util.List)> -> _SINKS_
<org.springframework.security.access.expression.SecurityExpressionRoot: boolean isFullyAuthenticated()> -> _AUTHENTICATIONS_NEUTRAL__CWE306_
<org.springframework.web.context.support.AbstractRefreshableWebApplicationContext: java.lang.String[] getConfigLocations()> -> _SOURCES_
<org.springframework.context.i18n.LocaleContextHolder: void setLocaleContext(org.springframework.context.i18n.LocaleContext)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: org.springframework.web.method.'annotation'.SessionAttributesHandler getSessionAttributesHandler(org.springframework.web.method.HandlerMethod)> -> _SOURCES__SINKS_
<org.springframework.messaging.support.IdTimestampMessageHeaderInitializer: void setEnableTimestamp(boolean)> -> _SINKS_
<org.springframework.core.type.StandardMethodMetadata: java.util.Map getAnnotationAttributes(java.lang.String)> -> _SOURCES_
<org.springframework.http.HttpHeaders: java.lang.String getOrigin()> -> _SOURCES_
<org.springframework.http.HttpHeaders: void setContentDispositionFormData(java.lang.String,java.lang.String)> -> _SINKS_
<org.springframework.jca.cci.connection.ConnectionSpecConnectionFactoryAdapter: void setConnectionSpecForCurrentThread(javax.resource.cci.ConnectionSpec)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.tags.form.InputTag: int writeTagContent(org.springframework.web.servlet.tags.form.TagWriter)> -> _SINKS_
<org.springframework.web.servlet.i18n.LocaleChangeInterceptor: java.lang.String[] getHttpMethods()> -> _SOURCES_
<org.springframework.core.ResolvableType: org.springframework.core.ResolvableType[] getInterfaces()> -> _SOURCES_
<org.springframework.security.config.annotation.web.builders.HttpSecurity: org.springframework.security.config.'annotation'.authentication.builders.AuthenticationManagerBuilder getAuthenticationRegistry()> -> _AUTHENTICATIONS_NEUTRAL__CWE306__SOURCES_
<org.springframework.mock.web.portlet.MockResourceRequest: java.lang.String getLifecyclePhase()> -> _SOURCES_
<org.springframework.jms.connection.SingleConnectionFactory: void setClientId(java.lang.String)> -> _SINKS_
<org.springframework.instrument.classloading.oc4j.OC4JLoadTimeWeaver: java.lang.ClassLoader getInstrumentableClassLoader()> -> _SOURCES_
<org.springframework.expression.spel.ast.Identifier: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)> -> _SOURCES_
<org.springframework.beans.BeanUtils: org.springframework.core.MethodParameter getWriteMethodParameter(java.beans.PropertyDescriptor)> -> _SOURCES_
<org.springframework.web.servlet.support.BindStatus: java.lang.Object getValue()> -> _SOURCES_
<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder setDependencyCheck(int)> -> _SINKS_
<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.parsing.CompositeComponentDefinition getContainingComponent()> -> _SOURCES_
<org.springframework.orm.jdo.JdoAccessor: org.springframework.orm.jdo.JdoDialect getJdoDialect()> -> _SOURCES_
<org.springframework.cache.jcache.interceptor.AbstractJCacheOperation: javax.cache.annotation.CacheInvocationParameter[] getAllParameters(java.lang.Object[])> -> _SOURCES_
<org.springframework.cache.jcache.JCacheManagerFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.web.servlet.view.tiles2.TilesViewResolver: void setAlwaysInclude(java.lang.Boolean)> -> _SINKS_
<org.springframework.expression.spel.ast.MethodReference: java.util.List getArgumentTypes(java.lang.Object[])> -> _SOURCES_
<org.springframework.aop.target.CommonsPoolTargetSource: long getTimeBetweenEvictionRunsMillis()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter: org.springframework.web.method.support.InvocableHandlerMethod createInitBinderMethod(java.lang.Object,java.lang.reflect.Method)> -> _SOURCES_
<org.springframework.web.servlet.handler.SimpleMappingExceptionResolver: void setStatusCodes(java.util.Properties)> -> _SINKS_
<org.springframework.web.accept.ServletPathExtensionContentNegotiationStrategy: org.springframework.http.MediaType handleNoMatch(org.springframework.web.context.request.NativeWebRequest,java.lang.String)> -> _SINKS_
<org.springframework.cglib.core.ClassEmitter: org.springframework.asm.Type getClassType()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockActionResponse: void setWindowState(javax.portlet.WindowState)> -> _SINKS__CWE601_
<org.springframework.web.bind.WebDataBinder: java.lang.Object getEmptyValue(java.lang.String,java.lang.Class)> -> _SOURCES_
<org.springframework.scheduling.quartz.SchedulerAccessorBean: void setScheduler(org.quartz.Scheduler)> -> _SINKS_
<org.springframework.beans.factory.config.TypedStringValue: java.lang.String getTargetTypeName()> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: java.lang.String getLocalName()> -> _SOURCES_
<org.springframework.aop.aspectj.annotation.SingletonMetadataAwareAspectInstanceFactory: org.springframework.aop.aspectj.'annotation'.AspectMetadata getAspectMetadata()> -> _SOURCES_
<org.springframework.web.socket.sockjs.transport.handler.EventSourceTransportHandler: org.springframework.web.socket.sockjs.transport.TransportType getTransportType()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: org.springframework.web.servlet.handler.RequestMatchResult match(javax.servlet.http.HttpServletRequest,java.lang.String)> -> _SOURCES_
<org.springframework.beans.factory.support.FactoryBeanRegistrySupport: org.springframework.beans.factory.FactoryBean getFactoryBean(java.lang.String,java.lang.Object)> -> _SOURCES_
<org.springframework.beans.factory.config.YamlProcessor: void setResolutionMethod(org.springframework.beans.factory.config.YamlProcessor$ResolutionMethod)> -> _SINKS_
<org.springframework.jms.listener.adapter.AbstractAdaptableMessageListener: void setDestinationResolver(org.springframework.jms.support.destination.DestinationResolver)> -> _SINKS_
<org.springframework.context.expression.StandardBeanExpressionResolver: void setExpressionParser(org.springframework.expression.ExpressionParser)> -> _SINKS_
<org.springframework.web.servlet.mvc.condition.ProducesRequestCondition: java.util.List getExpressionsToCompare()> -> _SOURCES_
<org.springframework.core.env.AbstractEnvironment: java.lang.String getProperty(java.lang.String,java.lang.String)> -> _SOURCES_
<org.springframework.aop.aspectj.annotation.InstantiationModelAwarePointcutAdvisorImpl: java.lang.String getAspectName()> -> _SOURCES_
<org.springframework.web.servlet.tags.MessageTag: void setArgumentSeparator(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.core.metadata.GenericTableMetaDataProvider: void setStoresUpperCaseIdentifiers(boolean)> -> _CWE089__SINKS_
<org.springframework.aop.framework.ProxyFactoryBean: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.messaging.simp.stomp.StompDecoder: java.util.List decode(java.nio.ByteBuffer)> -> _SOURCES_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSetMetaData: int getColumnType(int)> -> _CWE089__SOURCES_
<org.springframework.web.context.support.ContextExposingHttpServletRequest: java.lang.Object getAttribute(java.lang.String)> -> _SOURCES_
<org.springframework.http.ResponseEntity: int getStatusCodeValue()> -> _SOURCES__CWE601_
<org.springframework.scheduling.commonj.TimerManagerFactoryBean: void setShared(boolean)> -> _SINKS_
<org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler: int getActiveCount()> -> _SOURCES_
<org.springframework.jms.listener.serversession.AbstractPoolingServerSessionFactory: int getMaxSize()> -> _SOURCES_
<org.springframework.cache.support.NoOpCacheManager: java.util.Collection getCacheNames()> -> _SOURCES_
<org.springframework.mock.web.MockFilterChain: javax.servlet.ServletResponse getResponse()> -> _SOURCES_
<org.springframework.beans.factory.xml.XmlBeanDefinitionReader: int loadBeanDefinitions(org.xml.sax.InputSource,java.lang.String)> -> _SOURCES_
<org.springframework.cache.caffeine.CaffeineCacheManager: void setCaffeineSpec(com.github.benmanes.caffeine.cache.CaffeineSpec)> -> _SINKS_
<org.springframework.cglib.core.Signature: java.lang.String getDescriptor()> -> _SOURCES_
<org.springframework.beans.factory.wiring.BeanWiringInfo: boolean getDependencyCheck()> -> _SOURCES_
<org.springframework.beans.factory.config.TypedStringValue: java.lang.Object getSource()> -> _SOURCES_
<org.springframework.remoting.caucho.HessianClientInterceptor: void setPassword(java.lang.String)> -> _SINKS_
<org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter: org.springframework.validation.Validator getValidator()> -> _SOURCES_
<org.springframework.remoting.rmi.JndiRmiServiceExporter: void setJndiTemplate(org.springframework.jndi.JndiTemplate)> -> _SINKS_
<org.springframework.web.servlet.view.script.ScriptTemplateConfigurer: void setRenderObject(java.lang.String)> -> _SINKS_
<org.springframework.mail.SimpleMailMessage: void setBcc(java.lang.String)> -> _SINKS_
<org.springframework.core.enums.StaticLabeledEnum: java.lang.Object readResolve()> -> _SOURCES_
<org.springframework.mock.web.MockServletContext: java.lang.String getInitParameter(java.lang.String)> -> _SOURCES_
<org.springframework.cache.interceptor.BeanFactoryCacheOperationSourceAdvisor: org.springframework.aop.Pointcut getPointcut()> -> _SOURCES_
<org.springframework.security.authentication.ProviderManager: void setAuthenticationEventPublisher(org.springframework.security.authentication.AuthenticationEventPublisher)> -> _CWE306__SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.beans.factory.support.AbstractBeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Class,java.lang.Object[])> -> _SOURCES_
<org.springframework.web.socket.adapter.jetty.JettyWebSocketSession: java.security.Principal getPrincipal()> -> _SOURCES_
<org.springframework.scheduling.quartz.SchedulerFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.jdbc.datasource.SingleConnectionDataSource: void setAutoCommit(boolean)> -> _CWE089__SINKS_
<org.springframework.web.context.support.GenericWebApplicationContext: org.springframework.ui.context.Theme getTheme(java.lang.String)> -> _SOURCES_
<org.springframework.security.authentication.UsernamePasswordAuthenticationToken: java.lang.Object getCredentials()> -> _SOURCES__CWE862_
<org.springframework.web.servlet.resource.ResourceHttpRequestHandler: org.springframework.http.converter.ResourceHttpMessageConverter getResourceHttpMessageConverter()> -> _SOURCES_
<org.springframework.core.io.support.PropertiesLoaderUtils: java.util.Properties loadAllProperties(java.lang.String,java.lang.ClassLoader)> -> _SOURCES_
<org.springframework.security.config.http.FormLoginBeanDefinitionParser: org.springframework.beans.factory.support.RootBeanDefinition getFilterBean()> -> _SOURCES_
<org.springframework.remoting.support.UrlBasedRemoteAccessor: void setServiceUrl(java.lang.String)> -> _SINKS_
<org.springframework.jms.config.DefaultJcaListenerContainerFactory: void setDestinationResolver(org.springframework.jms.support.destination.DestinationResolver)> -> _SINKS_
<org.springframework.web.multipart.commons.CommonsMultipartFile: java.io.InputStream getInputStream()> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletRequest: javax.portlet.PortalContext getPortalContext()> -> _SOURCES_
<org.springframework.expression.spel.support.StandardEvaluationContext: java.util.List getPropertyAccessors()> -> _SOURCES_
<org.springframework.test.util.ReflectionTestUtils: void setField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class)> -> _SINKS_
<org.springframework.orm.hibernate5.SessionHolder: org.hibernate.FlushMode getPreviousFlushMode()> -> _SOURCES_
<org.springframework.web.servlet.view.document.AbstractExcelView: void setUrl(java.lang.String)> -> _SINKS_
<org.springframework.core.env.CommandLineArgs: java.util.Set getOptionNames()> -> _SOURCES_
<org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean: void setApplicationContext(org.springframework.context.ApplicationContext)> -> _SINKS_
<org.springframework.core.GenericTypeResolver: java.util.Map getTypeVariableMap(java.lang.Class)> -> _SOURCES_
<org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor: org.springframework.aop.Pointcut getPointcut()> -> _SOURCES_
<org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy: void setDefaultAutoCommit(boolean)> -> _CWE089__SINKS_
<org.springframework.web.servlet.FrameworkServlet: org.springframework.web.context.WebApplicationContext createWebApplicationContext(org.springframework.context.ApplicationContext)> -> _SOURCES_
<org.springframework.mock.web.portlet.MockPortletRequest: javax.portlet.PortletSession getPortletSession()> -> _SOURCES_
<org.springframework.mock.web.MockHttpSession: javax.servlet.ServletContext getServletContext()> -> _SOURCES_
<org.springframework.beans.AbstractNestablePropertyAccessor: java.lang.String getNestedPath()> -> _SOURCES_
<org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.scheduling.config.TaskExecutorFactoryBean: void setPoolSize(java.lang.String)> -> _SINKS_
<org.springframework.expression.common.CompositeStringExpression: org.springframework.core.convert.TypeDescriptor getValueTypeDescriptor(org.springframework.expression.EvaluationContext)> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.SseEmitter: void send(org.springframework.web.servlet.mvc.method.'annotation'.SseEmitter$SseEventBuilder)> -> _SINKS_
<org.springframework.orm.toplink.TopLinkTransactionManager: void setSessionFactory(org.springframework.orm.toplink.SessionFactory)> -> _SINKS_
<org.springframework.instrument.classloading.glassfish.GlassFishLoadTimeWeaver: java.lang.ClassLoader getInstrumentableClassLoader()> -> _SOURCES_
<org.springframework.jms.listener.adapter.MessageListenerAdapter: void setDefaultResponseDestination(javax.jms.Destination)> -> _SINKS_
<org.springframework.ejb.interceptor.SpringBeanAutowiringInterceptor: org.springframework.beans.factory.access.BeanFactoryLocator getBeanFactoryLocator(java.lang.Object)> -> _SOURCES_
<org.springframework.jms.config.AbstractJmsListenerEndpoint: void setId(java.lang.String)> -> _SINKS_
<org.springframework.orm.jdo.support.SpringPersistenceManagerProxyBean: void setJdoDialect(org.springframework.orm.jdo.JdoDialect)> -> _SINKS_
<org.springframework.jms.listener.adapter.MessageListenerAdapter: java.lang.String getSubscriptionName()> -> _SOURCES_
<org.springframework.aop.interceptor.CustomizableTraceInterceptor: java.lang.String replacePlaceholders(java.lang.String,org.aopalliance.intercept.MethodInvocation,java.lang.Object,java.lang.Throwable,long)> -> _SANITIZERS__SINKS_
<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: org.springframework.remoting.jaxrpc.JaxRpcServicePostProcessor[] getServicePostProcessors()> -> _SOURCES_
<org.springframework.messaging.simp.config.AbstractMessageBrokerConfiguration: void setApplicationContext(org.springframework.context.ApplicationContext)> -> _SINKS_
<org.springframework.aop.support.DefaultIntroductionAdvisor: void setOrder(int)> -> _SINKS_
<org.springframework.orm.hibernate5.support.OpenSessionInViewInterceptor: void setSessionFactory(org.hibernate.SessionFactory)> -> _SINKS_
<org.springframework.jms.connection.CachedMessageProducer: int getDeliveryMode()> -> _SOURCES_
<org.springframework.jmx.support.ConnectorServerFactoryBean: void setThreaded(boolean)> -> _SINKS_
<org.springframework.test.context.junit4.rules.SpringClassRule: org.springframework.test.context.TestContextManager getTestContextManager(java.lang.Class)> -> _SOURCES_
<org.springframework.jca.cci.object.EisOperation: void setConnectionFactory(javax.resource.cci.ConnectionFactory)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.context.request.async.WebAsyncManager: void setAsyncWebRequest(org.springframework.web.context.request.async.AsyncWebRequest)> -> _SINKS_
<org.springframework.cglib.core.Block: org.springframework.asm.Label getEnd()> -> _SOURCES_
<org.springframework.expression.spel.ast.OpAnd: boolean getBooleanValue(org.springframework.expression.spel.ExpressionState,org.springframework.expression.spel.ast.SpelNodeImpl)> -> _SOURCES_
<org.springframework.web.bind.EscapedErrors: org.springframework.validation.Errors getSource()> -> _SOURCES_
<org.springframework.transaction.interceptor.TransactionAspectSupport: void setTransactionAttributes(java.util.Properties)> -> _SINKS_
<org.springframework.web.portlet.FrameworkPortlet: void setThreadContextInheritable(boolean)> -> _SINKS_
<org.springframework.expression.spel.SpelEvaluationException: org.springframework.expression.spel.SpelMessage getMessageCode()> -> _SOURCES_
<org.springframework.web.cors.DefaultCorsProcessor: boolean processRequest(org.springframework.web.cors.CorsConfiguration,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)> -> _SINKS_
<org.springframework.web.cors.CorsConfiguration: java.util.List getAllowedOrigins()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.RequestPartMethodArgumentResolver: java.lang.String getPartName(org.springframework.core.MethodParameter,org.springframework.web.bind.'annotation'.RequestPart)> -> _CWE079__SOURCES_
<org.springframework.util.DefaultPropertiesPersister: void load(java.util.Properties,java.io.Reader)> -> _SOURCES_
<org.springframework.test.context.support.DirtiesContextTestExecutionListener: int getOrder()> -> _SOURCES_
<org.springframework.mock.web.MockBodyContent: void print(float)> -> _SINKS_
<org.springframework.web.servlet.tags.form.FormTag: void setEnctype(java.lang.String)> -> _SINKS_
<org.springframework.beans.factory.xml.XmlBeanDefinitionReader: org.springframework.beans.factory.xml.XmlReaderContext createReaderContext(org.springframework.core.io.Resource)> -> _SOURCES_
<org.springframework.jca.cci.object.EisOperation: org.springframework.jca.cci.core.CciTemplate getCciTemplate()> -> _SOURCES_
<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: javax.xml.rpc.ServiceFactory getServiceFactory()> -> _SOURCES_
<org.springframework.web.socket.server.support.WebSocketHandlerMapping: int getPhase()> -> _SOURCES_
<org.springframework.web.servlet.tags.form.SelectTag: java.lang.String getSize()> -> _SOURCES_
<org.springframework.scheduling.concurrent.ScheduledExecutorFactoryBean: void setExposeUnconfigurableExecutor(boolean)> -> _SINKS_
<org.springframework.jms.connection.SingleConnectionFactory: void resetConnection()> -> _CWE306__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.jdbc.support.incrementer.DB2SequenceMaxValueIncrementer: java.lang.String getSequenceQuery()> -> _CWE089__SOURCES_
<org.springframework.remoting.jaxrpc.LocalJaxRpcServiceFactory: void setNamespaceUri(java.lang.String)> -> _SINKS_
<org.springframework.messaging.simp.SimpMessageTypeMessageCondition: java.util.Collection getContent()> -> _SOURCES_
<org.springframework.http.converter.StringHttpMessageConverter: java.lang.Long getContentLength(java.lang.Object,org.springframework.http.MediaType)> -> _SOURCES_
<org.springframework.mock.web.MockBodyContent: void println(float)> -> _SINKS_
<org.springframework.mail.javamail.JavaMailSenderImpl: java.lang.String getDefaultEncoding()> -> _SOURCES_
<org.springframework.web.servlet.view.ContentNegotiatingViewResolver: java.util.List getDefaultViews()> -> _SOURCES_
<org.springframework.context.annotation.AnnotationConfigBeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)> -> _SOURCES_
<org.springframework.aop.framework.ReflectiveMethodInvocation: void setArguments(java.lang.Object[])> -> _SINKS_
<org.springframework.web.client.RestTemplate: void setMessageConverters(java.util.List)> -> _SINKS_
<org.springframework.messaging.MessageHeaders: java.util.UUID getId()> -> _SOURCES_
<org.springframework.context.expression.StandardBeanExpressionResolver: void setExpressionPrefix(java.lang.String)> -> _SINKS_
<org.springframework.scheduling.config.ScheduledTaskRegistrar: void setScheduler(java.lang.Object)> -> _SINKS_
<org.springframework.orm.hibernate4.HibernateTemplate: void setExposeNativeSession(boolean)> -> _SINKS_
<org.springframework.web.servlet.mvc.UrlFilenameViewController: void setPrefix(java.lang.String)> -> _SINKS_
<org.springframework.jdbc.core.JdbcTemplate: int update(java.lang.String,org.springframework.jdbc.core.PreparedStatementSetter)> -> _CWE089__SINKS_
<org.springframework.remoting.caucho.HessianExporter: void setDebug(boolean)> -> _SINKS_
<org.springframework.format.number.AbstractNumberFormatter: java.lang.Number parse(java.lang.String,java.util.Locale)> -> _SINKS_
<org.springframework.remoting.rmi.CodebaseAwareObjectInputStream: java.lang.ClassLoader getFallbackClassLoader()> -> _SOURCES_
<org.springframework.objenesis.instantiator.sun.MagicInstantiator: org.springframework.objenesis.instantiator.ObjectInstantiator getInstantiator()> -> _SOURCES_
<org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver: java.util.List getCustomArgumentResolvers()> -> _SOURCES_
<org.springframework.web.cors.CorsConfiguration: java.lang.Boolean getAllowCredentials()> -> _SOURCES_
<org.springframework.http.converter.json.Jackson2ObjectMapperBuilder: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder findModulesViaServiceLoader(boolean)> -> _SOURCES_
<org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter: java.lang.String getEntityManagerFactoryBeanName()> -> _SOURCES_
<org.springframework.jdbc.support.CustomSQLErrorCodesTranslation: java.lang.Class getExceptionClass()> -> _CWE089__SOURCES_
<org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer: void setResourceLoaderPath(java.lang.String)> -> _SOURCES__SINKS_
<org.springframework.web.socket.sockjs.transport.handler.XhrPollingTransportHandler: org.springframework.web.socket.sockjs.transport.TransportType getTransportType()> -> _SOURCES_
<org.springframework.cglib.proxy.Enhancer: void setCallbackFilter(org.springframework.cglib.proxy.CallbackFilter)> -> _SINKS_
<org.springframework.context.support.AbstractRefreshableApplicationContext: void setAllowCircularReferences(boolean)> -> _SINKS_
<org.springframework.util.AntPathMatcher: void setPathSeparator(java.lang.String)> -> _SINKS_
<org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler: java.lang.String getOperationDescription(java.lang.reflect.Method,java.lang.String)> -> _SOURCES_
<org.springframework.mock.web.MockHttpServletRequest: void setServletPath(java.lang.String)> -> _CWE079__SINKS_
<org.springframework.http.converter.ResourceRegionHttpMessageConverter: void writeInternal(java.lang.Object,java.lang.reflect.Type,org.springframework.http.HttpOutputMessage)> -> _SINKS_
<org.springframework.web.portlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver: void setCustomArgumentResolver(org.springframework.web.bind.support.WebArgumentResolver)> -> _SINKS_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.util.concurrent.ListenableFuture postForEntity(java.lang.String,org.springframework.http.HttpEntity,java.lang.Class,java.lang.Object[])> -> _SINKS_
<org.springframework.security.access.vote.AbstractAccessDecisionManager: void setDecisionVoters(java.util.List)> -> _SINKS_
<org.springframework.transaction.interceptor.MethodMapTransactionAttributeSource: void setBeanClassLoader(java.lang.ClassLoader)> -> _SINKS_
<org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.web.servlet.view.ContentNegotiatingViewResolver: void setContentNegotiationManager(org.springframework.web.accept.ContentNegotiationManager)> -> _SINKS_
<org.springframework.web.portlet.mvc.annotation.AnnotationMethodHandlerAdapter: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.mock.web.portlet.MockStateAwareResponse: java.util.Iterator getRenderParameterNames()> -> _SOURCES__CWE601_
<org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter: org.springframework.web.servlet.ModelAndView invokeHandlerMethod(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)> -> _SINKS_
<org.springframework.security.authentication.AuthenticationTrustResolverImpl: void setAnonymousClass(java.lang.Class)> -> _SINKS_
<org.springframework.format.number.PercentStyleFormatter: java.text.NumberFormat getNumberFormat(java.util.Locale)> -> _SOURCES_
<org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder: org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder content(byte[])> -> _SOURCES_
<org.springframework.jmx.export.metadata.ManagedAttribute: void setPersistPeriod(int)> -> _SINKS_
<org.springframework.jdbc.core.RowCountCallbackHandler: int getRowCount()> -> _CWE089__SOURCES_
<org.springframework.transaction.interceptor.TransactionAspectSupport: org.springframework.transaction.PlatformTransactionManager getTransactionManager()> -> _SOURCES_
<org.springframework.mock.web.MockBodyContent: int getRemaining()> -> _SOURCES_
<org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: org.springframework.validation.MessageCodesResolver getMessageCodesResolver()> -> _SOURCES_
<org.springframework.test.context.support.AbstractGenericContextLoader: void loadBeanDefinitions(org.springframework.context.support.GenericApplicationContext,org.springframework.test.context.MergedContextConfiguration)> -> _SOURCES_
<org.springframework.web.client.RestTemplate: java.lang.Object doExecute(java.net.URI,org.springframework.http.HttpMethod,org.springframework.web.client.RequestCallback,org.springframework.web.client.ResponseExtractor)> -> _CWE078__SINKS_
<org.springframework.messaging.converter.AbstractMessageConverter: org.springframework.util.MimeType getMimeType(org.springframework.messaging.MessageHeaders)> -> _SOURCES_
<org.springframework.orm.jpa.JpaTransactionManager: java.lang.Object getResourceFactory()> -> _SOURCES_
<org.springframework.web.servlet.support.WebContentGenerator: java.lang.String[] getVaryByRequestHeaders()> -> _SOURCES_
<org.springframework.oxm.castor.CastorMarshaller: void setTargetPackages(java.lang.String[])> -> _SINKS_
<org.springframework.web.socket.adapter.jetty.JettyWebSocketSession: org.springframework.http.HttpHeaders getHandshakeHeaders()> -> _SOURCES_
<org.springframework.format.datetime.standard.DateTimeContext: java.time.ZoneId getTimeZone()> -> _SOURCES_
<org.springframework.web.method.support.ModelAndViewContainer: org.springframework.web.bind.support.SessionStatus getSessionStatus()> -> _SOURCES_
<org.springframework.oxm.xstream.XStreamMarshaller: void setConverters(com.thoughtworks.xstream.converters.ConverterMatcher[])> -> _SINKS_
<org.springframework.ejb.access.LocalStatelessSessionProxyFactoryBean: java.lang.Object getObject()> -> _SOURCES_
<org.springframework.messaging.simp.stomp.StompHeaders: long getContentLength()> -> _SOURCES_
<org.springframework.security.config.annotation.web.configurers.UrlAuthorizationConfigurer: org.springframework.security.config.'annotation'.web.configurers.UrlAuthorizationConfigurer$StandardInterceptUrlRegistry getRegistry()> -> _SOURCES_
<org.springframework.core.io.DescriptiveResource: java.io.InputStream getInputStream()> -> _SOURCES_
<org.springframework.web.servlet.mvc.condition.PatternsRequestCondition: java.util.Set getPatterns()> -> _SOURCES_
<org.springframework.test.context.cache.DefaultContextCache: int getMaxSize()> -> _SOURCES_
<org.springframework.aop.interceptor.JamonPerformanceMonitorInterceptor: void setTrackAllInvocations(boolean)> -> _SINKS_
<org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler: java.util.Map getAdapterMap()> -> _SOURCES__CWE601_
<org.springframework.jms.listener.adapter.MessageListenerAdapter: void setMessageConverter(org.springframework.jms.support.converter.MessageConverter)> -> _SINKS_
<org.springframework.jdbc.core.StatementCreatorUtils: void setParameterValue(java.sql.PreparedStatement,int,int,java.lang.String,java.lang.Object)> -> _CWE089__SINKS_
<org.springframework.test.web.client.match.MockRestRequestMatchers: org.springframework.test.web.client.RequestMatcher requestTo(org.hamcrest.Matcher)> -> _SOURCES_
<org.springframework.web.servlet.view.xslt.XsltView: void setErrorListener(javax.xml.transform.ErrorListener)> -> _SINKS_
<org.springframework.core.task.support.TaskExecutorAdapter: void execute(java.lang.Runnable,long)> -> _CWE078__SINKS_
<org.springframework.web.socket.sockjs.transport.TransportHandlingSockJsService: java.util.List getHandshakeInterceptors()> -> _SOURCES_
<org.springframework.jms.connection.DelegatingConnectionFactory: void setTargetConnectionFactory(javax.jms.ConnectionFactory)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.jms.config.DefaultJcaListenerContainerFactory: void setTransactionManager(java.lang.Object)> -> _SINKS_
<org.springframework.messaging.simp.config.MessageBrokerRegistry: org.springframework.messaging.simp.config.MessageBrokerRegistry setApplicationDestinationPrefixes(java.lang.String[])> -> _SINKS_
<org.springframework.scheduling.concurrent.ConcurrentTaskExecutor: java.util.concurrent.Executor getConcurrentExecutor()> -> _SOURCES_
<org.springframework.test.context.support.DefaultBootstrapContext: java.lang.Class getTestClass()> -> _SOURCES_
<org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter: org.springframework.web.bind.ServletRequestDataBinder createBinder(javax.servlet.http.HttpServletRequest,java.lang.Object,java.lang.String)> -> _SOURCES_
<org.springframework.messaging.core.AbstractMessagingTemplate: org.springframework.messaging.Message sendAndReceive(org.springframework.messaging.Message)> -> _SINKS_
<org.springframework.test.web.servlet.result.PrintingResultHandler: org.springframework.util.MultiValueMap getParamsMultiValueMap(org.springframework.mock.web.MockHttpServletRequest)> -> _SOURCES_
<org.springframework.dao.annotation.PersistenceExceptionTranslationAdvisor: org.springframework.aop.Pointcut getPointcut()> -> _SOURCES_
<org.springframework.web.servlet.DispatcherServlet: java.lang.String getRequestUri(javax.servlet.http.HttpServletRequest)> -> _SOURCES_
<org.springframework.orm.hibernate5.support.AsyncRequestInterceptor: boolean handleTimeout(org.springframework.web.context.request.NativeWebRequest,org.springframework.web.context.request.async.DeferredResult)> -> _SINKS_
<org.springframework.web.client.RestTemplate: void delete(java.lang.String,java.lang.Object[])> -> _SINKS_
<org.springframework.beans.factory.xml.DocumentDefaultsDefinition: void setSource(java.lang.Object)> -> _SINKS_
<org.springframework.expression.spel.ast.OpDec: org.springframework.expression.spel.ast.SpelNodeImpl getRightOperand()> -> _SOURCES_
<org.springframework.web.socket.config.annotation.SockJsServiceRegistration: org.springframework.web.socket.config.'annotation'.SockJsServiceRegistration setTransportHandlers(org.springframework.web.socket.sockjs.transport.TransportHandler[])> -> _SINKS_
<org.springframework.web.servlet.handler.AbstractHandlerMapping: void setDefaultHandler(java.lang.Object)> -> _SINKS_
<org.springframework.jdbc.core.ArgumentPreparedStatementSetter: void setValues(java.sql.PreparedStatement)> -> _CWE089__SINKS_
<org.springframework.format.support.FormattingConversionService: java.lang.Class getFieldType(org.springframework.format.Formatter)> -> _SOURCES_
<org.springframework.jms.support.JmsAccessor: javax.jms.Session createSession(javax.jms.Connection)> -> _SOURCES_
<org.springframework.web.context.support.AnnotationConfigWebApplicationContext: void loadBeanDefinitions(org.springframework.beans.factory.support.DefaultListableBeanFactory)> -> _SOURCES_
<org.springframework.messaging.support.MessageBuilder: org.springframework.messaging.support.MessageBuilder setHeaders(org.springframework.messaging.support.MessageHeaderAccessor)> -> _SINKS_
<org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver: void sendServerError(java.lang.Exception,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)> -> _SINKS_
<org.springframework.mock.web.portlet.MockStateAwareResponse: void setEvent(javax.xml.namespace.QName,java.io.Serializable)> -> _SINKS__CWE601_
<org.springframework.jms.connection.JmsTransactionManager: void setConnectionFactory(javax.jms.ConnectionFactory)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.beans.factory.support.ManagedSet: void setMergeEnabled(boolean)> -> _SINKS_
<org.springframework.web.servlet.tags.form.FormTag: java.lang.String getModelAttribute()> -> _SOURCES_
<org.springframework.web.servlet.view.script.ScriptTemplateConfigurer: void setResourceLoaderPath(java.lang.String)> -> _SOURCES__SINKS_
<org.springframework.web.client.RestTemplate: java.lang.Object patchForObject(java.lang.String,java.lang.Object,java.lang.Class,java.util.Map)> -> _SINKS_
<org.springframework.jdbc.object.BatchSqlUpdate: void setTrackRowsAffected(boolean)> -> _CWE089__SINKS_
<org.springframework.core.io.ClassPathResource: java.io.File getFileForLastModifiedCheck()> -> _SOURCES_
<org.springframework.context.annotation.ConfigurationClassParser: org.springframework.context.'annotation'.ImportRegistry getImportRegistry()> -> _SOURCES_
<org.springframework.jdbc.core.metadata.GenericTableMetaDataProvider: void setGeneratedKeysColumnNameArraySupported(boolean)> -> _CWE089__SINKS_
<org.springframework.oxm.jibx.JibxMarshaller: void setIndent(int)> -> _SINKS_
<org.springframework.web.util.UriUtils: java.lang.String encodePathSegment(java.lang.String,java.lang.String)> -> _SANITIZERS_
<org.springframework.mail.javamail.MimeMessageHelper: java.lang.String getDefaultEncoding(javax.mail.internet.MimeMessage)> -> _SOURCES_
<org.springframework.web.portlet.mvc.ParameterizableViewController: void setViewName(java.lang.String)> -> _SINKS_
<org.springframework.jndi.support.SimpleJndiBeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Object[])> -> _SOURCES_
<org.springframework.remoting.jaxrpc.JaxRpcPortClientInterceptor: void setRefreshServiceAfterConnectFailure(boolean)> -> _CWE306__SINKS__CWE862__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.socket.server.standard.ServerEndpointRegistration: void setBeanFactory(org.springframework.beans.factory.BeanFactory)> -> _SINKS_
<org.springframework.scheduling.quartz.SchedulerAccessor: void setCalendars(java.util.Map)> -> _SINKS_
<org.springframework.web.socket.server.standard.ServerEndpointRegistration: javax.websocket.server.ServerEndpointConfig$Configurator getConfigurator()> -> _SOURCES_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.util.concurrent.ListenableFuture exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,org.springframework.core.ParameterizedTypeReference,java.lang.Object[])> -> _SINKS_
<org.springframework.beans.TypeMismatchException: java.lang.Class getRequiredType()> -> _SOURCES_
<org.springframework.web.portlet.handler.PortletModeHandlerMapping: void setPortletModeMap(java.util.Map)> -> _SINKS_
<org.springframework.mock.web.MockServletContext: java.io.InputStream getResourceAsStream(java.lang.String)> -> _SOURCES_
<org.springframework.web.socket.client.WebSocketConnectionManager: java.util.List getSubProtocols()> -> _SOURCES_
<org.springframework.core.env.AbstractEnvironment: void setValueSeparator(java.lang.String)> -> _SINKS_
<org.springframework.web.util.ServletContextPropertyUtils: java.lang.String resolvePlaceholders(java.lang.String,javax.servlet.ServletContext,boolean)> -> _CWE079__SINKS_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSetMetaData: int getColumnDisplaySize(int)> -> _CWE089__SOURCES_
<org.springframework.expression.spel.ast.Operator: java.lang.String getOperatorName()> -> _SOURCES_
<org.springframework.security.task.DelegatingSecurityContextAsyncTaskExecutor: void execute(java.lang.Runnable,long)> -> _CWE078__SINKS_
<org.springframework.beans.factory.support.AbstractBeanDefinition: void setDestroyMethodName(java.lang.String)> -> _SINKS_
<org.springframework.aop.interceptor.DebugInterceptor: long getCount()> -> _SOURCES_
<org.springframework.http.converter.xml.SourceHttpMessageConverter: void setSupportDtd(boolean)> -> _SINKS_
<org.springframework.orm.hibernate3.HibernateTemplate: void load(java.lang.Object,java.io.Serializable)> -> _SOURCES_
<org.springframework.web.socket.server.support.WebSocketHttpRequestHandler: java.util.List getHandshakeInterceptors()> -> _SOURCES_
<org.springframework.web.socket.client.WebSocketConnectionManager: java.lang.String getOrigin()> -> _SOURCES_
<org.springframework.aop.config.AopConfigUtils: java.lang.Class getAspectJAnnotationAutoProxyCreatorClassIfPossible()> -> _SOURCES_
<org.springframework.asm.commons.GeneratorAdapter: java.lang.String[] getInternalNames(org.springframework.asm.Type[])> -> _SOURCES_
<org.springframework.transaction.config.JtaTransactionManagerFactoryBean: java.lang.Class getObjectType()> -> _SOURCES_
<org.springframework.transaction.annotation.SpringTransactionAnnotationParser: org.springframework.transaction.interceptor.TransactionAttribute parseTransactionAnnotation(org.springframework.transaction.'annotation'.Transactional)> -> _SOURCES_
<org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler: void setAttributeSource(org.springframework.jmx.export.metadata.JmxAttributeSource)> -> _SINKS_
<org.springframework.web.servlet.view.tiles3.AbstractSpringPreparerFactory: org.apache.tiles.preparer.ViewPreparer getPreparer(java.lang.String,org.apache.tiles.request.Request)> -> _SOURCES_
<org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry: void setPathMatcher(org.springframework.util.PathMatcher)> -> _SINKS_
<org.springframework.mail.SimpleMailMessage: void setSubject(java.lang.String)> -> _SINKS_
<org.springframework.cglib.transform.AbstractClassLoader: org.springframework.cglib.core.ClassGenerator getGenerator(org.springframework.asm.ClassReader)> -> _SOURCES_
<org.springframework.messaging.handler.HandlerMethod: org.springframework.core.MethodParameter getReturnType()> -> _SOURCES_
<org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: java.lang.String getName()> -> _SOURCES_
<org.springframework.transaction.support.DefaultTransactionDefinition: void setIsolationLevel(int)> -> _SINKS_
<org.springframework.web.socket.config.annotation.SockJsServiceRegistration: org.springframework.web.socket.config.'annotation'.SockJsServiceRegistration setSupressCors(boolean)> -> _SINKS_
<org.springframework.web.util.HierarchicalUriComponents: java.lang.String getQuery()> -> _SOURCES_
<org.springframework.orm.hibernate5.LocalSessionFactoryBean: void setDataSource(javax.sql.DataSource)> -> _CWE089__SINKS_
<org.springframework.web.servlet.view.UrlBasedViewResolver: void setContentType(java.lang.String)> -> _SINKS_
<org.springframework.mock.web.MockPageContext: java.util.Enumeration getAttributeNamesInScope(int)> -> _SOURCES_
<org.springframework.remoting.jaxws.SimpleHttpServerJaxWsServiceExporter: void setBacklog(int)> -> _SINKS_
<org.springframework.orm.jpa.support.AsyncRequestInterceptor: java.lang.Object handleTimeout(org.springframework.web.context.request.NativeWebRequest,java.util.concurrent.Callable)> -> _SINKS_
<org.springframework.mock.web.portlet.MockResourceResponse: void setContentLength(int)> -> _SINKS__CWE601_
<org.springframework.jms.connection.JmsResourceHolder: javax.jms.Session getSession(java.lang.Class,javax.jms.Connection)> -> _SOURCES_
<org.springframework.remoting.support.SimpleHttpServerFactoryBean: void setContexts(java.util.Map)> -> _SINKS_
<org.springframework.web.servlet.FrameworkServlet: java.lang.String getContextConfigLocation()> -> _SOURCES_
<org.springframework.web.client.AsyncRestTemplate: org.springframework.util.concurrent.ListenableFuture headForHeaders(java.net.URI)> -> _SINKS_
<org.springframework.mock.web.portlet.ServletWrappingPortletContext: void log(java.lang.String,java.lang.Throwable)> -> _SINKS_
<org.springframework.web.multipart.support.AbstractMultipartHttpServletRequest: void setMultipartFiles(org.springframework.util.MultiValueMap)> -> _SINKS_
<org.springframework.web.servlet.view.jasperreports.AbstractJasperReportsView: void setHeaders(java.util.Properties)> -> _SINKS_
<org.springframework.jdbc.core.support.JdbcDaoSupport: javax.sql.DataSource getDataSource()> -> _CWE089__SOURCES_
<org.springframework.web.bind.support.ConfigurableWebBindingInitializer: org.springframework.beans.PropertyEditorRegistrar[] getPropertyEditorRegistrars()> -> _SOURCES_
<org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean: void setLocale(java.util.Locale)> -> _SINKS_
<org.springframework.security.access.vote.AuthenticatedVoter: void setAuthenticationTrustResolver(org.springframework.security.authentication.AuthenticationTrustResolver)> -> _CWE306__SINKS__AUTHENTICATIONS_TO_HIGH_
<org.springframework.web.servlet.view.RedirectView: void sendRedirect(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,boolean)> -> _SINKS_
<org.springframework.jdbc.support.CustomSQLExceptionTranslatorRegistry: org.springframework.jdbc.support.CustomSQLExceptionTranslatorRegistry getInstance()> -> _CWE089__SOURCES_
<org.springframework.security.access.intercept.RunAsManagerImpl: void setKey(java.lang.String)> -> _SINKS_
