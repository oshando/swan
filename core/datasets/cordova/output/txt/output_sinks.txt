<org.apache.cordova.Capture: void onActivityResult(int,int,android.content.Intent)> 
<org.apache.cordova.api.LegacyContext: void runOnUiThread(java.lang.Runnable)> 
<org.apache.cordova.CordovaChromeClient: void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater)> 
<org.apache.cordova.InAppBrowser: void sendUpdate(org.json.JSONObject,boolean)> 
<org.apache.cordova.FileTransfer: void upload(java.lang.String,java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext)> 
<org.apache.cordova.FileUploadResult: void setBytesSent(long)> 
<org.apache.cordova.CordovaChromeClient: boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)> 
<org.apache.cordova.FileUploadResult: void setResponse(java.lang.String)> 
<org.apache.cordova.BatteryListener: void updateBatteryInfo(android.content.Intent)> 
<org.apache.cordova.CordovaWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)> 
<org.apache.cordova.api.Plugin: void sendPluginResult(org.apache.cordova.api.PluginResult,java.lang.String)> 
<org.apache.cordova.api.CordovaPlugin: boolean execute(java.lang.String,java.lang.String,org.apache.cordova.api.CallbackContext)> 
<org.apache.cordova.api.CallbackContext: void success(java.lang.String)> 
<org.apache.cordova.Echo: boolean execute(java.lang.String,org.apache.cordova.CordovaArgs,org.apache.cordova.api.CallbackContext)> 
<org.apache.cordova.api.CordovaPlugin: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext)> 
<org.apache.cordova.api.LOG: void setLogLevel(java.lang.String)> 
<org.apache.cordova.CompassListener: void setStatus(int)> 
<org.apache.cordova.CordovaWebViewClient: void doUpdateVisitedHistory(android.webkit.WebView,java.lang.String,boolean)> 
<org.apache.cordova.HttpHandler: org.apache.http.HttpEntity getHttpEntity(java.lang.String)> 
<org.apache.cordova.Globalization: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext)> 
<org.apache.cordova.AudioPlayer: void startRecording(java.lang.String)> 
<org.apache.cordova.NativeToJsMessageQueue: void setPaused(boolean)> 
<org.apache.cordova.FileProgressResult: void setLoaded(long)> 
<org.apache.cordova.DroidGap: void setAuthenticationToken(org.apache.cordova.AuthenticationToken,java.lang.String,java.lang.String)> 
<org.apache.cordova.SplashScreen: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext)> 
<org.apache.cordova.CordovaWebViewClient: void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError)> 
<org.apache.cordova.AudioPlayer: boolean onError(android.media.MediaPlayer,int,int)> 
<org.apache.cordova.NetworkManager: void sendUpdate(java.lang.String)> 
<org.apache.cordova.api.Plugin: void success(java.lang.String,java.lang.String)> 
<org.apache.cordova.AudioHandler: void setAudioOutputDevice(int)> 
<org.apache.cordova.api.PluginEntry: org.apache.cordova.api.CordovaPlugin createPlugin(org.apache.cordova.CordovaWebView,org.apache.cordova.api.CordovaInterface)> 
<org.apache.cordova.api.Plugin: void sendJavascript(java.lang.String)> 
<org.apache.cordova.CameraLauncher: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext)> 
<org.apache.cordova.CordovaWebViewClient: void onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String)> 
<org.apache.cordova.NativeToJsMessageQueue: void setBridgeMode(int)> 
<org.apache.cordova.Storage: void executeSql(java.lang.String,java.lang.String[],java.lang.String)> 
<org.apache.cordova.CordovaWebView: void setWebChromeClient(org.apache.cordova.CordovaChromeClient)> 
<org.apache.cordova.api.Plugin: void success(org.json.JSONObject,java.lang.String)> 
<org.apache.cordova.ContactManager: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext)> 
<org.apache.cordova.AudioPlayer: void setState(org.apache.cordova.AudioPlayer$STATE)> 
<org.apache.cordova.api.LegacyContext: void setActivityResultCallback(org.apache.cordova.api.CordovaPlugin)> 
<org.apache.cordova.GeoBroker: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext)> 
<org.apache.cordova.InAppBrowser: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext)> 
<org.apache.cordova.DroidGap: void setBooleanProperty(java.lang.String,boolean)> 
<org.apache.cordova.HttpHandler: void writeToDisk(org.apache.http.HttpEntity,java.lang.String)> 
<org.apache.cordova.FileUtils: long write(java.lang.String,java.lang.String,int)> 
<org.apache.cordova.GeoBroker: void win(android.location.Location,org.apache.cordova.api.CallbackContext)> 
<org.apache.cordova.AudioHandler: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext)> 
<org.apache.cordova.api.Plugin: void error(org.json.JSONObject,java.lang.String)> 
<org.apache.cordova.FileProgressResult: void setTotal(long)> 
<org.apache.cordova.api.CallbackContext: void success(org.json.JSONObject)> 
<org.apache.cordova.FileUtils: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext)> 
<org.apache.cordova.DroidGap: void setActivityResultCallback(org.apache.cordova.api.CordovaPlugin)> 
<org.apache.cordova.Notification: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext)> 
<org.apache.cordova.BatteryListener: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext)> 
<org.apache.cordova.GeoBroker: void fail(int,java.lang.String,org.apache.cordova.api.CallbackContext)> 
<org.apache.cordova.DroidGap: void setIntegerProperty(java.lang.String,int)> 
<org.apache.cordova.App: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext)> 
<org.apache.cordova.AccelListener: void setStatus(int)> 
<org.apache.cordova.CordovaChromeClient: boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult)> 
<org.apache.cordova.AuthenticationToken: void setUserName(java.lang.String)> 
<org.apache.cordova.CordovaWebViewClient: void setAuthenticationToken(org.apache.cordova.AuthenticationToken,java.lang.String,java.lang.String)> 
<org.apache.cordova.FileUtils: java.lang.String readAsText(java.lang.String,java.lang.String,int,int)> 
<org.apache.cordova.CordovaChromeClient: void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions$Callback)> 
<org.apache.cordova.AudioPlayer: void setVolume(float)> 
<org.apache.cordova.AccelListener: void fail(int,java.lang.String)> 
<org.apache.cordova.api.CallbackContext: void success(byte[])> 
<org.apache.cordova.AccelListener: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext)> 
<org.apache.cordova.api.Plugin: void error(java.lang.String,java.lang.String)> 
<org.apache.cordova.HttpHandler: java.lang.Boolean get(java.lang.String,java.lang.String)> 
<org.apache.cordova.DroidGap: void setDoubleProperty(java.lang.String,double)> 
<org.apache.cordova.FileUploadResult: void setResponseCode(int)> 
<org.apache.cordova.CordovaChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> 
<org.apache.cordova.api.CallbackContext: void error(org.json.JSONObject)> 
<org.apache.cordova.api.Plugin: void success(org.apache.cordova.api.PluginResult,java.lang.String)> 
<org.apache.cordova.CordovaChromeClient: void openFileChooser(android.webkit.ValueCallback,java.lang.String)> 
<org.apache.cordova.DroidGap: void init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient)> 
<org.apache.cordova.CompassListener: void setTimeout(long)> 
<org.apache.cordova.InAppBrowser: java.lang.String updateUrl(java.lang.String)> 
<org.apache.cordova.api.Plugin: void setView(org.apache.cordova.CordovaWebView)> 
<org.apache.cordova.Device: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext)> 
<org.apache.cordova.api.CallbackContext: void error(java.lang.String)> 
<org.apache.cordova.AudioPlayer: void setMode(org.apache.cordova.AudioPlayer$MODE)> 
<org.apache.cordova.api.CallbackContext: void error(int)> 
<org.apache.cordova.FileProgressResult: void setLengthComputable(boolean)> 
<org.apache.cordova.FileUploadResult: void setObjectId(java.lang.String)> 
<org.apache.cordova.FileUtils: long truncateFile(java.lang.String,long)> 
<org.apache.cordova.CameraLauncher: void onActivityResult(int,int,android.content.Intent)> 
<org.apache.cordova.FileTransfer: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext)> 
<org.apache.cordova.ExposedJsApi: void setNativeToJsBridgeMode(int)> 
<org.apache.cordova.AudioHandler: void setVolume(java.lang.String,float)> 
<org.apache.cordova.api.PluginManager: boolean exec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> 
<org.apache.cordova.CordovaWebViewClient: void setWebView(org.apache.cordova.CordovaWebView)> 
<org.apache.cordova.FileTransfer: void download(java.lang.String,java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext)> 
<org.apache.cordova.api.CordovaPlugin: boolean execute(java.lang.String,org.apache.cordova.CordovaArgs,org.apache.cordova.api.CallbackContext)> 
<org.apache.cordova.Capture: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext)> 
<org.apache.cordova.api.Plugin: void setContext(org.apache.cordova.api.CordovaInterface)> 
<org.apache.cordova.api.CallbackContext: void sendPluginResult(org.apache.cordova.api.PluginResult)> 
<org.apache.cordova.CordovaWebView: void sendPluginResult(org.apache.cordova.api.PluginResult,java.lang.String)> 
<org.apache.cordova.NetworkManager: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext)> 
<org.apache.cordova.CordovaChromeClient: boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)> 
<org.apache.cordova.AuthenticationToken: void setPassword(java.lang.String)> 
<org.apache.cordova.api.CallbackContext: void success(org.json.JSONArray)> 
<org.apache.cordova.FileTransfer: void abort(java.lang.String)> 
<org.apache.cordova.FileUtils: java.lang.String readAsDataURL(java.lang.String,int,int)> 
<org.apache.cordova.IceCreamCordovaWebViewClient: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String)> 
<org.apache.cordova.DroidGap: void sendJavascript(java.lang.String)> 
<org.apache.cordova.BatteryListener: void sendUpdate(org.json.JSONObject,boolean)> 
<org.apache.cordova.api.LOG: void setLogLevel(int)> 
<org.apache.cordova.NetworkManager: void updateConnectionInfo(android.net.NetworkInfo)> 
<org.apache.cordova.CompassListener: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext)> 
<org.apache.cordova.DroidGap: void setStringProperty(java.lang.String,java.lang.String)> 
<org.apache.cordova.Storage: void processResults(android.database.Cursor,java.lang.String)> 
<org.apache.cordova.CordovaChromeClient: void setWebView(org.apache.cordova.CordovaWebView)> 
<org.apache.cordova.AudioPlayer: void seekToPlaying(int)> 
<org.apache.cordova.App: void loadUrl(java.lang.String,org.json.JSONObject)> 
<org.apache.cordova.Storage: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext)> 
<org.apache.cordova.CordovaWebView: void setWebViewClient(org.apache.cordova.CordovaWebViewClient)> 
<org.apache.cordova.api.Plugin: boolean execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext)> 
<org.apache.cordova.CordovaWebViewClient: void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String)> 
<org.apache.cordova.api.PluginResult: void setKeepCallback(boolean)> 
<org.apache.cordova.api.Plugin: void error(org.apache.cordova.api.PluginResult,java.lang.String)> 
<org.apache.cordova.CordovaWebView: void sendJavascript(java.lang.String)> 
