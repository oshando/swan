methods none_sources [ 
java.io.InputStream org.apache.cordova.FileUtils.getPathFromUri(java.lang.String); 
org.json.JSONObject org.apache.cordova.Capture.getImageData(java.lang.String,org.json.JSONObject); 
java.lang.String org.apache.cordova.FileUploadResult.getObjectId(); 
long org.apache.cordova.DirectoryManager.getFreeDiskSpace(boolean); 
byte[] org.apache.cordova.ContactAccessorSdk5.getPhotoBytes(java.lang.String); 
java.text.DecimalFormat org.apache.cordova.Globalization.getNumberFormatInstance(org.json.JSONArray); 
android.net.Uri org.apache.cordova.CameraLauncher.getUriFromMediaStore(); 
int org.apache.cordova.ContactAccessorSdk5.getPhoneType(java.lang.String); 
int org.apache.cordova.ExifHelper.getOrientation(); 
org.json.JSONObject org.apache.cordova.FileUtils.getEntry(java.lang.String); 
org.json.JSONObject org.apache.cordova.Globalization.getNumberToString(org.json.JSONArray); 
org.apache.cordova.api.CordovaPlugin org.apache.cordova.api.PluginManager.getPlugin(java.lang.String); 
java.lang.String org.apache.cordova.FileUtils.getMimeType(java.lang.String); 
org.json.JSONObject org.apache.cordova.Globalization.getCurrencyPattern(org.json.JSONArray); 
int org.apache.cordova.ContactAccessorSdk5.getImType(java.lang.String); 
long org.apache.cordova.CompassListener.getTimeout(); 
void org.apache.cordova.GeoBroker.getCurrentLocation(org.apache.cordova.api.CallbackContext,boolean); 
int org.apache.cordova.AudioHandler.getAudioOutputDevice(); 
org.json.JSONObject org.apache.cordova.CompassListener.getCompassHeading(); 
boolean org.apache.cordova.AudioPlayer.readyPlayer(java.lang.String); 
org.json.JSONArray org.apache.cordova.CordovaArgs.getJSONArray(int); 
java.lang.String org.apache.cordova.NetworkManager.getConnectionInfo(android.net.NetworkInfo); 
void org.apache.cordova.DroidGap.loadUrl(java.lang.String,int); 
void org.apache.cordova.FileTransfer.upload(java.lang.String,java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext); 
void org.apache.cordova.CordovaWebView.loadUrlIntoView(java.lang.String); 
boolean org.apache.cordova.InAppBrowser.getShowLocationBar(); 
android.content.res.Resources org.apache.cordova.api.LegacyContext.getResources(); 
void org.apache.cordova.AudioPlayer.loadAudioFile(java.lang.String); 
void org.apache.cordova.CordovaWebView.loadUrl(java.lang.String); 
java.lang.String org.apache.cordova.AuthenticationToken.getPassword(); 
org.apache.cordova.AuthenticationToken org.apache.cordova.CordovaWebViewClient.getAuthenticationToken(java.lang.String,java.lang.String); 
java.lang.String org.apache.cordova.ContactAccessorSdk5.getContactType(int); 
float org.apache.cordova.AudioPlayer.getDuration(java.lang.String); 
org.json.JSONObject org.apache.cordova.Capture.getAudioVideoData(java.lang.String,org.json.JSONObject,boolean); 
int org.apache.cordova.CompassListener.getStatus(); 
org.json.JSONObject org.apache.cordova.AccelListener.getAccelerationJSON(); 
java.lang.Object org.apache.cordova.api.LegacyContext.getSystemService(java.lang.String); 
org.apache.cordova.AuthenticationToken org.apache.cordova.DroidGap.getAuthenticationToken(java.lang.String,java.lang.String); 
java.lang.String org.apache.cordova.Device.getProductName(); 
boolean org.apache.cordova.api.CordovaPlugin.onOverrideUrlLoading(java.lang.String); 
org.json.JSONObject org.apache.cordova.FileUtils.getParent(java.lang.String); 
long org.apache.cordova.CordovaArgs.getLong(int); 
java.lang.Boolean org.apache.cordova.HttpHandler.get(java.lang.String,java.lang.String); 
void org.apache.cordova.CordovaWebView.loadUrlIntoView(java.lang.String,int); 
void org.apache.cordova.CordovaWebView.loadUrlNow(java.lang.String); 
android.graphics.Bitmap org.apache.cordova.CameraLauncher.getScaledBitmap(java.lang.String); 
org.json.JSONObject org.apache.cordova.Globalization.getLocaleName(); 
org.json.JSONObject org.apache.cordova.Globalization.getStringToNumber(org.json.JSONArray); 
java.lang.String org.apache.cordova.api.PluginResult.getStrMessage(); 
double org.apache.cordova.DroidGap.getDoubleProperty(java.lang.String,double); 
org.json.JSONObject org.apache.cordova.Globalization.getStringtoDate(org.json.JSONArray); 
org.json.JSONObject org.apache.cordova.FileUtils.getEntry(java.io.File); 
java.lang.String org.apache.cordova.ContactAccessorSdk5.getPhoneType(int); 
java.lang.String org.apache.cordova.Config.getStartUrl(); 
float org.apache.cordova.AudioPlayer.getDurationInSeconds(); 
android.content.Context org.apache.cordova.api.LegacyContext.getContext(); 
int org.apache.cordova.AudioPlayer.getState(); 
java.io.File org.apache.cordova.FileTransfer.getFileFromPath(java.lang.String); 
java.lang.Class org.apache.cordova.api.PluginEntry.getClassByName(java.lang.String); 
java.lang.String org.apache.cordova.CordovaArgs.getString(int); 
android.app.Activity org.apache.cordova.DroidGap.getActivity(); 
java.io.InputStream org.apache.cordova.FileTransfer.getPathFromUri(java.lang.String); 
float org.apache.cordova.AudioHandler.getCurrentPositionAudio(java.lang.String); 
int org.apache.cordova.DroidGap.getIntegerProperty(java.lang.String,int); 
java.lang.String org.apache.cordova.Device.getTimeZoneID(); 
long org.apache.cordova.FileProgressResult.getTotal(); 
byte[] org.apache.cordova.CordovaArgs.getArrayBuffer(int); 
org.apache.http.HttpEntity org.apache.cordova.HttpHandler.getHttpEntity(java.lang.String); 
double org.apache.cordova.CordovaArgs.getDouble(int); 
long org.apache.cordova.FileUtils.getMetadata(java.lang.String); 
int org.apache.cordova.FileUploadResult.getResponseCode(); 
org.json.JSONObject org.apache.cordova.FileUtils.getFileMetadata(java.lang.String); 
java.lang.String org.apache.cordova.GlobalizationError.getErrorString(); 
org.json.JSONObject org.apache.cordova.ContactAccessorSdk5.getContactById(java.lang.String); 
java.lang.String org.apache.cordova.ContactAccessor.getJsonString(org.json.JSONObject,java.lang.String); 
android.content.pm.PackageManager org.apache.cordova.api.LegacyContext.getPackageManager(); 
long org.apache.cordova.FileProgressResult.getLoaded(); 
java.lang.String org.apache.cordova.api.PluginResult.getJSONString(); 
java.io.InputStream org.apache.cordova.FileTransfer.getInputStream(java.net.HttpURLConnection); 
boolean org.apache.cordova.api.PluginManager.onOverrideUrlLoading(java.lang.String); 
org.json.JSONObject org.apache.cordova.Globalization.getIsDayLightSavingsTime(org.json.JSONArray); 
java.lang.String org.apache.cordova.FileTransfer.getArgument(org.json.JSONArray,int,java.lang.String); 
java.util.concurrent.ExecutorService org.apache.cordova.api.LegacyContext.getThreadPool(); 
boolean org.apache.cordova.NativeToJsMessageQueue.getPaused(); 
org.json.JSONObject org.apache.cordova.Globalization.getDateToString(org.json.JSONArray); 
java.lang.String org.apache.cordova.Device.getUuid(); 
java.util.HashMap org.apache.cordova.InAppBrowser.parseFeature(java.lang.String); 
android.content.SharedPreferences org.apache.cordova.api.LegacyContext.getSharedPreferences(java.lang.String,int); 
java.lang.String org.apache.cordova.Device.getCordovaVersion(); 
java.lang.String org.apache.cordova.Device.getSDKVersion(); 
java.lang.String org.apache.cordova.Device.getModel(); 
int org.apache.cordova.api.PluginResult.getStatus(); 
org.json.JSONObject org.apache.cordova.BatteryListener.getBatteryInfo(android.content.Intent); 
java.lang.String org.apache.cordova.DroidGap.getStringProperty(java.lang.String,java.lang.String); 
android.content.res.AssetManager org.apache.cordova.api.LegacyContext.getAssets(); 
org.json.JSONArray org.apache.cordova.FileUtils.readEntries(java.lang.String); 
boolean org.apache.cordova.FileProgressResult.getLengthComputable(); 
java.lang.String org.apache.cordova.AuthenticationToken.getUserName(); 
java.lang.String org.apache.cordova.CordovaWebView.getProperty(java.lang.String,java.lang.String); 
android.app.Activity org.apache.cordova.api.LegacyContext.getActivity(); 
java.lang.String org.apache.cordova.FileUploadResult.getResponse(); 
org.json.JSONObject org.apache.cordova.Capture.getFormatData(java.lang.String,java.lang.String); 
android.content.Context org.apache.cordova.api.LegacyContext.getApplicationContext(); 
int org.apache.cordova.CordovaArgs.getInt(int); 
android.view.View org.apache.cordova.CordovaChromeClient.getVideoLoadingProgressView(); 
java.lang.String org.apache.cordova.DirectoryManager.getTempDirectoryPath(android.content.Context); 
boolean org.apache.cordova.DroidGap.getBooleanProperty(java.lang.String,boolean); 
void org.apache.cordova.DroidGap.loadUrl(java.lang.String); 
android.content.Context org.apache.cordova.DroidGap.getContext(); 
void org.apache.cordova.CordovaWebView.loadUrl(java.lang.String,int); 
float org.apache.cordova.AudioHandler.getDurationAudio(java.lang.String,java.lang.String); 
long org.apache.cordova.AudioPlayer.getCurrentPosition(); 
int org.apache.cordova.ContactAccessorSdk5.getContactType(java.lang.String); 
float org.apache.cordova.CompassListener.getHeading(); 
java.lang.String org.apache.cordova.Device.getPlatform(); 
java.lang.Object org.apache.cordova.CordovaArgs.get(int); 
java.lang.String org.apache.cordova.ContactAccessorSdk5.getOrgType(int); 
org.json.JSONObject org.apache.cordova.Globalization.getPreferredLanguage(); 
java.lang.String org.apache.cordova.ContactAccessorSdk5.getImType(int); 
org.json.JSONObject org.apache.cordova.Globalization.getDatePattern(org.json.JSONArray); 
boolean org.apache.cordova.CordovaArgs.getBoolean(int); 
void org.apache.cordova.CameraLauncher.getImage(int,int); 
org.json.JSONObject org.apache.cordova.Globalization.getDateNames(org.json.JSONArray); 
org.json.JSONObject org.apache.cordova.FileUtils.getFile(java.lang.String,java.lang.String,org.json.JSONObject,boolean); 
org.apache.cordova.CordovaChromeClient org.apache.cordova.CordovaWebView.getWebChromeClient(); 
void org.apache.cordova.DroidGap.loadSpinner(); 
java.util.concurrent.ExecutorService org.apache.cordova.DroidGap.getThreadPool(); 
java.io.InputStream org.apache.cordova.ContactAccessorSdk5.getPathFromUri(java.lang.String); 
int org.apache.cordova.ContactAccessorSdk5.getAddressType(java.lang.String); 
void org.apache.cordova.CordovaWebView.loadConfiguration(); 
void org.apache.cordova.FileTransfer.download(java.lang.String,java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext); 
int org.apache.cordova.GlobalizationError.getErrorCode(); 
java.lang.Object org.apache.cordova.CordovaArgs.getJSONObject(int); 
long org.apache.cordova.FileUploadResult.getBytesSent(); 
boolean org.apache.cordova.api.PluginResult.getKeepCallback(); 
java.lang.String org.apache.cordova.ContactAccessorSdk5.getAddressType(int); 
java.lang.String org.apache.cordova.FileUtils.getRealPathFromURI(android.net.Uri,org.apache.cordova.api.CordovaInterface); 
java.lang.String org.apache.cordova.NetworkManager.getType(android.net.NetworkInfo); 
java.lang.String org.apache.cordova.api.CallbackContext.getCallbackId(); 
java.lang.String org.apache.cordova.api.PluginResult.getMessage(); 
android.webkit.ValueCallback org.apache.cordova.CordovaChromeClient.getValueCallback(); 
int org.apache.cordova.api.PluginResult.getMessageType(); 
int org.apache.cordova.ContactAccessorSdk5.getOrgType(java.lang.String); 
java.lang.String org.apache.cordova.Device.getOSVersion(); 
android.graphics.Bitmap org.apache.cordova.CameraLauncher.getRotatedBitmap(int,android.graphics.Bitmap,org.apache.cordova.ExifHelper); 
org.json.JSONObject org.apache.cordova.Globalization.getNumberPattern(org.json.JSONArray); 
org.json.JSONObject org.apache.cordova.Globalization.getFirstDayOfWeek(org.json.JSONArray); 
]
methods none_sinks [ 
void org.apache.cordova.NativeToJsMessageQueue.setBridgeMode(int); 
void org.apache.cordova.DroidGap.setIntegerProperty(java.lang.String,int); 
boolean org.apache.cordova.App.execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext); 
void org.apache.cordova.CordovaWebView.sendPluginResult(org.apache.cordova.api.PluginResult,java.lang.String); 
void org.apache.cordova.AccelListener.setStatus(int); 
void org.apache.cordova.Capture.onActivityResult(int,int,android.content.Intent); 
boolean org.apache.cordova.NetworkManager.execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext); 
void org.apache.cordova.api.LegacyContext.runOnUiThread(java.lang.Runnable); 
void org.apache.cordova.Storage.executeSql(java.lang.String,java.lang.String[],java.lang.String); 
void org.apache.cordova.CordovaChromeClient.onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater); 
void org.apache.cordova.CordovaWebView.setWebChromeClient(org.apache.cordova.CordovaChromeClient); 
boolean org.apache.cordova.CordovaChromeClient.onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult); 
void org.apache.cordova.InAppBrowser.sendUpdate(org.json.JSONObject,boolean); 
void org.apache.cordova.api.Plugin.success(org.json.JSONObject,java.lang.String); 
void org.apache.cordova.FileTransfer.upload(java.lang.String,java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext); 
void org.apache.cordova.FileUploadResult.setBytesSent(long); 
void org.apache.cordova.AuthenticationToken.setPassword(java.lang.String); 
boolean org.apache.cordova.CordovaChromeClient.onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult); 
boolean org.apache.cordova.ContactManager.execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext); 
void org.apache.cordova.FileUploadResult.setResponse(java.lang.String); 
boolean org.apache.cordova.CordovaChromeClient.onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult); 
void org.apache.cordova.AudioPlayer.setState(org.apache.cordova.AudioPlayer$STATE); 
void org.apache.cordova.AuthenticationToken.setUserName(java.lang.String); 
void org.apache.cordova.api.LegacyContext.setActivityResultCallback(org.apache.cordova.api.CordovaPlugin); 
void org.apache.cordova.CordovaWebViewClient.setAuthenticationToken(org.apache.cordova.AuthenticationToken,java.lang.String,java.lang.String); 
void org.apache.cordova.BatteryListener.updateBatteryInfo(android.content.Intent); 
java.lang.String org.apache.cordova.FileUtils.readAsText(java.lang.String,java.lang.String,int,int); 
void org.apache.cordova.CordovaWebViewClient.onPageFinished(android.webkit.WebView,java.lang.String); 
void org.apache.cordova.CordovaChromeClient.onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions$Callback); 
void org.apache.cordova.AudioPlayer.setVolume(float); 
boolean org.apache.cordova.GeoBroker.execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext); 
void org.apache.cordova.AccelListener.fail(int,java.lang.String); 
void org.apache.cordova.api.CallbackContext.success(byte[]); 
void org.apache.cordova.api.Plugin.sendPluginResult(org.apache.cordova.api.PluginResult,java.lang.String); 
boolean org.apache.cordova.AccelListener.execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext); 
boolean org.apache.cordova.InAppBrowser.execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext); 
void org.apache.cordova.api.Plugin.error(java.lang.String,java.lang.String); 
java.lang.Boolean org.apache.cordova.HttpHandler.get(java.lang.String,java.lang.String); 
boolean org.apache.cordova.api.CordovaPlugin.execute(java.lang.String,java.lang.String,org.apache.cordova.api.CallbackContext); 
void org.apache.cordova.api.CallbackContext.success(org.json.JSONArray); 
void org.apache.cordova.FileTransfer.abort(java.lang.String); 
void org.apache.cordova.DroidGap.setDoubleProperty(java.lang.String,double); 
java.lang.String org.apache.cordova.FileUtils.readAsDataURL(java.lang.String,int,int); 
void org.apache.cordova.FileUploadResult.setResponseCode(int); 
void org.apache.cordova.api.CallbackContext.success(java.lang.String); 
android.webkit.WebResourceResponse org.apache.cordova.IceCreamCordovaWebViewClient.shouldInterceptRequest(android.webkit.WebView,java.lang.String); 
boolean org.apache.cordova.CordovaChromeClient.onConsoleMessage(android.webkit.ConsoleMessage); 
void org.apache.cordova.DroidGap.setBooleanProperty(java.lang.String,boolean); 
void org.apache.cordova.HttpHandler.writeToDisk(org.apache.http.HttpEntity,java.lang.String); 
void org.apache.cordova.api.CallbackContext.error(org.json.JSONObject); 
void org.apache.cordova.api.Plugin.success(org.apache.cordova.api.PluginResult,java.lang.String); 
boolean org.apache.cordova.Echo.execute(java.lang.String,org.apache.cordova.CordovaArgs,org.apache.cordova.api.CallbackContext); 
void org.apache.cordova.CordovaChromeClient.openFileChooser(android.webkit.ValueCallback,java.lang.String); 
boolean org.apache.cordova.api.CordovaPlugin.execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext); 
void org.apache.cordova.DroidGap.sendJavascript(java.lang.String); 
void org.apache.cordova.api.LOG.setLogLevel(java.lang.String); 
void org.apache.cordova.CompassListener.setStatus(int); 
void org.apache.cordova.CordovaWebViewClient.doUpdateVisitedHistory(android.webkit.WebView,java.lang.String,boolean); 
org.apache.http.HttpEntity org.apache.cordova.HttpHandler.getHttpEntity(java.lang.String); 
long org.apache.cordova.FileUtils.write(java.lang.String,java.lang.String,int); 
void org.apache.cordova.BatteryListener.sendUpdate(org.json.JSONObject,boolean); 
void org.apache.cordova.GeoBroker.win(android.location.Location,org.apache.cordova.api.CallbackContext); 
void org.apache.cordova.api.LOG.setLogLevel(int); 
void org.apache.cordova.NetworkManager.updateConnectionInfo(android.net.NetworkInfo); 
void org.apache.cordova.DroidGap.init(org.apache.cordova.CordovaWebView,org.apache.cordova.CordovaWebViewClient,org.apache.cordova.CordovaChromeClient); 
void org.apache.cordova.CompassListener.setTimeout(long); 
java.lang.String org.apache.cordova.InAppBrowser.updateUrl(java.lang.String); 
boolean org.apache.cordova.Globalization.execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext); 
void org.apache.cordova.api.Plugin.setView(org.apache.cordova.CordovaWebView); 
boolean org.apache.cordova.AudioHandler.execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext); 
void org.apache.cordova.AudioPlayer.startRecording(java.lang.String); 
boolean org.apache.cordova.CompassListener.execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext); 
boolean org.apache.cordova.Device.execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext); 
void org.apache.cordova.DroidGap.setStringProperty(java.lang.String,java.lang.String); 
void org.apache.cordova.NativeToJsMessageQueue.setPaused(boolean); 
void org.apache.cordova.Storage.processResults(android.database.Cursor,java.lang.String); 
void org.apache.cordova.api.CallbackContext.error(java.lang.String); 
void org.apache.cordova.AudioPlayer.setMode(org.apache.cordova.AudioPlayer$MODE); 
void org.apache.cordova.api.CallbackContext.error(int); 
void org.apache.cordova.FileProgressResult.setLengthComputable(boolean); 
void org.apache.cordova.FileUploadResult.setObjectId(java.lang.String); 
long org.apache.cordova.FileUtils.truncateFile(java.lang.String,long); 
void org.apache.cordova.CordovaChromeClient.setWebView(org.apache.cordova.CordovaWebView); 
void org.apache.cordova.api.Plugin.error(org.json.JSONObject,java.lang.String); 
void org.apache.cordova.CameraLauncher.onActivityResult(int,int,android.content.Intent); 
void org.apache.cordova.AudioPlayer.seekToPlaying(int); 
void org.apache.cordova.FileProgressResult.setLoaded(long); 
boolean org.apache.cordova.FileTransfer.execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext); 
void org.apache.cordova.ExposedJsApi.setNativeToJsBridgeMode(int); 
void org.apache.cordova.App.loadUrl(java.lang.String,org.json.JSONObject); 
void org.apache.cordova.DroidGap.setAuthenticationToken(org.apache.cordova.AuthenticationToken,java.lang.String,java.lang.String); 
boolean org.apache.cordova.SplashScreen.execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext); 
void org.apache.cordova.AudioHandler.setVolume(java.lang.String,float); 
void org.apache.cordova.CordovaWebViewClient.onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError); 
boolean org.apache.cordova.Storage.execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext); 
boolean org.apache.cordova.AudioPlayer.onError(android.media.MediaPlayer,int,int); 
void org.apache.cordova.FileProgressResult.setTotal(long); 
void org.apache.cordova.api.CallbackContext.success(org.json.JSONObject); 
void org.apache.cordova.NetworkManager.sendUpdate(java.lang.String); 
boolean org.apache.cordova.api.PluginManager.exec(java.lang.String,java.lang.String,java.lang.String,java.lang.String); 
void org.apache.cordova.CordovaWebViewClient.setWebView(org.apache.cordova.CordovaWebView); 
void org.apache.cordova.CordovaWebView.setWebViewClient(org.apache.cordova.CordovaWebViewClient); 
boolean org.apache.cordova.FileUtils.execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext); 
boolean org.apache.cordova.api.Plugin.execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext); 
void org.apache.cordova.FileTransfer.download(java.lang.String,java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext); 
void org.apache.cordova.api.Plugin.success(java.lang.String,java.lang.String); 
void org.apache.cordova.AudioHandler.setAudioOutputDevice(int); 
void org.apache.cordova.DroidGap.setActivityResultCallback(org.apache.cordova.api.CordovaPlugin); 
boolean org.apache.cordova.api.CordovaPlugin.execute(java.lang.String,org.apache.cordova.CordovaArgs,org.apache.cordova.api.CallbackContext); 
void org.apache.cordova.CordovaWebViewClient.onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String); 
org.apache.cordova.api.CordovaPlugin org.apache.cordova.api.PluginEntry.createPlugin(org.apache.cordova.CordovaWebView,org.apache.cordova.api.CordovaInterface); 
void org.apache.cordova.api.Plugin.sendJavascript(java.lang.String); 
boolean org.apache.cordova.Capture.execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext); 
boolean org.apache.cordova.Notification.execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext); 
boolean org.apache.cordova.CameraLauncher.execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext); 
void org.apache.cordova.api.Plugin.setContext(org.apache.cordova.api.CordovaInterface); 
void org.apache.cordova.api.PluginResult.setKeepCallback(boolean); 
void org.apache.cordova.api.Plugin.error(org.apache.cordova.api.PluginResult,java.lang.String); 
void org.apache.cordova.CordovaWebViewClient.onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String); 
boolean org.apache.cordova.BatteryListener.execute(java.lang.String,org.json.JSONArray,org.apache.cordova.api.CallbackContext); 
void org.apache.cordova.GeoBroker.fail(int,java.lang.String,org.apache.cordova.api.CallbackContext); 
void org.apache.cordova.CordovaWebView.sendJavascript(java.lang.String); 
void org.apache.cordova.api.CallbackContext.sendPluginResult(org.apache.cordova.api.PluginResult); 
]
methods none_authentications_to_high [ 
void org.apache.cordova.CordovaWebViewClient.clearAuthenticationTokens(); 
org.apache.cordova.AuthenticationToken org.apache.cordova.CordovaWebViewClient.getAuthenticationToken(java.lang.String,java.lang.String); 
void org.apache.cordova.CordovaWebViewClient.setAuthenticationToken(org.apache.cordova.AuthenticationToken,java.lang.String,java.lang.String); 
org.apache.cordova.AuthenticationToken org.apache.cordova.DroidGap.removeAuthenticationToken(java.lang.String,java.lang.String); 
org.apache.cordova.AuthenticationToken org.apache.cordova.DroidGap.getAuthenticationToken(java.lang.String,java.lang.String); 
void org.apache.cordova.DroidGap.clearAuthenticationTokens(); 
void org.apache.cordova.NetworkManager.updateConnectionInfo(android.net.NetworkInfo); 
org.apache.cordova.AuthenticationToken org.apache.cordova.CordovaWebViewClient.removeAuthenticationToken(java.lang.String,java.lang.String); 
void org.apache.cordova.DroidGap.setAuthenticationToken(org.apache.cordova.AuthenticationToken,java.lang.String,java.lang.String); 
]
methods none_authentications_to_low [ 
]
methods none_authentications_neutral [ 
java.lang.String org.apache.cordova.NetworkManager.getConnectionInfo(android.net.NetworkInfo); 
]
methods none_sanitizers [ 
java.lang.String org.apache.cordova.NativeToJsMessageQueue.popAndEncodeAsJs(); 
java.lang.String org.apache.cordova.FileUtils.stripFileProtocol(java.lang.String); 
java.lang.String org.apache.cordova.NativeToJsMessageQueue.popAndEncode(); 
]
methods none_none [ 
]
