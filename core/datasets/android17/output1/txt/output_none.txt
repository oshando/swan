<android.content.pm.PackageItemInfo: void dumpBack(android.util.Printer,java.lang.String)> ->_NONE_
<android.text.style.StyleSpan: int getSpanTypeId()> ->_NONE_
<android.widget.TableRow: int getNextLocationOffset(android.view.View)> ->_NONE_
<android.content.res.AssetFileDescriptor: long getLength()> ->_NONE_
<android.webkit.UrlInterceptRegistry: java.util.LinkedList getHandlers()> ->_NONE_
<org.apache.xpath.axes.PredicatedNodeTest: int getProximityPosition()> ->_NONE_
<android.content.SyncStorageEngine: void handleMessage(android.os.Message)> ->_NONE_
<android.app.BackStackRecord: android.app.FragmentTransaction setCustomAnimations(int,int)> ->_NONE_
<android.text.format.DateFormat: char[] getDateFormatOrder(android.content.Context)> ->_NONE_
<org.apache.xml.serializer.ToSAXHandler: void setContentHandler(org.xml.sax.ContentHandler)> ->_NONE_
<android.net.wifi.WifiStateMachine: boolean syncEnableNetwork(com.android.internal.util.AsyncChannel,int,boolean)> ->_NONE_
<org.apache.harmony.security.fortress.Engine: java.lang.Object getInstance(java.lang.String,java.security.Provider,java.lang.Object)> ->_NONE_
<java.text.Bidi: int getBaseLevel()> ->_NONE_
<android.support.v4.content.AsyncTaskLoader: void onForceLoad()> ->_NONE_
<gov.nist.javax.sip.address.SipUri: java.lang.String getScheme()> ->_NONE_
<android.net.wifi.p2p.WifiP2pWfdInfo: int getControlPort()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol: void setSession(org.apache.harmony.xnet.provider.jsse.SSLSessionImpl)> ->_NONE_
<android.webkit.Plugin: void setClickHandler(android.webkit.Plugin$PreferencesClickHandler)> ->_NONE_
<android.appwidget.AppWidgetManager: android.appwidget.AppWidgetManager getInstance(android.content.Context)> ->_NONE_
<android.webkit.WebViewClassic: void replaceTextfieldText(int,int,java.lang.String,int,int)> ->_NONE_
<java.text.BreakIterator: java.text.BreakIterator getSentenceInstance(java.util.Locale)> ->_NONE_
<android.widget.TextView: int getExtendedPaddingBottom()> ->_NONE_
<android.speech.tts.TtsEngines: android.speech.tts.TextToSpeech$EngineInfo getEngineInfo(android.content.pm.ResolveInfo,android.content.pm.PackageManager)> ->_NONE_
<org.apache.xalan.templates.ElemTextLiteral: void execute(org.apache.xalan.transformer.TransformerImpl)> ->_NONE_
<java.nio.DirectByteBuffer: short getShort()> ->_NONE_
<android.graphics.Canvas: void setDensity(int)> ->_NONE_
<net.oauth.OAuthMessage: java.util.List getHeaders()> ->_NONE_
<android.view.textservice.SuggestionsInfo: int getSuggestionsCount()> ->_NONE_
<org.apache.james.mime4j.field.datetime.parser.ParseException: java.lang.String add_escapes(java.lang.String)> ->_NONE_
<org.apache.james.mime4j.field.datetime.DateTime: int getHour()> ->_NONE_
<android.view.GLES20DisplayList: void setRotationY(float)> ->_NONE_
<android.view.GLES20DisplayList: void setRotationX(float)> ->_NONE_
<org.jivesoftware.smackx.packet.MUCUser: void setItem(org.jivesoftware.smackx.packet.MUCUser$Item)> ->_NONE_
<org.apache.http.impl.conn.LoggingSessionOutputBuffer: void write(byte[])> ->_NONE_
<java.nio.MappedByteBufferAdapter: double getDouble(int)> ->_NONE_
<org.ccil.cowan.tagsoup.XMLWriter: void write(char)> ->_NONE_
<javax.obex.ClientSession: javax.obex.HeaderSet setPath(javax.obex.HeaderSet,boolean,boolean)> ->_NONE_
<org.xml.sax.helpers.AttributesImpl: void setLocalName(int,java.lang.String)> ->_NONE_
<android.opengl.GLLogWrapper: java.lang.String getIntegerStateName(int)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: org.w3c.dom.Node getLastChild()> ->_NONE_
<android.accounts.AccountManager: void updateAppPermission(android.accounts.Account,java.lang.String,int,boolean)> ->_NONE_
<android.view.Surface: void setLayerStack(int)> ->_NONE_
<android.content.ContextWrapper: void sendStickyBroadcast(android.content.Intent)> ->_NONE_
<android.filterfw.core.FilterFunction: void setInputValue(java.lang.String,java.lang.Object)> ->_NONE_
<android.view.Window: void setContainer(android.view.Window)> ->_NONE_
<android.net.LinkSocket: void setTrackedCapabilities(java.util.Set)> ->_NONE_
<android.media.AudioManager: void setVibrateSetting(int,int)> ->_NONE_
<android.webkit.HTML5VideoView: boolean getReadyToUseSurfTex()> ->_NONE_
<org.apache.james.mime4j.message.Entity: java.lang.String getContentTransferEncoding()> ->_NONE_
<android.graphics.drawable.LayerDrawable: boolean setVisible(boolean,boolean)> ->_NONE_
<org.apache.xml.serializer.SerializerBase: void unparsedEntityDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CRLImpl: byte[] getTBSCertList()> ->_NONE_
<android.app.admin.DeviceAdminInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)> ->_NONE_
<java.nio.DatagramChannelImpl: java.nio.channels.DatagramChannel connect(java.net.SocketAddress)> ->_NONE_
<org.jivesoftware.smack.ConnectionConfiguration: java.lang.String getServiceName()> ->_NONE_
<android.util.FloatProperty: void set(java.lang.Object,java.lang.Object)> ->_NONE_
<org.apache.xml.utils.Context2: void setParent(org.apache.xml.utils.Context2)> ->_NONE_
<android.content.Intent: android.os.IBinder getIBinderExtra(java.lang.String)> ->_NONE_
<android.net.wifi.WifiManager: java.lang.String getConfigFile()> ->_NONE_
<android.view.KeyCharacterMap: android.view.KeyEvent[] getEvents(char[])> ->_NONE_
<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageArchiveInfo(java.lang.String,int)> ->_NONE_
<java.text.FieldPosition: void setEndIndex(int)> ->_NONE_
<java.security.cert.PKIXParameters: java.security.cert.CertSelector getTargetCertConstraints()> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: void setOrganization(java.lang.String)> ->_NONE_
<android.webkit.WebSettingsClassic: void setPluginState(android.webkit.WebSettings$PluginState)> ->_NONE_
<java.lang.ThreadGroup: void setMaxPriority(int)> ->_NONE_
<org.apache.xml.utils.URI: void setUserinfo(java.lang.String)> ->_NONE_
<android.telephony.TelephonyManager: int getCdmaEriIconIndex()> ->_NONE_
<android.support.v4.app.DialogFragment: void setStyle(int,int)> ->_NONE_
<org.apache.xml.utils.ObjectVector: void setElementAt(java.lang.Object,int)> ->_NONE_
<org.apache.http.client.params.ClientParamBean: void setHandleAuthentication(boolean)> ->_NONE_
<android.webkit.WebSettingsClassic: java.lang.String getPluginsPath()> ->_NONE_
<javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.security.Provider)> ->_NONE_
<android.filterpacks.imageproc.BlendFilter: android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)> ->_NONE_
<java.lang.reflect.Method: java.lang.Class getDeclaringClass()> ->_NONE_
<android.os.TokenWatcher: void cleanup(android.os.IBinder,boolean)> ->_NONE_
<android.hardware.usb.UsbEndpoint: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.webkit.WebView: java.lang.String getOriginalUrl()> ->_NONE_
<org.apache.xml.serializer.ToStream: void setIndentAmount(int)> ->_NONE_
<javax.xml.namespace.QName: java.lang.String getNamespaceURI()> ->_NONE_
<java.net.Socket: int getSendBufferSize()> ->_NONE_
<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost getProxyHost()> ->_NONE_
<android.os.ServiceManagerProxy: void setPermissionController(android.os.IPermissionController)> ->_NONE_
<android.widget.AutoCompleteTextView: void setDropDownHorizontalOffset(int)> ->_NONE_
<org.apache.james.mime4j.field.ContentTypeField: java.lang.String getCharset()> ->_NONE_
<org.apache.xml.serializer.utils.AttList: java.lang.String getValue(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: boolean getEnableSessionCreation()> ->_NONE_
<android.os.ResultReceiver: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: void setContentLanguage(javax.sip.header.ContentLanguageHeader)> ->_NONE_
<javax.xml.parsers.SAXParserFactory: void setNamespaceAware(boolean)> ->_NONE_
<android.telephony.SignalStrength: int getGsmDbm()> ->_NONE_
<org.jivesoftware.smack.RosterEntry: void updateState(java.lang.String,org.jivesoftware.smack.packet.RosterPacket$ItemType,org.jivesoftware.smack.packet.RosterPacket$ItemStatus)> ->_NONE_
<android.preference.ListPreference: void setValue(java.lang.String)> ->_NONE_
<android.view.KeyEvent: int getMaxKeyCode()> ->_NONE_
<android.telephony.ServiceState: void setCdmaDefaultRoamingIndicator(int)> ->_NONE_
<android.net.http.AndroidHttpClientConnection: void sendRequestHeader(org.apache.http.HttpRequest)> ->_NONE_
<android.view.MotionEvent: float getToolMajor(int)> ->_NONE_
<org.apache.xalan.templates.ElemNumber: void setLang(org.apache.xalan.templates.AVT)> ->_NONE_
<org.apache.xml.utils.UnImplNode: org.w3c.dom.Node getFirstChild()> ->_NONE_
<org.jivesoftware.smack.RosterEntry: java.lang.String getDisplayName(boolean)> ->_NONE_
<java.io.PipedInputStream: int read(byte[],int,int)> ->_NONE_
<org.apache.xalan.processor.XSLTSchema: java.util.Hashtable getElemsAvailable()> ->_NONE_
<org.apache.xalan.templates.ElemNumber: void getFormattedNumber(org.apache.xalan.transformer.TransformerImpl,int,char,int,long,org.apache.xml.utils.FastStringBuffer)> ->_NONE_
<org.jivesoftware.smack.util.StringUtils: java.lang.String encodeBase64(java.lang.String)> ->_NONE_
<android.view.Window: void setWindowManager(android.view.WindowManager,android.os.IBinder,java.lang.String)> ->_NONE_
<org.apache.xpath.axes.WalkerFactory: int getStepCount(int)> ->_NONE_
<gov.nist.javax.sip.DialogFilter: void sendCallOrTransactionDoesNotExistResponse(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.SIPServerTransaction)> ->_NONE_
<org.apache.xml.serializer.SecuritySupport: java.lang.ClassLoader getContextClassLoader()> ->_NONE_
<android.widget.TextView: int getHighlightColor()> ->_NONE_
<java.nio.charset.CharsetEncoderICU: void setPosition(java.nio.CharBuffer)> ->_NONE_
<android.nfc.tech.Ndef: android.nfc.Tag getTag()> ->_NONE_
<org.apache.xpath.functions.FuncTranslate: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<android.widget.PopupMenu: void setOnDismissListener(android.widget.PopupMenu$OnDismissListener)> ->_NONE_
<javax.crypto.EncryptedPrivateKeyInfo: byte[] getEncoded()> ->_NONE_
<android.view.accessibility.AccessibilityInteractionClient: void setFindAccessibilityNodeInfosResult(java.util.List,int)> ->_NONE_
<android.drm.DrmInfoRequest: java.lang.String getMimeType()> ->_NONE_
<org.apache.xalan.templates.ElemApplyTemplates: void setIsDefaultTemplate(boolean)> ->_NONE_
<org.apache.xalan.transformer.TransformerIdentityImpl: void setURIResolver(javax.xml.transform.URIResolver)> ->_NONE_
<android.os.CommonTimeConfig: int setNetworkBinding(java.lang.String)> ->_NONE_
<org.apache.http.client.protocol.ClientContextConfigurer: void setCookieSpecRegistry(org.apache.http.cookie.CookieSpecRegistry)> ->_NONE_
<java.io.FilterOutputStream: void write(byte[])> ->_NONE_
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getApplicationIcon(java.lang.String)> ->_NONE_
<android.os.Environment: java.io.File getLegacyExternalStorageObbDirectory()> ->_NONE_
<android.app.ActivityManagerProxy: void removeContentProvider(android.os.IBinder,boolean)> ->_NONE_
<android.graphics.SurfaceTexture: long getTimestamp()> ->_NONE_
<org.apache.http.impl.auth.BasicScheme: boolean isConnectionBased()> ->_NONE_
<android.net.TrafficStats: void setThreadStatsUid(int)> ->_NONE_
<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)> ->_NONE_
<gov.nist.javax.sip.header.ims.AddressHeaderIms: javax.sip.address.Address getAddress()> ->_NONE_
<gov.nist.javax.sip.header.Indentation: int getCount()> ->_NONE_
<android.app.Activity: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)> ->_NONE_
<android.webkit.WebSettings: void setPluginsEnabled(boolean)> ->_NONE_
<android.telephony.SmsMessage: int getStatus()> ->_NONE_
<android.emoji.EmojiFactory: android.graphics.Bitmap getBitmapFromVendorSpecificPua(int)> ->_NONE_
<android.app.ApplicationThreadProxy: void bindApplication(java.lang.String,android.content.pm.ApplicationInfo,java.util.List,android.content.ComponentName,java.lang.String,android.os.ParcelFileDescriptor,boolean,android.os.Bundle,android.app.IInstrumentationWatcher,int,boolean,boolean,boolean,android.content.res.Configuration,android.content.res.CompatibilityInfo,java.util.Map,android.os.Bundle)> ->_NONE_
<android.widget.CursorTreeAdapter: int getGroupCount()> ->_NONE_
<android.app.SearchableInfo: int getImeOptions()> ->_NONE_
<android.view.textservice.SpellCheckerInfo: android.content.pm.ServiceInfo getServiceInfo()> ->_NONE_
<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothClass getBluetoothClass()> ->_NONE_
<org.apache.xalan.templates.ElemMessage: java.lang.String getNodeName()> ->_NONE_
<android.app.ApplicationLoaders: java.lang.ClassLoader getClassLoader(java.lang.String,java.lang.String,java.lang.ClassLoader)> ->_NONE_
<android.webkit.WebViewCore: void sendStaticMessage(int,java.lang.Object)> ->_NONE_
<org.apache.xml.serializer.WriterToUTF8Buffered: java.io.Writer getWriter()> ->_NONE_
<android.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle,android.os.UserHandle)> ->_NONE_
<java.io.InputStream: int read(byte[],int,int)> ->_NONE_
<android.telephony.CellSignalStrengthCdma: int getEvdoEcio()> ->_NONE_
<org.apache.harmony.xml.ExpatAttributes: int getIndex(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.http.params.DefaultedHttpParams: java.lang.Object getParameter(java.lang.String)> ->_NONE_
<android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics,android.content.res.CompatibilityInfo)> ->_NONE_
<android.graphics.Bitmap: int getScaledWidth(android.graphics.Canvas)> ->_NONE_
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader getContextClassLoader()> ->_NONE_
<android.app.FragmentManagerImpl: boolean popBackStackImmediate(java.lang.String,int)> ->_NONE_
<android.media.audiofx.Equalizer: short getBand(int)> ->_NONE_
<gov.nist.javax.sip.parser.ims.PMediaAuthorizationParser: gov.nist.javax.sip.header.SIPHeader parse()> ->_NONE_
<android.graphics.Paint: android.graphics.PathEffect getPathEffect()> ->_NONE_
<gov.nist.javax.sip.header.SIPIfMatch: java.lang.String getETag()> ->_NONE_
<org.apache.harmony.security.asn1.BerInputStream: int getLength()> ->_NONE_
<android.support.v4.view.PagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)> ->_NONE_
<android.support.v4.util.SparseArrayCompat: java.lang.Object get(int)> ->_NONE_
<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPRequest createSIPRequest(gov.nist.javax.sip.header.RequestLine,boolean)> ->_NONE_
<dalvik.system.DexFile: java.lang.Class loadClassBinaryName(java.lang.String,java.lang.ClassLoader)> ->_NONE_
<gov.nist.javax.sip.header.CSeq: java.lang.StringBuffer encodeBody(java.lang.StringBuffer)> ->_NONE_
<android.test.mock.MockContext: java.io.File getFileStreamPath(java.lang.String)> ->_NONE_
<org.apache.http.impl.conn.AbstractClientConnAdapter: void setIdleDuration(long,java.util.concurrent.TimeUnit)> ->_NONE_
<android.os.Environment: java.io.File getRootDirectory()> ->_NONE_
<gov.nist.javax.sip.header.ContentLength: int getContentLength()> ->_NONE_
<android.view.animation.Transformation: int getTransformationType()> ->_NONE_
<android.widget.EditText: android.text.method.MovementMethod getDefaultMovementMethod()> ->_NONE_
<org.apache.http.params.HttpConnectionParams: void setSocketBufferSize(org.apache.http.params.HttpParams,int)> ->_NONE_
<java.nio.CharToByteBufferAdapter: java.nio.CharBuffer get(char[],int,int)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: void setStylesheet(org.apache.xalan.templates.StylesheetRoot)> ->_NONE_
<jp.co.omronsoft.openwnn.JAJP.DefaultSoftKeyboardJAJP: java.util.HashMap getReplaceTable()> ->_NONE_
<org.apache.harmony.security.fortress.Services: java.security.Provider$Service getSecureRandomService()> ->_NONE_
<org.apache.xml.serializer.SerializerBase: java.lang.String getVersion()> ->_NONE_
<android.widget.CursorAdapter: android.widget.Filter getFilter()> ->_NONE_
<android.mtp.MtpDeviceInfo: java.lang.String getSerialNumber()> ->_NONE_
<android.speech.tts.TextToSpeech: java.lang.String getCurrentEngine()> ->_NONE_
<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()> ->_NONE_
<java.io.FilterInputStream: int read()> ->_NONE_
<android.media.videoeditor.MediaItem: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings getClipSettings()> ->_NONE_
<android.net.wifi.p2p.WifiP2pGroup: void setPassphrase(java.lang.String)> ->_NONE_
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script$KernelID getKernelIDDst()> ->_NONE_
<android.content.ContentProviderClient: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)> ->_NONE_
<android.view.accessibility.AccessibilityRecord: void setPassword(boolean)> ->_NONE_
<javax.xml.parsers.DocumentBuilder: javax.xml.validation.Schema getSchema()> ->_NONE_
<org.apache.xalan.templates.ElemTextLiteral: int getXSLToken()> ->_NONE_
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)> ->_NONE_
<android.media.AudioService: int abandonAudioFocus(android.media.IAudioFocusDispatcher,java.lang.String)> ->_NONE_
<libcore.net.http.HttpConnectionPool: libcore.net.http.HttpConnection get(libcore.net.http.HttpConnection$Address,int)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: java.lang.String getDocumentEncoding(int)> ->_NONE_
<android.view.View: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)> ->_NONE_
<android.app.TabActivity: void setDefaultTab(java.lang.String)> ->_NONE_
<android.view.View: android.graphics.Bitmap getDrawingCache(boolean)> ->_NONE_
<android.media.videoeditor.AudioTrack: java.lang.String getId()> ->_NONE_
<android.view.View: void setPaddingRelative(int,int,int,int)> ->_NONE_
<org.apache.xpath.XPathContext: org.apache.xpath.VariableStack getVarStack()> ->_NONE_
<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])> ->_NONE_
<android.opengl.GLLogWrapper: java.lang.String getPointerTypeName(int)> ->_NONE_
<android.app.backup.SharedPreferencesBackupHelper: void restoreEntity(android.app.backup.BackupDataInputStream)> ->_NONE_
<android.filterpacks.imageproc.ImageStitcher: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<android.widget.PopupWindow: void setContentView(android.view.View)> ->_NONE_
<android.hardware.Camera: void setFaceDetectionListener(android.hardware.Camera$FaceDetectionListener)> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: java.lang.String getUnparsedEntityURI(java.lang.String)> ->_NONE_
<org.apache.xalan.processor.ProcessorOutputElem: void setDoctypePublic(java.lang.String)> ->_NONE_
<org.apache.harmony.security.x509.Extension: boolean getCritical()> ->_NONE_
<android.content.ClipData: android.content.ClipData$Item getItemAt(int)> ->_NONE_
<libcore.net.http.HttpsHandler: int getDefaultPort()> ->_NONE_
<gov.nist.javax.sip.parser.RequestLineParser: gov.nist.javax.sip.header.RequestLine parse()> ->_NONE_
<android.gesture.GestureOverlayView: float getGestureStrokeWidth()> ->_NONE_
<gov.nist.javax.sip.message.SIPDuplicateHeaderException: gov.nist.javax.sip.header.SIPHeader getSIPHeader()> ->_NONE_
<java.security.cert.X509CertSelector: void setSubject(byte[])> ->_NONE_
<android.media.audiofx.Equalizer: int getCenterFreq(short)> ->_NONE_
<android.net.wifi.WifiInfo: void setLinkSpeed(int)> ->_NONE_
<gov.nist.javax.sip.address.GenericURI: java.lang.String encode()> ->_NONE_
<org.apache.xml.utils.DOM2Helper: org.w3c.dom.Document getDocument()> ->_NONE_
<android.graphics.Paint: float getTextRunAdvances(java.lang.CharSequence,int,int,int,int,int,float[],int)> ->_NONE_
<android.view.Choreographer: android.view.Choreographer getInstance()> ->_NONE_
<javax.sip.DialogState: int getValue()> ->_NONE_
<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadDefaultIcon(android.content.pm.PackageManager)> ->_NONE_
<org.apache.http.impl.HttpConnectionMetricsImpl: java.lang.Object getMetric(java.lang.String)> ->_NONE_
<java.security.MessageDigest: int getDigestLength()> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.AuthenticationHandler createProxyAuthenticationHandler()> ->_NONE_
<android.net.EthernetDataTracker: android.net.EthernetDataTracker getInstance()> ->_NONE_
<android.view.KeyCharacterMap: char getMatch(int,char[])> ->_NONE_
<android.view.Display: int getType()> ->_NONE_
<org.apache.xpath.NodeSetDTM: void runTo(int)> ->_NONE_
<android.os.Parcel: void writeArray(java.lang.Object[])> ->_NONE_
<android.widget.MultiAutoCompleteTextView: void setTokenizer(android.widget.MultiAutoCompleteTextView$Tokenizer)> ->_NONE_
<android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)> ->_NONE_
<gov.nist.javax.sip.header.ContentEncoding: java.lang.String getEncoding()> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: void setSerializationHandler(org.apache.xml.serializer.SerializationHandler)> ->_NONE_
<javax.xml.validation.SchemaFactory: boolean getFeature(java.lang.String)> ->_NONE_
<android.webkit.ZoomManager: float getScale()> ->_NONE_
<org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties loadPropertiesFile(java.lang.String,java.util.Properties)> ->_NONE_
<android.telephony.gsm.SmsMessage: java.lang.String getOriginatingAddress()> ->_NONE_
<android.hardware.Sensor: java.lang.String getVendor()> ->_NONE_
<java.nio.CharSequenceAdapter: java.nio.CharBuffer get(char[],int,int)> ->_NONE_
<android.graphics.LargeBitmap: int getWidth()> ->_NONE_
<android.gesture.GestureOverlayView: android.graphics.Paint getGesturePaint()> ->_NONE_
<junit.framework.TestCase: void run(junit.framework.TestResult)> ->_NONE_
<android.mtp.MtpDeviceInfo: java.lang.String getModel()> ->_NONE_
<java.text.DateFormatSymbols: void setEras(java.lang.String[])> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: void setRouteList(gov.nist.javax.sip.header.RouteList)> ->_NONE_
<android.widget.TextView: int getShadowColor()> ->_NONE_
<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.impl.conn.tsccm.BasicPoolEntryRef getWeakRef()> ->_NONE_
<org.apache.xalan.templates.ElemSort: int getXSLToken()> ->_NONE_
<android.server.search.SearchManagerService: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)> ->_NONE_
<org.apache.xml.dtm.ref.SecuritySupport: java.lang.ClassLoader getContextClassLoader()> ->_NONE_
<android.filterpacks.imageproc.ImageCombineFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: int getPreserveSpaceCount()> ->_NONE_
<javax.crypto.spec.DESKeySpec: byte[] getKey()> ->_NONE_
<javax.obex.ServerRequestHandler: int onConnect(javax.obex.HeaderSet,javax.obex.HeaderSet)> ->_NONE_
<android.app.MediaRouteButton: void setRouteTypes(int)> ->_NONE_
<android.telephony.SmsCbCmasInfo: int getMessageClass()> ->_NONE_
<android.widget.Toast: int getDuration()> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: java.util.Vector getDeclaredPrefixes()> ->_NONE_
<gov.nist.javax.sip.header.Subject: java.lang.String encodeBody()> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: java.lang.String getHeaderField(java.lang.String)> ->_NONE_
<android.net.wifi.p2p.WifiP2pConfig: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.graphics.drawable.Drawable: void setLayoutDirection(int)> ->_NONE_
<gov.nist.javax.sip.header.AcceptLanguage: java.lang.String encodeBody()> ->_NONE_
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)> ->_NONE_
<java.security.cert.TrustAnchor: javax.security.auth.x500.X500Principal getCA()> ->_NONE_
<org.apache.harmony.security.provider.crypto.DSAPrivateKeyImpl: java.security.interfaces.DSAParams getParams()> ->_NONE_
<android.renderscript.Matrix4f: void loadProjectionNormalized(int,int)> ->_NONE_
<java.text.BreakIterator: int getInt(byte[],int)> ->_NONE_
<android.view.View: int getPaddingLeft()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.lang.Object getValue(java.lang.String)> ->_NONE_
<android.widget.NumberPicker: int getMaxValue()> ->_NONE_
<android.telephony.CellSignalStrengthGsm: int getDbm()> ->_NONE_
<android.widget.VideoView: int getBufferPercentage()> ->_NONE_
<org.kxml2.io.KXmlParser: void readContentSpec()> ->_NONE_
<android.os.Environment: java.io.File getMediaStorageDirectory()> ->_NONE_
<android.support.v4.widget.SimpleCursorAdapter: void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter)> ->_NONE_
<android.mtp.MtpDatabase: int[] getSupportedCaptureFormats()> ->_NONE_
<gov.nist.javax.sip.header.ParametersHeader: void setQuotedParameter(java.lang.String,java.lang.String)> ->_NONE_
<libcore.io.ForwardingOs: void setegid(int)> ->_NONE_
<android.telephony.CellSignalStrengthLte: int getAsuLevel()> ->_NONE_
<org.apache.http.client.params.HttpClientParams: java.lang.String getCookiePolicy(org.apache.http.params.HttpParams)> ->_NONE_
<org.apache.http.entity.FileEntity: long getContentLength()> ->_NONE_
<android.content.ContentProvider: java.lang.String getWritePermission()> ->_NONE_
<libcore.icu.TimeZones: java.lang.String[][] getZoneStrings(java.util.Locale)> ->_NONE_
<android.text.AutoText: java.lang.String get(java.lang.CharSequence,int,int,android.view.View)> ->_NONE_
<org.apache.james.mime4j.util.TempStorage: org.apache.james.mime4j.util.TempStorage getInstance()> ->_NONE_
<android.renderscript.ProgramVertex: int getInputCount()> ->_NONE_
<android.view.ViewConfiguration: int getMaximumDrawingCacheSize()> ->_NONE_
<android.webkit.WebViewClassic: void setWebBackForwardListClient(android.webkit.WebBackForwardListClient)> ->_NONE_
<libcore.net.http.HttpEngine: libcore.net.http.HttpConnection getConnection()> ->_NONE_
<org.apache.xml.serializer.ToTextStream: void charactersRaw(char[],int,int)> ->_NONE_
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry()> ->_NONE_
<android.webkit.AutoCompletePopup: void setIsAutoFillProfileSet(boolean)> ->_NONE_
<android.filterfw.core.FilterGraph: void setTypeCheckMode(int)> ->_NONE_
<java.security.cert.X509CRLSelector: java.security.cert.X509Certificate getCertificateChecking()> ->_NONE_
<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: java.util.List getSupplicantQueryList()> ->_NONE_
<net.oauth.OAuthMessage: void addParameters(java.util.Collection)> ->_NONE_
<android.app.SharedPreferencesImpl: java.util.Set getStringSet(java.lang.String,java.util.Set)> ->_NONE_
<java.security.spec.RSAKeyGenParameterSpec: int getKeysize()> ->_NONE_
<org.apache.xalan.templates.ElemExtensionDecl: org.apache.xml.utils.StringVector getFunctions()> ->_NONE_
<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.SubjectPublicKeyInfo getSubjectPublicKeyInfo()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)> ->_NONE_
<android.telephony.gsm.SmsMessage: java.lang.String getDisplayOriginatingAddress()> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CRLImpl: java.security.cert.X509CRLEntry getRevokedCertificate(java.security.cert.X509Certificate)> ->_NONE_
<gov.nist.javax.sip.header.ims.PMediaAuthorization: void setMediaAuthorizationToken(java.lang.String)> ->_NONE_
<android.widget.HeaderViewListAdapter: long getItemId(int)> ->_NONE_
<android.view.Gravity: int getAbsoluteGravity(int,int)> ->_NONE_
<java.net.HttpCookie: void setMaxAge(long)> ->_NONE_
<org.apache.xml.utils.AttList: int getIndex(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xpath.functions.FuncId: org.apache.xml.utils.StringVector getNodesByID(org.apache.xpath.XPathContext,int,java.lang.String,org.apache.xml.utils.StringVector,org.apache.xpath.NodeSetDTM,boolean)> ->_NONE_
<android.view.textservice.SpellCheckerInfo: int getSubtypeCount()> ->_NONE_
<android.webkit.CookieManagerClassic: void setAcceptCookie(boolean)> ->_NONE_
<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()> ->_NONE_
<java.util.Locale: java.lang.String getDisplayName(java.util.Locale)> ->_NONE_
<android.widget.RemoteViewsAdapter: void setRemoteViewsOnClickHandler(android.widget.RemoteViews$OnClickHandler)> ->_NONE_
<android.telephony.SmsMessage: byte[] getUserData()> ->_NONE_
<android.media.audiofx.Equalizer: short getBandLevel(short)> ->_NONE_
<android.os.ResultReceiver: void send(int,android.os.Bundle)> ->_NONE_
<android.test.mock.MockContext: void setWallpaper(java.io.InputStream)> ->_NONE_
<android.view.inputmethod.InputBinding: int getUid()> ->_NONE_
<android.widget.SuggestionsAdapter: java.lang.String getStringOrNull(android.database.Cursor,int)> ->_NONE_
<android.view.Surface: void setDisplaySurface(android.os.IBinder,android.view.Surface)> ->_NONE_
<org.apache.http.impl.auth.DigestScheme: java.lang.String getQopVariantString()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPublicKey: java.lang.String getAlgorithm()> ->_NONE_
<java.security.cert.PKIXBuilderParameters: void setMaxPathLength(int)> ->_NONE_
<org.jivesoftware.smack.PacketReader: void dump(java.io.PrintWriter)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: org.apache.xml.utils.SuballocatedIntVector getDTMIDs()> ->_NONE_
<org.jivesoftware.smack.packet.Message: void setType(org.jivesoftware.smack.packet.Message$Type)> ->_NONE_
<android.net.wifi.WifiInfo: java.lang.String getBSSID()> ->_NONE_
<android.os.Environment: java.io.File getExternalStorageDirectory()> ->_NONE_
<android.text.style.ForegroundColorSpan: int getForegroundColor()> ->_NONE_
<android.webkit.CertTool: java.lang.String getCertType(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.ElemAttribute: java.lang.String getNodeName()> ->_NONE_
<android.webkit.JsPromptResult: java.lang.String getStringResult()> ->_NONE_
<org.jivesoftware.smack.packet.Packet: void setProperty(java.lang.String,double)> ->_NONE_
<org.apache.xalan.templates.StylesheetComposed: org.apache.xalan.templates.Stylesheet getIncludeComposed(int)> ->_NONE_
<android.widget.PopupWindow: void setFocusable(boolean)> ->_NONE_
<android.graphics.drawable.NinePatchDrawable: int getIntrinsicWidth()> ->_NONE_
<android.server.search.Searchables: android.content.ComponentName getDefaultGlobalSearchProvider(java.util.List)> ->_NONE_
<android.widget.Gallery: int getChildHeight(android.view.View)> ->_NONE_
<org.jivesoftware.smack.XMPPConnection: void setHeartbeatAlarm(com.google.android.gsf.gtalkservice.HeartbeatAlarm)> ->_NONE_
<org.apache.commons.io.EndianUtils: void writeSwappedLong(java.io.OutputStream,long)> ->_NONE_
<android.net.wifi.WifiStateMachine: boolean syncSaveConfig(com.android.internal.util.AsyncChannel)> ->_NONE_
<android.nfc.tech.NfcA: int getTimeout()> ->_NONE_
<android.inputmethodservice.ExtractEditText: void replaceText_internal(int,int,java.lang.CharSequence)> ->_NONE_
<org.apache.xpath.compiler.XPathParser: javax.xml.transform.ErrorListener getErrorListener()> ->_NONE_
<android.text.method.BaseMovementMethod: int getCharacterWidth(android.widget.TextView)> ->_NONE_
<android.net.wifi.WifiNative: boolean setP2pSsidPostfix(java.lang.String)> ->_NONE_
<android.support.v4.view.ViewPager: void setChildrenDrawingOrderEnabledCompat(boolean)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: int getWindowId(java.lang.Object)> ->_NONE_
<android.view.inputmethod.InputMethodInfo: java.lang.String getServiceName()> ->_NONE_
<org.apache.james.mime4j.LogFactory: org.apache.james.mime4j.Log getLog(java.lang.Class)> ->_NONE_
<android.webkit.WebViewClassic: void setWebViewClient(android.webkit.WebViewClient)> ->_NONE_
<libcore.io.IoBridge: int getSocketLocalPort(java.io.FileDescriptor)> ->_NONE_
<android.nfc.tech.NfcF: int getTimeout()> ->_NONE_
<android.view.View: int getPaddingBottom()> ->_NONE_
<java.nio.DirectByteBuffer: long getLong()> ->_NONE_
<android.widget.ImageView: void setVisibility(int)> ->_NONE_
<java.security.cert.X509CertSelector: java.util.Set getExtendedKeyUsage()> ->_NONE_
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime(long)> ->_NONE_
<org.apache.xalan.processor.XSLTAttributeDef: int getErrorType()> ->_NONE_
<org.apache.xpath.functions.FuncExtFunction: java.lang.Object getMethodKey()> ->_NONE_
<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()> ->_NONE_
<org.apache.xml.utils.UnImplNode: void setData(java.lang.String)> ->_NONE_
<android.hardware.usb.UsbInterface: android.hardware.usb.UsbEndpoint getEndpoint(int)> ->_NONE_
<org.apache.xpath.patterns.UnionPattern: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<android.filterfw.core.MutableFrameFormat: void setObjectClass(java.lang.Class)> ->_NONE_
<org.apache.harmony.security.SystemScope: java.security.Identity getIdentity(java.lang.String)> ->_NONE_
<org.apache.xpath.functions.FuncSum: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<android.net.http.SslCertificate: java.lang.String getValidNotAfter()> ->_NONE_
<org.apache.harmony.security.x509.tsp.TSTInfo: org.apache.harmony.security.x509.tsp.MessageImprint getMessageImprint()> ->_NONE_
<gov.nist.javax.sip.stack.SIPServerTransaction: void setDialog(gov.nist.javax.sip.stack.SIPDialog,java.lang.String)> ->_NONE_
<android.content.SyncStorageEngine: android.content.SyncStatusInfo getStatusByAccountAndAuthority(android.accounts.Account,int,java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: java.net.InetAddress getInetAddress()> ->_NONE_
<org.apache.commons.io.input.NullReader: int read(char[])> ->_NONE_
<android.view.MotionEvent: float getPressure(int)> ->_NONE_
<java.text.MessageFormat: void setFormatsByArgumentIndex(java.text.Format[])> ->_NONE_
<android.app.Instrumentation: void runOnMainSync(java.lang.Runnable)> ->_NONE_
<org.apache.xml.utils.AttList: int getLength()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()> ->_NONE_
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)> ->_NONE_
<gov.nist.javax.sip.header.RetryAfter: java.lang.String getComment()> ->_NONE_
<android.test.mock.MockPackageManager: android.content.res.Resources getResourcesForApplicationAsUser(java.lang.String,int)> ->_NONE_
<gov.nist.javax.sip.stack.SIPServerTransaction: void sendMessage(gov.nist.javax.sip.message.SIPMessage)> ->_NONE_
<org.kxml2.io.KXmlParser: void readXmlDeclaration()> ->_NONE_
<android.net.http.RequestHandle: java.lang.String getMethod()> ->_NONE_
<android.media.videoeditor.MediaProperties: int[] getSupportedVideoCodecs()> ->_NONE_
<java.security.cert.CertPathValidator: java.lang.String getDefaultType()> ->_NONE_
<android.appwidget.AppWidgetHostView: void updateAppWidgetSize(android.os.Bundle,int,int,int,int)> ->_NONE_
<gov.nist.javax.sip.header.MediaRange: void setType(java.lang.String)> ->_NONE_
<java.io.PipedReader: int read()> ->_NONE_
<android.widget.GridLayout: int getMargin(android.view.View,boolean,boolean)> ->_NONE_
<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)> ->_NONE_
<java.io.EmulatedFieldsForLoading: java.lang.Object get(java.lang.String,java.lang.Object)> ->_NONE_
<android.widget.SearchView: android.widget.CursorAdapter getSuggestionsAdapter()> ->_NONE_
<gov.nist.core.NameValue: java.lang.String getName()> ->_NONE_
<android.widget.TextView: int getBottomVerticalOffset(boolean)> ->_NONE_
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.ComponentName)> ->_NONE_
<java.security.cert.CertStore: java.lang.String getDefaultType()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.PinListEntry: java.lang.String getCommonName()> ->_NONE_
<android.net.SSLCertificateSocketFactory: void setTrustManagers(javax.net.ssl.TrustManager[])> ->_NONE_
<android.drm.DrmRights: java.lang.String getAccountId()> ->_NONE_
<android.speech.tts.SynthesisRequest: java.lang.String getVariant()> ->_NONE_
<android.net.wifi.WifiNative: boolean setModelName(java.lang.String)> ->_NONE_
<android.view.MotionEvent: float getSize()> ->_NONE_
<android.util.JsonWriter: void setLenient(boolean)> ->_NONE_
<android.net.wifi.WifiNative: int getGroupCapability(java.lang.String)> ->_NONE_
<jp.co.omronsoft.openwnn.UserDictionaryToolsList: boolean deleteWord(jp.co.omronsoft.openwnn.WnnWord)> ->_NONE_
<android.net.wifi.WpsInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.xpath.VariableStack: org.apache.xpath.objects.XObject getLocalVariable(org.apache.xpath.XPathContext,int,boolean)> ->_NONE_
<android.widget.AdapterView: android.widget.AdapterView$OnItemSelectedListener getOnItemSelectedListener()> ->_NONE_
<java.lang.reflect.Field: char getChar(java.lang.Object)> ->_NONE_
<android.filterfw.core.SerializedFrame: void setInts(int[])> ->_NONE_
<java.nio.DirectByteBuffer: void get(double[],int,int)> ->_NONE_
<java.text.CollationKey: java.lang.String getSourceString()> ->_NONE_
<org.apache.xalan.templates.StylesheetRoot: java.util.Properties getDefaultOutputProps()> ->_NONE_
<android.webkit.WebViewClassic: boolean restorePicture(android.os.Bundle,java.io.File)> ->_NONE_
<android.view.Surface: boolean getDisplayInfo(android.os.IBinder,android.view.Surface$PhysicalDisplayInfo)> ->_NONE_
<gov.nist.javax.sip.header.RetryAfter: void setRetryAfter(int)> ->_NONE_
<android.database.sqlite.SQLiteSession: int executeForCursorWindow(java.lang.String,java.lang.Object[],android.database.CursorWindow,int,int,boolean,int,android.os.CancellationSignal)> ->_NONE_
<android.widget.SimpleExpandableListAdapter: java.lang.Object getChild(int,int)> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: int getMovementGranularities()> ->_NONE_
<javax.crypto.Mac: java.lang.String getAlgorithm()> ->_NONE_
<org.apache.harmony.xml.dom.DocumentTypeImpl: org.w3c.dom.NamedNodeMap getNotations()> ->_NONE_
<org.jivesoftware.smack.XMPPConnection: com.google.android.gsf.gtalkservice.rmq.RmqManager getRmqManager()> ->_NONE_
<android.webkit.WebStorageClassic: void setQuotaForOrigin(java.lang.String,long)> ->_NONE_
<org.apache.harmony.xml.dom.NodeImpl: org.apache.harmony.xml.dom.NodeImpl getContainingElement()> ->_NONE_
<java.net.HttpCookie: java.lang.String getCommentURL()> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Explicit: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)> ->_NONE_
<android.widget.CalendarView: int getDateTextAppearance()> ->_NONE_
<java.io.Writer: void write(char[])> ->_NONE_
<org.apache.harmony.security.pkcs7.SignerInfo: byte[] getEncryptedDigest()> ->_NONE_
<android.app.Instrumentation: void sendStringSync(java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: void setEnabledCipherSuites(java.lang.String[])> ->_NONE_
<android.bluetooth.BluetoothDevice: java.lang.String getAlias()> ->_NONE_
<android.app.ListFragment: void setEmptyText(java.lang.CharSequence)> ->_NONE_
<gov.nist.javax.sip.stack.SIPClientTransaction: void setState(javax.sip.TransactionState)> ->_NONE_
<org.apache.xalan.templates.ElemSort: org.apache.xalan.templates.AVT getOrder()> ->_NONE_
<android.content.SyncManager: void dumpSyncState(java.io.PrintWriter)> ->_NONE_
<android.view.SurfaceView: void setZOrderOnTop(boolean)> ->_NONE_
<android.accounts.AccountManager: java.lang.String getUserData(android.accounts.Account,java.lang.String)> ->_NONE_
<org.jivesoftware.smack.packet.Registration: java.util.Map getAttributes()> ->_NONE_
<java.util.ResourceBundle: java.lang.String[] getStringArray(java.lang.String)> ->_NONE_
<android.content.res.Resources: int getDimensionPixelSize(int)> ->_NONE_
<android.renderscript.Element: android.renderscript.Element getSubElement(int)> ->_NONE_
<java.lang.Runtime: java.io.OutputStream getLocalizedOutputStream(java.io.OutputStream)> ->_NONE_
<org.apache.xpath.axes.NodeSequence: void setItem(int,int)> ->_NONE_
<android.filterfw.core.SerializedFrame: float[] getFloats()> ->_NONE_
<java.security.spec.X509EncodedKeySpec: java.lang.String getFormat()> ->_NONE_
<android.widget.CursorTreeAdapter: android.widget.CursorTreeAdapter$MyCursorHelper getChildrenCursorHelper(int,boolean)> ->_NONE_
<jp.co.omronsoft.openwnn.OpenWnnDictionaryImpl: int setApproxPattern(int)> ->_NONE_
<android.os.Message: void setAsynchronous(boolean)> ->_NONE_
<android.content.res.AssetManager: java.lang.CharSequence getResourceBagText(int,int)> ->_NONE_
<org.apache.xml.utils.DOMHelper: java.lang.String getExpandedElementName(org.w3c.dom.Element)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: int getPeerPort()> ->_NONE_
<android.os.Looper: android.os.MessageQueue getQueue()> ->_NONE_
<org.apache.harmony.security.pkcs10.CertificationRequest: byte[] getEncoded()> ->_NONE_
<org.apache.xml.serializer.ToStream: void setEncoding(java.lang.String)> ->_NONE_
<android.animation.ValueAnimator: void setObjectValues(java.lang.Object[])> ->_NONE_
<java.sql.Time: int getDay()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getWholeText()> ->_NONE_
<android.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener)> ->_NONE_
<android.content.ContentValues: java.lang.Byte getAsByte(java.lang.String)> ->_NONE_
<android.webkit.JWebCoreJavaBridge: java.lang.String[] getPluginDirectories()> ->_NONE_
<android.graphics.Canvas: int getDensity()> ->_NONE_
<android.net.http.AndroidHttpClient: java.io.InputStream getUngzippedContent(org.apache.http.HttpEntity)> ->_NONE_
<org.apache.xpath.compiler.FunctionTable: java.lang.String getFunctionName(int)> ->_NONE_
<android.graphics.drawable.BitmapDrawable: int getChangingConfigurations()> ->_NONE_
<org.apache.http.impl.client.RequestWrapper: void setMethod(java.lang.String)> ->_NONE_
<android.os.Debug: int getLoadedClassCount()> ->_NONE_
<android.widget.TextView: void setImeActionLabel(java.lang.CharSequence,int)> ->_NONE_
<gov.nist.javax.sip.header.Challenge: java.lang.String getSignature()> ->_NONE_
<android.app.MediaRouteButton: android.app.Activity getActivity()> ->_NONE_
<java.text.DecimalFormatSymbols: void setPercent(char)> ->_NONE_
<android.net.wifi.p2p.WifiP2pDevice: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.content.IntentSender: java.lang.String getCreatorPackage()> ->_NONE_
<java.text.SimpleDateFormat: java.util.Date get2DigitYearStart()> ->_NONE_
<org.apache.xalan.templates.ElemSort: void setDataType(org.apache.xalan.templates.AVT)> ->_NONE_
<org.apache.xpath.functions.SecuritySupport12: boolean getFileExists(java.io.File)> ->_NONE_
<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)> ->_NONE_
<java.util.zip.Inflater: void setDictionary(byte[])> ->_NONE_
<android.hardware.usb.UsbManager: void setCurrentFunction(java.lang.String,boolean)> ->_NONE_
<android.content.pm.ApplicationInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.harmony.xml.dom.CDATASectionImpl: java.lang.String getNodeName()> ->_NONE_
<gov.nist.javax.sip.stack.UDPMessageChannel: void sendMessage(byte[],java.net.InetAddress,int,java.lang.String,boolean)> ->_NONE_
<android.inputmethodservice.IInputMethodSessionWrapper: void executeMessage(android.os.Message)> ->_NONE_
<android.service.dreams.DreamService: void setDebug(boolean)> ->_NONE_
<org.apache.harmony.xml.dom.DocumentTypeImpl: java.lang.String getTextContent()> ->_NONE_
<gov.nist.javax.sip.header.ims.PServedUser: void setRegistrationState(java.lang.String)> ->_NONE_
<android.accounts.AccountManagerService: java.lang.String getPassword(android.accounts.Account)> ->_NONE_
<org.apache.xpath.patterns.NodeTest: java.lang.String getLocalName()> ->_NONE_
<android.net.http.Request: void sendRequest(android.net.http.AndroidHttpClientConnection)> ->_NONE_
<android.webkit.CallbackProxy: void onReceivedHttpAuthCredentials(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.app.ActivityManagerProxy: android.app.IActivityManager$WaitResult startActivityAndWait(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.os.Bundle,int)> ->_NONE_
<android.test.suitebuilder.TestGrouping: void setClassLoader(java.lang.ClassLoader)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.test.mock.MockCursor: short getShort(int)> ->_NONE_
<org.xmlpull.v1.XmlPullParserException: int getColumnNumber()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: java.util.List getText(java.lang.Object)> ->_NONE_
<org.apache.commons.codec.language.Metaphone: void setMaxCodeLen(int)> ->_NONE_
<java.text.NumberFormat: java.text.NumberFormat getNumberInstance()> ->_NONE_
<android.content.ComponentName: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<jp.co.omronsoft.openwnn.TextCandidatesViewManager: android.widget.TextView getFocusedView()> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: void setTextContent(java.lang.String)> ->_NONE_
<org.xml.sax.helpers.AttributesImpl: void setQName(int,java.lang.String)> ->_NONE_
<org.jivesoftware.smack.packet.DefaultPacketExtension: java.lang.String getElementName()> ->_NONE_
<java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()> ->_NONE_
<android.view.animation.GridLayoutAnimationController: int getDirectionPriority()> ->_NONE_
<java.security.cert.PolicyQualifierInfo: byte[] getEncoded()> ->_NONE_
<android.app.ActivityManagerProxy: boolean finishActivityAffinity(android.os.IBinder)> ->_NONE_
<javax.crypto.spec.RC5ParameterSpec: int getVersion()> ->_NONE_
<android.graphics.Interpolator: void setRepeatMirror(float,boolean)> ->_NONE_
<android.graphics.drawable.LayerDrawable: void setLayoutDirection(int)> ->_NONE_
<android.widget.FrameLayout: boolean getMeasureAllChildren()> ->_NONE_
<android.filterfw.core.ShaderProgram: android.filterfw.core.GLEnvironment getGLEnvironment(android.filterfw.core.FilterContext)> ->_NONE_
<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)> ->_NONE_
<org.apache.xpath.axes.LocPathIterator: org.apache.xml.dtm.DTM getDTM(int)> ->_NONE_
<org.apache.james.mime4j.message.Header: java.util.List getFields()> ->_NONE_
<org.apache.james.mime4j.field.datetime.parser.SimpleCharStream: int getColumn()> ->_NONE_
<android.inputmethodservice.ExtractEditText: void setCursorPosition_internal(int,int)> ->_NONE_
<android.widget.TextView: void setPadding(int,int,int,int)> ->_NONE_
<libcore.icu.RuleBasedCollatorICU: int getDecomposition()> ->_NONE_
<org.apache.harmony.xml.dom.AttrImpl: java.lang.String getLocalName()> ->_NONE_
<android.app.ActivityManager: int getLargeMemoryClass()> ->_NONE_
<android.webkit.L10nUtils: java.lang.String getLocalisedString(int)> ->_NONE_
<org.apache.xpath.axes.PredicatedNodeTest: int getPredicateIndex()> ->_NONE_
<android.webkit.WebChromeClient: android.view.View getVideoLoadingProgressView()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setSource(android.view.View,int)> ->_NONE_
<android.filterfw.core.GraphRunner: android.filterfw.core.FilterContext getContext()> ->_NONE_
<android.webkit.HTML5VideoViewProxy: android.webkit.HTML5VideoViewProxy getInstance(android.webkit.WebViewCore,int)> ->_NONE_
<android.webkit.WebViewClassic: void postUrl(java.lang.String,byte[])> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: java.lang.String debugDump()> ->_NONE_
<android.widget.HeaderViewListAdapter: int getHeadersCount()> ->_NONE_
<javax.xml.transform.TransformerException: void setLocator(javax.xml.transform.SourceLocator)> ->_NONE_
<java.nio.HeapByteBuffer: void get(float[],int,int)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getNextPreceding(int,int)> ->_NONE_
<android.gesture.GestureLibrary: int getSequenceType()> ->_NONE_
<android.media.videoeditor.MediaImageItem: java.lang.String getDecodedImageFileName()> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: java.io.InputStream getInputStream()> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: java.lang.String getNamespaceURI(int)> ->_NONE_
<android.hardware.usb.UsbInterface: int getEndpointCount()> ->_NONE_
<android.accounts.AccountManagerService: android.accounts.AccountManagerService$UserAccounts getUserAccounts(int)> ->_NONE_
<android.webkit.WebViewCore: android.webkit.BrowserFrame getBrowserFrame()> ->_NONE_
<android.nfc.tech.NdefFormatable: void connect()> ->_NONE_
<android.widget.AbsListView: int getTopPaddingOffset()> ->_NONE_
<org.apache.http.impl.io.AbstractSessionInputBuffer: int lineFromReadBuffer(org.apache.http.util.CharArrayBuffer,int)> ->_NONE_
<android.os.CommonTimeConfig: int setMasterAnnounceInterval(int)> ->_NONE_
<gov.nist.javax.sip.parser.Lexer: java.lang.String getHeaderName(java.lang.String)> ->_NONE_
<android.os.Build: long getLong(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: void setLocaterInfo(javax.xml.transform.SourceLocator)> ->_NONE_
<org.apache.xml.utils.SecuritySupport12: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)> ->_NONE_
<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(int)> ->_NONE_
<android.net.http.HttpAuthHeader: java.lang.String getNonce()> ->_NONE_
<java.util.prefs.XMLParser: void flushEndTag(java.lang.String,java.io.BufferedWriter)> ->_NONE_
<org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()> ->_NONE_
<org.jivesoftware.smack.ServerTrustManager: java.security.cert.X509Certificate[] getAcceptedIssuers()> ->_NONE_
<android.net.LocalSocketAddress: java.lang.String getName()> ->_NONE_
<org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)> ->_NONE_
<android.view.View: android.content.res.Resources getResources()> ->_NONE_
<android.mtp.MtpStorageInfo: java.lang.String getVolumeIdentifier()> ->_NONE_
<org.apache.http.impl.client.RequestWrapper: void setProtocolVersion(org.apache.http.ProtocolVersion)> ->_NONE_
<android.widget.TextView: void setWidth(int)> ->_NONE_
<org.apache.xml.utils.res.CharArrayWrapper: int getLength()> ->_NONE_
<dalvik.system.TemporaryDirectory: void setUpDirectory(java.lang.String)> ->_NONE_
<android.content.ClipDescription: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.xpath.axes.LocPathIterator: org.apache.xml.dtm.DTMManager getDTMManager()> ->_NONE_
<android.media.videoeditor.OverlayFrame: java.lang.String getFilename()> ->_NONE_
<android.net.sip.SimpleSessionDescription: int getBandwidth(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.ElemVariablePsuedo: void setSelect(org.apache.xpath.XPath)> ->_NONE_
<android.support.v4.app.LoaderManagerImpl: android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)> ->_NONE_
<android.view.Surface: void setTransparentRegionHint(android.graphics.Region)> ->_NONE_
<org.apache.xml.serializer.SecuritySupport12: java.lang.String getSystemProperty(java.lang.String)> ->_NONE_
<android.graphics.drawable.ClipDrawable: int getIntrinsicWidth()> ->_NONE_
<android.text.PackedObjectVector: void dump()> ->_NONE_
<android.support.v4.app.FragmentPagerAdapter: long getItemId(int)> ->_NONE_
<org.apache.xml.utils.WrappedRuntimeException: java.lang.Exception getException()> ->_NONE_
<android.drm.DrmManagerClient: void notify(java.lang.Object,int,int,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationInfo: java.lang.String getAuthenticationInfo()> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getAlgorithm()> ->_NONE_
<android.content.ContentProviderOperation: int getType()> ->_NONE_
<android.widget.TextView: int getAccessibilityCursorPosition()> ->_NONE_
<libcore.net.http.RawHeaders: java.lang.String getValue(int)> ->_NONE_
<org.apache.harmony.xml.dom.DocumentImpl: java.util.Map getUserDataMap(org.apache.harmony.xml.dom.NodeImpl)> ->_NONE_
<android.database.CursorWrapper: boolean getWantsAllOnMoveCalls()> ->_NONE_
<android.graphics.drawable.RotateDrawable: android.graphics.drawable.Drawable getDrawable()> ->_NONE_
<libcore.net.url.FileURLConnection: java.io.InputStream getInputStream()> ->_NONE_
<android.nfc.TechListParcel: java.lang.String[][] getTechLists()> ->_NONE_
<android.view.ViewPropertyAnimator: float getValue(int)> ->_NONE_
<android.webkit.CertTool: java.lang.String[] getKeyStrengthList()> ->_NONE_
<org.apache.xml.dtm.Axis: java.lang.String getNames(int)> ->_NONE_
<android.widget.CalendarView: void setSelectedDateVerticalBar(android.graphics.drawable.Drawable)> ->_NONE_
<android.util.XmlPullAttributes: int getAttributeListValue(java.lang.String,java.lang.String,java.lang.String[],int)> ->_NONE_
<org.apache.harmony.security.x509.tsp.TimeStampReq: java.lang.String getReqPolicy()> ->_NONE_
<android.support.v4.view.MenuItemCompat: android.view.MenuItem setActionView(android.view.MenuItem,android.view.View)> ->_NONE_
<net.oauth.signature.PLAINTEXT: void setTokenSecret(java.lang.String)> ->_NONE_
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void setMaxForRoute(org.apache.http.conn.routing.HttpRoute,int)> ->_NONE_
<android.opengl.GLLogWrapper: java.lang.String getMatrixMode(int)> ->_NONE_
<android.app.TaskStackBuilder: int getIntentCount()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void getBoundsInParent(java.lang.Object,android.graphics.Rect)> ->_NONE_
<android.support.v4.content.CursorLoader: android.database.Cursor loadInBackground()> ->_NONE_
<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> ->_NONE_
<android.animation.IntKeyframeSet: int getIntValue(float)> ->_NONE_
<gov.nist.javax.sip.header.extensions.Replaces: void setValue(java.lang.String)> ->_NONE_
<org.apache.harmony.security.x509.tsp.TimeStampReq: byte[] getEncoded()> ->_NONE_
<android.content.ContextWrapper: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> ->_NONE_
<org.jivesoftware.smack.packet.Packet: java.util.Iterator getPropertyNames()> ->_NONE_
<gov.nist.javax.sip.header.Server: void setProduct(java.util.List)> ->_NONE_
<org.apache.http.impl.io.AbstractSessionInputBuffer: int appendDecoded(org.apache.http.util.CharArrayBuffer,java.nio.ByteBuffer)> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getCNonce()> ->_NONE_
<android.widget.CalendarView: void setUnfocusedMonthDateColor(int)> ->_NONE_
<android.media.AudioManager: int getVibrateSetting(int)> ->_NONE_
<org.apache.james.mime4j.util.TempStorage: void setInstance(org.apache.james.mime4j.util.TempStorage)> ->_NONE_
<java.util.SimpleTimeZone: void setStartRule(int,int,int)> ->_NONE_
<android.webkit.WebViewClassic: void setUseMockDeviceOrientation()> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.HttpRequestRetryHandler getHttpRequestRetryHandler()> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: void setDoctype(java.lang.String,java.lang.String)> ->_NONE_
<org.xml.sax.helpers.AttributeListImpl: int getLength()> ->_NONE_
<org.apache.james.mime4j.field.DelegatingFieldParser: org.apache.james.mime4j.field.Field parse(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.Via: gov.nist.core.HostPort getSentBy()> ->_NONE_
<android.support.v4.view.ViewCompatJB: void setImportantForAccessibility(android.view.View,int)> ->_NONE_
<android.graphics.Paint: android.graphics.Paint$Style getStyle()> ->_NONE_
<android.view.TextureView: void setTransform(android.graphics.Matrix)> ->_NONE_
<java.net.JarURLConnection: java.util.jar.Attributes getMainAttributes()> ->_NONE_
<org.apache.xpath.XPathContext: void setSourceTreeManager(org.apache.xpath.SourceTreeManager)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: int getSoTimeout()> ->_NONE_
<android.media.AudioManager: android.media.IAudioService getService()> ->_NONE_
<android.server.search.SearchManagerService: android.content.ComponentName getWebSearchActivity()> ->_NONE_
<android.filterpacks.imageproc.BitmapSource: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)> ->_NONE_
<org.apache.http.impl.conn.tsccm.AbstractConnPool: void closeConnection(org.apache.http.conn.OperatedClientConnection)> ->_NONE_
<android.util.XmlPullAttributes: boolean getAttributeBooleanValue(java.lang.String,java.lang.String,boolean)> ->_NONE_
<dalvik.system.SocketTagger: void set(dalvik.system.SocketTagger)> ->_NONE_
<android.app.ApplicationThreadProxy: void scheduleRegisteredReceiver(android.content.IIntentReceiver,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)> ->_NONE_
<java.util.jar.JarFile: java.util.jar.JarEntry getJarEntry(java.lang.String)> ->_NONE_
<android.webkit.WebView: java.lang.String getTouchIconUrl()> ->_NONE_
<gov.nist.javax.sip.header.ParametersHeader: java.util.Iterator getMultiParameterNames()> ->_NONE_
<android.widget.TextView: void setTextScaleX(float)> ->_NONE_
<android.app.ActivityManagerProxy: int startActivity(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.os.Bundle)> ->_NONE_
<android.media.MediaFormat: void setInteger(java.lang.String,int)> ->_NONE_
<android.hardware.display.DisplayManager: android.view.Display[] getDisplays()> ->_NONE_
<android.widget.AbsSpinner: void setSelectionInt(int,boolean)> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Implicit: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: void setProperty(java.lang.String,java.lang.Object)> ->_NONE_
<java.net.MulticastSocket: void setNetworkInterface(java.net.NetworkInterface)> ->_NONE_
<javax.net.ssl.SSLSocketFactory: javax.net.SocketFactory getDefault()> ->_NONE_
<android.graphics.drawable.LayerDrawable: int getChangingConfigurations()> ->_NONE_
<org.apache.harmony.xml.dom.InnerNodeImpl: void getElementsByTagName(org.apache.harmony.xml.dom.NodeListImpl,java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.CipherSuite: int getBlockSize()> ->_NONE_
<android.widget.ActivityChooserModel: void setActivitySorter(android.widget.ActivityChooserModel$ActivitySorter)> ->_NONE_
<android.net.http.Headers: long getTransferEncoding()> ->_NONE_
<android.net.wifi.WifiStateMachine: void setWifiApConfiguration(android.net.wifi.WifiConfiguration)> ->_NONE_
<android.app.ApplicationThreadProxy: void dumpDbInfo(java.io.FileDescriptor,java.lang.String[])> ->_NONE_
<libcore.icu.NativeBreakIterator: libcore.icu.NativeBreakIterator getLineInstance(java.util.Locale)> ->_NONE_
<gov.nist.javax.sip.header.ContentEncoding: java.lang.String encodeBody()> ->_NONE_
<android.test.ClassPathPackageInfoSource: java.util.Set getJarEntries(java.io.File)> ->_NONE_
<android.media.MediaPlayer: void setDisplay(android.view.SurfaceHolder)> ->_NONE_
<org.apache.http.message.BasicHeaderElement: java.lang.String getName()> ->_NONE_
<android.nfc.tech.NfcA: void setTimeout(int)> ->_NONE_
<android.app.ContextImpl: android.content.ContentResolver getContentResolver()> ->_NONE_
<org.apache.xalan.templates.ElemFallback: void execute(org.apache.xalan.transformer.TransformerImpl)> ->_NONE_
<java.util.logging.LogManager: java.util.logging.LogManager getLogManager()> ->_NONE_
<android.os.FileUtils: void stringToFile(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xpath.NodeSet: void setTailSub1(org.w3c.dom.Node)> ->_NONE_
<android.webkit.WebViewClassic: void setTouchInterval(int)> ->_NONE_
<org.apache.xalan.templates.ElemElement: void setName(org.apache.xalan.templates.AVT)> ->_NONE_
<android.preference.MultiCheckPreference: void setValues(boolean[])> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: java.lang.String[] getEnabledCipherSuites()> ->_NONE_
<android.widget.AbsListView: void setDrawSelectorOnTop(boolean)> ->_NONE_
<org.apache.harmony.xml.dom.DocumentImpl: short getNodeType()> ->_NONE_
<android.nfc.tech.NfcF: void setTimeout(int)> ->_NONE_
<android.webkit.WebViewClassic: android.webkit.PluginList getPluginList()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.lang.String[] getSupportedProtocols()> ->_NONE_
<android.view.VelocityTracker: void setPooled(boolean)> ->_NONE_
<android.widget.AdapterViewFlipper: void setAdapter(android.widget.Adapter)> ->_NONE_
<org.apache.http.protocol.HttpService: org.apache.http.params.HttpParams getParams()> ->_NONE_
<android.text.BoringLayout: int getParagraphDirection(int)> ->_NONE_
<java.security.KeyPairGenerator: java.lang.String getAlgorithm()> ->_NONE_
<android.media.audiofx.AudioEffect: int getParameter(int[],short[])> ->_NONE_
<android.view.accessibility.AccessibilityInteractionClient: void setSameThreadMessage(android.os.Message)> ->_NONE_
<android.media.videoeditor.MediaProperties: int getSupportedAudioTrackCount()> ->_NONE_
<android.media.videoeditor.MediaProperties: int[] getSupportedAudioCodecs()> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertImpl: java.util.Set getCriticalExtensionOIDs()> ->_NONE_
<org.apache.http.impl.io.AbstractSessionInputBuffer: org.apache.http.io.HttpTransportMetrics getMetrics()> ->_NONE_
<gov.nist.javax.sip.header.CallID: void setCallIdentifier(gov.nist.javax.sip.header.CallIdentifier)> ->_NONE_
<org.apache.xpath.axes.MatchPatternIterator: int getNextNode()> ->_NONE_
<jp.co.omronsoft.openwnn.JAJP.OpenWnnClauseConverterJAJP: boolean connectible(int,int)> ->_NONE_
<org.apache.james.mime4j.field.address.AddressList: void main(java.lang.String[])> ->_NONE_
<android.text.format.DateUtils: java.lang.String getStandaloneMonthString(int,int)> ->_NONE_
<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.Object getAttribute(java.lang.String)> ->_NONE_
<android.location.Country: java.lang.String getCountryIso()> ->_NONE_
<org.apache.xalan.templates.ElemWhen: org.apache.xpath.XPath getTest()> ->_NONE_
<org.ccil.cowan.tagsoup.Parser: void setProperty(java.lang.String,java.lang.Object)> ->_NONE_
<gov.nist.javax.sip.header.Supported: void setOptionTag(java.lang.String)> ->_NONE_
<android.content.pm.PackageParser: android.content.pm.PackageParser$Service parseService(android.content.pm.PackageParser$Package,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,int,java.lang.String[])> ->_NONE_
<gov.nist.javax.sip.header.SIPObject: java.lang.String debugDump()> ->_NONE_
<android.media.videoeditor.MediaArtistNativeHelper: void setVideoCodec(int)> ->_NONE_
<android.graphics.Paint: android.graphics.Paint$Align getTextAlign()> ->_NONE_
<org.apache.xalan.templates.TemplateList: void setTemplate(org.apache.xalan.templates.ElemTemplate)> ->_NONE_
<android.app.Notification: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.webkit.WebView: android.webkit.WebSettings getSettings()> ->_NONE_
<android.text.Layout: void getSelectionPath(int,int,android.graphics.Path)> ->_NONE_
<android.speech.srec.WaveHeader: void writeId(java.io.OutputStream,java.lang.String)> ->_NONE_
<java.security.cert.PKIXParameters: void setCertPathCheckers(java.util.List)> ->_NONE_
<android.webkit.WebViewClassic: boolean onKeyUp(int,android.view.KeyEvent)> ->_NONE_
<android.text.style.UnderlineSpan: int getSpanTypeId()> ->_NONE_
<org.kxml2.io.KXmlSerializer: void writeEscaped(java.lang.String,int)> ->_NONE_
<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)> ->_NONE_
<android.app.ActivityManager: java.util.List getRunningServices(int)> ->_NONE_
<org.xml.sax.InputSource: void setSystemId(java.lang.String)> ->_NONE_
<android.bluetooth.BluetoothAdapter: int getDiscoverableTimeout()> ->_NONE_
<android.support.v4.app.LoaderManagerImpl: android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)> ->_NONE_
<gov.nist.javax.sip.header.ContentLength: void setContentLength(int)> ->_NONE_
<android.telephony.TelephonyManager: java.lang.String getLine1AlphaTag()> ->_NONE_
<org.apache.xalan.templates.ElemNumber: int getXSLToken()> ->_NONE_
<android.view.inputmethod.CompletionInfo: long getId()> ->_NONE_
<android.text.BoringLayout: int getEllipsizedWidth()> ->_NONE_
<android.text.format.Time: int getActualMaximum(int)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: void setRouter(javax.sip.address.Router)> ->_NONE_
<android.drm.DrmSupportInfo: java.lang.String getDescriprition()> ->_NONE_
<java.net.URLStreamHandler: java.net.InetAddress getHostAddress(java.net.URL)> ->_NONE_
<android.database.sqlite.SQLiteDatabase: int getThreadDefaultConnectionFlags(boolean)> ->_NONE_
<android.widget.RemoteViews: void setLabelFor(int,int)> ->_NONE_
<android.app.AlertDialog: android.widget.Button getButton(int)> ->_NONE_
<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String getProjectPath()> ->_NONE_
<android.view.ViewRootImpl: void dispatchScreenStateChange(boolean)> ->_NONE_
<org.apache.http.impl.conn.SingleClientConnManager: org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry)> ->_NONE_
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: byte[] getEncoded()> ->_NONE_
<java.util.concurrent.ConcurrentHashMap: java.lang.Object replace(java.lang.Object,java.lang.Object)> ->_NONE_
<java.nio.FloatArrayBuffer: float get(int)> ->_NONE_
<libcore.net.http.HttpURLConnectionImpl: java.io.OutputStream getOutputStream()> ->_NONE_
<android.support.v4.app.FragmentTabHost: void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener)> ->_NONE_
<android.util.Property: void set(java.lang.Object,java.lang.Object)> ->_NONE_
<org.kxml2.io.KXmlParser: java.lang.String getNamespace(java.lang.String)> ->_NONE_
<gov.nist.core.HostPort: java.lang.StringBuffer encode(java.lang.StringBuffer)> ->_NONE_
<android.view.MotionEvent: float getHistoricalToolMinor(int,int)> ->_NONE_
<org.apache.commons.io.input.ProxyReader: boolean ready()> ->_NONE_
<libcore.net.http.RequestHeaders: void setIfModifiedSince(java.util.Date)> ->_NONE_
<org.jivesoftware.smack.packet.Message: void setHasNoSave(boolean)> ->_NONE_
<android.bluetooth.BluetoothDevice: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.media.MediaRouter: android.media.MediaRouter$RouteInfo getRouteAt(int)> ->_NONE_
<org.apache.harmony.security.asn1.DerOutputStream: void encodeExplicit(org.apache.harmony.security.asn1.ASN1Explicit)> ->_NONE_
<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getPeerProtocol()> ->_NONE_
<java.net.URLConnection: java.lang.String getRequestProperty(java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.CipherSuite: org.apache.harmony.xnet.provider.jsse.CipherSuite[] getSupported()> ->_NONE_
<java.lang.ThreadLocal: java.lang.Object get()> ->_NONE_
<android.widget.PopupWindow: void setAllowScrollingAnchorParent(boolean)> ->_NONE_
<android.os.Parcel: void readSparseArrayInternal(android.util.SparseArray,int,java.lang.ClassLoader)> ->_NONE_
<android.os.Debug: int getGlobalExternalAllocCount()> ->_NONE_
<android.webkit.CallbackProxy: void onCloseWindow(android.webkit.WebViewClassic)> ->_NONE_
<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)> ->_NONE_
<android.webkit.WebViewCore: void updateTextfield(int,java.lang.String,int)> ->_NONE_
<android.webkit.WebResourceResponse: java.io.InputStream getData()> ->_NONE_
<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodClient getClient()> ->_NONE_
<android.app.ApplicationPackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)> ->_NONE_
<android.media.audiofx.EnvironmentalReverb: int getReverbDelay()> ->_NONE_
<org.apache.http.message.ParserCursor: void updatePos(int)> ->_NONE_
<android.webkit.UrlInterceptRegistry: android.webkit.PluginData getPluginData(java.lang.String,java.util.Map)> ->_NONE_
<org.apache.xpath.Arg: void setVal(org.apache.xpath.objects.XObject)> ->_NONE_
<org.apache.xalan.templates.ElemNumber: java.util.Locale getLocale(org.apache.xalan.transformer.TransformerImpl,int)> ->_NONE_
<android.app.Activity: void setParent(android.app.Activity)> ->_NONE_
<gov.nist.javax.sip.SipStackImpl: void setEnabledProtocols(java.lang.String[])> ->_NONE_
<android.view.animation.AnimationSet: void setFillAfter(boolean)> ->_NONE_
<android.net.nsd.DnsSdTxtRecord: java.lang.String getValueAsString(int)> ->_NONE_
<android.opengl.GLSurfaceView: void setEGLContextFactory(android.opengl.GLSurfaceView$EGLContextFactory)> ->_NONE_
<android.telephony.SignalStrength: int getLteRsrq()> ->_NONE_
<android.telephony.SignalStrength: int getLteRsrp()> ->_NONE_
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLowerCase(android.content.ComponentName)> ->_NONE_
<android.net.SntpClient: long getNtpTime()> ->_NONE_
<android.widget.NumberPicker: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()> ->_NONE_
<android.content.ComponentName: java.lang.String getPackageName()> ->_NONE_
<android.widget.TextView: void setHintTextColor(android.content.res.ColorStateList)> ->_NONE_
<android.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor)> ->_NONE_
<android.nfc.tech.NfcBarcode: void connect()> ->_NONE_
<android.renderscript.ScriptIntrinsicConvolve3x3: void setInput(android.renderscript.Allocation)> ->_NONE_
<android.view.GLES20DisplayList: int getSize()> ->_NONE_
<java.security.cert.X509CRL: javax.security.auth.x500.X500Principal getIssuerX500Principal()> ->_NONE_
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.AbstractConnPool createConnectionPool(org.apache.http.params.HttpParams)> ->_NONE_
<android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative()> ->_NONE_
<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.Collection getWaitingThreads(java.util.concurrent.locks.Condition)> ->_NONE_
<android.filterpacks.imageproc.FixedRotationFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<android.database.sqlite.SQLiteOpenHelper: java.lang.String getDatabaseName()> ->_NONE_
<android.net.wifi.WifiStateTracker: void setPolicyDataEnable(boolean)> ->_NONE_
<javax.obex.PrivateOutputStream: void write(byte[],int,int)> ->_NONE_
<java.lang.StackTraceElement: int getLineNumber()> ->_NONE_
<java.nio.NIOAccess: long getBasePointer(java.nio.Buffer)> ->_NONE_
<gov.nist.javax.sip.header.ExtensionHeaderImpl: java.lang.String encodeBody()> ->_NONE_
<android.net.wifi.p2p.WifiP2pGroup: android.net.wifi.p2p.WifiP2pDevice getOwner()> ->_NONE_
<org.apache.xpath.functions.FuncString: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<libcore.io.Posix: int read(java.io.FileDescriptor,java.nio.ByteBuffer)> ->_NONE_
<org.apache.xalan.templates.XUnresolvedVariable: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<android.net.wifi.WifiManager: void connect(int,android.net.wifi.WifiManager$ActionListener)> ->_NONE_
<android.app.ActivityManager: java.util.List getRecentTasksForUser(int,int,int)> ->_NONE_
<org.apache.xml.utils.UnImplNode: java.lang.String getTextContent()> ->_NONE_
<android.app.TaskStackBuilder: android.content.Intent[] getIntents()> ->_NONE_
<gov.nist.javax.sip.message.SIPRequest: java.lang.String getViaHost()> ->_NONE_
<android.accounts.ChooseAccountActivity: android.graphics.drawable.Drawable getDrawableForType(java.lang.String)> ->_NONE_
<org.apache.xpath.axes.NodeSequence: int getCurrentNode()> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: java.lang.String getDocumentTypeDeclarationSystemIdentifier()> ->_NONE_
<org.apache.xpath.patterns.StepPattern: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)> ->_NONE_
<android.widget.GridView: int getRequestedColumnWidth()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol: int getRecordSize(int)> ->_NONE_
<android.view.GLES20DisplayList: void setTransformationInfo(float,float,float,float,float,float,float,float)> ->_NONE_
<org.apache.xml.serializer.SerializerTraceWriter: void write(int)> ->_NONE_
<android.speech.tts.BlockingAudioTrack: int writeToAudioTrack(android.media.AudioTrack,byte[])> ->_NONE_
<org.apache.xalan.processor.StylesheetHandler: boolean getOptimize()> ->_NONE_
<gov.nist.javax.sip.header.Contact: void setAddress(javax.sip.address.Address)> ->_NONE_
<android.view.DragEvent: android.content.ClipDescription getClipDescription()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPublicKey: java.lang.String getFormat()> ->_NONE_
<java.net.URL: java.lang.String getRef()> ->_NONE_
<android.text.SpannableStringBuilder: android.text.Editable replace(int,int,java.lang.CharSequence)> ->_NONE_
<android.content.AsyncTaskLoader: void onForceLoad()> ->_NONE_
<android.text.HtmlToSpannedConverter: int getHtmlColor(java.lang.String)> ->_NONE_
<org.apache.xml.utils.UnImplNode: void setXmlStandalone(boolean)> ->_NONE_
<android.net.wifi.p2p.WifiP2pManager: void addServiceRequest(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.nsd.WifiP2pServiceRequest,android.net.wifi.p2p.WifiP2pManager$ActionListener)> ->_NONE_
<android.media.AsyncPlayer: void setUsesWakeLock(android.content.Context)> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: java.lang.String getEncoding()> ->_NONE_
<android.database.CursorWrapper: java.lang.String getColumnName(int)> ->_NONE_
<android.speech.tts.TextToSpeech: int setLanguage(java.util.Locale)> ->_NONE_
<android.widget.ExpandableListView: int getPackedPositionGroup(long)> ->_NONE_
<org.apache.xml.utils.DOMHelper: short getLevel(org.w3c.dom.Node)> ->_NONE_
<java.io.ObjectStreamClass: java.lang.String getName()> ->_NONE_
<android.text.format.Time: int getWeeksSinceEpochFromJulianDay(int,int)> ->_NONE_
<android.media.AudioTrack: int getChannelCount()> ->_NONE_
<android.animation.AnimatorSet: void setStartDelay(long)> ->_NONE_
<org.xmlpull.v1.sax2.Driver: java.lang.String getType(java.lang.String,java.lang.String)> ->_NONE_
<android.os.storage.StorageManager: android.os.storage.StorageVolume getPrimaryVolume()> ->_NONE_
<android.location.Location: double getLongitude()> ->_NONE_
<android.content.AsyncQueryHandler: void startUpdate(int,java.lang.Object,android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ->_NONE_
<android.widget.RemoteViews: void setDrawableParameters(int,boolean,int,int,android.graphics.PorterDuff$Mode,int)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ContentType getContentTypeHeader()> ->_NONE_
<android.widget.SimpleCursorAdapter: android.widget.SimpleCursorAdapter$ViewBinder getViewBinder()> ->_NONE_
<org.apache.http.impl.conn.tsccm.BasicPoolEntry: long getExpiry()> ->_NONE_
<org.apache.commons.io.EndianUtils: void writeSwappedFloat(java.io.OutputStream,float)> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)> ->_NONE_
<gov.nist.javax.sip.message.ContentImpl: javax.sip.header.ContentDispositionHeader getContentDispositionHeader()> ->_NONE_
<android.graphics.drawable.GradientDrawable: float getFloatOrFraction(android.content.res.TypedArray,int,float)> ->_NONE_
<android.view.Display: void getRectSize(android.graphics.Rect)> ->_NONE_
<android.location.Location: void setElapsedRealtimeNanos(long)> ->_NONE_
<android.media.Metadata: int getInt(int)> ->_NONE_
<android.content.res.Resources: android.content.res.XmlResourceParser getLayout(int)> ->_NONE_
<org.apache.xml.serializer.ToHTMLStream: org.apache.xml.serializer.ElemDesc getElemDesc(java.lang.String)> ->_NONE_
<android.webkit.WebViewClassic: void updateJavaScriptEnabled(boolean)> ->_NONE_
<android.test.TestRunner: java.lang.String[] getTestChildren(java.lang.Class)> ->_NONE_
<android.webkit.WebSettings: void setAllowContentAccess(boolean)> ->_NONE_
<org.apache.http.entity.FileEntity: java.io.InputStream getContent()> ->_NONE_
<android.media.videoeditor.MediaItem: android.graphics.Bitmap[] getThumbnailList(int,int,long,long,int)> ->_NONE_
<android.os.Debug: java.lang.String getCaller(java.lang.StackTraceElement[],int)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: org.w3c.dom.Node getParentNode()> ->_NONE_
<android.mtp.MtpDatabase: int[] getObjectList(int,int,int)> ->_NONE_
<java.sql.Timestamp: long getTime()> ->_NONE_
<android.net.http.HttpResponseCache: android.net.http.HttpResponseCache getInstalled()> ->_NONE_
<android.widget.TextView: int getMaxEms()> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: void getNodeData(org.w3c.dom.Node,org.apache.xml.utils.FastStringBuffer)> ->_NONE_
<android.drm.DrmManagerClient: void setOnErrorListener(android.drm.DrmManagerClient$OnErrorListener)> ->_NONE_
<android.net.ProxyProperties: void setExclusionList(java.lang.String)> ->_NONE_
<javax.crypto.SealedObject: java.lang.Object getObject(java.security.Key,java.lang.String)> ->_NONE_
<android.media.RingtoneManager: void setActualDefaultRingtoneUri(android.content.Context,int,android.net.Uri)> ->_NONE_
<gov.nist.javax.sip.header.ims.SecurityAgree: int getPortClient()> ->_NONE_
<org.apache.xpath.XPathException: java.lang.Throwable getException()> ->_NONE_
<java.text.DecimalFormatSymbols: void setDigit(char)> ->_NONE_
<android.media.MediaFormat: java.lang.String getString(java.lang.String)> ->_NONE_
<android.view.animation.LayoutAnimationController: int getOrder()> ->_NONE_
<android.view.Display: void getRealMetrics(android.util.DisplayMetrics)> ->_NONE_
<org.apache.xpath.NodeSetDTM: boolean getExpandEntityReferences()> ->_NONE_
<android.nfc.tech.MifareClassic: void reconnect()> ->_NONE_
<android.telephony.TelephonyManager: java.lang.String getSimOperator()> ->_NONE_
<android.view.MotionEvent: void getPointerCoords(int,android.view.MotionEvent$PointerCoords)> ->_NONE_
<android.content.pm.ActivityInfo: int getThemeResource()> ->_NONE_
<java.util.logging.Logger: void setUseParentHandlers(boolean)> ->_NONE_
<android.bluetooth.BluetoothSocket: void connect()> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.AuthenticationHandler getTargetAuthenticationHandler()> ->_NONE_
<android.net.EthernetDataTracker: android.net.LinkCapabilities getLinkCapabilities()> ->_NONE_
<gov.nist.javax.sip.header.ims.PAssertedService: java.lang.String encodeBody()> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.Result getOutputTarget()> ->_NONE_
<gov.nist.javax.sip.header.Organization: java.lang.String getOrganization()> ->_NONE_
<gov.nist.javax.sip.stack.SIPServerTransaction: void setOriginalRequest(gov.nist.javax.sip.message.SIPRequest)> ->_NONE_
<android.widget.PopupWindow: void setInputMethodMode(int)> ->_NONE_
<java.text.DateFormat: void setCalendar(java.util.Calendar)> ->_NONE_
<android.sax.Element: android.sax.Element getChild(java.lang.String,java.lang.String)> ->_NONE_
<android.animation.PropertyValuesHolder: void setupEndValue(java.lang.Object)> ->_NONE_
<org.apache.commons.logging.LogSource: org.apache.commons.logging.Log getInstance(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getBranch()> ->_NONE_
<android.view.VelocityTracker: float getYVelocity(int)> ->_NONE_
<android.view.Window: void setWindowManager(android.view.WindowManager,android.os.IBinder,java.lang.String,boolean)> ->_NONE_
<android.net.UrlQuerySanitizer: void setPreferFirstRepeatedParameter(boolean)> ->_NONE_
<android.webkit.WebViewClassic: void sendBatchableInputMessage(int,int,int,java.lang.Object)> ->_NONE_
<java.security.cert.CertPathValidator: java.security.cert.CertPathValidator getInstance(java.lang.String,java.security.Provider)> ->_NONE_
<java.lang.BootClassLoader: java.lang.Package getPackage(java.lang.String)> ->_NONE_
<android.renderscript.Matrix4f: void loadOrtho(float,float,float,float,float,float)> ->_NONE_
<org.apache.http.impl.io.ChunkedOutputStream: void write(byte[])> ->_NONE_
<org.apache.commons.io.output.NullWriter: void write(char[],int,int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: java.net.SocketAddress getLocalSocketAddress()> ->_NONE_
<java.text.DecimalFormatSymbols: char getMonetaryDecimalSeparator()> ->_NONE_
<android.content.AsyncQueryHandler: void startQuery(int,java.lang.Object,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)> ->_NONE_
<gov.nist.core.DuplicateNameValueList: void setSeparator(java.lang.String)> ->_NONE_
<android.test.TestRunner: java.lang.String[] getChildren(android.content.Context,java.lang.String)> ->_NONE_
<android.net.wifi.p2p.WifiP2pGroup: void setOwner(android.net.wifi.p2p.WifiP2pDevice)> ->_NONE_
<android.view.View: void setBackgroundColor(int)> ->_NONE_
<android.view.inputmethod.InputMethodManager: void setInputMethodAndSubtype(android.os.IBinder,java.lang.String,android.view.inputmethod.InputMethodSubtype)> ->_NONE_
<java.net.HttpCookie: void setDiscard(boolean)> ->_NONE_
<org.apache.http.auth.NTCredentials: java.lang.String getUserName()> ->_NONE_
<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap readKeyValueAssignments(android.filterfw.io.PatternScanner,java.util.regex.Pattern)> ->_NONE_
<java.util.prefs.AbstractPreferences: float getFloat(java.lang.String,float)> ->_NONE_
<android.content.ContentValues: java.lang.Object get(java.lang.String)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean: void setVisibleToUser(java.lang.Object,boolean)> ->_NONE_
<org.apache.xpath.VariableStack: org.apache.xpath.objects.XObject getGlobalVariable(org.apache.xpath.XPathContext,int,boolean)> ->_NONE_
<android.text.Layout: float getLineLeft(int)> ->_NONE_
<android.widget.AbsListView: int getCheckedItemPosition()> ->_NONE_
<android.telephony.CellIdentityCdma: int getNetworkId()> ->_NONE_
<org.apache.http.client.params.ClientParamBean: void setDefaultHost(org.apache.http.HttpHost)> ->_NONE_
<java.nio.MappedByteBufferAdapter: long getLong()> ->_NONE_
<android.hardware.usb.UsbAccessory: java.lang.String getModel()> ->_NONE_
<android.app.ActivityManager: int getPackageScreenCompatMode(java.lang.String)> ->_NONE_
<android.net.rtp.AudioCodec: android.net.rtp.AudioCodec getCodec(int,java.lang.String,java.lang.String)> ->_NONE_
<java.lang.String: java.lang.String replace(char,char)> ->_NONE_
<android.animation.AnimatorInflater: android.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.util.AttributeSet)> ->_NONE_
<android.webkit.WebViewClassic: void setMapTrackballToArrowKeys(boolean)> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: void setRedirectStrategy(org.apache.http.client.RedirectStrategy)> ->_NONE_
<android.content.res.Resources: void updateSystemConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)> ->_NONE_
<org.apache.james.mime4j.field.datetime.parser.SimpleCharStream: int getBeginColumn()> ->_NONE_
<android.widget.RemoteViews: void setByte(int,java.lang.String,byte)> ->_NONE_
<android.database.sqlite.SQLiteConnection: void setJournalSizeLimit()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: javax.net.ssl.SSLSession getSession()> ->_NONE_
<android.view.ViewRootImpl: void dispatchMoved(int,int)> ->_NONE_
<android.app.DownloadManager: android.net.Uri getDownloadUri(long)> ->_NONE_
<android.widget.CursorTreeAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: java.lang.String getId()> ->_NONE_
<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.Element getElementById(java.lang.String)> ->_NONE_
<org.apache.http.protocol.HttpService: void setConnReuseStrategy(org.apache.http.ConnectionReuseStrategy)> ->_NONE_
<java.nio.DirectByteBuffer: int getInt(int)> ->_NONE_
<android.database.MergeCursor: byte[] getBlob(int)> ->_NONE_
<gov.nist.javax.sip.stack.TLSMessageChannel: java.lang.String getTransport()> ->_NONE_
<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xalan.templates.ElemTemplate: org.apache.xpath.XPath getMatch()> ->_NONE_
<org.jivesoftware.smack.provider.ProviderManager: java.lang.Object getIQProvider(int)> ->_NONE_
<java.lang.reflect.Field: double getDouble(java.lang.Object)> ->_NONE_
<android.widget.RemoteViews: void setDisplayedChild(int,int)> ->_NONE_
<android.location.LocationRequest: java.lang.String getProvider()> ->_NONE_
<org.apache.xml.serializer.Encodings: org.apache.xml.serializer.EncodingInfo[] loadEncodingInfo()> ->_NONE_
<jp.co.omronsoft.openwnn.Keyboard: java.util.List getModifierKeys()> ->_NONE_
<android.filterpacks.performance.Throughput: int getPeriodTime()> ->_NONE_
<android.webkit.HTML5VideoInline: int getTextureName()> ->_NONE_
<android.app.ActivityManagerProxy: long inputDispatchingTimedOut(int,boolean)> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: void setEnabled(boolean)> ->_NONE_
<android.appwidget.AppWidgetHostView: void updateAppWidgetOptions(android.os.Bundle)> ->_NONE_
<android.os.BatteryStats: void dumpLocked(java.io.PrintWriter)> ->_NONE_
<junit.runner.BaseTestRunner: java.io.File getPreferencesFile()> ->_NONE_
<org.apache.xpath.patterns.StepPattern: int getLastPos(org.apache.xpath.XPathContext)> ->_NONE_
<dalvik.system.BaseDexClassLoader: java.lang.Package getPackage(java.lang.String)> ->_NONE_
<org.apache.http.impl.cookie.BasicCommentHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)> ->_NONE_
<libcore.net.http.RetryableOutputStream: void write(byte[],int,int)> ->_NONE_
<android.filterfw.core.FrameManager: android.filterfw.core.GLEnvironment getGLEnvironment()> ->_NONE_
<android.app.ActivityManagerProxy: int getPackageScreenCompatMode(java.lang.String)> ->_NONE_
<android.view.inputmethod.BaseInputConnection: boolean setComposingText(java.lang.CharSequence,int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: int getSoLinger()> ->_NONE_
<android.filterfw.core.OutputPort: void setFrame(android.filterfw.core.Frame)> ->_NONE_
<org.apache.xml.serializer.utils.URI: void setUserinfo(java.lang.String)> ->_NONE_
<android.location.Address: java.lang.String getCountryName()> ->_NONE_
<android.test.AndroidTestCase: void setTestContext(android.content.Context)> ->_NONE_
<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getSelectedText(int)> ->_NONE_
<android.net.LocalSocketImpl: void setFileDescriptorsForSend(java.io.FileDescriptor[])> ->_NONE_
<android.widget.RemoteViews: java.lang.String getPackage()> ->_NONE_
<android.app.ApplicationPackageManager: android.content.pm.FeatureInfo[] getSystemAvailableFeatures()> ->_NONE_
<org.json.JSONTokener: char readEscapeCharacter()> ->_NONE_
<android.webkit.BrowserFrame: void stopLoading()> ->_NONE_
<android.widget.ExpandableListConnector: android.widget.ExpandableListConnector$PositionMetadata getUnflattenedPos(int)> ->_NONE_
<jp.co.omronsoft.openwnn.Keyboard: int getDimensionOrFraction(android.content.res.TypedArray,int,int,int)> ->_NONE_
<java.nio.FloatBuffer: java.nio.FloatBuffer get(float[],int,int)> ->_NONE_
<org.apache.commons.logging.impl.LogFactoryImpl: org.apache.commons.logging.Log getInstance(java.lang.Class)> ->_NONE_
<android.widget.ListPopupWindow: java.lang.Object getSelectedItem()> ->_NONE_
<android.accounts.AccountManagerService: java.lang.String getUserData(android.accounts.Account,java.lang.String)> ->_NONE_
<android.view.DragEvent: int getAction()> ->_NONE_
<java.util.logging.LogRecord: void setThreadID(int)> ->_NONE_
<java.security.Identity: java.lang.String getName()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: int getLocalPort()> ->_NONE_
<android.webkit.WebViewCore: void access$4400(android.webkit.WebViewCore,int,int)> ->_NONE_
<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getLocalName(int)> ->_NONE_
<android.provider.Browser: android.database.Cursor getVisitedLike(android.content.ContentResolver,java.lang.String)> ->_NONE_
<android.widget.AdapterView: android.widget.AdapterView$OnItemClickListener getOnItemClickListener()> ->_NONE_
<android.os.MemoryFile: int getSize(java.io.FileDescriptor)> ->_NONE_
<android.widget.TextView: void setLinkTextColor(android.content.res.ColorStateList)> ->_NONE_
<android.test.mock.MockPackageManager: int getComponentEnabledSetting(android.content.ComponentName)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: boolean getNeedClientAuth()> ->_NONE_
<android.view.inputmethod.CorrectionInfo: java.lang.CharSequence getNewText()> ->_NONE_
<android.net.wifi.WifiConfigStore: android.net.LinkProperties getLinkProperties(int)> ->_NONE_
<android.database.sqlite.SQLiteProgram: int getUniqueId()> ->_NONE_
<android.widget.ExpandableListView: long getExpandableListPosition(int)> ->_NONE_
<java.util.concurrent.atomic.AtomicReference: java.lang.Object getAndSet(java.lang.Object)> ->_NONE_
<android.view.inputmethod.InputMethodSubtype: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<gov.nist.javax.sip.stack.MessageChannel: void sendMessage(gov.nist.javax.sip.message.SIPMessage,java.net.InetAddress,int)> ->_NONE_
<android.nfc.NfcActivityManager: android.net.Uri[] getUris()> ->_NONE_
<android.widget.TextView: java.lang.CharSequence getImeActionLabel()> ->_NONE_
<android.content.Intent: short[] getShortArrayExtra(java.lang.String)> ->_NONE_
<java.nio.DirectByteBuffer: byte get(int)> ->_NONE_
<android.app.PendingIntent: java.lang.String getTargetPackage()> ->_NONE_
<org.apache.xml.utils.DOMHelper: java.lang.String getExpandedAttributeName(org.w3c.dom.Attr)> ->_NONE_
<org.apache.harmony.security.utils.AlgNameMapper: java.lang.String getStandardName(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.TimeStamp: void setTime(long)> ->_NONE_
<java.security.cert.PKIXParameters: java.util.Date getDate()> ->_NONE_
<org.apache.http.entity.BasicHttpEntity: long getContentLength()> ->_NONE_
<android.test.mock.MockContext: android.os.Looper getMainLooper()> ->_NONE_
<java.nio.CharSequenceAdapter: char get(int)> ->_NONE_
<org.xml.sax.InputSource: java.io.InputStream getByteStream()> ->_NONE_
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getAllIllegal()> ->_NONE_
<android.preference.PreferenceManager: android.app.Activity getActivity()> ->_NONE_
<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine getRequestLine()> ->_NONE_
<android.view.animation.GridLayoutAnimationController: void setColumnDelay(float)> ->_NONE_
<android.os.Environment: java.io.File getExternalStoragePublicDirectory(java.lang.String)> ->_NONE_
<android.support.v4.view.ViewCompatGingerbread: void setOverScrollMode(android.view.View,int)> ->_NONE_
<java.nio.ShortToByteBufferAdapter: short get()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setLongClickable(boolean)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: long getCSeq()> ->_NONE_
<android.widget.AdapterViewAnimator: android.widget.AdapterViewAnimator$ViewAndMetaData getMetaDataForChild(android.view.View)> ->_NONE_
<android.support.v4.view.PagerTabStrip: int getMinHeight()> ->_NONE_
<android.media.CamcorderProfile: android.media.CamcorderProfile get(int)> ->_NONE_
<android.widget.ImageView: int getMaxWidth()> ->_NONE_
<android.nfc.Tag: int getServiceHandle()> ->_NONE_
<org.ccil.cowan.tagsoup.Schema: void setURI(java.lang.String)> ->_NONE_
<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: java.lang.String getType()> ->_NONE_
<org.apache.http.impl.auth.DigestScheme: java.lang.String getCnonce()> ->_NONE_
<android.renderscript.Mesh: android.renderscript.Mesh$Primitive getPrimitive(int)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: org.xml.sax.ContentHandler getContentHandler()> ->_NONE_
<org.apache.xml.serializer.ToStream: void outputDocTypeDecl(java.lang.String,boolean)> ->_NONE_
<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getType(java.lang.String)> ->_NONE_
<org.apache.xpath.operations.UnaryOperation: void setExpression(org.apache.xpath.Expression)> ->_NONE_
<android.os.StrictMode: int getThreadPolicyMask()> ->_NONE_
<gov.nist.core.NameValueList: java.lang.Object getValue(java.lang.String)> ->_NONE_
<libcore.net.http.RawHeaders: java.lang.String getStatusLine()> ->_NONE_
<android.content.pm.ResolveInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: boolean getSpecified()> ->_NONE_
<android.media.AudioService: void sendBroadcastToAll(android.content.Intent)> ->_NONE_
<android.webkit.JWebCoreJavaBridge: void setSharedTimer(long)> ->_NONE_
<android.widget.Switch: boolean getTargetCheckedState()> ->_NONE_
<android.opengl.GLLogWrapper: java.lang.String getFogPName(int)> ->_NONE_
<java.util.prefs.AbstractPreferences: long getLong(java.lang.String,long)> ->_NONE_
<org.apache.james.mime4j.field.datetime.parser.DateTimeParserTokenManager: void setDebugStream(java.io.PrintStream)> ->_NONE_
<org.apache.xpath.patterns.StepPattern: int getProximityPosition(org.apache.xpath.XPathContext)> ->_NONE_
<android.test.mock.MockPackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)> ->_NONE_
<java.io.BufferedReader: int read(char[],int,int)> ->_NONE_
<android.widget.AbsSpinner: int getChildWidth(android.view.View)> ->_NONE_
<android.widget.StackView: android.widget.FrameLayout getFrameForChild()> ->_NONE_
<gov.nist.javax.sip.SipProviderImpl: javax.sip.ListeningPoint[] getListeningPoints()> ->_NONE_
<android.graphics.drawable.AnimationDrawable: void setFrame(int,boolean,boolean)> ->_NONE_
<java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()> ->_NONE_
<org.kxml2.io.KXmlParser: java.lang.String getNamespacePrefix(int)> ->_NONE_
<android.webkit.WebSettings: int getMinimumFontSize()> ->_NONE_
<android.text.style.ForegroundColorSpan: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.appwidget.AppWidgetHostView: void updateAppWidget(android.widget.RemoteViews)> ->_NONE_
<org.apache.xalan.xslt.SecuritySupport: java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader)> ->_NONE_
<android.net.wifi.WifiConfigStore: android.net.wifi.NetworkUpdateResult writeIpAndProxyConfigurationsOnChange(android.net.wifi.WifiConfiguration,android.net.wifi.WifiConfiguration)> ->_NONE_
<org.apache.xml.serializer.utils.AttList: java.lang.String getType(int)> ->_NONE_
<android.support.v4.app.FragmentManagerState: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.support.v4.content.Loader: void startLoading()> ->_NONE_
<android.net.SntpClient: long readTimeStamp(byte[],int)> ->_NONE_
<android.media.MediaPlayer: int setMetadataFilter(java.util.Set,java.util.Set)> ->_NONE_
<org.apache.xalan.transformer.TransformerHandlerImpl: void characters(char[],int,int)> ->_NONE_
<gov.nist.javax.sip.header.SIPHeader: java.lang.String getHeaderValue()> ->_NONE_
<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getBaseURI()> ->_NONE_
<java.lang.Class: java.lang.Class getEnclosingClass()> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CRLImpl: java.util.Set getNonCriticalExtensionOIDs()> ->_NONE_
<java.lang.Long: java.lang.Long getLong(java.lang.String,java.lang.Long)> ->_NONE_
<javax.obex.ServerOperation: java.lang.String getType()> ->_NONE_
<libcore.net.url.FtpURLConnection: int getReply()> ->_NONE_
<android.widget.TabHost: void setCurrentTab(int)> ->_NONE_
<android.bluetooth.BluetoothInputDevice: java.util.List getConnectedDevices()> ->_NONE_
<android.location.Address: void setExtras(android.os.Bundle)> ->_NONE_
<org.apache.xpath.axes.FilterExprWalker: int getLastPos(org.apache.xpath.XPathContext)> ->_NONE_
<org.apache.harmony.security.x509.tsp.PKIStatus: int getStatus()> ->_NONE_
<android.os.Debug: int getThreadExternalAllocSize()> ->_NONE_
<android.os.CommonTimeUtils: int transactSetInt(int,int)> ->_NONE_
<android.net.SSLCertificateSocketFactory: java.lang.String[] getSupportedCipherSuites()> ->_NONE_
<org.apache.xml.dtm.ref.IncrementalSAXSource_Filter: void setContentHandler(org.xml.sax.ContentHandler)> ->_NONE_
<android.widget.ListView: android.graphics.drawable.Drawable getOverscrollFooter()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.io.InputStream getInputStream()> ->_NONE_
<java.lang.BootClassLoader: java.lang.Class loadClass(java.lang.String,boolean)> ->_NONE_
<java.util.concurrent.CountDownLatch: long getCount()> ->_NONE_
<java.util.logging.LogRecord: void setParameters(java.lang.Object[])> ->_NONE_
<org.apache.xml.utils.QName: java.lang.String getNamespace()> ->_NONE_
<javax.xml.namespace.QName: java.lang.String getPrefix()> ->_NONE_
<java.net.URL: java.net.URLConnection openConnection(java.net.Proxy)> ->_NONE_
<org.apache.xml.utils.UnImplNode: int getLength()> ->_NONE_
<android.hardware.display.WifiDisplay: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<gov.nist.javax.sip.header.ims.PAssertedService: java.lang.String getSubserviceIdentifiers()> ->_NONE_
<android.view.TextureView: android.view.TextureView$SurfaceTextureListener getSurfaceTextureListener()> ->_NONE_
<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: int getPeerPort()> ->_NONE_
<org.apache.xalan.processor.StylesheetHandler: boolean getSource_location()> ->_NONE_
<gov.nist.javax.sip.stack.SIPServerTransaction: void setPendingSubscribe(gov.nist.javax.sip.stack.SIPClientTransaction)> ->_NONE_
<android.widget.EdgeEffect: void setPosition(int,int)> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: boolean getInstanceFollowRedirects()> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: int getResponseCode()> ->_NONE_
<org.apache.xpath.axes.WalkingIterator: void setFirstWalker(org.apache.xpath.axes.AxesWalker)> ->_NONE_
<android.nfc.tech.NdefFormatable: android.nfc.Tag getTag()> ->_NONE_
<android.app.AppGlobals: android.app.Application getInitialApplication()> ->_NONE_
<android.renderscript.Sampler: float getAnisotropy()> ->_NONE_
<org.apache.xalan.processor.TransformerFactoryImpl: void setURIResolver(javax.xml.transform.URIResolver)> ->_NONE_
<android.net.nsd.NsdManager: void stopServiceDiscovery(android.net.nsd.NsdManager$DiscoveryListener)> ->_NONE_
<org.apache.xpath.CachedXPathAPI: org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)> ->_NONE_
<org.apache.http.params.AbstractHttpParams: double getDoubleParameter(java.lang.String,double)> ->_NONE_
<gov.nist.javax.sip.header.Priority: java.lang.String encodeBody()> ->_NONE_
<java.nio.DoubleBuffer: java.nio.DoubleBuffer get(double[])> ->_NONE_
<libcore.net.http.HttpEngine: libcore.net.http.ResponseHeaders getResponseHeaders()> ->_NONE_
<gov.nist.javax.sip.header.SIPDate: void setMonth(java.lang.String)> ->_NONE_
<org.apache.xpath.axes.ReverseAxesWalker: void setRoot(int)> ->_NONE_
<javax.obex.ServerRequestHandler: long getConnectionId()> ->_NONE_
<org.apache.xml.serializer.SerializerBase: java.lang.String getEncoding()> ->_NONE_
<android.text.method.BaseMovementMethod: int getBottomLine(android.widget.TextView)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: void setSoTimeout(int)> ->_NONE_
<android.graphics.Bitmap: void setDefaultDensity(int)> ->_NONE_
<org.jivesoftware.smack.ConnectionConfiguration: java.lang.String getTruststorePassword()> ->_NONE_
<android.net.nsd.NsdServiceInfo: void setHost(java.net.InetAddress)> ->_NONE_
<org.xml.sax.helpers.XMLReaderAdapter: void parse(java.lang.String)> ->_NONE_
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int getMaxTotalConnections()> ->_NONE_
<android.app.Activity: android.os.IBinder getActivityToken()> ->_NONE_
<android.webkit.ZoomManager: float getTextWrapScale()> ->_NONE_
<android.filterfw.core.InputPort: android.filterfw.core.Filter getSourceFilter()> ->_NONE_
<org.apache.http.protocol.HttpService: void setResponseFactory(org.apache.http.HttpResponseFactory)> ->_NONE_
<android.widget.AdapterViewAnimator: android.view.View getViewAtRelativeIndex(int)> ->_NONE_
<android.widget.TextView: int getLeftPaddingOffset()> ->_NONE_
<libcore.io.BlockGuardOs: int pwrite(java.io.FileDescriptor,java.nio.ByteBuffer,long)> ->_NONE_
<jp.co.omronsoft.openwnn.EN.UserDictionaryToolsListEN: java.util.Comparator getComparator()> ->_NONE_
<android.net.NetworkPolicyManager: boolean getRestrictBackground()> ->_NONE_
<java.lang.System: java.util.Map getenv()> ->_NONE_
<org.apache.http.impl.io.AbstractMessageParser: org.apache.http.HttpMessage parse()> ->_NONE_
<org.apache.http.impl.conn.tsccm.WaitingThread: org.apache.http.impl.conn.tsccm.RouteSpecificPool getPool()> ->_NONE_
<android.view.inputmethod.InputMethodManager: void updateExtractedText(android.view.View,int,android.view.inputmethod.ExtractedText)> ->_NONE_
<android.view.animation.GridLayoutAnimationController: int getTransformedColumnIndex(android.view.animation.GridLayoutAnimationController$AnimationParameters)> ->_NONE_
<android.webkit.WebViewClassic: void setBackgroundColor(int)> ->_NONE_
<android.webkit.WebViewClassic: void goBackOrForward(int,boolean)> ->_NONE_
<android.support.v4.app.FragmentStatePagerAdapter: void startUpdate(android.view.ViewGroup)> ->_NONE_
<android.media.RemoteControlClient: android.app.PendingIntent getRcMediaIntent()> ->_NONE_
<android.view.View: void setTagInternal(int,java.lang.Object)> ->_NONE_
<java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)> ->_NONE_
<android.widget.CalendarView: int getShownWeekCount()> ->_NONE_
<javax.xml.transform.sax.SAXSource: void setSystemId(java.lang.String)> ->_NONE_
<java.net.PlainSocketImpl: java.io.OutputStream getOutputStream()> ->_NONE_
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo)> ->_NONE_
<org.apache.xalan.transformer.TransformerHandlerImpl: void unparsedEntityDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<org.xml.sax.helpers.AttributesImpl: java.lang.String getType(int)> ->_NONE_
<android.webkit.WebViewClassic: void dumpDomTree(boolean)> ->_NONE_
<org.apache.http.protocol.HttpService: void setExpectationVerifier(org.apache.http.protocol.HttpExpectationVerifier)> ->_NONE_
<android.webkit.L10nUtils: java.lang.String loadString(int)> ->_NONE_
<javax.security.auth.PrivateCredentialPermission: java.util.Set getPrincipalSet()> ->_NONE_
<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker()> ->_NONE_
<android.os.storage.StorageVolume: java.lang.String getDescription(android.content.Context)> ->_NONE_
<org.apache.harmony.xml.dom.InnerNodeImpl: org.w3c.dom.Node getNextSibling()> ->_NONE_
<android.support.v4.view.VelocityTrackerCompatHoneycomb: float getXVelocity(android.view.VelocityTracker,int)> ->_NONE_
<android.support.v4.view.ViewCompat: void setLabelFor(android.view.View,int)> ->_NONE_
<org.kxml2.io.KXmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)> ->_NONE_
<android.net.LinkSocket: boolean setNeededCapabilities(android.net.LinkCapabilities)> ->_NONE_
<org.apache.xml.utils.UnImplNode: java.lang.String getNodeValue()> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: java.io.OutputStream getOutputStream()> ->_NONE_
<org.apache.xalan.templates.ElemChoose: java.lang.String getNodeName()> ->_NONE_
<javax.obex.HeaderSet: void createAuthenticationChallenge(java.lang.String,boolean,boolean)> ->_NONE_
<android.widget.ProgressBar: void setSecondaryProgress(int)> ->_NONE_
<android.filterfw.core.FrameManager: android.filterfw.core.FilterContext getContext()> ->_NONE_
<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void parseForMethod(java.lang.reflect.GenericDeclaration,java.lang.String,java.lang.Class[])> ->_NONE_
<android.view.View: android.view.View$AccessibilityDelegate getAccessibilityDelegate()> ->_NONE_
<org.apache.commons.codec.binary.Base64: java.lang.Object decode(java.lang.Object)> ->_NONE_
<android.preference.PreferenceActivity: android.preference.PreferenceManager getPreferenceManager()> ->_NONE_
<android.inputmethodservice.ExtractEditText: void setIME(android.inputmethodservice.InputMethodService)> ->_NONE_
<android.webkit.JWebCoreJavaBridge: void setActiveWebView(android.webkit.WebViewClassic)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: javax.net.ssl.X509KeyManager getDefaultKeyManager()> ->_NONE_
<android.preference.Preference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)> ->_NONE_
<android.app.Service: android.app.Application getApplication()> ->_NONE_
<java.net.DatagramPacket: int getPort()> ->_NONE_
<org.apache.harmony.security.x509.SubjectPublicKeyInfo: java.security.PublicKey getPublicKey()> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: java.lang.Object setUserData(java.lang.String,java.lang.Object,org.w3c.dom.UserDataHandler)> ->_NONE_
<org.apache.harmony.security.x509.tsp.TimeStampReq: java.math.BigInteger getNonce()> ->_NONE_
<org.apache.commons.io.output.FileWriterWithEncoding: void write(char[])> ->_NONE_
<android.location.GpsSatellite: float getElevation()> ->_NONE_
<android.telephony.CellBroadcastMessage: android.telephony.SmsCbCmasInfo getCmasWarningInfo()> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: void setAccessibilityFocused(boolean)> ->_NONE_
<android.filterfw.core.Filter: java.util.Collection getInputPorts()> ->_NONE_
<android.location.Location: void setProvider(java.lang.String)> ->_NONE_
<android.widget.AutoCompleteTextView: android.widget.Filter getFilter()> ->_NONE_
<android.widget.ProgressBar: void setIndeterminate(boolean)> ->_NONE_
<android.view.Surface: void setDisplayProjection(android.os.IBinder,int,android.graphics.Rect,android.graphics.Rect)> ->_NONE_
<java.util.concurrent.ConcurrentLinkedDeque: java.lang.Object getLast()> ->_NONE_
<android.test.IsolatedContext: java.io.File getFilesDir()> ->_NONE_
<android.text.style.ScaleXSpan: int getSpanTypeId()> ->_NONE_
<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress getPeerPacketSourceAddress()> ->_NONE_
<org.apache.xpath.axes.NodeSequence: int getLength()> ->_NONE_
<android.graphics.drawable.ScaleDrawable: boolean setVisible(boolean,boolean)> ->_NONE_
<java.util.concurrent.Phaser: int getRegisteredParties()> ->_NONE_
<javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.ExtensionHeaderImpl: java.lang.String encode()> ->_NONE_
<java.util.logging.MemoryHandler: java.util.logging.Level getPushLevel()> ->_NONE_
<java.util.zip.CRC32: void update(byte[])> ->_NONE_
<org.apache.http.conn.scheme.Scheme: int getDefaultPort()> ->_NONE_
<android.webkit.WebBackForwardListClassic: int getCurrentIndex()> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: java.lang.String getVersion()> ->_NONE_
<org.apache.xml.dtm.SecuritySupport12: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)> ->_NONE_
<android.widget.TextView: void setScroller(android.widget.Scroller)> ->_NONE_
<android.app.WallpaperManager: android.app.WallpaperInfo getWallpaperInfo()> ->_NONE_
<org.apache.james.mime4j.field.contenttype.parser.ParseException: java.lang.String add_escapes(java.lang.String)> ->_NONE_
<android.widget.TextView: int getTotalPaddingLeft()> ->_NONE_
<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)> ->_NONE_
<org.apache.harmony.security.asn1.ASN1ValueCollection: java.util.Collection getValues(java.lang.Object)> ->_NONE_
<android.widget.RemoteViews: void setRelativeScrollPosition(int,int)> ->_NONE_
<gov.nist.core.LexerCore: java.lang.String getString(char)> ->_NONE_
<android.widget.CalendarView: int getUnfocusedMonthDateColor()> ->_NONE_
<android.content.res.Resources: void startPreloading()> ->_NONE_
<org.apache.http.impl.HttpConnectionMetricsImpl: long getSentBytesCount()> ->_NONE_
<org.jivesoftware.smack.packet.Packet: java.util.Iterator getExtensions()> ->_NONE_
<android.graphics.drawable.DrawableContainer: void setColorFilter(android.graphics.ColorFilter)> ->_NONE_
<jp.co.omronsoft.openwnn.JAJP.DefaultSoftKeyboardJAJP: void setPreferences(android.content.SharedPreferences,android.view.inputmethod.EditorInfo)> ->_NONE_
<junit.runner.StandardTestSuiteLoader: java.lang.Class reload(java.lang.Class)> ->_NONE_
<android.view.inputmethod.InputMethodManager: java.util.List getInputMethodList()> ->_NONE_
<junit.textui.ResultPrinter: void printFooter(junit.framework.TestResult)> ->_NONE_
<android.preference.Preference: void setLayoutResource(int)> ->_NONE_
<java.util.logging.Handler: void setEncoding(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.SIPDate: void setSecond(int)> ->_NONE_
<org.jivesoftware.smack.util.PacketParserUtils: org.jivesoftware.smack.packet.Packet parseMessage(com.google.common.io.protocol.ProtoBuf,long)> ->_NONE_
<org.apache.http.impl.auth.NTLMScheme: java.lang.String getParameter(java.lang.String)> ->_NONE_
<java.security.spec.EllipticCurve: java.math.BigInteger getA()> ->_NONE_
<android.content.Context: java.lang.String getString(int,java.lang.Object[])> ->_NONE_
<java.security.spec.EllipticCurve: java.math.BigInteger getB()> ->_NONE_
<android.view.GLES20Canvas: int getWidth()> ->_NONE_
<android.view.accessibility.AccessibilityManager: java.util.List getAccessibilityServiceList()> ->_NONE_
<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()> ->_NONE_
<org.apache.xml.serializer.dom3.DOMLocatorImpl: int getByteOffset()> ->_NONE_
<android.text.format.Time: boolean parse3339(java.lang.String)> ->_NONE_
<android.test.mock.MockContext: java.io.File getCacheDir()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: javax.xml.transform.SourceLocator getSourceLocatorFor(int)> ->_NONE_
<android.filterpacks.imageproc.BlackWhiteFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)> ->_NONE_
<android.telephony.PhoneNumberUtils: java.lang.String getDefaultIdp()> ->_NONE_
<org.apache.xalan.templates.ElemLiteralResult: org.apache.xalan.templates.AVT getLiteralResultAttributeNS(java.lang.String,java.lang.String)> ->_NONE_
<android.location.LocationManager: void removeUpdates(android.location.LocationListener)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: void setState(javax.sip.TransactionState)> ->_NONE_
<android.view.ActionMode: void setTitleOptionalHint(boolean)> ->_NONE_
<android.media.audiofx.EnvironmentalReverb: short getDiffusion()> ->_NONE_
<android.net.http.HttpConnection: java.lang.String getScheme()> ->_NONE_
<jp.co.omronsoft.openwnn.CandidateTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)> ->_NONE_
<android.net.LinkSocket: void connect(int)> ->_NONE_
<org.apache.http.impl.cookie.BasicClientCookie: void setComment(java.lang.String)> ->_NONE_
<android.content.SyncStorageEngine: int getSyncRandomOffset()> ->_NONE_
<android.net.NetworkStatsHistory: long getBucketDuration()> ->_NONE_
<android.nfc.tech.BasicTagTechnology: int getMaxTransceiveLengthInternal()> ->_NONE_
<android.webkit.WebSettings: void setPluginState(android.webkit.WebSettings$PluginState)> ->_NONE_
<java.text.DateFormatSymbols: java.lang.String[] getAmPmStrings()> ->_NONE_
<android.text.BoringLayout: android.text.Layout$Directions getLineDirections(int)> ->_NONE_
<gov.nist.javax.sip.header.ContentType: java.lang.String getMediaType()> ->_NONE_
<android.opengl.GLLogWrapper: java.lang.String getTextureEnvParamName(float)> ->_NONE_
<android.telephony.cdma.CdmaSmsCbProgramData: int getMaxMessages()> ->_NONE_
<java.text.DecimalFormat: void setMinimumIntegerDigits(int)> ->_NONE_
<android.widget.PopupMenu: android.view.MenuInflater getMenuInflater()> ->_NONE_
<junit.textui.ResultPrinter: void addFailure(junit.framework.Test,junit.framework.AssertionFailedError)> ->_NONE_
<android.view.View: android.view.View$ListenerInfo getListenerInfo()> ->_NONE_
<android.view.VolumePanel: int getStreamVolume(int)> ->_NONE_
<org.apache.xml.dtm.ref.SecuritySupport12: java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader)> ->_NONE_
<gov.nist.javax.sip.stack.TCPMessageChannel: java.net.InetAddress getPeerInetAddress()> ->_NONE_
<android.security.KeyStore: long getmtime(byte[])> ->_NONE_
<android.app.LoadedApk: android.content.IIntentReceiver getReceiverDispatcher(android.content.BroadcastReceiver,android.content.Context,android.os.Handler,android.app.Instrumentation,boolean)> ->_NONE_
<android.animation.LayoutTransition: long getDuration(int)> ->_NONE_
<android.widget.Gallery: int getLimitedMotionScrollAmount(boolean,int)> ->_NONE_
<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getUncaughtExceptionHandler()> ->_NONE_
<android.net.sip.SipAudioCall: android.net.rtp.AudioGroup getAudioGroup()> ->_NONE_
<junit.framework.ComparisonFailure: java.lang.String getMessage()> ->_NONE_
<javax.security.auth.callback.PasswordCallback: java.lang.String getPrompt()> ->_NONE_
<java.net.ProxySelectorImpl: int getSystemPropertyInt(java.lang.String,int)> ->_NONE_
<android.net.NetworkIdentity: java.lang.String getNetworkId()> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: void setContentHandler(org.xml.sax.ContentHandler)> ->_NONE_
<android.webkit.PluginManager: java.lang.String getPluginSharedDataDirectory()> ->_NONE_
<org.apache.commons.io.output.ProxyWriter: void write(int)> ->_NONE_
<org.apache.harmony.security.x509.GeneralNames: java.util.Collection getPairsList()> ->_NONE_
<android.webkit.WebView: android.webkit.PluginList getPluginList()> ->_NONE_
<org.kxml2.io.KXmlParser: java.lang.String getNamespace()> ->_NONE_
<libcore.io.BlockGuardOs: int recvfrom(java.io.FileDescriptor,byte[],int,int,int,java.net.InetSocketAddress)> ->_NONE_
<android.app.ActivityManagerProxy: boolean navigateUpTo(android.os.IBinder,android.content.Intent,int,android.content.Intent)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: void setApplicationData(java.lang.Object)> ->_NONE_
<org.apache.xalan.transformer.XalanTransformState: org.w3c.dom.traversal.NodeIterator getContextNodeList()> ->_NONE_
<android.graphics.drawable.GradientDrawable: void setColor(int)> ->_NONE_
<libcore.net.url.FtpURLConnection: void setDoInput(boolean)> ->_NONE_
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothDevice getRemoteDevice(java.lang.String)> ->_NONE_
<android.webkit.WebViewClassic: int getHeight()> ->_NONE_
<org.xml.sax.SAXException: java.lang.Throwable getCause()> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: javax.sip.Transaction getFirstTransaction()> ->_NONE_
<android.webkit.WebViewClassic: java.lang.String getTouchIconUrl()> ->_NONE_
<android.view.inputmethod.InputMethodSubtype: java.util.HashMap getExtraValueHashMap()> ->_NONE_
<android.gesture.Gesture: long getID()> ->_NONE_
<java.io.EmulatedFieldsForDumping: void write(java.io.ObjectOutput)> ->_NONE_
<android.media.TimedText: java.lang.String getText()> ->_NONE_
<java.util.jar.JarVerifier: java.util.Vector getSignerCertificates(java.lang.String,java.util.Map)> ->_NONE_
<android.content.ContentResolver: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)> ->_NONE_
<android.text.Layout: int getLineForOffset(int)> ->_NONE_
<org.apache.xml.serializer.dom3.DOMOutputImpl: java.lang.String getSystemId()> ->_NONE_
<android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth getService()> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Any: void encodeContent(org.apache.harmony.security.asn1.BerOutputStream)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.Header getHeader(java.lang.String)> ->_NONE_
<org.apache.harmony.xml.dom.AttrImpl: org.w3c.dom.Element getOwnerElement()> ->_NONE_
<android.text.style.BackgroundColorSpan: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<gov.nist.javax.sip.parser.Parser: java.text.ParseException createParseException(java.lang.String)> ->_NONE_
<org.apache.http.protocol.DefaultedHttpContext: java.lang.Object getAttribute(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.SIPHeaderList: javax.sip.header.Header getLast()> ->_NONE_
<java.util.prefs.AbstractPreferences: java.lang.String get(java.lang.String,java.lang.String)> ->_NONE_
<android.view.View: void setOnHoverListener(android.view.View$OnHoverListener)> ->_NONE_
<android.media.AudioTrack: int getNativeOutputSampleRate(int)> ->_NONE_
<gov.nist.javax.sip.stack.MessageProcessor: java.lang.String getSentBy()> ->_NONE_
<android.support.v4.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ->_NONE_
<gov.nist.javax.sip.ListeningPointImpl: gov.nist.javax.sip.SipProviderImpl getProvider()> ->_NONE_
<java.text.DecimalFormatSymbols: void setInternationalCurrencySymbol(java.lang.String)> ->_NONE_
<android.telephony.TelephonyManager: java.lang.String[] getIsimImpu()> ->_NONE_
<android.widget.TextView: java.lang.String getPrivateImeOptions()> ->_NONE_
<gov.nist.javax.sip.header.Credentials: gov.nist.core.NameValueList getCredentials()> ->_NONE_
<android.bluetooth.BluetoothPan: void log(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ExpiresHeader getExpires()> ->_NONE_
<android.view.textservice.SpellCheckerInfo: java.lang.String getId()> ->_NONE_
<android.view.ViewConfiguration: int getFadingEdgeLength()> ->_NONE_
<android.net.wifi.WifiWatchdogStateMachine: void sendLinkStatusNotification(boolean)> ->_NONE_
<android.app.SharedPreferencesImpl: java.lang.String getString(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.http.impl.cookie.RFC2109DomainHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.ims.PAssertedService: void setValue(java.lang.String)> ->_NONE_
<org.apache.http.impl.conn.AbstractClientConnAdapter: org.apache.http.conn.ClientConnectionManager getManager()> ->_NONE_
<android.os.DropBoxManager: android.os.DropBoxManager$Entry getNextEntry(java.lang.String,long)> ->_NONE_
<java.io.File: java.lang.String getAbsolutePath()> ->_NONE_
<java.security.Signer: java.security.PrivateKey getPrivateKey()> ->_NONE_
<org.kxml2.io.KXmlSerializer: void setFeature(java.lang.String,boolean)> ->_NONE_
<org.apache.http.impl.client.DefaultHttpClient: void setDefaultHttpParams(org.apache.http.params.HttpParams)> ->_NONE_
<android.webkit.WebView: void setScrollBarStyle(int)> ->_NONE_
<java.net.DatagramSocket: java.net.SocketAddress getRemoteSocketAddress()> ->_NONE_
<java.security.spec.DSAParameterSpec: java.math.BigInteger getQ()> ->_NONE_
<java.security.spec.DSAParameterSpec: java.math.BigInteger getP()> ->_NONE_
<android.widget.TextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)> ->_NONE_
<org.apache.james.mime4j.field.ContentTypeField: java.lang.String getParameter(java.lang.String)> ->_NONE_
<org.apache.xpath.NodeSetDTM: int getCurrentPos()> ->_NONE_
<android.view.accessibility.AccessibilityInteractionClient: void removeConnection(int)> ->_NONE_
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: void setState(long)> ->_NONE_
<java.sql.Time: int getYear()> ->_NONE_
<org.apache.http.entity.BasicHttpEntity: java.io.InputStream getContent()> ->_NONE_
<java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: java.lang.String getMovementGranularitySymbolicName(int)> ->_NONE_
<java.security.spec.DSAParameterSpec: java.math.BigInteger getG()> ->_NONE_
<org.apache.xml.utils.UnImplNode: java.lang.String getNamespaceURI()> ->_NONE_
<android.net.nsd.NsdManager: int getListenerKey(java.lang.Object)> ->_NONE_
<gov.nist.javax.sip.header.MinExpires: int getExpires()> ->_NONE_
<gov.nist.javax.sip.header.RequestLine: void setMethod(java.lang.String)> ->_NONE_
<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getRTFDTM()> ->_NONE_
<android.net.http.Connection: android.net.http.SslCertificate getCertificate()> ->_NONE_
<android.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> ->_NONE_
<org.kxml2.io.KXmlParser: int getDepth()> ->_NONE_
<android.util.SparseLongArray: long get(int,long)> ->_NONE_
<android.content.ContentService: android.content.SyncManager getSyncManager()> ->_NONE_
<android.widget.RemoteViews: boolean onLoadClass(java.lang.Class)> ->_NONE_
<gov.nist.javax.sip.SipProviderImpl: javax.sip.SipStack getSipStack()> ->_NONE_
<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String getSetterMethodName()> ->_NONE_
<android.telephony.SmsCbCmasInfo: int getUrgency()> ->_NONE_
<java.net.URLConnection: void setDoInput(boolean)> ->_NONE_
<android.mtp.MtpObjectInfo: long getDateModified()> ->_NONE_
<gov.nist.javax.sip.header.extensions.Replaces: java.lang.String encodeBody()> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.protocol.HttpRequestExecutor createRequestExecutor()> ->_NONE_
<android.content.ComponentName: java.lang.String getShortClassName()> ->_NONE_
<org.apache.xpath.functions.FuncConcat: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<android.net.NetworkStatsHistory: long getStart()> ->_NONE_
<android.text.DynamicLayout: int getEllipsizedWidth()> ->_NONE_
<org.apache.harmony.security.x509.TBSCertificate: byte[] getEncoded()> ->_NONE_
<android.view.View: void setSelected(boolean)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: void setParam(org.apache.xalan.templates.ElemParam)> ->_NONE_
<android.opengl.EGLLogWrapper: java.lang.String getErrorString(int)> ->_NONE_
<org.apache.http.impl.client.RequestWrapper: org.apache.http.ProtocolVersion getProtocolVersion()> ->_NONE_
<libcore.io.DropBox: libcore.io.DropBox$Reporter getReporter()> ->_NONE_
<gov.nist.javax.sip.header.UserAgent: java.lang.String encodeProduct()> ->_NONE_
<android.content.pm.ContainerEncryptionParams: javax.crypto.SecretKey getEncryptionKey()> ->_NONE_
<android.net.SSLCertificateSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getHttpSocketFactory(int,android.net.SSLSessionCache)> ->_NONE_
<android.webkit.CookieManagerClassic: void setCookie(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xpath.NodeSet: org.w3c.dom.Node getCurrentNode()> ->_NONE_
<android.database.AbstractCursor: int getColumnIndexOrThrow(java.lang.String)> ->_NONE_
<android.app.ActivityManagerProxy: void cancelIntentSender(android.content.IIntentSender)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: java.math.BigInteger getPrivateExponent()> ->_NONE_
<android.content.res.AssetFileDescriptor: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.webkit.CallbackProxy: void onReceivedSslError(android.webkit.SslErrorHandler,android.net.http.SslError)> ->_NONE_
<android.graphics.drawable.ShapeDrawable: void setIntrinsicWidth(int)> ->_NONE_
<android.telephony.TelephonyManager: java.lang.String getIsimImpi()> ->_NONE_
<org.apache.xml.serializer.Version: java.lang.String getImplementationLanguage()> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: void setExceptionThrown(java.lang.Exception)> ->_NONE_
<java.util.logging.Logger: java.util.logging.Handler[] getHandlers()> ->_NONE_
<android.media.videoeditor.Effect: java.lang.String getId()> ->_NONE_
<android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getCurrentItem()> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: boolean getSpecified()> ->_NONE_
<android.location.Criteria: void setBearingRequired(boolean)> ->_NONE_
<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()> ->_NONE_
<android.view.animation.DecelerateInterpolator: float getInterpolation(float)> ->_NONE_
<org.ccil.cowan.tagsoup.jaxp.SAXFactoryImpl: void setFeature(java.lang.String,boolean)> ->_NONE_
<android.widget.TextView: void setEllipsize(android.text.TextUtils$TruncateAt)> ->_NONE_
<java.net.Socks4Message: void setVersionNumber(int)> ->_NONE_
<java.net.CookieManager: java.util.Map get(java.net.URI,java.util.Map)> ->_NONE_
<org.apache.harmony.security.x501.AttributeValue: java.lang.String makeEscaped(java.lang.String)> ->_NONE_
<android.view.ScaleGestureDetector: float getScaleFactor()> ->_NONE_
<org.apache.xpath.SourceTreeManager: org.xml.sax.XMLReader getXMLReader(javax.xml.transform.Source,javax.xml.transform.SourceLocator)> ->_NONE_
<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.Expression getPredicate(int)> ->_NONE_
<android.location.Criteria: void setAltitudeRequired(boolean)> ->_NONE_
<android.webkit.Plugin: void setDescription(java.lang.String)> ->_NONE_
<android.graphics.drawable.NinePatchDrawable: void setFilterBitmap(boolean)> ->_NONE_
<gov.nist.javax.sip.parser.ContentDispositionParser: gov.nist.javax.sip.header.SIPHeader parse()> ->_NONE_
<javax.xml.parsers.SAXParserFactory: javax.xml.validation.Schema getSchema()> ->_NONE_
<android.widget.CursorAdapter: android.widget.FilterQueryProvider getFilterQueryProvider()> ->_NONE_
<org.apache.http.entity.FileEntity: void writeTo(java.io.OutputStream)> ->_NONE_
<android.graphics.drawable.AnimatedRotateDrawable: int getIntrinsicHeight()> ->_NONE_
<android.database.CursorWrapper: int getType(int)> ->_NONE_
<android.test.InstrumentationTestRunner: void parseTestClasses(java.lang.String,android.test.suitebuilder.TestSuiteBuilder)> ->_NONE_
<java.lang.Class: java.security.ProtectionDomain getProtectionDomain()> ->_NONE_
<org.jivesoftware.smack.PacketReader: org.jivesoftware.smack.packet.LoginResponse parseLoginResponse(com.google.common.io.protocol.ProtoBuf)> ->_NONE_
<android.widget.DialerFilter: void setDigitsWatcher(android.text.TextWatcher)> ->_NONE_
<gov.nist.javax.sip.header.extensions.Join: java.lang.String encodeBody()> ->_NONE_
<junit.extensions.TestSetup: void run(junit.framework.TestResult)> ->_NONE_
<android.drm.DrmRights: java.lang.String getSubscriptionId()> ->_NONE_
<android.view.Display: android.view.CompatibilityInfoHolder getCompatibilityInfo()> ->_NONE_
<java.net.URLConnection: int getHeaderFieldInt(java.lang.String,int)> ->_NONE_
<javax.security.auth.Subject: java.util.Set getPrivateCredentials()> ->_NONE_
<android.view.MotionEvent: int getActionMasked()> ->_NONE_
<org.apache.xml.serializer.WriterToUTF8Buffered: java.io.OutputStream getOutputStream()> ->_NONE_
<android.content.SyncContext: void setStatusText(java.lang.String)> ->_NONE_
<android.app.PendingIntent: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int)> ->_NONE_
<android.security.AndroidKeyPairGeneratorSpec: android.content.Context getContext()> ->_NONE_
<java.security.cert.Certificate: java.lang.String getType()> ->_NONE_
<android.widget.OverScroller: int getDuration()> ->_NONE_
<android.telephony.CellSignalStrengthCdma: int getEvdoLevel()> ->_NONE_
<android.sax.BadXmlException: java.lang.String getMessage()> ->_NONE_
<java.text.BreakIterator: java.text.BreakIterator getCharacterInstance()> ->_NONE_
<java.util.Locale: java.lang.String getDisplayLanguage()> ->_NONE_
<android.filterfw.core.Filter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)> ->_NONE_
<android.webkit.WebView: void setBackgroundColor(int)> ->_NONE_
<android.renderscript.Element: int getVectorSize()> ->_NONE_
<java.text.BreakIterator: java.text.BreakIterator getWordInstance()> ->_NONE_
<android.net.InterfaceConfiguration: void setHardwareAddress(java.lang.String)> ->_NONE_
<android.app.Fragment: void setUserVisibleHint(boolean)> ->_NONE_
<org.apache.xml.serializer.SerializerBase: void setDTDEntityExpansion(boolean)> ->_NONE_
<android.app.admin.DeviceAdminInfo: java.lang.String getReceiverName()> ->_NONE_
<net.oauth.http.HttpMessage: java.io.InputStream getBody()> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationInfo: java.lang.String getQop()> ->_NONE_
<org.apache.xml.utils.UnImplNode: org.w3c.dom.Node getNextSibling()> ->_NONE_
<android.content.ContentProviderProxy: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: int getRequestInterceptorCount()> ->_NONE_
<net.oauth.OAuthAccessor: void setProperty(java.lang.String,java.lang.Object)> ->_NONE_
<android.app.SearchableInfo: android.content.ComponentName getSearchActivity()> ->_NONE_
<org.apache.xpath.patterns.StepPattern: org.apache.xpath.Expression[] getPredicates()> ->_NONE_
<android.accounts.AccountManagerService: android.accounts.AccountManagerService$UserAccounts getUserAccountsForCaller()> ->_NONE_
<gov.nist.javax.sip.header.Server: java.lang.String encodeBody()> ->_NONE_
<android.webkit.CallbackProxy: void onProceededAfterSslError(android.net.http.SslError)> ->_NONE_
<android.widget.CursorTreeAdapter: void setGroupCursor(android.database.Cursor)> ->_NONE_
<org.apache.xpath.axes.OneStepIteratorForward: int getNextNode()> ->_NONE_
<android.telephony.CellInfoLte: void log(java.lang.String)> ->_NONE_
<libcore.io.DropBox: void setReporter(libcore.io.DropBox$Reporter)> ->_NONE_
<android.content.ContextWrapper: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)> ->_NONE_
<android.app.PendingIntent: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int,android.os.Bundle)> ->_NONE_
<org.apache.http.impl.cookie.BasicClientCookie: void setValue(java.lang.String)> ->_NONE_
<android.test.InstrumentationTestCase: void sendKeys(java.lang.String)> ->_NONE_
<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.util.Collection,java.lang.String)> ->_NONE_
<android.widget.AdapterViewAnimator: android.view.View getSelectedView()> ->_NONE_
<android.view.LayoutInflater: android.content.Context getContext()> ->_NONE_
<android.filterpacks.imageproc.DocumentaryFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<android.hardware.display.DisplayManager: android.view.Display[] getDisplays(java.lang.String)> ->_NONE_
<android.content.Intent: boolean[] getBooleanArrayExtra(java.lang.String)> ->_NONE_
<org.apache.xpath.objects.DTMXRTreeFrag: org.apache.xml.dtm.DTM getDTM()> ->_NONE_
<android.net.NetworkQuotaInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<java.net.JarURLConnection: java.net.URL getJarFileURL()> ->_NONE_
<org.apache.xpath.operations.UnaryOperation: org.apache.xpath.Expression getExpression()> ->_NONE_
<org.jivesoftware.smack.util.Base64: byte[] decode(byte[],int,int)> ->_NONE_
<android.mtp.MtpDevice: android.mtp.MtpDeviceInfo getDeviceInfo()> ->_NONE_
<android.media.ExifInterface: byte[] getThumbnail()> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertImpl: byte[] getTbsCertificateInternal()> ->_NONE_
<javax.xml.transform.sax.SAXResult: void setHandler(org.xml.sax.ContentHandler)> ->_NONE_
<android.graphics.drawable.GradientDrawable: boolean getPadding(android.graphics.Rect)> ->_NONE_
<org.apache.xalan.processor.XSLTElementDef: boolean getRequired()> ->_NONE_
<android.webkit.WebViewDatabaseClassic: void setHttpAuthUsernamePassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.widget.ActivityChooserView: android.widget.ActivityChooserModel getDataModel()> ->_NONE_
<android.view.InputDevice: android.os.Vibrator getVibrator()> ->_NONE_
<org.apache.xpath.functions.SecuritySupport12: java.io.FileInputStream getFileInputStream(java.io.File)> ->_NONE_
<android.telephony.SmsCbLocation: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.content.SyncOperation: java.lang.String dump(boolean)> ->_NONE_
<android.graphics.Paint: void getTextBounds(char[],int,int,android.graphics.Rect)> ->_NONE_
<libcore.net.RawSocket: int write(byte[],byte[],int,int)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.QName getMode()> ->_NONE_
<org.apache.xpath.operations.UnaryOperation: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<android.app.admin.DevicePolicyManager: int getStorageEncryptionStatus()> ->_NONE_
<android.view.ViewConfiguration: int getScaledOverflingDistance()> ->_NONE_
<android.appwidget.AppWidgetManager: void updateAppWidget(android.content.ComponentName,android.widget.RemoteViews)> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertPathImpl: org.apache.harmony.security.provider.cert.X509CertPathImpl getInstance(byte[])> ->_NONE_
<org.apache.harmony.security.provider.cert.Cache: java.lang.Object get(long,byte[])> ->_NONE_
<android.app.AppGlobals: java.lang.String getInitialPackage()> ->_NONE_
<gov.nist.javax.sip.header.Priority: java.lang.String getPriority()> ->_NONE_
<android.widget.ProgressBar: android.graphics.drawable.Drawable getProgressDrawable()> ->_NONE_
<gov.nist.javax.sip.stack.ServerLog: void setProperties(java.util.Properties)> ->_NONE_
<android.text.method.NumberKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)> ->_NONE_
<android.webkit.WebHistoryItemClassic: java.lang.String getOriginalUrl()> ->_NONE_
<jp.co.omronsoft.openwnn.OpenWnnEN: void setSymbolMode(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: org.apache.xml.dtm.DTMAxisTraverser getAxisTraverser(int)> ->_NONE_
<org.json.JSONObject: java.lang.String getString(java.lang.String)> ->_NONE_
<java.util.zip.Adler32: void update(int)> ->_NONE_
<android.webkit.CallbackProxy: java.lang.String onJsPrompt(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.view.View: android.view.ViewParent getParentForAccessibility()> ->_NONE_
<android.net.NetworkStats: android.net.NetworkStats$Entry getTotalIncludingTags(android.net.NetworkStats$Entry)> ->_NONE_
<android.app.ActionBar: void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)> ->_NONE_
<android.hardware.input.InputManager: int[] getInputDeviceIds()> ->_NONE_
<android.view.accessibility.AccessibilityEvent: long getEventTime()> ->_NONE_
<android.view.KeyCharacterMap: char getMatch(int,char[],int)> ->_NONE_
<android.renderscript.AllocationAdapter: void setFace(android.renderscript.Type$CubemapFace)> ->_NONE_
<android.bluetooth.BluetoothPbap: boolean isConnected(android.bluetooth.BluetoothDevice)> ->_NONE_
<android.webkit.WebSettingsClassic: void setAppCachePath(java.lang.String)> ->_NONE_
<org.apache.xml.utils.UnImplNode: org.w3c.dom.Document getOwnerDocument()> ->_NONE_
<gov.nist.javax.sip.header.ParametersHeader: int getParameterAsHexInt(java.lang.String)> ->_NONE_
<android.app.FragmentManagerImpl: android.animation.Animator loadAnimator(android.app.Fragment,int,boolean,int)> ->_NONE_
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: int getDnsType()> ->_NONE_
<org.apache.xalan.templates.ElemForEach: void setSelect(org.apache.xpath.XPath)> ->_NONE_
<gov.nist.javax.sip.header.ims.PVisitedNetworkID: void setValue(java.lang.String)> ->_NONE_
<android.database.AbstractCursor: boolean getWantsAllOnMoveCalls()> ->_NONE_
<android.util.LongSparseArray: java.lang.Object get(long,java.lang.Object)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: java.lang.String getNodeNameX(int)> ->_NONE_
<android.test.mock.MockResources: float getDimension(int)> ->_NONE_
<org.apache.http.client.methods.HttpTrace: java.lang.String getMethod()> ->_NONE_
<java.net.Socket: java.net.SocketAddress getLocalSocketAddress()> ->_NONE_
<android.app.ActivityManagerProxy: android.content.ComponentName startService(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)> ->_NONE_
<android.widget.AutoCompleteTextView: int getDropDownHeight()> ->_NONE_
<javax.obex.ServerSession: void handlePutRequest(int)> ->_NONE_
<android.opengl.GLSurfaceView: void setEGLWindowSurfaceFactory(android.opengl.GLSurfaceView$EGLWindowSurfaceFactory)> ->_NONE_
<android.view.InputDevice: java.lang.String getDescriptor()> ->_NONE_
<libcore.net.http.HttpConnection: void setSoTimeout(int)> ->_NONE_
<android.database.sqlite.SQLiteConnection: android.os.ParcelFileDescriptor executeForBlobFileDescriptor(java.lang.String,java.lang.Object[],android.os.CancellationSignal)> ->_NONE_
<libcore.io.ForwardingOs: void setsockoptIfreq(java.io.FileDescriptor,int,int,java.lang.String)> ->_NONE_
<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String getDefault()> ->_NONE_
<android.os.ServiceManagerProxy: android.os.IBinder getService(java.lang.String)> ->_NONE_
<java.util.EventObject: java.lang.Object getSource()> ->_NONE_
<gov.nist.javax.sip.stack.SIPClientTransaction: void setViaHost(java.lang.String)> ->_NONE_
<java.net.DatagramPacket: java.net.SocketAddress getSocketAddress()> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Integer: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)> ->_NONE_
<java.util.concurrent.atomic.AtomicInteger: void set(int)> ->_NONE_
<gov.nist.javax.sip.header.extensions.SessionExpires: java.lang.String getRefresher()> ->_NONE_
<gov.nist.javax.sip.address.SipUri: gov.nist.javax.sip.address.TelephoneNumber getTelephoneSubscriber()> ->_NONE_
<android.test.ProviderTestCase2: android.test.mock.MockContentResolver getMockContentResolver()> ->_NONE_
<android.net.wifi.p2p.WifiP2pDeviceList: void update(android.net.wifi.p2p.WifiP2pDevice)> ->_NONE_
<java.io.File: boolean canRead()> ->_NONE_
<java.nio.channels.SelectionKey: boolean isConnectable()> ->_NONE_
<android.app.ActivityManagerProxy: android.app.IActivityManager$ContentProviderHolder getContentProviderExternal(java.lang.String,int,android.os.IBinder)> ->_NONE_
<android.text.Layout: int getOffsetToLeftRightOf(int,boolean)> ->_NONE_
<android.net.NetworkIdentity: boolean getRoaming()> ->_NONE_
<org.jivesoftware.smack.packet.DataMessage: java.lang.String getPkgSignature()> ->_NONE_
<org.apache.commons.io.input.NullReader: int read(char[],int,int)> ->_NONE_
<android.animation.PropertyValuesHolder: java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class)> ->_NONE_
<java.util.logging.StreamHandler: void setOutputStream(java.io.OutputStream)> ->_NONE_
<android.view.MotionEvent: void setSource(int)> ->_NONE_
<org.apache.xpath.objects.XNull: int getType()> ->_NONE_
<org.apache.harmony.xml.dom.DocumentTypeImpl: java.lang.String getPublicId()> ->_NONE_
<java.util.zip.Deflater: void setInput(byte[],int,int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: void setOOBInline(boolean)> ->_NONE_
<java.net.URLConnection: boolean getDefaultUseCaches()> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: void setDOMBackPointer(org.w3c.dom.Node)> ->_NONE_
<org.apache.xml.serializer.SerializerBase: java.lang.String getNamespaceURIFromPrefix(java.lang.String)> ->_NONE_
<android.widget.RemoteViewsAdapter: void loadNextIndexInBackground()> ->_NONE_
<android.widget.TabHost: int getTabWidgetLocation()> ->_NONE_
<android.view.GLES20RecordingCanvas: void setPooled(boolean)> ->_NONE_
<gov.nist.javax.sip.address.SipUri: void setUser(java.lang.String)> ->_NONE_
<android.media.videoeditor.AudioTrack: int getAudioChannels()> ->_NONE_
<android.graphics.drawable.GradientDrawable: void setAlpha(int)> ->_NONE_
<jp.co.omronsoft.openwnn.JAJP.OpenWnnEngineJAJP: void setKeyboardType(int)> ->_NONE_
<org.ccil.cowan.tagsoup.PYXWriter: void etag(char[],int,int)> ->_NONE_
<org.apache.xml.serializer.utils.URI: java.lang.String getScheme()> ->_NONE_
<gov.nist.javax.sip.message.SIPRequest: java.lang.Object getInviteTransaction()> ->_NONE_
<android.widget.ZoomButtonsController: void setZoomSpeed(long)> ->_NONE_
<android.widget.AbsListView: int getFooterViewsCount()> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: void setFocusable(boolean)> ->_NONE_
<libcore.net.http.ResponseHeaders: int getMaxAgeSeconds()> ->_NONE_
<android.webkit.CallbackProxy: void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions$Callback)> ->_NONE_
<android.support.v4.view.ViewPager: void setPageMargin(int)> ->_NONE_
<android.webkit.WebViewFactory: android.webkit.WebViewFactoryProvider getFactoryByName(java.lang.String,java.lang.ClassLoader)> ->_NONE_
<android.security.KeyStore: byte[] getUidBytes(int)> ->_NONE_
<android.test.AndroidTestRunner: void setInstrumentaiton(android.app.Instrumentation)> ->_NONE_
<android.telephony.TelephonyManager: java.lang.String getNetworkTypeName()> ->_NONE_
<org.apache.xml.serializer.SerializerBase: void setDoctype(java.lang.String,java.lang.String)> ->_NONE_
<android.widget.ImageSwitcher: void setImageURI(android.net.Uri)> ->_NONE_
<org.jivesoftware.smack.packet.Packet: int getLastStreamId()> ->_NONE_
<android.test.mock.MockCursor: java.lang.String[] getColumnNames()> ->_NONE_
<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)> ->_NONE_
<java.net.URLConnection: long getLastModified()> ->_NONE_
<android.widget.TextView: int getMinWidth()> ->_NONE_
<org.kxml2.io.KXmlParser: java.lang.String readQuotedId(boolean)> ->_NONE_
<android.renderscript.Element: android.renderscript.Element$DataKind getDataKind()> ->_NONE_
<android.webkit.WebSettingsClassic: void setBuiltInZoomControls(boolean)> ->_NONE_
<android.media.AudioService: int getLastAudibleStreamVolume(int)> ->_NONE_
<android.widget.ZoomButtonsController: void setZoomInEnabled(boolean)> ->_NONE_
<android.graphics.Region: boolean getBoundaryPath(android.graphics.Path)> ->_NONE_
<android.webkit.WebSettingsClassic: boolean getAutoFillEnabled()> ->_NONE_
<android.content.ContentProviderProxy: android.net.Uri insert(android.net.Uri,android.content.ContentValues)> ->_NONE_
<java.security.cert.PKIXParameters: void setTargetCertConstraints(java.security.cert.CertSelector)> ->_NONE_
<org.apache.xpath.XPathContext: void setCurrentExpressionNodeStack(org.apache.xml.utils.IntStack)> ->_NONE_
<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()> ->_NONE_
<gov.nist.javax.sip.SipProviderImpl: void setAutomaticDialogSupportEnabled(boolean)> ->_NONE_
<android.content.res.TypedArray: int getResourceId(int,int)> ->_NONE_
<android.drm.DrmManagerClient: java.lang.String[] getAvailableDrmEngines()> ->_NONE_
<java.util.Locale: void setDefault(java.util.Locale)> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: void setScrollable(boolean)> ->_NONE_
<gov.nist.javax.sip.header.CallID: java.lang.String encodeBody()> ->_NONE_
<android.webkit.WebViewClassic: void setHttpAuthUsernamePassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.webkit.BrowserFrame: java.lang.String getUserAgentString()> ->_NONE_
<org.apache.http.params.HttpProtocolParams: java.lang.String getHttpElementCharset(org.apache.http.params.HttpParams)> ->_NONE_
<gov.nist.javax.sip.stack.MessageProcessor: gov.nist.javax.sip.header.Via getViaHeader()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: byte[] getDigestMD5()> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: void setEncoding(java.lang.String)> ->_NONE_
<android.widget.Toast: float getHorizontalMargin()> ->_NONE_
<org.apache.xpath.functions.SecuritySupport12: java.lang.String getSystemProperty(java.lang.String)> ->_NONE_
<org.apache.http.params.HttpProtocolParams: void setContentCharset(org.apache.http.params.HttpParams,java.lang.String)> ->_NONE_
<org.apache.http.client.params.ClientParamBean: void setVirtualHost(org.apache.http.HttpHost)> ->_NONE_
<org.apache.xml.utils.SecuritySupport: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)> ->_NONE_
<android.app.Activity: android.view.LayoutInflater getLayoutInflater()> ->_NONE_
<android.webkit.WebViewInputDispatcher: void setWebKitWantsTouchEvents(boolean)> ->_NONE_
<android.support.v4.view.MotionEventCompat: int getActionMasked(android.view.MotionEvent)> ->_NONE_
<javax.xml.validation.SchemaFactoryFinder: javax.xml.validation.SchemaFactory loadFromServicesFile(java.lang.String,java.lang.String,java.io.InputStream)> ->_NONE_
<java.io.DataInputStream: java.lang.String readUTF()> ->_NONE_
<android.webkit.HTML5VideoView: int getTextureName()> ->_NONE_
<android.os.Bundle: java.lang.String getPairValue()> ->_NONE_
<org.apache.commons.io.output.CountingOutputStream: long getByteCount()> ->_NONE_
<android.os.Registrant: android.os.Handler getHandler()> ->_NONE_
<org.apache.xalan.templates.ElemTextLiteral: void setDisableOutputEscaping(boolean)> ->_NONE_
<org.xmlpull.v1.XmlPullParserException: int getLineNumber()> ->_NONE_
<org.apache.xml.utils.res.XResources_ja_JP_HA: java.lang.Object[][] getContents()> ->_NONE_
<android.database.CrossProcessCursorWrapper: android.database.CursorWindow getWindow()> ->_NONE_
<org.apache.xalan.processor.XSLTAttributeDef: boolean setAttrValue(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)> ->_NONE_
<android.telephony.TelephonyManager: int getPhoneTypeFromProperty()> ->_NONE_
<android.os.ServiceManagerProxy: android.os.IBinder checkService(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.TemplateList: org.apache.xalan.templates.ElemTemplate getTemplate(org.apache.xml.utils.QName)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: void setHeaders(java.util.List)> ->_NONE_
<org.apache.http.impl.client.DefaultHttpRequestRetryHandler: int getRetryCount()> ->_NONE_
<org.apache.commons.io.output.FileWriterWithEncoding: void write(char[],int,int)> ->_NONE_
<android.widget.AbsListView: void setOverScrollMode(int)> ->_NONE_
<org.apache.xml.utils.res.XResources_ja_JP_HI: java.lang.Object[][] getContents()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.Element getDocumentElement()> ->_NONE_
<java.text.Bidi: int getRunCount()> ->_NONE_
<android.webkit.WebViewClassic: void saveWebArchive(java.lang.String,boolean,android.webkit.ValueCallback)> ->_NONE_
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()> ->_NONE_
<android.support.v4.app.FragmentStatePagerAdapter: void finishUpdate(android.view.ViewGroup)> ->_NONE_
<org.apache.xml.serializer.ToXMLSAXHandler: void setDocumentLocator(org.xml.sax.Locator)> ->_NONE_
<android.speech.SpeechRecognizer: void setRecognitionListener(android.speech.RecognitionListener)> ->_NONE_
<java.nio.MappedByteBufferAdapter: byte get(int)> ->_NONE_
<java.util.logging.Logger: java.util.logging.Filter getFilter()> ->_NONE_
<gov.nist.javax.sip.header.ContentLanguage: void setContentLanguage(java.util.Locale)> ->_NONE_
<android.app.WallpaperInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)> ->_NONE_
<javax.obex.ClientSession: javax.obex.Operation get(javax.obex.HeaderSet)> ->_NONE_
<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)> ->_NONE_
<android.view.ViewRootImpl: void setView(android.view.View,android.view.WindowManager$LayoutParams,android.view.View)> ->_NONE_
<android.widget.TextView: void setInputExtras(int)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: org.apache.xml.dtm.DTMAxisIterator getTypedAxisIterator(int,int)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)> ->_NONE_
<android.filterfw.core.FilterGraph: void setAutoBranchMode(int)> ->_NONE_
<android.bluetooth.BluetoothTetheringDataTracker: int getDefaultGatewayAddr()> ->_NONE_
<android.webkit.WebView: android.webkit.WebView$HitTestResult getHitTestResult()> ->_NONE_
<android.mtp.MtpObjectInfo: int getImagePixWidth()> ->_NONE_
<libcore.net.http.HttpURLConnectionImpl: java.net.Proxy getProxy()> ->_NONE_
<java.net.URLConnection: java.lang.String getDefaultRequestProperty(java.lang.String)> ->_NONE_
<android.support.v4.app.FragmentActivity: android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean)> ->_NONE_
<android.graphics.Canvas: boolean getClipBounds(android.graphics.Rect)> ->_NONE_
<android.net.http.AndroidHttpClientConnection: org.apache.http.HttpConnectionMetrics getMetrics()> ->_NONE_
<android.media.AudioService: void broadcastScoConnectionState(int)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getTransport()> ->_NONE_
<java.security.Security: java.util.Set getAlgorithms(java.lang.String)> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: void setLabelFor(android.view.View)> ->_NONE_
<android.hardware.usb.UsbRequest: java.lang.Object getClientData()> ->_NONE_
<android.widget.PopupWindow: int getInputMethodMode()> ->_NONE_
<android.inputmethodservice.Keyboard: void setKeyWidth(int)> ->_NONE_
<org.apache.xml.utils.StylesheetPIHandler: void setURIResolver(javax.xml.transform.URIResolver)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1: int getMaxScrollY(java.lang.Object)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1: int getMaxScrollX(java.lang.Object)> ->_NONE_
<android.support.v4.view.MenuItemCompatHoneycomb: android.view.MenuItem setActionView(android.view.MenuItem,android.view.View)> ->_NONE_
<android.util.MonthDisplayHelper: int getRowOf(int)> ->_NONE_
<android.os.PerformanceCollector: void setPerformanceResultsWriter(android.os.PerformanceCollector$PerformanceResultsWriter)> ->_NONE_
<org.apache.xalan.xslt.EnvironmentCheck: boolean checkEnvironment(java.io.PrintWriter)> ->_NONE_
<android.text.method.QwertyKeyListener: int getInputType()> ->_NONE_
<org.apache.xml.serializer.SerializerBase: void setIndentAmount(int)> ->_NONE_
<org.jivesoftware.smackx.packet.MUCUser: void setInvite(org.jivesoftware.smackx.packet.MUCUser$Invite)> ->_NONE_
<android.view.ViewConfiguration: float getScrollFriction()> ->_NONE_
<java.util.concurrent.locks.ReentrantReadWriteLock: int getWaitQueueLength(java.util.concurrent.locks.Condition)> ->_NONE_
<org.apache.xalan.templates.ElemForEach: org.apache.xpath.Expression getSelect()> ->_NONE_
<android.graphics.Paint: float getFontSpacing()> ->_NONE_
<gov.nist.javax.sip.stack.TCPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()> ->_NONE_
<org.javia.arity.SimpleCodeGen: org.javia.arity.CompiledFunction getFun()> ->_NONE_
<android.nfc.NdefMessage: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<javax.xml.validation.Validator: void setFeature(java.lang.String,boolean)> ->_NONE_
<android.content.Intent: android.content.Intent setClassName(android.content.Context,java.lang.String)> ->_NONE_
<android.content.ContextWrapper: void sendBroadcast(android.content.Intent)> ->_NONE_
<java.text.NumberFormat: java.text.NumberFormat getPercentInstance(java.util.Locale)> ->_NONE_
<android.net.NetworkStatsHistory: void writeToStream(java.io.DataOutputStream)> ->_NONE_
<java.lang.reflect.Method: java.lang.Object getDefaultValue()> ->_NONE_
<android.preference.PreferenceGroup: void setOrderingAsAdded(boolean)> ->_NONE_
<android.app.AlertDialog: android.widget.ListView getListView()> ->_NONE_
<android.app.PendingIntent: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.xml.serializer.Version: int getMaintenanceVersionNum()> ->_NONE_
<javax.xml.transform.stream.StreamSource: java.io.Reader getReader()> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: java.lang.String getDoctypePublic()> ->_NONE_
<android.view.inputmethod.BaseInputConnection: void replaceText(java.lang.CharSequence,int,boolean)> ->_NONE_
<android.media.videoeditor.Overlay: java.lang.String getId()> ->_NONE_
<android.webkit.WebSettings: java.lang.String getSerifFontFamily()> ->_NONE_
<android.media.AudioService: void setPlaybackInfoForRcc(int,int,int)> ->_NONE_
<android.net.wifi.WifiStateMachine: void setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)> ->_NONE_
<org.apache.xml.serializer.utils.URI: java.lang.String getPath(boolean,boolean)> ->_NONE_
<jp.co.omronsoft.openwnn.TextCandidates1LineViewManager: jp.co.omronsoft.openwnn.WnnWord getFocusedWnnWord()> ->_NONE_
<android.mtp.MtpObjectInfo: int getFormat()> ->_NONE_
<android.content.BroadcastReceiver: void setDebugUnregister(boolean)> ->_NONE_
<android.inputmethodservice.Keyboard: int[] getNearestKeys(int,int)> ->_NONE_
<org.apache.xalan.transformer.TransformerHandlerImpl: void endPrefixMapping(java.lang.String)> ->_NONE_
<org.apache.xml.serializer.SecuritySupport12: boolean getFileExists(java.io.File)> ->_NONE_
<libcore.icu.CollationElementIteratorICU: int getOffset()> ->_NONE_
<android.widget.Gallery: void setSelectedPositionInt(int)> ->_NONE_
<org.apache.harmony.security.asn1.ASN1OctetString: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> ->_NONE_
<gov.nist.core.NameValueList: java.lang.String getParameter(java.lang.String)> ->_NONE_
<java.security.cert.X509CertSelector: boolean getMatchAllSubjectAltNames()> ->_NONE_
<android.widget.Spinner: void setGravity(int)> ->_NONE_
<android.telephony.SmsMessage: java.lang.String getEmailBody()> ->_NONE_
<gov.nist.javax.sip.message.SIPRequest: javax.sip.address.URI getRequestURI()> ->_NONE_
<org.apache.harmony.security.asn1.BitString: boolean getBit(int)> ->_NONE_
<android.webkit.DeviceMotionService: android.hardware.SensorManager getSensorManager()> ->_NONE_
<android.net.WebAddress: java.lang.String getAuthInfo()> ->_NONE_
<org.apache.commons.io.IOUtils: void write(java.lang.CharSequence,java.io.OutputStream,java.lang.String)> ->_NONE_
<android.webkit.JniUtil: java.lang.String getPackageName()> ->_NONE_
<java.util.Calendar: void set(int,int,int,int,int,int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: int getApplicationBufferSize()> ->_NONE_
<android.graphics.drawable.DrawableContainer: void setExitFadeDuration(int)> ->_NONE_
<android.app.ActivityManagerProxy: boolean handleApplicationWtf(android.os.IBinder,java.lang.String,android.app.ApplicationErrorReport$CrashInfo)> ->_NONE_
<org.jivesoftware.smack.XMPPConnection: void dumpVerbose(java.io.PrintWriter)> ->_NONE_
<org.apache.http.impl.client.RequestWrapper: int getExecCount()> ->_NONE_
<android.widget.TextView: void sendAccessibilityEvent(int)> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: void setPhoneHome(java.lang.String,java.lang.String)> ->_NONE_
<android.view.Surface: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<jp.co.omronsoft.openwnn.SymbolList: jp.co.omronsoft.openwnn.WnnWord getNextCandidate()> ->_NONE_
<gov.nist.javax.sip.message.SIPRequest: java.lang.Object getMessageChannel()> ->_NONE_
<net.oauth.ConsumerProperties: java.lang.String getURL(java.net.URL,java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: int getDocumentRoot(int)> ->_NONE_
<android.support.v4.view.ViewCompatGingerbread: int getOverScrollMode(android.view.View)> ->_NONE_
<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack getCurrentNodeStack()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBaseIterators: org.apache.xml.dtm.DTMAxisIterator getTypedAxisIterator(int,int)> ->_NONE_
<org.apache.harmony.xml.dom.NotationImpl: java.lang.String getPublicId()> ->_NONE_
<gov.nist.javax.sip.SipStackImpl: java.lang.String[] getEnabledProtocols()> ->_NONE_
<java.sql.Time: void setTime(long)> ->_NONE_
<android.database.MatrixCursor: int getCount()> ->_NONE_
<org.apache.commons.io.EndianUtils: void writeSwappedDouble(java.io.OutputStream,double)> ->_NONE_
<android.media.videoeditor.EffectKenBurns: android.graphics.Rect getStartRect()> ->_NONE_
<android.view.WindowManagerGlobal: java.lang.String getWindowName(android.view.ViewRootImpl)> ->_NONE_
<android.net.sip.SipSession: int getState()> ->_NONE_
<org.apache.xml.serializer.SecuritySupport12: java.io.FileInputStream getFileInputStream(java.io.File)> ->_NONE_
<org.apache.http.auth.UsernamePasswordCredentials: java.lang.String getPassword()> ->_NONE_
<android.content.Loader: void startLoading()> ->_NONE_
<java.net.CookieHandler: void setDefault(java.net.CookieHandler)> ->_NONE_
<org.apache.harmony.security.x501.AttributeTypeAndValue: org.apache.harmony.security.utils.ObjectIdentifier getOID(int[])> ->_NONE_
<android.media.AudioService: void setBluetoothA2dpOn(boolean)> ->_NONE_
<android.widget.AbsListView: void setFastScrollAlwaysVisible(boolean)> ->_NONE_
<android.media.audiofx.Equalizer: short getNumberOfPresets()> ->_NONE_
<android.view.KeyEvent: int getAction()> ->_NONE_
<org.apache.harmony.security.x509.IssuingDistributionPoint: void setIndirectCRL(boolean)> ->_NONE_
<android.hardware.input.InputManager: java.lang.String getCurrentKeyboardLayoutForInputDevice(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.NamespaceAlias: void setStylesheetNamespace(java.lang.String)> ->_NONE_
<android.net.nsd.NsdServiceInfo: java.net.InetAddress getHost()> ->_NONE_
<android.webkit.HTML5VideoView: void setOnErrorListener(android.webkit.HTML5VideoViewProxy)> ->_NONE_
<android.webkit.WebBackForwardListClassic: int getSize()> ->_NONE_
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.StylesheetComposed getImport(int)> ->_NONE_
<android.support.v4.app.BackStackRecord: java.lang.CharSequence getBreadCrumbTitle()> ->_NONE_
<java.net.Socket: void setSoLinger(boolean,int)> ->_NONE_
<android.app.BackStackRecord: java.lang.CharSequence getBreadCrumbTitle()> ->_NONE_
<android.content.SyncStorageEngine: int getIsSyncable(android.accounts.Account,int,java.lang.String)> ->_NONE_
<android.inputmethodservice.IInputMethodSessionWrapper: void updateSelection(int,int,int,int,int,int)> ->_NONE_
<org.apache.http.client.params.HttpClientParams: void setRedirecting(org.apache.http.params.HttpParams,boolean)> ->_NONE_
<android.view.Display: int getMaximumSizeDimension()> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: java.lang.Thread getTransformThread()> ->_NONE_
<android.widget.EditText: void setSelection(int)> ->_NONE_
<java.util.ResourceBundle: java.lang.String getString(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.ElemSort: void setCaseOrder(org.apache.xalan.templates.AVT)> ->_NONE_
<net.oauth.OAuthMessage: java.lang.String getConsumerKey()> ->_NONE_
<android.renderscript.Mesh: int getPrimitiveCount()> ->_NONE_
<android.telephony.PhoneNumberUtils: java.lang.String getNumberFromIntent(android.content.Intent,android.content.Context)> ->_NONE_
<org.apache.commons.codec.net.QuotedPrintableCodec: byte[] encodeQuotedPrintable(java.util.BitSet,byte[])> ->_NONE_
<android.nfc.NfcActivityManager: void setNdefPushMessage(android.app.Activity,android.nfc.NdefMessage)> ->_NONE_
<android.text.SpannableStringBuilder: int getSpanEnd(java.lang.Object)> ->_NONE_
<libcore.io.ForwardingOs: int getsockoptByte(java.io.FileDescriptor,int,int)> ->_NONE_
<android.content.Intent: int[] getIntArrayExtra(java.lang.String)> ->_NONE_
<org.apache.xml.serializer.WriterToASCI: java.io.Writer getWriter()> ->_NONE_
<java.awt.font.NumericShaper: java.awt.font.NumericShaper getShaper(int)> ->_NONE_
<android.app.PendingIntent: int getCreatorUid()> ->_NONE_
<android.graphics.Matrix: void setRotate(float,float,float)> ->_NONE_
<org.apache.xalan.processor.ProcessorOutputElem: void setForeignAttr(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.media.AudioManager: void setBluetoothScoOn(boolean)> ->_NONE_
<android.telephony.NeighboringCellInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<java.net.DatagramSocket: int getPort()> ->_NONE_
<java.security.cert.X509CertSelector: java.lang.String getIssuerAsString()> ->_NONE_
<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)> ->_NONE_
<android.content.Intent: byte getByteExtra(java.lang.String,byte)> ->_NONE_
<org.apache.http.impl.conn.tsccm.WaitingThreadAborter: void setWaitingThread(org.apache.http.impl.conn.tsccm.WaitingThread)> ->_NONE_
<org.apache.commons.io.output.LockableFileWriter: void write(char[],int,int)> ->_NONE_
<org.apache.http.impl.SocketHttpClientConnection: void setSocketTimeout(int)> ->_NONE_
<java.util.prefs.NodeChangeEvent: java.util.prefs.Preferences getChild()> ->_NONE_
<org.apache.commons.codec.net.URLCodec: byte[] encode(byte[])> ->_NONE_
<android.content.res.Resources: android.graphics.Movie getMovie(int)> ->_NONE_
<libcore.io.BlockGuardOs: int write(java.io.FileDescriptor,byte[],int,int)> ->_NONE_
<android.filterfw.core.Frame: void setFormat(android.filterfw.core.FrameFormat)> ->_NONE_
<android.graphics.drawable.InsetDrawable: boolean getPadding(android.graphics.Rect)> ->_NONE_
<android.media.effect.EffectFactory: java.lang.Class getEffectClassByName(java.lang.String)> ->_NONE_
<org.apache.xml.serializer.ToSAXHandler: void setShouldOutputNSAttr(boolean)> ->_NONE_
<android.media.JetPlayer: boolean setMuteFlags(int,boolean)> ->_NONE_
<java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)> ->_NONE_
<org.apache.xalan.templates.StylesheetComposed: org.apache.xalan.templates.StylesheetComposed getImportComposed(int)> ->_NONE_
<android.media.audiofx.BassBoost: short getRoundedStrength()> ->_NONE_
<android.view.InputDevice: int[] getDeviceIds()> ->_NONE_
<android.widget.ExpandableListView: int getPackedPositionChild(long)> ->_NONE_
<java.util.prefs.XMLParser: void flushStartTag(java.lang.String,java.io.BufferedWriter)> ->_NONE_
<java.io.RandomAccessFile: double readDouble()> ->_NONE_
<org.apache.xalan.templates.StylesheetComposed: int getIncludeCountComposed()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: javax.sip.Dialog getReplacesDialog(gov.nist.javax.sip.header.extensions.ReplacesHeader)> ->_NONE_
<android.os.Bundle: android.os.IBinder getIBinder(java.lang.String)> ->_NONE_
<javax.obex.HeaderSet: int getResponseCode()> ->_NONE_
<java.text.StringCharacterIterator: void setText(java.lang.String)> ->_NONE_
<org.apache.james.mime4j.field.address.NamedMailbox: java.lang.String getAddressString(boolean)> ->_NONE_
<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter$CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])> ->_NONE_
<android.content.res.Configuration: int getScreenLayoutNoDirection(int)> ->_NONE_
<java.math.MathContext: int getPrecision()> ->_NONE_
<android.test.ProviderTestCase: android.content.ContentProvider getProvider()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: void setProperty(java.lang.String,java.lang.Object)> ->_NONE_
<javax.net.ssl.SSLSessionBindingEvent: javax.net.ssl.SSLSession getSession()> ->_NONE_
<java.io.LineNumberReader: int getLineNumber()> ->_NONE_
<org.ccil.cowan.tagsoup.jaxp.SAX1ParserAdapter: void setEntityResolver(org.xml.sax.EntityResolver)> ->_NONE_
<android.inputmethodservice.Keyboard: int getHorizontalGap()> ->_NONE_
<android.graphics.drawable.ScaleDrawable: int getChangingConfigurations()> ->_NONE_
<org.jivesoftware.smack.packet.DataMessage: void setRegId(java.lang.String)> ->_NONE_
<android.bluetooth.BluetoothPan: void setBluetoothTethering(boolean)> ->_NONE_
<org.jivesoftware.smack.SASLAuthentication: void authenticated()> ->_NONE_
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: int getQueueLength()> ->_NONE_
<java.util.concurrent.ForkJoinTask: java.util.concurrent.ForkJoinPool getPool()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: short getNodeType(int)> ->_NONE_
<android.media.CameraProfile: int getJpegEncodingQualityParameter(int)> ->_NONE_
<android.location.Address: int getMaxAddressLineIndex()> ->_NONE_
<android.telephony.CellLocation: android.telephony.CellLocation getEmpty()> ->_NONE_
<android.webkit.WebHistoryItemClassic: java.lang.String getUrl()> ->_NONE_
<org.apache.commons.codec.net.QuotedPrintableCodec: java.lang.String encode(java.lang.String)> ->_NONE_
<android.widget.EdgeEffect: void setSize(int,int)> ->_NONE_
<android.filterpacks.imageproc.SimpleImageFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<org.apache.xml.dtm.ref.IncrementalSAXSource_Filter: void setReturnFrequency(int)> ->_NONE_
<net.oauth.signature.HMAC_SHA1: java.lang.String getSignature(java.lang.String)> ->_NONE_
<android.widget.TableLayout: void setColumnShrinkable(int,boolean)> ->_NONE_
<android.view.textservice.SentenceSuggestionsInfo: int getSuggestionsCount()> ->_NONE_
<libcore.io.BlockGuardOs: int sendto(java.io.FileDescriptor,java.nio.ByteBuffer,int,java.net.InetAddress,int)> ->_NONE_
<android.app.ApplicationPackageManager: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)> ->_NONE_
<android.widget.TextView: java.lang.CharSequence getHint()> ->_NONE_
<android.app.ApplicationPackageManager: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)> ->_NONE_
<org.jivesoftware.smackx.packet.DiscoverInfo: java.lang.String getNode()> ->_NONE_
<org.apache.xpath.functions.ObjectFactory: java.lang.ClassLoader findClassLoader()> ->_NONE_
<org.apache.xpath.functions.FuncSystemProperty: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<android.filterfw.core.Filter: int getNumberOfConnectedInputs()> ->_NONE_
<org.jivesoftware.smack.packet.DefaultPacketExtension: java.lang.String getNamespace()> ->_NONE_
<android.content.IntentFilter: void setPriority(int)> ->_NONE_
<javax.xml.datatype.Duration: int getYears()> ->_NONE_
<android.test.InstrumentationTestRunner: com.android.internal.util.Predicate getNotAnnotationPredicate(java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: java.lang.String[] getEnabledCipherSuites()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: void setValue(java.lang.String)> ->_NONE_
<android.support.v4.view.PagerTitleStrip: void setTextSize(int,float)> ->_NONE_
<libcore.net.http.UnknownLengthHttpInputStream: int read(byte[],int,int)> ->_NONE_
<javax.crypto.EncryptedPrivateKeyInfo: java.security.spec.PKCS8EncodedKeySpec getKeySpec(java.security.Key,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.ims.PChargingFunctionAddresses: void setEventChargingFunctionAddress(java.lang.String)> ->_NONE_
<org.jivesoftware.smack.sasl.SASLPlainMechanism: java.lang.String getName()> ->_NONE_
<android.webkit.WebViewCore: boolean isUpdatePicturePaused(android.webkit.WebViewCore)> ->_NONE_
<android.net.rtp.RtpStream: int getSocket()> ->_NONE_
<org.jivesoftware.smack.packet.StreamError: void setText(java.lang.String)> ->_NONE_
<libcore.io.ForwardingOs: int writev(java.io.FileDescriptor,java.lang.Object[],int[],int[])> ->_NONE_
<java.util.concurrent.ForkJoinWorkerThread: int getQueueSize()> ->_NONE_
<android.test.mock.MockPackageManager: android.content.res.Resources getResourcesForApplication(java.lang.String)> ->_NONE_
<org.apache.http.params.HttpProtocolParams: java.nio.charset.CodingErrorAction getUnmappableInputAction(org.apache.http.params.HttpParams)> ->_NONE_
<android.support.v4.content.AsyncTaskLoader: void setUpdateThrottle(long)> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: int getActions()> ->_NONE_
<android.app.Dialog: void setFeatureDrawable(int,android.graphics.drawable.Drawable)> ->_NONE_
<android.view.Window: void setCloseOnTouchOutside(boolean)> ->_NONE_
<org.xml.sax.helpers.XMLFilterImpl: java.lang.Object getProperty(java.lang.String)> ->_NONE_
<android.app.ActivityManagerProxy: void activityIdle(android.os.IBinder,android.content.res.Configuration,boolean)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: int getKeyCount()> ->_NONE_
<gov.nist.javax.sip.address.UserInfo: java.lang.String encode()> ->_NONE_
<org.apache.james.mime4j.field.address.DomainList: java.lang.String get(int)> ->_NONE_
<android.widget.TabHost: java.lang.String getCurrentTabTag()> ->_NONE_
<android.webkit.WebViewClassic: java.lang.String getOriginalUrl()> ->_NONE_
<org.jivesoftware.smack.packet.Authentication: void setResource(java.lang.String)> ->_NONE_
<android.net.http.Connection: boolean getCanPersist()> ->_NONE_
<android.graphics.Region: boolean set(int,int,int,int)> ->_NONE_
<android.view.View: void setDrawingCacheQuality(int)> ->_NONE_
<android.test.InstrumentationCoreTestRunner: android.test.AndroidTestRunner getAndroidTestRunner()> ->_NONE_
<android.content.ContentService: void setIsSyncable(android.accounts.Account,java.lang.String,int)> ->_NONE_
<libcore.io.ForwardingOs: int pwrite(java.io.FileDescriptor,byte[],int,int,long)> ->_NONE_
<android.net.DummyDataStateTracker: void setDependencyMet(boolean)> ->_NONE_
<org.ccil.cowan.tagsoup.jaxp.SAXParserImpl: java.lang.Object getProperty(java.lang.String)> ->_NONE_
<android.test.AndroidTestRunner: junit.framework.Test getTest(java.lang.Class)> ->_NONE_
<android.test.TestCaseUtil: java.util.List getTests(junit.framework.Test,boolean,java.util.Set)> ->_NONE_
<android.filterfw.core.ShaderProgram: void setVertexCount(int)> ->_NONE_
<android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)> ->_NONE_
<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()> ->_NONE_
<android.widget.ExpandableListView: void setChildIndicator(android.graphics.drawable.Drawable)> ->_NONE_
<android.app.Activity: void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle)> ->_NONE_
<org.apache.harmony.security.pkcs8.PrivateKeyInfo: int getVersion()> ->_NONE_
<android.view.GLES20DisplayList: void setAnimationMatrix(android.graphics.Matrix)> ->_NONE_
<android.view.inputmethod.InputBinding: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.app.LoaderManagerImpl: android.content.Loader getLoader(int)> ->_NONE_
<org.apache.xpath.compiler.Keywords: java.lang.Object getAxisName(java.lang.String)> ->_NONE_
<android.view.KeyCharacterMap: int get(int,int)> ->_NONE_
<android.location.Criteria: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.widget.NumberPicker: int getWrappedSelectorIndex(int)> ->_NONE_
<javax.crypto.spec.RC2ParameterSpec: byte[] getIV()> ->_NONE_
<gov.nist.javax.sip.parser.MinExpiresParser: gov.nist.javax.sip.header.SIPHeader parse()> ->_NONE_
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.ElemVariable getVariable(org.apache.xml.utils.QName)> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: java.security.cert.Certificate[] getServerCertificates()> ->_NONE_
<gov.nist.javax.sip.stack.MessageChannel: gov.nist.core.HostPort getViaHostPort()> ->_NONE_
<org.apache.xalan.processor.XSLTAttributeDef: java.lang.StringBuffer getListOfEnums()> ->_NONE_
<org.kxml2.io.KXmlSerializer: boolean getFeature(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.ElemTemplate: void setMatch(org.apache.xpath.XPath)> ->_NONE_
<android.net.wifi.WifiStateMachine: java.util.List syncGetConfiguredNetworks(com.android.internal.util.AsyncChannel)> ->_NONE_
<gov.nist.javax.sip.header.Credentials: java.lang.String encode()> ->_NONE_
<org.jivesoftware.smack.packet.RosterPacket: java.util.ArrayList getRosterItemsList()> ->_NONE_
<android.location.Address: void setThoroughfare(java.lang.String)> ->_NONE_
<java.util.Locale: java.lang.String[] getISOLanguages()> ->_NONE_
<android.animation.ValueAnimator: void setCurrentPlayTime(long)> ->_NONE_
<android.location.LocationRequest: long getInterval()> ->_NONE_
<android.graphics.Bitmap: void setHasAlpha(boolean)> ->_NONE_
<android.os.Messenger: android.os.IBinder getBinder()> ->_NONE_
<android.bluetooth.BluetoothOutputStream: void write(byte[],int,int)> ->_NONE_
<org.apache.xml.dtm.ref.NodeLocator: java.lang.String getPublicId()> ->_NONE_
<android.widget.SimpleCursorAdapter: void setViewText(android.widget.TextView,java.lang.String)> ->_NONE_
<android.renderscript.Script: void setVar(int,float)> ->_NONE_
<android.app.ApplicationThreadProxy: void dumpGfxInfo(java.io.FileDescriptor,java.lang.String[])> ->_NONE_
<android.view.KeyCharacterMap: char getDisplayLabel(int)> ->_NONE_
<java.security.Provider: double getVersion()> ->_NONE_
<android.view.animation.AnticipateOvershootInterpolator: float getInterpolation(float)> ->_NONE_
<gov.nist.javax.sip.header.RecordRoute: java.lang.String encodeBody()> ->_NONE_
<libcore.io.BlockGuardOs: int read(java.io.FileDescriptor,byte[],int,int)> ->_NONE_
<android.preference.PreferenceManager: void setSharedPreferencesName(java.lang.String)> ->_NONE_
<android.graphics.Interpolator: int getKeyFrameCount()> ->_NONE_
<android.webkit.WebSettings: void setSerifFontFamily(java.lang.String)> ->_NONE_
<android.widget.ExpandableListView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)> ->_NONE_
<gov.nist.javax.sip.header.ims.PChargingVector: void setICID(java.lang.String)> ->_NONE_
<org.apache.http.impl.cookie.RFC2965PortAttributeHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)> ->_NONE_
<android.test.mock.MockCursor: int getColumnCount()> ->_NONE_
<android.widget.TextView: void setTextLocale(java.util.Locale)> ->_NONE_
<android.gesture.GestureStore: void setOrientationStyle(int)> ->_NONE_
<org.xml.sax.helpers.AttributesImpl: java.lang.String getValue(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: void setXmlnsXsl(java.lang.String)> ->_NONE_
<android.mtp.MtpObjectInfo: int getParent()> ->_NONE_
<android.os.ParcelUuid: java.util.UUID getUuid()> ->_NONE_
<android.animation.LayoutTransition: void setDuration(int,long)> ->_NONE_
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getApplicationLogo(android.content.pm.ApplicationInfo)> ->_NONE_
<android.app.admin.DevicePolicyManager: android.app.admin.DeviceAdminInfo getAdminInfo(android.content.ComponentName)> ->_NONE_
<net.oauth.OAuthMessage: java.lang.String getSignature()> ->_NONE_
<android.accounts.AccountManagerService: void getAuthTokenLabel(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String)> ->_NONE_
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)> ->_NONE_
<java.security.cert.CertStore: java.security.cert.CertStore getInstance(java.lang.String,java.security.cert.CertStoreParameters,java.security.Provider)> ->_NONE_
<android.view.View: void setNextFocusRightId(int)> ->_NONE_
<android.view.View: int getHorizontalScrollbarHeight()> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Choice: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)> ->_NONE_
<java.util.concurrent.locks.ReentrantLock: java.util.Collection getWaitingThreads(java.util.concurrent.locks.Condition)> ->_NONE_
<org.apache.james.mime4j.codec.EncoderUtil: java.lang.String encodeB(java.lang.String,java.lang.String,int,java.nio.charset.Charset,byte[])> ->_NONE_
<android.content.ClipData: android.graphics.Bitmap getIcon()> ->_NONE_
<android.widget.GridLayout: android.widget.GridLayout$LayoutParams getLayoutParams(android.view.View)> ->_NONE_
<java.security.Signature: java.lang.Object getParameter(java.lang.String)> ->_NONE_
<org.jivesoftware.smackx.packet.MUCUser: org.jivesoftware.smackx.packet.MUCUser$Item getItem()> ->_NONE_
<java.text.MessageFormat: java.lang.Object[] parse(java.lang.String,java.text.ParsePosition)> ->_NONE_
<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair getParameterByName(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: void setMessageContent(byte[])> ->_NONE_
<android.app.Dialog: void setFeatureDrawableUri(int,android.net.Uri)> ->_NONE_
<gov.nist.javax.sip.message.SIPRequest: java.util.LinkedList getMessageAsEncodedStrings()> ->_NONE_
<android.webkit.GeolocationPermissionsClassic: void createHandler()> ->_NONE_
<android.view.View: android.graphics.Insets getOpticalInsets()> ->_NONE_
<android.nfc.NfcAdapter: void setBeamPushUris(android.net.Uri[],android.app.Activity)> ->_NONE_
<android.view.MotionEvent: float getHistoricalSize(int)> ->_NONE_
<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)> ->_NONE_
<android.widget.Switch: int getSwitchMinWidth()> ->_NONE_
<org.apache.commons.codec.language.Metaphone: java.lang.String encode(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.SecuritySupport12: java.lang.String getSystemProperty(java.lang.String)> ->_NONE_
<android.net.InterfaceConfiguration: java.lang.String getHardwareAddress()> ->_NONE_
<org.xml.sax.helpers.LocatorImpl: void setPublicId(java.lang.String)> ->_NONE_
<android.telephony.SmsMessage: java.lang.String getServiceCenterAddress()> ->_NONE_
<java.net.HttpCookie: java.lang.String getName()> ->_NONE_
<java.lang.Throwable: java.lang.Throwable getCause()> ->_NONE_
<android.hardware.display.DisplayManagerGlobal: int[] getDisplayIds()> ->_NONE_
<android.location.Address: java.lang.String getLocality()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.PinListEntry: boolean getEnforcing()> ->_NONE_
<android.test.mock.MockContext: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> ->_NONE_
<java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()> ->_NONE_
<android.animation.PropertyValuesHolder: java.lang.String getMethodName(java.lang.String,java.lang.String)> ->_NONE_
<android.test.mock.MockPackageManager: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)> ->_NONE_
<org.apache.xpath.functions.FuncQname: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<android.filterpacks.videosrc.SurfaceTextureTarget: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)> ->_NONE_
<android.support.v4.app.ListFragment: void setListShownNoAnimation(boolean)> ->_NONE_
<org.json.JSONArray: org.json.JSONArray getJSONArray(int)> ->_NONE_
<java.util.concurrent.atomic.AtomicLongFieldUpdater: long getAndSet(java.lang.Object,long)> ->_NONE_
<android.net.NetworkInfo: void setExtraInfo(java.lang.String)> ->_NONE_
<android.widget.GridView: void setHorizontalSpacing(int)> ->_NONE_
<org.jivesoftware.smack.packet.Message: void setTimestamp(long)> ->_NONE_
<android.webkit.ViewStateSerializer: boolean serializeViewState(java.io.OutputStream,android.webkit.WebViewCore$DrawData)> ->_NONE_
<org.apache.commons.logging.impl.LogFactoryImpl: boolean getBooleanConfiguration(java.lang.String,boolean)> ->_NONE_
<org.apache.http.impl.SocketHttpClientConnection: java.net.InetAddress getRemoteAddress()> ->_NONE_
<org.apache.harmony.xml.dom.ElementImpl: org.w3c.dom.Attr setAttributeNode(org.w3c.dom.Attr)> ->_NONE_
<android.media.MediaPlayer: void setDataSource(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: java.lang.String getBaseURI()> ->_NONE_
<android.webkit.HTML5VideoView: void setVideoURI(java.lang.String,android.webkit.HTML5VideoViewProxy)> ->_NONE_
<android.opengl.GLLogWrapper: void startLogIndices()> ->_NONE_
<android.test.mock.MockContext: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> ->_NONE_
<android.widget.ListPopupWindow: int getVerticalOffset()> ->_NONE_
<org.apache.xpath.XPathContext: java.lang.Object getOwnerObject()> ->_NONE_
<android.widget.GridLayout: void setRowOrderPreserved(boolean)> ->_NONE_
<java.lang.reflect.AccessibleObject: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)> ->_NONE_
<java.net.Socks4Message: int getVersionNumber()> ->_NONE_
<android.filterfw.core.FrameFormat: int getHeight()> ->_NONE_
<java.nio.DirectByteBuffer: double getDouble(int)> ->_NONE_
<android.support.v13.app.FragmentStatePagerAdapter: void startUpdate(android.view.ViewGroup)> ->_NONE_
<org.apache.xml.serializer.SerializerTraceWriter: java.io.OutputStream getOutputStream()> ->_NONE_
<android.graphics.Paint: float getTextRunAdvances(java.lang.String,int,int,int,int,int,float[],int,int)> ->_NONE_
<android.speech.tts.PlaybackSynthesisCallback: int getMaxBufferSize()> ->_NONE_
<net.oauth.http.HttpMessageDecoder: java.lang.String getEncoding(net.oauth.http.HttpMessage)> ->_NONE_
<org.apache.harmony.xml.dom.ElementImpl: void setPrefix(java.lang.String)> ->_NONE_
<org.jivesoftware.smack.packet.LoginResponse: void setSettings(java.util.Map)> ->_NONE_
<android.app.ActivityManagerProxy: android.os.IBinder peekService(android.content.Intent,java.lang.String)> ->_NONE_
<org.apache.xml.serializer.WriterToASCI: java.io.OutputStream getOutputStream()> ->_NONE_
<org.apache.xpath.axes.LocPathIterator: int getWhatToShow()> ->_NONE_
<gov.nist.javax.sip.header.ims.PPreferredIdentity: void setValue(java.lang.String)> ->_NONE_
<java.util.zip.ZipEntry: void setSize(long)> ->_NONE_
<android.view.inputmethod.InputMethodInfo: android.view.inputmethod.InputMethodSubtype getSubtypeAt(int)> ->_NONE_
<org.jivesoftware.smackx.provider.DiscoverItemsProvider: org.jivesoftware.smack.packet.IQ parseIQ(com.google.common.io.protocol.ProtoBuf)> ->_NONE_
<android.test.mock.MockContext: void setWallpaper(android.graphics.Bitmap)> ->_NONE_
<java.net.DatagramSocket: int getSendBufferSize()> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: android.util.SparseLongArray getChildNodeIds()> ->_NONE_
<android.media.MediaRecorder: void setAuxiliaryOutputFile(java.io.FileDescriptor)> ->_NONE_
<javax.net.ssl.SSLEngineResult: javax.net.ssl.SSLEngineResult$HandshakeStatus getHandshakeStatus()> ->_NONE_
<android.media.MediaPlayer: void setScreenOnWhilePlaying(boolean)> ->_NONE_
<org.apache.http.impl.io.AbstractSessionOutputBuffer: void write(byte[],int,int)> ->_NONE_
<android.nfc.tech.MifareUltralight: void connect()> ->_NONE_
<android.content.pm.ContainerEncryptionParams: javax.crypto.SecretKey getMacKey()> ->_NONE_
<libcore.icu.RuleBasedCollatorICU: void setDecomposition(int)> ->_NONE_
<android.util.Base64: java.lang.String encodeToString(byte[],int,int,int)> ->_NONE_
<android.media.MediaFormat: void setByteBuffer(java.lang.String,java.nio.ByteBuffer)> ->_NONE_
<android.widget.TextView: float getLeftFadingEdgeStrength()> ->_NONE_
<org.jivesoftware.smack.GroupChat: void sendMessage(java.lang.String)> ->_NONE_
<android.media.AudioService: void reloadAudioSettings()> ->_NONE_
<org.apache.commons.io.input.ProxyReader: int read()> ->_NONE_
<android.database.sqlite.SQLiteSession: long executeForLong(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)> ->_NONE_
<java.io.FilterReader: int read(char[],int,int)> ->_NONE_
<gov.nist.javax.sip.header.Via: void setReceived(java.lang.String)> ->_NONE_
<android.net.sip.SipAudioCall: void sendDtmf(int)> ->_NONE_
<gov.nist.javax.sip.stack.TCPMessageChannel: int getViaPort()> ->_NONE_
<android.widget.AdapterView: long getSelectedItemId()> ->_NONE_
<android.app.ActivityManagerProxy: boolean killPids(int[],java.lang.String,boolean)> ->_NONE_
<org.apache.xml.dtm.ref.SecuritySupport12: java.lang.ClassLoader getContextClassLoader()> ->_NONE_
<android.support.v4.content.ModernAsyncTask: android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])> ->_NONE_
<java.net.Socket: java.io.InputStream getInputStream()> ->_NONE_
<java.util.concurrent.ConcurrentLinkedDeque: java.lang.Object getFirst()> ->_NONE_
<libcore.io.BlockGuardOs: void ftruncate(java.io.FileDescriptor,long)> ->_NONE_
<org.apache.http.message.AbstractHttpMessage: org.apache.http.Header getFirstHeader(java.lang.String)> ->_NONE_
<org.apache.http.conn.params.ConnManagerParams: int getMaxTotalConnections(org.apache.http.params.HttpParams)> ->_NONE_
<android.widget.BaseExpandableListAdapter: int getChildType(int,int)> ->_NONE_
<java.nio.charset.Charset: java.nio.CharBuffer decode(java.nio.ByteBuffer)> ->_NONE_
<android.test.InstrumentationTestCase: void sendRepeatedKeys(int[])> ->_NONE_
<gov.nist.core.NameValueList: java.lang.StringBuffer encode(java.lang.StringBuffer)> ->_NONE_
<org.jivesoftware.smack.packet.IQ: com.google.common.io.protocol.ProtoBuf getExtensionProtoBuf()> ->_NONE_
<java.util.concurrent.atomic.AtomicLongArray: long getAndAdd(int,long)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: java.lang.Object getApplicationData()> ->_NONE_
<java.security.DigestInputStream: void setMessageDigest(java.security.MessageDigest)> ->_NONE_
<android.server.search.SearchManagerService: android.server.search.Searchables getSearchables(int)> ->_NONE_
<android.media.ExifInterface: long getGpsDateTime()> ->_NONE_
<android.widget.ProgressBar: void setProgressDrawable(android.graphics.drawable.Drawable)> ->_NONE_
<android.net.http.Headers: void setCacheControl(java.lang.String)> ->_NONE_
<android.text.style.AbsoluteSizeSpan: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<java.util.TimeZone: void setID(java.lang.String)> ->_NONE_
<android.media.audiofx.AudioEffect: int getParameter(int[],byte[])> ->_NONE_
<org.apache.xalan.templates.ElemFallback: int getXSLToken()> ->_NONE_
<android.net.NetworkPolicyManager: void setNetworkPolicies(android.net.NetworkPolicy[])> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.Transformer getTransformer()> ->_NONE_
<android.location.Location: android.os.Bundle getExtras()> ->_NONE_
<org.apache.xalan.templates.NamespaceAlias: java.lang.String getStylesheetNamespace()> ->_NONE_
<java.nio.DirectByteBuffer: char getChar(int)> ->_NONE_
<android.app.admin.DevicePolicyManager: void setPasswordMinimumLetters(android.content.ComponentName,int)> ->_NONE_
<android.support.v4.app.ShareCompat: java.lang.String getCallingPackage(android.app.Activity)> ->_NONE_
<org.jivesoftware.smack.util.PacketParserUtils: boolean getBoolOrDefault(com.google.common.io.protocol.ProtoBuf,int,boolean)> ->_NONE_
<android.text.AlteredCharSequence: void getChars(int,int,char[],int)> ->_NONE_
<org.apache.harmony.xml.dom.ElementImpl: org.apache.harmony.xml.dom.AttrImpl getAttributeNode(java.lang.String)> ->_NONE_
<java.nio.charset.MalformedInputException: int getInputLength()> ->_NONE_
<android.content.pm.VerificationParams: android.net.Uri getReferrer()> ->_NONE_
<android.app.AlarmManager: void setInexactRepeating(int,long,long,android.app.PendingIntent)> ->_NONE_
<java.util.IllegalFormatCodePointException: int getCodePoint()> ->_NONE_
<org.jivesoftware.smack.SASLAuthentication: void setAvailableSASLMethods(java.util.Collection)> ->_NONE_
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getValueSanitizer(java.lang.String)> ->_NONE_
<android.speech.tts.SynthesisRequest: void setSpeechRate(int)> ->_NONE_
<org.apache.xalan.templates.ElemWhen: int getXSLToken()> ->_NONE_
<org.apache.xml.serializer.ToHTMLStream: void setOmitMetaTag(boolean)> ->_NONE_
<org.apache.xpath.NodeSetDTM: int getRoot()> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CRLEntryImpl: java.util.Date getRevocationDate()> ->_NONE_
<org.xml.sax.helpers.ParserAdapter: void setEntityResolver(org.xml.sax.EntityResolver)> ->_NONE_
<android.text.style.DynamicDrawableSpan: int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt)> ->_NONE_
<android.os.PatternMatcher: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.content.ClipData: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.harmony.xml.parsers.DocumentBuilderImpl: void setIgnoreElementContentWhitespace(boolean)> ->_NONE_
<android.view.View: int getFadeTop(boolean)> ->_NONE_
<org.apache.harmony.luni.lang.reflect.Types: java.lang.reflect.Type[] getClonedTypeArray(org.apache.harmony.luni.lang.reflect.ListOfTypes)> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: java.lang.String getNodeValue(int)> ->_NONE_
<org.apache.http.impl.cookie.DateUtils: java.util.Date parseDate(java.lang.String)> ->_NONE_
<android.widget.AutoCompleteTextView: int getDropDownVerticalOffset()> ->_NONE_
<android.webkit.WebViewCore: void access$2600(android.webkit.WebViewCore,int,int,int,int,int)> ->_NONE_
<android.net.wifi.p2p.WifiP2pDeviceList: void updateStatus(java.lang.String,int)> ->_NONE_
<java.nio.charset.CharsetDecoderICU: void setPosition(java.nio.ByteBuffer)> ->_NONE_
<org.apache.harmony.luni.lang.reflect.ImplForArray: java.lang.reflect.Type getGenericComponentType()> ->_NONE_
<android.widget.BaseAdapter: int getViewTypeCount()> ->_NONE_
<android.test.InstrumentationTestRunner: com.android.internal.util.Predicate getAnnotationPredicate(java.lang.String)> ->_NONE_
<org.apache.xml.serializer.ToStream: java.io.OutputStream getOutputStream()> ->_NONE_
<android.view.View: android.os.Handler getHandler()> ->_NONE_
<java.security.Identity: java.security.IdentityScope getScope()> ->_NONE_
<android.mtp.MtpDatabase: int[] getSupportedPlaybackFormats()> ->_NONE_
<android.widget.ImageView: void setCropToPadding(boolean)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentLanguageHeader getContentLanguage()> ->_NONE_
<java.text.DecimalFormatSymbols: void setCurrencySymbol(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.IncrementalSAXSource_Filter: int getControllerCoroutineID()> ->_NONE_
<org.apache.harmony.security.x509.PrivateKeyUsagePeriod: java.util.Date getNotBefore()> ->_NONE_
<android.app.ActivityManagerProxy: int getLaunchedFromUid(android.os.IBinder)> ->_NONE_
<org.apache.http.impl.SocketHttpClientConnection: int getSocketTimeout()> ->_NONE_
<android.view.TextureView: android.graphics.Bitmap getBitmap()> ->_NONE_
<android.net.UrlQuerySanitizer: void addSanitizedEntry(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ObjectFactory: java.lang.ClassLoader findClassLoader()> ->_NONE_
<org.apache.harmony.security.x509.tsp.PKIStatusInfo: java.util.List getStatusString()> ->_NONE_
<android.telephony.CellInfoLte: void setCellIdentity(android.telephony.CellIdentityLte)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.lang.String[] getEnabledProtocols()> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: java.lang.String getMessageContent()> ->_NONE_
<java.net.URLConnection: java.lang.Object getContent(java.lang.Class[])> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int getChildCount()> ->_NONE_
<android.support.v4.app.ListFragment: int getSelectedItemPosition()> ->_NONE_
<android.speech.tts.TtsEngines: android.content.Intent getSettingsIntent(java.lang.String)> ->_NONE_
<android.widget.AutoCompleteTextView: void setCompletionHint(java.lang.CharSequence)> ->_NONE_
<android.os.Message: void setTarget(android.os.Handler)> ->_NONE_
<java.util.IllegalFormatConversionException: char getConversion()> ->_NONE_
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: java.lang.Thread getFirstQueuedThread()> ->_NONE_
<android.view.ViewGroup: void setStaticTransformationsEnabled(boolean)> ->_NONE_
<android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> ->_NONE_
<org.apache.xpath.NodeSetDTM: void setLast(int)> ->_NONE_
<gov.nist.javax.sip.header.Expires: java.lang.String encodeBody()> ->_NONE_
<android.os.Bundle: java.lang.String getString(java.lang.String,java.lang.String)> ->_NONE_
<libcore.net.http.ResponseHeaders: java.util.Set getVaryFields()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.AbstractSessionContext: void setSessionCacheSize(int)> ->_NONE_
<android.app.ActivityOptions: int getCustomEnterResId()> ->_NONE_
<android.animation.ObjectAnimator: android.animation.Animator setDuration(long)> ->_NONE_
<java.net.AddressCache: java.lang.Object get(java.lang.String)> ->_NONE_
<net.oauth.client.OAuthClient: void setHttpClient(net.oauth.http.HttpClient)> ->_NONE_
<android.webkit.CallbackProxy: void onReceivedHttpAuthRequest(android.webkit.HttpAuthHandler,java.lang.String,java.lang.String)> ->_NONE_
<android.app.ActivityManager: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()> ->_NONE_
<java.net.JarURLConnection: java.security.cert.Certificate[] getCertificates()> ->_NONE_
<android.text.style.SuggestionSpan: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.animation.Keyframe: float getFraction()> ->_NONE_
<java.nio.IntToByteBufferAdapter: java.nio.IntBuffer get(int[],int,int)> ->_NONE_
<android.app.ActivityManagerProxy: void killApplicationProcess(java.lang.String,int)> ->_NONE_
<android.view.View: void setOnSystemUiVisibilityChangeListener(android.view.View$OnSystemUiVisibilityChangeListener)> ->_NONE_
<org.apache.xalan.transformer.KeyTable: org.apache.xpath.objects.XNodeSet getNodeSetDTMByKey(org.apache.xml.utils.QName,org.apache.xml.utils.XMLString)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: java.math.BigInteger getX()> ->_NONE_
<org.apache.http.protocol.HttpService: void setHandlerResolver(org.apache.http.protocol.HttpRequestHandlerResolver)> ->_NONE_
<android.media.AudioTrack: int setLoopPoints(int,int,int)> ->_NONE_
<android.location.Location: android.location.Location getExtraLocation(java.lang.String)> ->_NONE_
<android.widget.LinearLayout: int getVirtualChildCount()> ->_NONE_
<android.telephony.gsm.GsmCellLocation: void setPsc(int)> ->_NONE_
<android.filterpacks.imageproc.ColorTemperatureFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<android.media.JetPlayer: boolean loadJetFile(android.content.res.AssetFileDescriptor)> ->_NONE_
<android.net.NetworkStats: long getTotalBytes()> ->_NONE_
<org.apache.xalan.templates.ElemExtensionDecl: java.lang.String getFunction(int)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: void setKey(org.apache.xalan.templates.KeyDeclaration)> ->_NONE_
<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost getTargetHost()> ->_NONE_
<org.apache.http.params.AbstractHttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)> ->_NONE_
<org.apache.xpath.axes.NodeSequence: void setRoot(int,java.lang.Object)> ->_NONE_
<org.apache.james.mime4j.util.PartialInputStream: int read(byte[],int,int)> ->_NONE_
<org.apache.harmony.xml.dom.AttrImpl: java.lang.String getName()> ->_NONE_
<javax.xml.validation.Validator: void setProperty(java.lang.String,java.lang.Object)> ->_NONE_
<android.widget.Editor: android.view.View$DragShadowBuilder getTextThumbnailBuilder(java.lang.CharSequence)> ->_NONE_
<android.mtp.MtpDatabase: int setDeviceProperty(int,long,java.lang.String)> ->_NONE_
<java.io.BufferedReader: java.lang.String readLine()> ->_NONE_
<java.util.concurrent.ThreadLocalRandom: void setSeed(long)> ->_NONE_
<android.util.NtpTrustedTime: long getCachedNtpTimeReference()> ->_NONE_
<org.javia.arity.Symbol: java.lang.String getName()> ->_NONE_
<android.graphics.Matrix: void setRotate(float)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.AlertException: javax.net.ssl.SSLException getReason()> ->_NONE_
<jp.co.omronsoft.openwnn.UserDictionaryToolsEdit: boolean addDictionary(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: boolean getIncremental()> ->_NONE_
<android.view.MotionEvent: long getEventTime()> ->_NONE_
<android.opengl.GLException: java.lang.String getErrorString(int)> ->_NONE_
<android.view.ViewGroup: int getChildMeasureSpec(int,int,int)> ->_NONE_
<org.jivesoftware.smack.provider.RawXmlIQProvider: org.jivesoftware.smack.packet.IQ parseIQ(com.google.common.io.protocol.ProtoBuf)> ->_NONE_
<android.webkit.WebSettings: void setFantasyFontFamily(java.lang.String)> ->_NONE_
<android.widget.Gallery: boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation)> ->_NONE_
<android.widget.AbsListView: int getListPaddingTop()> ->_NONE_
<android.support.v4.app.NavUtils: android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: java.security.cert.Certificate[] getLocalCertificates()> ->_NONE_
<libcore.net.http.HttpURLConnectionImpl: java.io.InputStream getInputStream()> ->_NONE_
<libcore.io.ForwardingOs: long sendfile(java.io.FileDescriptor,java.io.FileDescriptor,libcore.util.MutableLong,long)> ->_NONE_
<android.app.ExpandableListActivity: void setSelectedGroup(int)> ->_NONE_
<java.io.EmulatedFieldsForLoading: java.io.ObjectStreamClass getObjectStreamClass()> ->_NONE_
<gov.nist.javax.sip.header.ProxyRequire: java.lang.String encodeBody()> ->_NONE_
<org.apache.xalan.templates.TemplateList: double getPriorityOrScore(org.apache.xalan.templates.TemplateSubPatternAssociation)> ->_NONE_
<java.util.zip.CRC32: long getValue()> ->_NONE_
<android.os.UserManager: java.util.List getUsers(boolean)> ->_NONE_
<android.text.style.SuggestionSpan: java.lang.String[] getSuggestions()> ->_NONE_
<org.apache.http.ProtocolVersion: java.lang.String getProtocol()> ->_NONE_
<gov.nist.javax.sip.address.Authority: void setHostPort(gov.nist.core.HostPort)> ->_NONE_
<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()> ->_NONE_
<android.content.pm.ResolveInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)> ->_NONE_
<org.apache.harmony.security.x509.tsp.PKIFailureInfo: org.apache.harmony.security.x509.tsp.PKIFailureInfo getInstance(int)> ->_NONE_
<android.media.videoeditor.MediaVideoItem: int getAspectRatio()> ->_NONE_
<android.support.v4.widget.ResourceCursorAdapter: void setViewResource(int)> ->_NONE_
<android.view.inputmethod.InputMethodInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.harmony.xml.dom.NodeImpl: java.lang.Object getFeature(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.http.impl.conn.AbstractClientConnAdapter: void setAttribute(java.lang.String,java.lang.Object)> ->_NONE_
<android.nfc.NfcAdapter: android.nfc.INfcAdapterExtras getNfcAdapterExtrasInterface()> ->_NONE_
<android.webkit.WebViewClassic: void addJavascriptInterface(java.lang.Object,java.lang.String)> ->_NONE_
<android.content.SyncStorageEngine: boolean getSyncAutomatically(android.accounts.Account,int,java.lang.String)> ->_NONE_
<org.apache.xalan.templates.ElemText: int getXSLToken()> ->_NONE_
<android.view.VelocityTracker: float getXVelocity()> ->_NONE_
<javax.xml.datatype.Duration: int getMonths()> ->_NONE_
<org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable getEnvironmentHash()> ->_NONE_
<libcore.net.http.AbstractHttpInputStream: void cacheWrite(byte[],int,int)> ->_NONE_
<android.mtp.MtpDevice: android.mtp.MtpObjectInfo getObjectInfo(int)> ->_NONE_
<javax.xml.transform.stream.StreamSource: void setSystemId(java.io.File)> ->_NONE_
<org.apache.harmony.security.x509.tsp.TimeStampResp: org.apache.harmony.security.pkcs7.ContentInfo getTimeStampToken()> ->_NONE_
<android.webkit.ZoomManager: void setZoomCenter(float,float)> ->_NONE_
<android.webkit.WebSettingsClassic: java.lang.String getCursiveFontFamily()> ->_NONE_
<java.lang.SecurityManager: void checkConnect(java.lang.String,int)> ->_NONE_
<java.security.cert.X509CertSelector: java.lang.String getSubjectAsString()> ->_NONE_
<org.apache.xpath.compiler.OpMap: java.lang.String getStepLocalName(int)> ->_NONE_
<android.webkit.WebViewCore: void setScrollbarModes(int,int)> ->_NONE_
<java.net.Socks4Message: int getLength()> ->_NONE_
<android.telephony.cdma.CdmaSmsCbProgramData: int getOperation()> ->_NONE_
<gov.nist.javax.sip.header.extensions.Join: void setValue(java.lang.String)> ->_NONE_
<org.apache.xml.serializer.dom3.LSSerializerImpl: org.w3c.dom.DOMStringList getParameterNames()> ->_NONE_
<java.net.DatagramSocket: boolean isConnected()> ->_NONE_
<android.animation.LayoutTransition: android.animation.Animator getAnimator(int)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: java.lang.String getDocumentSystemIdentifier(int)> ->_NONE_
<android.telephony.ServiceState: boolean getRoaming()> ->_NONE_
<libcore.io.IoBridge: void setSocketOptionErrno(java.io.FileDescriptor,int,java.lang.Object)> ->_NONE_
<android.net.UrlQuerySanitizer: java.lang.String getValue(java.lang.String)> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CRLEntryImpl: java.util.Set getCriticalExtensionOIDs()> ->_NONE_
<java.net.Inet6Address: java.lang.String getHostAddress()> ->_NONE_
<org.apache.xpath.XPathException: org.apache.xpath.ExpressionNode getExpressionOwner(org.apache.xpath.ExpressionNode)> ->_NONE_
<junit.textui.ResultPrinter: void printDefectHeader(junit.framework.TestFailure,int)> ->_NONE_
<android.webkit.GeolocationPermissions: android.webkit.GeolocationPermissions getInstance()> ->_NONE_
<org.apache.http.auth.NTCredentials: java.lang.String getDomain()> ->_NONE_
<org.apache.xpath.NodeSetDTM: void setShouldCacheNodes(boolean)> ->_NONE_
<android.graphics.Paint: void setTextLocale(java.util.Locale)> ->_NONE_
<libcore.net.http.HttpURLConnectionImpl: void setRequestProperty(java.lang.String,java.lang.String)> ->_NONE_
<android.media.AudioTrack: int getNativeFrameCount()> ->_NONE_
<libcore.net.url.JarURLConnectionImpl: int getContentLength()> ->_NONE_
<android.telephony.ServiceState: boolean getIsManualSelection()> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: boolean getIndent()> ->_NONE_
<java.lang.reflect.Proxy: java.lang.Class getProxyClass(java.lang.ClassLoader,java.lang.Class[])> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: void sendRequest(javax.sip.ClientTransaction)> ->_NONE_
<org.apache.commons.logging.impl.Jdk14Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)> ->_NONE_
<org.apache.xml.serializer.Version: int getMajorVersionNum()> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: libcore.net.http.HttpEngine getHttpEngine()> ->_NONE_
<android.view.PointerIcon: android.view.PointerIcon load(android.content.Context)> ->_NONE_
<dalvik.system.profiler.HprofData: java.util.List getThreadHistory()> ->_NONE_
<org.apache.harmony.security.x509.InhibitAnyPolicy: byte[] getEncoded()> ->_NONE_
<android.preference.RingtonePreference: void setShowDefault(boolean)> ->_NONE_
<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$TunnelType getTunnelType()> ->_NONE_
<dalvik.system.profiler.HprofData: int getFlags()> ->_NONE_
<java.lang.Character: int getType(char)> ->_NONE_
<libcore.net.http.HttpResponseCache: int getHitCount()> ->_NONE_
<java.nio.CharToByteBufferAdapter: char get(int)> ->_NONE_
<org.apache.xpath.axes.FilterExprWalker: int getAnalysisBits()> ->_NONE_
<android.net.dhcp.DhcpAckPacket: int getInt(java.lang.Integer)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.URIResolver getURIResolver()> ->_NONE_
<android.app.admin.DevicePolicyManager: void setMaximumTimeToLock(android.content.ComponentName,long)> ->_NONE_
<java.util.logging.LogRecord: java.lang.Throwable getThrown()> ->_NONE_
<android.gesture.GestureLibrary: java.util.Set getGestureEntries()> ->_NONE_
<android.view.Display: int getLayerStack()> ->_NONE_
<android.bluetooth.BluetoothPbap: int getState()> ->_NONE_
<java.text.FieldPosition: int getEndIndex()> ->_NONE_
<libcore.net.http.RequestHeaders: void setIfNoneMatch(java.lang.String)> ->_NONE_
<android.content.ContentQueryMap: android.content.ContentValues getValues(java.lang.String)> ->_NONE_
<org.apache.harmony.xml.dom.AttrImpl: org.w3c.dom.TypeInfo getSchemaTypeInfo()> ->_NONE_
<gov.nist.javax.sip.header.ims.PVisitedNetworkID: java.lang.String encodeBody()> ->_NONE_
<android.app.ActivityThread: android.app.LoadedApk getPackageInfoNoCheck(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo)> ->_NONE_
<android.nfc.NfcAdapter: void setP2pModes(int,int)> ->_NONE_
<java.security.spec.MGF1ParameterSpec: java.lang.String getDigestAlgorithm()> ->_NONE_
<android.telephony.SmsCbMessage: android.telephony.SmsCbEtwsInfo getEtwsWarningInfo()> ->_NONE_
<net.oauth.OAuthMessage: java.lang.String getParameter(java.lang.String)> ->_NONE_
<java.io.File: java.lang.String getPath()> ->_NONE_
<java.lang.ThreadGroup: int getMaxPriority()> ->_NONE_
<android.net.NetworkQuotaInfo: long getSoftLimitBytes()> ->_NONE_
<android.view.DisplayInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.filterpacks.imageproc.ImageSlicer: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<android.support.v4.widget.EdgeEffectCompatIcs: void setSize(java.lang.Object,int,int)> ->_NONE_
<java.io.PrintWriter: void write(char[])> ->_NONE_
<android.net.http.AndroidHttpClientConnection: java.net.InetAddress getLocalAddress()> ->_NONE_
<org.apache.xml.serializer.SerializerBase: void setOutputPropertyDefault(java.lang.String,java.lang.String)> ->_NONE_
<android.renderscript.Matrix4f: void loadOrthoWindow(int,int)> ->_NONE_
<libcore.icu.NativeDecimalFormat: int getGroupingSize()> ->_NONE_
<java.lang.StackTraceElement: java.lang.String getClassName()> ->_NONE_
<android.bluetooth.BluetoothInputDevice: int getPriority(android.bluetooth.BluetoothDevice)> ->_NONE_
<android.media.RingtoneManager: java.lang.String getSettingForType(int)> ->_NONE_
<org.apache.xml.utils.IntStack: void setTop(int)> ->_NONE_
<java.io.PrintStream: void write(byte[],int,int)> ->_NONE_
<android.graphics.drawable.GradientDrawable: void setCornerRadii(float[])> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: void runtimeInit(org.apache.xalan.transformer.TransformerImpl)> ->_NONE_
<org.jivesoftware.smack.provider.ProviderManager: org.jivesoftware.smack.provider.ProviderManager getDefault()> ->_NONE_
<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)> ->_NONE_
<android.widget.ListView: void setCacheColorHint(int)> ->_NONE_
<android.preference.PreferenceGroup: boolean onPrepareAddPreference(android.preference.Preference)> ->_NONE_
<gov.nist.javax.sip.header.ims.PVisitedNetworkID: java.lang.String getVisitedNetworkID()> ->_NONE_
<org.apache.commons.io.input.TeeInputStream: int read(byte[])> ->_NONE_
<android.animation.ValueAnimator: void setFrameDelay(long)> ->_NONE_
<javax.security.auth.x500.X500Principal: java.lang.String getName()> ->_NONE_
<org.apache.xml.dtm.ref.SecuritySupport12: java.lang.ClassLoader getSystemClassLoader()> ->_NONE_
<android.media.videoeditor.TransitionSliding: int getDirection()> ->_NONE_
<org.apache.xml.utils.SuballocatedIntVector: int[][] getMap()> ->_NONE_
<org.apache.xalan.xslt.EnvironmentCheck: void main(java.lang.String[])> ->_NONE_
<org.xml.sax.helpers.ParserAdapter: java.lang.Object getProperty(java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.TrustManagerImpl: java.security.cert.X509Certificate[] getAcceptedIssuers()> ->_NONE_
<android.nfc.tech.Ndef: void connect()> ->_NONE_
<android.webkit.Plugin: java.lang.String getDescription()> ->_NONE_
<java.nio.HeapByteBuffer: void get(long[],int,int)> ->_NONE_
<org.apache.harmony.xml.parsers.DocumentBuilderImpl: org.w3c.dom.Document parse(org.xml.sax.InputSource)> ->_NONE_
<android.widget.GridLayout: void setColumnCount(int)> ->_NONE_
<org.apache.xml.utils.DOMHelper: java.lang.String getNodeData(org.w3c.dom.Node)> ->_NONE_
<gov.nist.core.GenericObject: java.lang.String debugDump()> ->_NONE_
<java.lang.reflect.Constructor: java.lang.annotation.Annotation[] getDeclaredAnnotations()> ->_NONE_
<java.util.ListResourceBundle: java.util.Enumeration getKeys()> ->_NONE_
<android.view.DisplayInfo: void getMetricsWithSize(android.util.DisplayMetrics,android.view.CompatibilityInfoHolder,int,int)> ->_NONE_
<android.net.http.HttpAuthHeader: boolean getStale()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: java.lang.String[] getEnabledProtocols()> ->_NONE_
<android.widget.PopupWindow: android.view.View getContentView()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: java.net.InetAddress getLocalAddress()> ->_NONE_
<org.apache.harmony.xml.dom.CharacterDataImpl: int getLength()> ->_NONE_
<java.io.DataInputStream: java.lang.String readUTF(java.io.DataInput)> ->_NONE_
<android.content.BroadcastReceiver: boolean getAbortBroadcast()> ->_NONE_
<org.xml.sax.helpers.AttributesImpl: java.lang.String getQName(int)> ->_NONE_
<android.net.wifi.p2p.WifiP2pManager: void removeGroup(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ActionListener)> ->_NONE_
<android.app.ListActivity: android.widget.ListAdapter getListAdapter()> ->_NONE_
<android.animation.IntKeyframeSet: java.lang.Object getValue(float)> ->_NONE_
<android.net.wifi.WifiConfigStore: android.net.ProxyProperties getProxyProperties(int)> ->_NONE_
<android.widget.PopupMenu: android.view.Menu getMenu()> ->_NONE_
<org.apache.xpath.jaxp.XPathFactoryImpl: void setXPathVariableResolver(javax.xml.xpath.XPathVariableResolver)> ->_NONE_
<java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)> ->_NONE_
<android.net.NetworkIdentity: java.lang.String getSubscriberId()> ->_NONE_
<android.os.Debug: int setAllocationLimit(int)> ->_NONE_
<org.apache.xalan.templates.ElemCopyOf: void setSelect(org.apache.xpath.XPath)> ->_NONE_
<org.apache.xalan.templates.FuncFormatNumb: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<libcore.icu.NativeDecimalFormat: java.lang.String getPositivePrefix()> ->_NONE_
<android.widget.CursorTreeAdapter: android.database.Cursor getCursor()> ->_NONE_
<android.view.Window: void setCallback(android.view.Window$Callback)> ->_NONE_
<android.widget.ImageView: void setImageResource(int)> ->_NONE_
<android.view.ViewRootImpl: void playSoundEffect(int)> ->_NONE_
<javax.xml.transform.sax.SAXResult: java.lang.String getSystemId()> ->_NONE_
<org.jivesoftware.smackx.packet.DiscoverItems: java.util.Iterator getItems()> ->_NONE_
<java.util.Properties: void load(java.io.InputStream)> ->_NONE_
<android.widget.HorizontalScrollView: int getScrollRange()> ->_NONE_
<net.oauth.client.URLConnectionClient: net.oauth.http.HttpResponseMessage execute(net.oauth.http.HttpMessage)> ->_NONE_
<org.kxml2.io.KXmlParser: java.lang.String getAttributeType(int)> ->_NONE_
<org.apache.xml.serializer.SerializerTraceWriter: void write(char[],int,int)> ->_NONE_
<org.apache.xalan.transformer.TransformerHandlerImpl: void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: int getNodeIdent(int)> ->_NONE_
<android.text.util.Rfc822Token: void setComment(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.Reason: int getCause()> ->_NONE_
<android.net.sip.SipProfile: javax.sip.address.SipURI getUri()> ->_NONE_
<gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser: gov.nist.javax.sip.header.SIPHeader parse()> ->_NONE_
<android.widget.AbsListView: android.view.View getSelectedView()> ->_NONE_
<android.media.RemoteControlClient: void setRcseId(int)> ->_NONE_
<android.media.videoeditor.MediaProperties: android.util.Pair[] getSupportedResolutions(int)> ->_NONE_
<android.widget.SuggestionsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ->_NONE_
<android.support.v4.view.PagerAdapter: java.lang.CharSequence getPageTitle(int)> ->_NONE_
<gov.nist.javax.sip.header.ims.PMediaAuthorization: java.lang.String getToken()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: void setDocumentBaseURI(java.lang.String)> ->_NONE_
<android.media.RemoteDisplay: void notifyDisplayConnected(android.view.Surface,int,int,int)> ->_NONE_
<android.database.AbstractWindowedCursor: float getFloat(int)> ->_NONE_
<gov.nist.javax.sip.parser.ServerParser: gov.nist.javax.sip.header.SIPHeader parse()> ->_NONE_
<java.lang.Package: java.lang.annotation.Annotation[] getAnnotations()> ->_NONE_
<android.content.Context: java.lang.CharSequence getText(int)> ->_NONE_
<org.ccil.cowan.tagsoup.HTMLScanner: java.lang.String getSystemId()> ->_NONE_
<android.database.AbstractCursor: java.lang.String getColumnName(int)> ->_NONE_
<android.app.ActivityManagerProxy: boolean startNextMatchingActivity(android.os.IBinder,android.content.Intent,android.os.Bundle)> ->_NONE_
<android.graphics.Movie: android.graphics.Movie decodeTempStream(java.io.InputStream)> ->_NONE_
<gov.nist.javax.sip.address.SipUri: java.lang.String getUserPassword()> ->_NONE_
<android.os.Environment: java.io.File getExternalStorageAndroidDataDir()> ->_NONE_
<android.telephony.TelephonyManager: int getNetworkClass(int)> ->_NONE_
<android.text.Annotation: int getSpanTypeId()> ->_NONE_
<java.security.Security: java.security.Provider getProvider(java.lang.String)> ->_NONE_
<android.test.mock.MockPackageManager: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int)> ->_NONE_
<org.apache.xml.utils.SecuritySupport: java.lang.String getSystemProperty(java.lang.String)> ->_NONE_
<android.text.BoringLayout: int getLineCount()> ->_NONE_
<org.kxml2.io.KXmlParser: int getEventType()> ->_NONE_
<gov.nist.javax.sip.address.TelURLImpl: java.lang.String getPostDial()> ->_NONE_
<libcore.io.EventLogger: libcore.io.EventLogger$Reporter getReporter()> ->_NONE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.Header createHeader(java.lang.String)> ->_NONE_
<android.app.BackStackRecord: android.app.FragmentTransaction setCustomAnimations(int,int,int,int)> ->_NONE_
<android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int)> ->_NONE_
<android.media.videoeditor.TransitionAlpha: int getBlendingPercent()> ->_NONE_
<android.animation.ObjectAnimator: java.lang.String getPropertyName()> ->_NONE_
<android.telephony.SmsCbMessage: int getSerialNumber()> ->_NONE_
<java.security.spec.DSAPublicKeySpec: java.math.BigInteger getP()> ->_NONE_
<java.security.spec.DSAPublicKeySpec: java.math.BigInteger getQ()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: void setWantClientAuth(boolean)> ->_NONE_
<org.apache.xalan.templates.ElemIf: org.apache.xpath.XPath getTest()> ->_NONE_
<java.lang.AbstractStringBuilder: void setCharAt(int,char)> ->_NONE_
<android.widget.DialerFilter: void setFilterWatcher(android.text.TextWatcher)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.security.cert.Certificate[] getPeerCertificates()> ->_NONE_
<android.database.AbstractCursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri,int)> ->_NONE_
<org.apache.xml.utils.DOMBuilder: java.io.Writer getWriter()> ->_NONE_
<java.security.spec.DSAPublicKeySpec: java.math.BigInteger getY()> ->_NONE_
<android.text.AutoText: int getSize(android.view.View)> ->_NONE_
<org.apache.http.impl.cookie.BasicClientCookie: void setVersion(int)> ->_NONE_
<java.io.ObjectInputStream: int readUnsignedByte()> ->_NONE_
<android.util.DayOfMonthCursor: int getSelectedRow()> ->_NONE_
<libcore.net.http.HttpResponseCache: int getWriteSuccessCount()> ->_NONE_
<org.ccil.cowan.tagsoup.ElementType: void setMemberOf(int)> ->_NONE_
<org.jivesoftware.smack.packet.DataMessage: java.lang.String getToken()> ->_NONE_
<gov.nist.javax.sip.address.TelURLImpl: void setPhoneNumber(java.lang.String)> ->_NONE_
<android.webkit.WebViewClassic: android.webkit.WebSettings getSettings()> ->_NONE_
<org.apache.harmony.xml.dom.AttrImpl: short getNodeType()> ->_NONE_
<java.security.spec.DSAPublicKeySpec: java.math.BigInteger getG()> ->_NONE_
<java.security.SignedObject: byte[] getSignature()> ->_NONE_
<android.net.SSLCertificateSocketFactory: java.lang.String[] getDefaultCipherSuites()> ->_NONE_
<java.util.zip.Deflater: int getTotalOut()> ->_NONE_
<android.filterpacks.performance.Throughput: int getPeriodFrameCount()> ->_NONE_
<org.jivesoftware.smack.XMPPConnection: long getLastActivityToServerTime()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: int getExpandedTypeID(java.lang.String,java.lang.String,int)> ->_NONE_
<org.apache.commons.io.FilenameUtils: java.lang.String getBaseName(java.lang.String)> ->_NONE_
<android.media.audiofx.PresetReverb: void setPreset(short)> ->_NONE_
<android.net.rtp.RtpStream: java.net.InetAddress getRemoteAddress()> ->_NONE_
<android.media.MediaRouter: android.media.MediaRouter$RouteCategory getCategoryAt(int)> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: void setMovementGranularities(int)> ->_NONE_
<java.net.HttpCookie: void setExpires(java.util.Date)> ->_NONE_
<android.os.PerformanceCollector: android.os.Bundle getAllocCounts()> ->_NONE_
<org.apache.xml.serializer.SerializerBase: java.lang.String getOutputProperty(java.lang.String)> ->_NONE_
<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()> ->_NONE_
<android.app.SearchableInfo: java.lang.String getSuggestIntentData()> ->_NONE_
<android.content.IntentSender: void writeIntentSenderOrNullToParcel(android.content.IntentSender,android.os.Parcel)> ->_NONE_
<android.app.ActivityManagerProxy: android.content.ComponentName getCallingActivity(android.os.IBinder)> ->_NONE_
<android.webkit.WebViewClassic: int getMaxTextScrollY()> ->_NONE_
<android.webkit.WebViewClassic: int getMaxTextScrollX()> ->_NONE_
<android.net.wifi.SupplicantStateTracker: void handleNetworkConnectionFailure(int)> ->_NONE_
<org.xmlpull.v1.sax2.Driver: void parseSubTree(org.xmlpull.v1.XmlPullParser)> ->_NONE_
<org.apache.http.client.params.ClientParamBean: void setRejectRelativeRedirect(boolean)> ->_NONE_
<android.content.pm.PackageParser: android.content.pm.PackageParser$PermissionGroup parsePermissionGroup(android.content.pm.PackageParser$Package,int,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,java.lang.String[])> ->_NONE_
<org.apache.james.mime4j.field.datetime.DateTime: java.util.Date getDate()> ->_NONE_
<android.filterfw.core.MutableFrameFormat: void setTarget(int)> ->_NONE_
<android.location.LocationManager: java.util.List getProviders(boolean)> ->_NONE_
<java.util.concurrent.atomic.AtomicIntegerArray: int getAndSet(int,int)> ->_NONE_
<android.content.IntentFilter: int getPriority()> ->_NONE_
<android.widget.VideoView: void setVideoPath(java.lang.String)> ->_NONE_
<android.widget.ListPopupWindow: void setModal(boolean)> ->_NONE_
<org.ccil.cowan.tagsoup.XMLWriter: void write(java.lang.String)> ->_NONE_
<org.apache.xml.utils.URI: void setPath(java.lang.String)> ->_NONE_
<android.app.ActivityManager: java.util.List getRunningTasks(int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.NativeCrypto: byte[][] encodeIssuerX509Principals(java.security.cert.X509Certificate[])> ->_NONE_
<android.media.AudioService: int requestAudioFocus(int,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xml.serializer.dom3.DOMLocatorImpl: int getLineNumber()> ->_NONE_
<java.nio.HeapByteBuffer: int getInt(int)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: int getHandleOfNode()> ->_NONE_
<android.webkit.WebSettings: boolean getPluginsEnabled()> ->_NONE_
<gov.nist.javax.sip.parser.DateParser: gov.nist.javax.sip.header.SIPHeader parse()> ->_NONE_
<android.location.Location: void setTime(long)> ->_NONE_
<org.apache.harmony.security.x509.OtherName: byte[] getValue()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.Attr getAttributeNode(java.lang.String)> ->_NONE_
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.Intent)> ->_NONE_
<android.webkit.WebSettings: void setLayoutAlgorithm(android.webkit.WebSettings$LayoutAlgorithm)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setText(java.lang.CharSequence)> ->_NONE_
<android.support.v4.widget.CursorAdapter: android.widget.FilterQueryProvider getFilterQueryProvider()> ->_NONE_
<android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String)> ->_NONE_
<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.String getLogClassName()> ->_NONE_
<android.view.ViewConfiguration: int getKeyRepeatDelay()> ->_NONE_
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script$KernelID getKernelIDMultiply()> ->_NONE_
<android.net.ConnectivityManager: void setDataDependency(int,boolean)> ->_NONE_
<gov.nist.javax.sip.header.ims.PChargingVector: void setICIDGeneratedAt(java.lang.String)> ->_NONE_
<java.net.URISyntaxException: java.lang.String getInput()> ->_NONE_
<android.util.SparseIntArray: int get(int,int)> ->_NONE_
<android.content.pm.VerifierDeviceIdentity: long decodeBase32(byte[])> ->_NONE_
<javax.sip.DialogState: javax.sip.DialogState getObject(int)> ->_NONE_
<android.net.Proxy: int getPort(android.content.Context)> ->_NONE_
<android.widget.CalendarView: long getDate()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: java.lang.String getDocumentBaseURI()> ->_NONE_
<android.media.audiofx.EnvironmentalReverb: int getDecayTime()> ->_NONE_
<android.preference.ListPreference: void setEntries(java.lang.CharSequence[])> ->_NONE_
<gov.nist.javax.sip.header.SIPHeaderList: java.lang.String debugDump(int)> ->_NONE_
<android.content.SyncStorageEngine: int getIntColumn(android.database.Cursor,java.lang.String)> ->_NONE_
<java.sql.Date: void setHours(int)> ->_NONE_
<java.nio.HeapByteBuffer: byte get(int)> ->_NONE_
<android.widget.TextView: int getImeActionId()> ->_NONE_
<android.accessibilityservice.AccessibilityService: android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()> ->_NONE_
<android.content.ContentResolver: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String)> ->_NONE_
<android.test.ClassPathPackageInfoSource: java.lang.String[] getClassPath()> ->_NONE_
<java.sql.DriverManager: java.sql.Connection getConnection(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xalan.templates.ElemLiteralResult: void setRawName(java.lang.String)> ->_NONE_
<java.util.zip.Deflater: void setDictionary(byte[],int,int)> ->_NONE_
<android.net.NetworkTemplate: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: boolean canPerformRequestOverConnection(long)> ->_NONE_
<android.media.AudioTrack: int getMinBufferSize(int,int,int)> ->_NONE_
<android.media.AudioService: void setStreamSolo(int,boolean,android.os.IBinder)> ->_NONE_
<android.location.Address: void setSubThoroughfare(java.lang.String)> ->_NONE_
<android.location.LocationManager: java.util.List getProviders(android.location.Criteria,boolean)> ->_NONE_
<org.apache.xalan.templates.ElemMessage: int getXSLToken()> ->_NONE_
<gov.nist.javax.sip.header.ContentEncoding: void setEncoding(java.lang.String)> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Boolean: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)> ->_NONE_
<android.content.Intent: void setSelector(android.content.Intent)> ->_NONE_
<gov.nist.javax.sip.SipProviderImpl: javax.sip.ServerTransaction getNewServerTransaction(javax.sip.message.Request)> ->_NONE_
<android.view.PointerIcon: android.view.PointerIcon loadCustomIcon(android.content.res.Resources,int)> ->_NONE_
<org.jivesoftware.smack.PacketReader: void dumpListener(java.util.List,java.io.PrintWriter)> ->_NONE_
<jp.co.omronsoft.openwnn.DefaultSoftKeyboard: int getKeyMode()> ->_NONE_
<android.app.Presentation: android.content.res.Resources getResources()> ->_NONE_
<libcore.util.ZoneInfo: int getOffset(long)> ->_NONE_
<android.net.MobileDataStateTracker: android.net.LinkProperties getLinkProperties()> ->_NONE_
<android.widget.DatePicker: void setEnabled(boolean)> ->_NONE_
<android.os.storage.MountServiceListener: void onUsbMassStorageConnectionChanged(boolean)> ->_NONE_
<android.net.wifi.p2p.WifiP2pWfdInfo: void setSessionAvailable(boolean)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: org.xml.sax.ContentHandler getContentHandler()> ->_NONE_
<java.io.PipedOutputStream: void write(byte[],int,int)> ->_NONE_
<java.util.BitSet: void set(int,int,boolean)> ->_NONE_
<libcore.io.ForwardingOs: int getsockoptInt(java.io.FileDescriptor,int,int)> ->_NONE_
<android.content.res.Configuration: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.location.Address: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.widget.HeaderViewListAdapter: int getFootersCount()> ->_NONE_
<android.test.ActivityUnitTestCase: int getRequestedOrientation()> ->_NONE_
<android.graphics.drawable.LayerDrawable: int getIntrinsicWidth()> ->_NONE_
<gov.nist.javax.sip.header.SubscriptionState: java.lang.String getState()> ->_NONE_
<android.text.style.AbsoluteSizeSpan: int getSize()> ->_NONE_
<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)> ->_NONE_
<android.filterfw.core.ShaderProgram: void setBlendFunc(int,int)> ->_NONE_
<java.security.Identity: java.lang.String getInfo()> ->_NONE_
<android.drm.DrmSupportInfo: java.util.Iterator getMimeTypeIterator()> ->_NONE_
<android.os.Bundle: java.lang.Object get(java.lang.String)> ->_NONE_
<android.net.WebAddress: int getPort()> ->_NONE_
<android.telephony.SignalStrength: int getCdmaLevel()> ->_NONE_
<org.jivesoftware.smack.packet.DataMessage: void setFromTrustedServer(boolean)> ->_NONE_
<android.widget.ActivityChooserView: void setProvider(android.view.ActionProvider)> ->_NONE_
<android.content.res.Resources: android.content.res.TypedArray getCachedStyledAttributes(int)> ->_NONE_
<org.apache.http.conn.scheme.Scheme: org.apache.http.conn.scheme.SchemeSocketFactory getSchemeSocketFactory()> ->_NONE_
<libcore.net.http.HttpURLConnectionImpl: int getChunkLength()> ->_NONE_
<android.content.CursorLoader: android.database.Cursor loadInBackground()> ->_NONE_
<android.widget.ActivityChooserView: android.widget.ListPopupWindow getListPopupWindow()> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentLengthHeader getContentLength()> ->_NONE_
<org.apache.xml.dtm.ref.ExtendedType: java.lang.String getLocalName()> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertPathImpl: byte[] getEncoded()> ->_NONE_
<android.net.LinkSocket: android.net.LinkProperties getLinkProperties()> ->_NONE_
<android.app.ActivityManagerProxy: void setLockScreenShown(boolean)> ->_NONE_
<android.support.v4.content.AsyncTaskLoader: boolean cancelLoad()> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: boolean getFeature(java.lang.String)> ->_NONE_
<android.view.HardwareLayer: int getWidth()> ->_NONE_
<android.nfc.Tag: void setConnectedTechnology(int)> ->_NONE_
<android.widget.GridLayout: void setOrientation(int)> ->_NONE_
<android.net.MobileDataStateTracker: boolean reconnect()> ->_NONE_
<java.util.SimpleTimeZone: void setDSTSavings(int)> ->_NONE_
<android.content.ContentProviderProxy: android.content.ContentProviderResult[] applyBatch(java.util.ArrayList)> ->_NONE_
<org.apache.xalan.templates.ElemNumber: java.lang.String getZeroString()> ->_NONE_
<android.app.Dialog: android.view.Window getWindow()> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Any: void encodeASN(org.apache.harmony.security.asn1.BerOutputStream)> ->_NONE_
<android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> ->_NONE_
<android.widget.RelativeLayout: void setVerticalGravity(int)> ->_NONE_
<org.apache.http.params.HttpProtocolParams: void setUserAgent(org.apache.http.params.HttpParams,java.lang.String)> ->_NONE_
<android.app.ActivityManager: boolean getPackageAskScreenCompat(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.stack.TCPMessageChannel: void handleException(java.text.ParseException,gov.nist.javax.sip.message.SIPMessage,java.lang.Class,java.lang.String,java.lang.String)> ->_NONE_
<android.nfc.NdefMessage: android.nfc.NdefRecord[] getRecords()> ->_NONE_
<android.emoji.EmojiFactory: java.lang.String getAndroidPuaFromVendorSpecificPua(java.lang.String)> ->_NONE_
<android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)> ->_NONE_
<org.apache.xalan.processor.ProcessorOutputElem: void setMethod(org.apache.xml.utils.QName)> ->_NONE_
<android.widget.Chronometer: android.widget.Chronometer$OnChronometerTickListener getOnChronometerTickListener()> ->_NONE_
<org.jivesoftware.smack.util.ObservableWriter: void write(char[],int,int)> ->_NONE_
<android.view.ViewGroup: float[] getDebugLines(int,int,int,int)> ->_NONE_
<android.view.SurfaceView: void setSecure(boolean)> ->_NONE_
<android.view.InputDevice: int getKeyboardType()> ->_NONE_
<org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)> ->_NONE_
<org.apache.http.impl.AbstractHttpClientConnection: void sendRequestHeader(org.apache.http.HttpRequest)> ->_NONE_
<android.widget.PopupWindow: int getWindowLayoutType()> ->_NONE_
<android.content.BroadcastReceiver: int getSendingUserId()> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: void setExtensionsTable(org.apache.xalan.templates.StylesheetRoot)> ->_NONE_
<android.net.rtp.AudioStream: int getDtmfType()> ->_NONE_
<org.xmlpull.v1.XmlPullParserFactory: boolean getFeature(java.lang.String)> ->_NONE_
<android.content.pm.PackageParser: void setOnlyCoreApps(boolean)> ->_NONE_
<net.oauth.OAuthMessage: java.io.InputStream getBodyAsStream()> ->_NONE_
<android.widget.ListPopupWindow: void setDropDownAlwaysVisible(boolean)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: int getStripSpaceCount()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1: void setMaxScrollY(java.lang.Object,int)> ->_NONE_
<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1: void setMaxScrollX(java.lang.Object,int)> ->_NONE_
<org.apache.xml.serializer.SerializerBase: java.lang.String getOutputPropertyNonDefault(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getScheme()> ->_NONE_
<org.apache.http.auth.UsernamePasswordCredentials: java.security.Principal getUserPrincipal()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: java.lang.String[] getEnabledCipherSuites()> ->_NONE_
<org.apache.http.impl.io.ChunkedInputStream: int getChunkSize()> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: void setDocumentLocator(org.xml.sax.Locator)> ->_NONE_
<android.os.UserManager: int getUserCount()> ->_NONE_
<java.util.zip.Adler32: void update(byte[],int,int)> ->_NONE_
<org.apache.http.conn.scheme.SchemeRegistry: void setItems(java.util.Map)> ->_NONE_
<android.bluetooth.BluetoothDevice: boolean getTrustState()> ->_NONE_
<android.database.sqlite.SQLiteDatabase: long replace(java.lang.String,java.lang.String,android.content.ContentValues)> ->_NONE_
<android.support.v4.app.Fragment: java.lang.String getString(int)> ->_NONE_
<android.text.method.HideReturnsTransformationMethod: char[] getReplacement()> ->_NONE_
<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.AudioTrack getAudioTrack(java.lang.String)> ->_NONE_
<org.apache.commons.io.input.SwappedDataInputStream: boolean readBoolean()> ->_NONE_
<org.apache.harmony.xml.dom.EntityReferenceImpl: java.lang.String getNodeName()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.Node getParentNode()> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: int getLocalSequenceNumber()> ->_NONE_
<junit.framework.TestSuite: java.lang.String getName()> ->_NONE_
<org.apache.xalan.processor.XSLTElementDef: java.lang.String getNamespace()> ->_NONE_
<org.apache.xpath.axes.AxesWalker: int getAxis()> ->_NONE_
<android.test.mock.MockContext: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)> ->_NONE_
<android.net.wifi.SupplicantState: boolean isConnecting(android.net.wifi.SupplicantState)> ->_NONE_
<java.util.concurrent.ForkJoinPool: long getQueuedTaskCount()> ->_NONE_
<org.apache.harmony.xml.dom.ElementImpl: org.w3c.dom.TypeInfo getSchemaTypeInfo()> ->_NONE_
<android.preference.GenericInflater: android.preference.GenericInflater$Factory getFactory()> ->_NONE_
<android.content.SyncStorageEngine: java.util.ArrayList getSyncHistory()> ->_NONE_
<android.net.sip.SimpleSessionDescription: java.lang.String getEncryptionKey()> ->_NONE_
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.ElemParam getParam(org.apache.xml.utils.QName)> ->_NONE_
<android.widget.AutoCompleteTextView: void setDropDownVerticalOffset(int)> ->_NONE_
<android.net.SntpClient: boolean requestTime(java.lang.String,int)> ->_NONE_
<org.apache.xalan.templates.TemplateSubPatternAssociation: org.apache.xalan.templates.TemplateSubPatternAssociation getNext()> ->_NONE_
<org.apache.xalan.templates.XUnresolvedVariableSimple: int getType()> ->_NONE_
<org.apache.xml.serializer.SerializerBase: void setOutputProperty(java.lang.String,java.lang.String)> ->_NONE_
<android.filterfw.io.TextGraphReader: void parseString(java.lang.String)> ->_NONE_
<org.apache.commons.io.IOUtils: void write(char[],java.io.OutputStream)> ->_NONE_
<android.widget.ExpandableListPosition: long getPackedPosition()> ->_NONE_
<android.webkit.BrowserFrame: void downloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)> ->_NONE_
<android.net.wifi.WifiNative: boolean setWfdDeviceInfo(java.lang.String)> ->_NONE_
<org.apache.xml.serializer.ToHTMLStream: void addUniqueAttribute(java.lang.String,java.lang.String,int)> ->_NONE_
<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: void setCGI3GPP(java.lang.String)> ->_NONE_
<org.apache.james.mime4j.MimeStreamParser: void parseEntity(java.io.InputStream)> ->_NONE_
<org.apache.xalan.templates.OutputProperties: java.util.Vector getQNameProperties(java.lang.String)> ->_NONE_
<gov.nist.core.GenericObject: gov.nist.core.Match getMatcher()> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CRLImpl: java.lang.String getSigAlgOID()> ->_NONE_
<java.lang.ExceptionInInitializerError: java.lang.Throwable getCause()> ->_NONE_
<org.apache.http.params.HttpProtocolParams: void setHttpElementCharset(org.apache.http.params.HttpParams,java.lang.String)> ->_NONE_
<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()> ->_NONE_
<android.hardware.Sensor: float getResolution()> ->_NONE_
<libcore.net.http.HttpsHandler: java.net.URLConnection openConnection(java.net.URL)> ->_NONE_
<android.view.ViewRootImpl: void dispatchDragEvent(android.view.DragEvent)> ->_NONE_
<java.util.concurrent.FutureTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)> ->_NONE_
<gov.nist.javax.sip.stack.SIPServerTransaction: void processRequest(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.MessageChannel)> ->_NONE_
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: org.w3c.dom.Node getNextSibling()> ->_NONE_
<android.widget.RemoteViewsAdapter: int getConvertViewTypeId(android.view.View)> ->_NONE_
<android.media.AudioService: int getMasterStreamType()> ->_NONE_
<org.apache.james.mime4j.field.address.parser.ParseException: java.lang.String add_escapes(java.lang.String)> ->_NONE_
<java.text.Format: java.lang.Object parseObject(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.address.SipUri: void setMethod(java.lang.String)> ->_NONE_
<android.test.ActivityInstrumentationTestCase2: void setActivityIntent(android.content.Intent)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectPool getStringWriterPool()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: void writeAppData(byte[],int,int)> ->_NONE_
<android.view.accessibility.AccessibilityRecord: void setContentDescription(java.lang.CharSequence)> ->_NONE_
<java.text.DecimalFormat: void setParseBigDecimal(boolean)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: java.net.SocketAddress getRemoteSocketAddress()> ->_NONE_
<android.net.ProxyProperties: java.lang.String getHost()> ->_NONE_
<android.webkit.WebSettingsClassic: void setDisplayZoomControls(boolean)> ->_NONE_
<android.test.suitebuilder.TestMethod: java.lang.Class getEnclosingClass()> ->_NONE_
<org.apache.xml.serializer.utils.URI: java.lang.String getUserinfo()> ->_NONE_
<android.content.ContextWrapper: java.lang.String getPackageCodePath()> ->_NONE_
<android.net.ConnectivityManager: int setUsbTethering(boolean)> ->_NONE_
<android.view.WindowOrientationListener: void setCurrentRotation(int)> ->_NONE_
<org.apache.http.conn.params.ConnRouteParams: java.net.InetAddress getLocalAddress(org.apache.http.params.HttpParams)> ->_NONE_
<org.apache.harmony.security.asn1.ASN1BitString: org.apache.harmony.security.asn1.ASN1BitString getInstance()> ->_NONE_
<android.speech.tts.BlockingAudioTrack: long getAudioLengthMs(int)> ->_NONE_
<gov.nist.javax.sip.header.CallIdentifier: java.lang.String getLocalId()> ->_NONE_
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long,long,long)> ->_NONE_
<org.apache.xalan.templates.ElemExtensionScript: void setSrc(java.lang.String)> ->_NONE_
<android.media.AudioService: void dumpStreamStates(java.io.PrintWriter)> ->_NONE_
<android.inputmethodservice.AbstractInputMethodService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> ->_NONE_
<java.util.concurrent.locks.ReentrantLock: int getWaitQueueLength(java.util.concurrent.locks.Condition)> ->_NONE_
<android.text.format.DateUtils: java.lang.String getDayOfWeekString(int,int)> ->_NONE_
<org.jivesoftware.smack.packet.DefaultPacketExtension: void setAttributeValue(java.lang.String,java.lang.String)> ->_NONE_
<java.security.KeyStore: java.lang.String getType()> ->_NONE_
<java.net.Inet6Address: java.net.NetworkInterface getScopedInterface()> ->_NONE_
<org.xml.sax.helpers.AttributesImpl: void setURI(int,java.lang.String)> ->_NONE_
<android.renderscript.Script: void setTimeZone(java.lang.String)> ->_NONE_
<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: java.lang.String getSubType()> ->_NONE_
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script$KernelID getKernelIDSrcOut()> ->_NONE_
<java.util.MapEntry: java.lang.Object getValue()> ->_NONE_
<org.apache.xml.serializer.ToStream: int accumDefaultEscape(java.io.Writer,char,int,char[],int,boolean,boolean)> ->_NONE_
<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)> ->_NONE_
<android.telephony.CellSignalStrengthCdma: void setEvdoSnr(int)> ->_NONE_
<android.location.LocationRequest: android.location.LocationRequest create()> ->_NONE_
<android.widget.AbsSeekBar: android.graphics.drawable.Drawable getThumb()> ->_NONE_
<android.filterfw.core.SimpleFrame: int[] getInts()> ->_NONE_
<javax.net.ssl.HttpsURLConnection: javax.net.ssl.HostnameVerifier getHostnameVerifier()> ->_NONE_
<android.webkit.WebSettings: void setEnableSmoothTransition(boolean)> ->_NONE_
<android.filterfw.core.MutableFrameFormat: void setDimensions(int)> ->_NONE_
<org.apache.xpath.VariableStack: int getStackFrame()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: void setUseClientMode(boolean)> ->_NONE_
<android.view.MotionEvent: float getHistoricalToolMajor(int)> ->_NONE_
<android.test.mock.MockContext: int getWallpaperDesiredMinimumHeight()> ->_NONE_
<java.net.ServerSocket: int getReceiveBufferSize()> ->_NONE_
<java.sql.Date: void setMinutes(int)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler getInputContentHandler(boolean)> ->_NONE_
<android.webkit.HTML5VideoViewProxy: void createWebCoreHandler()> ->_NONE_
<org.jivesoftware.smack.packet.BatchPresence: java.util.ArrayList getPresenceStanzaList()> ->_NONE_
<android.database.DatabaseUtils: java.lang.String getHexCollationKey(java.lang.String)> ->_NONE_
<android.widget.MediaController: void setAnchorView(android.view.View)> ->_NONE_
<android.text.StaticLayout: int getParagraphDirection(int)> ->_NONE_
<android.graphics.drawable.Drawable: void setChangingConfigurations(int)> ->_NONE_
<android.support.v4.view.PagerTabStrip: void setBackgroundColor(int)> ->_NONE_
<android.util.PrintWriterPrinter: void println(java.lang.String)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: boolean getSource_location()> ->_NONE_
<java.util.concurrent.ConcurrentHashMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)> ->_NONE_
<android.widget.TextView: android.text.style.URLSpan[] getUrls()> ->_NONE_
<org.apache.xalan.templates.VarNameCollector: int getVarCount()> ->_NONE_
<android.widget.Chronometer: void setBase(long)> ->_NONE_
<android.webkit.WebView: android.net.http.SslCertificate getCertificate()> ->_NONE_
<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void parseForConstructor(java.lang.reflect.GenericDeclaration,java.lang.String,java.lang.Class[])> ->_NONE_
<android.view.accessibility.AccessibilityRecord: android.os.Parcelable getParcelableData()> ->_NONE_
<android.widget.AdapterView: int getLastVisiblePosition()> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: java.lang.String getLocalName(int)> ->_NONE_
<android.filterpacks.imageproc.FisheyeFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<android.database.sqlite.SQLiteGlobal: int getJournalSizeLimit()> ->_NONE_
<android.app.ProgressDialog: void setIndeterminateDrawable(android.graphics.drawable.Drawable)> ->_NONE_
<org.apache.xml.serializer.SerializerBase: java.lang.String getStandalone()> ->_NONE_
<android.view.View: android.view.ContextMenu$ContextMenuInfo getContextMenuInfo()> ->_NONE_
<android.content.ClipboardManager: android.content.ClipDescription getPrimaryClipDescription()> ->_NONE_
<android.database.sqlite.SQLiteConnection: java.lang.String executeForString(java.lang.String,java.lang.Object[],android.os.CancellationSignal)> ->_NONE_
<android.view.accessibility.AccessibilityInteractionClient: java.util.List getFindAccessibilityNodeInfosResultAndClear(int)> ->_NONE_
<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.AlgorithmIdentifier getSignature()> ->_NONE_
<android.widget.CalendarView: void setDateTextAppearance(int)> ->_NONE_
<android.widget.LinearLayout: void setOrientation(int)> ->_NONE_
<org.jivesoftware.smack.util.Base64: java.lang.String encodeFromFile(java.lang.String)> ->_NONE_
<android.bluetooth.BluetoothPbap: android.bluetooth.BluetoothDevice getClient()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.SIPClientTransaction getForkedTransaction(java.lang.String)> ->_NONE_
<java.lang.reflect.Field: int getInt(java.lang.Object)> ->_NONE_
<java.text.NumberFormat: void setMinimumFractionDigits(int)> ->_NONE_
<android.app.ListActivity: void setSelection(int)> ->_NONE_
<android.content.Intent: java.util.ArrayList getCharSequenceArrayListExtra(java.lang.String)> ->_NONE_
<org.apache.xml.serializer.SecuritySupport: java.lang.ClassLoader getSystemClassLoader()> ->_NONE_
<android.filterfw.core.MutableFrameFormat: void setBytesPerSample(int)> ->_NONE_
<org.apache.xml.dtm.ref.SecuritySupport: org.apache.xml.dtm.ref.SecuritySupport getInstance()> ->_NONE_
<javax.security.auth.Subject: java.util.Set getPrivateCredentials(java.lang.Class)> ->_NONE_
<android.view.GestureDetector: void setIsLongpressEnabled(boolean)> ->_NONE_
<android.filterfw.core.GLFrame: void setTextureParameter(int,int)> ->_NONE_
<org.apache.harmony.xml.dom.NodeImpl: void getTextContent(java.lang.StringBuilder)> ->_NONE_
<android.nfc.Tag: void writeBytesWithNull(android.os.Parcel,byte[])> ->_NONE_
<java.net.Authenticator: java.net.PasswordAuthentication getPasswordAuthentication()> ->_NONE_
<android.view.animation.LayoutAnimationController: int getTransformedIndex(android.view.animation.LayoutAnimationController$AnimationParameters)> ->_NONE_
<org.xml.sax.helpers.AttributesImpl: int getLength()> ->_NONE_
<gov.nist.javax.sip.header.SubscriptionState: void setExpires(int)> ->_NONE_
<android.widget.TableRow: int getVirtualChildCount()> ->_NONE_
<android.view.SurfaceView: void setWindowType(int)> ->_NONE_
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getSettingsActivityName()> ->_NONE_
<gov.nist.javax.sip.message.SIPResponse: java.util.LinkedList getMessageAsEncodedStrings()> ->_NONE_
<android.widget.ListView: int getFooterViewsCount()> ->_NONE_
<android.widget.AbsListView: boolean checkInputConnectionProxy(android.view.View)> ->_NONE_
<org.ccil.cowan.tagsoup.XMLWriter: void setPrefix(java.lang.String,java.lang.String)> ->_NONE_
<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)> ->_NONE_
<libcore.net.http.RequestHeaders: void setContentType(java.lang.String)> ->_NONE_
<libcore.icu.NativeDecimalFormat: java.lang.String getNegativePrefix()> ->_NONE_
<java.io.HistoricalCharsetNames: java.lang.String get(java.nio.charset.Charset)> ->_NONE_
<jp.co.omronsoft.openwnn.OpenWnnEN: void onUpdateSelection(int,int,int,int,int,int)> ->_NONE_
<android.widget.ArrayAdapter: android.widget.Filter getFilter()> ->_NONE_
<android.location.GpsStatus: int getTimeToFirstFix()> ->_NONE_
<org.apache.xalan.templates.ElemSort: void setSelect(org.apache.xpath.XPath)> ->_NONE_
<org.apache.http.auth.UsernamePasswordCredentials: java.lang.String getUserName()> ->_NONE_
<android.widget.Chronometer: void setFormat(java.lang.String)> ->_NONE_
<android.net.LocalSocket: void setFileDescriptorsForSend(java.io.FileDescriptor[])> ->_NONE_
<android.widget.ListView: void setRemoteViewsAdapter(android.content.Intent)> ->_NONE_
<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 getFactory2()> ->_NONE_
<android.app.ApplicationPackageManager: int getApplicationEnabledSetting(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.TimeStamp: void setDelay(float)> ->_NONE_
<android.widget.AdapterView: long getItemIdAtPosition(int)> ->_NONE_
<org.apache.xml.serializer.SerializerBase: boolean getIndent()> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Enumerated: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> ->_NONE_
<java.lang.StringToReal: double parseDouble(java.lang.String)> ->_NONE_
<android.animation.LayoutTransition: long getStagger(int)> ->_NONE_
<java.io.LineNumberInputStream: int read()> ->_NONE_
<android.view.GLES20Canvas: void setDisplayListName(int,java.lang.String)> ->_NONE_
<org.apache.http.protocol.DefaultedHttpContext: org.apache.http.protocol.HttpContext getDefaults()> ->_NONE_
<android.media.Ringtone: void setTitle(java.lang.String)> ->_NONE_
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime()> ->_NONE_
<android.content.pm.ServiceInfo: void dump(android.util.Printer,java.lang.String)> ->_NONE_
<android.view.animation.Animation: void setDuration(long)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM getDTM()> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object decode(byte[],int,int)> ->_NONE_
<android.widget.SimpleAdapter: void setViewText(android.widget.TextView,java.lang.String)> ->_NONE_
<android.webkit.WebBackForwardListClassic: void setCurrentIndex(int)> ->_NONE_
<android.media.MediaMetadataRetriever: void setDataSource(java.lang.String)> ->_NONE_
<org.apache.harmony.xml.dom.DocumentImpl: boolean getStrictErrorChecking()> ->_NONE_
<org.apache.xalan.Version: int getDevelopmentVersionNum()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource()> ->_NONE_
<android.test.mock.MockContext: android.content.pm.PackageManager getPackageManager()> ->_NONE_
<javax.crypto.spec.RC5ParameterSpec: byte[] getIV()> ->_NONE_
<android.os.StatFs: int getBlockSize()> ->_NONE_
<gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception,gov.nist.core.StackLogger)> ->_NONE_
<android.telephony.TelephonyManager: java.lang.String getVoiceMailAlphaTag()> ->_NONE_
<org.apache.xml.serializer.utils.SerializerMessages: java.lang.Object[][] getContents()> ->_NONE_
<android.gesture.GestureOverlayView: int getOrientation()> ->_NONE_
<org.ccil.cowan.tagsoup.AttributesImpl: void setAttribute(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.net.nsd.DnsSdTxtRecord: byte[] getValue(int)> ->_NONE_
<android.filterfw.core.SimpleFrame: float[] getFloats()> ->_NONE_
<libcore.io.BlockGuardOs: int write(java.io.FileDescriptor,java.nio.ByteBuffer)> ->_NONE_
<android.inputmethodservice.InputMethodService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> ->_NONE_
<android.nfc.ApduList: java.util.List get()> ->_NONE_
<org.apache.xml.dtm.SecuritySupport12: boolean getFileExists(java.io.File)> ->_NONE_
<android.content.res.TypedArray: int getInt(int,int)> ->_NONE_
<org.javia.arity.RPN: void setConsumer(org.javia.arity.TokenConsumer)> ->_NONE_
<android.mtp.MtpObjectInfo: java.lang.String getName()> ->_NONE_
<javax.crypto.ExemptionMechanism: int getOutputSize(int)> ->_NONE_
<android.filterpacks.imageproc.ToRGBAFilter: android.filterfw.core.FrameFormat getConvertedFormat(android.filterfw.core.FrameFormat)> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CRLImpl: int getVersion()> ->_NONE_
<android.filterfw.core.OutputPort: void setBasePort(android.filterfw.core.InputPort)> ->_NONE_
<android.app.ProgressDialog: void setProgressNumberFormat(java.lang.String)> ->_NONE_
<org.apache.xml.serializer.SerializerBase: java.util.Set getOutputPropKeys()> ->_NONE_
<android.widget.PopupWindow: void setTouchModal(boolean)> ->_NONE_
<android.graphics.Paint: void set(android.graphics.Paint)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: void setNodeValue(java.lang.String)> ->_NONE_
<android.hardware.display.WifiDisplayStatus: int getFeatureState()> ->_NONE_
<android.widget.TableLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)> ->_NONE_
<android.net.sip.SimpleSessionDescription: void setAddress(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.ims.PProfileKey: java.lang.String encodeBody()> ->_NONE_
<libcore.icu.ICU: java.util.Locale[] getAvailableBreakIteratorLocales()> ->_NONE_
<dalvik.system.profiler.BinaryHprofWriter: void writeControlSettings(int,int)> ->_NONE_
<org.apache.xml.utils.NamespaceSupport2: java.lang.String getPrefix(java.lang.String)> ->_NONE_
<libcore.net.http.HttpURLConnectionImpl: libcore.net.http.HttpEngine getHttpEngine()> ->_NONE_
<android.view.inputmethod.BaseInputConnection: boolean commitText(java.lang.CharSequence,int)> ->_NONE_
<org.javia.arity.OptCodeGen: org.javia.arity.CompiledFunction getFun(int)> ->_NONE_
<android.gesture.GestureStore: void save(java.io.OutputStream,boolean)> ->_NONE_
<android.widget.ActivityChooserView: void setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable)> ->_NONE_
<android.app.admin.DevicePolicyManager: void setPasswordQuality(android.content.ComponentName,int)> ->_NONE_
<android.inputmethodservice.Keyboard: void loadKeyboard(android.content.Context,android.content.res.XmlResourceParser)> ->_NONE_
<android.widget.FrameLayout: void setForegroundGravity(int)> ->_NONE_
<android.database.CursorWrapper: int getColumnIndexOrThrow(java.lang.String)> ->_NONE_
<org.apache.commons.codec.net.RFC1522Codec: java.lang.String encodeText(java.lang.String,java.lang.String)> ->_NONE_
<android.media.videoeditor.MediaVideoItem: int getWidth()> ->_NONE_
<java.security.IdentityScope: java.security.IdentityScope getSystemScope()> ->_NONE_
<android.view.View: java.util.ArrayList getFocusables(int)> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: void setDoctypeSystem(java.lang.String)> ->_NONE_
<android.widget.NumberPicker: void setWrapSelectorWheel(boolean)> ->_NONE_
<org.apache.http.conn.params.ConnPerRouteBean: void setMaxForRoutes(java.util.Map)> ->_NONE_
<android.webkit.BrowserFrame: void loadStarted(java.lang.String,android.graphics.Bitmap,int,boolean)> ->_NONE_
<android.location.LocationRequest: long getExpireAt()> ->_NONE_
<android.server.search.SearchManagerService: java.util.List getSearchablesInGlobalSearch()> ->_NONE_
<gov.nist.javax.sip.header.extensions.Replaces: java.lang.String getToTag()> ->_NONE_
<org.apache.commons.logging.impl.SimpleLog: java.io.InputStream getResourceAsStream(java.lang.String)> ->_NONE_
<android.net.LocalSocketImpl: java.io.InputStream getInputStream()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.ClientKeyExchange: int getType()> ->_NONE_
<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getTextBeforeCursor(int,int)> ->_NONE_
<libcore.net.url.JarURLConnectionImpl: java.util.jar.JarEntry getJarEntry()> ->_NONE_
<org.apache.commons.io.filefilter.SuffixFileFilter: boolean accept(java.io.File,java.lang.String)> ->_NONE_
<java.io.Reader: int read(java.nio.CharBuffer)> ->_NONE_
<android.test.InstrumentationTestRunner: java.lang.String getCoverageFilePath()> ->_NONE_
<org.apache.xpath.VariableStack: org.apache.xpath.objects.XObject getLocalVariable(org.apache.xpath.XPathContext,int)> ->_NONE_
<java.text.DateFormatSymbols: java.lang.String[] getWeekdays()> ->_NONE_
<android.app.Activity: void setFeatureDrawableResource(int,int)> ->_NONE_
<org.apache.james.mime4j.field.Field: java.lang.String getName()> ->_NONE_
<java.util.concurrent.ConcurrentSkipListMap: void readObject(java.io.ObjectInputStream)> ->_NONE_
<android.widget.ListView: void setDividerHeight(int)> ->_NONE_
<android.media.RemoteControlClient: void setTransportControlFlags(int)> ->_NONE_
<android.widget.TextView: void setRawInputType(int)> ->_NONE_
<org.apache.commons.io.output.NullOutputStream: void write(byte[],int,int)> ->_NONE_
<android.os.RecoverySystem: java.util.HashSet getTrustedCerts(java.io.File)> ->_NONE_
<android.animation.ValueAnimator: android.animation.TimeInterpolator getInterpolator()> ->_NONE_
<android.graphics.PathMeasure: boolean getMatrix(float,android.graphics.Matrix,int)> ->_NONE_
<org.apache.harmony.xml.ExpatReader: org.xml.sax.DTDHandler getDTDHandler()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: int getPkeyContext()> ->_NONE_
<android.renderscript.ScriptIntrinsicColorMatrix: android.renderscript.Script$KernelID getKernelID()> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: int getRecursionLimit()> ->_NONE_
<gov.nist.javax.sip.header.SIPDate: java.lang.String encode()> ->_NONE_
<android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)> ->_NONE_
<android.net.NetworkInfo: void setRoaming(boolean)> ->_NONE_
<android.content.SyncStorageEngine: java.util.ArrayList getSyncStatus()> ->_NONE_
<dalvik.system.profiler.DalvikThreadSampler: java.lang.StackTraceElement[] getStackTrace(java.lang.Thread)> ->_NONE_
<android.preference.Preference: java.lang.String getPersistedString(java.lang.String)> ->_NONE_
<android.filterpacks.base.FrameBranch: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<org.apache.james.mime4j.message.AbstractBody: org.apache.james.mime4j.message.Entity getParent()> ->_NONE_
<org.apache.xml.serializer.NamespaceMappings: org.apache.xml.serializer.NamespaceMappings$MappingRecord getMappingFromURI(java.lang.String)> ->_NONE_
<android.webkit.WebViewClassic: void onScrollChanged(int,int,int,int)> ->_NONE_
<android.widget.ListView: long[] getCheckItemIds()> ->_NONE_
<org.apache.xpath.jaxp.JAXPPrefixResolver: java.lang.String getNamespaceForPrefix(java.lang.String)> ->_NONE_
<org.ccil.cowan.tagsoup.Parser: void setDTDHandler(org.xml.sax.DTDHandler)> ->_NONE_
<android.view.inputmethod.InputMethodManager: boolean setCurrentInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)> ->_NONE_
<java.net.ServerSocket: java.net.SocketAddress getLocalSocketAddress()> ->_NONE_
<android.net.NetworkState: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CRLEntryImpl: byte[] getExtensionValue(java.lang.String)> ->_NONE_
<android.graphics.drawable.BitmapDrawable: int getIntrinsicWidth()> ->_NONE_
<gov.nist.javax.sip.header.ContentDisposition: java.lang.String getDispositionType()> ->_NONE_
<android.drm.DrmManagerClient: java.lang.String getOriginalMimeType(java.lang.String)> ->_NONE_
<android.mtp.MtpObjectInfo: int getObjectHandle()> ->_NONE_
<org.apache.xalan.processor.ProcessorOutputElem: void setVersion(java.lang.String)> ->_NONE_
<org.apache.http.impl.conn.SingleClientConnManager: org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry()> ->_NONE_
<java.security.Provider: java.lang.String getName()> ->_NONE_
<org.apache.xml.utils.UnImplNode: void error(java.lang.String,java.lang.Object[])> ->_NONE_
<java.util.concurrent.atomic.AtomicStampedReference: java.lang.Object getReference()> ->_NONE_
<org.apache.xpath.XPath: java.lang.String getPatternString()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInParent(android.graphics.Rect)> ->_NONE_
<jp.co.omronsoft.openwnn.DefaultSoftKeyboard: android.view.View getCurrentView()> ->_NONE_
<javax.crypto.Cipher: int getOutputSize(int)> ->_NONE_
<org.kxml2.io.KXmlSerializer: void comment(java.lang.String)> ->_NONE_
<android.view.GLES20Canvas: void setMatrix(android.graphics.Matrix)> ->_NONE_
<android.net.ConnectivityManager: java.lang.String[] getTetherableUsbRegexs()> ->_NONE_
<libcore.net.http.HttpConnection: java.io.InputStream getInputStream()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInParent(android.graphics.Rect)> ->_NONE_
<gov.nist.javax.sip.header.ims.PChargingFunctionAddresses: void setValue(java.lang.String)> ->_NONE_
<android.view.textservice.SpellCheckerSubtype: java.lang.CharSequence getDisplayName(android.content.Context,java.lang.String,android.content.pm.ApplicationInfo)> ->_NONE_
<android.inputmethodservice.InputMethodService: void sendKeyChar(char)> ->_NONE_
<android.location.Address: double getLatitude()> ->_NONE_
<android.widget.HorizontalScrollView: float getRightFadingEdgeStrength()> ->_NONE_
<android.app.ActivityManagerProxy: void updateConfiguration(android.content.res.Configuration)> ->_NONE_
<gov.nist.javax.sip.address.SipUri: java.util.Iterator getHeaderNames()> ->_NONE_
<org.apache.xpath.axes.LocPathIterator: void setEnvironment(java.lang.Object)> ->_NONE_
<javax.xml.transform.dom.DOMResult: void setNextSibling(org.w3c.dom.Node)> ->_NONE_
<android.filterfw.GraphEnvironment: android.filterfw.io.GraphReader getGraphReader()> ->_NONE_
<android.app.LoadedApk: android.content.res.Resources getResources(android.app.ActivityThread)> ->_NONE_
<org.apache.xml.utils.UnImplNode: org.w3c.dom.Node getPreviousSibling()> ->_NONE_
<javax.crypto.SealedObject: java.lang.Object getObject(javax.crypto.Cipher)> ->_NONE_
<jp.co.omronsoft.openwnn.JAJP.RomkanFullKatakana: void setPreferences(android.content.SharedPreferences)> ->_NONE_
<java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)> ->_NONE_
<org.ccil.cowan.tagsoup.PYXWriter: void stage(char[],int,int)> ->_NONE_
<org.jivesoftware.smack.packet.LoginResponse: long getServerTimestamp()> ->_NONE_
<android.support.v4.util.SparseArrayCompat: void setValueAt(int,java.lang.Object)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl: java.lang.String[] getSupportedCipherSuites()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Collection getDialogs()> ->_NONE_
<android.text.style.LocaleSpan: void updateMeasureState(android.text.TextPaint)> ->_NONE_
<android.webkit.WebSettingsClassic: boolean getPluginsEnabled()> ->_NONE_
<android.net.NetworkStats: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentDispositionHeader getContentDisposition()> ->_NONE_
<gov.nist.javax.sip.header.CSeq: java.lang.String getMethod()> ->_NONE_
<org.apache.http.client.params.ClientParamBean: void setConnectionManagerFactoryClassName(java.lang.String)> ->_NONE_
<javax.net.ssl.SSLParameters: java.lang.String[] getProtocols()> ->_NONE_
<org.apache.harmony.security.pkcs7.AuthenticatedAttributes: java.util.List getAttributes()> ->_NONE_
<org.jivesoftware.smack.packet.Packet: void setRmqId(long)> ->_NONE_
<org.ccil.cowan.tagsoup.PYXWriter: int getEntity()> ->_NONE_
<android.view.inputmethod.InputMethodSubtype: int getNameResId()> ->_NONE_
<android.gesture.GestureOverlayView: void setEventsInterceptionEnabled(boolean)> ->_NONE_
<android.net.BaseNetworkStateTracker: android.net.LinkProperties getLinkProperties()> ->_NONE_
<org.jivesoftware.smack.packet.Packet: org.jivesoftware.smack.packet.PacketExtension getExtension(java.lang.String,java.lang.String)> ->_NONE_
<java.util.concurrent.Phaser: int getArrivedParties()> ->_NONE_
<android.view.ViewStub: android.view.LayoutInflater getLayoutInflater()> ->_NONE_
<android.filterfw.core.VertexFrame: float[] getFloats()> ->_NONE_
<org.apache.xml.dtm.ref.SecuritySupport: java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader)> ->_NONE_
<android.location.LocationManager: void requestSingleUpdate(android.location.Criteria,android.app.PendingIntent)> ->_NONE_
<android.app.ApplicationThreadProxy: void setSchedulingGroup(int)> ->_NONE_
<org.apache.http.impl.client.AbstractAuthenticationHandler: java.util.List getAuthPreferences(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)> ->_NONE_
<android.text.StaticLayout: int getEllipsizedWidth()> ->_NONE_
<android.net.NetworkStatsHistory: android.net.NetworkStatsHistory$Entry getValues(long,long,android.net.NetworkStatsHistory$Entry)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: void setCallId(javax.sip.header.CallIdHeader)> ->_NONE_
<java.nio.charset.CharsetEncoder: boolean canEncode(java.lang.CharSequence)> ->_NONE_
<android.view.View: float getPivotY()> ->_NONE_
<gov.nist.javax.sip.header.ProxyAuthenticate: void setURI(javax.sip.address.URI)> ->_NONE_
<android.test.AndroidTestCase: void setContext(android.content.Context)> ->_NONE_
<android.view.View: float getPivotX()> ->_NONE_
<android.text.method.ReplacementTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)> ->_NONE_
<org.apache.harmony.security.fortress.Engine: org.apache.harmony.security.fortress.Engine$SpiAndProvider getInstance(java.lang.String,java.lang.Object)> ->_NONE_
<java.util.zip.ZipEntry: long getCompressedSize()> ->_NONE_
<android.gesture.GestureOverlayView: void setUncertainGestureColor(int)> ->_NONE_
<org.apache.xpath.SourceTreeManager: void setURIResolver(javax.xml.transform.URIResolver)> ->_NONE_
<android.content.SyncStorageEngine: void setMasterSyncAutomatically(boolean,int)> ->_NONE_
<android.os.Environment: java.io.File getSystemSecureDirectory()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.Object setUserData(java.lang.String,java.lang.Object,org.w3c.dom.UserDataHandler)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: int getPort()> ->_NONE_
<java.lang.reflect.Field: void setByte(java.lang.Object,byte)> ->_NONE_
<java.io.FileInputStream: int read(byte[],int,int)> ->_NONE_
<org.apache.xalan.processor.XSLTAttributeDef: boolean getRequired()> ->_NONE_
<org.apache.harmony.security.x509.GeneralName: int getTag()> ->_NONE_
<android.content.pm.PackageItemInfo: android.content.pm.ApplicationInfo getApplicationInfo()> ->_NONE_
<android.app.ProgressDialog: int getSecondaryProgress()> ->_NONE_
<android.text.Layout: int getParagraphLeft(int)> ->_NONE_
<org.apache.commons.codec.language.SoundexUtils: int differenceEncoded(java.lang.String,java.lang.String)> ->_NONE_
<android.net.UrlQuerySanitizer: void setAllowUnregisteredParamaters(boolean)> ->_NONE_
<android.os.Parcel: void writeTypedList(java.util.List)> ->_NONE_
<dalvik.system.profiler.BinaryHprofWriter: void writeId(int)> ->_NONE_
<android.widget.AdapterView: void setSelectedPositionInt(int)> ->_NONE_
<org.apache.xpath.axes.LocPathIterator: void setNextPosition(int)> ->_NONE_
<gov.nist.core.LexerCore: java.lang.String getRest()> ->_NONE_
<android.widget.DialerFilter: int getMode()> ->_NONE_
<android.bluetooth.BluetoothClass: int getMajorDeviceClass()> ->_NONE_
<android.accounts.AccountManager: android.accounts.AccountManagerFuture updateCredentials(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)> ->_NONE_
<java.awt.font.TextAttribute: java.lang.Object readResolve()> ->_NONE_
<android.graphics.Paint: android.graphics.ColorFilter getColorFilter()> ->_NONE_
<android.database.sqlite.SQLiteDatabase: void setForeignKeyConstraintsEnabled(boolean)> ->_NONE_
<android.text.Layout: int getEllipsizedWidth()> ->_NONE_
<android.widget.NumberPicker: void setOnValueChangedListener(android.widget.NumberPicker$OnValueChangeListener)> ->_NONE_
<android.os.Debug: int getGlobalFreedCount()> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: java.lang.String getJabberId()> ->_NONE_
<android.webkit.WebViewClassic: void setNetworkType(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xpath.axes.ReverseAxesWalker: int getNextNode()> ->_NONE_
<android.view.Window: int getLocalFeatures()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: boolean isConnected()> ->_NONE_
<gov.nist.javax.sip.header.ContentDisposition: java.lang.String encodeBody()> ->_NONE_
<android.text.DynamicLayout: int getLineCount()> ->_NONE_
<org.apache.xml.serializer.Encodings: char getHighChar(java.lang.String)> ->_NONE_
<android.view.animation.Transformation: void setTransformationType(int)> ->_NONE_
<android.database.sqlite.SQLiteCursor: void setSelectionArguments(java.lang.String[])> ->_NONE_
<org.ccil.cowan.tagsoup.Parser: void setContentHandler(org.xml.sax.ContentHandler)> ->_NONE_
<android.test.suitebuilder.TestMethod: java.lang.String getName()> ->_NONE_
<android.app.admin.DevicePolicyManager: int getPasswordMinimumSymbols(android.content.ComponentName)> ->_NONE_
<android.app.FragmentBreadCrumbs: void setActivity(android.app.Activity)> ->_NONE_
<org.ccil.cowan.tagsoup.jaxp.SAXParserImpl: org.xml.sax.XMLReader getXMLReader()> ->_NONE_
<libcore.util.ZoneInfo: int getDSTSavings()> ->_NONE_
<org.jivesoftware.smack.packet.Packet: void setLastStreamId(int)> ->_NONE_
<javax.net.ssl.KeyManagerFactory: java.security.Provider getProvider()> ->_NONE_
<gov.nist.javax.sip.header.AcceptEncoding: void setEncoding(java.lang.String)> ->_NONE_
<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.impl.client.RequestWrapper wrapRequest(org.apache.http.HttpRequest)> ->_NONE_
<javax.xml.datatype.XMLGregorianCalendar: void setTime(int,int,int,java.math.BigDecimal)> ->_NONE_
<android.widget.TextView: void setExtractedText(android.view.inputmethod.ExtractedText)> ->_NONE_
<gov.nist.javax.sip.header.Via: gov.nist.javax.sip.header.Protocol getSentProtocol()> ->_NONE_
<dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()> ->_NONE_
<org.apache.xpath.functions.FuncNumber: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<android.preference.Preference: void setTitle(java.lang.CharSequence)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()> ->_NONE_
<org.apache.xml.dtm.DTMException: java.lang.Throwable getException()> ->_NONE_
<gov.nist.javax.sip.header.extensions.SessionExpires: void setExpires(int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.ServerSessionContext: javax.net.ssl.SSLSession getSession(byte[])> ->_NONE_
<org.apache.xpath.patterns.FunctionPattern: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<gov.nist.javax.sip.header.StatusLine: java.lang.String getReasonPhrase()> ->_NONE_
<android.webkit.AccessibilityInjectorFallback: android.view.accessibility.AccessibilityEvent getPartialyPopulatedAccessibilityEvent(int)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: java.lang.String getXmlnsXsl()> ->_NONE_
<org.apache.harmony.xml.ExpatReader: void setErrorHandler(org.xml.sax.ErrorHandler)> ->_NONE_
<android.bluetooth.BluetoothA2dp: int getConnectionState(android.bluetooth.BluetoothDevice)> ->_NONE_
<java.security.spec.ECFieldF2m: int getFieldSize()> ->_NONE_
<android.filterfw.core.VertexFrame: void setData(java.nio.ByteBuffer,int,int)> ->_NONE_
<android.content.AbstractThreadedSyncAdapter: android.content.Context getContext()> ->_NONE_
<org.jivesoftware.smack.packet.LoginResponse: java.util.Map getSettings()> ->_NONE_
<android.view.MotionEvent: int getSource()> ->_NONE_
<org.jivesoftware.smackx.ServiceDiscoveryManager: void setIdentityType(java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: javax.net.ssl.X509KeyManager getKeyManager()> ->_NONE_
<org.apache.james.mime4j.field.address.parser.SimpleCharStream: void setTabSize(int)> ->_NONE_
<java.text.DecimalFormatSymbols: void setDecimalSeparator(char)> ->_NONE_
<android.net.wifi.p2p.WifiP2pDevice: void update(android.net.wifi.p2p.WifiP2pDevice)> ->_NONE_
<java.util.logging.LogRecord: int getThreadID()> ->_NONE_
<android.text.method.PasswordTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)> ->_NONE_
<gov.nist.javax.sip.header.ContentType: java.lang.StringBuffer encodeBody(java.lang.StringBuffer)> ->_NONE_
<org.apache.xml.serializer.SecuritySupport: java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader)> ->_NONE_
<java.lang.HexStringParser: java.lang.String getNormalizedSignificand(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: byte[] getMessages()> ->_NONE_
<java.util.logging.Handler: java.lang.String getEncoding()> ->_NONE_
<java.util.jar.JarFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)> ->_NONE_
<android.net.sip.SimpleSessionDescription: java.lang.String getAttribute(java.lang.String)> ->_NONE_
<org.apache.xpath.XPathContext: void setNamespaceContext(org.apache.xml.utils.PrefixResolver)> ->_NONE_
<org.apache.xpath.axes.WalkingIterator: void setLastUsedWalker(org.apache.xpath.axes.AxesWalker)> ->_NONE_
<javax.crypto.EncryptedPrivateKeyInfo: java.lang.String getAlgName()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: void setLocalNameTable(org.apache.xml.dtm.ref.DTMStringPool)> ->_NONE_
<android.content.SyncAdaptersCache: android.content.SyncAdapterType parseServiceAttributes(android.content.res.Resources,java.lang.String,android.util.AttributeSet)> ->_NONE_
<android.filterfw.core.GLFrame: void setInts(int[])> ->_NONE_
<android.view.VolumePanel: void postMuteChanged(int,int)> ->_NONE_
<org.json.JSONArray: long getLong(int)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: int getNextAttribute(int)> ->_NONE_
<android.telephony.PhoneStateListener: void onDataConnectionStateChanged(int)> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Any: int getEncodedLength(org.apache.harmony.security.asn1.BerOutputStream)> ->_NONE_
<org.apache.http.impl.auth.DigestScheme: boolean isConnectionBased()> ->_NONE_
<android.graphics.drawable.GradientDrawable: int getOpacity()> ->_NONE_
<javax.xml.parsers.FactoryConfigurationError: java.lang.String getMessage()> ->_NONE_
<android.widget.RemoteViews: void setInt(int,java.lang.String,int)> ->_NONE_
<android.renderscript.Allocation: android.view.Surface getSurface()> ->_NONE_
<junit.framework.ComparisonFailure: java.lang.String getActual()> ->_NONE_
<gov.nist.javax.sip.address.AddressImpl: int getPort()> ->_NONE_
<android.net.http.HttpAuthHeader: java.lang.String getUsername()> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.StylesheetRoot getStylesheetRoot()> ->_NONE_
<org.apache.xalan.templates.AVT: org.apache.xml.utils.FastStringBuffer getBuffer()> ->_NONE_
<android.graphics.Bitmap: int getScaledHeight(android.graphics.Canvas)> ->_NONE_
<android.bluetooth.BluetoothDevice: android.os.ParcelUuid[] getUuids()> ->_NONE_
<android.app.ContextImpl: java.lang.String getPackageResourcePath()> ->_NONE_
<java.text.DateFormatSymbols: void setMonths(java.lang.String[])> ->_NONE_
<android.text.format.DateFormat: java.lang.String getDateFormatStringForSetting(android.content.Context,java.lang.String)> ->_NONE_
<android.test.InstrumentationTestRunner: java.lang.Class getAnnotationClass(java.lang.String)> ->_NONE_
<android.net.WebAddress: void setPath(java.lang.String)> ->_NONE_
<java.lang.reflect.Method: java.lang.String getName()> ->_NONE_
<android.widget.AbsSpinner: void setSelection(int)> ->_NONE_
<org.apache.http.conn.params.ConnRouteParams: org.apache.http.HttpHost getDefaultProxy(org.apache.http.params.HttpParams)> ->_NONE_
<org.apache.xalan.templates.ElemAttribute: void execute(org.apache.xalan.transformer.TransformerImpl)> ->_NONE_
<android.support.v4.app.DialogFragment: int getTheme()> ->_NONE_
<org.apache.xpath.patterns.NodeTest: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setParcelableData(java.lang.Object,android.os.Parcelable)> ->_NONE_
<gov.nist.javax.sip.parser.MimeVersionParser: gov.nist.javax.sip.header.SIPHeader parse()> ->_NONE_
<gov.nist.javax.sip.address.Authority: void setPassword(java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: boolean getNeedClientAuth()> ->_NONE_
<android.text.style.TextAppearanceSpan: int getSpanTypeId()> ->_NONE_
<android.app.BackStackRecord: int getId()> ->_NONE_
<android.content.SyncManager: java.util.List getAllUsers()> ->_NONE_
<org.apache.xpath.VariableStack: org.apache.xpath.objects.XObject getGlobalVariable(org.apache.xpath.XPathContext,int)> ->_NONE_
<android.webkit.WebSettingsClassic: void setDomStorageEnabled(boolean)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: void setSoWriteTimeout(int)> ->_NONE_
<gov.nist.javax.sip.address.Authority: void setUserInfo(gov.nist.javax.sip.address.UserInfo)> ->_NONE_
<org.apache.xpath.functions.FuncLast: int getCountOfContextNodeList(org.apache.xpath.XPathContext)> ->_NONE_
<org.apache.xml.utils.StringVector: int getLength()> ->_NONE_
<android.app.ApplicationPackageManager: java.lang.String getInstallerPackageName(java.lang.String)> ->_NONE_
<org.jivesoftware.smack.packet.Packet: void setError(org.jivesoftware.smack.packet.XMPPError)> ->_NONE_
<android.widget.AlphabetIndexer: int getSectionForPosition(int)> ->_NONE_
<java.util.concurrent.ForkJoinTask: int getSurplusQueuedTaskCount()> ->_NONE_
<android.app.ActivityManagerProxy: java.util.List getRunningExternalApplications()> ->_NONE_
<org.apache.xalan.processor.ProcessorInclude: java.lang.String getStylesheetInclErr()> ->_NONE_
<android.view.View: int getHeight()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol: byte[] getChangeCipherSpecMesage(org.apache.harmony.xnet.provider.jsse.SSLSessionImpl)> ->_NONE_
<gov.nist.core.NameValue: void setSeparator(java.lang.String)> ->_NONE_
<android.os.StrictMode: void onServiceConnectionLeaked(java.lang.Throwable)> ->_NONE_
<org.apache.http.impl.client.DefaultTargetAuthenticationHandler: java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)> ->_NONE_
<javax.net.ssl.SSLParameters: void setWantClientAuth(boolean)> ->_NONE_
<android.database.CursorWindow: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.xpath.NodeSetDTM: int getLast()> ->_NONE_
<java.util.concurrent.LinkedBlockingDeque: java.lang.Object getFirst()> ->_NONE_
<gov.nist.javax.sip.header.ParametersHeader: gov.nist.core.DuplicateNameValueList getMultiParameters()> ->_NONE_
<org.apache.http.impl.AbstractHttpServerConnection: void sendResponseHeader(org.apache.http.HttpResponse)> ->_NONE_
<org.apache.xml.serializer.SerializerBase: java.lang.String getPrefixPart(java.lang.String)> ->_NONE_
<java.net.HttpCookie: void setSecure(boolean)> ->_NONE_
<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.Node getParentNode()> ->_NONE_
<android.net.wifi.WifiNative: java.lang.String getMacAddress()> ->_NONE_
<android.app.ApplicationThreadProxy: void updatePackageCompatibilityInfo(java.lang.String,android.content.res.CompatibilityInfo)> ->_NONE_
<javax.security.auth.Subject: java.util.Set getPublicCredentials(java.lang.Class)> ->_NONE_
<org.apache.xml.utils.UnImplNode: void setIdAttributeNode(org.w3c.dom.Attr,boolean)> ->_NONE_
<javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.commons.io.input.NullInputStream: long getSize()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPublicKey: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getOpenSSLKey()> ->_NONE_
<org.apache.harmony.xml.dom.CharacterDataImpl: void setData(java.lang.String)> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertImpl: javax.security.auth.x500.X500Principal getIssuerX500Principal()> ->_NONE_
<android.view.ViewGroup: android.view.View getChildAt(int)> ->_NONE_
<android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)> ->_NONE_
<android.view.accessibility.AccessibilityInteractionClient: android.accessibilityservice.IAccessibilityServiceConnection getConnection(int)> ->_NONE_
<java.security.Policy: java.security.Policy getPolicy()> ->_NONE_
<android.util.DayOfMonthCursor: int getSelectedMonthOffset()> ->_NONE_
<android.webkit.WebBackForwardListClassic: android.webkit.WebHistoryItem getItemAtIndex(int)> ->_NONE_
<android.widget.ListPopupWindow: long getSelectedItemId()> ->_NONE_
<java.text.DecimalFormat: void setMinimumFractionDigits(int)> ->_NONE_
<javax.crypto.spec.DESedeKeySpec: byte[] getKey()> ->_NONE_
<gov.nist.javax.sip.header.InReplyTo: void setCallId(java.lang.String)> ->_NONE_
<org.xml.sax.helpers.XMLFilterImpl: org.xml.sax.EntityResolver getEntityResolver()> ->_NONE_
<android.graphics.RectF: void set(float,float,float,float)> ->_NONE_
<java.net.HttpCookie: boolean getSecure()> ->_NONE_
<android.widget.Toast: void setGravity(int,int,int)> ->_NONE_
<android.net.wifi.WifiNative: int getBand()> ->_NONE_
<gov.nist.javax.sip.header.Reason: java.lang.String encodeBody()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: byte[] getEncoded()> ->_NONE_
<libcore.net.http.RequestHeaders: libcore.net.http.RawHeaders getHeaders()> ->_NONE_
<android.view.animation.GridLayoutAnimationController: float getRowDelay()> ->_NONE_
<javax.net.ssl.HandshakeCompletedEvent: javax.security.cert.X509Certificate[] getPeerCertificateChain()> ->_NONE_
<java.net.CookieManager: void setCookiePolicy(java.net.CookiePolicy)> ->_NONE_
<android.filterpacks.imageproc.AutoFixFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<org.apache.xalan.templates.ElemExsltFunction: java.lang.String getNodeName()> ->_NONE_
<org.apache.xalan.templates.Stylesheet: void setOutput(org.apache.xalan.templates.OutputProperties)> ->_NONE_
<org.jivesoftware.smack.SASLAuthentication: boolean hasNonAnonymousAuthentication()> ->_NONE_
<gov.nist.javax.sip.address.UserInfo: void setUserType(int)> ->_NONE_
<java.text.DecimalFormatSymbols: void setPatternSeparator(char)> ->_NONE_
<android.telephony.SmsMessage: java.lang.String getOriginatingAddress()> ->_NONE_
<org.apache.http.client.methods.HttpRequestBase: java.net.URI getURI()> ->_NONE_
<android.app.Instrumentation: void sendCharacterSync(int)> ->_NONE_
<gov.nist.javax.sip.header.ContentType: void setContentType(java.lang.String)> ->_NONE_
<android.net.WebAddress: java.lang.String getScheme()> ->_NONE_
<org.ccil.cowan.tagsoup.jaxp.SAX1ParserAdapter: void setLocale(java.util.Locale)> ->_NONE_
<android.media.effect.SingleFilterEffect: void setParameter(java.lang.String,java.lang.Object)> ->_NONE_
<org.apache.xalan.transformer.TransformerIdentityImpl: void setDocumentLocator(org.xml.sax.Locator)> ->_NONE_
<net.oauth.OAuthConsumer: java.lang.Object getProperty(java.lang.String)> ->_NONE_
<java.net.Authenticator: java.net.PasswordAuthentication requestPasswordAuthentication(java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String,java.net.URL,java.net.Authenticator$RequestorType)> ->_NONE_
<android.view.Display: java.lang.String getName()> ->_NONE_
<android.net.wifi.p2p.WifiP2pWfdInfo: int getMaxThroughput()> ->_NONE_
<java.lang.reflect.Proxy: java.lang.reflect.InvocationHandler getInvocationHandler(java.lang.Object)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: java.lang.Object getFeature(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: javax.net.ssl.SSLEngineResult$Status getEngineStatus()> ->_NONE_
<android.view.View: int getNextFocusForwardId()> ->_NONE_
<junit.textui.TestRunner: void runAndWait(junit.framework.Test)> ->_NONE_
<android.inputmethodservice.SoftInputWindow: void setGravity(int)> ->_NONE_
<android.text.Layout: int getLineVisibleEnd(int,int,int)> ->_NONE_
<java.net.DatagramSocket: int getReceiveBufferSize()> ->_NONE_
<org.apache.xalan.templates.ElemNumber: org.apache.xpath.XPath getValue()> ->_NONE_
<org.apache.xml.utils.StringToIntTable: int getLength()> ->_NONE_
<java.util.jar.JarInputStream: java.util.jar.JarEntry getNextJarEntry()> ->_NONE_
<android.database.BulkCursorToCursorAdaptor: android.database.IContentObserver getObserver()> ->_NONE_
<android.app.WallpaperInfo: android.graphics.drawable.Drawable loadThumbnail(android.content.pm.PackageManager)> ->_NONE_
<org.apache.xpath.Arg: org.apache.xpath.objects.XObject getVal()> ->_NONE_
<java.util.concurrent.locks.ReentrantReadWriteLock: int getQueueLength()> ->_NONE_
<java.io.ObjectInputStream: java.lang.Object readUnshared()> ->_NONE_
<android.view.TextureView: void setSurfaceTextureListener(android.view.TextureView$SurfaceTextureListener)> ->_NONE_
<org.apache.james.mime4j.message.Entity: java.lang.String getMimeType()> ->_NONE_
<android.net.wifi.p2p.WifiP2pWfdInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setItemCount(int)> ->_NONE_
<org.jivesoftware.smack.util.PacketParserUtils: long parseRmqIdFromString(java.lang.String)> ->_NONE_
<android.content.pm.ParceledListSlice: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.webkit.URLUtil: java.lang.String parseContentDisposition(java.lang.String)> ->_NONE_
<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.ThreadFactory getThreadFactory()> ->_NONE_
<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)> ->_NONE_
<android.nfc.tech.IsoDep: int getTimeout()> ->_NONE_
<org.apache.xpath.axes.PredicatedNodeTest: void setPredicateCount(int)> ->_NONE_
<java.io.PipedWriter: void write(char[],int,int)> ->_NONE_
<junit.framework.TestSuite: void run(junit.framework.TestResult)> ->_NONE_
<android.content.SyncManager: void dumpTimeSec(java.io.PrintWriter,long)> ->_NONE_
<android.webkit.WebSettingsClassic: void setSupportMultipleWindows(boolean)> ->_NONE_
<android.database.sqlite.SQLiteDatabase: long getPageSize()> ->_NONE_
<org.jivesoftware.smack.ConnectionConfiguration: void setCompressionEnabled(boolean)> ->_NONE_
<gov.nist.javax.sip.stack.UDPMessageProcessor: int getDefaultTargetPort()> ->_NONE_
<net.oauth.client.OAuthClient: net.oauth.OAuthMessage getAccessToken(net.oauth.OAuthAccessor,java.lang.String,java.util.Collection)> ->_NONE_
<org.apache.xpath.axes.FilterExprIteratorSimple: int getAnalysisBits()> ->_NONE_
<android.test.mock.MockContext: android.content.res.AssetManager getAssets()> ->_NONE_
<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)> ->_NONE_
<org.apache.commons.io.EndianUtils: void writeSwappedFloat(byte[],int,float)> ->_NONE_
<android.widget.TextClock: void setTimeZone(java.lang.String)> ->_NONE_
<android.telephony.CellInfo: void setTimeStamp(long)> ->_NONE_
<org.apache.xml.serializer.OutputPropertyUtils: boolean getBooleanProperty(java.lang.String,java.util.Properties)> ->_NONE_
<android.net.wifi.WifiWatchdogStateMachine: void dump(java.io.PrintWriter)> ->_NONE_
<android.net.http.AndroidHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)> ->_NONE_
<java.sql.DriverManager: java.sql.Driver getDriver(java.lang.String)> ->_NONE_
<android.net.wifi.WifiStateTracker: void setTeardownRequested(boolean)> ->_NONE_
<org.apache.xalan.templates.FuncDocument: void error(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])> ->_NONE_
<android.view.ViewGroup: void setAnimationCacheEnabled(boolean)> ->_NONE_
<android.widget.ViewFlipper: void setFlipInterval(int)> ->_NONE_
<android.graphics.drawable.ColorDrawable: int getAlpha()> ->_NONE_
<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getBeginTransition()> ->_NONE_
<org.jivesoftware.smack.sasl.SASLPlainMechanism: java.lang.String getChallengeResponse(byte[])> ->_NONE_
<org.apache.http.impl.conn.AbstractPoolEntry: java.lang.Object getState()> ->_NONE_
<android.net.sip.SipProfile: boolean getAutoRegistration()> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: java.util.List getHeaderList(java.lang.String)> ->_NONE_
<android.net.TrafficStats: long getTxBytes(java.lang.String)> ->_NONE_
<android.net.wifi.p2p.WifiP2pDeviceList: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: void dumpDTM(java.io.OutputStream)> ->_NONE_
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: byte[] getRawData()> ->_NONE_
<android.webkit.ByteArrayBuilder: android.webkit.ByteArrayBuilder$Chunk getFirstChunk()> ->_NONE_
<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)> ->_NONE_
<android.webkit.WebViewClassic: void setWebChromeClient(android.webkit.WebChromeClient)> ->_NONE_
<gov.nist.javax.sip.message.SIPResponse: java.lang.String getReasonPhrase()> ->_NONE_
<android.graphics.drawable.AnimatedRotateDrawable: void setColorFilter(android.graphics.ColorFilter)> ->_NONE_
<android.hardware.usb.UsbDevice: java.lang.String getDeviceName(int)> ->_NONE_
<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams getRequestParams()> ->_NONE_
<android.net.nsd.NsdManager: java.lang.Object getListener(int)> ->_NONE_
<android.graphics.drawable.Drawable: int getLayoutDirection()> ->_NONE_
<org.jivesoftware.smack.packet.PresenceCapability: void setNode(java.lang.String)> ->_NONE_
<libcore.net.http.RequestHeaders: java.lang.String getHost()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLCipherRSA: byte[] engineUpdate(byte[],int,int)> ->_NONE_
<android.webkit.WebViewClassic: boolean requestFocus(int,android.graphics.Rect)> ->_NONE_
<gov.nist.javax.sip.DialogFilter: void sendServerInternalErrorResponse(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.SIPServerTransaction)> ->_NONE_
<android.view.MotionEvent: float getHistoricalAxisValue(int,int,int)> ->_NONE_
<libcore.util.ZoneInfoDB: java.lang.String[] getAvailableIDs(int)> ->_NONE_
<android.net.wifi.WpsResult: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<net.oauth.client.URLConnectionResponse: void <init>(net.oauth.http.HttpMessage,java.lang.String,byte[],java.net.URLConnection)> ->_NONE_
<android.preference.EditTextPreference: void setText(java.lang.String)> ->_NONE_
<org.kxml2.io.KXmlSerializer: void cdsect(java.lang.String)> ->_NONE_
<android.test.MoreAsserts: java.util.regex.Matcher getMatcher(java.lang.String,java.lang.String)> ->_NONE_
<android.net.sip.SimpleSessionDescription: android.net.sip.SimpleSessionDescription$Media[] getMedia()> ->_NONE_
<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: org.apache.http.conn.ClientConnectionManager getManager()> ->_NONE_
<javax.xml.transform.dom.DOMResult: java.lang.String getSystemId()> ->_NONE_
<org.apache.xalan.templates.ElemFallback: java.lang.String getNodeName()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: void setNeedClientAuth(boolean)> ->_NONE_
<libcore.net.http.RequestHeaders: void setHost(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getPeerAddress()> ->_NONE_
<android.widget.SlidingDrawer: void setOnDrawerScrollListener(android.widget.SlidingDrawer$OnDrawerScrollListener)> ->_NONE_
<android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()> ->_NONE_
<android.widget.GridView: void setGravity(int)> ->_NONE_
<android.view.View: android.view.DisplayList getDisplayList()> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationInfo: java.lang.String getCNonce()> ->_NONE_
<android.graphics.drawable.DrawableContainer: int getIntrinsicWidth()> ->_NONE_
<android.content.AsyncTaskLoader: boolean onCancelLoad()> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentLengthHeader getContentLengthHeader()> ->_NONE_
<org.apache.xml.dtm.ref.ExpandedNameTable: int getNamespaceID(int)> ->_NONE_
<org.apache.xpath.VariableStack: void setGlobalVariable(int,org.apache.xpath.objects.XObject)> ->_NONE_
<libcore.net.http.ResponseHeaders: java.util.Date getExpires()> ->_NONE_
<junit.runner.TestCaseClassLoader: byte[] loadFileData(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.james.mime4j.EOLConvertingInputStream: int read()> ->_NONE_
<android.app.SearchManager: android.database.Cursor getSuggestions(android.app.SearchableInfo,java.lang.String)> ->_NONE_
<android.widget.ImageView: android.graphics.Matrix getImageMatrix()> ->_NONE_
<android.net.LocalSocketImpl: android.net.Credentials getPeerCredentials()> ->_NONE_
<android.nfc.tech.NfcV: int getMaxTransceiveLength()> ->_NONE_
<android.filterfw.core.KeyValueMap: float getFloat(java.lang.String)> ->_NONE_
<org.apache.james.mime4j.field.datetime.parser.SimpleCharStream: int getBeginLine()> ->_NONE_
<android.view.Surface: void setPosition(float,float)> ->_NONE_
<org.ccil.cowan.tagsoup.XMLWriter: void comment(char[],int,int)> ->_NONE_
<android.content.res.Resources: boolean verifyPreloadConfig(android.util.TypedValue,java.lang.String)> ->_NONE_
<android.app.ActivityManagerProxy: void activityPaused(android.os.IBinder)> ->_NONE_
<org.apache.xpath.axes.PredicatedNodeTest: void setLocPathIterator(org.apache.xpath.axes.LocPathIterator)> ->_NONE_
<android.nfc.tech.NfcB: byte[] getProtocolInfo()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: void sendUrgentData(int)> ->_NONE_
<org.apache.http.impl.client.EntityEnclosingRequestWrapper: void setEntity(org.apache.http.HttpEntity)> ->_NONE_
<android.webkit.BrowserFrame: boolean getShouldStartScrolledRight()> ->_NONE_
<libcore.icu.NativeDecimalFormat: void setPositiveSuffix(java.lang.String)> ->_NONE_
<android.view.inputmethod.BaseInputConnection: int getComposingSpanEnd(android.text.Spannable)> ->_NONE_
<javax.obex.ServerOperation: int getResponseCode()> ->_NONE_
<android.media.MediaCodec: android.media.MediaCodec createDecoderByType(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationHeader: int getNonceCount()> ->_NONE_
<android.location.Location: float getAccuracy()> ->_NONE_
<android.graphics.Bitmap: void setNinePatchChunk(byte[])> ->_NONE_
<org.apache.harmony.security.pkcs7.SignerInfo: byte[] getEncodedAuthenticatedAttributes()> ->_NONE_
<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)> ->_NONE_
<android.view.AbsSavedState: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.xalan.processor.ProcessorOutputElem: void setCdataSectionElements(java.util.Vector)> ->_NONE_
<org.apache.harmony.security.asn1.BerInputStream: java.lang.Object get(java.lang.Object)> ->_NONE_
<java.security.cert.X509CRLSelector: void setDateAndTime(java.util.Date)> ->_NONE_
<org.apache.http.conn.HttpHostConnectException: org.apache.http.HttpHost getHost()> ->_NONE_
<org.apache.xml.utils.SAXSourceLocator: int getColumnNumber()> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: java.lang.Object getApplicationData()> ->_NONE_
<android.os.Debug: int getThreadExternalAllocCount()> ->_NONE_
<android.os.Parcel: void writeStringList(java.util.List)> ->_NONE_
<android.view.ViewConfiguration: int getScaledMaximumDrawingCacheSize()> ->_NONE_
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: java.util.Collection getExclusiveQueuedThreads()> ->_NONE_
<android.content.ContentValues: java.lang.Float getAsFloat(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.ElemWithParam: org.apache.xpath.XPath getSelect()> ->_NONE_
<android.os.UserManager: int getUserHandle()> ->_NONE_
<org.apache.xpath.XPathContext: org.apache.xpath.axes.SubContextList getSubContextList()> ->_NONE_
<org.apache.james.mime4j.field.ContentTypeField: java.lang.String getBoundary()> ->_NONE_
<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.Transition parseTransition(org.xmlpull.v1.XmlPullParser,java.util.List)> ->_NONE_
<org.apache.xpath.functions.FunctionOneArg: void setArg(org.apache.xpath.Expression,int)> ->_NONE_
<android.net.wifi.WifiStateMachine: java.lang.String getConfigFile()> ->_NONE_
<android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)> ->_NONE_
<java.security.PrivilegedActionException: java.lang.Throwable getCause()> ->_NONE_
<android.test.TouchUtils: void getStartLocation(android.view.View,int,int[])> ->_NONE_
<android.view.GLES20DisplayList: void setLeftTop(int,int)> ->_NONE_
<org.apache.xml.utils.UnImplNode: org.w3c.dom.DocumentType getDoctype()> ->_NONE_
<java.util.GregorianCalendar: java.util.TimeZone getTimeZone()> ->_NONE_
<org.apache.harmony.xml.dom.ElementImpl: org.w3c.dom.Element getElementById(java.lang.String)> ->_NONE_
<android.net.http.HttpResponseCache: java.net.CacheResponse get(java.net.URI,java.lang.String,java.util.Map)> ->_NONE_
<android.renderscript.Matrix3f: void loadMultiply(android.renderscript.Matrix3f,android.renderscript.Matrix3f)> ->_NONE_
<libcore.icu.NativeBreakIterator: void setText(java.text.CharacterIterator)> ->_NONE_
<jp.co.omronsoft.openwnn.TextCandidatesViewManager: int getCandidateSpaceWidth(boolean)> ->_NONE_
<org.apache.http.impl.AbstractHttpServerConnection: org.apache.http.HttpRequestFactory createHttpRequestFactory()> ->_NONE_
<org.apache.xml.serializer.ToStream: int processDirty(char[],int,int,char,int,boolean)> ->_NONE_
<gov.nist.core.GenericObjectList: java.lang.String debugDump()> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest getLastAckSent()> ->_NONE_
<android.app.WallpaperInfo: java.lang.String getPackageName()> ->_NONE_
<android.test.mock.MockPackageManager: java.util.List getInstalledApplications(int)> ->_NONE_
<java.util.logging.LogRecord: void setMessage(java.lang.String)> ->_NONE_
<org.apache.xml.utils.SecuritySupport: boolean getFileExists(java.io.File)> ->_NONE_
<org.apache.harmony.security.x509.ExtensionValue: void dumpValue(java.lang.StringBuilder)> ->_NONE_
<android.webkit.Plugin: java.lang.String getFileName()> ->_NONE_
<android.widget.GridLayout: int getDefaultMargin(android.view.View,android.widget.GridLayout$LayoutParams,boolean,boolean)> ->_NONE_
<gov.nist.javax.sip.header.extensions.SessionExpires: void setRefresher(java.lang.String)> ->_NONE_
<org.apache.xalan.processor.ProcessorOutputElem: void setStandalone(boolean)> ->_NONE_
<android.bluetooth.BluetoothOutputStream: void write(int)> ->_NONE_
<android.os.Debug: int getThreadAllocCount()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: void setTextContent(java.lang.String)> ->_NONE_
<org.apache.xalan.transformer.TransformerHandlerImpl: void endElement(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.app.backup.RestoreSession: int getAvailableRestoreSets(android.app.backup.RestoreObserver)> ->_NONE_
<android.mtp.MtpStorage: int getStorageId(int)> ->_NONE_
<org.apache.xpath.functions.FuncSubstring: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<org.apache.xml.serializer.dom3.DOMOutputImpl: void setEncoding(java.lang.String)> ->_NONE_
<android.database.CursorToBulkCursorAdaptor: android.database.CursorWindow getWindow(int)> ->_NONE_
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)> ->_NONE_
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)> ->_NONE_
<android.webkit.DeviceOrientationService: android.hardware.SensorManager getSensorManager()> ->_NONE_
<android.view.ViewGroup: void setLayoutMode(int)> ->_NONE_
<android.mtp.MtpDatabase: int getDeviceProperty(int,long[],char[])> ->_NONE_
<org.apache.xpath.axes.LocPathIterator: void setRoot(int,java.lang.Object)> ->_NONE_
<android.webkit.ZoomManager: void setZoomOverviewWidth(int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.NativeCrypto: java.lang.String[] getDefaultProtocols()> ->_NONE_
<org.apache.http.auth.AuthState: void setAuthScheme(org.apache.http.auth.AuthScheme)> ->_NONE_
<android.location.Criteria: int getSpeedAccuracy()> ->_NONE_
<org.apache.xml.serializer.ToStream: void processAttributes(java.io.Writer,int)> ->_NONE_
<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String getNamespace()> ->_NONE_
<gov.nist.javax.sip.header.extensions.Join: java.lang.String getToTag()> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: void setContent(java.lang.Object,javax.sip.header.ContentTypeHeader)> ->_NONE_
<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.stack.SIPDialog getDefaultDialog()> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertFactoryImpl: java.security.cert.CRL getCRL(java.io.InputStream)> ->_NONE_
<android.text.style.SuggestionRangeSpan: int getSpanTypeId()> ->_NONE_
<javax.security.auth.Subject: java.util.Set getPrincipals(java.lang.Class)> ->_NONE_
<android.net.TrafficStats: android.net.INetworkStatsService getStatsService()> ->_NONE_
<android.view.View: void setFadingEdgeLength(int)> ->_NONE_
<android.app.ContextImpl: void setOuterContext(android.content.Context)> ->_NONE_
<android.app.ApplicationPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)> ->_NONE_
<java.util.concurrent.locks.ReentrantReadWriteLock: int getReadLockCount()> ->_NONE_
<android.test.mock.MockContext: android.content.pm.ApplicationInfo getApplicationInfo()> ->_NONE_
<java.security.cert.CertPathBuilder: java.security.Provider getProvider()> ->_NONE_
<android.telephony.gsm.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)> ->_NONE_
<android.content.SyncStorageEngine: android.content.SyncStorageEngine$AuthorityInfo getOrCreateAuthorityLocked(android.accounts.Account,int,java.lang.String,int,boolean)> ->_NONE_
<android.app.admin.DevicePolicyManager: int getMaximumFailedPasswordsForWipe(android.content.ComponentName)> ->_NONE_
<org.apache.commons.io.CopyUtils: int copy(java.io.InputStream,java.io.OutputStream)> ->_NONE_
<android.graphics.drawable.AnimatedRotateDrawable: void setFramesDuration(int)> ->_NONE_
<org.apache.james.mime4j.BodyDescriptor: java.lang.String getMimeType()> ->_NONE_
<org.apache.xalan.transformer.TransformerHandlerImpl: void setResult(javax.xml.transform.Result)> ->_NONE_
<libcore.net.http.ResponseHeaders: void setLocalTimestamps(long,long)> ->_NONE_
<org.apache.xalan.templates.OutputProperties: void setMethodDefaults(java.lang.String)> ->_NONE_
<org.apache.xml.utils.res.CharArrayWrapper: char getChar(int)> ->_NONE_
<android.graphics.RectF: void set(android.graphics.RectF)> ->_NONE_
<android.webkit.WebSettingsClassic: boolean getNeedInitialFocus()> ->_NONE_
<android.test.TestCaseUtil: junit.framework.Test getTestAtIndex(junit.framework.TestSuite,int)> ->_NONE_
<android.app.SharedPreferencesImpl: boolean getBoolean(java.lang.String,boolean)> ->_NONE_
<org.apache.xml.dtm.ref.ExtendedType: int getNodeType()> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: java.lang.String getTransactionId()> ->_NONE_
<org.apache.xml.serializer.dom3.NamespaceSupport: java.lang.String getPrefix(java.lang.String)> ->_NONE_
<android.appwidget.AppWidgetHost: void updateAppWidgetView(int,android.widget.RemoteViews)> ->_NONE_
<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: int getAndDecrement(java.lang.Object)> ->_NONE_
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)> ->_NONE_
<gov.nist.javax.sip.stack.SIPClientTransaction: javax.sip.message.Request createErrorAck()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketOutputStream: void write(byte[],int,int)> ->_NONE_
<android.media.MediaFormat: java.nio.ByteBuffer getByteBuffer(java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: void setNeedClientAuth(boolean)> ->_NONE_
<org.apache.xml.serializer.Version: void main(java.lang.String[])> ->_NONE_
<android.widget.TextView: android.text.TextUtils$TruncateAt getEllipsize()> ->_NONE_
<javax.crypto.KeyGenerator: java.lang.String getAlgorithm()> ->_NONE_
<java.nio.HeapByteBuffer: float getFloat()> ->_NONE_
<javax.net.ssl.HttpsURLConnection: javax.net.ssl.SSLSocketFactory getSSLSocketFactory()> ->_NONE_
<android.webkit.WebHistoryItemClassic: java.lang.String getTouchIconUrl()> ->_NONE_
<org.apache.http.params.BasicHttpParams: java.util.Set getNames()> ->_NONE_
<org.apache.xalan.transformer.TransformerIdentityImpl: java.util.Properties getOutputProperties()> ->_NONE_
<org.apache.http.impl.cookie.BasicClientCookie: int getVersion()> ->_NONE_
<android.text.style.StyleSpan: void updateMeasureState(android.text.TextPaint)> ->_NONE_
<android.renderscript.Path: android.renderscript.Allocation getVertexAllocation()> ->_NONE_
<android.test.mock.MockResources: java.lang.CharSequence getQuantityText(int,int)> ->_NONE_
<gov.nist.javax.sip.address.TelURLImpl: java.lang.String getPhoneNumber()> ->_NONE_
<java.text.DecimalFormatSymbols: char getDecimalSeparator()> ->_NONE_
<android.net.wifi.WifiConfigStore: void loadConfiguredNetworks()> ->_NONE_
<org.apache.james.mime4j.message.Multipart: void setPreamble(java.lang.String)> ->_NONE_
<org.apache.xml.utils.UnImplNode: void replaceData(int,int,java.lang.String)> ->_NONE_
<android.widget.ExpandableListConnector: void setExpandedGroupMetadataList(java.util.ArrayList)> ->_NONE_
<org.apache.xalan.templates.DecimalFormatProperties: void setNaN(java.lang.String)> ->_NONE_
<java.util.concurrent.atomic.AtomicBoolean: boolean get()> ->_NONE_
<junit.extensions.TestDecorator: junit.framework.Test getTest()> ->_NONE_
<android.os.Binder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> ->_NONE_
<jp.co.omronsoft.openwnn.JAJP.KanaConverter: void setDictionary(jp.co.omronsoft.openwnn.WnnDictionary)> ->_NONE_
<org.jivesoftware.smack.util.Cache: void setMaxCacheSize(int)> ->_NONE_
<gov.nist.javax.sip.header.Contact: float getQValue()> ->_NONE_
<android.app.ApplicationPackageManager: android.content.res.XmlResourceParser getXml(java.lang.String,int,android.content.pm.ApplicationInfo)> ->_NONE_
<android.widget.ListPopupWindow: android.widget.ListView getListView()> ->_NONE_
<org.xml.sax.helpers.AttributesImpl: int getIndex(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xalan.templates.StylesheetComposed: int getImportCountComposed()> ->_NONE_
<android.content.Intent: int getFlags()> ->_NONE_
<gov.nist.javax.sip.header.Reason: java.lang.String getText()> ->_NONE_
<android.os.storage.StorageManager: android.os.storage.StorageVolume getPrimaryVolume(android.os.storage.StorageVolume[])> ->_NONE_
<java.io.EmulatedFieldsForLoading: char get(java.lang.String,char)> ->_NONE_
<org.jivesoftware.smack.XMPPConnection: void dump(java.io.PrintWriter)> ->_NONE_
<org.jivesoftware.smack.RosterEntry: java.lang.String getAbbreviatedUser()> ->_NONE_
<org.apache.xml.utils.StringToIntTable: int get(java.lang.String)> ->_NONE_
<android.appwidget.AppWidgetHostView: android.graphics.Rect getDefaultPaddingForWidget(android.content.Context,android.content.ComponentName,android.graphics.Rect)> ->_NONE_
<android.drm.mobile1.DrmRawContent: int getRawType()> ->_NONE_
<android.text.MeasuredText: float addStyleRun(android.text.TextPaint,int,android.graphics.Paint$FontMetricsInt)> ->_NONE_
<android.support.v4.widget.SimpleCursorAdapter: void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder)> ->_NONE_
<org.apache.xpath.XPathContext: void setSecureProcessing(boolean)> ->_NONE_
<java.nio.HeapByteBuffer: void get(double[],int,int)> ->_NONE_
<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()> ->_NONE_
<android.media.videoeditor.Effect: long getStartTime()> ->_NONE_
<android.drm.DrmUtils: byte[] readBytes(java.io.File)> ->_NONE_
<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.Node getLastChild()> ->_NONE_
<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Entity getParent()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: void setIdAttributeNS(java.lang.String,java.lang.String,boolean)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: java.lang.String getTextContent()> ->_NONE_
<android.app.ApplicationLoaders: android.app.ApplicationLoaders getDefault()> ->_NONE_
<org.apache.xpath.functions.FuncSubstringAfter: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<java.util.logging.XMLFormatter: java.lang.String getTail(java.util.logging.Handler)> ->_NONE_
<android.mtp.MtpPropertyGroup: android.mtp.MtpPropertyList getPropertyList(int,int,int)> ->_NONE_
<android.widget.TextView: void setMinEms(int)> ->_NONE_
<android.app.ActivityThread: void handleDumpActivity(android.app.ActivityThread$DumpComponentInfo)> ->_NONE_
<android.widget.AppSecurityPermissions: void loadResources()> ->_NONE_
<libcore.net.UriCodec: java.lang.String encode(java.lang.String,java.nio.charset.Charset)> ->_NONE_
<android.app.ContextImpl: java.lang.String getPackageCodePath()> ->_NONE_
<android.os.CommonClock: long getTimelineId()> ->_NONE_
<org.apache.http.util.VersionInfo: java.lang.String getModule()> ->_NONE_
<android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int)> ->_NONE_
<android.os.RemoteCallbackList: java.lang.Object getBroadcastCookie(int)> ->_NONE_
<org.apache.harmony.xml.dom.InnerNodeImpl: org.w3c.dom.Node getLastChild()> ->_NONE_
<android.widget.AbsListView: void setCacheColorHint(int)> ->_NONE_
<android.net.TrafficStats: long getTxPackets(java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: boolean getWantClientAuth()> ->_NONE_
<org.apache.commons.io.CopyUtils: void copy(java.lang.String,java.io.Writer)> ->_NONE_
<android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor,java.io.PrintStream)> ->_NONE_
<android.app.WallpaperInfo: java.lang.String getSettingsActivity()> ->_NONE_
<dalvik.system.profiler.BinaryHprofWriter: void write(dalvik.system.profiler.HprofData,java.io.OutputStream)> ->_NONE_
<android.speech.srec.WaveHeader: android.speech.srec.WaveHeader setNumChannels(short)> ->_NONE_
<libcore.icu.NativeBreakIterator: java.text.CharacterIterator getText()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setSelected(java.lang.Object,boolean)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.HandshakeProtocol: org.apache.harmony.xnet.provider.jsse.SSLSessionImpl getSession()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setChecked(java.lang.Object,boolean)> ->_NONE_
<gov.nist.javax.sip.SipStackImpl: javax.sip.SipListener getSipListener()> ->_NONE_
<org.jivesoftware.smack.PacketReader: org.jivesoftware.smack.packet.IQ parseIQ(com.google.common.io.protocol.ProtoBuf)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: void setEnabledProtocols(java.lang.String[])> ->_NONE_
<jp.co.omronsoft.openwnn.OpenWnnDictionaryImpl: int setDictionary(int,int,int)> ->_NONE_
<org.apache.http.ProtocolVersion: int getMinor()> ->_NONE_
<android.content.SyncStorageEngine: void updateOrRemovePeriodicSync(android.accounts.Account,int,java.lang.String,android.os.Bundle,long,boolean)> ->_NONE_
<org.jivesoftware.smack.packet.StreamError: java.lang.String getCode()> ->_NONE_
<javax.xml.transform.stream.StreamResult: void setSystemId(java.lang.String)> ->_NONE_
<org.apache.xalan.transformer.Counter: int getLast()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.MessageProcessor[] getMessageProcessors()> ->_NONE_
<android.filterpacks.imageproc.ToRGBFilter: android.filterfw.core.FrameFormat getConvertedFormat(android.filterfw.core.FrameFormat)> ->_NONE_
<android.app.backup.BackupDataInput: boolean readNextHeader()> ->_NONE_
<android.media.AudioTrack: int setAuxEffectSendLevel(float)> ->_NONE_
<org.apache.xpath.compiler.XPathParser: void setErrorHandler(javax.xml.transform.ErrorListener)> ->_NONE_
<android.telephony.CellInfo: void setRegisterd(boolean)> ->_NONE_
<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<junit.runner.BaseTestRunner: void setLoading(boolean)> ->_NONE_
<android.test.mock.MockContext: void setTheme(int)> ->_NONE_
<android.webkit.WebSettingsClassic: void setAllowUniversalAccessFromFileURLs(boolean)> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: void setRequestProperty(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xalan.processor.StylesheetHandler: org.xml.sax.helpers.NamespaceSupport getNamespaceSupport()> ->_NONE_
<android.widget.Gallery: android.view.ContextMenu$ContextMenuInfo getContextMenuInfo()> ->_NONE_
<android.widget.FastScroller: void setState(int)> ->_NONE_
<org.apache.xalan.transformer.TrAXFilter: void setParent(org.xml.sax.XMLReader)> ->_NONE_
<java.net.URLClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)> ->_NONE_
<android.app.ActivityThread: void handleDestroyBackupAgent(android.app.ActivityThread$CreateBackupAgentData)> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: int getRemoteSequenceNumber()> ->_NONE_
<org.apache.xpath.patterns.NodeTest: void setLocalName(java.lang.String)> ->_NONE_
<org.jivesoftware.smackx.provider.DiscoverItemsProvider: int getTag()> ->_NONE_
<org.ccil.cowan.tagsoup.jaxp.SAX1ParserAdapter: void setDTDHandler(org.xml.sax.DTDHandler)> ->_NONE_
<android.net.sip.SipAudioCall: android.net.sip.SipProfile getLocalProfile()> ->_NONE_
<android.widget.TabWidget: void setCurrentTab(int)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: java.lang.Object getNonXslTopLevel(org.apache.xml.utils.QName)> ->_NONE_
<libcore.icu.NativeBreakIterator: libcore.icu.NativeBreakIterator getWordInstance(java.util.Locale)> ->_NONE_
<android.app.LoaderManagerImpl: android.content.Loader restartLoader(int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks)> ->_NONE_
<org.apache.xalan.templates.ElemExtensionDecl: void setFunctions(org.apache.xml.utils.StringVector)> ->_NONE_
<android.telephony.SignalStrength: int getEvdoEcio()> ->_NONE_
<android.webkit.WebSettings: void setAllowFileAccess(boolean)> ->_NONE_
<org.apache.xpath.functions.FunctionDef1Arg: org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)> ->_NONE_
<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.WaveformData getWaveformData()> ->_NONE_
<android.webkit.WebViewCore: void access$6600(android.webkit.WebViewCore,int,int)> ->_NONE_
<org.apache.xml.serializer.TreeWalker: org.xml.sax.ContentHandler getContentHandler()> ->_NONE_
<android.content.SyncStorageEngine: long getDelayUntilTime(android.accounts.Account,int,java.lang.String)> ->_NONE_
<android.net.wifi.RssiPacketCountInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<gov.nist.javax.sip.message.MultipartMimeContentImpl: int getContentCount()> ->_NONE_
<org.apache.xpath.XPathContext: org.xml.sax.XMLReader getPrimaryReader()> ->_NONE_
<android.widget.RemoteViews: void setImageViewUri(int,android.net.Uri)> ->_NONE_
<android.media.AudioRecord: void setRecordPositionUpdateListener(android.media.AudioRecord$OnRecordPositionUpdateListener,android.os.Handler)> ->_NONE_
<android.app.ActivityManagerProxy: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: boolean getUseClientMode()> ->_NONE_
<libcore.net.http.RequestHeaders: void setUserAgent(java.lang.String)> ->_NONE_
<android.graphics.drawable.ColorDrawable: int getColor()> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: java.lang.String getOrganizationUnit()> ->_NONE_
<javax.xml.validation.Validator: boolean getFeature(java.lang.String)> ->_NONE_
<android.content.Intent: byte[] getByteArrayExtra(java.lang.String)> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertImpl: java.security.Principal getIssuerDN()> ->_NONE_
<org.apache.james.mime4j.field.datetime.DateTime: int getYear()> ->_NONE_
<android.inputmethodservice.Keyboard: void setVerticalGap(int)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)> ->_NONE_
<java.net.Authenticator: java.lang.String getRequestingHost()> ->_NONE_
<org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.lang.String[] getSupportedCipherSuites()> ->_NONE_
<java.net.HttpRetryException: java.lang.String getReason()> ->_NONE_
<java.nio.FloatArrayBuffer: java.nio.FloatBuffer get(float[],int,int)> ->_NONE_
<java.nio.FileChannelImpl: java.io.FileDescriptor getFD()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getParent(int)> ->_NONE_
<android.view.View: android.view.IWindowSession getWindowSession()> ->_NONE_
<android.net.NetworkPolicyManager: void dumpPolicy(java.io.PrintWriter,int)> ->_NONE_
<org.apache.http.impl.conn.DefaultClientConnection: void setAttribute(java.lang.String,java.lang.Object)> ->_NONE_
<org.jivesoftware.smack.packet.BatchPresence: void setType(org.jivesoftware.smack.packet.BatchPresence$Type)> ->_NONE_
<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)> ->_NONE_
<android.telephony.gsm.SmsMessage: int getStatusOnIcc()> ->_NONE_
<org.apache.harmony.security.asn1.BerOutputStream: void getSetLength(org.apache.harmony.security.asn1.ASN1Set)> ->_NONE_
<android.widget.TabWidget: void setEnabled(boolean)> ->_NONE_
<libcore.net.url.FtpURLConnection: void write(java.lang.String)> ->_NONE_
<android.preference.PreferenceFragment: android.preference.PreferenceScreen getPreferenceScreen()> ->_NONE_
<org.apache.xalan.templates.ElemWithParam: void setParentElem(org.apache.xalan.templates.ElemTemplateElement)> ->_NONE_
<java.util.jar.JarInputStream: java.util.jar.Manifest getManifest()> ->_NONE_
<android.widget.ListPopupWindow: android.view.View getAnchorView()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.CipherSuite: int getMACLength()> ->_NONE_
<android.content.ContentResolver: android.content.ContentResolver$OpenResourceIdResult getResourceId(android.net.Uri)> ->_NONE_
<android.widget.ActivityChooserModel: int getHistoryMaxSize()> ->_NONE_
<java.net.DatagramSocket: java.net.InetAddress getLocalAddress()> ->_NONE_
<android.view.ViewRootImpl: void die(boolean)> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpRequestInterceptor getRequestInterceptor(int)> ->_NONE_
<android.filterfw.geometry.Rectangle: float getWidth()> ->_NONE_
<org.apache.xml.utils.UnImplNode: java.lang.String getTagName()> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getLocalName()> ->_NONE_
<android.content.SyncStorageEngine: void setIsSyncable(android.accounts.Account,int,java.lang.String,int)> ->_NONE_
<org.apache.xalan.processor.XSLTElementProcessor: void setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement)> ->_NONE_
<android.database.BulkCursorProxy: void onMove(int)> ->_NONE_
<org.xml.sax.helpers.AttributesImpl: void setType(int,java.lang.String)> ->_NONE_
<android.drm.DrmRights: void instantiate(java.io.File,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: void sendAck(javax.sip.message.Request,boolean)> ->_NONE_
<android.view.accessibility.AccessibilityEvent: java.lang.CharSequence getPackageName()> ->_NONE_
<android.telephony.gsm.SmsMessage: int getStatus()> ->_NONE_
<android.net.Proxy: void validate(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.app.admin.DevicePolicyManager: long getMaximumTimeToLock(android.content.ComponentName)> ->_NONE_
<android.net.wifi.NetworkUpdateResult: void setProxyChanged(boolean)> ->_NONE_
<org.apache.harmony.xml.ExpatParser: void unparsedEntityDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.view.PointerIcon: void loadResource(android.content.res.Resources,int)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: void setStylesheetRoot(org.apache.xalan.templates.StylesheetRoot)> ->_NONE_
<android.test.InstrumentationTestCase: void runMethod(java.lang.reflect.Method,int)> ->_NONE_
<android.view.View: void setVerticalFadingEdgeEnabled(boolean)> ->_NONE_
<android.net.LocalSocket: int getSendBufferSize()> ->_NONE_
<android.support.v4.view.ViewCompat: void setOverScrollMode(android.view.View,int)> ->_NONE_
<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$ConstantState getConstantState()> ->_NONE_
<org.apache.james.mime4j.BodyDescriptor: java.lang.String getBoundary()> ->_NONE_
<javax.net.ssl.SSLEngineResult: javax.net.ssl.SSLEngineResult$Status getStatus()> ->_NONE_
<javax.net.ssl.DefaultSSLSocketFactory: java.lang.String[] getDefaultCipherSuites()> ->_NONE_
<android.opengl.GLLogWrapper: java.lang.String getErrorString(int)> ->_NONE_
<org.apache.commons.io.output.TeeOutputStream: void write(byte[],int,int)> ->_NONE_
<android.view.inputmethod.EditorInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<java.net.URI: java.lang.String getAuthority()> ->_NONE_
<android.app.WallpaperManager: android.graphics.drawable.Drawable getDrawable()> ->_NONE_
<android.location.LocationManager: void requestLocationUpdates(long,float,android.location.Criteria,android.location.LocationListener,android.os.Looper)> ->_NONE_
<android.webkit.WebView: void setHttpAuthUsernamePassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.net.NetworkInfo: void setSubtype(int,java.lang.String)> ->_NONE_
<android.view.View: int getLayerType()> ->_NONE_
<java.net.HttpURLConnection: boolean getFollowRedirects()> ->_NONE_
<gov.nist.javax.sip.header.CallInfo: java.lang.StringBuffer encodeBody(java.lang.StringBuffer)> ->_NONE_
<java.util.EnumMap: java.lang.Object get(java.lang.Object)> ->_NONE_
<org.apache.xml.dtm.DTMManager: int getDTMIdentityMask()> ->_NONE_
<org.kxml2.io.KXmlParser: int getLineNumber()> ->_NONE_
<android.view.inputmethod.InputBinding: int getPid()> ->_NONE_
<java.security.spec.RSAPublicKeySpec: java.math.BigInteger getModulus()> ->_NONE_
<gov.nist.javax.sip.DialogFilter: java.lang.String getProcessingInfo()> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)> ->_NONE_
<org.apache.harmony.security.fortress.Services: java.util.List getProvidersList()> ->_NONE_
<org.apache.harmony.xml.dom.DocumentTypeImpl: java.lang.String getNodeName()> ->_NONE_
<android.view.ActionProvider: void setSubUiVisibilityListener(android.view.ActionProvider$SubUiVisibilityListener)> ->_NONE_
<android.widget.AutoCompleteTextView: int getListSelection()> ->_NONE_
<android.content.ContentQueryMap: void setKeepUpdated(boolean)> ->_NONE_
<android.telephony.CellInfoCdma: void setCellSignalStrength(android.telephony.CellSignalStrengthCdma)> ->_NONE_
<android.support.v4.app.BackStackRecord: int getBreadCrumbShortTitleRes()> ->_NONE_
<android.graphics.Bitmap: void setDensity(int)> ->_NONE_
<android.os.storage.StorageManager: java.lang.String getVolumeState(java.lang.String)> ->_NONE_
<android.media.AudioService: int getLastAudibleMasterVolume()> ->_NONE_
<org.apache.xalan.templates.ElemIf: void execute(org.apache.xalan.transformer.TransformerImpl)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getNextAttribute(int)> ->_NONE_
<org.apache.xml.dtm.ref.ExpandedNameTable: int getExpandedTypeID(java.lang.String,java.lang.String,int)> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: void load(org.jivesoftware.smack.XMPPConnection)> ->_NONE_
<android.widget.SimpleAdapter: void setDropDownViewResource(int)> ->_NONE_
<android.app.ApplicationPackageManager: void setApplicationEnabledSetting(java.lang.String,int,int)> ->_NONE_
<android.net.nsd.NsdServiceInfo: java.lang.String getServiceType()> ->_NONE_
<jp.co.omronsoft.openwnn.JAJP.OpenWnnClauseConverterJAJP: java.util.ArrayList getIndependentWords(java.lang.String,boolean)> ->_NONE_
<org.apache.harmony.security.fortress.Services: int getCacheVersion()> ->_NONE_
<org.apache.http.protocol.HttpService: void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext)> ->_NONE_
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader directGetContextClassLoader()> ->_NONE_
<android.webkit.WebSettings: void setAppCachePath(java.lang.String)> ->_NONE_
<java.security.cert.PKIXParameters: void setDate(java.util.Date)> ->_NONE_
<android.media.videoeditor.AudioTrack: long getDuration()> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getRealm()> ->_NONE_
<android.net.http.AndroidHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)> ->_NONE_
<android.widget.SearchView: void setOnQueryTextListener(android.widget.SearchView$OnQueryTextListener)> ->_NONE_
<org.apache.harmony.security.x509.CertificatePolicies: void dumpValue(java.lang.StringBuilder,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.Challenge: gov.nist.core.NameValueList getAuthParams()> ->_NONE_
<android.test.ActivityInstrumentationTestCase2: android.app.Activity getActivity()> ->_NONE_
<android.content.pm.ContainerEncryptionParams: java.lang.String getEncryptionAlgorithm()> ->_NONE_
<android.content.ClipDescription: java.lang.CharSequence getLabel()> ->_NONE_
<org.jivesoftware.smack.XMPPConnection: void setAuthenticated(boolean)> ->_NONE_
<android.widget.AutoCompleteTextView: int getDropDownAnimationStyle()> ->_NONE_
<org.apache.http.impl.AbstractHttpServerConnection: org.apache.http.HttpConnectionMetrics getMetrics()> ->_NONE_
<android.net.wifi.p2p.WifiP2pManager: void setDnsSdResponseListeners(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$DnsSdServiceResponseListener,android.net.wifi.p2p.WifiP2pManager$DnsSdTxtRecordListener)> ->_NONE_
<android.preference.Preference: java.lang.CharSequence getTitle()> ->_NONE_
<org.apache.http.impl.cookie.BasicClientCookie2: void setPorts(int[])> ->_NONE_
<android.net.BaseNetworkStateTracker: boolean setRadio(boolean)> ->_NONE_
<org.apache.xml.utils.SecuritySupport12: java.io.FileInputStream getFileInputStream(java.io.File)> ->_NONE_
<org.apache.commons.io.output.ByteArrayOutputStream: void write(byte[],int,int)> ->_NONE_
<android.media.MediaRecorder: void setAuxiliaryOutputFile(java.lang.String)> ->_NONE_
<android.net.sip.SipSession: java.lang.String getCallId()> ->_NONE_
<android.app.admin.DeviceAdminInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.inputmethodservice.InputMethodService: android.app.Dialog getWindow()> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: void setIndent(boolean)> ->_NONE_
<android.net.wifi.WifiStateMachine: void log(java.lang.String)> ->_NONE_
<android.webkit.WebViewClassic: boolean onSavePassword(java.lang.String,java.lang.String,java.lang.String,android.os.Message)> ->_NONE_
<org.apache.http.impl.SocketHttpServerConnection: void close()> ->_NONE_
<android.preference.TwoStatePreference: void setSummaryOn(java.lang.CharSequence)> ->_NONE_
<org.apache.commons.io.FileCleaner: org.apache.commons.io.FileCleaningTracker getInstance()> ->_NONE_
<java.util.concurrent.atomic.AtomicInteger: int getAndAdd(int)> ->_NONE_
<java.util.concurrent.ConcurrentSkipListMap: void writeObject(java.io.ObjectOutputStream)> ->_NONE_
<android.os.UserManager: int getUserSerialNumber(int)> ->_NONE_
<java.util.LinkedList: java.lang.Object getFirst()> ->_NONE_
<javax.obex.PasswordAuthentication: byte[] getPassword()> ->_NONE_
<org.apache.xml.utils.Context2: java.util.Enumeration getDeclaredPrefixes()> ->_NONE_
<org.apache.james.mime4j.message.Message: org.apache.james.mime4j.field.UnstructuredField getSubject()> ->_NONE_
<android.os.StrictMode: void setThreadPolicyMask(int)> ->_NONE_
<java.nio.DirectByteBuffer: void get(long[],int,int)> ->_NONE_
<android.filterfw.core.FilterGraph: void setDiscardUnconnectedOutputs(boolean)> ->_NONE_
<android.widget.ArrayAdapter: void setDropDownViewResource(int)> ->_NONE_
<android.app.DownloadManager: java.lang.String[] getWhereArgsForIds(long[])> ->_NONE_
<android.widget.AdapterViewAnimator: android.widget.Adapter getAdapter()> ->_NONE_
<org.jivesoftware.smack.packet.BatchPresence: org.jivesoftware.smack.packet.BatchPresence$Type getType()> ->_NONE_
<jp.co.omronsoft.openwnn.Keyboard: int getMinWidth()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getBaseURI()> ->_NONE_
<android.database.sqlite.SQLiteSession: void acquireConnection(java.lang.String,int,android.os.CancellationSignal)> ->_NONE_
<android.webkit.UrlInterceptRegistry: boolean registerHandler(android.webkit.UrlInterceptHandler)> ->_NONE_
<android.media.videoeditor.Overlay: long getStartTime()> ->_NONE_
<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.Dialog getDialog()> ->_NONE_
<org.apache.xml.dtm.ref.DTMAxisIteratorBase: void setRestartable(boolean)> ->_NONE_
<gov.nist.javax.sip.header.ims.PVisitedNetworkID: void setVisitedNetworkID(java.lang.String)> ->_NONE_
<android.database.CursorWindow: byte[] getBlob(int,int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.PinListEntry: java.lang.String getFingerprint(java.security.cert.X509Certificate)> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: java.lang.Object getContent()> ->_NONE_
<android.drm.DrmUtils: void writeToFile(java.lang.String,byte[])> ->_NONE_
<android.widget.RatingBar: float getRating()> ->_NONE_
<org.apache.james.mime4j.field.DelegatingFieldParser: org.apache.james.mime4j.field.FieldParser getParser(java.lang.String)> ->_NONE_
<java.net.ProxySelectorImpl: void connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException)> ->_NONE_
<org.apache.http.conn.params.ConnManagerParamBean: void setTimeout(long)> ->_NONE_
<gov.nist.javax.sip.address.TelephoneNumber: java.util.Iterator getParameterNames()> ->_NONE_
<java.nio.MappedByteBufferAdapter: java.nio.ByteBuffer get(byte[],int,int)> ->_NONE_
<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.NamespaceAlias getNamespaceAliasComposed(java.lang.String)> ->_NONE_
<java.util.logging.LogRecord: void setResourceBundle(java.util.ResourceBundle)> ->_NONE_
<org.apache.commons.io.input.ProxyInputStream: int read(byte[],int,int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: void setSoLinger(boolean,int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams: java.math.BigInteger getP()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams: java.math.BigInteger getQ()> ->_NONE_
<android.widget.ImageView: void setImageLevel(int)> ->_NONE_
<java.security.MessageDigest: void update(byte[],int,int)> ->_NONE_
<android.view.ViewGroup: int getChildDrawingOrder(int,int)> ->_NONE_
<android.view.textservice.SpellCheckerInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)> ->_NONE_
<org.apache.harmony.security.x509.IssuingDistributionPoint: void setOnlyContainsCACerts(boolean)> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: boolean getUseCaches()> ->_NONE_
<org.apache.http.impl.io.HttpTransportMetricsImpl: long getBytesTransferred()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams: java.math.BigInteger getX()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams: java.math.BigInteger getY()> ->_NONE_
<java.net.Socket: void setKeepAlive(boolean)> ->_NONE_
<android.filterfw.core.FilterFunction: void setInputFrame(java.lang.String,android.filterfw.core.Frame)> ->_NONE_
<net.oauth.client.OAuthClient: net.oauth.http.HttpClient getHttpClient()> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: java.lang.String getPrefix()> ->_NONE_
<android.media.MiniThumbFile: void saveMiniThumbToFile(byte[],long,long)> ->_NONE_
<android.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ->_NONE_
<java.util.TimeZone: java.lang.String getDisplayName(java.util.Locale)> ->_NONE_
<android.renderscript.Program: int getConstantCount()> ->_NONE_
<java.text.DecimalFormat: void setMaximumIntegerDigits(int)> ->_NONE_
<android.hardware.display.DisplayManager: android.hardware.display.WifiDisplayStatus getWifiDisplayStatus()> ->_NONE_
<java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams: java.math.BigInteger getG()> ->_NONE_
<libcore.net.http.RequestHeaders: void setAcceptEncoding(java.lang.String)> ->_NONE_
<org.apache.xml.utils.Context2: java.lang.String getURI(java.lang.String)> ->_NONE_
<android.view.ViewGroup: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setFromIndex(java.lang.Object,int)> ->_NONE_
<android.webkit.WebView: java.lang.String getUrl()> ->_NONE_
<java.net.URL: java.lang.String getAuthority()> ->_NONE_
<android.widget.AutoCompleteTextView: android.widget.ListAdapter getAdapter()> ->_NONE_
<org.apache.xml.utils.res.StringArrayWrapper: java.lang.String getString(int)> ->_NONE_
<gov.nist.javax.sip.header.ReplyTo: java.lang.String getDisplayName()> ->_NONE_
<org.apache.harmony.xml.ExpatAttributes: java.lang.String getQName(int)> ->_NONE_
<org.apache.harmony.luni.lang.reflect.ImplForWildcard: java.lang.reflect.Type[] getUpperBounds()> ->_NONE_
<java.util.logging.LogRecord: java.lang.String getLoggerName()> ->_NONE_
<android.os.SystemProperties: long getLong(java.lang.String,long)> ->_NONE_
<android.nfc.tech.Ndef: android.nfc.NdefMessage getNdefMessage()> ->_NONE_
<android.text.method.QwertyKeyListener: void markAsReplaced(android.text.Spannable,int,int,java.lang.String)> ->_NONE_
<java.net.MulticastSocket: byte getTTL()> ->_NONE_
<android.widget.AbsListView: void setFilterText(java.lang.String)> ->_NONE_
<java.text.DateFormat: void setTimeZone(java.util.TimeZone)> ->_NONE_
<org.apache.xml.serializer.dom3.DOMErrorImpl: java.lang.Object getRelatedData()> ->_NONE_
<org.apache.http.impl.conn.AbstractClientConnAdapter: int getLocalPort()> ->_NONE_
<org.apache.xml.serializer.dom3.LSSerializerImpl: java.lang.Object getParameter(java.lang.String)> ->_NONE_
<java.nio.HeapByteBuffer: void get(char[],int,int)> ->_NONE_
<android.filterfw.core.Filter: android.filterfw.core.InputPort getInputPort(java.lang.String)> ->_NONE_
<android.accounts.AccountManagerService: void updateCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)> ->_NONE_
<android.support.v4.app.TaskStackBuilder: android.content.Intent[] getIntents()> ->_NONE_
<org.apache.http.protocol.HttpService: void setParams(org.apache.http.params.HttpParams)> ->_NONE_
<android.webkit.WebSettings: void setSupportMultipleWindows(boolean)> ->_NONE_
<android.content.ContentProviderClient: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ->_NONE_
<java.security.CodeSource: java.security.CodeSigner[] getCodeSigners()> ->_NONE_
<android.net.http.Connection: org.apache.http.protocol.HttpContext getHttpContext()> ->_NONE_
<android.nfc.NdefRecord: byte[] getPayload()> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: void setRoutePlanner(org.apache.http.conn.routing.HttpRoutePlanner)> ->_NONE_
<android.media.AudioSystem: java.lang.String getDeviceName(int)> ->_NONE_
<android.widget.ActivityChooserView: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)> ->_NONE_
<org.apache.http.message.HeaderGroup: org.apache.http.Header[] getHeaders(java.lang.String)> ->_NONE_
<org.apache.harmony.xml.dom.DOMConfigurationImpl: void setParameter(java.lang.String,java.lang.Object)> ->_NONE_
<android.app.Activity: android.app.Application getApplication()> ->_NONE_
<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)> ->_NONE_
<org.apache.xpath.patterns.StepPattern: org.apache.xpath.Expression getPredicate(int)> ->_NONE_
<java.security.MessageDigest: java.security.Provider getProvider()> ->_NONE_
<android.media.AudioService: int getRemoteStreamMaxVolume()> ->_NONE_
<android.content.ContextWrapper: android.graphics.drawable.Drawable getWallpaper()> ->_NONE_
<org.apache.xpath.XPathContext: void setCurrentNodeStack(org.apache.xml.utils.IntStack)> ->_NONE_
<gov.nist.javax.sip.header.ims.PChargingFunctionAddresses: java.lang.String encodeBody()> ->_NONE_
<java.text.DateFormat: java.text.NumberFormat getNumberFormat()> ->_NONE_
<gov.nist.javax.sip.stack.TCPMessageChannel: void sendMessage(byte[],boolean)> ->_NONE_
<android.app.DatePickerDialog: android.widget.DatePicker getDatePicker()> ->_NONE_
<android.preference.PreferenceManager: android.preference.PreferenceFragment getFragment()> ->_NONE_
<java.nio.FloatToByteBufferAdapter: float get()> ->_NONE_
<android.hardware.input.InputManager: int getPointerSpeed(android.content.Context)> ->_NONE_
<libcore.net.http.RequestHeaders: java.lang.String getContentType()> ->_NONE_
<android.app.ApplicationThreadProxy: void scheduleCrash(java.lang.String)> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Oid: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> ->_NONE_
<javax.net.ssl.SSLContext: javax.net.ssl.SSLSessionContext getClientSessionContext()> ->_NONE_
<android.animation.ValueAnimator: void setRepeatMode(int)> ->_NONE_
<org.apache.harmony.security.x509.CertificateIssuer: javax.security.auth.x500.X500Principal getIssuer()> ->_NONE_
<android.accounts.AccountManagerService: void setUserdataInternal(android.accounts.AccountManagerService$UserAccounts,android.accounts.Account,java.lang.String,java.lang.String)> ->_NONE_
<android.renderscript.ProgramStore: android.renderscript.ProgramStore$BlendSrcFunc getBlendSrcFunc()> ->_NONE_
<android.webkit.CallbackProxy: void onReceivedIcon(android.graphics.Bitmap)> ->_NONE_
<android.media.videoeditor.TransitionAlpha: int getRGBFileHeight()> ->_NONE_
<libcore.net.http.HttpURLConnectionImpl: java.lang.String getResponseMessage()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: java.lang.String[] getSupportedProtocols()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: org.apache.xml.dtm.ref.DTMStringPool getLocalNameTable()> ->_NONE_
<org.apache.harmony.security.provider.crypto.DSAPrivateKeyImpl: java.math.BigInteger getX()> ->_NONE_
<android.os.UserHandle: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.webkit.CookieManagerClassic: android.webkit.CookieManagerClassic getInstance()> ->_NONE_
<org.apache.commons.io.filefilter.NameFileFilter: boolean accept(java.io.File,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.AcceptLanguage: java.lang.String getLanguageRange()> ->_NONE_
<org.apache.james.mime4j.BodyDescriptor: java.lang.String getTransferEncoding()> ->_NONE_
<android.drm.mobile1.DrmRawContent: int getContentLength(android.drm.mobile1.DrmRights)> ->_NONE_
<android.media.videoeditor.VideoEditorImpl: int getAspectRatio()> ->_NONE_
<java.lang.System: java.lang.String getenv(java.lang.String)> ->_NONE_
<java.security.spec.EllipticCurve: java.security.spec.ECField getField()> ->_NONE_
<android.os.Message: void setData(android.os.Bundle)> ->_NONE_
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()> ->_NONE_
<android.graphics.drawable.Drawable: int[] getState()> ->_NONE_
<android.app.ActivityManagerProxy: boolean profileControl(java.lang.String,int,boolean,java.lang.String,android.os.ParcelFileDescriptor,int)> ->_NONE_
<android.widget.Scroller: double getSplineFlingDistance(float)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.ThreadAuditor getThreadAuditor()> ->_NONE_
<android.view.accessibility.AccessibilityRecord: int getScrollY()> ->_NONE_
<android.widget.AdapterViewAnimator: android.widget.FrameLayout getFrameForChild()> ->_NONE_
<android.view.accessibility.AccessibilityRecord: int getScrollX()> ->_NONE_
<java.security.KeyStore: java.security.Provider getProvider()> ->_NONE_
<java.net.URL: java.lang.String getUserInfo()> ->_NONE_
<android.telephony.SmsCbMessage: android.telephony.SmsCbCmasInfo getCmasWarningInfo()> ->_NONE_
<libcore.io.ForwardingOs: int getegid()> ->_NONE_
<android.animation.PropertyValuesHolder: void setKeyframes(android.animation.Keyframe[])> ->_NONE_
<android.net.wifi.WifiManager: boolean setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)> ->_NONE_
<android.widget.VideoView: void setVideoURI(android.net.Uri,java.util.Map)> ->_NONE_
<android.drm.DrmSupportInfo: java.lang.String getDescription()> ->_NONE_
<org.apache.http.impl.conn.SingleClientConnManager: org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object)> ->_NONE_
<java.io.RandomAccessFile: long readLong()> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfoCache: android.view.accessibility.AccessibilityNodeInfo get(long)> ->_NONE_
<java.net.URI: java.lang.String getUserInfo()> ->_NONE_
<gov.nist.javax.sip.header.Credentials: void setCredentials(gov.nist.core.NameValueList)> ->_NONE_
<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent$OnFinished,android.os.Handler)> ->_NONE_
<android.drm.DrmEvent: java.lang.String getMessage()> ->_NONE_
<android.os.Message: android.os.Handler getTarget()> ->_NONE_
<libcore.icu.NativeDecimalFormat: void setDecimalFormatSymbols(java.text.DecimalFormatSymbols)> ->_NONE_
<org.apache.harmony.security.pkcs7.SignerInfo: java.math.BigInteger getSerialNumber()> ->_NONE_
<android.view.View: void setPivotY(float)> ->_NONE_
<gov.nist.javax.sip.stack.DefaultRouter: javax.sip.address.Hop getNextHop(javax.sip.message.Request)> ->_NONE_
<android.app.FragmentManagerState: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.view.View: void setPivotX(float)> ->_NONE_
<android.view.inputmethod.CompletionInfo: java.lang.CharSequence getLabel()> ->_NONE_
<android.server.search.Searchables: java.util.ArrayList getSearchablesInGlobalSearchList()> ->_NONE_
<android.webkit.WebSettingsClassic: boolean getDomStorageEnabled()> ->_NONE_
<org.apache.xml.utils.SuballocatedIntVector: void setElementAt(int,int)> ->_NONE_
<android.sax.RootElement: org.xml.sax.ContentHandler getContentHandler()> ->_NONE_
<android.nfc.tech.NfcV: byte getDsfId()> ->_NONE_
<android.telephony.SmsManager: void sendDataMessage(java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent)> ->_NONE_
<java.util.BitSet: void set(int)> ->_NONE_
<gov.nist.javax.sip.header.AllowList: java.util.ListIterator getMethods()> ->_NONE_
<android.view.animation.Animation: void setStartOffset(long)> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertImpl: byte[] getEncoded()> ->_NONE_
<org.kxml2.io.KXmlSerializer: void setOutput(java.io.Writer)> ->_NONE_
<libcore.io.IoBridge: java.lang.Object getSocketOptionErrno(java.io.FileDescriptor,int)> ->_NONE_
<java.net.CookieStoreImpl: java.util.List getCookies()> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CallIdHeader getCallIdHeader()> ->_NONE_
<android.preference.MultiSelectListPreference: java.lang.CharSequence[] getEntries()> ->_NONE_
<android.widget.ZoomButtonsController: android.view.ViewGroup getContainer()> ->_NONE_
<android.renderscript.ScriptIntrinsicConvolve5x5: android.renderscript.Script$FieldID getFieldID_Input()> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: int getNumberOfNodes()> ->_NONE_
<android.media.MediaPlayer: void setOnInfoListener(android.media.MediaPlayer$OnInfoListener)> ->_NONE_
<android.test.AndroidTestRunner: junit.framework.TestResult getTestResult()> ->_NONE_
<org.apache.http.impl.conn.DefaultClientConnection: org.apache.http.HttpHost getTargetHost()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: boolean getWantClientAuth()> ->_NONE_
<org.apache.xpath.XPath: org.apache.xpath.Expression getExpression()> ->_NONE_
<android.database.sqlite.SQLiteDatabaseConfiguration: void updateParametersFrom(android.database.sqlite.SQLiteDatabaseConfiguration)> ->_NONE_
<android.net.wifi.WifiManager: boolean setWifiApConfiguration(android.net.wifi.WifiConfiguration)> ->_NONE_
<android.app.admin.DevicePolicyManager: int getPasswordQuality(android.content.ComponentName)> ->_NONE_
<android.webkit.WebSettingsClassic: void setEnableSmoothTransition(boolean)> ->_NONE_
<android.filterfw.core.Frame: void setReusable(boolean)> ->_NONE_
<android.bluetooth.BluetoothTetheringDataTracker: android.net.LinkCapabilities getLinkCapabilities()> ->_NONE_
<android.graphics.Interpolator: void setKeyFrame(int,int,float[])> ->_NONE_
<android.app.LoadedApk: java.io.File getDataDirFile()> ->_NONE_
<libcore.io.ForwardingOs: libcore.io.StructPasswd getpwuid(int)> ->_NONE_
<android.webkit.CallbackProxy: android.net.Uri openFileChooser(java.lang.String,java.lang.String)> ->_NONE_
<org.kxml2.io.KXmlSerializer: void setProperty(java.lang.String,java.lang.Object)> ->_NONE_
<android.net.wifi.WifiInfo: android.net.wifi.WifiSsid getWifiSsid()> ->_NONE_
<android.service.dreams.DreamService: android.view.WindowManager getWindowManager()> ->_NONE_
<android.preference.DialogPreference: void setDialogTitle(java.lang.CharSequence)> ->_NONE_
<java.lang.SecurityManager: java.lang.ThreadGroup getThreadGroup()> ->_NONE_
<org.apache.commons.codec.binary.Base64: byte[] encodeBase64(byte[])> ->_NONE_
<org.apache.xalan.templates.ElemCallTemplate: int getXSLToken()> ->_NONE_
<org.apache.http.message.BasicHeaderValueParser: org.apache.http.HeaderElement[] parseElements(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)> ->_NONE_
<org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate)> ->_NONE_
<org.apache.http.impl.client.DefaultProxyAuthenticationHandler: java.util.List getAuthPreferences(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)> ->_NONE_
<android.os.UserHandle: int getCallingUserId()> ->_NONE_
<android.nfc.tech.IsoDep: byte[] getHistoricalBytes()> ->_NONE_
<org.jivesoftware.smack.packet.RosterPacket: java.lang.Boolean getNotModified()> ->_NONE_
<android.app.Fragment: java.lang.String getString(int)> ->_NONE_
<gov.nist.javax.sip.header.Contact: java.lang.String getPubGruuParam()> ->_NONE_
<android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs: java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo)> ->_NONE_
<android.net.rtp.RtpStream: int getMode()> ->_NONE_
<org.apache.commons.io.FileUtils: java.io.File getUserDirectory()> ->_NONE_
<libcore.io.IoBridge: int sendto(java.io.FileDescriptor,byte[],int,int,int,java.net.InetAddress,int)> ->_NONE_
<org.apache.xpath.patterns.UnionPattern: void setPatterns(org.apache.xpath.patterns.StepPattern[])> ->_NONE_
<android.telephony.SmsCbEtwsInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.media.videoeditor.MediaItem: void setRegenerateClip(boolean)> ->_NONE_
<android.app.LoadedApk: java.lang.String getPackageName()> ->_NONE_
<android.database.AbstractWindowedCursor: java.lang.String getString(int)> ->_NONE_
<gov.nist.javax.sip.address.SipUri: java.lang.String getUserParam()> ->_NONE_
<gov.nist.core.ThreadAuditor: long getPingIntervalInMillisecs()> ->_NONE_
<org.apache.harmony.xml.dom.TextImpl: short getNodeType()> ->_NONE_
<android.text.style.BulletSpan: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.http.impl.SocketHttpServerConnection: int getSocketTimeout()> ->_NONE_
<android.media.AudioRecord: int getMinBufferSize(int,int,int)> ->_NONE_
<android.content.ContentService: void setMasterSyncAutomatically(boolean)> ->_NONE_
<java.util.concurrent.Semaphore: java.util.Collection getQueuedThreads()> ->_NONE_
<org.jivesoftware.smackx.packet.MUCUser: java.lang.String getNamespace()> ->_NONE_
<android.widget.HeaderViewListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ->_NONE_
<gov.nist.core.LogWriter: void setStackProperties(java.util.Properties)> ->_NONE_
<java.io.EmulatedFields: java.lang.Object get(java.lang.String,java.lang.Object)> ->_NONE_
<android.view.ViewGroup: android.graphics.Paint getDebugPaint()> ->_NONE_
<org.apache.xpath.compiler.OpMap: java.lang.String getPatternString()> ->_NONE_
<android.view.accessibility.AccessibilityRecord: int getMaxScrollY()> ->_NONE_
<java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)> ->_NONE_
<android.view.accessibility.AccessibilityRecord: int getMaxScrollX()> ->_NONE_
<android.bluetooth.BluetoothA2dp: boolean setPriority(android.bluetooth.BluetoothDevice,int)> ->_NONE_
<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: int getReceiveBufferSize()> ->_NONE_
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void setDefaultMaxPerRoute(int)> ->_NONE_
<libcore.util.ZoneInfo: int getOffset(int,int,int,int,int,int)> ->_NONE_
<org.apache.xml.dtm.DTMManager: void setIncremental(boolean)> ->_NONE_
<android.app.ActivityManagerProxy: boolean finishActivity(android.os.IBinder,int,android.content.Intent)> ->_NONE_
<java.security.Signature: java.security.Signature getInstance(java.lang.String)> ->_NONE_
<android.widget.RatingBar: android.graphics.drawable.shapes.Shape getDrawableShape()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: boolean getUseClientMode()> ->_NONE_
<org.apache.xml.serializer.ToStream: void setWriterInternal(java.io.Writer,boolean)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: int getApplicationBufferSize()> ->_NONE_
<android.widget.ToggleButton: void setChecked(boolean)> ->_NONE_
<android.view.ViewGroup: void setAlwaysDrawnWithCacheEnabled(boolean)> ->_NONE_
<android.telephony.CellIdentityLte: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<gov.nist.javax.sip.header.CallIdentifier: java.lang.StringBuffer encode(java.lang.StringBuffer)> ->_NONE_
<android.drm.DrmManagerClient: android.content.ContentValues getMetadata(java.lang.String)> ->_NONE_
<org.apache.commons.io.output.DeferredFileOutputStream: byte[] getData()> ->_NONE_
<android.hardware.SensorManager: java.util.List getSensorList(int)> ->_NONE_
<android.renderscript.ScriptIntrinsicYuvToRGB: android.renderscript.Script$FieldID getFieldID_Input()> ->_NONE_
<org.jivesoftware.smack.packet.Presence: java.lang.String getStatus()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getFirstAttribute(int)> ->_NONE_
<android.widget.TextView: void setText(int,android.widget.TextView$BufferType)> ->_NONE_
<javax.crypto.spec.PBEParameterSpec: byte[] getSalt()> ->_NONE_
<android.inputmethodservice.Keyboard: int getVerticalGap()> ->_NONE_
<android.hardware.usb.UsbDevice: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setItemCount(java.lang.Object,int)> ->_NONE_
<android.widget.TextView: void setText(char[],int,int)> ->_NONE_
<org.apache.harmony.xml.dom.ElementImpl: void setAttribute(java.lang.String,java.lang.String)> ->_NONE_
<android.media.AudioService: int getMasterMaxVolume()> ->_NONE_
<android.widget.TextView: void setTextKeepState(java.lang.CharSequence)> ->_NONE_
<android.widget.ScrollBarDrawable: void setParameters(int,int,int,boolean)> ->_NONE_
<android.widget.AbsListView: long[] getCheckedItemIds()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: java.math.BigInteger getModulus()> ->_NONE_
<org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream: int getEndColumn()> ->_NONE_
<org.apache.james.mime4j.message.Entity: void setParent(org.apache.james.mime4j.message.Entity)> ->_NONE_
<android.graphics.drawable.TransitionDrawable: void setCrossFadeEnabled(boolean)> ->_NONE_
<android.content.ContextWrapper: android.content.Context getBaseContext()> ->_NONE_
<android.support.v13.app.FragmentCompatICSMR1: void setUserVisibleHint(android.app.Fragment,boolean)> ->_NONE_
<android.filterpacks.performance.Throughput: float getFramesPerSecond()> ->_NONE_
<android.preference.PreferenceActivity: void setParentTitle(java.lang.CharSequence,java.lang.CharSequence,android.view.View$OnClickListener)> ->_NONE_
<org.apache.harmony.xml.dom.DocumentImpl: java.lang.String getNodeName()> ->_NONE_
<android.database.sqlite.SQLiteDirectCursorDriver: void setBindArguments(java.lang.String[])> ->_NONE_
<org.apache.xml.serializer.ToHTMLStream: boolean getSpecialEscapeURLs()> ->_NONE_
<android.content.pm.LabeledIntent: java.lang.String getSourcePackage()> ->_NONE_
<android.support.v4.view.MotionEventCompatEclair: int getPointerId(android.view.MotionEvent,int)> ->_NONE_
<android.net.wifi.WifiInfo: android.net.wifi.SupplicantState getSupplicantState()> ->_NONE_
<org.apache.xpath.patterns.ContextMatchStepPattern: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<android.accounts.AccountManager: void addOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener,android.os.Handler,boolean)> ->_NONE_
<android.app.ActivityManagerProxy: void moveTaskToBack(int)> ->_NONE_
<android.widget.PopupWindow: void update(android.view.View,int,int,int,int)> ->_NONE_
<org.apache.harmony.security.x509.GeneralSubtrees: byte[] getEncoded()> ->_NONE_
<android.support.v4.app.BackStackRecord: int getTransition()> ->_NONE_
<org.apache.harmony.security.provider.crypto.RandomBitsSupplier: byte[] getRandomBits(int)> ->_NONE_
<android.widget.SearchView: int getMaxWidth()> ->_NONE_
<org.apache.commons.io.input.ProxyInputStream: int read()> ->_NONE_
<org.apache.http.conn.params.ConnRouteParams: void setDefaultProxy(org.apache.http.params.HttpParams,org.apache.http.HttpHost)> ->_NONE_
<java.beans.IndexedPropertyChangeEvent: int getIndex()> ->_NONE_
<org.javia.arity.SyntaxException: org.javia.arity.SyntaxException set(java.lang.String,int)> ->_NONE_
<android.telephony.SignalStrength: int getEvdoLevel()> ->_NONE_
<android.telephony.CellInfo: int getTimeStampType()> ->_NONE_
<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getHost()> ->_NONE_
<android.graphics.Interpolator: int getValueCount()> ->_NONE_
<android.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> ->_NONE_
<android.telephony.ServiceState: int getNetworkId()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityEventCompatIcs: java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int)> ->_NONE_
<android.widget.SimpleAdapter: android.widget.SimpleAdapter$ViewBinder getViewBinder()> ->_NONE_
<android.test.mock.MockContext: java.lang.ClassLoader getClassLoader()> ->_NONE_
<android.content.SyncManager: void dumpSyncAdapters(com.android.internal.util.IndentingPrintWriter)> ->_NONE_
<org.apache.xalan.templates.ElemComment: void execute(org.apache.xalan.transformer.TransformerImpl)> ->_NONE_
<java.util.concurrent.LinkedBlockingDeque: java.lang.Object getLast()> ->_NONE_
<javax.crypto.spec.OAEPParameterSpec: javax.crypto.spec.PSource getPSource()> ->_NONE_
<android.filterfw.core.NativeFrame: android.graphics.Bitmap getBitmap()> ->_NONE_
<org.apache.harmony.xml.ExpatParser: void parseDocument(java.io.Reader)> ->_NONE_
<android.widget.TextView: void setMaxHeight(int)> ->_NONE_
<android.hardware.Camera: void setAutoFocusMoveCallback(android.hardware.Camera$AutoFocusMoveCallback)> ->_NONE_
<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])> ->_NONE_
<java.text.DateFormatSymbols: java.lang.String[] getShortWeekdays()> ->_NONE_
<android.graphics.drawable.GradientDrawable: void setStroke(int,int,float,float)> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: int getElementById(java.lang.String)> ->_NONE_
<org.apache.http.cookie.CookieSpecRegistry: org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: void setWantClientAuth(boolean)> ->_NONE_
<javax.net.ssl.SSLParameters: boolean getWantClientAuth()> ->_NONE_
<android.net.wifi.WifiNative: boolean setSerialNumber(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.CallIdentifier: void setHost(java.lang.String)> ->_NONE_
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,android.os.Bundle)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.lang.String[] getSupportedCipherSuites()> ->_NONE_
<android.media.AudioService: void onSetRsxConnectionState(int,int)> ->_NONE_
<java.text.BreakIterator: java.text.BreakIterator getLineInstance()> ->_NONE_
<android.media.AudioService: void sendDeviceConnectionIntent(int,int,java.lang.String)> ->_NONE_
<android.animation.KeyframeSet: void setEvaluator(android.animation.TypeEvaluator)> ->_NONE_
<libcore.net.http.RetryableOutputStream: void writeToSocket(java.io.OutputStream)> ->_NONE_
<android.text.style.SuggestionSpan: int getUnderlineColor()> ->_NONE_
<jp.co.omronsoft.openwnn.TextCandidates1LineViewManager: jp.co.omronsoft.openwnn.WnnWord getWnnWord(int)> ->_NONE_
<org.apache.xalan.templates.DecimalFormatProperties: char getMinusSign()> ->_NONE_
<java.net.Authenticator: java.net.Authenticator$RequestorType getRequestorType()> ->_NONE_
<android.view.ViewDebug: java.lang.reflect.Field[] getExportedPropertyFields(java.lang.Class)> ->_NONE_
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime(long,int)> ->_NONE_
<android.widget.TextView: android.text.method.TransformationMethod getTransformationMethod()> ->_NONE_
<dalvik.system.profiler.BinaryHprofWriter: void writeStartThread(dalvik.system.profiler.HprofData$ThreadEvent)> ->_NONE_
<org.apache.http.impl.io.ChunkedInputStream: int read()> ->_NONE_
<android.content.res.TypedArray: boolean getBoolean(int,boolean)> ->_NONE_
<gov.nist.javax.sip.header.ims.PChargingFunctionAddresses: void setChargingCollectionFunctionAddress(java.lang.String)> ->_NONE_
<android.mtp.MtpDatabase: int getObjectFilePath(int,char[],long[])> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: void setVersion(java.lang.String)> ->_NONE_
<org.apache.harmony.xml.dom.DocumentImpl: java.lang.String getInputEncoding()> ->_NONE_
<javax.net.ssl.KeyManagerFactory: java.lang.String getAlgorithm()> ->_NONE_
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.Intent)> ->_NONE_
<org.apache.http.impl.conn.DefaultClientConnection: void close()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.ClientSessionContext: void setSessionTimeout(int)> ->_NONE_
<java.util.zip.Inflater: long getBytesWritten()> ->_NONE_
<org.apache.commons.io.FileUtils: java.lang.String decodeUrl(java.lang.String)> ->_NONE_
<libcore.io.BlockGuardOs: int read(java.io.FileDescriptor,java.nio.ByteBuffer)> ->_NONE_
<android.net.http.HttpResponseCache: int getHitCount()> ->_NONE_
<android.app.SearchManager: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)> ->_NONE_
<android.app.LoaderManagerImpl: android.content.Loader initLoader(int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks)> ->_NONE_
<org.apache.harmony.security.x509.InfoAccessSyntax: byte[] getEncoded()> ->_NONE_
<org.apache.harmony.xml.dom.InnerNodeImpl: void getTextContent(java.lang.StringBuilder)> ->_NONE_
<java.util.Currency: java.lang.String getSymbol(java.util.Locale)> ->_NONE_
<org.jivesoftware.smack.NonSASLAuthentication: java.lang.String authenticate(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.webkit.CallbackProxy: void onUnhandledKeyEvent(android.view.KeyEvent)> ->_NONE_
<org.xml.sax.helpers.XMLFilterImpl: void setDocumentLocator(org.xml.sax.Locator)> ->_NONE_
<net.oauth.OAuthMessage: java.util.Map getDump()> ->_NONE_
<org.apache.xalan.templates.ElemNumber: int getLevel()> ->_NONE_
<org.ccil.cowan.tagsoup.HTMLScanner: void unread(java.io.PushbackReader,int)> ->_NONE_
<org.apache.xalan.templates.ElemForEach: int getXSLToken()> ->_NONE_
<android.graphics.Matrix: void printShortString(java.io.PrintWriter)> ->_NONE_
<android.webkit.WebSettings: java.lang.String getPluginsPath()> ->_NONE_
<gov.nist.javax.sip.header.SIPHeaderList: java.lang.String encodeBody()> ->_NONE_
<javax.xml.transform.TransformerException: java.lang.Throwable getCause()> ->_NONE_
<org.apache.harmony.security.x509.CertificatePolicies: java.util.List getPolicyInformations()> ->_NONE_
<android.widget.ListPopupWindow: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)> ->_NONE_
<android.net.sip.SipManager: void setRegistrationListener(java.lang.String,android.net.sip.SipRegistrationListener)> ->_NONE_
<android.test.mock.MockResources: java.lang.String getQuantityString(int,int,java.lang.Object[])> ->_NONE_
<android.telephony.PhoneNumberUtils: java.lang.String stripSeparators(java.lang.String)> ->_NONE_
<android.media.AudioService: int getStreamMaxVolume(int)> ->_NONE_
<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCache$ServiceInfo getServiceInfo(java.lang.Object,int)> ->_NONE_
<java.text.DecimalFormat: void setPositivePrefix(java.lang.String)> ->_NONE_
<android.filterfw.core.SimpleFrame: void setBitmap(android.graphics.Bitmap)> ->_NONE_
<android.content.res.Resources: void setCompatibilityInfo(android.content.res.CompatibilityInfo)> ->_NONE_
<android.os.Process: int getUidForPid(int)> ->_NONE_
<android.view.animation.BounceInterpolator: float getInterpolation(float)> ->_NONE_
<org.apache.http.impl.cookie.BrowserCompatSpec: org.apache.http.Header getVersionHeader()> ->_NONE_
<javax.xml.validation.ValidatorHandler: void setFeature(java.lang.String,boolean)> ->_NONE_
<android.widget.ProgressBar: android.view.animation.Interpolator getInterpolator()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setChecked(boolean)> ->_NONE_
<org.jivesoftware.smack.util.Cache: long getMaxLifetime()> ->_NONE_
<android.content.Intent: android.os.Parcelable[] getParcelableArrayExtra(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.address.SipUri: void setUserParam(java.lang.String)> ->_NONE_
<gov.nist.core.Token: java.lang.String getTokenValue()> ->_NONE_
<org.apache.xml.serializer.ToStream: void writeOutCleanChars(char[],int,int)> ->_NONE_
<android.widget.AbsListView: int getRightPaddingOffset()> ->_NONE_
<org.apache.xalan.transformer.TransformerIdentityImpl: java.lang.Object getParameter(java.lang.String)> ->_NONE_
<org.apache.james.mime4j.codec.EncoderUtil: java.lang.String encodeAddressDisplayName(java.lang.String)> ->_NONE_
<org.apache.xml.serializer.SerializerBase: java.lang.String getDoctypePublic()> ->_NONE_
<org.apache.harmony.security.x509.Validity: java.util.Date getNotAfter()> ->_NONE_
<android.webkit.WebIconDatabaseClassic: void bulkRequestIconForPageUrl(android.content.ContentResolver,java.lang.String,android.webkit.WebIconDatabase$IconListener)> ->_NONE_
<android.graphics.Paint: float getTextRunAdvances(char[],int,int,int,int,int,float[],int,int)> ->_NONE_
<android.widget.DatePicker: void setMinDate(long)> ->_NONE_
<android.webkit.WebViewClassic: void dumpRenderTree(boolean)> ->_NONE_
<android.nfc.tech.MifareUltralight: android.nfc.Tag getTag()> ->_NONE_
<javax.obex.ServerOperation: int getMaxPacketSize()> ->_NONE_
<android.security.KeyChain: java.security.PrivateKey getPrivateKey(android.content.Context,java.lang.String)> ->_NONE_
<android.widget.SimpleAdapter: android.widget.Filter getFilter()> ->_NONE_
<gov.nist.javax.sip.header.Require: java.lang.String encodeBody()> ->_NONE_
<org.apache.harmony.security.x509.ORAddress: byte[] getEncoded()> ->_NONE_
<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.XSLTElementProcessor getProcessorFor(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<java.util.zip.DeflaterInputStream: int read(byte[],int,int)> ->_NONE_
<org.apache.harmony.luni.lang.reflect.ListOfTypes: java.lang.reflect.Type[] getResolvedTypes()> ->_NONE_
<android.view.textservice.SpellCheckerSession: com.android.internal.textservice.ISpellCheckerSessionListener getSpellCheckerSessionListener()> ->_NONE_
<android.webkit.Plugin: java.lang.String getPath()> ->_NONE_
<android.content.pm.PackageManager: java.lang.String getDataDirForUser(int,java.lang.String)> ->_NONE_
<java.util.Locale: java.lang.String getDisplayLanguage(java.util.Locale)> ->_NONE_
<android.speech.srec.WaveHeader: short readShort(java.io.InputStream)> ->_NONE_
<java.text.ParsePosition: int getIndex()> ->_NONE_
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor fromData(byte[],java.lang.String)> ->_NONE_
<org.apache.xml.serializer.utils.URI: void setHost(java.lang.String)> ->_NONE_
<android.renderscript.Matrix4f: void loadScale(float,float,float)> ->_NONE_
<android.net.http.Headers: java.lang.String getEtag()> ->_NONE_
<android.app.ApplicationPackageManager: int getUidForSharedUser(java.lang.String)> ->_NONE_
<org.apache.xml.serializer.utils.SystemIDResolver: java.lang.String getAbsoluteURI(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xml.serializer.ToHTMLStream: void processAttribute(java.io.Writer,java.lang.String,java.lang.String,org.apache.xml.serializer.ElemDesc)> ->_NONE_
<android.view.View: int getMeasuredWidth()> ->_NONE_
<android.telephony.TelephonyManager: java.lang.String getDeviceSoftwareVersion()> ->_NONE_
<org.apache.harmony.security.x509.AuthorityKeyIdentifier: java.math.BigInteger getAuthorityCertSerialNumber()> ->_NONE_
<org.apache.http.params.HttpProtocolParams: void setMalformedInputAction(org.apache.http.params.HttpParams,java.nio.charset.CodingErrorAction)> ->_NONE_
<java.lang.SecurityManager: int classLoaderDepth()> ->_NONE_
<org.apache.xpath.jaxp.JAXPPrefixResolver: java.lang.String getBaseIdentifier()> ->_NONE_
<android.widget.ScrollBarDrawable: int getOpacity()> ->_NONE_
<android.webkit.WebViewClassic: void setupProxyListener(android.content.Context)> ->_NONE_
<android.nfc.tech.BasicTagTechnology: void connect()> ->_NONE_
<android.test.mock.MockContext: java.io.File getSharedPrefsFile(java.lang.String)> ->_NONE_
<android.mtp.MtpDevice: int getDeviceId()> ->_NONE_
<javax.xml.validation.ValidatorHandler: void setProperty(java.lang.String,java.lang.Object)> ->_NONE_
<org.xml.sax.helpers.XMLReaderAdapter: void setDocumentHandler(org.xml.sax.DocumentHandler)> ->_NONE_
<org.jivesoftware.smack.PacketReader: void log(java.lang.String)> ->_NONE_
<android.media.videoeditor.MediaVideoItem: long getDuration()> ->_NONE_
<android.widget.FastScroller: void setAlwaysShow(boolean)> ->_NONE_
<org.apache.xpath.patterns.NodeTest: int getNodeTypeTest(int)> ->_NONE_
<android.app.ApplicationPackageManager: void setInstallerPackageName(java.lang.String,java.lang.String)> ->_NONE_
<android.media.AudioService: void onSetWiredDeviceConnectionState(int,int,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.MinExpires: void setExpires(int)> ->_NONE_
<android.filterfw.core.GLFrame: float[] getFloats()> ->_NONE_
<org.xmlpull.v1.sax2.Driver: int getIndex(java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.Finished: int getType()> ->_NONE_
<android.view.animation.AnimationSet: long getDuration()> ->_NONE_
<org.apache.harmony.security.pkcs7.SignerInfo: java.lang.String getDigestAlgorithm()> ->_NONE_
<android.text.style.SpellCheckSpan: void setSpellCheckInProgress(boolean)> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Enumerated: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)> ->_NONE_
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getMaxEntries()> ->_NONE_
<android.graphics.drawable.DrawableContainer: int getIntrinsicHeight()> ->_NONE_
<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseTypeArgument()> ->_NONE_
<org.xml.sax.SAXException: java.lang.String getMessage()> ->_NONE_
<android.app.Activity: void setImmersive(boolean)> ->_NONE_
<android.webkit.WebViewDatabaseClassic: void setFormData(java.lang.String,java.util.HashMap)> ->_NONE_
<org.apache.james.mime4j.message.Multipart: java.util.List getBodyParts()> ->_NONE_
<android.app.SearchManager: android.content.ComponentName getGlobalSearchActivity()> ->_NONE_
<libcore.net.url.JarURLConnectionImpl: void closeCachedFiles()> ->_NONE_
<android.widget.AdapterViewFlipper: int getFlipInterval()> ->_NONE_
<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.MessageChannel getResponseChannel()> ->_NONE_
<jp.co.omronsoft.openwnn.DefaultSoftKeyboard: jp.co.omronsoft.openwnn.Keyboard getKeyboardInputed(boolean)> ->_NONE_
<android.webkit.WebSettingsClassic: void setUseWebViewBackgroundForOverscrollBackground(boolean)> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getNodeName()> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: java.lang.String getHeaderFieldKey(int)> ->_NONE_
<java.util.ArrayDeque: java.lang.Object getFirst()> ->_NONE_
<android.media.MediaCodecInfo: android.media.MediaCodecInfo$CodecCapabilities getCapabilitiesForType(java.lang.String)> ->_NONE_
<android.speech.tts.TtsEngines: android.speech.tts.TextToSpeech$EngineInfo getEngineInfo(java.lang.String)> ->_NONE_
<android.app.FragmentBreadCrumbs: android.app.FragmentManager$BackStackEntry getPreEntry(int)> ->_NONE_
<android.database.AbstractWindowedCursor: long getLong(int)> ->_NONE_
<android.widget.AppSecurityPermissions: android.widget.AppSecurityPermissions$PermissionItemView getPermissionItemView(android.content.Context,android.view.LayoutInflater,android.widget.AppSecurityPermissions$MyPermissionGroupInfo,android.widget.AppSecurityPermissions$MyPermissionInfo,boolean,java.lang.CharSequence)> ->_NONE_
<android.content.CursorLoader: java.lang.String[] getProjection()> ->_NONE_
<android.os.Bundle: short getShort(java.lang.String)> ->_NONE_
<android.media.AudioService: void dumpFocusStack(java.io.PrintWriter)> ->_NONE_
<android.support.v4.app.Fragment: int getId()> ->_NONE_
<android.os.Environment: java.io.File getDirectory(java.lang.String,java.lang.String)> ->_NONE_
<android.content.ContentResolver: void setMasterSyncAutomatically(boolean)> ->_NONE_
<org.xml.sax.helpers.LocatorImpl: java.lang.String getPublicId()> ->_NONE_
<java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)> ->_NONE_
<android.renderscript.Matrix3f: void loadScale(float,float,float)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: boolean getUseClientMode()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: void setEnabledCipherSuites(java.lang.String[])> ->_NONE_
<org.apache.xml.serializer.ToTextSAXHandler: void setOutputStream(java.io.OutputStream)> ->_NONE_
<android.os.WorkSource: int get(int)> ->_NONE_
<android.test.mock.MockPackageManager: int getUidForSharedUser(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationHeader: void setNonce(java.lang.String)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setSelected(boolean)> ->_NONE_
<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack getCurrentExpressionNodeStack()> ->_NONE_
<android.media.videoeditor.WaveformData: short[] getFrameGains()> ->_NONE_
<android.webkit.Plugin: void setName(java.lang.String)> ->_NONE_
<android.os.CancellationSignal: void setRemote(android.os.ICancellationSignal)> ->_NONE_
<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getValue(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.XSLTElementProcessor getCurrentProcessor()> ->_NONE_
<android.webkit.WebSettingsClassic: void setLayoutAlgorithm(android.webkit.WebSettings$LayoutAlgorithm)> ->_NONE_
<android.security.AndroidKeyPairGeneratorSpec: java.util.Date getStartDate()> ->_NONE_
<org.apache.xalan.templates.DecimalFormatProperties: java.lang.String getInfinity()> ->_NONE_
<org.apache.xalan.templates.DecimalFormatProperties: char getGroupingSeparator()> ->_NONE_
<org.jivesoftware.smackx.ServiceDiscoveryManager: org.jivesoftware.smackx.NodeInformationProvider getNodeInformationProvider(java.lang.String)> ->_NONE_
<android.net.LocalSocket: android.net.LocalSocketAddress getRemoteSocketAddress()> ->_NONE_
<org.apache.xml.serializer.utils.AttList: java.lang.String getQName(int)> ->_NONE_
<android.widget.TextView: java.lang.CharSequence getTextForAccessibility()> ->_NONE_
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)> ->_NONE_
<android.view.accessibility.AccessibilityEvent: void setSealed(boolean)> ->_NONE_
<org.apache.http.impl.io.HttpRequestWriter: void writeHeadLine(org.apache.http.HttpRequest)> ->_NONE_
<android.view.ViewConfiguration: long getZoomControlsTimeout()> ->_NONE_
<android.support.v4.view.AccessibilityDelegateCompat: android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)> ->_NONE_
<android.nfc.tech.MifareClassic: int getBlockCount()> ->_NONE_
<android.graphics.Rect: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.james.mime4j.MimeStreamParser: org.apache.james.mime4j.BodyDescriptor parseHeader(java.io.InputStream)> ->_NONE_
<android.content.ContentProviderClient: java.lang.String getType(android.net.Uri)> ->_NONE_
<android.app.WallpaperInfo: java.lang.CharSequence loadAuthor(android.content.pm.PackageManager)> ->_NONE_
<java.math.BigInteger: java.math.BigInteger setBit(int)> ->_NONE_
<javax.xml.validation.SchemaFactory: void setFeature(java.lang.String,boolean)> ->_NONE_
<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()> ->_NONE_
<android.webkit.WebHistoryItemClassic: void setCustomData(java.lang.Object)> ->_NONE_
<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getTargetHost()> ->_NONE_
<android.webkit.PluginManager: java.lang.String getPluginsAPKName(java.lang.String)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: java.util.Vector getTemplateCallstack()> ->_NONE_
<android.filterfw.core.FrameFormat: int getValuesPerSample()> ->_NONE_
<android.view.View: float getRotationX()> ->_NONE_
<android.view.animation.AccelerateDecelerateInterpolator: float getInterpolation(float)> ->_NONE_
<android.view.View: float getRotationY()> ->_NONE_
<android.widget.AdapterViewAnimator: void setDisplayedChild(int)> ->_NONE_
<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.HttpConnectionMetrics getMetrics()> ->_NONE_
<android.app.Activity: android.app.ActionBar getActionBar()> ->_NONE_
<java.net.DatagramSocket: void connect(java.net.InetAddress,int)> ->_NONE_
<org.apache.james.mime4j.MimeBoundaryInputStream: int read()> ->_NONE_
<android.widget.NumberPicker: void setOnLongPressUpdateInterval(long)> ->_NONE_
<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String getName()> ->_NONE_
<android.content.pm.PackageStats: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.text.SpannableStringBuilder: void drawTextRun(android.graphics.Canvas,int,int,int,int,float,float,int,android.graphics.Paint)> ->_NONE_
<org.apache.http.message.BasicHeaderValueParser: org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor,char[])> ->_NONE_
<org.apache.xalan.processor.StylesheetHandler: boolean getIncremental()> ->_NONE_
<gov.nist.javax.sip.header.ExtensionHeaderImpl: void setValue(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.SipStackImpl: gov.nist.javax.sip.clientauthutils.AuthenticationHelper getAuthenticationHelper(gov.nist.javax.sip.clientauthutils.AccountManager,javax.sip.header.HeaderFactory)> ->_NONE_
<org.apache.commons.codec.net.URLCodec: java.lang.String decode(java.lang.String,java.lang.String)> ->_NONE_
<java.net.HttpCookie: java.lang.String getValue()> ->_NONE_
<android.webkit.CookieManagerClassic: java.lang.String getCookie(java.lang.String,boolean)> ->_NONE_
<org.ccil.cowan.tagsoup.Schema: void setPrefix(java.lang.String)> ->_NONE_
<android.net.wifi.WifiInfo: void setNetworkId(int)> ->_NONE_
<org.apache.harmony.xml.ExpatAttributes: java.lang.String getValue(java.lang.String)> ->_NONE_
<org.apache.http.conn.scheme.Scheme: java.lang.String getName()> ->_NONE_
<android.nfc.tech.NfcV: boolean isConnected()> ->_NONE_
<android.filterfw.core.FilterPort: void setBlocking(boolean)> ->_NONE_
<jp.co.omronsoft.openwnn.JAJP.OpenWnnEngineJAJP: jp.co.omronsoft.openwnn.WnnWord[] getUserDictionaryWords()> ->_NONE_
<org.jivesoftware.smack.packet.Packet: void setProperty(java.lang.String,int)> ->_NONE_
<gov.nist.javax.sip.header.RAck: java.lang.String encodeBody()> ->_NONE_
<org.apache.xml.serializer.dom3.DOMOutputImpl: void setSystemId(java.lang.String)> ->_NONE_
<java.util.logging.Logger: boolean getUseParentHandlers()> ->_NONE_
<org.apache.http.client.methods.HttpOptions: java.util.Set getAllowedMethods(org.apache.http.HttpResponse)> ->_NONE_
<org.jivesoftware.smack.util.StringUtils: java.lang.String encodeBase64(byte[],boolean)> ->_NONE_
<android.text.SpannableString: int getSpanStart(java.lang.Object)> ->_NONE_
<android.view.MotionEvent: float getTouchMajor(int)> ->_NONE_
<org.apache.xpath.axes.WalkingIterator: org.apache.xpath.Expression getExpression()> ->_NONE_
<java.security.BasicPermission: java.lang.String getActions()> ->_NONE_
<android.preference.TwoStatePreference: boolean getDisableDependentsState()> ->_NONE_
<android.view.ViewRootImpl: android.view.WindowLeaked getLocation()> ->_NONE_
<android.view.accessibility.AccessibilityRecord: void setFullScreen(boolean)> ->_NONE_
<android.opengl.GLUtils: java.lang.String getEGLErrorString(int)> ->_NONE_
<libcore.util.ZoneInfoDB: java.util.TimeZone getSystemDefault()> ->_NONE_
<android.widget.TextView: void setOnEditorActionListener(android.widget.TextView$OnEditorActionListener)> ->_NONE_
<android.text.style.CharacterStyle: android.text.style.CharacterStyle getUnderlying()> ->_NONE_
<gov.nist.core.GenericObject: java.lang.String getIndentation()> ->_NONE_
<android.webkit.WebViewClassic: void setFindIsUp(boolean)> ->_NONE_
<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: org.apache.james.mime4j.field.contenttype.parser.Token getToken(int)> ->_NONE_
<android.preference.RingtonePreference: void setRingtoneType(int)> ->_NONE_
<org.apache.xpath.compiler.Lexer: int getKeywordToken(java.lang.String)> ->_NONE_
<org.apache.commons.io.EndianUtils: void writeSwappedShort(java.io.OutputStream,short)> ->_NONE_
<javax.obex.ServerOperation: boolean sendReply(int)> ->_NONE_
<android.opengl.EGLObjectHandle: int getHandle()> ->_NONE_
<android.widget.RemoteViews: void setTextViewCompoundDrawablesRelative(int,int,int,int,int)> ->_NONE_
<android.net.wifi.WifiNative: boolean setNetworkVariable(int,java.lang.String,java.lang.String)> ->_NONE_
<android.media.AudioService: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)> ->_NONE_
<android.support.v4.widget.ResourceCursorAdapter: void setDropDownViewResource(int)> ->_NONE_
<android.media.AudioTrack: void setState(int)> ->_NONE_
<android.text.Layout: int getLineStartPos(int,int,int)> ->_NONE_
<android.text.method.MultiTapKeyListener: int getInputType()> ->_NONE_
<java.util.concurrent.atomic.AtomicInteger: int getAndDecrement()> ->_NONE_
<android.accounts.ChooseTypeAndAccountActivity: java.util.Set getAllowableAccountSet(android.content.Intent)> ->_NONE_
<org.jivesoftware.smack.PacketReader: java.util.Collection parseMechanisms(org.xmlpull.v1.XmlPullParser)> ->_NONE_
<android.view.SurfaceView: void setVisibility(int)> ->_NONE_
<org.apache.xalan.processor.WhitespaceInfoPaths: java.util.Vector getElements()> ->_NONE_
<org.apache.xml.serializer.ElemDesc: int getFlags()> ->_NONE_
<android.content.SearchRecentSuggestionsProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ->_NONE_
<android.telephony.gsm.SmsManager: android.telephony.gsm.SmsManager getDefault()> ->_NONE_
<org.apache.commons.io.output.ThresholdingOutputStream: long getByteCount()> ->_NONE_
<android.support.v4.view.PagerTitleStrip: void updateTextPositions(int,float,boolean)> ->_NONE_
<org.apache.xml.utils.DOMHelper: java.lang.String getUnparsedEntityURI(java.lang.String,org.w3c.dom.Document)> ->_NONE_
<org.apache.james.mime4j.field.datetime.parser.TokenMgrError: java.lang.String addEscapes(java.lang.String)> ->_NONE_
<android.webkit.MimeTypeMap: java.lang.String getMimeTypeFromExtension(java.lang.String)> ->_NONE_
<android.media.AudioRecord: int getRecordingState()> ->_NONE_
<android.webkit.JWebCoreJavaBridge: void handleMessage(android.os.Message)> ->_NONE_
<android.nfc.tech.NfcF: boolean isConnected()> ->_NONE_
<android.widget.TextView: void setEms(int)> ->_NONE_
<org.jivesoftware.smack.ProtoBufAuthentication: java.lang.String authenticate(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.ExpandedNameTable: org.apache.xml.dtm.ref.ExtendedType[] getExtendedTypes()> ->_NONE_
<java.util.concurrent.FutureTask: java.lang.Object get()> ->_NONE_
<android.widget.ExpandableListConnector: java.lang.Object getItem(int)> ->_NONE_
<android.bluetooth.BluetoothHeadset: boolean isAudioConnected(android.bluetooth.BluetoothDevice)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeIterator: org.w3c.dom.Node getRoot()> ->_NONE_
<android.preference.PreferenceManager: void setOnPreferenceTreeClickListener(android.preference.PreferenceManager$OnPreferenceTreeClickListener)> ->_NONE_
<java.nio.ShortArrayBuffer: java.nio.ShortBuffer get(short[],int,int)> ->_NONE_
<android.webkit.BrowserFrame: void setTitle(java.lang.String)> ->_NONE_
<android.bluetooth.BluetoothHealthAppConfiguration: int getChannelType()> ->_NONE_
<org.apache.xpath.operations.Variable: int getAnalysisBits()> ->_NONE_
<android.media.videoeditor.Transition: android.media.videoeditor.MediaArtistNativeHelper$TransitionSettings getTransitionSettings()> ->_NONE_
<org.apache.xpath.patterns.FunctionPattern: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)> ->_NONE_
<android.net.wifi.p2p.WifiP2pWfdInfo: void setControlPort(int)> ->_NONE_
<java.security.SecureRandom: java.lang.String getAlgorithm()> ->_NONE_
<android.nfc.tech.NfcB: boolean isConnected()> ->_NONE_
<android.util.LongSparseArray: void setValueAt(int,java.lang.Object)> ->_NONE_
<android.nfc.tech.NfcA: boolean isConnected()> ->_NONE_
<android.widget.TextView: android.text.TextPaint getPaint()> ->_NONE_
<org.apache.james.mime4j.field.datetime.parser.TokenMgrError: java.lang.String getMessage()> ->_NONE_
<android.view.accessibility.AccessibilityInteractionClient: android.os.Message getSameProcessMessageAndClear()> ->_NONE_
<org.apache.xml.dtm.DTMManager: org.apache.xml.utils.XMLStringFactory getXMLStringFactory()> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getNextSiblingElem()> ->_NONE_
<android.speech.srec.WaveHeader: android.speech.srec.WaveHeader setBitsPerSample(short)> ->_NONE_
<org.apache.xml.serializer.SerializerBase: void setSourceLocator(javax.xml.transform.SourceLocator)> ->_NONE_
<android.media.videoeditor.MediaArtistNativeHelper: int getTransitionResolution(android.media.videoeditor.MediaItem,android.media.videoeditor.MediaItem)> ->_NONE_
<android.os.Bundle: int[] getIntArray(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPRequest createAckRequest(gov.nist.javax.sip.header.To)> ->_NONE_
<android.net.BaseNetworkStateTracker: void setUserDataEnable(boolean)> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getParent()> ->_NONE_
<org.apache.http.impl.io.AbstractSessionOutputBuffer: void writeLine(org.apache.http.util.CharArrayBuffer)> ->_NONE_
<java.security.cert.CertPathBuilder: java.security.cert.CertPathBuilder getInstance(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.harmony.security.x509.IssuingDistributionPoint: void setOnlyContainsUserCerts(boolean)> ->_NONE_
<android.view.View: int getMeasuredHeightAndState()> ->_NONE_
<android.telephony.SmsMessage: int getProtocolIdentifier()> ->_NONE_
<gov.nist.javax.sip.header.RequestLine: java.lang.String getVersionMajor()> ->_NONE_
<android.text.SpannableStringInternal: int getSpanStart(java.lang.Object)> ->_NONE_
<org.apache.xpath.objects.XStringForChars: void getChars(int,int,char[],int)> ->_NONE_
<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams getApplicationParams()> ->_NONE_
<android.support.v4.view.PagerAdapter: float getPageWidth(int)> ->_NONE_
<android.net.LocalSocket: android.net.LocalSocketAddress getLocalSocketAddress()> ->_NONE_
<android.location.LocationRequest: android.location.LocationRequest setQuality(int)> ->_NONE_
<gov.nist.javax.sip.stack.SIPServerTransaction: int getViaPort()> ->_NONE_
<org.apache.harmony.security.x509.TBSCertificate: void dumpValue(java.lang.StringBuilder)> ->_NONE_
<android.media.audiofx.Equalizer: int[] getBandFreqRange(short)> ->_NONE_
<android.view.ViewDebug: void writeValue(java.io.BufferedWriter,java.lang.Object)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler getSerializationHandler()> ->_NONE_
<java.net.Socket: boolean isConnected()> ->_NONE_
<org.apache.http.impl.cookie.CookieSpecBase: java.lang.String getDefaultDomain(org.apache.http.cookie.CookieOrigin)> ->_NONE_
<android.preference.GenericInflater: android.content.Context getContext()> ->_NONE_
<org.apache.xml.serializer.ToStream: void setTransformer(javax.xml.transform.Transformer)> ->_NONE_
<android.view.ViewGroup: android.view.animation.LayoutAnimationController getLayoutAnimation()> ->_NONE_
<org.apache.xalan.templates.ElemValueOf: java.lang.String getNodeName()> ->_NONE_
<android.preference.Preference: int getWidgetLayoutResource()> ->_NONE_
<libcore.net.url.FileHandler: java.net.URLConnection openConnection(java.net.URL)> ->_NONE_
<org.apache.http.impl.conn.DefaultResponseParser: org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer)> ->_NONE_
<android.net.EthernetDataTracker: void setTeardownRequested(boolean)> ->_NONE_
<android.media.AudioManager: android.media.IRingtonePlayer getRingtonePlayer()> ->_NONE_
<org.apache.harmony.security.x509.tsp.PKIFailureInfo: int getValue()> ->_NONE_
<android.text.method.WordIterator: int getEnd(int)> ->_NONE_
<android.text.Selection: int getSelectionStart(java.lang.CharSequence)> ->_NONE_
<org.jivesoftware.smack.RosterEntry: void setName(java.lang.String)> ->_NONE_
<javax.crypto.EncryptedPrivateKeyInfo: java.security.spec.PKCS8EncodedKeySpec getKeySpec(javax.crypto.Cipher)> ->_NONE_
<android.graphics.drawable.GradientDrawable: void setUseLevel(boolean)> ->_NONE_
<android.widget.TextClock: java.lang.String getTimeZone()> ->_NONE_
<java.net.Socket: java.net.InetAddress getLocalAddress()> ->_NONE_
<org.apache.http.impl.cookie.BestMatchSpec: org.apache.http.impl.cookie.BrowserCompatSpec getCompat()> ->_NONE_
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLetters(android.content.ComponentName,int)> ->_NONE_
<java.io.ObjectInputStream: int read(byte[],int,int)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: void setShouldStripWhitespace(boolean)> ->_NONE_
<android.support.v4.view.AccessibilityDelegateCompatJellyBean: java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View)> ->_NONE_
<android.preference.PreferenceManager: long getNextId()> ->_NONE_
<android.net.TrafficStats: java.lang.String[] getMobileIfaces()> ->_NONE_
<android.net.http.HttpResponseCache: int getRequestCount()> ->_NONE_
<android.view.View: void setNextFocusForwardId(int)> ->_NONE_
<android.nfc.tech.NfcB: int getMaxTransceiveLength()> ->_NONE_
<java.text.SimpleDateFormat: void set2DigitYearStart(java.util.Date)> ->_NONE_
<android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()> ->_NONE_
<org.javia.arity.Token: org.javia.arity.Token setPos(int)> ->_NONE_
<android.widget.TextView: int getImeOptions()> ->_NONE_
<android.nfc.tech.NfcA: int getMaxTransceiveLength()> ->_NONE_
<android.speech.tts.TextToSpeechService: int getSecureSettingInt(java.lang.String,int)> ->_NONE_
<android.content.IntentFilter: java.lang.String getDataType(int)> ->_NONE_
<java.util.prefs.XMLParser: java.lang.String htmlEncode(java.lang.String)> ->_NONE_
<java.security.cert.PKIXParameters: void setAnyPolicyInhibited(boolean)> ->_NONE_
<android.widget.Switch: int getCompoundPaddingRight()> ->_NONE_
<android.nfc.tech.NfcF: int getMaxTransceiveLength()> ->_NONE_
<android.net.NetworkStats: void dump(java.lang.String,java.io.PrintWriter)> ->_NONE_
<android.view.View: void setNextFocusLeftId(int)> ->_NONE_
<android.telephony.SignalStrength: int getLevel()> ->_NONE_
<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.Collection getQueuedThreads()> ->_NONE_
<android.app.backup.BackupAgentHelper: android.app.backup.BackupHelperDispatcher getDispatcher()> ->_NONE_
<android.filterpacks.imageproc.CropFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<android.media.AudioRecord: int read(short[],int,int)> ->_NONE_
<org.apache.xalan.templates.ElemElement: int getXSLToken()> ->_NONE_
<org.apache.http.params.HttpConnectionParamBean: void setLinger(int)> ->_NONE_
<android.net.NetworkPolicyManager: void dumpRules(java.io.PrintWriter,int)> ->_NONE_
<org.apache.xml.dtm.ref.DTMStringPool: void main(java.lang.String[])> ->_NONE_
<android.webkit.WebView: void saveWebArchive(java.lang.String,boolean,android.webkit.ValueCallback)> ->_NONE_
<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.Document getOwnerDocument()> ->_NONE_
<android.os.Environment: java.io.File getEmulatedStorageSource(int)> ->_NONE_
<org.apache.xalan.Version: java.lang.String getProduct()> ->_NONE_
<android.net.MobileDataStateTracker: void setDetailedState(android.net.NetworkInfo$DetailedState,java.lang.String,java.lang.String)> ->_NONE_
<android.net.DnsPinger: void sendResponse(int,int,int)> ->_NONE_
<android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)> ->_NONE_
<java.net.Socket: void sendUrgentData(int)> ->_NONE_
<android.widget.ListPopupWindow: void setWidth(int)> ->_NONE_
<org.apache.xalan.templates.ElemPI: void execute(org.apache.xalan.transformer.TransformerImpl)> ->_NONE_
<org.apache.harmony.xml.dom.ElementImpl: java.lang.String getLocalName()> ->_NONE_
<gov.nist.javax.sip.header.MimeVersion: void setMinorVersion(int)> ->_NONE_
<org.apache.xml.utils.SAXSourceLocator: java.lang.String getPublicId()> ->_NONE_
<android.gesture.GestureStore: android.gesture.Learner getLearner()> ->_NONE_
<android.text.method.BaseMovementMethod: int getInnerHeight(android.widget.TextView)> ->_NONE_
<jp.co.omronsoft.openwnn.TextCandidates1LineViewManager: int getViewType()> ->_NONE_
<android.webkit.WebSyncManager: void run()> ->_NONE_
<libcore.net.http.HttpResponseCache: int getRequestCount()> ->_NONE_
<android.content.CursorLoader: void setSelectionArgs(java.lang.String[])> ->_NONE_
<java.io.ObjectStreamField: java.lang.Class getType()> ->_NONE_
<android.media.MediaPlayer: void setOnTimedTextListener(android.media.MediaPlayer$OnTimedTextListener)> ->_NONE_
<android.content.res.Resources: int getColor(int)> ->_NONE_
<android.app.WallpaperInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.widget.ZoomButtonsController: android.view.View getZoomControls()> ->_NONE_
<android.view.accessibility.AccessibilityManager: void removeAccessibilityInteractionConnection(android.view.IWindow)> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: java.security.cert.Certificate[] getLocalCertificates()> ->_NONE_
<android.media.MediaCodec: android.media.MediaCodec createEncoderByType(java.lang.String)> ->_NONE_
<android.speech.tts.SynthesisRequest: java.lang.String getCountry()> ->_NONE_
<android.database.MergeCursor: short getShort(int)> ->_NONE_
<android.filterpacks.imageproc.Invert: android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)> ->_NONE_
<org.apache.xml.utils.DOMHelper: org.w3c.dom.Node getRootNode(org.w3c.dom.Node)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey: java.math.BigInteger getPrimeExponentQ()> ->_NONE_
<android.widget.AbsSpinner: int getChildHeight(android.view.View)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int getWindowId()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey: java.math.BigInteger getPrimeExponentP()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.CertPinManager: java.lang.String[] getPinFileEntries(java.lang.String)> ->_NONE_
<android.webkit.WebViewClassic: android.net.http.SslCertificate getCertificate()> ->_NONE_
<java.lang.System: java.lang.String getProperty(java.lang.String)> ->_NONE_
<android.telephony.CellSignalStrengthCdma: int getDbm()> ->_NONE_
<android.content.SyncAdapterType: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<java.sql.SQLException: void setNextException(java.sql.SQLException)> ->_NONE_
<javax.net.ssl.DefaultSSLServerSocketFactory: java.lang.String[] getDefaultCipherSuites()> ->_NONE_
<android.test.ActivityTestCase: void setActivity(android.app.Activity)> ->_NONE_
<org.apache.xml.utils.SAXSourceLocator: int getLineNumber()> ->_NONE_
<android.view.Window: android.content.Context getContext()> ->_NONE_
<android.gesture.GestureOverlayView: android.gesture.Gesture getGesture()> ->_NONE_
<android.text.Layout: android.text.Layout$Alignment getParagraphAlignment(int)> ->_NONE_
<android.telephony.gsm.GsmCellLocation: int getCid()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: boolean getEnableSessionCreation()> ->_NONE_
<android.location.Geofence: int getType()> ->_NONE_
<android.content.res.AssetManager: android.content.res.XmlResourceParser openXmlResourceParser(int,java.lang.String)> ->_NONE_
<javax.xml.transform.sax.SAXResult: void setSystemId(java.lang.String)> ->_NONE_
<org.apache.harmony.security.SystemScope: java.security.Identity getIdentity(java.security.PublicKey)> ->_NONE_
<org.apache.http.message.BasicHttpEntityEnclosingRequest: void setEntity(org.apache.http.HttpEntity)> ->_NONE_
<android.webkit.ZoomManager: float getInvDefaultScale()> ->_NONE_
<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: java.util.concurrent.atomic.AtomicIntegerFieldUpdater newUpdater(java.lang.Class,java.lang.String)> ->_NONE_
<android.net.sip.SipAudioCall: android.net.sip.SipProfile getPeerProfile(android.net.sip.SipSession)> ->_NONE_
<android.app.backup.WallpaperBackupHelper: void restoreEntity(android.app.backup.BackupDataInputStream)> ->_NONE_
<android.app.SearchManager: android.database.Cursor getSuggestions(android.app.SearchableInfo,java.lang.String,int)> ->_NONE_
<android.database.DatabaseUtils: byte[] getCollationKeyInBytes(java.lang.String)> ->_NONE_
<android.media.AudioManager: void setStreamMute(int,boolean)> ->_NONE_
<android.database.sqlite.SQLiteSession: long executeForLastInsertedRowId(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)> ->_NONE_
<java.net.URLConnection: java.util.Map getHeaderFields()> ->_NONE_
<android.telephony.PhoneNumberUtils: java.lang.String getStrippedReversed(java.lang.String)> ->_NONE_
<java.util.zip.Deflater: long getBytesRead()> ->_NONE_
<java.net.URI: java.lang.String getRawAuthority()> ->_NONE_
<android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat: java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo)> ->_NONE_
<org.apache.xpath.objects.XBoolean: int getType()> ->_NONE_
<java.lang.reflect.AccessibleObject: void setAccessible(java.lang.reflect.AccessibleObject[],boolean)> ->_NONE_
<libcore.io.IoBridge: boolean connect(java.io.FileDescriptor,java.net.InetAddress,int)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: org.w3c.dom.Node getFirstChild()> ->_NONE_
<android.content.SyncInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<libcore.net.http.HttpURLConnectionImpl: int getResponseCode()> ->_NONE_
<android.graphics.drawable.ScaleDrawable: int getIntrinsicWidth()> ->_NONE_
<gov.nist.javax.sip.stack.ServerLog: void logMessage(java.lang.String)> ->_NONE_
<android.inputmethodservice.IInputMethodWrapper: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> ->_NONE_
<android.media.videoeditor.MediaArtistNativeHelper: int getEffectColorType(android.media.videoeditor.EffectColor)> ->_NONE_
<android.filterfw.core.SimpleFrame: java.nio.ByteBuffer getData()> ->_NONE_
<org.apache.http.impl.client.RoutedRequest: org.apache.http.impl.client.RequestWrapper getRequest()> ->_NONE_
<android.util.XmlPullAttributes: int getStyleAttribute()> ->_NONE_
<android.hardware.usb.UsbInterface: int getInterfaceSubclass()> ->_NONE_
<android.app.SearchableInfo: int getInputType()> ->_NONE_
<android.database.BulkCursorToCursorAdaptor: java.lang.String[] getColumnNames()> ->_NONE_
<android.webkit.WebSettings: int getDefaultFixedFontSize()> ->_NONE_
<android.media.videoeditor.Overlay: java.util.Map getUserAttributes()> ->_NONE_
<android.view.ViewRootImpl: void windowFocusChanged(boolean,boolean)> ->_NONE_
<libcore.icu.NativeDecimalFormat: void setDecimalFormatSymbols(libcore.icu.LocaleData)> ->_NONE_
<android.graphics.drawable.AnimatedRotateDrawable: boolean getPadding(android.graphics.Rect)> ->_NONE_
<javax.xml.validation.ValidatorHandler: boolean getFeature(java.lang.String)> ->_NONE_
<android.app.Dialog: void setTitle(java.lang.CharSequence)> ->_NONE_
<android.webkit.WebSettingsClassic: void setPluginsEnabled(boolean)> ->_NONE_
<org.apache.harmony.xml.parsers.SAXParserFactoryImpl: void setValidating(boolean)> ->_NONE_
<android.net.TrafficStats: void setThreadStatsTag(int)> ->_NONE_
<org.apache.xml.utils.UnImplNode: void setStrictErrorChecking(boolean)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: javax.sip.Dialog getJoinDialog(gov.nist.javax.sip.header.extensions.JoinHeader)> ->_NONE_
<android.widget.ListView: void setAdapter(android.widget.ListAdapter)> ->_NONE_
<org.apache.xml.utils.UnImplNode: void setIdAttributeNS(java.lang.String,java.lang.String,boolean)> ->_NONE_
<gov.nist.javax.sip.header.Challenge: java.lang.String getParameter(java.lang.String)> ->_NONE_
<android.widget.SimpleExpandableListAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)> ->_NONE_
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfoForUid(int)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.message.Request getRequest()> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getClassName()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSignatureRawRSA: void engineUpdate(byte[],int,int)> ->_NONE_
<android.content.Intent: java.lang.Object getExtra(java.lang.String,java.lang.Object)> ->_NONE_
<libcore.io.Streams: byte[] readFullyNoClose(java.io.InputStream)> ->_NONE_
<android.mtp.MtpDatabase: boolean getObjectInfo(int,int[],char[],long[])> ->_NONE_
<org.apache.http.auth.NTUserPrincipal: java.lang.String getName()> ->_NONE_
<org.apache.xml.serializer.ToStream: void unparsedEntityDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<org.jivesoftware.smack.packet.Authentication: java.lang.String getResource()> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: void setAllowUserInteraction(boolean)> ->_NONE_
<org.apache.xpath.axes.LocPathIterator: void setCurrentPos(int)> ->_NONE_
<android.webkit.ZoomManager: android.view.View getExternalZoomPicker()> ->_NONE_
<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.BlockingQueue getQueue()> ->_NONE_
<android.app.Activity: int getTitleColor()> ->_NONE_
<android.media.MediaExtractor: void setDataSource(android.content.Context,android.net.Uri,java.util.Map)> ->_NONE_
<android.renderscript.RenderScriptGL: void setSurface(android.view.SurfaceHolder,int,int)> ->_NONE_
<libcore.icu.NativeBreakIterator: void setText(java.lang.String)> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: void setIndentAmount(int)> ->_NONE_
<android.widget.AbsListView: int getListPaddingBottom()> ->_NONE_
<android.webkit.WebHistoryItem: java.lang.String getUrl()> ->_NONE_
<android.animation.FloatKeyframeSet: float getFloatValue(float)> ->_NONE_
<android.view.GLES20RecordingCanvas: void drawTextRun(char[],int,int,int,int,float,float,int,android.graphics.Paint)> ->_NONE_
<android.view.ViewConfiguration: int getEdgeSlop()> ->_NONE_
<junit.runner.BaseTestRunner: junit.runner.TestSuiteLoader getLoader()> ->_NONE_
<android.view.ViewRootImpl: android.graphics.drawable.Drawable getAccessibilityFocusedDrawable()> ->_NONE_
<android.test.ActivityUnitTestCase: android.content.Intent getStartedActivityIntent()> ->_NONE_
<org.apache.xalan.processor.XSLTElementDef: boolean getRequiredFound()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: java.io.FileDescriptor getFileDescriptor$()> ->_NONE_
<android.widget.Editor: android.widget.Editor$PositionListener getPositionListener()> ->_NONE_
<gov.nist.core.StringTokenizer: java.lang.String getSDPFieldName(java.lang.String)> ->_NONE_
<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)> ->_NONE_
<gov.nist.javax.sip.header.ContentType: java.lang.String getContentType()> ->_NONE_
<org.apache.xpath.patterns.NodeTest: void setStaticScore(org.apache.xpath.objects.XNumber)> ->_NONE_
<org.apache.xpath.axes.AxesWalker: int getNextNode()> ->_NONE_
<org.apache.harmony.luni.internal.util.TimezoneGetter: void setInstance(org.apache.harmony.luni.internal.util.TimezoneGetter)> ->_NONE_
<libcore.net.http.HttpURLConnectionImpl: java.lang.String getHeaderField(java.lang.String)> ->_NONE_
<android.widget.DatePicker: void setCurrentLocale(java.util.Locale)> ->_NONE_
<libcore.net.url.JarURLConnectionImpl: java.lang.Object getContent()> ->_NONE_
<android.drm.mobile1.DrmRawContent: java.io.InputStream getContentInputStream(android.drm.mobile1.DrmRights)> ->_NONE_
<android.net.TrafficStats: long getTotalTxPackets()> ->_NONE_
<java.io.ByteArrayOutputStream: void writeTo(java.io.OutputStream)> ->_NONE_
<gov.nist.core.Host: java.lang.String encode()> ->_NONE_
<org.apache.http.cookie.CookieOrigin: java.lang.String getPath()> ->_NONE_
<android.view.View: int getBottom()> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: void setAddressFieldWork(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: org.apache.harmony.xnet.provider.jsse.ClientSessionContext getClientSessionContext()> ->_NONE_
<java.util.logging.Logger: java.lang.String getName()> ->_NONE_
<android.support.v4.util.LongSparseArray: void setValueAt(int,java.lang.Object)> ->_NONE_
<android.text.format.Time: void set(int,int,int)> ->_NONE_
<org.apache.xalan.templates.ElemCopyOf: int getXSLToken()> ->_NONE_
<org.apache.xpath.objects.XRTreeFrag: int getType()> ->_NONE_
<java.lang.Boolean: boolean getBoolean(java.lang.String)> ->_NONE_
<android.view.animation.Animation: void getInvalidateRegion(int,int,int,int,android.graphics.RectF,android.view.animation.Transformation)> ->_NONE_
<gov.nist.javax.sip.parser.RecordRouteParser: gov.nist.javax.sip.header.SIPHeader parse()> ->_NONE_
<android.content.Intent: android.content.Intent replaceExtras(android.os.Bundle)> ->_NONE_
<android.net.wifi.p2p.WifiP2pGroup: java.util.Collection getClientList()> ->_NONE_
<org.apache.xalan.templates.NamespaceAlias: java.lang.String getResultPrefix()> ->_NONE_
<gov.nist.javax.sip.header.Warning: java.lang.String getText()> ->_NONE_
<android.location.Address: void setUrl(java.lang.String)> ->_NONE_
<android.telephony.ServiceState: void setCdmaEriIconIndex(int)> ->_NONE_
<java.io.PipedReader: boolean ready()> ->_NONE_
<java.beans.PropertyChangeListenerProxy: java.lang.String getPropertyName()> ->_NONE_
<org.apache.xml.utils.URI: void setHost(java.lang.String)> ->_NONE_
<android.app.LoadedApk: void initializeJavaContextClassLoader()> ->_NONE_
<net.oauth.client.URLConnectionResponse: java.io.InputStream openBody()> ->_NONE_
<org.apache.xalan.xslt.SecuritySupport: java.lang.ClassLoader getSystemClassLoader()> ->_NONE_
<org.jivesoftware.smackx.provider.MUCUserProvider: org.jivesoftware.smackx.packet.MUCUser$Item parseItem(org.xmlpull.v1.XmlPullParser)> ->_NONE_
<android.text.DynamicLayout: boolean getLineContainsTab(int)> ->_NONE_
<android.support.v4.widget.EdgeEffectCompat: void setSize(int,int)> ->_NONE_
<org.apache.xml.serializer.dom3.NamespaceSupport: java.util.Enumeration getAllPrefixes()> ->_NONE_
<android.location.LocationRequest: android.location.LocationRequest createFromDeprecatedCriteria(android.location.Criteria,long,float,boolean)> ->_NONE_
<android.widget.ExpandableListView: void setOnGroupClickListener(android.widget.ExpandableListView$OnGroupClickListener)> ->_NONE_
<android.media.videoeditor.MediaImageItem: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings getImageClipProperties()> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: java.lang.String getNamespaceURIFromPrefix(java.lang.String)> ->_NONE_
<android.telephony.NeighboringCellInfo: void setCid(int)> ->_NONE_
<org.apache.harmony.xml.dom.DOMImplementationImpl: java.lang.Object getFeature(java.lang.String,java.lang.String)> ->_NONE_
<java.util.IllegalFormatWidthException: int getWidth()> ->_NONE_
<android.support.v4.view.AccessibilityDelegateCompat: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertImpl: java.util.List getExtendedKeyUsage()> ->_NONE_
<android.widget.LinearLayout: int getOrientation()> ->_NONE_
<org.apache.xalan.templates.XUnresolvedVariable: void setVarStackContext(int)> ->_NONE_
<org.apache.xalan.templates.KeyDeclaration: void setName(org.apache.xml.utils.QName)> ->_NONE_
<java.sql.Time: void setYear(int)> ->_NONE_
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getAllButNulLegal()> ->_NONE_
<java.beans.PropertyChangeEvent: java.lang.Object getOldValue()> ->_NONE_
<android.graphics.Canvas: void setDrawFilter(android.graphics.DrawFilter)> ->_NONE_
<android.media.ExifInterface: int getAttributeInt(java.lang.String,int)> ->_NONE_
<android.filterfw.core.SerializedFrame: void setGenericObjectValue(java.lang.Object)> ->_NONE_
<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)> ->_NONE_
<org.apache.xml.utils.URI: java.lang.String getScheme()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getInstance(java.security.interfaces.DSAPrivateKey)> ->_NONE_
<android.location.Address: java.lang.String getPhone()> ->_NONE_
<android.view.KeyEvent: int getRepeatCount()> ->_NONE_
<android.media.RingtoneManager: android.database.Cursor getMediaRingtones()> ->_NONE_
<android.widget.DatePicker: android.widget.CalendarView getCalendarView()> ->_NONE_
<org.apache.http.impl.cookie.BasicMaxAgeHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)> ->_NONE_
<javax.net.ssl.SSLParameters: void setNeedClientAuth(boolean)> ->_NONE_
<org.apache.james.mime4j.field.address.parser.SimpleCharStream: int getTabSize(int)> ->_NONE_
<android.view.View: void getHitRect(android.graphics.Rect)> ->_NONE_
<org.apache.xml.utils.SecuritySupport12: java.lang.String getSystemProperty(java.lang.String)> ->_NONE_
<org.apache.http.client.methods.HttpGet: java.lang.String getMethod()> ->_NONE_
<android.webkit.DateSorter: java.lang.String getLabel(int)> ->_NONE_
<android.view.GLES20TextureLayer: void setSurfaceTexture(android.graphics.SurfaceTexture)> ->_NONE_
<android.graphics.Bitmap: int getByteCount()> ->_NONE_
<gov.nist.core.DuplicateNameValueList: java.lang.Object getValue(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.ElemUse: org.apache.xml.utils.QName[] getUseAttributeSets()> ->_NONE_
<android.webkit.WebViewCore: android.webkit.WebViewInputDispatcher$WebKitCallbacks getInputDispatcherCallbacks()> ->_NONE_
<android.os.AsyncTask: void onPostExecute(java.lang.Object)> ->_NONE_
<java.lang.Enum: java.lang.Class getDeclaringClass()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeIterator: boolean getExpandEntityReferences()> ->_NONE_
<org.apache.commons.codec.language.RefinedSoundex: java.lang.String encode(java.lang.String)> ->_NONE_
<android.support.v4.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)> ->_NONE_
<android.graphics.drawable.ShapeDrawable: int getChangingConfigurations()> ->_NONE_
<gov.nist.javax.sip.stack.TLSMessageChannel: void setHandshakeCompletedListener(javax.net.ssl.HandshakeCompletedListener)> ->_NONE_
<org.apache.xml.utils.DefaultErrorHandler: void printLocation(java.io.PrintWriter,java.lang.Throwable)> ->_NONE_
<android.net.NetworkStats: android.net.NetworkStats$Entry getTotal(android.net.NetworkStats$Entry)> ->_NONE_
<android.media.audiofx.BassBoost: void setStrength(short)> ->_NONE_
<gov.nist.javax.sip.header.Route: java.lang.StringBuffer encodeBody(java.lang.StringBuffer)> ->_NONE_
<org.apache.xalan.processor.XSLTAttributeDef: void setDefault(java.lang.String)> ->_NONE_
<android.telephony.CellBroadcastMessage: android.telephony.SmsCbEtwsInfo getEtwsWarningInfo()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: int getReceiveUdpBufferSize()> ->_NONE_
<android.widget.RemoteViews: void setTextViewTextSize(int,int,float)> ->_NONE_
<org.apache.http.auth.params.AuthParams: java.lang.String getCredentialCharset(org.apache.http.params.HttpParams)> ->_NONE_
<android.content.ContextWrapper: java.lang.String getPackageResourcePath()> ->_NONE_
<org.jivesoftware.smack.packet.Packet: java.lang.String getFrom()> ->_NONE_
<org.javia.arity.Util: java.lang.String sizeTruncate(java.lang.String,int)> ->_NONE_
<java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)> ->_NONE_
<android.view.View: float getHorizontalScrollFactor()> ->_NONE_
<android.renderscript.Matrix3f: void loadTranslate(float,float)> ->_NONE_
<javax.security.auth.x500.X500Principal: java.lang.String getName(java.lang.String)> ->_NONE_
<javax.security.auth.PrivateCredentialPermission: java.lang.String getCredentialClass()> ->_NONE_
<org.apache.xml.dtm.ref.ExpandedNameTable: java.lang.String getLocalName(int)> ->_NONE_
<org.jivesoftware.smack.XMPPConnection: java.net.InetAddress getInetAddress()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: void setUseClientMode(boolean)> ->_NONE_
<java.net.URLConnection: long getExpiration()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.AbstractSessionContext: java.util.Enumeration getIds()> ->_NONE_
<android.location.Location: void dump(android.util.Printer,java.lang.String)> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: boolean getDoInput()> ->_NONE_
<android.os.Message: void sendToTarget()> ->_NONE_
<org.apache.xpath.objects.DTMXRTreeFrag: org.apache.xpath.XPathContext getXPathContext()> ->_NONE_
<org.apache.harmony.security.x509.GeneralSubtrees: java.util.List getSubtrees()> ->_NONE_
<libcore.io.Posix: int write(java.io.FileDescriptor,java.nio.ByteBuffer)> ->_NONE_
<android.support.v4.view.ViewCompatHC: int getLayerType(android.view.View)> ->_NONE_
<android.net.wifi.NetworkUpdateResult: void setIsNewNetwork(boolean)> ->_NONE_
<javax.xml.transform.dom.DOMResult: void setSystemId(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.ims.PVisitedNetworkID: void setVisitedNetworkID(gov.nist.core.Token)> ->_NONE_
<org.apache.commons.logging.LogSource: void setLogImplementation(java.lang.Class)> ->_NONE_
<android.os.Bundle: char[] getCharArray(java.lang.String)> ->_NONE_
<android.view.KeyEvent: long getEventTimeNano()> ->_NONE_
<org.apache.xpath.functions.FuncNot: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<android.view.GLES20Layer: int getLayer()> ->_NONE_
<android.widget.SimpleExpandableListAdapter: android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)> ->_NONE_
<android.media.videoeditor.MediaArtistNativeHelper: android.graphics.Bitmap getPixels(java.lang.String,int,int,long,int)> ->_NONE_
<java.net.URI: java.lang.String getScheme()> ->_NONE_
<java.util.zip.Deflater: long getBytesWritten()> ->_NONE_
<org.apache.xalan.templates.ElemVariable: void setName(org.apache.xml.utils.QName)> ->_NONE_
<android.location.LocationRequest: long getFastestInterval()> ->_NONE_
<gov.nist.javax.sip.stack.TLSMessageChannel: java.lang.String getPeerProtocol()> ->_NONE_
<android.widget.TextView: float getTextScaleX()> ->_NONE_
<javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()> ->_NONE_
<android.text.StaticLayout: android.text.Layout$Directions getLineDirections(int)> ->_NONE_
<android.media.MediaCodecInfo: java.lang.String[] getSupportedTypes()> ->_NONE_
<org.apache.xpath.XPathContext: void setContextNodeListsStack(java.util.Stack)> ->_NONE_
<android.net.MobileDataStateTracker: android.net.NetworkInfo getNetworkInfo()> ->_NONE_
<libcore.icu.LocaleData: java.lang.String getDateFormat(int)> ->_NONE_
<android.view.GLES20TextureLayer: void setOpaque(boolean)> ->_NONE_
<org.apache.harmony.crypto.internal.NullCipherSpi: byte[] engineUpdate(byte[],int,int)> ->_NONE_
<javax.net.ssl.CertPathTrustManagerParameters: java.security.cert.CertPathParameters getParameters()> ->_NONE_
<org.apache.xalan.templates.DecimalFormatProperties: int getXSLToken()> ->_NONE_
<android.webkit.WebSettingsClassic: void setAllowContentAccess(boolean)> ->_NONE_
<android.hardware.Camera: void setErrorCallback(android.hardware.Camera$ErrorCallback)> ->_NONE_
<android.webkit.WebViewClassic: void setMockGeolocationPermission(boolean)> ->_NONE_
<org.apache.harmony.xml.dom.DocumentImpl: java.lang.String getXmlVersion()> ->_NONE_
<android.webkit.WebSettingsClassic: void syncSettingsAndCreateHandler(android.webkit.BrowserFrame)> ->_NONE_
<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.ElemTemplate getDefaultTextRule()> ->_NONE_
<org.jivesoftware.smack.packet.Presence: org.jivesoftware.smack.packet.Presence$Mode getMode()> ->_NONE_
<javax.crypto.Mac: void update(java.nio.ByteBuffer)> ->_NONE_
<org.apache.xalan.templates.AVT: void setName(java.lang.String)> ->_NONE_
<org.apache.http.params.AbstractHttpParams: int getIntParameter(java.lang.String,int)> ->_NONE_
<android.test.AndroidTestRunner: void setSkipExecution(boolean)> ->_NONE_
<android.animation.KeyframeSet: java.lang.Object getValue(float)> ->_NONE_
<org.apache.xalan.templates.ElemPI: void setName(org.apache.xalan.templates.AVT)> ->_NONE_
<android.media.AudioService: void sendMsg(android.os.Handler,int,int,int,int,java.lang.Object,int)> ->_NONE_
<org.apache.xpath.objects.XObject: int getType()> ->_NONE_
<android.widget.RemoteViews: void setIntent(int,java.lang.String,android.content.Intent)> ->_NONE_
<org.apache.xml.utils.DOMHelper: org.w3c.dom.Element getElementByID(java.lang.String,org.w3c.dom.Document)> ->_NONE_
<java.net.SocketImpl: int getPort()> ->_NONE_
<android.location.LocationRequest: android.location.LocationRequest setFastestInterval(long)> ->_NONE_
<android.os.PerformanceCollector: void startTiming(java.lang.String)> ->_NONE_
<android.widget.BaseExpandableListAdapter: long getCombinedGroupId(long)> ->_NONE_
<android.view.inputmethod.InputMethodSubtype: java.lang.String getExtraValueOf(java.lang.String)> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CRLImpl: java.lang.String getSigAlgName()> ->_NONE_
<org.apache.xalan.templates.ElemLiteralResult: java.lang.String getVersion()> ->_NONE_
<java.security.spec.ECFieldFp: java.math.BigInteger getP()> ->_NONE_
<android.renderscript.ProgramRaster: android.renderscript.ProgramRaster$CullMode getCullMode()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.lang.String getPeerHostName()> ->_NONE_
<org.apache.xalan.templates.TemplateList: java.util.Hashtable getNamedTemplates()> ->_NONE_
<android.media.MediaPlayer: android.media.MediaPlayer$TrackInfo[] getTrackInfo()> ->_NONE_
<android.widget.CursorTreeAdapter: void setFilterQueryProvider(android.widget.FilterQueryProvider)> ->_NONE_
<android.os.Environment: java.lang.String getExternalStorageState()> ->_NONE_
<android.app.Fragment: java.lang.String getString(int,java.lang.Object[])> ->_NONE_
<android.graphics.drawable.LayerDrawable: void setLayerInset(int,int,int,int,int)> ->_NONE_
<android.view.inputmethod.InputMethodInfo: int getIsDefaultResourceId()> ->_NONE_
<gov.nist.javax.sip.message.SIPResponse: void setStatusLine(gov.nist.javax.sip.header.StatusLine)> ->_NONE_
<android.location.LocationRequest: android.location.LocationRequest setProvider(java.lang.String)> ->_NONE_
<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Header getHeader()> ->_NONE_
<android.view.animation.Animation: float getScaleFactor()> ->_NONE_
<org.apache.xpath.axes.NodeSequence: int getAxis()> ->_NONE_
<libcore.io.IoUtils: void setBlocking(java.io.FileDescriptor,boolean)> ->_NONE_
<gov.nist.javax.sip.header.Priority: void setPriority(java.lang.String)> ->_NONE_
<android.telephony.TelephonyManager: java.lang.String getSimCountryIso()> ->_NONE_
<org.jivesoftware.smack.packet.Presence: void setAvatarHash(java.lang.String)> ->_NONE_
<android.net.http.HttpAuthHeader: java.lang.String parseScheme(java.lang.String)> ->_NONE_
<android.widget.Spinner: int getGravity()> ->_NONE_
<android.inputmethodservice.InputMethodService: void onExtractedReplaceText(int,int,java.lang.CharSequence)> ->_NONE_
<org.apache.harmony.security.x509.Validity: java.util.Date getNotBefore()> ->_NONE_
<org.apache.xalan.transformer.TransformerHandlerImpl: void startPrefixMapping(java.lang.String,java.lang.String)> ->_NONE_
<android.media.videoeditor.AudioTrack: java.lang.String getAudioWaveformFilename()> ->_NONE_
<org.apache.xalan.templates.ElemChoose: void execute(org.apache.xalan.transformer.TransformerImpl)> ->_NONE_
<org.kxml2.io.KXmlParser: java.lang.String getInputEncoding()> ->_NONE_
<java.util.concurrent.ConcurrentSkipListMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)> ->_NONE_
<android.drm.DrmInfoRequest: int getInfoType()> ->_NONE_
<android.webkit.CallbackProxy: boolean uiOverrideUrlLoading(java.lang.String)> ->_NONE_
<android.net.LocalServerSocket: java.io.FileDescriptor getFileDescriptor()> ->_NONE_
<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal getIssuer()> ->_NONE_
<java.net.DatagramSocket: java.net.SocketAddress getLocalSocketAddress()> ->_NONE_
<org.apache.xalan.templates.ElemSort: void setLang(org.apache.xalan.templates.AVT)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean: void setParent(java.lang.Object,android.view.View,int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: void setWantClientAuth(boolean)> ->_NONE_
<android.graphics.Canvas: void drawTextRun(char[],int,int,int,int,float,float,int,android.graphics.Paint)> ->_NONE_
<java.text.DecimalFormatSymbols: void setZeroDigit(char)> ->_NONE_
<android.webkit.CallbackProxy: void onReceivedCertificate(android.net.http.SslCertificate)> ->_NONE_
<android.widget.TabHost: android.widget.FrameLayout getTabContentView()> ->_NONE_
<org.apache.xalan.templates.StylesheetRoot: void setTemplateListComposed(org.apache.xalan.templates.TemplateList)> ->_NONE_
<android.support.v4.app.FragmentManagerImpl: boolean popBackStackImmediate(java.lang.String,int)> ->_NONE_
<android.app.BackStackRecord: int getBreadCrumbTitleRes()> ->_NONE_
<android.database.sqlite.SQLiteGlobal: java.lang.String getDefaultJournalMode()> ->_NONE_
<android.view.MotionEvent: void setTainted(boolean)> ->_NONE_
<android.filterfw.core.GLFrame: android.graphics.Bitmap getBitmap()> ->_NONE_
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()> ->_NONE_
<java.nio.DirectByteBuffer: java.nio.ByteBuffer get(byte[],int,int)> ->_NONE_
<android.preference.PreferenceGroupAdapter: int getViewTypeCount()> ->_NONE_
<android.graphics.Path: void setFillType(android.graphics.Path$FillType)> ->_NONE_
<android.server.search.Searchables: java.util.ArrayList getGlobalSearchActivities()> ->_NONE_
<android.content.pm.UserInfo: android.os.UserHandle getUserHandle()> ->_NONE_
<org.jivesoftware.smack.PacketWriter: int getPacketListenerCount()> ->_NONE_
<java.util.zip.Deflater: int getTotalIn()> ->_NONE_
<android.database.CursorToBulkCursorAdaptor: android.os.Bundle getExtras()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.DOMConfiguration getDomConfig()> ->_NONE_
<java.text.DecimalFormatSymbols: char getPatternSeparator()> ->_NONE_
<java.text.FieldPosition: java.text.Format$Field getFieldAttribute()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: java.lang.CharSequence getBeforeText(java.lang.Object)> ->_NONE_
<org.apache.xml.dtm.ref.IncrementalSAXSource_Filter: void setDTDHandler(org.xml.sax.DTDHandler)> ->_NONE_
<org.apache.commons.io.output.ProxyOutputStream: void write(byte[],int,int)> ->_NONE_
<javax.xml.xpath.XPathFactoryFinder: void debugPrintln(java.lang.String)> ->_NONE_
<android.webkit.WebSettingsClassic: java.lang.String getSansSerifFontFamily()> ->_NONE_
<gov.nist.javax.sip.parser.AcceptEncodingParser: gov.nist.javax.sip.header.SIPHeader parse()> ->_NONE_
<android.database.AbstractCursor: java.lang.Object getUpdatedField(int)> ->_NONE_
<java.text.DateFormat: java.util.TimeZone getTimeZone()> ->_NONE_
<org.xml.sax.helpers.XMLReaderAdapter: void setErrorHandler(org.xml.sax.ErrorHandler)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey: java.math.BigInteger getPrimeP()> ->_NONE_
<android.view.ViewConfiguration: int getScaledDoubleTapTouchSlop()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey: java.math.BigInteger getPrimeQ()> ->_NONE_
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry)> ->_NONE_
<java.util.concurrent.ThreadPoolExecutor: int getActiveCount()> ->_NONE_
<org.apache.xalan.processor.XSLTElementDef: void setType(int)> ->_NONE_
<android.view.View: float getTopFadingEdgeStrength()> ->_NONE_
<android.support.v4.app.Fragment: void setTargetFragment(android.support.v4.app.Fragment,int)> ->_NONE_
<org.apache.harmony.xml.dom.EntityImpl: java.lang.String getSystemId()> ->_NONE_
<android.text.SpannableStringBuilder: float getTextRunAdvances(int,int,int,int,int,float[],int,android.graphics.Paint)> ->_NONE_
<gov.nist.javax.sip.address.SipUri: java.lang.String getTransportParam()> ->_NONE_
<android.database.BulkCursorToCursorAdaptor: android.os.Bundle getExtras()> ->_NONE_
<javax.security.cert.X509Certificate: javax.security.cert.X509Certificate getInstance(java.io.InputStream)> ->_NONE_
<android.app.admin.DevicePolicyManager: void setMaximumFailedPasswordsForWipe(android.content.ComponentName,int)> ->_NONE_
<java.lang.reflect.Field: void setInt(java.lang.Object,int)> ->_NONE_
<android.net.http.Headers: void setLastModified(java.lang.String)> ->_NONE_
<android.content.ContextWrapper: android.content.res.Resources$Theme getTheme()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: int getSendBufferSize()> ->_NONE_
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)> ->_NONE_
<android.net.DhcpInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.james.mime4j.message.Multipart: void setSubType(java.lang.String)> ->_NONE_
<android.view.View: android.view.TouchDelegate getTouchDelegate()> ->_NONE_
<java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)> ->_NONE_
<android.support.v4.app.Fragment: android.view.View getView()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: void setOriginalRequest(gov.nist.javax.sip.message.SIPRequest)> ->_NONE_
<java.net.MulticastSocket: void setTimeToLive(int)> ->_NONE_
<gov.nist.javax.sip.header.SIPHeader: java.lang.String getName()> ->_NONE_
<javax.xml.transform.dom.DOMSource: void setNode(org.w3c.dom.Node)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getPackageName()> ->_NONE_
<org.apache.xml.utils.UnImplNode: java.lang.String getActualEncoding()> ->_NONE_
<android.widget.ActivityChooserView: void setDefaultActionButtonContentDescription(int)> ->_NONE_
<android.content.res.Resources: void updateSystemConfiguration(android.content.res.Configuration,android.util.DisplayMetrics,android.content.res.CompatibilityInfo)> ->_NONE_
<android.support.v4.app.TaskStackBuilder: int getIntentCount()> ->_NONE_
<android.nfc.tech.MifareClassic: int getMaxTransceiveLength()> ->_NONE_
<android.widget.TextView: void setMaxLines(int)> ->_NONE_
<android.widget.GridLayout: int getOrientation()> ->_NONE_
<org.apache.harmony.xml.ExpatAttributes: java.lang.String getType(int)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getAttributeNode(int,java.lang.String,java.lang.String)> ->_NONE_
<android.bluetooth.BluetoothTetheringDataTracker: android.bluetooth.BluetoothTetheringDataTracker getInstance()> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertImpl: java.util.Collection getIssuerAlternativeNames()> ->_NONE_
<java.util.Locale: java.lang.String getISO3Country()> ->_NONE_
<android.graphics.Bitmap: int[] getLayoutBounds()> ->_NONE_
<android.renderscript.Script: void setVar(int,int)> ->_NONE_
<org.apache.harmony.xml.parsers.SAXParserImpl: java.lang.Object getProperty(java.lang.String)> ->_NONE_
<android.view.CompatibilityInfoHolder: android.content.res.CompatibilityInfo get()> ->_NONE_
<gov.nist.javax.sip.header.RouteList: java.lang.String encode()> ->_NONE_
<java.net.Socket: java.net.SocketAddress getRemoteSocketAddress()> ->_NONE_
<org.apache.harmony.security.x509.OtherName: byte[] getEncoded()> ->_NONE_
<org.apache.harmony.security.PrivateKeyImpl: byte[] getEncoded()> ->_NONE_
<android.view.Surface: void setSize(int,int)> ->_NONE_
<android.text.TextLine: float measureRun(int,int,int,boolean,android.graphics.Paint$FontMetricsInt)> ->_NONE_
<javax.sip.TransactionTerminatedEvent: javax.sip.ServerTransaction getServerTransaction()> ->_NONE_
<android.content.ContentProviderResult: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<libcore.io.EventLogger: void setReporter(libcore.io.EventLogger$Reporter)> ->_NONE_
<android.view.InputDevice: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.harmony.security.x509.DistributionPoint: void dumpValue(java.lang.StringBuilder,java.lang.String)> ->_NONE_
<android.widget.AbsListView: android.graphics.drawable.Drawable getSelector()> ->_NONE_
<org.apache.xalan.templates.ElemExtensionDecl: void setElements(org.apache.xml.utils.StringVector)> ->_NONE_
<android.support.v4.content.LocalBroadcastManager: boolean sendBroadcast(android.content.Intent)> ->_NONE_
<android.os.Broadcaster: void broadcast(android.os.Message)> ->_NONE_
<android.test.InstrumentationTestCase: void sendKeys(int[])> ->_NONE_
<gov.nist.javax.sip.message.SIPRequest: java.lang.String debugDump()> ->_NONE_
<android.location.GpsSatellite: int getPrn()> ->_NONE_
<android.media.videoeditor.TransitionAlpha: java.lang.String getPNGMaskFilename()> ->_NONE_
<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: org.apache.http.HttpEntity getEntity()> ->_NONE_
<android.net.wifi.p2p.WifiP2pManager: void discoverPeers(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ActionListener)> ->_NONE_
<android.net.InterfaceConfiguration: android.net.LinkAddress getLinkAddress()> ->_NONE_
<org.apache.xalan.templates.ElemAttributeSet: int getXSLToken()> ->_NONE_
<android.net.NetworkInfo: java.lang.String getExtraInfo()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.NativeCrypto: java.lang.String[] getDefaultCipherSuites()> ->_NONE_
<android.renderscript.Allocation: android.renderscript.Element getElement()> ->_NONE_
<android.os.StatFs: int getAvailableBlocks()> ->_NONE_
<android.widget.TabHost: void sendAccessibilityEvent(int)> ->_NONE_
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.String)> ->_NONE_
<android.app.Instrumentation: android.content.Context getTargetContext()> ->_NONE_
<org.jivesoftware.smackx.ServiceDiscoveryManager: java.lang.String getIdentityName()> ->_NONE_
<org.apache.xml.utils.URI: java.lang.String getPath()> ->_NONE_
<android.app.Activity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)> ->_NONE_
<android.net.LocalServerSocket: android.net.LocalSocketAddress getLocalSocketAddress()> ->_NONE_
<android.widget.NumberPicker: int getSelectedPos(java.lang.String)> ->_NONE_
<java.nio.HeapByteBuffer: void get(int[],int,int)> ->_NONE_
<android.net.wifi.WifiApConfigStore: void loadApConfiguration()> ->_NONE_
<org.apache.harmony.xml.dom.CharacterDataImpl: java.lang.String getData()> ->_NONE_
<android.webkit.WebViewClassic: android.webkit.WebViewProvider$ViewDelegate getViewDelegate()> ->_NONE_
<android.app.Instrumentation: android.content.ComponentName getComponentName()> ->_NONE_
<android.support.v4.content.CursorLoader: java.lang.String[] getProjection()> ->_NONE_
<org.apache.xpath.operations.Variable: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<org.apache.xalan.transformer.TransformerIdentityImpl: javax.xml.transform.ErrorListener getErrorListener()> ->_NONE_
<javax.xml.transform.TransformerException: java.lang.String getMessageAndLocation()> ->_NONE_
<android.app.ActivityManagerProxy: boolean bindBackupAgent(android.content.pm.ApplicationInfo,int)> ->_NONE_
<java.net.PlainSocketImpl: void connect(java.net.InetAddress,int,int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPublicKey: java.math.BigInteger getModulus()> ->_NONE_
<android.view.inputmethod.BaseInputConnection: boolean sendKeyEvent(android.view.KeyEvent)> ->_NONE_
<android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()> ->_NONE_
<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.BlockingQueue getQueue()> ->_NONE_
<android.support.v4.app.TaskStackBuilderHoneycomb: android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int)> ->_NONE_
<android.media.audiofx.EnvironmentalReverb: short getReflectionsLevel()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: boolean getXmlStandalone()> ->_NONE_
<javax.crypto.Mac: void update(byte)> ->_NONE_
<android.app.admin.DevicePolicyManager: void setPasswordMinimumLength(android.content.ComponentName,int)> ->_NONE_
<android.telephony.TelephonyManager: java.lang.String getCompleteVoiceMailNumber()> ->_NONE_
<android.speech.srec.WaveHeader: android.speech.srec.WaveHeader setSampleRate(int)> ->_NONE_
<gov.nist.javax.sip.stack.TCPMessageChannel: java.lang.String getKey()> ->_NONE_
<android.view.GLES20Canvas: int getMaximumBitmapWidth()> ->_NONE_
<android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: int getLength()> ->_NONE_
<android.text.format.Time: int getJulianMondayFromWeeksSinceEpoch(int)> ->_NONE_
<org.apache.harmony.security.x509.Certificate: org.apache.harmony.security.x509.TBSCertificate getTbsCertificate()> ->_NONE_
<android.renderscript.ProgramVertex: android.renderscript.Element getInput(int)> ->_NONE_
<libcore.net.http.RawHeaders: java.lang.String getResponseMessage()> ->_NONE_
<java.util.zip.ZipEntry: void setTime(long)> ->_NONE_
<javax.xml.validation.SchemaFactoryFinder: javax.xml.validation.SchemaFactory _newFactory(java.lang.String)> ->_NONE_
<java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String)> ->_NONE_
<android.view.PointerIcon: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.content.BroadcastReceiver: int getResultCode()> ->_NONE_
<org.apache.xpath.XPath: void setExpression(org.apache.xpath.Expression)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: int getAttributeNode(int,java.lang.String,java.lang.String)> ->_NONE_
<android.test.TouchUtils: void longClickView(android.test.InstrumentationTestCase,android.view.View)> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: org.xml.sax.EntityResolver getEntityResolver()> ->_NONE_
<android.os.Environment: java.io.File getDataDirectory()> ->_NONE_
<java.io.ObjectInputStream: int read()> ->_NONE_
<java.util.concurrent.atomic.AtomicMarkableReference: java.lang.Object get(boolean[])> ->_NONE_
<android.util.MonthDisplayHelper: int getFirstDayOfMonth()> ->_NONE_
<gov.nist.javax.sip.stack.TCPMessageChannel: void sendMessage(byte[],java.net.InetAddress,int,boolean)> ->_NONE_
<android.drm.DrmInfo: byte[] getData()> ->_NONE_
<gov.nist.javax.sip.header.Contact: javax.sip.address.Address getAddress()> ->_NONE_
<gov.nist.core.HostNameParser: void main(java.lang.String[])> ->_NONE_
<android.app.ApplicationThreadProxy: android.os.Debug$MemoryInfo dumpMemInfo(java.io.FileDescriptor,boolean,boolean,java.lang.String[])> ->_NONE_
<android.location.Address: void setLongitude(double)> ->_NONE_
<android.view.accessibility.AccessibilityEvent: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<net.oauth.signature.OAuthSignatureMethod: java.lang.String getConsumerSecret()> ->_NONE_
<org.apache.http.impl.io.ChunkedInputStream: int read(byte[],int,int)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: void setImport(org.apache.xalan.templates.StylesheetComposed)> ->_NONE_
<org.apache.xpath.compiler.OpMap: int getNextStepPos(int)> ->_NONE_
<gov.nist.javax.sip.header.ims.AddressHeaderIms: void setAddress(javax.sip.address.Address)> ->_NONE_
<android.test.ServiceTestCase: android.app.Service getService()> ->_NONE_
<android.app.ActivityOptions: int getStartWidth()> ->_NONE_
<org.apache.xalan.templates.ElemTextLiteral: java.lang.String getNodeValue()> ->_NONE_
<android.bluetooth.BluetoothSocket: int getSecurityFlags()> ->_NONE_
<android.telephony.cdma.CdmaSmsCbProgramResults: int getCategory()> ->_NONE_
<org.jivesoftware.smack.XMPPConnection: org.jivesoftware.smack.packet.HeartbeatConfig getHeartbeatConfig()> ->_NONE_
<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener getErrorListener()> ->_NONE_
<android.media.ExifInterface: boolean getLatLong(float[])> ->_NONE_
<org.jivesoftware.smack.packet.Packet: long getAccountId()> ->_NONE_
<org.ccil.cowan.tagsoup.AttributesImpl: void setValue(int,java.lang.String)> ->_NONE_
<android.view.MotionEvent: float getOrientation()> ->_NONE_
<android.view.View: int getWindowSystemUiVisibility()> ->_NONE_
<android.view.WindowManagerGlobal: void setStoppedState(android.os.IBinder,boolean)> ->_NONE_
<java.util.zip.ZipEntry: long getCrc()> ->_NONE_
<android.widget.ExpandableListView: void setChildDivider(android.graphics.drawable.Drawable)> ->_NONE_
<android.test.mock.MockPackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int)> ->_NONE_
<android.text.style.ReplacementSpan: void updateDrawState(android.text.TextPaint)> ->_NONE_
<android.provider.Settings: java.lang.String getGTalkDeviceId(long)> ->_NONE_
<android.text.util.Rfc822Token: java.lang.String getComment()> ->_NONE_
<java.sql.DataTruncation: int getIndex()> ->_NONE_
<java.util.concurrent.LinkedTransferQueue: void writeObject(java.io.ObjectOutputStream)> ->_NONE_
<org.apache.harmony.xml.dom.DOMErrorImpl: java.lang.Object getRelatedData()> ->_NONE_
<android.telephony.SmsCbEtwsInfo: long getPrimaryNotificationTimestamp()> ->_NONE_
<android.view.View: void setDisabledSystemUiVisibility(int)> ->_NONE_
<android.telephony.cdma.CdmaSmsCbProgramData: int getCategory()> ->_NONE_
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getDescription()> ->_NONE_
<android.os.Looper: void setMessageLogging(android.util.Printer)> ->_NONE_
<android.webkit.WebSettingsClassic: void setProperty(java.lang.String,java.lang.String)> ->_NONE_
<java.lang.ClassLoader: void setPackageAssertionStatus(java.lang.String,boolean)> ->_NONE_
<android.test.InstrumentationTestRunner: boolean getBooleanArgument(android.os.Bundle,java.lang.String)> ->_NONE_
<org.apache.http.auth.AuthState: void setAuthScope(org.apache.http.auth.AuthScope)> ->_NONE_
<gov.nist.javax.sip.ListeningPointImpl: int getPort()> ->_NONE_
<android.content.pm.PackageParser: android.content.pm.PackageParser$Package parsePackage(java.io.File,java.lang.String,android.util.DisplayMetrics,int)> ->_NONE_
<android.os.Environment: java.io.File getEmulatedStorageObbSource()> ->_NONE_
<java.security.cert.X509CRLSelector: java.util.Collection getIssuers()> ->_NONE_
<javax.xml.parsers.SAXParserFactory: void setXIncludeAware(boolean)> ->_NONE_
<java.util.GregorianCalendar: void setTimeZone(java.util.TimeZone)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: void setHeader(javax.sip.header.Header)> ->_NONE_
<android.preference.PreferenceGroupAdapter: int getItemViewType(int)> ->_NONE_
<android.filterpacks.imageproc.SharpenFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: int getAttributeSetCount()> ->_NONE_
<gov.nist.javax.sip.parser.EventParser: gov.nist.javax.sip.header.SIPHeader parse()> ->_NONE_
<android.hardware.usb.UsbAccessory: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<gov.nist.javax.sip.SipProviderImpl: void sendRequest(javax.sip.message.Request)> ->_NONE_
<org.jivesoftware.smack.GoogleExtensions: boolean getSupportExtendedContactAttribute()> ->_NONE_
<org.apache.xml.serializer.dom3.DOMOutputImpl: void setByteStream(java.io.OutputStream)> ->_NONE_
<android.view.View: java.lang.CharSequence getContentDescription()> ->_NONE_
<android.telephony.CellBroadcastMessage: int getSerialNumber()> ->_NONE_
<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.util.Collection)> ->_NONE_
<android.filterfw.core.KeyValueMap: java.lang.String getString(java.lang.String)> ->_NONE_
<android.view.inputmethod.InputConnectionWrapper: int getCursorCapsMode(int)> ->_NONE_
<gov.nist.javax.sip.address.NetObject: java.lang.String debugDump()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.ClientHello: void send(org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: boolean getTcpNoDelay()> ->_NONE_
<android.app.admin.DeviceAdminInfo: java.lang.String getPackageName()> ->_NONE_
<android.opengl.GLLogWrapper: int getIntegerStateSize(int)> ->_NONE_
<android.content.res.Resources: java.lang.String getResourceTypeName(int)> ->_NONE_
<android.net.http.Connection: void setCanPersist(boolean)> ->_NONE_
<android.filterfw.core.Frame: void setData(byte[],int,int)> ->_NONE_
<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()> ->_NONE_
<android.net.WebAddress: void setAuthInfo(java.lang.String)> ->_NONE_
<android.webkit.WebViewCore: void saveViewState(java.io.OutputStream,android.webkit.ValueCallback)> ->_NONE_
<android.app.ActivityManagerProxy: boolean isUserRunning(int,boolean)> ->_NONE_
<java.util.regex.Matcher: java.lang.String quoteReplacement(java.lang.String)> ->_NONE_
<android.nfc.NdefRecord: byte[] getType()> ->_NONE_
<android.view.FocusFinder: android.view.View getPreviousFocusable(android.view.View,java.util.ArrayList,int)> ->_NONE_
<android.webkit.WebViewClassic: float getTextScrollSpeed(int,int,int)> ->_NONE_
<org.apache.xpath.jaxp.XPathFactoryImpl: void setFeature(java.lang.String,boolean)> ->_NONE_
<android.view.ViewConfiguration: int getWindowTouchSlop()> ->_NONE_
<org.apache.commons.io.output.ProxyWriter: void write(char[],int,int)> ->_NONE_
<android.net.sip.SipProfile: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.view.MotionEvent: float getHistoricalX(int,int)> ->_NONE_
<libcore.net.http.ResponseHeaders: int getSMaxAgeSeconds()> ->_NONE_
<android.text.method.DigitsKeyListener: int getInputType()> ->_NONE_
<gov.nist.javax.sip.address.AddressImpl: void setURI(javax.sip.address.URI)> ->_NONE_
<android.view.MotionEvent: float getHistoricalY(int,int)> ->_NONE_
<org.apache.xalan.templates.ElemTextLiteral: boolean getPreserveSpace()> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationHeader: void setAlgorithm(java.lang.String)> ->_NONE_
<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)> ->_NONE_
<android.filterfw.core.VertexFrame: void setInts(int[])> ->_NONE_
<android.bluetooth.BluetoothHeadset: boolean rejectIncomingConnect(android.bluetooth.BluetoothDevice)> ->_NONE_
<java.text.DecimalFormat: java.util.Currency getCurrency()> ->_NONE_
<android.widget.TextSwitcher: void setCurrentText(java.lang.CharSequence)> ->_NONE_
<org.apache.xalan.templates.ElemParam: java.lang.String getNodeName()> ->_NONE_
<android.content.ContextWrapper: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)> ->_NONE_
<dalvik.system.profiler.HprofBinaryToAscii: void usage(java.lang.String)> ->_NONE_
<android.telephony.gsm.SmsMessage: long getTimestampMillis()> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: int getReadTimeout()> ->_NONE_
<android.graphics.drawable.NinePatchDrawable: int getIntrinsicHeight()> ->_NONE_
<android.os.storage.StorageVolume: int getMtpReserveSpace()> ->_NONE_
<android.view.ViewConfiguration: int getPressedStateDuration()> ->_NONE_
<android.webkit.WebSettingsClassic: android.webkit.WebSettings$PluginState getPluginState()> ->_NONE_
<android.net.http.Headers: java.lang.String getLocation()> ->_NONE_
<gov.nist.javax.sip.header.TimeStamp: java.lang.String getDelayAsString()> ->_NONE_
<android.media.videoeditor.MediaArtistNativeHelper: void setAudioCodec(int)> ->_NONE_
<android.graphics.drawable.NinePatchDrawable: void setColorFilter(android.graphics.ColorFilter)> ->_NONE_
<android.text.method.CharacterPickerDialog: void replaceCharacterAndClose(java.lang.CharSequence)> ->_NONE_
<java.util.concurrent.ForkJoinPool: int getActiveThreadCount()> ->_NONE_
<android.webkit.DeviceMotionService: void stopSendingUpdates()> ->_NONE_
<android.graphics.drawable.ClipDrawable: void setColorFilter(android.graphics.ColorFilter)> ->_NONE_
<jp.co.omronsoft.openwnn.EN.OpenWnnEngineEN: jp.co.omronsoft.openwnn.WnnWord[] getUserDictionaryWords()> ->_NONE_
<org.apache.xalan.templates.OutputProperties: org.apache.xml.utils.QName getQNameProperty(org.apache.xml.utils.QName)> ->_NONE_
<org.apache.xalan.templates.ElemNumber: void setValue(org.apache.xpath.XPath)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.KeyManagerImpl: java.security.PrivateKey getPrivateKey(java.lang.String)> ->_NONE_
<android.telephony.CellIdentityCdma: int getLongitude()> ->_NONE_
<android.media.audiofx.AudioEffect: boolean getEnabled()> ->_NONE_
<android.webkit.WebSettingsClassic: void setSerifFontFamily(java.lang.String)> ->_NONE_
<android.speech.tts.TextToSpeech: boolean connectToEngine(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.SIPDate: int getDeltaSeconds()> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.FromHeader getFrom()> ->_NONE_
<org.apache.http.impl.client.DefaultRequestDirector: boolean createTunnelToTarget(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext)> ->_NONE_
<gov.nist.javax.sip.message.SIPRequest: java.lang.String getCannonicalName(java.lang.String)> ->_NONE_
<android.graphics.drawable.Drawable: int getChangingConfigurations()> ->_NONE_
<org.apache.xpath.patterns.NodeTest: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<java.util.Currency: java.util.Currency getInstance(java.lang.String)> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager createClientConnectionManager()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLCipherRSA: int engineUpdate(byte[],int,int,byte[],int)> ->_NONE_
<android.content.SyncStorageEngine: void setSyncAutomatically(android.accounts.Account,int,java.lang.String,boolean)> ->_NONE_
<android.database.sqlite.SQLiteDatabase: long getMaximumSize()> ->_NONE_
<android.webkit.WebViewFactory: android.webkit.WebViewFactoryProvider getProvider()> ->_NONE_
<android.app.Activity: void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View)> ->_NONE_
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object)> ->_NONE_
<android.graphics.drawable.GradientDrawable: void setOrientation(android.graphics.drawable.GradientDrawable$Orientation)> ->_NONE_
<android.hardware.GeomagneticField: float getFieldStrength()> ->_NONE_
<java.text.DateFormat: java.text.DateFormat getDateInstance(int)> ->_NONE_
<java.security.cert.PKIXParameters: void setCertStores(java.util.List)> ->_NONE_
<org.apache.http.impl.HttpConnectionMetricsImpl: long getReceivedBytesCount()> ->_NONE_
<org.jivesoftware.smack.ConnectionConfiguration: java.lang.String getTruststorePath()> ->_NONE_
<android.media.videoeditor.MediaVideoItem: java.lang.String getAudioWaveformFilename()> ->_NONE_
<org.apache.commons.io.input.NullInputStream: long getPosition()> ->_NONE_
<java.util.Calendar: void setTime(java.util.Date)> ->_NONE_
<android.content.Intent: void setExtrasClassLoader(java.lang.ClassLoader)> ->_NONE_
<gov.nist.javax.sip.header.extensions.References: void setCallId(java.lang.String)> ->_NONE_
<android.gesture.GestureLibrary: int getOrientationStyle()> ->_NONE_
<android.telephony.gsm.SmsMessage: byte[] getUserData()> ->_NONE_
<gov.nist.javax.sip.header.ims.SecurityAgree: int getPortServer()> ->_NONE_
<org.jivesoftware.smack.util.Cache: java.lang.Object get(java.lang.Object)> ->_NONE_
<android.widget.TextView: void setHint(java.lang.CharSequence)> ->_NONE_
<java.lang.reflect.Field: java.lang.annotation.Annotation[] getDeclaredAnnotations()> ->_NONE_
<org.apache.xml.dtm.DTMManager: int getNodeIdentityMask()> ->_NONE_
<org.apache.http.impl.cookie.BasicClientCookie: void setDomain(java.lang.String)> ->_NONE_
<android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat: java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo)> ->_NONE_
<dalvik.system.profiler.AsciiHprofWriter: void write(dalvik.system.profiler.HprofData,java.io.OutputStream)> ->_NONE_
<android.bluetooth.BluetoothHeadset: java.util.List getConnectedDevices()> ->_NONE_
<gov.nist.javax.sip.header.CSeq: int getSequenceNumber()> ->_NONE_
<android.util.JsonReader: java.lang.CharSequence getSnippet()> ->_NONE_
<android.view.GLES20Canvas: void setViewport(int,int)> ->_NONE_
<android.content.SyncResult: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.util.JsonReader: void replaceTop(android.util.JsonScope)> ->_NONE_
<org.apache.http.impl.client.DefaultProxyAuthenticationHandler: java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)> ->_NONE_
<android.view.animation.Animation: void setRepeatMode(int)> ->_NONE_
<org.apache.xalan.xslt.SecuritySupport: java.lang.ClassLoader getContextClassLoader()> ->_NONE_
<java.util.SimpleTimeZone: void setStartRule(int,int,int,int)> ->_NONE_
<android.text.Layout: void getCursorPath(int,android.graphics.Path,java.lang.CharSequence)> ->_NONE_
<org.apache.xml.serializer.ToTextStream: void cdata(char[],int,int)> ->_NONE_
<org.apache.harmony.security.x509.CRLDistributionPoints: byte[] getEncoded()> ->_NONE_
<android.app.Presentation: android.view.Display getDisplay()> ->_NONE_
<org.kxml2.io.KXmlParser: void readInternalSubset()> ->_NONE_
<android.content.AsyncTaskLoader: void setUpdateThrottle(long)> ->_NONE_
<org.apache.harmony.security.x501.Name: java.lang.String getName0(java.lang.String)> ->_NONE_
<android.webkit.WebView: float getScale()> ->_NONE_
<android.hardware.usb.UsbInterface: int getInterfaceProtocol()> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: void setProxyAuthenticationHandler(org.apache.http.client.AuthenticationHandler)> ->_NONE_
<javax.microedition.khronos.egl.EGLContext: javax.microedition.khronos.egl.EGL getEGL()> ->_NONE_
<org.apache.xalan.templates.ElemExtensionCall: java.lang.String getAttribute(java.lang.String,org.w3c.dom.Node,org.apache.xalan.transformer.TransformerImpl)> ->_NONE_
<org.apache.commons.io.output.DeferredFileOutputStream: java.io.File getFile()> ->_NONE_
<android.opengl.GLSurfaceView: void setRenderer(android.opengl.GLSurfaceView$Renderer)> ->_NONE_
<java.nio.LongArrayBuffer: long get()> ->_NONE_
<android.content.pm.PackageParser: int getParseError()> ->_NONE_
<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.impl.client.RoutedRequest handleResponse(org.apache.http.impl.client.RoutedRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)> ->_NONE_
<android.speech.tts.SynthesisRequest: android.os.Bundle getParams()> ->_NONE_
<org.apache.commons.logging.impl.SimpleLog: void setLevel(int)> ->_NONE_
<android.media.audiofx.Equalizer: java.lang.String getPresetName(short)> ->_NONE_
<org.apache.xpath.functions.FuncPosition: int getPositionInContextNodeList(org.apache.xpath.XPathContext)> ->_NONE_
<android.preference.Preference: void setFragment(java.lang.String)> ->_NONE_
<android.graphics.RectF: void set(android.graphics.Rect)> ->_NONE_
<java.net.Socket: boolean getTcpNoDelay()> ->_NONE_
<org.apache.http.impl.auth.RFC2617Scheme: java.lang.String getParameter(java.lang.String)> ->_NONE_
<javax.crypto.CipherInputStream: int read()> ->_NONE_
<org.apache.xalan.xslt.SecuritySupport: boolean getFileExists(java.io.File)> ->_NONE_
<android.content.ContentResolver: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)> ->_NONE_
<android.text.Layout: java.lang.CharSequence getText()> ->_NONE_
<android.telephony.SmsMessage: java.lang.String getDisplayOriginatingAddress()> ->_NONE_
<org.apache.xml.utils.DOMHelper: java.lang.String getUniqueID(org.w3c.dom.Node)> ->_NONE_
<org.apache.xalan.templates.ElemTemplate: double getPriority()> ->_NONE_
<java.security.cert.X509CertSelector: byte[] getSubjectKeyIdentifier()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: java.lang.String[] getSupportedCipherSuites()> ->_NONE_
<android.webkit.WebSettingsClassic: java.lang.String getSerifFontFamily()> ->_NONE_
<javax.net.ssl.SSLParameters: boolean getNeedClientAuth()> ->_NONE_
<android.net.DummyDataStateTracker: void setPolicyDataEnable(boolean)> ->_NONE_
<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int getLast()> ->_NONE_
<android.hardware.usb.UsbDevice: android.hardware.usb.UsbInterface getInterface(int)> ->_NONE_
<android.view.GLES20Canvas: void drawTextRun(java.lang.CharSequence,int,int,int,int,float,float,int,android.graphics.Paint)> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: java.lang.String getNodeValue(int)> ->_NONE_
<android.telephony.ServiceState: int getCdmaRoamingIndicator()> ->_NONE_
<android.webkit.ZoomControlExternal: android.webkit.ZoomControlExternal$ExtendedZoomControls createZoomControls()> ->_NONE_
<org.apache.http.HttpHost: int getPort()> ->_NONE_
<android.widget.FastScroller: android.widget.SectionIndexer getSectionIndexer()> ->_NONE_
<org.apache.xalan.templates.ElemExtensionDecl: org.apache.xml.utils.StringVector getElements()> ->_NONE_
<android.media.AudioManager: int setBluetoothA2dpDeviceConnectionState(android.bluetooth.BluetoothDevice,int)> ->_NONE_
<org.apache.harmony.security.PublicKeyImpl: byte[] getEncoded()> ->_NONE_
<java.nio.charset.CharsetDecoderICU: int getArray(java.nio.ByteBuffer)> ->_NONE_
<android.database.BulkCursorToCursorAdaptor: int getCount()> ->_NONE_
<java.util.UnknownFormatFlagsException: java.lang.String getFlags()> ->_NONE_
<jp.co.omronsoft.openwnn.OpenWnn: void setCandidatesViewShown(boolean)> ->_NONE_
<android.database.BulkCursorDescriptor: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.net.LocalSocket: java.io.FileDescriptor getFileDescriptor()> ->_NONE_
<android.net.wifi.WifiApConfigStore: android.os.Messenger getMessenger()> ->_NONE_
<android.media.videoeditor.MediaArtistNativeHelper: boolean getGeneratePreview()> ->_NONE_
<android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs: java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo)> ->_NONE_
<android.content.pm.PackageItemInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.content.res.AssetManager: java.lang.String[] getResourceStringArray(int)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setScrollY(int)> ->_NONE_
<android.database.DatabaseUtils: int getSqlStatementType(java.lang.String)> ->_NONE_
<org.jivesoftware.smack.packet.Presence: void setClientType(org.jivesoftware.smack.packet.Presence$ClientType)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setScrollX(int)> ->_NONE_
<java.security.cert.PKIXBuilderParameters: int getMaxPathLength()> ->_NONE_
<android.text.Layout: int getOffsetToLeftOf(int)> ->_NONE_
<java.nio.ShortArrayBuffer: short get()> ->_NONE_
<android.media.MediaPlayer: boolean setParameter(int,java.lang.String)> ->_NONE_
<android.media.AudioManager: void setRouting(int,int,int)> ->_NONE_
<gov.nist.javax.sip.header.Via: void setHost(gov.nist.core.Host)> ->_NONE_
<javax.xml.validation.SchemaFactory: void setProperty(java.lang.String,java.lang.Object)> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: void setModified(boolean)> ->_NONE_
<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)> ->_NONE_
<android.test.SimpleCache: java.lang.Object get(java.lang.Object)> ->_NONE_
<org.ccil.cowan.tagsoup.Parser: org.xml.sax.DTDHandler getDTDHandler()> ->_NONE_
<android.renderscript.Allocation: android.renderscript.Type getType()> ->_NONE_
<android.util.JsonWriter: android.util.JsonWriter value(long)> ->_NONE_
<org.apache.commons.io.input.CountingInputStream: int getCount()> ->_NONE_
<org.apache.james.mime4j.field.DateTimeField: java.util.Date getDate()> ->_NONE_
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: int getTransactionId()> ->_NONE_
<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams getClientParams()> ->_NONE_
<android.view.ViewGroup: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)> ->_NONE_
<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String,java.lang.String)> ->_NONE_
<android.app.ActivityManagerProxy: android.content.ComponentName getActivityClassForToken(android.os.IBinder)> ->_NONE_
<org.jivesoftware.smackx.packet.DiscoverItems: java.lang.String getNode()> ->_NONE_
<java.security.Provider: java.util.Set getServices()> ->_NONE_
<android.speech.tts.TextToSpeechService: java.lang.String[] getSettingsLocale()> ->_NONE_
<android.view.animation.AnimationSet: java.util.List getAnimations()> ->_NONE_
<android.app.admin.DevicePolicyManager: void setActiveAdmin(android.content.ComponentName,boolean)> ->_NONE_
<android.animation.AnimatorInflater: android.animation.ValueAnimator loadAnimator(android.content.Context,android.util.AttributeSet,android.animation.ValueAnimator)> ->_NONE_
<org.apache.http.client.params.ClientParamBean: void setMaxRedirects(int)> ->_NONE_
<android.webkit.JWebCoreJavaBridge: void updateProxy(android.net.ProxyProperties)> ->_NONE_
<java.security.cert.X509CertSelector: java.util.Date getPrivateKeyValid()> ->_NONE_
<android.widget.TextView: void setFreezesText(boolean)> ->_NONE_
<android.content.pm.PackageParser: android.content.pm.VerifierInfo parseVerifier(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,int,java.lang.String[])> ->_NONE_
<android.bluetooth.BluetoothSocket: int write(byte[],int,int)> ->_NONE_
<android.webkit.CallbackProxy: android.webkit.WebBackForwardListClassic getBackForwardList()> ->_NONE_
<android.accounts.AccountManagerService: android.accounts.AccountAndUser[] getRunningAccounts()> ->_NONE_
<gov.nist.javax.sip.ListeningPointImpl: void setSentBy(java.lang.String)> ->_NONE_
<android.test.mock.MockContext: java.io.File getDir(java.lang.String,int)> ->_NONE_
<android.net.http.AndroidHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)> ->_NONE_
<android.net.DummyDataStateTracker: void setTeardownRequested(boolean)> ->_NONE_
<android.widget.RemoteViews: void setRemoteAdapter(int,int,android.content.Intent)> ->_NONE_
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()> ->_NONE_
<java.net.InetAddress: java.net.InetAddress getLocalHost()> ->_NONE_
<android.support.v4.content.Loader: void onStopLoading()> ->_NONE_
<gov.nist.javax.sip.header.SIPDate: int getMinute()> ->_NONE_
<android.webkit.WebViewClassic: void loadUrl(java.lang.String)> ->_NONE_
<java.util.ArrayList: java.lang.Object get(int)> ->_NONE_
<java.lang.SecurityManager: boolean inClassLoader()> ->_NONE_
<jp.co.omronsoft.openwnn.TextCandidates1LineViewManager: void setPreferences(android.content.SharedPreferences)> ->_NONE_
<org.apache.harmony.xml.dom.EntityImpl: short getNodeType()> ->_NONE_
<org.apache.harmony.xml.dom.AttrImpl: java.lang.String getValue()> ->_NONE_
<org.apache.http.impl.client.DefaultTargetAuthenticationHandler: java.util.List getAuthPreferences(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)> ->_NONE_
<java.io.RandomAccessFile: boolean readBoolean()> ->_NONE_
<java.lang.ref.PhantomReference: java.lang.Object get()> ->_NONE_
<android.location.Criteria: void setPowerRequirement(int)> ->_NONE_
<android.widget.SimpleAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)> ->_NONE_
<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.BasicConstraints getBasicConstraintsValue()> ->_NONE_
<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerInfo[] getEnabledSpellCheckers()> ->_NONE_
<android.net.Proxy: org.apache.http.conn.routing.HttpRoutePlanner getAndroidProxySelectorRoutePlanner(android.content.Context)> ->_NONE_
<android.os.UserManager: int getMaxSupportedUsers()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: void setTimer(java.util.Timer)> ->_NONE_
<android.view.accessibility.AccessibilityRecord: void setAddedCount(int)> ->_NONE_
<android.support.v4.app.ListFragment: void setListAdapter(android.widget.ListAdapter)> ->_NONE_
<android.widget.TextView: void setKeyListener(android.text.method.KeyListener)> ->_NONE_
<android.app.PendingIntent: void send(int,android.app.PendingIntent$OnFinished,android.os.Handler)> ->_NONE_
<android.app.ActivityManagerProxy: void handleApplicationCrash(android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo)> ->_NONE_
<android.widget.FrameLayout: int getPaddingRightWithForeground()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInScreen(android.graphics.Rect)> ->_NONE_
<android.webkit.WebViewClient: void onTooManyRedirects(android.webkit.WebView,android.os.Message,android.os.Message)> ->_NONE_
<android.view.accessibility.AccessibilityRecord: void setFromIndex(int)> ->_NONE_
<android.text.method.AllCapsTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)> ->_NONE_
<android.app.ActivityManagerProxy: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)> ->_NONE_
<android.content.CursorLoader: android.net.Uri getUri()> ->_NONE_
<android.widget.Spinner: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)> ->_NONE_
<jp.co.omronsoft.openwnn.JAJP.DefaultSoftKeyboardJAJP: java.lang.String[][] getCycleTable()> ->_NONE_
<java.util.concurrent.locks.ReentrantReadWriteLock: int getWriteHoldCount()> ->_NONE_
<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTElementProcessor getElementProcessor()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: long getLastAccessedTime()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: int getFirstChild(int)> ->_NONE_
<java.text.DateFormatSymbols: java.lang.String[] getEras()> ->_NONE_
<gov.nist.javax.sip.address.TelephoneNumber: java.lang.String getParameter(java.lang.String)> ->_NONE_
<org.apache.xalan.processor.StylesheetHandler: java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Node)> ->_NONE_
<android.widget.AdapterView: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)> ->_NONE_
<android.app.ActivityManagerProxy: boolean stopServiceToken(android.content.ComponentName,android.os.IBinder,int)> ->_NONE_
<org.apache.harmony.security.x501.Name: byte[] getEncoded()> ->_NONE_
<android.support.v4.app.LoaderManagerImpl: android.support.v4.content.Loader getLoader(int)> ->_NONE_
<org.ccil.cowan.tagsoup.AttributesImpl: void setQName(int,java.lang.String)> ->_NONE_
<android.webkit.WebViewCore: void setupViewport(boolean)> ->_NONE_
<java.util.concurrent.locks.AbstractOwnableSynchronizer: void setExclusiveOwnerThread(java.lang.Thread)> ->_NONE_
<android.os.UserHandle: int getSharedAppGid(int)> ->_NONE_
<org.apache.xml.utils.AttList: java.lang.String getType(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xalan.templates.ElemUnknown: void executeFallbacks(org.apache.xalan.transformer.TransformerImpl)> ->_NONE_
<android.database.CursorWrapper: int getInt(int)> ->_NONE_
<org.apache.xml.serializer.Version: java.lang.String getVersion()> ->_NONE_
<android.content.BroadcastReceiver: android.os.Bundle getResultExtras(boolean)> ->_NONE_
<android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawables()> ->_NONE_
<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)> ->_NONE_
<android.widget.LinearLayout: int getDividerWidth()> ->_NONE_
<android.view.inputmethod.InputConnectionWrapper: boolean sendKeyEvent(android.view.KeyEvent)> ->_NONE_
<android.content.SyncStorageEngine: long getLongColumn(android.database.Cursor,java.lang.String)> ->_NONE_
<java.security.spec.ECParameterSpec: java.security.spec.EllipticCurve getCurve()> ->_NONE_
<android.widget.RemoteViews: void setString(int,java.lang.String,java.lang.String)> ->_NONE_
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void closeConnection(org.apache.http.impl.conn.tsccm.BasicPoolEntry)> ->_NONE_
<android.mtp.MtpObjectInfo: int getThumbPixWidth()> ->_NONE_
<android.view.InputDevice: int getGeneration()> ->_NONE_
<android.filterfw.core.SimpleFrame: void setFloats(float[])> ->_NONE_
<android.filterfw.core.VertexFrame: android.graphics.Bitmap getBitmap()> ->_NONE_
<android.content.ClipboardManager: android.content.IClipboard getService()> ->_NONE_
<org.jivesoftware.smackx.provider.MUCUserProvider: org.jivesoftware.smack.packet.PacketExtension parseExtension(com.google.common.io.protocol.ProtoBuf)> ->_NONE_
<android.preference.MultiCheckPreference: void setSummary(java.lang.CharSequence)> ->_NONE_
<android.media.RemoteControlClient: android.media.IAudioService getService()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: void setEnabledProtocols(java.lang.String[])> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityEventCompatIcs: int getRecordCount(android.view.accessibility.AccessibilityEvent)> ->_NONE_
<android.speech.tts.TextToSpeech: java.util.Set getFeatures(java.util.Locale)> ->_NONE_
<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()> ->_NONE_
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)> ->_NONE_
<org.jivesoftware.smack.XMPPException: void printStackTrace(java.io.PrintStream)> ->_NONE_
<java.nio.SocketChannelImpl: boolean connect(java.net.SocketAddress)> ->_NONE_
<org.apache.http.impl.cookie.DateUtils: java.util.Date parseDate(java.lang.String,java.lang.String[])> ->_NONE_
<android.os.Debug: int getThreadGcInvocationCount()> ->_NONE_
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: java.lang.String readDnsName(java.io.DataInputStream)> ->_NONE_
<org.xml.sax.helpers.NamespaceSupport: java.lang.String getPrefix(java.lang.String)> ->_NONE_
<android.media.videoeditor.VideoEditorImpl: java.util.List getAllAudioTracks()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: void setNsNameTable(org.apache.xml.dtm.ref.DTMStringPool)> ->_NONE_
<org.apache.xpath.jaxp.XPathImpl: java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)> ->_NONE_
<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)> ->_NONE_
<org.apache.harmony.security.asn1.ASN1StringType: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> ->_NONE_
<android.view.View: void setVerticalScrollbarPosition(int)> ->_NONE_
<android.support.v4.view.PagerTitleStrip: void setGravity(int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLKey: int getPkeyContext()> ->_NONE_
<gov.nist.javax.sip.header.ims.PChargingVector: java.lang.String getOriginatingIOI()> ->_NONE_
<android.content.SyncManager: boolean readDataConnectionState()> ->_NONE_
<android.content.pm.ActivityInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.hardware.usb.UsbManager: android.hardware.usb.UsbAccessory[] getAccessoryList()> ->_NONE_
<libcore.io.IoBridge: boolean connectErrno(java.io.FileDescriptor,java.net.InetAddress,int,int)> ->_NONE_
<java.util.Calendar: void set(int,int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: boolean getWantClientAuth()> ->_NONE_
<android.widget.CalendarView: void setSelectedWeekBackgroundColor(int)> ->_NONE_
<java.util.concurrent.locks.ReentrantLock: java.lang.Thread getOwner()> ->_NONE_
<gov.nist.core.NameValueList: gov.nist.core.NameValue get(java.lang.Object)> ->_NONE_
<java.text.Collator: java.text.Collator getInstance(java.util.Locale)> ->_NONE_
<org.xml.sax.helpers.XMLFilterImpl: org.xml.sax.XMLReader getParent()> ->_NONE_
<org.apache.xml.utils.DOMHelper: void setDOMFactory(org.w3c.dom.Document)> ->_NONE_
<android.view.View: boolean getFitsSystemWindows()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: void setKeepAlive(boolean)> ->_NONE_
<org.jivesoftware.smack.packet.LoginResponse: java.lang.String getJid()> ->_NONE_
<org.apache.xpath.compiler.Compiler: void warn(java.lang.String,java.lang.Object[])> ->_NONE_
<jp.co.omronsoft.openwnn.OpenWnnDictionaryImpl: jp.co.omronsoft.openwnn.WnnPOS getPOS(int)> ->_NONE_
<android.nfc.tech.NfcA: short getSak()> ->_NONE_
<android.webkit.WebViewClassic: android.graphics.Bitmap getFavicon()> ->_NONE_
<gov.nist.javax.sip.address.SipUri: void setMethodParam(java.lang.String)> ->_NONE_
<android.filterfw.core.ShaderProgram: void setAttributeValues(java.lang.String,float[],int)> ->_NONE_
<org.apache.harmony.security.fortress.Services: java.security.Provider[] getProviders()> ->_NONE_
<libcore.io.Posix: int write(java.io.FileDescriptor,byte[],int,int)> ->_NONE_
<org.apache.http.message.BufferedHeader: int getValuePos()> ->_NONE_
<android.view.animation.Animation: void setListenerHandler(android.os.Handler)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.lang.String[] getEnabledCipherSuites()> ->_NONE_
<android.webkit.WebSettings: void setSavePassword(boolean)> ->_NONE_
<android.util.TimeUtils: java.util.ArrayList getTimeZones(java.lang.String)> ->_NONE_
<android.filterfw.core.SyncRunner: void setDoneCallback(android.filterfw.core.GraphRunner$OnRunnerDoneListener)> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: java.util.Vector getPrefixes()> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> ->_NONE_
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()> ->_NONE_
<org.kxml2.io.KXmlParser: int getNamespaceCount(int)> ->_NONE_
<android.net.Uri: void writeToParcel(android.os.Parcel,android.net.Uri)> ->_NONE_
<android.inputmethodservice.InputMethodService: void setInputView(android.view.View)> ->_NONE_
<android.app.AlertDialog: void setInverseBackgroundForced(boolean)> ->_NONE_
<org.apache.commons.io.output.ByteArrayOutputStream: void writeTo(java.io.OutputStream)> ->_NONE_
<android.server.search.SearchManagerService: java.util.List getGlobalSearchActivities()> ->_NONE_
<android.hardware.usb.UsbDevice: int getDeviceId()> ->_NONE_
<org.apache.http.message.BasicLineParser: org.apache.http.RequestLine parseRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: org.apache.xml.dtm.DTMAxisTraverser getAxisTraverser(int)> ->_NONE_
<org.apache.harmony.xml.dom.DocumentImpl: java.lang.String getXmlEncoding()> ->_NONE_
<android.widget.AdapterViewAnimator: int getBaseline()> ->_NONE_
<android.net.NetworkInfo: void setFailover(boolean)> ->_NONE_
<android.view.inputmethod.ExtractedTextRequest: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<javax.crypto.Cipher: java.security.AlgorithmParameters getParameters()> ->_NONE_
<libcore.icu.ICU: java.util.Locale[] getAvailableCalendarLocales()> ->_NONE_
<org.jivesoftware.smack.packet.PresenceCapability: java.lang.String getVersion()> ->_NONE_
<android.view.inputmethod.InputMethodInfo: java.lang.String getId()> ->_NONE_
<android.widget.AbsListView: void setStackFromBottom(boolean)> ->_NONE_
<android.text.method.MetaKeyKeyListener: int getActive(java.lang.CharSequence,java.lang.Object,int,int)> ->_NONE_
<org.apache.harmony.security.x509.Validity: byte[] getEncoded()> ->_NONE_
<android.widget.TableRow: int getLocationOffset(android.view.View)> ->_NONE_
<gov.nist.javax.sip.header.StatusLine: void setReasonPhrase(java.lang.String)> ->_NONE_
<android.media.audiofx.AudioEffect: int setParameter(int[],byte[])> ->_NONE_
<java.util.Locale: java.lang.String getDisplayCountry()> ->_NONE_
<android.graphics.drawable.BitmapDrawable: void setTileModeX(android.graphics.Shader$TileMode)> ->_NONE_
<android.app.Activity: void setVolumeControlStream(int)> ->_NONE_
<android.net.WebAddress: void setScheme(java.lang.String)> ->_NONE_
<android.net.Proxy: java.lang.String getHost(android.content.Context)> ->_NONE_
<android.content.res.Resources: android.content.res.Configuration getConfiguration()> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: java.lang.String encode()> ->_NONE_
<java.util.concurrent.ForkJoinPool: int getRunningThreadCount()> ->_NONE_
<org.apache.http.util.VersionInfo: java.lang.String getClassloader()> ->_NONE_
<android.graphics.drawable.BitmapDrawable: void setTileModeY(android.graphics.Shader$TileMode)> ->_NONE_
<org.apache.commons.codec.net.QCodec: java.lang.String encode(java.lang.String)> ->_NONE_
<android.net.rtp.AudioStream: android.net.rtp.AudioCodec getCodec()> ->_NONE_
<gov.nist.javax.sip.header.Contact: void setSipInstanceParam(java.lang.String)> ->_NONE_
<android.support.v4.view.AccessibilityDelegateCompatIcs: void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLKey: org.apache.harmony.xnet.provider.jsse.OpenSSLEngine getEngine()> ->_NONE_
<android.content.Intent: long getLongExtra(java.lang.String,long)> ->_NONE_
<android.bluetooth.BluetoothTetheringDataTracker: boolean reconnect()> ->_NONE_
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.ElemVariable getVariableOrParam(int)> ->_NONE_
<android.net.http.AndroidHttpClient: long parseDate(java.lang.String)> ->_NONE_
<org.apache.http.impl.cookie.BasicDomainHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)> ->_NONE_
<android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)> ->_NONE_
<gov.nist.javax.sip.stack.UDPMessageChannel: void handleException(java.text.ParseException,gov.nist.javax.sip.message.SIPMessage,java.lang.Class,java.lang.String,java.lang.String)> ->_NONE_
<android.media.RemoteControlClient: int getRcseId()> ->_NONE_
<android.widget.TextView: int getVerticalOffset(boolean)> ->_NONE_
<java.security.spec.ECPoint: java.math.BigInteger getAffineX()> ->_NONE_
<android.renderscript.Program: int getTextureCount()> ->_NONE_
<android.os.Debug: int getGlobalClassInitTime()> ->_NONE_
<android.widget.TextView: void setLines(int)> ->_NONE_
<java.security.spec.ECPoint: java.math.BigInteger getAffineY()> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationHeader: void setIK(java.lang.String)> ->_NONE_
<android.support.v4.util.AtomicFile: byte[] readFully()> ->_NONE_
<android.webkit.CallbackProxy: int getProgress()> ->_NONE_
<android.media.videoeditor.MediaItem: void setBeginTransition(android.media.videoeditor.Transition)> ->_NONE_
<java.security.cert.PKIXParameters: void setPolicyMappingInhibited(boolean)> ->_NONE_
<java.net.Socket: void setPerformancePreferences(int,int,int)> ->_NONE_
<org.apache.http.util.EncodingUtils: java.lang.String getAsciiString(byte[])> ->_NONE_
<java.text.DecimalFormat: void setCurrency(java.util.Currency)> ->_NONE_
<org.apache.xml.serializer.ToTextSAXHandler: java.io.Writer getWriter()> ->_NONE_
<org.apache.xml.utils.UnImplNode: java.lang.String getBaseURI()> ->_NONE_
<android.app.Activity: java.lang.String getCallingPackage()> ->_NONE_
<android.webkit.WebViewClassic: boolean sendViewSizeZoom(boolean)> ->_NONE_
<android.support.v4.app.BackStackRecord: java.lang.String getName()> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: void setEncodedImage(java.lang.String)> ->_NONE_
<android.net.wifi.WifiInfo: void setSSID(android.net.wifi.WifiSsid)> ->_NONE_
<android.webkit.DeviceOrientationService: void getOrientationUsingGetRotationMatrix()> ->_NONE_
<java.net.NetworkInterface: java.lang.String getName()> ->_NONE_
<android.widget.TextView: int getTextColor(android.content.Context,android.content.res.TypedArray,int)> ->_NONE_
<android.webkit.WebStorageClassic: void getQuotaForOrigin(java.lang.String,android.webkit.ValueCallback)> ->_NONE_
<android.widget.ViewFlipper: void updateRunning(boolean)> ->_NONE_
<android.app.ProgressDialog: void setProgressStyle(int)> ->_NONE_
<gov.nist.javax.sip.header.RAck: void setCSequenceNumber(long)> ->_NONE_
<android.widget.AutoCompleteTextView: android.widget.AdapterView$OnItemSelectedListener getItemSelectedListener()> ->_NONE_
<android.media.videoeditor.MediaItem: int getRenderingMode()> ->_NONE_
<org.apache.http.client.methods.HttpPut: java.lang.String getMethod()> ->_NONE_
<android.net.EthernetDataTracker: java.lang.String getTcpBufferSizesPropName()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: int getTypedAttribute(int,int)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.CharSequence getClassName(java.lang.Object)> ->_NONE_
<org.apache.xml.serializer.ToTextSAXHandler: void setIndent(boolean)> ->_NONE_
<org.jivesoftware.smack.packet.DataMessage: long getUserSerialNumber()> ->_NONE_
<android.location.GpsSatellite: float getAzimuth()> ->_NONE_
<android.speech.srec.Recognizer: java.lang.String getResult(int,java.lang.String)> ->_NONE_
<org.jivesoftware.smack.ProtoBufAuthentication: org.jivesoftware.smack.packet.HeartbeatConfig getHeartbeatConfig()> ->_NONE_
<libcore.io.Streams: void writeSingleByte(java.io.OutputStream,int)> ->_NONE_
<java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)> ->_NONE_
<android.view.View: void setAccessibilityDelegate(android.view.View$AccessibilityDelegate)> ->_NONE_
<android.renderscript.AllocationAdapter: int getID(android.renderscript.RenderScript)> ->_NONE_
<java.sql.Time: int getDate()> ->_NONE_
<org.apache.james.mime4j.field.address.Mailbox: org.apache.james.mime4j.field.address.DomainList getRoute()> ->_NONE_
<org.apache.xalan.transformer.TransformerIdentityImpl: void setOutputProperty(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.http.params.HttpConnectionParamBean: void setSoTimeout(int)> ->_NONE_
<android.graphics.Paint: android.graphics.Shader getShader()> ->_NONE_
<org.apache.xml.utils.DOMBuilder: void setIDAttribute(java.lang.String,org.w3c.dom.Element)> ->_NONE_
<org.jivesoftware.smack.RosterEntry: java.lang.String getUser()> ->_NONE_
<org.xml.sax.helpers.DefaultHandler: void setDocumentLocator(org.xml.sax.Locator)> ->_NONE_
<org.jivesoftware.smack.packet.HttpResponse: void setData(byte[])> ->_NONE_
<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: java.lang.String getAccessType()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: boolean getOOBInline()> ->_NONE_
<android.speech.srec.Recognizer: java.lang.String[] getResultKeys(int)> ->_NONE_
<org.apache.xml.utils.res.XResourceBundle: java.lang.Object[][] getContents()> ->_NONE_
<android.text.style.DynamicDrawableSpan: android.graphics.drawable.Drawable getCachedDrawable()> ->_NONE_
<org.jivesoftware.smack.PacketWriter: long getLastActive()> ->_NONE_
<java.lang.System: void setIn(java.io.InputStream)> ->_NONE_
<android.os.Environment: android.os.storage.StorageVolume getPrimaryVolume()> ->_NONE_
<java.nio.charset.CharsetEncoderICU: boolean canEncode(int)> ->_NONE_
<org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class getPrimativeClass(java.lang.Object)> ->_NONE_
<java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)> ->_NONE_
<android.net.wifi.WifiStateMachine: void addToBlacklist(java.lang.String)> ->_NONE_
<java.util.prefs.AbstractPreferences: boolean getBoolean(java.lang.String,boolean)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setCurrentItemIndex(java.lang.Object,int)> ->_NONE_
<android.app.SearchableInfo: int getVoiceLanguageModeId()> ->_NONE_
<android.widget.FastScroller: java.lang.Object[] getSections()> ->_NONE_
<org.apache.http.conn.params.ConnManagerParams: long getTimeout(org.apache.http.params.HttpParams)> ->_NONE_
<android.database.BulkCursorProxy: android.os.Bundle respond(android.os.Bundle)> ->_NONE_
<android.webkit.WebViewClassic: void documentAsText(android.os.Message)> ->_NONE_
<org.jivesoftware.smack.packet.DataMessage: java.util.Iterator getAppDataIterator()> ->_NONE_
<android.app.ActivityManagerProxy: int stopUser(int,android.app.IStopUserCallback)> ->_NONE_
<android.text.style.ScaleXSpan: float getScaleX()> ->_NONE_
<android.webkit.BrowserFrame: int getFileSize(java.lang.String)> ->_NONE_
<org.apache.xalan.processor.XSLTElementDef: int getLastOrder()> ->_NONE_
<gov.nist.javax.sip.header.Accept: java.lang.StringBuffer encodeBody(java.lang.StringBuffer)> ->_NONE_
<android.text.SpannableString: int getSpanFlags(java.lang.Object)> ->_NONE_
<dalvik.system.profiler.BinaryHprofReader: void parseLoadClass()> ->_NONE_
<org.apache.xalan.templates.ElemApplyTemplates: void setMode(org.apache.xml.utils.QName)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: org.xml.sax.EntityResolver getEntityResolver()> ->_NONE_
<android.view.View: void setPadding(int,int,int,int)> ->_NONE_
<android.net.wifi.WifiStateMachine: int getFrequencyBand()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: int getRemovedCount(java.lang.Object)> ->_NONE_
<android.filterfw.core.NativeFrame: int getCapacity()> ->_NONE_
<android.database.AbstractCursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)> ->_NONE_
<junit.textui.ResultPrinter: void print(junit.framework.TestResult,long)> ->_NONE_
<android.bluetooth.BluetoothDevice: java.lang.String getName()> ->_NONE_
<gov.nist.javax.sip.stack.UDPMessageProcessor: void run()> ->_NONE_
<org.jivesoftware.smack.SASLAuthentication: void authenticationFailed()> ->_NONE_
<org.jivesoftware.smack.ConnectionConfiguration: void setExpiredCertificatesCheckEnabled(boolean)> ->_NONE_
<android.widget.RemoteViews: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.content.SyncManager: android.content.SyncAdapterType[] getSyncAdapterTypes(int)> ->_NONE_
<org.jivesoftware.smack.util.Base64: boolean encodeToFile(byte[],java.lang.String)> ->_NONE_
<android.database.DatabaseUtils: int getKeyLen(byte[])> ->_NONE_
<org.apache.harmony.xml.ExpatAttributes: java.lang.String getType(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.http.impl.client.DefaultUserTokenHandler: java.security.Principal getAuthPrincipal(org.apache.http.auth.AuthState)> ->_NONE_
<android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction setTransition(int)> ->_NONE_
<org.apache.xml.utils.DefaultErrorHandler: void warning(org.xml.sax.SAXParseException)> ->_NONE_
<android.util.JsonWriter: android.util.JsonWriter value(boolean)> ->_NONE_
<android.content.DefaultDataHandler: void insert(android.content.ContentResolver,java.io.InputStream)> ->_NONE_
<org.apache.james.mime4j.field.address.parser.SimpleCharStream: int getBeginLine()> ->_NONE_
<org.apache.xml.dtm.ref.SecuritySupport12: java.io.FileInputStream getFileInputStream(java.io.File)> ->_NONE_
<org.apache.http.protocol.HttpRequestExecutor: void closeConnection(org.apache.http.HttpClientConnection)> ->_NONE_
<java.io.ObjectStreamClass: java.io.ObjectStreamField[] getFields()> ->_NONE_
<org.apache.xml.serializer.dom3.DOMStringListImpl: int getLength()> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()> ->_NONE_
<android.net.rtp.AudioGroup: android.net.rtp.AudioStream[] getStreams()> ->_NONE_
<java.util.AbstractSequentialList: java.lang.Object set(int,java.lang.Object)> ->_NONE_
<android.net.LinkProperties: android.net.ProxyProperties getHttpProxy()> ->_NONE_
<org.apache.harmony.security.pkcs7.SignedData: java.util.List getSignerInfos()> ->_NONE_
<javax.obex.ServerOperation: javax.obex.HeaderSet getReceivedHeader()> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: void setChunkedStreamingMode(int)> ->_NONE_
<android.widget.HorizontalScrollView: int getMaxScrollAmount()> ->_NONE_
<android.content.SyncStorageEngine: java.util.ArrayList getAuthorities()> ->_NONE_
<android.widget.TableRow: int getChildrenSkipCount(android.view.View,int)> ->_NONE_
<org.apache.commons.io.filefilter.AndFileFilter: java.util.List getFileFilters()> ->_NONE_
<java.lang.reflect.Field: void setChar(java.lang.Object,char)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: void setIncrementalSAXSource(org.apache.xml.dtm.ref.IncrementalSAXSource)> ->_NONE_
<javax.xml.datatype.Duration: int getMinutes()> ->_NONE_
<java.io.ObjectInputStream: double readDouble()> ->_NONE_
<java.util.concurrent.ForkJoinPool: java.util.concurrent.ForkJoinPool$ForkJoinWorkerThreadFactory getFactory()> ->_NONE_
<android.hardware.LegacySensorManager: int getSensors()> ->_NONE_
<org.apache.commons.io.input.ClosedInputStream: int read()> ->_NONE_
<org.jivesoftware.smack.XMPPConnection: java.lang.String bindAccount(java.lang.String,java.lang.String,java.lang.String,long)> ->_NONE_
<jp.co.omronsoft.openwnn.Keyboard: boolean setShifted(boolean)> ->_NONE_
<java.nio.DirectByteBuffer: void get(int[],int,int)> ->_NONE_
<org.jivesoftware.smack.packet.DefaultPacketExtension: java.lang.String getAttributeValue(java.lang.String)> ->_NONE_
<android.drm.DrmSupportInfo: void setDescription(java.lang.String)> ->_NONE_
<android.webkit.CallbackProxy: void getVisitedHistory(android.webkit.ValueCallback)> ->_NONE_
<android.webkit.CookieManager: void setAcceptFileSchemeCookies(boolean)> ->_NONE_
<android.content.SyncStorageEngine: android.content.SyncStorageEngine$AuthorityInfo parseAuthority(org.xmlpull.v1.XmlPullParser,int)> ->_NONE_
<android.webkit.WebViewClassic: void setMockDeviceOrientation(boolean,double,boolean,double,boolean,double)> ->_NONE_
<android.widget.SimpleCursorAdapter: int getStringConversionColumn()> ->_NONE_
<android.widget.GridLayout: android.widget.GridLayout$Alignment getAlignment(android.widget.GridLayout$Alignment,boolean)> ->_NONE_
<gov.nist.javax.sip.address.TelephoneNumber: java.lang.StringBuffer encode(java.lang.StringBuffer)> ->_NONE_
<android.test.ComparisonFailure: java.lang.String getMessage()> ->_NONE_
<android.telephony.CellInfoCdma: android.telephony.CellSignalStrengthCdma getCellSignalStrength()> ->_NONE_
<android.content.ContentProvider: java.lang.String getReadPermission()> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: long getLocalSeqNumber()> ->_NONE_
<gov.nist.javax.sip.header.Contact: void setTempGruuParam(java.lang.String)> ->_NONE_
<android.content.ContextWrapper: android.view.CompatibilityInfoHolder getCompatibilityInfo(int)> ->_NONE_
<android.app.IntentService: void onStart(android.content.Intent,int)> ->_NONE_
<org.apache.xalan.templates.ElemLiteralResult: java.lang.String getPrefix()> ->_NONE_
<libcore.net.UriCodec: void appendEncoded(java.lang.StringBuilder,java.lang.String)> ->_NONE_
<android.content.ContentValues: java.lang.Boolean getAsBoolean(java.lang.String)> ->_NONE_
<java.security.cert.X509CertSelector: void setIssuer(java.lang.String)> ->_NONE_
<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getProxyHost()> ->_NONE_
<org.apache.harmony.security.asn1.ASN1SequenceOf: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)> ->_NONE_
<android.widget.RadioGroup: int getCheckedRadioButtonId()> ->_NONE_
<android.app.admin.DevicePolicyManager: int getStorageEncryptionStatus(int)> ->_NONE_
<android.net.ConnectivityManager: boolean setRadios(boolean)> ->_NONE_
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(android.content.Context,long)> ->_NONE_
<java.nio.FileChannelImpl: long write(java.nio.ByteBuffer[],int,int)> ->_NONE_
<android.telephony.TelephonyManager: int getNetworkType()> ->_NONE_
<dalvik.system.profiler.HprofData: void setFlags(int)> ->_NONE_
<android.media.MediaRecorder: void setPreviewDisplay(android.view.Surface)> ->_NONE_
<android.media.MediaFile: int getFormatCode(java.lang.String,java.lang.String)> ->_NONE_
<java.nio.NioUtils: int getDirectBufferAddress(java.nio.Buffer)> ->_NONE_
<android.drm.DrmManagerClient: int getDrmObjectType(java.lang.String,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: void setContentDisposition(javax.sip.header.ContentDispositionHeader)> ->_NONE_
<android.emoji.EmojiFactory: int getAndroidPuaFromVendorSpecificSjis(char)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: java.lang.Object getImpl()> ->_NONE_
<android.widget.ImageView: void setBaseline(int)> ->_NONE_
<android.content.ContextWrapper: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)> ->_NONE_
<org.apache.harmony.security.provider.cert.Cache: long getSuffHash(byte[])> ->_NONE_
<android.view.animation.Transformation: void setAlpha(float)> ->_NONE_
<android.test.mock.MockPackageManager: java.lang.CharSequence getText(java.lang.String,int,android.content.pm.ApplicationInfo)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getBranchId()> ->_NONE_
<org.apache.xalan.templates.DecimalFormatProperties: void setMinusSign(char)> ->_NONE_
<libcore.io.ForwardingOs: int getgid()> ->_NONE_
<java.util.AbstractSequentialList: java.lang.Object get(int)> ->_NONE_
<android.util.XmlPullAttributes: java.lang.String getAttributeValue(int)> ->_NONE_
<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo getCurrentInputEditorInfo()> ->_NONE_
<org.apache.xpath.XPathContext: void setSAXLocator(javax.xml.transform.SourceLocator)> ->_NONE_
<android.webkit.PluginManager: android.webkit.PluginManager getInstance(android.content.Context)> ->_NONE_
<org.xml.sax.helpers.XMLReaderAdapter: void setDTDHandler(org.xml.sax.DTDHandler)> ->_NONE_
<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso()> ->_NONE_
<gov.nist.javax.sip.stack.TCPMessageChannel: void sendMessage(gov.nist.javax.sip.message.SIPMessage)> ->_NONE_
<android.test.mock.MockContext: android.view.CompatibilityInfoHolder getCompatibilityInfo(int)> ->_NONE_
<java.util.zip.ZipEntry: void setCompressedSize(long)> ->_NONE_
<android.text.BoringLayout: int getLineStart(int)> ->_NONE_
<org.apache.xml.serializer.SecuritySupport12: java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader)> ->_NONE_
<org.apache.harmony.xml.ExpatReader: void setFeature(java.lang.String,boolean)> ->_NONE_
<libcore.net.http.HttpResponseCache: int getWriteAbortCount()> ->_NONE_
<java.util.LinkedList: java.lang.Object get(int)> ->_NONE_
<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.Collection getQueuedReaderThreads()> ->_NONE_
<java.util.MissingFormatArgumentException: java.lang.String getMessage()> ->_NONE_
<org.apache.james.mime4j.BodyDescriptor: java.lang.String getCharset()> ->_NONE_
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])> ->_NONE_
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()> ->_NONE_
<android.app.ApplicationPackageManager: void replacePreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)> ->_NONE_
<android.net.LinkSocket: void connect(java.net.SocketAddress,int)> ->_NONE_
<junit.textui.TestRunner: void setPrinter(junit.textui.ResultPrinter)> ->_NONE_
<android.net.wifi.WifiSsid: android.net.wifi.WifiSsid createFromAsciiEncoded(java.lang.String)> ->_NONE_
<org.apache.xml.serializer.dom3.DOMErrorImpl: org.w3c.dom.DOMLocator getLocation()> ->_NONE_
<android.graphics.drawable.GradientDrawable: void setGradientCenter(float,float)> ->_NONE_
<android.support.v4.content.CursorLoader: void setUri(android.net.Uri)> ->_NONE_
<org.apache.xpath.axes.FilterExprWalker: org.apache.xpath.Expression getInnerExpression()> ->_NONE_
<org.apache.harmony.xml.dom.ElementImpl: org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)> ->_NONE_
<java.security.Security: java.security.Provider[] getProviders(java.util.Map)> ->_NONE_
<libcore.io.ForwardingOs: int pread(java.io.FileDescriptor,java.nio.ByteBuffer,long)> ->_NONE_
<java.util.SimpleTimeZone: void setEndRule(int,int,int,int)> ->_NONE_
<android.content.pm.ActivityInfo: void dump(android.util.Printer,java.lang.String)> ->_NONE_
<org.apache.xpath.CachedXPathAPI: org.apache.xpath.XPathContext getXPathContext()> ->_NONE_
<org.apache.xpath.objects.XStringForFSB: void dispatchCharactersEvents(org.xml.sax.ContentHandler)> ->_NONE_
<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal getSubject()> ->_NONE_
<android.widget.AbsListView: void setTextFilterEnabled(boolean)> ->_NONE_
<android.widget.RatingBar: android.widget.RatingBar$OnRatingBarChangeListener getOnRatingBarChangeListener()> ->_NONE_
<gov.nist.javax.sip.header.Allow: java.lang.String encodeBody()> ->_NONE_
<android.net.wifi.WifiInfo: void setMeteredHint(boolean)> ->_NONE_
<gov.nist.core.NameValue: java.lang.String encode()> ->_NONE_
<org.jivesoftware.smackx.packet.MUCUser: org.jivesoftware.smackx.packet.MUCUser$Status getStatus()> ->_NONE_
<android.nfc.NfcAdapter: android.nfc.INfcTag getTagService()> ->_NONE_
<android.webkit.WebSettingsClassic: boolean getDatabaseEnabled()> ->_NONE_
<java.nio.HeapByteBuffer: void get(short[],int,int)> ->_NONE_
<libcore.net.http.HttpEngine: java.io.InputStream getTransferStream()> ->_NONE_
<java.text.BreakIterator: long getLong(byte[],int)> ->_NONE_
<android.mtp.MtpDevice: long getStorageId(int)> ->_NONE_
<android.app.backup.BackupDataOutput: int writeEntityHeader(java.lang.String,int)> ->_NONE_
<android.filterfw.core.ShaderProgram: void setHostValue(java.lang.String,java.lang.Object)> ->_NONE_
<android.support.v4.view.ViewCompatHC: long getFrameTime()> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: void setMessageContent(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.telephony.CellSignalStrengthCdma: int getCdmaLevel()> ->_NONE_
<gov.nist.javax.sip.header.Expires: java.lang.StringBuffer encodeBody(java.lang.StringBuffer)> ->_NONE_
<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.Drawable getDrawable()> ->_NONE_
<android.appwidget.AppWidgetHostView: android.view.View getErrorView()> ->_NONE_
<java.io.BufferedInputStream: int read(byte[],int,int)> ->_NONE_
<org.apache.harmony.xml.dom.AttrImpl: java.lang.String getNodeValue()> ->_NONE_
<libcore.io.ForwardingOs: int pwrite(java.io.FileDescriptor,java.nio.ByteBuffer,long)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: java.lang.String getLocalName(int)> ->_NONE_
<gov.nist.javax.sip.header.ims.SecurityAgree: void setSecurityMechanism(java.lang.String)> ->_NONE_
<android.app.DownloadManager: java.lang.String getMimeTypeForDownloadedFile(long)> ->_NONE_
<android.widget.SearchView: void setQuery(java.lang.CharSequence)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: int getPkeyContext()> ->_NONE_
<android.view.GLES20DisplayList: void setAlpha(float)> ->_NONE_
<gov.nist.javax.sip.address.SipUri: java.lang.String encode()> ->_NONE_
<android.widget.OverScroller: void setFinalY(int)> ->_NONE_
<android.accounts.AccountManagerService: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)> ->_NONE_
<android.widget.OverScroller: void setFinalX(int)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: java.lang.CharSequence getClassName()> ->_NONE_
<android.net.http.SslCertificate: java.util.Date parseDate(java.lang.String)> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.ConnectionReuseStrategy createConnectionReuseStrategy()> ->_NONE_
<android.net.UrlQuerySanitizer: java.util.List getParameterList()> ->_NONE_
<libcore.icu.NativeBreakIterator: libcore.icu.NativeBreakIterator getCharacterInstance(java.util.Locale)> ->_NONE_
<android.webkit.HTML5VideoFullScreen: android.view.SurfaceView getSurfaceView()> ->_NONE_
<android.content.SyncStorageEngine: java.util.List getCurrentSyncs(int)> ->_NONE_
<gov.nist.javax.sip.header.ExtensionHeaderImpl: java.lang.String getHeaderValue()> ->_NONE_
<android.net.MailTo: java.lang.String getBody()> ->_NONE_
<org.apache.http.impl.conn.AbstractClientConnAdapter: org.apache.http.HttpConnectionMetrics getMetrics()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: javax.net.ssl.X509TrustManager getDefaultTrustManager()> ->_NONE_
<android.filterfw.core.FrameFormat: int getBytesPerSample()> ->_NONE_
<android.service.wallpaper.WallpaperService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> ->_NONE_
<org.apache.xpath.objects.XMLStringFactoryImpl: org.apache.xml.utils.XMLStringFactory getFactory()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: int getAddedCount(java.lang.Object)> ->_NONE_
<android.widget.AbsListView: void setSmoothScrollbarEnabled(boolean)> ->_NONE_
<org.apache.http.impl.conn.LoggingSessionOutputBuffer: void write(int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: boolean getUseClientMode()> ->_NONE_
<android.net.ConnectivityManager: java.lang.String[] getTetherableBluetoothRegexs()> ->_NONE_
<org.apache.xpath.patterns.NodeTest: void setWhatToShow(int)> ->_NONE_
<android.widget.ExpandableListConnector: void setMaxExpGroupCount(int)> ->_NONE_
<android.view.SurfaceView: boolean setFrame(int,int,int,int)> ->_NONE_
<android.widget.SlidingDrawer: android.view.View getHandle()> ->_NONE_
<android.content.Loader: void onStartLoading()> ->_NONE_
<android.telephony.CellInfoGsm: android.telephony.CellSignalStrengthGsm getCellSignalStrength()> ->_NONE_
<org.apache.harmony.xml.dom.NodeImpl: void setNameNS(org.apache.harmony.xml.dom.NodeImpl,java.lang.String,java.lang.String)> ->_NONE_
<android.telephony.SmsMessage: android.telephony.SmsMessage$MessageClass getMessageClass()> ->_NONE_
<android.graphics.drawable.GradientDrawable: void setColorFilter(android.graphics.ColorFilter)> ->_NONE_
<gov.nist.javax.sip.parser.Lexer: java.lang.String getHeaderValue(java.lang.String)> ->_NONE_
<android.webkit.WebView: void setNetworkAvailable(boolean)> ->_NONE_
<android.os.Parcel: void writeBundle(android.os.Bundle)> ->_NONE_
<android.text.BoringLayout: int getTopPadding()> ->_NONE_
<android.location.Geofence: float getRadius()> ->_NONE_
<java.security.Identity: void setPublicKey(java.security.PublicKey)> ->_NONE_
<java.security.cert.X509CRLSelector: java.util.Date getDateAndTime()> ->_NONE_
<org.apache.james.mime4j.field.ContentTypeField: java.lang.String getCharset(org.apache.james.mime4j.field.ContentTypeField)> ->_NONE_
<android.widget.DatePicker: int getDayOfMonth()> ->_NONE_
<org.apache.http.conn.params.ConnConnectionParamBean: void setMaxStatusLineGarbage(int)> ->_NONE_
<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object replace(java.lang.Object,java.lang.Object)> ->_NONE_
<java.util.logging.Logger: void setFilter(java.util.logging.Filter)> ->_NONE_
<android.media.AudioService: void sendMasterMuteUpdate(boolean,int)> ->_NONE_
<android.widget.ListView: void setHeaderDividersEnabled(boolean)> ->_NONE_
<android.nfc.NfcManager: android.nfc.NfcAdapter getDefaultAdapter()> ->_NONE_
<org.apache.xpath.axes.AxesWalker: void setNextWalker(org.apache.xpath.axes.AxesWalker)> ->_NONE_
<android.filterfw.core.FilterGraph: void discardUnconnectedOutputs()> ->_NONE_
<android.media.videoeditor.MediaVideoItem: int getVideoBitrate()> ->_NONE_
<libcore.net.url.JarURLConnectionImpl: java.lang.String getContentType()> ->_NONE_
<android.location.LocationManager: void removeUpdates(android.app.PendingIntent)> ->_NONE_
<android.bluetooth.BluetoothAdapter: android.os.ParcelUuid[] getUuids()> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: void setStandalone(java.lang.String)> ->_NONE_
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script$KernelID getKernelIDSubtract()> ->_NONE_
<java.io.PushbackReader: int read()> ->_NONE_
<org.apache.xml.serializer.CharInfo: org.apache.xml.serializer.CharInfo getCharInfoBasedOnPrivilege(java.lang.String,java.lang.String,boolean)> ->_NONE_
<org.apache.xalan.templates.ElemForEach: void setSortElem(org.apache.xalan.templates.ElemSort)> ->_NONE_
<android.net.sip.SipProfile: int getCallingUid()> ->_NONE_
<android.support.v4.app.Fragment: boolean getUserVisibleHint()> ->_NONE_
<java.util.concurrent.ThreadPoolExecutor: void setRejectedExecutionHandler(java.util.concurrent.RejectedExecutionHandler)> ->_NONE_
<java.nio.MappedByteBufferAdapter: byte get()> ->_NONE_
<android.hardware.input.KeyboardLayout: java.lang.String getDescriptor()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: java.net.SocketAddress getRemoteSocketAddress()> ->_NONE_
<android.view.View: float getVerticalScrollFactor()> ->_NONE_
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int getTransactionId()> ->_NONE_
<android.view.animation.Animation: void setStartTime(long)> ->_NONE_
<org.apache.http.impl.io.HttpResponseWriter: void writeHeadLine(org.apache.http.HttpResponse)> ->_NONE_
<org.apache.harmony.security.x509.BasicConstraints: int getPathLenConstraint()> ->_NONE_
<android.view.animation.Animation: int getRepeatCount()> ->_NONE_
<android.support.v4.app.ListFragment: android.widget.ListAdapter getListAdapter()> ->_NONE_
<jp.co.omronsoft.openwnn.KeyboardView: void setPopupOffset(int,int)> ->_NONE_
<android.app.AlarmManager: void setRepeating(int,long,long,android.app.PendingIntent)> ->_NONE_
<org.apache.xml.serializer.ToXMLSAXHandler: java.io.Writer getWriter()> ->_NONE_
<org.apache.http.impl.conn.SingleClientConnManager: org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object)> ->_NONE_
<org.apache.http.message.BasicHttpRequest: org.apache.http.ProtocolVersion getProtocolVersion()> ->_NONE_
<android.widget.TextView: void setHintTextColor(int)> ->_NONE_
<android.preference.EditTextPreference: android.widget.EditText getEditText()> ->_NONE_
<org.ccil.cowan.tagsoup.jaxp.SAX1ParserAdapter: void parse(java.lang.String)> ->_NONE_
<android.widget.Chronometer: void setOnChronometerTickListener(android.widget.Chronometer$OnChronometerTickListener)> ->_NONE_
<android.preference.MultiSelectListPreference: java.util.Set getValues()> ->_NONE_
<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)> ->_NONE_
<org.jivesoftware.smack.SASLAuthentication: boolean isAuthenticated()> ->_NONE_
<org.jivesoftware.smack.XMPPException: java.lang.Throwable getWrappedThrowable()> ->_NONE_
<java.io.File: boolean setLastModified(long)> ->_NONE_
<android.net.Uri: java.util.List getQueryParameters(java.lang.String)> ->_NONE_
<android.content.pm.ContainerEncryptionParams: long getDataEnd()> ->_NONE_
<org.apache.xpath.axes.AxesWalker: void setExpression(org.apache.xpath.Expression)> ->_NONE_
<android.nfc.tech.NfcBarcode: void reconnect()> ->_NONE_
<android.telephony.PhoneNumberFormattingTextWatcher: void afterTextChanged(android.text.Editable)> ->_NONE_
<android.view.MotionEvent: float getHistoricalOrientation(int,int)> ->_NONE_
<java.util.GregorianCalendar: int getGreatestMinimum(int)> ->_NONE_
<android.widget.ExpandableListView: long getSelectedId()> ->_NONE_
<android.widget.ExpandableListPosition: android.widget.ExpandableListPosition getRecycledOrCreate()> ->_NONE_
<org.apache.xml.utils.UnImplNode: void setTextContent(java.lang.String)> ->_NONE_
<org.apache.xml.serializer.ToTextStream: void writeNormalizedChars(char[],int,int,boolean)> ->_NONE_
<android.widget.AppSecurityPermissions: int getPermissionCount(int)> ->_NONE_
<java.io.DataInputStream: int read(byte[],int,int)> ->_NONE_
<org.apache.http.conn.params.ConnManagerParams: org.apache.http.conn.params.ConnPerRoute getMaxConnectionsPerRoute(org.apache.http.params.HttpParams)> ->_NONE_
<android.filterpacks.base.ObjectSource: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)> ->_NONE_
<android.nfc.tech.MifareClassic: int getSectorCount()> ->_NONE_
<gov.nist.javax.sip.header.Accept: void setQValue(float)> ->_NONE_
<java.lang.reflect.AccessibleObject: java.lang.annotation.Annotation[] getDeclaredAnnotations()> ->_NONE_
<android.support.v4.app.Fragment: android.support.v4.app.LoaderManager getLoaderManager()> ->_NONE_
<android.bluetooth.BluetoothA2dp: boolean connect(android.bluetooth.BluetoothDevice)> ->_NONE_
<gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.message.Request createRequest(javax.sip.address.URI,java.lang.String,javax.sip.header.CallIdHeader,javax.sip.header.CSeqHeader,javax.sip.header.FromHeader,javax.sip.header.ToHeader,java.util.List,javax.sip.header.MaxForwardsHeader)> ->_NONE_
<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String)> ->_NONE_
<android.os.StrictMode: void setCloseGuardEnabled(boolean)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: org.xml.sax.ErrorHandler getErrorHandler()> ->_NONE_
<android.media.AudioTrack: int setPlaybackRate(int)> ->_NONE_
<android.app.ActivityManagerProxy: void setFrontActivityScreenCompatMode(int)> ->_NONE_
<android.net.ProxyProperties: java.lang.String getExclusionList()> ->_NONE_
<org.apache.http.HttpHost: java.lang.String getHostName()> ->_NONE_
<org.apache.harmony.security.x509.tsp.TSTInfo: org.apache.harmony.security.x509.Extensions getExtensions()> ->_NONE_
<android.webkit.AccessibilityInjectorFallback: int getDirectionForAction(int)> ->_NONE_
<android.mtp.MtpObjectInfo: int getSequenceNumber()> ->_NONE_
<android.support.v4.app.DialogFragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)> ->_NONE_
<android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)> ->_NONE_
<org.apache.xml.serializer.SecuritySupport: java.io.FileInputStream getFileInputStream(java.io.File)> ->_NONE_
<libcore.icu.CollationElementIteratorICU: int getMaxExpansion(int)> ->_NONE_
<android.text.SpannableStringBuilder: void sendToSpanWatchers(int,int,int)> ->_NONE_
<android.speech.tts.TextToSpeech: int setOnUtteranceCompletedListener(android.speech.tts.TextToSpeech$OnUtteranceCompletedListener)> ->_NONE_
<android.app.admin.DevicePolicyManager: int getCurrentFailedPasswordAttempts()> ->_NONE_
<android.telephony.gsm.SmsMessage: java.lang.String getMessageBody()> ->_NONE_
<java.io.ObjectInputStream: java.io.ObjectInputStream$GetField readFields()> ->_NONE_
<gov.nist.javax.sip.address.SipUri: void setUriParms(gov.nist.core.NameValueList)> ->_NONE_
<android.net.sip.SimpleSessionDescription: java.lang.String[] getAttributeNames()> ->_NONE_
<android.animation.LayoutTransition: void setDuration(long)> ->_NONE_
<android.webkit.WebSettingsClassic: void setSansSerifFontFamily(java.lang.String)> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: java.lang.String getContentEncoding()> ->_NONE_
<org.apache.http.params.HttpConnectionParams: boolean getSoReuseaddr(org.apache.http.params.HttpParams)> ->_NONE_
<android.view.Window: void setFlags(int,int)> ->_NONE_
<org.jivesoftware.smackx.provider.MUCUserProvider: int getTag()> ->_NONE_
<android.app.BackStackRecord: android.app.FragmentTransaction setTransition(int)> ->_NONE_
<android.widget.ImageView: void setImageAlpha(int)> ->_NONE_
<libcore.net.http.RequestHeaders: java.lang.String getUserAgent()> ->_NONE_
<org.apache.xml.utils.UnImplNode: java.lang.String getAttributeNS(java.lang.String,java.lang.String)> ->_NONE_
<android.renderscript.ScriptGroup: void setInput(android.renderscript.Script$KernelID,android.renderscript.Allocation)> ->_NONE_
<java.util.concurrent.Semaphore: int getQueueLength()> ->_NONE_
<android.appwidget.AppWidgetProviderInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.content.pm.PackageParser: android.content.pm.PackageParser$Provider parseProvider(android.content.pm.PackageParser$Package,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,int,java.lang.String[])> ->_NONE_
<org.apache.xpath.functions.FuncLocalPart: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<android.webkit.WebSettingsClassic: void setNeedInitialFocus(boolean)> ->_NONE_
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getDefaultActivityIcon()> ->_NONE_
<gov.nist.javax.sip.header.ContentLanguage: java.lang.String encodeBody()> ->_NONE_
<android.telephony.SmsCbCmasInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<gov.nist.javax.sip.header.Accept: void setContentType(java.lang.String)> ->_NONE_
<android.preference.PreferenceGroupAdapter: long getItemId(int)> ->_NONE_
<android.view.InputChannel: java.lang.String getName()> ->_NONE_
<java.lang.Class: java.lang.String getName()> ->_NONE_
<gov.nist.javax.sip.header.CallInfo: void setPurpose(java.lang.String)> ->_NONE_
<android.net.ConnectivityManager: android.net.ProxyProperties getProxy()> ->_NONE_
<android.view.View: int getBottomPaddingOffset()> ->_NONE_
<org.ccil.cowan.tagsoup.Element: void setAttribute(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.media.AudioManager: void setMasterVolume(int,int)> ->_NONE_
<java.net.URL: java.lang.String getProtocol()> ->_NONE_
<libcore.net.http.HttpConnection: libcore.net.http.HttpConnection$Address getAddress()> ->_NONE_
<java.security.cert.X509CertSelector: void setSerialNumber(java.math.BigInteger)> ->_NONE_
<gov.nist.javax.sip.stack.SIPClientTransaction: void sendMessage(gov.nist.javax.sip.message.SIPMessage)> ->_NONE_
<android.bluetooth.BluetoothHealth: android.os.ParcelFileDescriptor getMainChannelFd(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)> ->_NONE_
<java.security.Permission: java.lang.String getName()> ->_NONE_
<android.test.mock.MockResources: java.lang.String getResourceEntryName(int)> ->_NONE_
<android.widget.RelativeLayout: void setHorizontalGravity(int)> ->_NONE_
<android.media.AudioTrack: int getChannelConfiguration()> ->_NONE_
<android.preference.Preference: boolean getShouldDisableView()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: boolean getNeedClientAuth()> ->_NONE_
<libcore.io.ForwardingOs: int read(java.io.FileDescriptor,byte[],int,int)> ->_NONE_
<javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)> ->_NONE_
<android.accounts.AccountManagerService: void checkCallingUidAgainstAuthenticator(android.accounts.Account)> ->_NONE_
<android.webkit.WebViewClassic: int getScrollY()> ->_NONE_
<android.webkit.WebViewClassic: int getScrollX()> ->_NONE_
<org.apache.commons.logging.LogSource: void setLogImplementation(java.lang.String)> ->_NONE_
<android.content.ContentResolver: android.content.SyncInfo getCurrentSync()> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.CookieStore getCookieStore()> ->_NONE_
<org.ccil.cowan.tagsoup.Schema: java.lang.String getURI()> ->_NONE_
<dalvik.system.profiler.BinaryHprofReader: boolean parseRecord()> ->_NONE_
<android.view.textservice.SentenceSuggestionsInfo: int getLengthAt(int)> ->_NONE_
<java.security.spec.RSAMultiPrimePrivateCrtKeySpec: java.math.BigInteger getCrtCoefficient()> ->_NONE_
<android.view.animation.AccelerateInterpolator: float getInterpolation(float)> ->_NONE_
<org.apache.http.auth.AuthSchemeRegistry: void setItems(java.util.Map)> ->_NONE_
<android.view.Choreographer: long getFrameDelay()> ->_NONE_
<android.bluetooth.BluetoothDevice: boolean setPasskey(int)> ->_NONE_
<android.widget.TextView: void setFilters(android.text.InputFilter[])> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: int getItemCount(java.lang.Object)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setAccessibilityFocused(boolean)> ->_NONE_
<org.apache.xpath.axes.WalkingIterator: void setExpression(org.apache.xpath.Expression)> ->_NONE_
<java.lang.CaseMapper: java.lang.String toLowerCase(java.util.Locale,java.lang.String,char[],int,int)> ->_NONE_
<android.database.sqlite.SQLiteDatabase: void dump(android.util.Printer,boolean)> ->_NONE_
<gov.nist.javax.sip.header.ims.Privacy: java.lang.String getPrivacy()> ->_NONE_
<android.filterfw.core.FrameFormat: boolean isReplaceableBy(android.filterfw.core.FrameFormat)> ->_NONE_
<android.inputmethodservice.Keyboard: boolean setShifted(boolean)> ->_NONE_
<org.apache.harmony.security.asn1.BerOutputStream: void getChoiceLength(org.apache.harmony.security.asn1.ASN1Choice)> ->_NONE_
<gov.nist.javax.sip.header.RSeq: void setSeqNumber(long)> ->_NONE_
<jp.co.omronsoft.openwnn.TextCandidatesViewManager: int getWordCount()> ->_NONE_
<junit.textui.ResultPrinter: void printDefects(java.util.Enumeration,int,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationHeader: void setCK(java.lang.String)> ->_NONE_
<android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)> ->_NONE_
<android.inputmethodservice.ExtractEditText: void setExtractedText(android.view.inputmethod.ExtractedText)> ->_NONE_
<org.apache.xalan.templates.ElemVariable: org.apache.xpath.objects.XObject getValue(org.apache.xalan.transformer.TransformerImpl,int)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ContactList getContactHeaders()> ->_NONE_
<java.nio.DoubleToByteBufferAdapter: double get()> ->_NONE_
<android.view.View: int getMinimumHeight()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: byte[] getDigestMD5withoutLast()> ->_NONE_
<android.filterpacks.imageproc.RedEyeFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<net.oauth.signature.RSA_SHA1: java.security.PrivateKey getPrivateKeyFromDer(byte[])> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: com.google.common.io.protocol.ProtoBuf getExtensionProtoBuf()> ->_NONE_
<android.net.http.Headers: void setEtag(java.lang.String)> ->_NONE_
<org.apache.xalan.transformer.TransformerIdentityImpl: java.lang.String getSystemId()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: void setDocumentBaseURI(java.lang.String)> ->_NONE_
<android.graphics.drawable.InsetDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> ->_NONE_
<android.opengl.Matrix: void setRotateEulerM(float[],int,float,float,float)> ->_NONE_
<android.location.Location: void setExtras(android.os.Bundle)> ->_NONE_
<org.kxml2.io.KXmlParser: void defineEntityReplacementText(java.lang.String,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.SIPDateHeader: java.util.Calendar getDate()> ->_NONE_
<org.javia.arity.Function: void setDerivative(org.javia.arity.Function)> ->_NONE_
<android.net.LocalSocket: java.io.OutputStream getOutputStream()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getTagName()> ->_NONE_
<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo[] loadVersionInfo(java.lang.String[],java.lang.ClassLoader)> ->_NONE_
<android.media.AudioTrack: int getAudioSessionId()> ->_NONE_
<android.app.ActivityManager: java.util.List getRunningAppProcesses()> ->_NONE_
<org.apache.xalan.templates.TemplateList: org.apache.xalan.templates.TemplateSubPatternAssociation getHead(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM)> ->_NONE_
<org.apache.xml.serializer.CharInfo: java.lang.String getOutputStringForChar(char)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.ConnectionState: int getPaddingSize(int)> ->_NONE_
<org.apache.http.impl.auth.RFC2617Scheme: void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int)> ->_NONE_
<android.bluetooth.BluetoothTetheringDataTracker: void setDependencyMet(boolean)> ->_NONE_
<org.apache.xpath.functions.FunctionMultiArgs: org.apache.xpath.Expression[] getArgs()> ->_NONE_
<junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)> ->_NONE_
<org.jivesoftware.smackx.GroupChatInvitation: java.lang.String getElementName()> ->_NONE_
<android.telephony.CellIdentityLte: int getTac()> ->_NONE_
<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node getNextSibling()> ->_NONE_
<gov.nist.javax.sip.stack.TCPMessageChannel: java.lang.String getViaHost()> ->_NONE_
<java.security.cert.X509CertSelector: int getBasicConstraints()> ->_NONE_
<android.widget.GridLayout: int getDefaultMargin(android.view.View,boolean,boolean)> ->_NONE_
<gov.nist.javax.sip.stack.SIPClientTransaction: java.lang.String getViaHost()> ->_NONE_
<android.filterfw.core.GLFrame: void setDataFromFrame(android.filterfw.core.Frame)> ->_NONE_
<org.apache.xpath.compiler.OpMap: int getFirstPredicateOpPos(int)> ->_NONE_
<org.apache.harmony.xml.parsers.DocumentBuilderImpl: void parse(org.kxml2.io.KXmlParser,org.apache.harmony.xml.dom.DocumentImpl,org.w3c.dom.Node,int)> ->_NONE_
<org.apache.xalan.processor.XSLTElementProcessor: org.apache.xalan.processor.XSLTElementDef getElemDef()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: org.apache.harmony.xnet.provider.jsse.CipherSuite[] getEnabledCipherSuitesMember()> ->_NONE_
<android.app.Fragment: int getId()> ->_NONE_
<android.app.admin.DevicePolicyManager: int getPasswordMinimumSymbols(android.content.ComponentName,int)> ->_NONE_
<org.xml.sax.helpers.LocatorImpl: int getLineNumber()> ->_NONE_
<org.apache.xpath.XPath: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)> ->_NONE_
<android.media.MediaExtractor: void setDataSource(java.lang.String)> ->_NONE_
<android.webkit.WebViewClassic: void loadViewState(java.io.InputStream)> ->_NONE_
<android.text.method.MetaKeyKeyListener: int getMetaState(long)> ->_NONE_
<android.telephony.CellInfo: void writeToParcel(android.os.Parcel,int,int)> ->_NONE_
<android.view.inputmethod.CorrectionInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.telephony.CellSignalStrengthLte: int getDbm()> ->_NONE_
<android.webkit.Plugin: void setPath(java.lang.String)> ->_NONE_
<org.apache.xpath.compiler.OpMap: org.apache.xpath.compiler.OpMapVector getOpMap()> ->_NONE_
<android.content.IntentFilter: java.lang.String getCategory(int)> ->_NONE_
<java.util.EventListenerProxy: java.util.EventListener getListener()> ->_NONE_
<org.apache.xalan.templates.ElemVariable: org.apache.xml.utils.QName getName()> ->_NONE_
<android.text.method.TimeKeyListener: char[] getAcceptedChars()> ->_NONE_
<javax.obex.ClientOperation: long getLength()> ->_NONE_
<android.widget.AdapterViewAnimator: android.view.View getCurrentView()> ->_NONE_
<android.appwidget.AppWidgetManager: void updateAppWidget(int[],android.widget.RemoteViews)> ->_NONE_
<android.filterpacks.videosink.MediaEncoderFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)> ->_NONE_
<libcore.icu.NativeDecimalFormat: void setParseBigDecimal(boolean)> ->_NONE_
<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParserTokenManager: org.apache.james.mime4j.field.contenttype.parser.Token getNextToken()> ->_NONE_
<android.test.mock.MockCursor: int getCount()> ->_NONE_
<android.media.videoeditor.MediaArtistNativeHelper: int getSlideSettingsDirection(int)> ->_NONE_
<android.app.ApplicationThreadProxy: void getMemoryInfo(android.os.Debug$MemoryInfo)> ->_NONE_
<org.apache.harmony.security.pkcs7.SignerInfo: javax.security.auth.x500.X500Principal getIssuer()> ->_NONE_
<javax.sip.ResponseEvent: javax.sip.ClientTransaction getClientTransaction()> ->_NONE_
<gov.nist.javax.sip.stack.ServerLog: void setStackIpAddress(java.lang.String)> ->_NONE_
<android.net.LinkProperties: java.util.Collection getRoutes()> ->_NONE_
<org.apache.http.conn.MultihomePlainSocketFactory: org.apache.http.conn.MultihomePlainSocketFactory getSocketFactory()> ->_NONE_
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.StylesheetComposed getStylesheetComposed()> ->_NONE_
<android.preference.PreferenceManager: android.preference.PreferenceScreen getPreferenceScreen()> ->_NONE_
<java.security.KeyStore: java.lang.String getCertificateAlias(java.security.cert.Certificate)> ->_NONE_
<android.accounts.AccountManagerService: android.accounts.Account[] getAccountsAsUser(java.lang.String,int)> ->_NONE_
<org.apache.xml.serializer.utils.SystemIDResolver: java.lang.String replaceChars(java.lang.String)> ->_NONE_
<android.view.View: android.graphics.Bitmap getDrawingCache()> ->_NONE_
<org.apache.xpath.axes.FilterExprIteratorSimple: org.apache.xpath.Expression getInnerExpression()> ->_NONE_
<android.graphics.drawable.ColorDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> ->_NONE_
<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.Node getFirstChild()> ->_NONE_
<javax.crypto.Mac: void update(byte[],int,int)> ->_NONE_
<android.media.AudioManager: int getMode()> ->_NONE_
<android.media.Metadata: byte[] getByteArray(int)> ->_NONE_
<org.apache.xpath.compiler.OpMap: void setOp(int,int)> ->_NONE_
<android.opengl.GLLogWrapper: java.lang.String getIndexType(int)> ->_NONE_
<android.content.AbstractThreadedSyncAdapter: android.os.IBinder getSyncAdapterBinder()> ->_NONE_
<android.text.BoringLayout: int getLineTop(int)> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getContentDescription()> ->_NONE_
<android.widget.TabHost: void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener)> ->_NONE_
<java.nio.SelectorImpl: void setPollFd(int,java.io.FileDescriptor,int,java.lang.Object)> ->_NONE_
<org.kxml2.io.KXmlParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)> ->_NONE_
<java.net.Socks4Message: void setString(int,int,java.lang.String)> ->_NONE_
<android.content.SyncOperation: void updateEffectiveRunTime()> ->_NONE_
<gov.nist.core.LogWriter: int getLineCount()> ->_NONE_
<gov.nist.javax.sip.message.SIPRequest: void setTransaction(java.lang.Object)> ->_NONE_
<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object set(int,java.lang.Object)> ->_NONE_
<org.apache.xalan.transformer.TransformerHandlerImpl: void externalEntityDecl(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xpath.functions.SecuritySupport: java.lang.ClassLoader getContextClassLoader()> ->_NONE_
<android.text.method.ArrowKeyMovementMethod: android.text.method.MovementMethod getInstance()> ->_NONE_
<android.view.ScaleGestureDetector: float getPreviousSpanY()> ->_NONE_
<org.apache.http.impl.client.TunnelRefusedException: org.apache.http.HttpResponse getResponse()> ->_NONE_
<android.app.AlarmManager: void setTimeZone(java.lang.String)> ->_NONE_
<android.webkit.WebSettings: java.lang.String getDefaultUserAgent(android.content.Context)> ->_NONE_
<android.view.ScaleGestureDetector: float getPreviousSpanX()> ->_NONE_
<android.webkit.ZoomManager: void setInitialScaleInPercent(int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.CipherSuite: java.lang.String getName()> ->_NONE_
<android.location.Geocoder: java.util.List getFromLocation(double,double,int)> ->_NONE_
<android.view.Display: int getHeight()> ->_NONE_
<javax.sip.IOExceptionEvent: int getPort()> ->_NONE_
<android.os.Process: int getParentPid(int)> ->_NONE_
<org.apache.commons.io.input.CharSequenceReader: int read()> ->_NONE_
<android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()> ->_NONE_
<java.util.IllegalFormatPrecisionException: int getPrecision()> ->_NONE_
<android.accounts.AccountManagerService: android.os.UserManager getUserManager()> ->_NONE_
<java.security.spec.ECParameterSpec: int getCofactor()> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationInfo: java.lang.String encodeBody()> ->_NONE_
<org.apache.xml.utils.UnImplNode: org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)> ->_NONE_
<android.telephony.SmsCbCmasInfo: int getCertainty()> ->_NONE_
<android.media.MediaExtractor: void setDataSource(java.io.FileDescriptor)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: int getReceiveBufferSize()> ->_NONE_
<org.apache.xalan.transformer.TrAXFilter: void setContentHandler(org.xml.sax.ContentHandler)> ->_NONE_
<android.net.http.Headers: java.lang.String getAcceptRanges()> ->_NONE_
<android.widget.RemoteViews: void setBoolean(int,java.lang.String,boolean)> ->_NONE_
<java.text.DecimalFormat: void setNegativeSuffix(java.lang.String)> ->_NONE_
<java.net.HttpURLConnection: java.security.Permission getPermission()> ->_NONE_
<android.app.Activity: android.app.Activity getParent()> ->_NONE_
<android.test.mock.MockResources: int getDimensionPixelSize(int)> ->_NONE_
<dalvik.system.profiler.BinaryHprofWriter: void writeStackTrace(dalvik.system.profiler.HprofData$StackTrace)> ->_NONE_
<android.widget.TextView: void setMaxEms(int)> ->_NONE_
<android.widget.ToggleButton: java.lang.CharSequence getTextOn()> ->_NONE_
<java.text.NumberFormat: java.text.NumberFormat getIntegerInstance()> ->_NONE_
<java.util.jar.InitManifest: boolean readHeader()> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: org.w3c.dom.Node getFirstChild()> ->_NONE_
<android.server.search.Searchables: java.lang.String getGlobalSearchProviderSetting()> ->_NONE_
<android.animation.ValueAnimator: void setValues(android.animation.PropertyValuesHolder[])> ->_NONE_
<android.webkit.WebViewClassic: boolean onHoverEvent(android.view.MotionEvent)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getExpandedTypeID(java.lang.String,java.lang.String,int)> ->_NONE_
<gov.nist.javax.sip.parser.ims.ServiceRouteParser: gov.nist.javax.sip.header.SIPHeader parse()> ->_NONE_
<java.util.zip.ZipEntry: java.lang.String getName()> ->_NONE_
<org.apache.http.impl.io.ContentLengthInputStream: int read(byte[])> ->_NONE_
<android.webkit.WebViewClassic: void documentHasImages(android.os.Message)> ->_NONE_
<java.util.LinkedList: java.lang.Object set(int,java.lang.Object)> ->_NONE_
<android.net.wifi.p2p.WifiP2pGroup: void setNetworkName(java.lang.String)> ->_NONE_
<org.apache.http.impl.auth.RFC2617Scheme: java.util.Map getParameters()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: void setHostAddress(java.lang.String)> ->_NONE_
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getDrawable(java.lang.String,int,android.content.pm.ApplicationInfo)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getMethod()> ->_NONE_
<android.media.ExifInterface: double getAttributeDouble(java.lang.String,double)> ->_NONE_
<android.webkit.PluginData: java.util.Map getHeaders()> ->_NONE_
<java.text.DecimalFormat: void setNegativePrefix(java.lang.String)> ->_NONE_
<android.media.AudioManager: void setStreamVolume(int,int,int)> ->_NONE_
<org.kxml2.io.KXmlParser: java.lang.String getAttributeName(int)> ->_NONE_
<libcore.net.UriCodec: void appendPartiallyEncoded(java.lang.StringBuilder,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: void setLastAckSent(gov.nist.javax.sip.message.SIPRequest)> ->_NONE_
<android.widget.AdapterView: void setEmptyView(android.view.View)> ->_NONE_
<android.content.ComponentName: void writeToParcel(android.content.ComponentName,android.os.Parcel)> ->_NONE_
<android.content.ContextWrapper: java.io.File getFilesDir()> ->_NONE_
<android.webkit.CallbackProxy: android.webkit.WebBackForwardListClient getWebBackForwardListClient()> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.StackGuard getStackGuard()> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: void setPassword(boolean)> ->_NONE_
<android.test.mock.MockCursor: java.lang.String getString(int)> ->_NONE_
<android.view.animation.Animation: long getDuration()> ->_NONE_
<java.util.concurrent.atomic.AtomicLong: long getAndSet(long)> ->_NONE_
<android.support.v13.app.FragmentTabHost: void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener)> ->_NONE_
<android.hardware.usb.UsbEndpoint: int getAddress()> ->_NONE_
<android.webkit.WebViewClassic: void stopLoading()> ->_NONE_
<android.graphics.drawable.shapes.Shape: float getWidth()> ->_NONE_
<android.net.wifi.WifiManager: java.util.List getConfiguredNetworks()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: void setNodeValue(java.lang.String)> ->_NONE_
<org.apache.harmony.security.asn1.BerOutputStream: void getSequenceOfLength(org.apache.harmony.security.asn1.ASN1SequenceOf)> ->_NONE_
<android.nfc.tech.NfcV: android.nfc.Tag getTag()> ->_NONE_
<android.net.LocalSocket: android.net.Credentials getPeerCredentials()> ->_NONE_
<android.app.PendingIntent: android.app.PendingIntent getBroadcastAsUser(android.content.Context,int,android.content.Intent,int,android.os.UserHandle)> ->_NONE_
<android.view.accessibility.AccessibilityRecord: void setItemCount(int)> ->_NONE_
<android.os.Parcel: void writeFloatArray(float[])> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: boolean getEnableSessionCreation()> ->_NONE_
<android.widget.DatePicker: void setMaxDate(long)> ->_NONE_
<org.apache.commons.codec.language.RefinedSoundex: char getMappingCode(char)> ->_NONE_
<android.drm.DrmManagerClient: android.content.ContentValues getConstraints(android.net.Uri,int)> ->_NONE_
<android.animation.ObjectAnimator: void setObjectValues(java.lang.Object[])> ->_NONE_
<android.filterfw.core.AsyncRunner: void setRunning(boolean)> ->_NONE_
<org.apache.xpath.jaxp.XPathFactoryImpl: boolean getFeature(java.lang.String)> ->_NONE_
<android.widget.LinearLayout: void setVerticalGravity(int)> ->_NONE_
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteSession getThreadSession()> ->_NONE_
<android.app.Fragment: void setIndex(int,android.app.Fragment)> ->_NONE_
<org.apache.xpath.NodeSetDTM: int getAxis()> ->_NONE_
<android.app.ContextImpl: android.app.WallpaperManager getWallpaperManager()> ->_NONE_
<android.hardware.display.WifiDisplayStatus: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<gov.nist.javax.sip.message.SIPResponse: void setReasonPhrase(java.lang.String)> ->_NONE_
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.telephony.PhoneNumberUtils: java.lang.String convertAndStrip(java.lang.String)> ->_NONE_
<android.widget.TextView: float getLineSpacingExtra()> ->_NONE_
<android.nfc.tech.Ndef: void writeNdefMessage(android.nfc.NdefMessage)> ->_NONE_
<android.animation.LayoutTransition: void setAnimateParentHierarchy(boolean)> ->_NONE_
<java.net.HttpURLConnection: long getHeaderFieldDate(java.lang.String,long)> ->_NONE_
<org.xml.sax.InputSource: java.lang.String getEncoding()> ->_NONE_
<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: java.lang.Object getExtensionAccessInfo()> ->_NONE_
<android.content.pm.VerificationParams: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader)> ->_NONE_
<org.apache.xml.serializer.utils.SerializerMessages_zh_TW: java.lang.Object[][] getContents()> ->_NONE_
<android.widget.RemoteViews: void setContentDescription(int,java.lang.CharSequence)> ->_NONE_
<jp.co.omronsoft.openwnn.JAJP.OpenWnnEngineJAJP: boolean setDictionary(int)> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationInfo: java.lang.String getNextNonce()> ->_NONE_
<android.widget.DialerFilter: java.lang.CharSequence getFilterText()> ->_NONE_
<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)> ->_NONE_
<android.text.method.TextKeyListener: android.text.method.KeyListener getKeyListener(android.view.KeyEvent)> ->_NONE_
<java.util.concurrent.atomic.AtomicStampedReference: int getStamp()> ->_NONE_
<android.app.ActivityManager: com.android.internal.os.PkgUsageStats[] getAllPackageUsageStats()> ->_NONE_
<org.apache.harmony.security.x509.CertificateList: org.apache.harmony.security.x509.TBSCertList getTbsCertList()> ->_NONE_
<gov.nist.javax.sip.header.ErrorInfo: java.lang.String getErrorMessage()> ->_NONE_
<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getTextAfterCursor(int,int)> ->_NONE_
<android.preference.EditTextPreference: java.lang.String getText()> ->_NONE_
<android.os.Parcel: java.io.Serializable readSerializable()> ->_NONE_
<android.service.dreams.DreamService: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)> ->_NONE_
<jp.co.omronsoft.openwnn.ComposingText: java.util.ArrayList getStringLayer(int)> ->_NONE_
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.ConnPoolByRoute createConnectionPool(long,java.util.concurrent.TimeUnit)> ->_NONE_
<android.view.KeyEvent: char getMatch(char[])> ->_NONE_
<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getNamespaceURI()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNamedNodeMap: org.w3c.dom.Node getNamedItemNS(java.lang.String,java.lang.String)> ->_NONE_
<android.widget.PopupWindow: void setBackgroundDrawable(android.graphics.drawable.Drawable)> ->_NONE_
<android.media.MediaRouter: int getRouteCount()> ->_NONE_
<java.io.CharArrayWriter: void write(char[],int,int)> ->_NONE_
<java.text.NumberFormat: java.text.NumberFormat getNumberInstance(java.util.Locale)> ->_NONE_
<jp.co.omronsoft.openwnn.Keyboard: int getKeyHeight()> ->_NONE_
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script$KernelID getKernelIDSrcAtop()> ->_NONE_
<org.apache.xpath.axes.AxesWalker: org.apache.xpath.Expression getExpression()> ->_NONE_
<android.content.ContentResolver: android.content.IContentService getContentService()> ->_NONE_
<android.nfc.tech.Ndef: void reconnect()> ->_NONE_
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)> ->_NONE_
<libcore.io.IoBridge: int maybeThrowAfterSendto(boolean,libcore.io.ErrnoException)> ->_NONE_
<android.telephony.SignalStrength: int getLteSignalStrenght()> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertPathImpl: java.util.Iterator getEncodings()> ->_NONE_
<android.nfc.tech.MifareUltralight: void reconnect()> ->_NONE_
<android.webkit.DateSorter: long getBoundary(int)> ->_NONE_
<org.apache.harmony.xml.dom.ElementImpl: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)> ->_NONE_
<org.apache.james.mime4j.BodyDescriptor: java.util.Map getParameters()> ->_NONE_
<java.security.AlgorithmParameterGenerator: java.security.AlgorithmParameterGenerator getInstance(java.lang.String,java.lang.String)> ->_NONE_
<net.oauth.OAuth: java.lang.String percentEncode(java.lang.Iterable)> ->_NONE_
<org.ccil.cowan.tagsoup.AttributesImpl: int getIndex(java.lang.String)> ->_NONE_
<android.view.MotionEvent: int getDeviceId()> ->_NONE_
<org.ccil.cowan.tagsoup.ElementType: void setAttribute(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.webkit.CertTool: java.lang.String getSignedPublicKey(android.content.Context,int,java.lang.String)> ->_NONE_
<android.app.DialogFragment: boolean getShowsDialog()> ->_NONE_
<android.location.Location: double getAltitude()> ->_NONE_
<android.net.wifi.WifiStateMachine: void setScanType(boolean)> ->_NONE_
<org.apache.harmony.xml.dom.TextImpl: java.lang.String getWholeText()> ->_NONE_
<android.database.sqlite.SQLiteDatabase: java.util.ArrayList getDbStats()> ->_NONE_
<android.filterpacks.imageproc.SaturateFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)> ->_NONE_
<android.app.ActivityManagerProxy: void killBackgroundProcesses(java.lang.String,int)> ->_NONE_
<org.apache.commons.logging.LogSource: org.apache.commons.logging.Log getInstance(java.lang.Class)> ->_NONE_
<android.drm.DrmManagerClient: boolean canHandle(android.net.Uri,java.lang.String)> ->_NONE_
<org.jivesoftware.smack.GroupChat: void sendMessage(org.jivesoftware.smack.packet.Message)> ->_NONE_
<android.net.wifi.p2p.WifiP2pGroupList: java.lang.String getOwnerAddr(int)> ->_NONE_
<org.apache.harmony.xml.dom.AttrImpl: void setPrefix(java.lang.String)> ->_NONE_
<android.app.SharedPreferencesImpl: int getInt(java.lang.String,int)> ->_NONE_
<android.database.BulkCursorNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.AlertProtocol: byte getDescriptionCode()> ->_NONE_
<android.util.SparseArray: java.lang.Object get(int,java.lang.Object)> ->_NONE_
<android.renderscript.Allocation: android.graphics.SurfaceTexture getSurfaceTexture()> ->_NONE_
<android.os.AsyncTask: java.lang.Object get()> ->_NONE_
<android.widget.SearchView: void setIconified(boolean)> ->_NONE_
<libcore.io.ForwardingOs: int write(java.io.FileDescriptor,byte[],int,int)> ->_NONE_
<android.database.sqlite.SQLiteProgram: int getConnectionFlags()> ->_NONE_
<android.app.WallpaperInfo: android.content.pm.ServiceInfo getServiceInfo()> ->_NONE_
<gov.nist.javax.sip.header.To: java.lang.String encode()> ->_NONE_
<org.apache.xml.utils.UnImplNode: org.w3c.dom.Element getOwnerElement()> ->_NONE_
<java.security.cert.CertStore: java.security.cert.CertStore getInstance(java.lang.String,java.security.cert.CertStoreParameters)> ->_NONE_
<android.telephony.SmsCbMessage: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: int getXSLToken()> ->_NONE_
<android.view.MotionEvent: int getMetaState()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: java.lang.String getFormat()> ->_NONE_
<android.widget.TextClock: void setFormat24Hour(java.lang.CharSequence)> ->_NONE_
<gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.message.Request createRequest(javax.sip.address.URI,java.lang.String,javax.sip.header.CallIdHeader,javax.sip.header.CSeqHeader,javax.sip.header.FromHeader,javax.sip.header.ToHeader,java.util.List,javax.sip.header.MaxForwardsHeader,byte[],javax.sip.header.ContentTypeHeader)> ->_NONE_
<java.math.BigInt: int getNativeBIGNUM()> ->_NONE_
<android.view.MotionEvent: float getHistoricalSize(int,int)> ->_NONE_
<java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()> ->_NONE_
<org.apache.http.impl.conn.tsccm.BasicPoolEntryRef: org.apache.http.conn.routing.HttpRoute getRoute()> ->_NONE_
<java.net.Socket: void setTrafficClass(int)> ->_NONE_
<android.net.wifi.WifiConfigStore: void sendConfiguredNetworksChangedBroadcast(android.net.wifi.WifiConfiguration,int)> ->_NONE_
<android.util.TimeUtils: java.lang.String getTimeZoneDatabaseVersion()> ->_NONE_
<android.webkit.CookieManager: java.lang.String getCookie(java.lang.String,boolean)> ->_NONE_
<android.graphics.drawable.ShapeDrawable: void setPadding(int,int,int,int)> ->_NONE_
<gov.nist.javax.sip.address.SipUri: java.lang.String getMethod()> ->_NONE_
<gov.nist.javax.sip.message.SIPResponse: java.lang.String getDialogId(boolean,java.lang.String)> ->_NONE_
<android.text.method.DateKeyListener: int getInputType()> ->_NONE_
<gov.nist.core.GenericObjectList: void setSeparator(java.lang.String)> ->_NONE_
<android.inputmethodservice.Keyboard: void setKeyHeight(int)> ->_NONE_
<android.text.style.SubscriptSpan: void updateMeasureState(android.text.TextPaint)> ->_NONE_
<android.filterfw.core.SimpleFrame: java.lang.Object getObjectValue()> ->_NONE_
<org.apache.harmony.security.asn1.ASN1OctetString: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)> ->_NONE_
<android.test.RenamingDelegatingContext: java.lang.String getDatabasePrefix()> ->_NONE_
<org.apache.xalan.templates.ElemTemplate: void setName(org.apache.xml.utils.QName)> ->_NONE_
<android.filterfw.core.VertexFrame: int getVboId()> ->_NONE_
<javax.sql.ConnectionEvent: java.sql.SQLException getSQLException()> ->_NONE_
<android.view.ViewRootImpl: void requestUpdateConfiguration(android.content.res.Configuration)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLEngineDataStream: byte[] getData(int)> ->_NONE_
<android.content.CursorLoader: void setProjection(java.lang.String[])> ->_NONE_
<android.widget.AutoCompleteTextView: android.widget.AdapterView$OnItemClickListener getItemClickListener()> ->_NONE_
<android.view.ViewConfiguration: int getScaledEdgeSlop()> ->_NONE_
<android.webkit.WebSettings: boolean getNavDump()> ->_NONE_
<android.hardware.usb.UsbAccessory: java.lang.String getManufacturer()> ->_NONE_
<org.apache.xml.serializer.ToHTMLStream: void setSpecialEscapeURLs(boolean)> ->_NONE_
<android.bluetooth.BluetoothClass: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)> ->_NONE_
<android.net.nsd.DnsSdTxtRecord: void set(java.lang.String,java.lang.String)> ->_NONE_
<android.database.AbstractCursor: int getPosition()> ->_NONE_
<android.graphics.BitmapFactory: android.graphics.Bitmap finishDecode(android.graphics.Bitmap,android.graphics.Rect,android.graphics.BitmapFactory$Options)> ->_NONE_
<android.gesture.GestureOverlayView: android.graphics.Path getGesturePath()> ->_NONE_
<org.apache.xml.utils.StylesheetPIHandler: javax.xml.transform.Source getAssociatedStylesheet()> ->_NONE_
<org.apache.xalan.templates.TemplateList: void setNamedTemplates(java.util.Hashtable)> ->_NONE_
<javax.xml.transform.stream.StreamResult: java.lang.String getSystemId()> ->_NONE_
<android.net.wifi.WifiSsid: java.lang.String getHexString()> ->_NONE_
<android.view.animation.Animation: int getZAdjustment()> ->_NONE_
<gov.nist.javax.sip.header.ProxyRequire: java.lang.String getOptionTag()> ->_NONE_
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)> ->_NONE_
<android.app.admin.DevicePolicyManager: boolean getCameraDisabled(android.content.ComponentName,int)> ->_NONE_
<gov.nist.javax.sip.address.NetObjectList: java.lang.String debugDump(int)> ->_NONE_
<android.view.inputmethod.BaseInputConnection: boolean performEditorAction(int)> ->_NONE_
<android.support.v4.widget.ScrollerCompat: int getDuration()> ->_NONE_
<android.widget.ListPopupWindow: int getAnimationStyle()> ->_NONE_
<android.gesture.GestureOverlayView: void setGestureStrokeSquarenessTreshold(float)> ->_NONE_
<android.widget.HorizontalScrollView: void setFillViewport(boolean)> ->_NONE_
<android.view.View: void setLayerPaint(android.graphics.Paint)> ->_NONE_
<android.filterfw.core.MutableFrameFormat: void setDimensions(int,int,int)> ->_NONE_
<org.xml.sax.ext.Attributes2Impl: void setDeclared(int,boolean)> ->_NONE_
<java.util.GregorianCalendar: int getMaximum(int)> ->_NONE_
<android.drm.DrmManagerClient: android.content.ContentValues getMetadata(android.net.Uri)> ->_NONE_
<org.jivesoftware.smack.packet.BatchPresence: java.util.Iterator getPresenceStanzaIterator()> ->_NONE_
<org.apache.xalan.templates.ElemWhen: java.lang.String getNodeName()> ->_NONE_
<org.apache.http.params.HttpProtocolParamBean: void setUserAgent(java.lang.String)> ->_NONE_
<org.apache.xpath.NodeSet: int getWhatToShow()> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertFactoryImpl: byte[] decodePEM(java.io.InputStream,byte[])> ->_NONE_
<java.net.Socket: java.net.InetAddress getInetAddress()> ->_NONE_
<java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String,java.security.Provider)> ->_NONE_
<java.net.SocketPermission: java.lang.String getActions()> ->_NONE_
<java.net.DatagramSocket: void send(java.net.DatagramPacket)> ->_NONE_
<org.apache.xalan.templates.ElemAttributeSet: void setName(org.apache.xml.utils.QName)> ->_NONE_
<android.text.AlteredCharSequence: void update(char[],int,int)> ->_NONE_
<org.apache.xml.serializer.utils.URI: java.lang.String getPath()> ->_NONE_
<libcore.net.http.ResponseHeaders: int getContentLength()> ->_NONE_
<android.media.MediaMetadataRetriever: void setDataSource(android.content.Context,android.net.Uri)> ->_NONE_
<android.media.videoeditor.EffectColor: int getColor()> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: boolean getDoOutput()> ->_NONE_
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()> ->_NONE_
<android.webkit.WebHistoryItem: java.lang.String getOriginalUrl()> ->_NONE_
<android.filterfw.core.Filter: void setInputValue(java.lang.String,java.lang.Object)> ->_NONE_
<android.webkit.BrowserFrame: void resetLoadingStates()> ->_NONE_
<android.content.ContentService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> ->_NONE_
<android.location.Address: void setSubAdminArea(java.lang.String)> ->_NONE_
<android.media.AudioService: void setMasterVolume(int,int)> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Implicit: void encodeASN(org.apache.harmony.security.asn1.BerOutputStream)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: org.w3c.dom.Node getNode(int)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.Contact getContactHeader()> ->_NONE_
<gov.nist.javax.sip.message.SIPResponse: void setBranch(gov.nist.javax.sip.header.Via,java.lang.String)> ->_NONE_
<android.telephony.CellIdentityCdma: int getBasestationId()> ->_NONE_
<android.view.View: int getAccessibilityCursorPosition()> ->_NONE_
<android.view.VolumePanel: void postVolumeChanged(int,int)> ->_NONE_
<libcore.net.url.JarURLConnectionImpl: void setDefaultUseCaches(boolean)> ->_NONE_
<java.util.concurrent.ForkJoinPool: void execute(java.util.concurrent.ForkJoinTask)> ->_NONE_
<android.widget.RemoteViews: android.widget.RemoteViews getRemoteViewsToApply(android.content.Context)> ->_NONE_
<android.util.DisplayMetrics: void setTo(android.util.DisplayMetrics)> ->_NONE_
<org.kxml2.io.KXmlParser: java.lang.String readValue(char,boolean,boolean,org.kxml2.io.KXmlParser$ValueContext)> ->_NONE_
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String loadDescription(android.content.pm.PackageManager)> ->_NONE_
<java.util.concurrent.ConcurrentLinkedDeque: void writeObject(java.io.ObjectOutputStream)> ->_NONE_
<org.apache.xpath.axes.NodeSequence: org.apache.xml.dtm.DTM getDTM(int)> ->_NONE_
<android.os.BinderProxy: void dumpAsync(java.io.FileDescriptor,java.lang.String[])> ->_NONE_
<android.graphics.drawable.BitmapDrawable: void setAntiAlias(boolean)> ->_NONE_
<java.security.spec.RSAPrivateKeySpec: java.math.BigInteger getPrivateExponent()> ->_NONE_
<android.support.v4.view.ViewPager: int getCurrentItem()> ->_NONE_
<android.content.pm.PackageParser: android.content.pm.PackageParser$Permission parsePermissionTree(android.content.pm.PackageParser$Package,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,java.lang.String[])> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: void unexecuteNSDecls(org.apache.xalan.transformer.TransformerImpl,java.lang.String)> ->_NONE_
<android.telephony.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)> ->_NONE_
<android.filterfw.core.VertexFrame: void setDataFromFrame(android.filterfw.core.Frame)> ->_NONE_
<android.widget.TimePicker: int getBaseline()> ->_NONE_
<java.io.FileOutputStream: java.io.FileDescriptor getFD()> ->_NONE_
<android.net.BaseNetworkStateTracker: android.net.NetworkInfo getNetworkInfo()> ->_NONE_
<org.apache.harmony.security.x509.TBSCertList: int getVersion()> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.protocol.HttpRequestExecutor getRequestExecutor()> ->_NONE_
<android.webkit.WebViewClassic: void deleteSelection(int,int)> ->_NONE_
<android.webkit.WebViewCore: void loadUrl(java.lang.String,java.util.Map)> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getText()> ->_NONE_
<android.widget.AbsListView: void setRemoteViewsOnClickHandler(android.widget.RemoteViews$OnClickHandler)> ->_NONE_
<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)> ->_NONE_
<java.text.DecimalFormatSymbols: char getPercent()> ->_NONE_
<android.util.ReflectiveProperty: java.lang.Object get(java.lang.Object)> ->_NONE_
<org.jivesoftware.smack.Chat: java.lang.String getParticipant()> ->_NONE_
<android.view.inputmethod.InputMethodInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)> ->_NONE_
<android.widget.DatePicker: java.util.Calendar getCalendarForLocale(java.util.Calendar,java.util.Locale)> ->_NONE_
<android.webkit.WebViewClassic: void loadDataImpl(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.os.PerformanceCollector: android.os.Bundle stopTiming(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.message.HeaderIterator: void set(java.lang.Object)> ->_NONE_
<android.inputmethodservice.IInputMethodWrapper: void executeMessage(android.os.Message)> ->_NONE_
<android.filterfw.core.NativeBuffer: int getElementSize()> ->_NONE_
<java.text.NumberFormat: int getMaximumFractionDigits()> ->_NONE_
<android.app.admin.DeviceAdminInfo: java.util.ArrayList getUsedPolicies()> ->_NONE_
<android.location.GeocoderParams: java.util.Locale getLocale()> ->_NONE_
<android.app.ActionBar: void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)> ->_NONE_
<android.view.ViewGroup: int getDescendantFocusability()> ->_NONE_
<org.apache.james.mime4j.util.PartialInputStream: int getBytesLeft()> ->_NONE_
<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])> ->_NONE_
<android.app.Fragment: void setHasOptionsMenu(boolean)> ->_NONE_
<javax.crypto.KeyAgreement: java.security.Provider getProvider()> ->_NONE_
<dalvik.system.VMRuntime: long getMinimumHeapSize()> ->_NONE_
<libcore.icu.RuleBasedCollatorICU: void setStrength(int)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: void setMessageContent(java.lang.String,java.lang.String,byte[])> ->_NONE_
<org.apache.xalan.templates.KeyDeclaration: int getXSLToken()> ->_NONE_
<android.app.ActivityManagerProxy: void finishReceiver(android.os.IBinder,int,java.lang.String,android.os.Bundle,boolean)> ->_NONE_
<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController getSelectionController()> ->_NONE_
<java.lang.Class: java.net.URL getResource(java.lang.String)> ->_NONE_
<android.preference.Preference: java.lang.StringBuilder getFilterableStringBuilder()> ->_NONE_
<android.media.effect.FilterEffect: android.filterfw.core.FilterContext getFilterContext()> ->_NONE_
<gov.nist.javax.sip.message.ContentImpl: java.lang.Object getContent()> ->_NONE_
<android.graphics.drawable.NinePatchDrawable: android.graphics.Insets getLayoutInsets()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: byte[] getEncoded()> ->_NONE_
<java.util.ServiceLoader: void internalLoad()> ->_NONE_
<org.apache.xpath.XPath: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,org.w3c.dom.Node,org.apache.xml.utils.PrefixResolver)> ->_NONE_
<libcore.io.ForwardingOs: void ftruncate(java.io.FileDescriptor,long)> ->_NONE_
<android.os.CommonTimeConfig: int setMasterElectionPriority(byte)> ->_NONE_
<org.apache.harmony.security.x509.X509PublicKey: java.lang.String getAlgorithm()> ->_NONE_
<libcore.icu.NativeDecimalFormat: void setMinimumFractionDigits(int)> ->_NONE_
<java.security.AccessControlContext: java.security.DomainCombiner getDomainCombiner()> ->_NONE_
<android.preference.Preference: float getPersistedFloat(float)> ->_NONE_
<android.media.audiofx.EnvironmentalReverb: short getReverbLevel()> ->_NONE_
<android.view.ScaleGestureDetector: float getCurrentSpanX()> ->_NONE_
<android.view.ScaleGestureDetector: float getCurrentSpanY()> ->_NONE_
<android.net.SSLCertificateSocketFactory: javax.net.SocketFactory getDefault(int)> ->_NONE_
<org.jivesoftware.smack.util.PacketParserUtils: int getIntOrDefault(com.google.common.io.protocol.ProtoBuf,int,int)> ->_NONE_
<android.webkit.WebSettings: boolean getDatabaseEnabled()> ->_NONE_
<gov.nist.javax.sip.stack.TLSMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()> ->_NONE_
<android.content.SyncManager: void dump(java.io.FileDescriptor,java.io.PrintWriter)> ->_NONE_
<android.app.ActivityManager: java.util.List getRunningTasks(int,int,android.app.IThumbnailReceiver)> ->_NONE_
<java.security.cert.CertPathBuilder: java.lang.String getAlgorithm()> ->_NONE_
<android.database.sqlite.SQLiteConnection: long executeForLastInsertedRowId(java.lang.String,java.lang.Object[],android.os.CancellationSignal)> ->_NONE_
<java.io.PipedOutputStream: void connect(java.io.PipedInputStream)> ->_NONE_
<android.telephony.CellBroadcastMessage: java.lang.String getLanguageCode()> ->_NONE_
<org.apache.james.mime4j.message.Multipart: void setParent(org.apache.james.mime4j.message.Entity)> ->_NONE_
<android.widget.SearchView: void setAppSearchData(android.os.Bundle)> ->_NONE_
<android.telephony.CellSignalStrengthCdma: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.harmony.security.utils.ObjectIdentifier: java.lang.String getName()> ->_NONE_
<org.jivesoftware.smack.PacketReader: org.jivesoftware.smack.packet.IQ handleUnsupportedIqPacket(java.lang.String,java.lang.String,java.lang.String,org.jivesoftware.smack.packet.IQ$Type,long)> ->_NONE_
<android.media.AudioTrack: int write(short[],int,int)> ->_NONE_
<android.widget.TextView: void setTypeface(android.graphics.Typeface,int)> ->_NONE_
<android.widget.RemoteViewsAdapter: long getItemId(int)> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponseInterceptor getResponseInterceptor(int)> ->_NONE_
<android.media.AudioService: void setSpeakerphoneOn(boolean)> ->_NONE_
<android.test.mock.MockPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)> ->_NONE_
<android.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: void setDoOutput(boolean)> ->_NONE_
<android.test.TestRunner: java.lang.reflect.Method getChildrenMethod(java.lang.Class)> ->_NONE_
<java.util.concurrent.locks.ReentrantReadWriteLock: java.lang.Thread getOwner()> ->_NONE_
<android.widget.Spinner: void setOnItemClickListenerInt(android.widget.AdapterView$OnItemClickListener)> ->_NONE_
<android.webkit.WebSettings: boolean getUseDoubleTree()> ->_NONE_
<java.security.spec.ECParameterSpec: java.math.BigInteger getOrder()> ->_NONE_
<org.apache.xml.utils.UnImplNode: org.w3c.dom.Element getDocumentElement()> ->_NONE_
<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent$OnFinished,android.os.Handler,java.lang.String)> ->_NONE_
<org.apache.xml.res.XMLErrorResources: java.lang.Object[][] getContents()> ->_NONE_
<android.media.videoeditor.VideoEditorImpl: void load()> ->_NONE_
<android.widget.RelativeLayout: int getChildMeasureSpec(int,int,int,int,int,int,int,int)> ->_NONE_
<android.bluetooth.BluetoothAdapter: android.bluetooth.IBluetooth getBluetoothService(android.bluetooth.IBluetoothManagerCallback)> ->_NONE_
<android.inputmethodservice.Keyboard: java.util.List getKeys()> ->_NONE_
<android.app.admin.DevicePolicyManager: boolean getStorageEncryption(android.content.ComponentName)> ->_NONE_
<android.content.pm.PackageParser: boolean parsePackageItemInfo(android.content.pm.PackageParser$Package,android.content.pm.PackageItemInfo,java.lang.String[],java.lang.String,android.content.res.TypedArray,int,int,int,int)> ->_NONE_
<jp.co.omronsoft.openwnn.Keyboard: java.util.List getKeys()> ->_NONE_
<org.apache.xpath.objects.XNodeSet: org.apache.xml.utils.XMLString getStringFromNode(int)> ->_NONE_
<gov.nist.javax.sip.SipProviderImpl: javax.sip.SipListener getSipListener()> ->_NONE_
<android.media.MediaRouter: android.media.MediaRouter$RouteInfo getSelectedRoute(int)> ->_NONE_
<org.apache.http.conn.params.ConnPerRouteBean: int getMaxForRoute(org.apache.http.conn.routing.HttpRoute)> ->_NONE_
<android.view.Surface: void setMatrix(float,float,float,float)> ->_NONE_
<gov.nist.javax.sip.header.AlertInfo: javax.sip.address.URI getAlertInfo()> ->_NONE_
<org.apache.xpath.axes.DescendantIterator: void setRoot(int,java.lang.Object)> ->_NONE_
<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.Builder getInstance()> ->_NONE_
<android.graphics.drawable.LayerDrawable: int getNumberOfLayers()> ->_NONE_
<android.webkit.PluginData: long getContentLength()> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ConnectionKeepAliveStrategy createConnectionKeepAliveStrategy()> ->_NONE_
<org.jivesoftware.smack.NonSASLAuthentication: java.lang.String authenticateAnonymously()> ->_NONE_
<android.media.videoeditor.MediaVideoItem: long getTimelineDuration()> ->_NONE_
<android.graphics.PathMeasure: boolean getSegment(float,float,android.graphics.Path,boolean)> ->_NONE_
<org.apache.harmony.security.asn1.BerOutputStream: void getExplicitLength(org.apache.harmony.security.asn1.ASN1Explicit)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: boolean getDebug()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNamedNodeMap: org.w3c.dom.Node getNamedItem(java.lang.String)> ->_NONE_
<android.widget.RemoteViews: void setFloat(int,java.lang.String,float)> ->_NONE_
<java.text.DecimalFormat: int getMinimumFractionDigits()> ->_NONE_
<android.view.ViewStub: int getLayoutResource()> ->_NONE_
<android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getSystemId()> ->_NONE_
<java.util.TimeZone: java.lang.String[] getAvailableIDs(int)> ->_NONE_
<java.lang.SecurityManager: boolean getInCheck()> ->_NONE_
<android.text.format.DateFormat: java.text.DateFormat getLongDateFormat(android.content.Context)> ->_NONE_
<gov.nist.javax.sip.ListeningPointImpl: java.lang.String getKey()> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RedirectStrategy getRedirectStrategy()> ->_NONE_
<org.jivesoftware.smack.PacketProcessor: void log(java.lang.String)> ->_NONE_
<org.apache.harmony.security.pkcs8.PrivateKeyInfo: byte[] getPrivateKey()> ->_NONE_
<android.database.CursorWrapper: android.os.Bundle getExtras()> ->_NONE_
<android.os.CommonTimeConfig: int setMasterElectionGroupId(long)> ->_NONE_
<android.app.Dialog: void setCancelMessage(android.os.Message)> ->_NONE_
<android.widget.ScrollView: float getBottomFadingEdgeStrength()> ->_NONE_
<org.apache.commons.io.FilenameUtils: java.lang.String getName(java.lang.String)> ->_NONE_
<android.filterfw.io.GraphReader: android.filterfw.core.FilterGraph readGraphResource(android.content.Context,int)> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationHeader: javax.sip.address.URI getURI()> ->_NONE_
<android.filterfw.geometry.Point: void set(float,float)> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ConnectionKeepAliveStrategy getConnectionKeepAliveStrategy()> ->_NONE_
<android.mtp.MtpObjectInfo: int getThumbFormat()> ->_NONE_
<org.apache.harmony.security.x509.CRLNumber: java.math.BigInteger getNumber()> ->_NONE_
<org.apache.xpath.axes.WalkerFactory: org.apache.xpath.axes.AxesWalker loadOneWalker(org.apache.xpath.axes.WalkingIterator,org.apache.xpath.compiler.Compiler,int)> ->_NONE_
<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPRequest createErrorAck(gov.nist.javax.sip.header.To)> ->_NONE_
<android.text.Layout: android.text.TextDirectionHeuristic getTextDirectionHeuristic()> ->_NONE_
<java.io.CharArrayWriter: void writeTo(java.io.Writer)> ->_NONE_
<android.app.SearchManager: android.content.Intent getAssistIntent(android.content.Context)> ->_NONE_
<javax.net.ssl.SSLContext: javax.net.ssl.SSLParameters getSupportedSSLParameters()> ->_NONE_
<org.apache.http.params.HttpConnectionParams: void setSoReuseaddr(org.apache.http.params.HttpParams,boolean)> ->_NONE_
<android.view.View: int getTextDirection()> ->_NONE_
<java.lang.System: java.lang.SecurityManager getSecurityManager()> ->_NONE_
<org.xml.sax.helpers.ParserAdapter: void setFeature(java.lang.String,boolean)> ->_NONE_
<org.xmlpull.v1.sax2.Driver: boolean getFeature(java.lang.String)> ->_NONE_
<android.media.videoeditor.MediaImageItem: int getFileType()> ->_NONE_
<android.view.InputFilter: void onInputEvent(android.view.InputEvent,int)> ->_NONE_
<org.apache.xalan.transformer.TransformerHandlerImpl: void elementDecl(java.lang.String,java.lang.String)> ->_NONE_
<java.security.AccessControlException: java.security.Permission getPermission()> ->_NONE_
<android.media.MediaPlayer: boolean setParameter(int,int)> ->_NONE_
<android.graphics.drawable.Drawable: android.graphics.Region getTransparentRegion()> ->_NONE_
<org.json.JSONStringer: void replaceTop(org.json.JSONStringer$Scope)> ->_NONE_
<android.graphics.SurfaceTexture: void getTransformMatrix(float[])> ->_NONE_
<android.drm.DrmUtils: android.drm.DrmUtils$ExtendedMetadataParser getExtendedMetadataParser(byte[])> ->_NONE_
<android.webkit.CallbackProxy: void onScaleChanged(float,float)> ->_NONE_
<android.webkit.WebSettingsClassic: android.webkit.WebSettingsClassic$AutoFillProfile getAutoFillProfile()> ->_NONE_
<android.widget.ListView: int getMaxScrollAmount()> ->_NONE_
<android.test.mock.MockIContentProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ->_NONE_
<android.view.View: void setVerticalScrollBarEnabled(boolean)> ->_NONE_
<android.app.BackStackRecord: int getTransition()> ->_NONE_
<android.view.Window: void setFormat(int)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.Text replaceWholeText(java.lang.String)> ->_NONE_
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey getInstance(org.apache.harmony.xnet.provider.jsse.OpenSSLKey)> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Type: int getEncodedLength(org.apache.harmony.security.asn1.BerOutputStream)> ->_NONE_
<android.view.accessibility.AccessibilityInteractionClient: void setPerformAccessibilityActionResult(boolean,int)> ->_NONE_
<android.webkit.WebView: void loadData(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.widget.AbsListView: boolean onRemoteAdapterConnected()> ->_NONE_
<android.webkit.WebSettingsClassic: boolean getDisplayZoomControls()> ->_NONE_
<libcore.icu.CollationElementIteratorICU: void setText(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.SecuritySupport: long getLastModified(java.io.File)> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationInfo: int getNonceCount()> ->_NONE_
<gov.nist.javax.sip.header.ReferTo: java.lang.String encodeBody()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.Attr setAttributeNodeNS(org.w3c.dom.Attr)> ->_NONE_
<android.filterpacks.videoproc.BackDropperFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<android.content.res.AssetManager: java.lang.CharSequence getResourceText(int)> ->_NONE_
<org.apache.xpath.XPathException: void setStylesheetNode(java.lang.Object)> ->_NONE_
<android.nfc.tech.NfcB: android.nfc.Tag getTag()> ->_NONE_
<android.content.ContentProvider: android.content.Context getContext()> ->_NONE_
<android.widget.AbsSeekBar: int getThumbOffset()> ->_NONE_
<android.nfc.tech.NfcA: android.nfc.Tag getTag()> ->_NONE_
<org.jivesoftware.smack.packet.Message: void setBody(java.lang.String)> ->_NONE_
<org.jivesoftware.smack.PacketReader: void addConnectionListener(org.jivesoftware.smack.ConnectionListener)> ->_NONE_
<java.text.DateFormat: java.text.DateFormat getTimeInstance(int)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: int getSize()> ->_NONE_
<org.jivesoftware.smack.PacketReader: void handleProtoBuf(com.google.common.io.protocol.ProtoBuf,long)> ->_NONE_
<gov.nist.javax.sip.header.Protocol: java.lang.StringBuffer encode(java.lang.StringBuffer)> ->_NONE_
<android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize)> ->_NONE_
<org.apache.xml.utils.SecuritySupport: java.io.FileInputStream getFileInputStream(java.io.File)> ->_NONE_
<android.view.Display: java.lang.String getAddress()> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getFirstChildElem()> ->_NONE_
<android.test.mock.MockPackageManager: java.util.List getInstalledPackages(int,int)> ->_NONE_
<android.database.CursorWindow: double getDouble(int,int)> ->_NONE_
<android.opengl.EGLLogWrapper: void log(java.lang.String)> ->_NONE_
<android.widget.TextView: void setGravity(int)> ->_NONE_
<junit.runner.ReloadingTestSuiteLoader: java.lang.Class load(java.lang.String)> ->_NONE_
<android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String)> ->_NONE_
<javax.net.ssl.DistinguishedNameParser: char getEscaped()> ->_NONE_
<org.jivesoftware.smackx.ServiceDiscoveryManager: org.jivesoftware.smackx.ServiceDiscoveryManager getInstanceFor(org.jivesoftware.smack.XMPPConnection)> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: org.w3c.dom.Node getDOMBackPointer()> ->_NONE_
<org.apache.xml.serializer.ToHTMLStream: org.apache.xml.serializer.ElemDesc getElemDesc2(java.lang.String)> ->_NONE_
<android.widget.AbsListView: void setRecyclerListener(android.widget.AbsListView$RecyclerListener)> ->_NONE_
<gov.nist.javax.sip.stack.TLSMessageChannel: int getPeerPacketSourcePort()> ->_NONE_
<java.util.concurrent.atomic.AtomicInteger: int get()> ->_NONE_
<java.nio.MappedByteBufferAdapter: float getFloat()> ->_NONE_
<android.content.res.Resources: java.lang.String getQuantityString(int,int)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.Node getNextSibling()> ->_NONE_
<android.net.http.AndroidHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()> ->_NONE_
<android.graphics.drawable.AnimationDrawable: int getNumberOfFrames()> ->_NONE_
<android.location.Address: double getLongitude()> ->_NONE_
<android.net.NetworkTemplate: java.lang.String getSubscriberId()> ->_NONE_
<android.app.LocalActivityManager: android.app.Activity getActivity(java.lang.String)> ->_NONE_
<android.os.UserManager: android.os.UserHandle getUserForSerialNumber(long)> ->_NONE_
<libcore.icu.TimeZones: java.lang.String getDisplayName(java.lang.String[][],java.lang.String,boolean,int)> ->_NONE_
<android.nfc.tech.NfcF: android.nfc.Tag getTag()> ->_NONE_
<org.jivesoftware.smack.packet.Authentication: java.lang.String getPassword()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean: void setAccesibilityFocused(java.lang.Object,boolean)> ->_NONE_
<android.view.animation.AnimationSet: void setStartOffset(long)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: java.lang.String[] getSupportedProtocols()> ->_NONE_
<org.apache.http.auth.AuthState: org.apache.http.auth.Credentials getCredentials()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.Node getPreviousSibling()> ->_NONE_
<android.renderscript.Path: android.renderscript.Path$Primitive getPrimitive()> ->_NONE_
<android.widget.ListView: int getBottomSelectionPixel(int,int,int)> ->_NONE_
<org.apache.xpath.compiler.FunctionTable: java.lang.Object getFunctionID(java.lang.String)> ->_NONE_
<org.apache.xml.serializer.ToStream: void endElement(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<java.net.JarURLConnection: java.lang.String getEntryName()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.AlertProtocol: void setRecordProtocol(org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol)> ->_NONE_
<android.media.videoeditor.AudioTrack: android.media.videoeditor.WaveformData getWaveformData()> ->_NONE_
<android.media.videoeditor.Transition: long getDuration()> ->_NONE_
<android.os.Parcel: void writeList(java.util.List)> ->_NONE_
<gov.nist.javax.sip.address.Authority: java.lang.String getPassword()> ->_NONE_
<org.xml.sax.helpers.XMLFilterImpl: org.xml.sax.DTDHandler getDTDHandler()> ->_NONE_
<android.text.style.SuggestionRangeSpan: void setBackgroundColor(int)> ->_NONE_
<gov.nist.javax.sip.header.To: java.lang.String encodeBody()> ->_NONE_
<libcore.io.ForwardingOs: libcore.io.StructLinger getsockoptLinger(java.io.FileDescriptor,int,int)> ->_NONE_
<android.view.MotionEvent: int getPointerIdBits()> ->_NONE_
<org.apache.xalan.templates.DecimalFormatProperties: char getPerMille()> ->_NONE_
<android.filterpacks.imageproc.DrawRectFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<android.widget.HeaderViewListAdapter: android.widget.Filter getFilter()> ->_NONE_
<android.filterfw.core.NativeFrame: java.nio.ByteBuffer getData()> ->_NONE_
<android.support.v4.content.ModernAsyncTask: android.support.v4.content.ModernAsyncTask$Status getStatus()> ->_NONE_
<java.util.concurrent.ForkJoinTask: void writeObject(java.io.ObjectOutputStream)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getStringValue()> ->_NONE_
<java.sql.SQLWarning: void setNextWarning(java.sql.SQLWarning)> ->_NONE_
<android.util.JsonReader: android.util.JsonToken decodeLiteral()> ->_NONE_
<android.os.Parcel: void writeBinderList(java.util.List)> ->_NONE_
<android.database.sqlite.SQLiteSession: java.lang.String executeForString(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)> ->_NONE_
<java.nio.LongArrayBuffer: java.nio.LongBuffer get(long[],int,int)> ->_NONE_
<java.nio.SocketChannelImpl: boolean finishConnect()> ->_NONE_
<android.net.SSLCertificateSocketFactory: void setKeyManagers(javax.net.ssl.KeyManager[])> ->_NONE_
<android.text.method.TextKeyListener: int getPrefs(android.content.Context)> ->_NONE_
<android.net.http.SslCertificate: java.util.Date getValidNotAfterDate()> ->_NONE_
<android.graphics.NinePatch: void setPaint(android.graphics.Paint)> ->_NONE_
<android.webkit.WebStorageClassic: void getOrigins(android.webkit.ValueCallback)> ->_NONE_
<org.jivesoftware.smackx.packet.MUCUser: org.jivesoftware.smackx.packet.MUCUser$Decline getDecline()> ->_NONE_
<android.webkit.ZoomControlExternal: android.webkit.ZoomControlExternal$ExtendedZoomControls getControls()> ->_NONE_
<gov.nist.javax.sip.address.UserInfo: int getUserType()> ->_NONE_
<android.view.ActionMode: void setTag(java.lang.Object)> ->_NONE_
<org.apache.xml.serializer.utils.AttList: int getIndex(java.lang.String,java.lang.String)> ->_NONE_
<java.net.DatagramPacket: void setAddress(java.net.InetAddress)> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: void setParent(android.view.View)> ->_NONE_
<org.apache.xml.serializer.ToTextSAXHandler: boolean setEscaping(boolean)> ->_NONE_
<android.widget.TwoLineListItem: android.widget.TextView getText2()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.ClientSessionContext: javax.net.ssl.SSLSession getSession(java.lang.String,int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: void setEnableSessionCreation(boolean)> ->_NONE_
<android.widget.TextView: void setEnabled(boolean)> ->_NONE_
<android.widget.TwoLineListItem: android.widget.TextView getText1()> ->_NONE_
<java.net.URI: java.lang.String getRawSchemeSpecificPart()> ->_NONE_
<android.app.ActivityManagerProxy: android.content.Intent registerReceiver(android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int)> ->_NONE_
<android.media.CameraProfile: int getJpegEncodingQualityParameter(int,int)> ->_NONE_
<junit.textui.ResultPrinter: java.io.PrintStream getWriter()> ->_NONE_
<libcore.icu.ICU: java.lang.String[] getISOCountries()> ->_NONE_
<android.telephony.ServiceState: void setIsManualSelection(boolean)> ->_NONE_
<android.database.MergeCursor: int getType(int)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getClassName()> ->_NONE_
<java.net.URLConnection: boolean getDoOutput()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: void setActualEncoding(java.lang.String)> ->_NONE_
<org.apache.xpath.functions.FunctionOneArg: org.apache.xpath.Expression getExpression()> ->_NONE_
<android.text.method.DateKeyListener: android.text.method.DateKeyListener getInstance()> ->_NONE_
<gov.nist.javax.sip.ListeningPointImpl: void sendHeartbeat(java.lang.String,int)> ->_NONE_
<android.text.Layout: float getDesiredWidth(java.lang.CharSequence,android.text.TextPaint)> ->_NONE_
<android.text.format.DateUtils: java.lang.String getRelativeDayString(android.content.res.Resources,long,long)> ->_NONE_
<android.test.mock.MockCursor: byte[] getBlob(int)> ->_NONE_
<org.ccil.cowan.tagsoup.CommandLine: int getopts(java.util.Hashtable,java.lang.String[])> ->_NONE_
<android.app.ActivityManager: java.util.List getRecentTasks(int,int)> ->_NONE_
<gov.nist.javax.sip.address.SipUri: void setMAddr(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: org.w3c.dom.Node getNextSibling()> ->_NONE_
<org.apache.xalan.templates.Stylesheet: int getExcludeResultPrefixCount()> ->_NONE_
<android.view.View: void setOnFocusChangeListener(android.view.View$OnFocusChangeListener)> ->_NONE_
<android.os.Parcel: void setDataCapacity(int)> ->_NONE_
<android.text.style.ImageSpan: android.graphics.drawable.Drawable getDrawable()> ->_NONE_
<org.apache.xalan.templates.OutputProperties: org.apache.xml.utils.QName getQNameProperty(java.lang.String)> ->_NONE_
<org.apache.harmony.xml.ExpatReader: void setDTDHandler(org.xml.sax.DTDHandler)> ->_NONE_
<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.Node getNextSibling()> ->_NONE_
<android.view.View: int getSuggestedMinimumHeight()> ->_NONE_
<org.apache.harmony.security.x509.TBSCertList: java.util.Date getNextUpdate()> ->_NONE_
<android.net.ConnectivityManager: android.net.ProxyProperties getGlobalProxy()> ->_NONE_
<android.content.pm.PackageParser: boolean parseIntent(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,int,android.content.pm.PackageParser$IntentInfo,java.lang.String[],boolean)> ->_NONE_
<android.telephony.ServiceState: void setNullState(int)> ->_NONE_
<org.apache.xalan.processor.ProcessorImport: java.lang.String getStylesheetInclErr()> ->_NONE_
<java.io.LineNumberReader: java.lang.String readLine()> ->_NONE_
<org.apache.xpath.XPath: double getMatchScore(org.apache.xpath.XPathContext,int)> ->_NONE_
<org.apache.xml.dtm.ref.SecuritySupport12: long getLastModified(java.io.File)> ->_NONE_
<android.content.res.AssetManager: android.content.res.XmlResourceParser openXmlResourceParser(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.ElemText: java.lang.String getNodeName()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setCheckable(boolean)> ->_NONE_
<java.nio.SocketChannelImpl: java.net.InetAddress getLocalAddress()> ->_NONE_
<libcore.icu.ICU: java.util.Locale[] getAvailableCollatorLocales()> ->_NONE_
<android.inputmethodservice.InputMethodService: int getCandidatesHiddenVisibility()> ->_NONE_
<android.accessibilityservice.UiTestAutomationBridge: android.view.accessibility.AccessibilityNodeInfo getRootAccessibilityNodeInfoInActiveWindow()> ->_NONE_
<android.graphics.PathMeasure: boolean getPosTan(float,float[],float[])> ->_NONE_
<android.graphics.drawable.AnimatedRotateDrawable: int getIntrinsicWidth()> ->_NONE_
<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getQName(int)> ->_NONE_
<android.app.Service: void setForeground(boolean)> ->_NONE_
<java.util.Calendar: void setTimeZone(java.util.TimeZone)> ->_NONE_
<gov.nist.javax.sip.parser.PipelinedMsgParser: java.lang.String readLine(java.io.InputStream)> ->_NONE_
<android.accounts.AccountAuthenticatorCache: android.content.pm.RegisteredServicesCache$ServiceInfo getServiceInfo(android.accounts.AuthenticatorDescription,int)> ->_NONE_
<java.util.Calendar: java.util.Locale[] getAvailableLocales()> ->_NONE_
<android.app.ProgressDialog: void setProgressPercentFormat(java.text.NumberFormat)> ->_NONE_
<android.widget.AbsListView: java.lang.CharSequence getTextFilter()> ->_NONE_
<android.content.SyncQueue: void dump(java.lang.StringBuilder)> ->_NONE_
<android.widget.BaseExpandableListAdapter: int getChildTypeCount()> ->_NONE_
<javax.xml.datatype.XMLGregorianCalendar: void setTime(int,int,int,int)> ->_NONE_
<android.view.Display: int getRotation()> ->_NONE_
<android.content.CursorLoader: void setSelection(java.lang.String)> ->_NONE_
<android.graphics.Canvas: int getMaximumBitmapHeight()> ->_NONE_
<android.content.ClipDescription: int getMimeTypeCount()> ->_NONE_
<android.bluetooth.BluetoothTetheringDataTracker: void setUserDataEnable(boolean)> ->_NONE_
<gov.nist.javax.sip.address.TelURLImpl: java.lang.String getParameter(java.lang.String)> ->_NONE_
<android.hardware.display.WifiDisplay: java.lang.String getFriendlyDisplayName()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.DigitalSignature: void update(byte[])> ->_NONE_
<org.apache.xalan.processor.XSLTElementDef: void setElements(org.apache.xalan.processor.XSLTElementDef[])> ->_NONE_
<android.animation.PropertyValuesHolder: void setIntValues(int[])> ->_NONE_
<libcore.io.IoBridge: int sendto(java.io.FileDescriptor,java.nio.ByteBuffer,int,java.net.InetAddress,int)> ->_NONE_
<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.ClassLoader getContextClassLoaderInternal()> ->_NONE_
<android.view.KeyEvent: int getKeyboardDevice()> ->_NONE_
<org.apache.harmony.security.x509.DNParser: char getEscaped()> ->_NONE_
<android.media.CamcorderProfile: android.media.CamcorderProfile get(int,int)> ->_NONE_
<org.apache.xpath.operations.Variable: int getIndex()> ->_NONE_
<android.widget.CalendarView: boolean parseDate(java.lang.String,java.util.Calendar)> ->_NONE_
<android.database.sqlite.SQLiteSession: void execute(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)> ->_NONE_
<jp.co.omronsoft.openwnn.TextCandidatesViewManager: int getCandidateViewHeight()> ->_NONE_
<android.widget.OverScroller: void setInterpolator(android.view.animation.Interpolator)> ->_NONE_
<android.telephony.cdma.CdmaCellLocation: int getBaseStationId()> ->_NONE_
<android.net.NetworkStatsHistory: long getTotalBytes()> ->_NONE_
<org.apache.xalan.templates.RedundentExprEliminator: org.apache.xalan.templates.ElemTemplateElement getElemFromExpression(org.apache.xpath.Expression)> ->_NONE_
<org.apache.xpath.operations.Operation: void setLeftRight(org.apache.xpath.Expression,org.apache.xpath.Expression)> ->_NONE_
<gov.nist.javax.sip.address.SipUri: java.lang.String getUserAtHost()> ->_NONE_
<javax.net.ssl.HttpsURLConnection: java.security.Principal getPeerPrincipal()> ->_NONE_
<android.widget.AbsListView: void setScrollIndicators(android.view.View,android.view.View)> ->_NONE_
<org.apache.xml.utils.SecuritySupport12: java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader)> ->_NONE_
<gov.nist.javax.sip.stack.IOHandler: void writeChunks(java.io.OutputStream,byte[],int)> ->_NONE_
<java.nio.LongToByteBufferAdapter: long get(int)> ->_NONE_
<android.util.LocalLog: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> ->_NONE_
<android.app.ContextImpl: java.io.File getPreferencesDir()> ->_NONE_
<android.app.DownloadManager: java.lang.Long getRecommendedMaxBytesOverMobile(android.content.Context)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: android.os.Parcelable getParcelableData(java.lang.Object)> ->_NONE_
<java.security.ProtectionDomain: java.security.PermissionCollection getPermissions()> ->_NONE_
<javax.net.ssl.DistinguishedNameParser: char getUTF8()> ->_NONE_
<android.text.DynamicLayout: int[] getBlockIndices()> ->_NONE_
<java.net.SocketImpl: int getLocalPort()> ->_NONE_
<android.webkit.WebSettings: void setGeolocationDatabasePath(java.lang.String)> ->_NONE_
<android.accounts.AccountManager: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes()> ->_NONE_
<android.view.MotionEvent: float getToolMajor()> ->_NONE_
<net.oauth.signature.OAuthSignatureMethod: java.lang.String getBaseString(net.oauth.OAuthMessage)> ->_NONE_
<java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)> ->_NONE_
<android.net.EthernetDataTracker: boolean setRadio(boolean)> ->_NONE_
<android.content.pm.ApplicationInfo: android.graphics.drawable.Drawable loadDefaultIcon(android.content.pm.PackageManager)> ->_NONE_
<android.filterpacks.imageproc.BitmapOverlayFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<java.nio.MappedByteBufferAdapter: double getDouble()> ->_NONE_
<android.database.sqlite.SQLiteSession: void setTransactionSuccessful()> ->_NONE_
<org.apache.http.impl.conn.tsccm.BasicPoolEntry: long getUpdated()> ->_NONE_
<android.test.mock.MockPackageManager: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity()> ->_NONE_
<org.apache.http.util.VersionInfo: java.lang.String getTimestamp()> ->_NONE_
<org.apache.harmony.luni.lang.reflect.ImplForType: java.lang.reflect.Type getOwnerType()> ->_NONE_
<android.widget.AutoCompleteTextView: void setThreshold(int)> ->_NONE_
<jp.co.omronsoft.openwnn.UserDictionaryToolsListFocus: void setPairView(android.widget.TextView)> ->_NONE_
<gov.nist.javax.sip.address.TelURLImpl: java.lang.String encode()> ->_NONE_
<android.webkit.HTML5VideoView: void setOnCompletionListener(android.webkit.HTML5VideoViewProxy)> ->_NONE_
<org.ccil.cowan.tagsoup.ElementType: void setAttribute(org.ccil.cowan.tagsoup.AttributesImpl,java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.AudioTrack parseAudioTrack(org.xmlpull.v1.XmlPullParser)> ->_NONE_
<android.bluetooth.BluetoothPan: int getConnectionState(android.bluetooth.BluetoothDevice)> ->_NONE_
<android.graphics.ColorMatrix: void set(android.graphics.ColorMatrix)> ->_NONE_
<android.widget.AbsSpinner: void setSelection(int,boolean)> ->_NONE_
<android.media.videoeditor.OverlayFrame: int getOverlayFrameWidth()> ->_NONE_
<android.telephony.CellIdentityGsm: int getMcc()> ->_NONE_
<android.preference.SeekBarPreference: int getProgress()> ->_NONE_
<gov.nist.javax.sip.header.RetryAfter: java.lang.String encodeBody()> ->_NONE_
<android.webkit.ZoomManager: float getMaxZoomScale()> ->_NONE_
<java.net.DatagramPacket: void setLength(int)> ->_NONE_
<libcore.io.Posix: int read(java.io.FileDescriptor,byte[],int,int)> ->_NONE_
<org.apache.xpath.NodeSetDTM: void setEnvironment(java.lang.Object)> ->_NONE_
<android.webkit.WebViewCore: void setWebTextViewAutoFillable(int,java.lang.String)> ->_NONE_
<org.apache.commons.io.filefilter.AbstractFileFilter: boolean accept(java.io.File,java.lang.String)> ->_NONE_
<android.hardware.usb.UsbAccessory: java.lang.String getUri()> ->_NONE_
<org.jivesoftware.smack.PacketReader: void notifyConnectionError(java.lang.Exception)> ->_NONE_
<java.nio.SocketChannelImpl: long write(java.nio.ByteBuffer[],int,int)> ->_NONE_
<org.apache.james.mime4j.message.MemoryTextBody: java.io.Reader getReader()> ->_NONE_
<android.view.View: int getBaseline()> ->_NONE_
<android.app.Activity: android.view.View getCurrentFocus()> ->_NONE_
<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)> ->_NONE_
<android.net.wifi.p2p.WifiP2pGroupList: java.util.Collection getGroupList()> ->_NONE_
<android.renderscript.Element: int getSubElementOffsetBytes(int)> ->_NONE_
<android.widget.NumberPicker: float getTopFadingEdgeStrength()> ->_NONE_
<android.filterpacks.imageproc.FillLightFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()> ->_NONE_
<org.xml.sax.helpers.AttributesImpl: java.lang.String getLocalName(int)> ->_NONE_
<android.appwidget.AppWidgetManager: java.util.List getInstalledProviders()> ->_NONE_
<libcore.net.url.FtpHandler: java.net.URLConnection openConnection(java.net.URL)> ->_NONE_
<org.apache.xml.res.XMLMessages: java.lang.String getResourceSuffix(java.util.Locale)> ->_NONE_
<android.net.LocalSocketAddress: android.net.LocalSocketAddress$Namespace getNamespace()> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: void setDoctypePublic(java.lang.String)> ->_NONE_
<java.io.DataInputStream: double readDouble()> ->_NONE_
<android.support.v4.app.ListFragment: void setSelection(int)> ->_NONE_
<gov.nist.javax.sip.header.ims.PUserDatabase: java.lang.String getDatabaseName()> ->_NONE_
<android.net.http.AndroidHttpClient: org.apache.http.entity.AbstractHttpEntity getCompressedEntity(byte[],android.content.ContentResolver)> ->_NONE_
<android.graphics.drawable.DrawableContainer: boolean getPadding(android.graphics.Rect)> ->_NONE_
<gov.nist.javax.sip.address.SipUri: java.lang.String getMAddrParam()> ->_NONE_
<android.telephony.SmsCbCmasInfo: int getSeverity()> ->_NONE_
<java.net.Authenticator: int getRequestingPort()> ->_NONE_
<android.view.GLES20Canvas: android.graphics.DrawFilter getDrawFilter()> ->_NONE_
<android.webkit.WebSettings: boolean getMediaPlaybackRequiresUserGesture()> ->_NONE_
<org.apache.harmony.xml.parsers.SAXParserImpl: org.xml.sax.XMLReader getXMLReader()> ->_NONE_
<org.apache.http.HttpHost: java.net.InetAddress getAddress()> ->_NONE_
<android.bluetooth.BluetoothHealth: java.util.List getDevicesMatchingConnectionStates(int[])> ->_NONE_
<android.bluetooth.BluetoothDevice: java.lang.String getAddress()> ->_NONE_
<org.apache.xpath.functions.FunctionOneArg: void setExpression(org.apache.xpath.Expression)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.security.cert.Certificate[] getLocalCertificates()> ->_NONE_
<java.text.FieldPosition: int getField()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setToIndex(int)> ->_NONE_
<android.widget.TextView: int getPaintFlags()> ->_NONE_
<android.app.ActivityManagerProxy: int getFrontActivityScreenCompatMode()> ->_NONE_
<gov.nist.javax.sip.header.Via: java.lang.String getHost()> ->_NONE_
<org.apache.xalan.processor.TransformerFactoryImpl: void setErrorListener(javax.xml.transform.ErrorListener)> ->_NONE_
<org.apache.harmony.xml.dom.DocumentImpl: void setXmlStandalone(boolean)> ->_NONE_
<gov.nist.javax.sip.stack.TLSMessageChannel: java.net.InetAddress getPeerInetAddress()> ->_NONE_
<android.widget.AdapterViewAnimator: void setAnimateFirstView(boolean)> ->_NONE_
<java.net.URI: java.lang.String getFragment()> ->_NONE_
<android.app.SearchableInfo: android.app.SearchableInfo getActivityMetaData(android.content.Context,org.xmlpull.v1.XmlPullParser,android.content.ComponentName)> ->_NONE_
<android.filterpacks.imageproc.ToRGBFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<android.appwidget.AppWidgetManager: void partiallyUpdateAppWidget(int,android.widget.RemoteViews)> ->_NONE_
<org.jivesoftware.smack.packet.Presence: java.lang.String getAvatarHash()> ->_NONE_
<android.bluetooth.BluetoothDevice: java.lang.String getAliasName()> ->_NONE_
<org.jivesoftware.smack.packet.RosterPacket: java.lang.String getChildElementXML()> ->_NONE_
<org.apache.harmony.security.asn1.BerInputStream: byte[] getEncoded()> ->_NONE_
<gov.nist.javax.sip.header.TimeStamp: void setTimeStamp(float)> ->_NONE_
<android.view.ViewGroup: boolean updateLocalSystemUiVisibility(int,int)> ->_NONE_
<android.widget.AdapterViewAnimator: void setSelection(int)> ->_NONE_
<android.app.Activity: int getChangingConfigurations()> ->_NONE_
<gov.nist.javax.sip.header.Contact: gov.nist.javax.sip.header.ContactList getContactList()> ->_NONE_
<android.net.LocalSocket: void connect(android.net.LocalSocketAddress)> ->_NONE_
<android.mtp.MtpObjectInfo: int getImagePixDepth()> ->_NONE_
<android.os.Bundle: void putSparseParcelableArray(java.lang.String,android.util.SparseArray)> ->_NONE_
<android.webkit.WebViewCore: void sendViewInvalidate(int,int,int,int)> ->_NONE_
<org.apache.xalan.templates.StylesheetRoot: java.lang.String setExtensionHandlerClass(java.lang.String)> ->_NONE_
<org.apache.xpath.compiler.Compiler: org.apache.xpath.compiler.FunctionTable getFunctionTable()> ->_NONE_
<android.widget.AdapterViewAnimator: void setOutAnimation(android.animation.ObjectAnimator)> ->_NONE_
<android.content.res.TypedArray: int getDimensionPixelSize(int,int)> ->_NONE_
<android.bluetooth.BluetoothDevice: boolean setPairingConfirmation(boolean)> ->_NONE_
<android.view.View: void getDrawingRect(android.graphics.Rect)> ->_NONE_
<android.telephony.ServiceState: int getNetworkType()> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: org.w3c.dom.NodeList getChildNodes()> ->_NONE_
<android.media.AudioService: boolean loadSoundEffects()> ->_NONE_
<org.apache.xalan.extensions.ExtensionHandler: java.lang.Class getClassForName(java.lang.String)> ->_NONE_
<org.apache.xml.serializer.dom3.DOM3SerializerImpl: org.w3c.dom.DOMErrorHandler getErrorHandler()> ->_NONE_
<org.apache.xalan.templates.ElemNumber: void setGroupingSize(org.apache.xalan.templates.AVT)> ->_NONE_
<jp.co.omronsoft.openwnn.ComposingText: void replaceStrSegment(int,jp.co.omronsoft.openwnn.StrSegment[],int)> ->_NONE_
<android.text.Layout: android.text.TextPaint getPaint()> ->_NONE_
<java.lang.Character: byte getDirectionality(char)> ->_NONE_
<android.view.accessibility.AccessibilityRecord: void setEnabled(boolean)> ->_NONE_
<android.filterfw.core.Filter: android.filterfw.core.OutputPort getOutputPort(java.lang.String)> ->_NONE_
<android.net.http.Request: java.lang.String getUri()> ->_NONE_
<javax.obex.ServerSession: void handleGetRequest(int)> ->_NONE_
<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)> ->_NONE_
<org.apache.http.impl.io.AbstractSessionInputBuffer: int handleDecodingResult(java.nio.charset.CoderResult,org.apache.http.util.CharArrayBuffer,java.nio.ByteBuffer)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: int getNextSibling(int)> ->_NONE_
<java.net.HttpCookie: java.lang.String getComment()> ->_NONE_
<android.view.animation.LayoutAnimationController: android.view.animation.Animation getAnimationForView(android.view.View)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore: java.util.Date getCreationDate(java.lang.String)> ->_NONE_
<org.apache.commons.codec.language.SoundexUtils: java.lang.String clean(java.lang.String)> ->_NONE_
<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getOutAnimation()> ->_NONE_
<android.webkit.JniUtil: java.lang.String getDatabaseDirectory()> ->_NONE_
<org.apache.harmony.xml.dom.ProcessingInstructionImpl: java.lang.String getTarget()> ->_NONE_
<android.view.View: void sendAccessibilityEvent(int)> ->_NONE_
<org.jivesoftware.smackx.packet.MUCInitialPresence: java.lang.String getPassword()> ->_NONE_
<android.widget.LinearLayout: void setMeasureWithLargestChildEnabled(boolean)> ->_NONE_
<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaItem getMediaItem(java.lang.String)> ->_NONE_
<android.content.SyncManager: void sendCancelSyncsMessage(android.accounts.Account,int,java.lang.String)> ->_NONE_
<android.filterfw.core.FinalPort: void setFieldFrame(android.filterfw.core.Frame,boolean)> ->_NONE_
<org.jivesoftware.smack.ConnectionConfiguration: void setUseProtoBuf(boolean)> ->_NONE_
<org.apache.http.auth.AuthScope: java.lang.String getScheme()> ->_NONE_
<org.jivesoftware.smack.packet.XMPPError: void setCode(int)> ->_NONE_
<org.apache.xalan.templates.XMLNSDecl: java.lang.String getPrefix()> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertImpl: byte[] getSignatureInternal()> ->_NONE_
<android.widget.ProgressBar: android.graphics.drawable.shapes.Shape getDrawableShape()> ->_NONE_
<android.media.videoeditor.MediaVideoItem: android.graphics.Bitmap getThumbnail(int,int,long)> ->_NONE_
<android.os.Environment: java.io.File getLegacyExternalStorageDirectory()> ->_NONE_
<libcore.icu.RuleBasedCollatorICU: int getStrength()> ->_NONE_
<android.view.animation.AnimationSet: boolean getTransformation(long,android.view.animation.Transformation)> ->_NONE_
<org.apache.harmony.xml.ExpatReader: void parse(java.io.Reader,java.lang.String,java.lang.String)> ->_NONE_
<android.widget.ImageView: boolean setFrame(int,int,int,int)> ->_NONE_
<javax.sip.ResponseEvent: javax.sip.Dialog getDialog()> ->_NONE_
<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)> ->_NONE_
<org.apache.http.conn.params.ConnManagerParams: void setTimeout(org.apache.http.params.HttpParams,long)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore: java.lang.String getCertificateAlias(java.security.cert.Certificate)> ->_NONE_
<android.graphics.drawable.PictureDrawable: void setDither(boolean)> ->_NONE_
<android.view.ViewConfiguration: int getScaledWindowTouchSlop()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: void setTrafficClass(int)> ->_NONE_
<java.lang.reflect.Field: void setBoolean(java.lang.Object,boolean)> ->_NONE_
<gov.nist.javax.sip.header.RSeq: java.lang.String encodeBody()> ->_NONE_
<android.webkit.WebViewCore: android.webkit.WebSettingsClassic getSettings()> ->_NONE_
<javax.sip.SipFactory: javax.sip.SipFactory getInstance()> ->_NONE_
<android.content.res.CompatibilityInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.hardware.display.WifiDisplay: java.lang.String getDeviceAddress()> ->_NONE_
<gov.nist.core.ParserCore: void dbg_enter(java.lang.String)> ->_NONE_
<android.media.videoeditor.Transition: android.media.videoeditor.MediaItem getAfterMediaItem()> ->_NONE_
<org.apache.commons.io.filefilter.OrFileFilter: void setFileFilters(java.util.List)> ->_NONE_
<android.view.WindowOrientationListener: int getProposedRotation()> ->_NONE_
<org.apache.xpath.Expression: int getColumnNumber()> ->_NONE_
<android.webkit.CallbackProxy: void onNewHistoryItem(android.webkit.WebHistoryItem)> ->_NONE_
<android.telephony.ServiceState: int getState()> ->_NONE_
<org.apache.xml.dtm.ref.ExpandedNameTable: int getSize()> ->_NONE_
<android.view.accessibility.AccessibilityManager: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: void setPrefix(java.lang.String)> ->_NONE_
<android.test.mock.MockContext: android.content.Context getApplicationContext()> ->_NONE_
<android.support.v4.view.PagerTabStrip: int getTabIndicatorColor()> ->_NONE_
<org.apache.http.params.HttpConnectionParams: void setStaleCheckingEnabled(org.apache.http.params.HttpParams,boolean)> ->_NONE_
<java.nio.ShortToByteBufferAdapter: short get(int)> ->_NONE_
<android.hardware.display.DisplayManager: android.view.Display getDisplay(int)> ->_NONE_
<org.apache.http.impl.cookie.RFC2965Spec: int getVersion()> ->_NONE_
<org.apache.xml.utils.UnImplNode: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)> ->_NONE_
<org.apache.http.message.BasicRequestLine: java.lang.String getUri()> ->_NONE_
<java.security.cert.TrustAnchor: java.lang.String getCAName()> ->_NONE_
<android.webkit.WebViewCore: android.webkit.ViewManager$ChildView createSurface(android.view.View)> ->_NONE_
<org.jivesoftware.smack.packet.IQ: void setType(org.jivesoftware.smack.packet.IQ$Type)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: byte[] getId()> ->_NONE_
<org.apache.xml.utils.UnImplNode: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: java.lang.String getValue()> ->_NONE_
<org.apache.harmony.security.provider.crypto.ThreeIntegerSequence: byte[] getEncoded()> ->_NONE_
<org.apache.xml.utils.XMLReaderManager: org.apache.xml.utils.XMLReaderManager getInstance()> ->_NONE_
<android.telephony.NeighboringCellInfo: void setRssi(int)> ->_NONE_
<android.speech.srec.WaveHeader: int read(java.io.InputStream)> ->_NONE_
<java.net.Socket: int getReceiveBufferSize()> ->_NONE_
<org.apache.xml.serializer.SerializerBase: char getFirstCharLocName(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: javax.xml.transform.SourceLocator getSourceLocatorFor(int)> ->_NONE_
<gov.nist.javax.sip.header.ims.PChargingVector: java.lang.String encodeBody()> ->_NONE_
<java.io.CharArrayReader: int read()> ->_NONE_
<org.jivesoftware.smack.PacketWriter: void sendPacket(org.jivesoftware.smack.packet.Packet)> ->_NONE_
<android.media.MediaFile: int getFileTypeForMimeType(java.lang.String)> ->_NONE_
<org.apache.xml.serializer.SerializerBase: java.lang.String getOutputPropertyDefault(java.lang.String)> ->_NONE_
<android.content.res.Resources: float getDimension(int)> ->_NONE_
<android.os.WorkSource: android.os.WorkSource[] setReturningDiffs(android.os.WorkSource)> ->_NONE_
<gov.nist.javax.sip.header.RequestLine: java.lang.String encode()> ->_NONE_
<android.test.mock.MockPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)> ->_NONE_
<java.text.BreakIterator: java.text.BreakIterator getCharacterInstance(java.util.Locale)> ->_NONE_
<gov.nist.core.DuplicateNameValueList: java.util.Collection getNameValue(java.lang.String)> ->_NONE_
<android.os.UserHandle: int getIdentifier()> ->_NONE_
<android.test.TestRunner: java.lang.String[] getChildren(java.lang.reflect.Method)> ->_NONE_
<org.apache.xalan.processor.StylesheetHandler: org.apache.xml.utils.SAXSourceLocator getLocator()> ->_NONE_
<android.view.HardwareCanvas: void setBitmap(android.graphics.Bitmap)> ->_NONE_
<org.ccil.cowan.tagsoup.Parser: boolean getFeature(java.lang.String)> ->_NONE_
<android.view.accessibility.AccessibilityRecord: void setSource(android.view.View)> ->_NONE_
<android.view.ViewGroup: int getChildCount()> ->_NONE_
<org.apache.xalan.templates.ElemTemplate: void setPriority(double)> ->_NONE_
<javax.net.ssl.HandshakeCompletedEvent: java.security.cert.Certificate[] getLocalCertificates()> ->_NONE_
<android.accounts.AccountManagerService: java.lang.Integer getSigninRequiredNotificationId(android.accounts.AccountManagerService$UserAccounts,android.accounts.Account)> ->_NONE_
<org.apache.xpath.XPathContext: javax.xml.transform.URIResolver getURIResolver()> ->_NONE_
<android.app.ContextImpl: java.io.File getFilesDir()> ->_NONE_
<android.widget.VideoView: void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)> ->_NONE_
<android.widget.ListView: void setFooterDividersEnabled(boolean)> ->_NONE_
<gov.nist.javax.sip.header.ims.PAssociatedURI: java.lang.String encodeBody()> ->_NONE_
<android.webkit.WebViewClassic: android.webkit.WebView$HitTestResult getHitTestResult()> ->_NONE_
<org.json.JSONObject: long getLong(java.lang.String)> ->_NONE_
<org.jivesoftware.smackx.packet.DiscoverItems: void setNode(java.lang.String)> ->_NONE_
<java.util.concurrent.LinkedBlockingDeque: void writeObject(java.io.ObjectOutputStream)> ->_NONE_
<java.util.Currency: java.lang.String getSymbol()> ->_NONE_
<android.drm.mobile1.DrmRawContent: java.lang.String getRightsAddress()> ->_NONE_
<android.location.Location: void set(android.location.Location)> ->_NONE_
<android.service.dreams.DreamService: void setInteractive(boolean)> ->_NONE_
<gov.nist.javax.sip.message.ListMap: gov.nist.javax.sip.header.SIPHeaderList getList(gov.nist.javax.sip.header.SIPHeader)> ->_NONE_
<android.graphics.drawable.PictureDrawable: void setPicture(android.graphics.Picture)> ->_NONE_
<android.net.http.AndroidHttpClientConnection: java.net.InetAddress getRemoteAddress()> ->_NONE_
<java.net.Socket: void setTcpNoDelay(boolean)> ->_NONE_
<android.view.textservice.TextInfo: int getSequence()> ->_NONE_
<android.media.MediaCodec: java.nio.ByteBuffer[] getInputBuffers()> ->_NONE_
<android.widget.RemoteViews: void setImageViewBitmap(int,android.graphics.Bitmap)> ->_NONE_
<android.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> ->_NONE_
<jp.co.omronsoft.openwnn.EN.OpenWnnEngineEN: void setFilter(jp.co.omronsoft.openwnn.CandidateFilter)> ->_NONE_
<android.app.Fragment: void setRetainInstance(boolean)> ->_NONE_
<java.util.UnknownFormatConversionException: java.lang.String getConversion()> ->_NONE_
<java.io.FileOutputStream: void write(byte[])> ->_NONE_
<android.nfc.tech.Ndef: android.nfc.NdefMessage getCachedNdefMessage()> ->_NONE_
<android.net.sip.SipProfile: javax.sip.address.Address getSipAddress()> ->_NONE_
<android.view.Surface: int getGenerationId()> ->_NONE_
<android.location.GpsStatus: void setTimeToFirstFix(int)> ->_NONE_
<android.telephony.SmsMessage: byte[] getPdu()> ->_NONE_
<android.telephony.CellBroadcastMessage: int getServiceCategory()> ->_NONE_
<org.xmlpull.v1.sax2.Driver: void setErrorHandler(org.xml.sax.ErrorHandler)> ->_NONE_
<android.support.v4.view.PagerAdapter: void finishUpdate(android.view.View)> ->_NONE_
<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetComposed getGlobalImport(int)> ->_NONE_
<jp.co.omronsoft.openwnn.KeyboardView: void setOnKeyboardActionListener(jp.co.omronsoft.openwnn.KeyboardView$OnKeyboardActionListener)> ->_NONE_
<java.nio.charset.CharsetEncoderICU: int getArray(java.nio.ByteBuffer)> ->_NONE_
<javax.obex.PasswordAuthentication: byte[] getUserName()> ->_NONE_
<android.webkit.WebViewCore: void pauseUpdatePicture(android.webkit.WebViewCore)> ->_NONE_
<android.net.sip.SipAudioCall: android.net.sip.SimpleSessionDescription createAnswer(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.Event: java.lang.String encodeBody()> ->_NONE_
<org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[])> ->_NONE_
<android.media.AudioManager: void setSpeakerphoneOn(boolean)> ->_NONE_
<java.nio.HeapByteBuffer: short getShort(int)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setEnabled(boolean)> ->_NONE_
<android.view.View: int getDrawingCacheBackgroundColor()> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getPublicId()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getAttribute(java.lang.String)> ->_NONE_
<android.hardware.display.DisplayManager: android.view.Display getOrCreateDisplayLocked(int,boolean)> ->_NONE_
<gov.nist.javax.sip.address.SipUri: void setHostPort(gov.nist.core.HostPort)> ->_NONE_
<javax.xml.datatype.Duration: int getSeconds()> ->_NONE_
<android.content.SyncAdapterType: java.lang.String getSettingsActivity()> ->_NONE_
<android.mtp.MtpObjectInfo: int getThumbPixHeight()> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int getFirstAttributeIdentity(int)> ->_NONE_
<android.graphics.Bitmap: int getRowBytes()> ->_NONE_
<android.widget.SearchView: void setIconifiedByDefault(boolean)> ->_NONE_
<android.media.AudioService: void broadcastVibrateSetting(int)> ->_NONE_
<libcore.icu.NativeDecimalFormat: void setNegativePrefix(java.lang.String)> ->_NONE_
<android.widget.AutoCompleteTextView: android.widget.AutoCompleteTextView$Validator getValidator()> ->_NONE_
<android.view.LayoutInflater: void setPrivateFactory(android.view.LayoutInflater$Factory2)> ->_NONE_
<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.io.HttpMessageWriter createRequestWriter(org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams)> ->_NONE_
<android.webkit.WebViewClassic: int getBlockLeftEdge(int,int,float)> ->_NONE_
<java.util.Currency: java.lang.String getCurrencyCode()> ->_NONE_
<android.support.v4.widget.SimpleCursorAdapter: int getStringConversionColumn()> ->_NONE_
<android.widget.AutoCompleteTextView: int getDropDownWidth()> ->_NONE_
<org.jivesoftware.smack.packet.Authentication: java.lang.String getChildElementXML()> ->_NONE_
<gov.nist.javax.sip.header.SIPDateHeader: void setDate(gov.nist.javax.sip.header.SIPDate)> ->_NONE_
<android.media.TimedText: boolean parseParcel(android.os.Parcel)> ->_NONE_
<gov.nist.javax.sip.parser.URLParser: gov.nist.javax.sip.address.TelephoneNumber parseTelephoneNumber(boolean)> ->_NONE_
<org.apache.xpath.VariableStack: org.apache.xpath.objects.XObject getLocalVariable(int,int)> ->_NONE_
<android.telephony.CellIdentityCdma: void log(java.lang.String)> ->_NONE_
<android.widget.ExpandableListConnector: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: void setWantClientAuth(boolean)> ->_NONE_
<android.text.SpannableStringBuilder: int getSpanStart(java.lang.Object)> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()> ->_NONE_
<android.view.View: int getPaddingRight()> ->_NONE_
<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()> ->_NONE_
<android.view.textservice.SpellCheckerSubtype: java.lang.String getExtraValueOf(java.lang.String)> ->_NONE_
<org.jivesoftware.smack.util.ObservableWriter: void write(int)> ->_NONE_
<gov.nist.javax.sip.header.ims.PAssociatedURI: javax.sip.address.URI getAssociatedURI()> ->_NONE_
<android.webkit.ZoomManager: float computeReadingLevelScale(float)> ->_NONE_
<org.apache.http.conn.routing.RouteTracker: java.net.InetAddress getLocalAddress()> ->_NONE_
<android.view.SoundEffectConstants: int getContantForFocusDirection(int)> ->_NONE_
<gov.nist.javax.sip.header.extensions.MinSE: int getExpires()> ->_NONE_
<libcore.net.http.HttpEngine: java.lang.String getRequestLine()> ->_NONE_
<android.widget.SimpleCursorTreeAdapter: void setViewBinder(android.widget.SimpleCursorTreeAdapter$ViewBinder)> ->_NONE_
<org.apache.xml.serializer.ObjectFactory: java.lang.ClassLoader findClassLoader()> ->_NONE_
<org.jivesoftware.smack.XMPPConnection: void sendHeartbeat()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getKey()> ->_NONE_
<android.app.Activity: java.lang.Object getLastNonConfigurationInstance()> ->_NONE_
<android.widget.BaseAdapter: int getItemViewType(int)> ->_NONE_
<java.sql.Date: int getSeconds()> ->_NONE_
<android.gesture.GestureOverlayView: long getFadeOffset()> ->_NONE_
<android.inputmethodservice.InputMethodService: void setCandidatesView(android.view.View)> ->_NONE_
<org.apache.xalan.processor.XSLTAttributeDef: void setDefAttrValue(org.apache.xalan.processor.StylesheetHandler,org.apache.xalan.templates.ElemTemplateElement)> ->_NONE_
<gov.nist.javax.sip.header.ReplyTo: java.lang.String encodeBody()> ->_NONE_
<org.apache.xpath.axes.NodeSequence: void setIter(org.apache.xml.dtm.DTMIterator)> ->_NONE_
<javax.net.ssl.SSLParameters: void setProtocols(java.lang.String[])> ->_NONE_
<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost getHopTarget(int)> ->_NONE_
<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMIterator getContextNodes()> ->_NONE_
<org.apache.harmony.xml.dom.CommentImpl: java.lang.String getNodeName()> ->_NONE_
<android.telephony.PhoneNumberUtils: java.lang.String getUsernameFromUriNumber(java.lang.String)> ->_NONE_
<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()> ->_NONE_
<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.NamespaceMappings getNamespaceMappings()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeIterator: int getWhatToShow()> ->_NONE_
<android.widget.PopupWindow: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: org.xml.sax.ext.DeclHandler getDeclHandler()> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertImpl: byte[] getEncodedInternal()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: int getSoWriteTimeout()> ->_NONE_
<android.preference.PreferenceGroupAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()> ->_NONE_
<android.text.style.SuggestionSpan: java.lang.String getNotificationTargetClassName()> ->_NONE_
<org.apache.xml.serializer.AttributesImplSerializer: void setAttributes(org.xml.sax.Attributes)> ->_NONE_
<android.os.CommonTimeConfig: long getMasterElectionGroupId()> ->_NONE_
<java.text.Collator: void setDecomposition(int)> ->_NONE_
<android.support.v4.view.ViewPager: android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)> ->_NONE_
<android.renderscript.RenderScript: android.renderscript.RenderScript$RSErrorHandler getErrorHandler()> ->_NONE_
<android.view.View: int getSystemUiVisibility()> ->_NONE_
<android.webkit.WebViewCore: android.content.Context getContext()> ->_NONE_
<android.webkit.WebSettingsClassic: boolean getUseDoubleTree()> ->_NONE_
<org.apache.commons.codec.net.BCodec: java.lang.String encode(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.ElemPI: java.lang.String getNodeName()> ->_NONE_
<android.provider.MediaStore: java.lang.String getVersion(android.content.Context)> ->_NONE_
<android.support.v4.view.ViewPager: void setScrollState(int)> ->_NONE_
<android.view.ViewRootImpl: void pushHardwareLayerUpdate(android.view.HardwareLayer)> ->_NONE_
<org.apache.commons.io.output.ProxyWriter: void write(java.lang.String)> ->_NONE_
<android.opengl.GLLogWrapper: java.lang.String getTextureTarget(int)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: int getFromIndex(java.lang.Object)> ->_NONE_
<android.app.BackStackRecord: void dump(java.lang.String,java.io.PrintWriter,boolean)> ->_NONE_
<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: java.lang.String getDocumentTypeDeclarationPublicIdentifier()> ->_NONE_
<android.os.Debug: void setFieldsOn(java.lang.Class)> ->_NONE_
<org.apache.xml.serializer.Encodings: java.lang.String getMimeEncoding(java.lang.String)> ->_NONE_
<android.widget.BaseExpandableListAdapter: int getGroupType(int)> ->_NONE_
<android.app.ContextImpl: android.content.res.Resources getResources()> ->_NONE_
<gov.nist.javax.sip.header.ParametersHeader: java.lang.String getMultiParameter(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: void setAttributeSet(org.apache.xalan.templates.ElemAttributeSet)> ->_NONE_
<android.content.ContentProvider: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)> ->_NONE_
<android.app.Activity: void setPersistent(boolean)> ->_NONE_
<android.support.v4.app.NavUtils: java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName)> ->_NONE_
<android.webkit.WebSettingsClassic: void setDatabasePath(java.lang.String)> ->_NONE_
<java.text.NumberFormat: java.text.NumberFormat getCurrencyInstance(java.util.Locale)> ->_NONE_
<gov.nist.core.NameValueList: void setSeparator(java.lang.String)> ->_NONE_
<android.renderscript.FileA3D: int getIndexEntryCount()> ->_NONE_
<android.app.ContextImpl: android.view.CompatibilityInfoHolder getCompatibilityInfo(int)> ->_NONE_
<org.apache.xalan.templates.WhiteSpaceInfo: boolean getShouldStripSpace()> ->_NONE_
<android.test.ServiceTestCase: android.content.Context getSystemContext()> ->_NONE_
<org.apache.xalan.templates.ElemApplyTemplates: org.apache.xml.utils.QName getMode()> ->_NONE_
<android.widget.AutoCompleteTextView: void setListSelection(int)> ->_NONE_
<org.apache.xpath.patterns.StepPattern: java.lang.String getTargetString()> ->_NONE_
<android.test.ActivityUnitTestCase: void setApplication(android.app.Application)> ->_NONE_
<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.OpenWnn getCurrentIme()> ->_NONE_
<android.app.SearchableInfo: android.content.Context getActivityContext(android.content.Context)> ->_NONE_
<android.widget.TextView: void sendAccessibilityEventTypeViewTextChanged(java.lang.CharSequence,int,int,int)> ->_NONE_
<android.support.v4.view.PagerAdapter: void setPrimaryItem(android.view.View,int,java.lang.Object)> ->_NONE_
<android.widget.PopupWindow: void setSoftInputMode(int)> ->_NONE_
<java.net.DatagramSocket: java.net.InetAddress getInetAddress()> ->_NONE_
<jp.co.omronsoft.openwnn.OpenWnnEN: void updateComposingText(int)> ->_NONE_
<android.media.videoeditor.VideoEditorImpl: java.util.List getAllMediaItems()> ->_NONE_
<org.apache.xpath.objects.XNumber: int getType()> ->_NONE_
<android.test.mock.MockResources: android.graphics.Movie getMovie(int)> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.media.Metadata: boolean getBoolean(int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore: java.io.File getCertificateFile(java.io.File,java.security.cert.X509Certificate)> ->_NONE_
<android.database.sqlite.SQLiteStatement: int executeUpdateDelete()> ->_NONE_
<org.apache.xalan.templates.ElemExtensionDecl: int getFunctionCount()> ->_NONE_
<android.filterpacks.imageproc.ToPackedGrayFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<android.webkit.WebViewClassic: int getOverlappingActionModeHeight()> ->_NONE_
<org.apache.http.impl.auth.BasicScheme: java.lang.String getSchemeName()> ->_NONE_
<android.view.View: android.view.ViewRootImpl getViewRootImpl()> ->_NONE_
<android.widget.TimePicker: void setOnTimeChangedListener(android.widget.TimePicker$OnTimeChangedListener)> ->_NONE_
<android.support.v4.net.ConnectivityManagerCompat: android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent)> ->_NONE_
<android.os.UserManager: void setUserName(int,java.lang.String)> ->_NONE_
<org.apache.http.conn.routing.RouteTracker: void connectProxy(org.apache.http.HttpHost,boolean)> ->_NONE_
<org.apache.http.cookie.CookieOrigin: java.lang.String getHost()> ->_NONE_
<android.widget.SuggestionsAdapter: java.lang.String getColumnString(android.database.Cursor,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.ims.PProfileKey: void setValue(java.lang.String)> ->_NONE_
<android.graphics.Paint: boolean getFillPath(android.graphics.Path,android.graphics.Path)> ->_NONE_
<android.renderscript.RenderScript: void nScriptGroupExecute(int)> ->_NONE_
<android.accounts.ChooseTypeAndAccountActivity: int getItemIndexToSelect(java.util.ArrayList,java.lang.String,boolean)> ->_NONE_
<java.net.ServerSocket: void setPerformancePreferences(int,int,int)> ->_NONE_
<android.view.HardwareRenderer: void setRequested(boolean)> ->_NONE_
<android.webkit.WebSettingsClassic: void setShowVisualIndicator(boolean)> ->_NONE_
<android.graphics.PointF: void set(float,float)> ->_NONE_
<android.media.AudioRecord: int getSampleRate()> ->_NONE_
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean)> ->_NONE_
<android.database.sqlite.SQLiteDatabase: void setVersion(int)> ->_NONE_
<java.text.DateFormatSymbols: java.lang.String[][] getZoneStrings()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.Node getOwnerNode()> ->_NONE_
<android.test.suitebuilder.TestMethod: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)> ->_NONE_
<android.speech.tts.TextToSpeech: int setOnUtteranceProgressListener(android.speech.tts.UtteranceProgressListener)> ->_NONE_
<android.view.View: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)> ->_NONE_
<android.hardware.SystemSensorManager: java.util.List getFullSensorList()> ->_NONE_
<org.apache.xml.dtm.ref.NodeLocator: int getColumnNumber()> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: void setRecursionLimit(int)> ->_NONE_
<org.apache.xml.serializer.ToStream: void elementDecl(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xalan.processor.ProcessorOutputElem: void setMediaType(java.lang.String)> ->_NONE_
<org.apache.james.mime4j.util.CharsetUtil: java.nio.charset.Charset getCharset(java.lang.String)> ->_NONE_
<android.widget.ImageView: void setImageState(int[],boolean)> ->_NONE_
<android.media.MediaRouter: int getCategoryCount()> ->_NONE_
<android.graphics.Paint: void setShadowLayer(float,float,float,int)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: java.net.InetAddress getPeerPacketSourceAddress()> ->_NONE_
<android.text.Layout: float getLineWidth(int)> ->_NONE_
<android.view.View: void setVisibility(int)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: int getFirstNamespaceNode(int,boolean)> ->_NONE_
<android.view.MotionEvent: float getSize(int)> ->_NONE_
<android.telephony.SmsMessage: java.lang.String getEmailFrom()> ->_NONE_
<android.telephony.CellIdentityGsm: int getMnc()> ->_NONE_
<android.net.LocalSocket: java.io.InputStream getInputStream()> ->_NONE_
<org.apache.http.impl.conn.tsccm.AbstractConnPool: void closeIdleConnections(long,java.util.concurrent.TimeUnit)> ->_NONE_
<org.apache.commons.io.filefilter.AndFileFilter: void setFileFilters(java.util.List)> ->_NONE_
<org.apache.http.cookie.CookieSpecRegistry: java.util.List getSpecNames()> ->_NONE_
<android.view.animation.GridLayoutAnimationController: void setDirectionPriority(int)> ->_NONE_
<android.media.AudioService: void setStreamVolume(int,int,int)> ->_NONE_
<android.mtp.MtpStorageInfo: java.lang.String getDescription()> ->_NONE_
<org.apache.xalan.templates.TemplateSubPatternAssociation: org.apache.xalan.templates.ElemTemplate getTemplate()> ->_NONE_
<android.view.inputmethod.CompletionInfo: java.lang.CharSequence getText()> ->_NONE_
<android.graphics.drawable.GradientDrawable: void setGradientType(int)> ->_NONE_
<android.content.res.TypedArray: int getIndex(int)> ->_NONE_
<android.widget.ListView: int getHeaderViewsCount()> ->_NONE_
<android.app.DialogFragment: void setShowsDialog(boolean)> ->_NONE_
<android.app.ActivityManagerProxy: android.app.IActivityManager$ContentProviderHolder getContentProvider(android.app.IApplicationThread,java.lang.String,int,boolean)> ->_NONE_
<android.hardware.input.KeyboardLayout: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.kxml2.io.KXmlParser: java.lang.String getNamespaceUri(int)> ->_NONE_
<org.apache.xml.utils.FastStringBuffer: void sendSAXcharacters(org.xml.sax.ContentHandler,int,int)> ->_NONE_
<android.test.mock.MockCursor: int getColumnIndex(java.lang.String)> ->_NONE_
<android.app.TabActivity: android.widget.TabHost getTabHost()> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: void setTargetAuthenticationHandler(org.apache.http.client.AuthenticationHandler)> ->_NONE_
<javax.obex.ClientOperation: int getHeaderLength()> ->_NONE_
<android.app.ContextImpl: android.content.res.Resources$Theme getTheme()> ->_NONE_
<org.jivesoftware.smackx.ServiceDiscoveryManager: org.jivesoftware.smackx.packet.DiscoverItems discoverItems(java.lang.String,java.lang.String)> ->_NONE_
<android.widget.Spinner: void setDropDownHorizontalOffset(int)> ->_NONE_
<org.apache.http.impl.client.RequestWrapper: java.net.URI getURI()> ->_NONE_
<android.graphics.drawable.ShapeDrawable: int getOpacity()> ->_NONE_
<org.apache.xpath.jaxp.XPathImpl: org.w3c.dom.Document getDummyDocument()> ->_NONE_
<android.webkit.CookieManagerClassic: java.lang.String getCookie(java.lang.String)> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: void setIfModifiedSince(long)> ->_NONE_
<android.nfc.tech.NfcV: void connect()> ->_NONE_
<android.telephony.CellSignalStrengthCdma: void setEvdoDbm(int)> ->_NONE_
<org.apache.xpath.compiler.OpMap: int getOp(int)> ->_NONE_
<java.io.ObjectInputStream: java.lang.String readLine()> ->_NONE_
<android.content.res.Resources: java.lang.String getString(int)> ->_NONE_
<android.app.MediaRouteButton: void setVisibility(int)> ->_NONE_
<android.renderscript.Mesh: android.renderscript.Allocation getIndexSetAllocation(int)> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: void setCookieStore(org.apache.http.client.CookieStore)> ->_NONE_
<android.view.View: int getPaddingStart()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getInstance(java.security.interfaces.RSAPrivateCrtKey)> ->_NONE_
<org.jivesoftware.smack.util.PacketParserUtils: org.jivesoftware.smack.packet.PacketExtension parsePacketExtension(java.lang.String,java.lang.String,org.xmlpull.v1.XmlPullParser)> ->_NONE_
<android.view.TextureView: void setLayerType(int,android.graphics.Paint)> ->_NONE_
<android.net.http.CertificateChainValidator: android.net.http.CertificateChainValidator getInstance()> ->_NONE_
<org.apache.commons.io.filefilter.PrefixFileFilter: boolean accept(java.io.File,java.lang.String)> ->_NONE_
<org.apache.xpath.operations.Variable: boolean getGlobal()> ->_NONE_
<org.jivesoftware.smack.XMPPConnection: void setWakeLock(android.os.PowerManager$WakeLock)> ->_NONE_
<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.address.AddressImpl parseAddress(java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.security.cert.Certificate[] getLocalCertificates()> ->_NONE_
<javax.xml.datatype.Duration: long getTimeInMillis(java.util.Date)> ->_NONE_
<android.view.ViewGroup: boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: void setSoTimeout(int)> ->_NONE_
<android.app.ExpandableListActivity: android.widget.ExpandableListAdapter getExpandableListAdapter()> ->_NONE_
<org.apache.xalan.templates.ElemComment: java.lang.String getNodeName()> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getTagName()> ->_NONE_
<libcore.icu.NativeDecimalFormat: int getMinimumFractionDigits()> ->_NONE_
<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.TransformerFactoryImpl getStylesheetProcessor()> ->_NONE_
<android.view.ViewGroup: android.animation.LayoutTransition getLayoutTransition()> ->_NONE_
<jp.co.omronsoft.openwnn.DefaultSoftKeyboard: jp.co.omronsoft.openwnn.Keyboard getShiftChangeKeyboard(int)> ->_NONE_
<android.telephony.gsm.SmsManager: void sendDataMessage(java.lang.String,java.lang.String,short,byte[],android.app.PendingIntent,android.app.PendingIntent)> ->_NONE_
<android.text.Layout: int getOffsetForHorizontal(int,float)> ->_NONE_
<org.apache.xalan.transformer.XalanTransformState: org.apache.xalan.templates.ElemTemplate getCurrentTemplate()> ->_NONE_
<android.os.UserManager: android.content.pm.UserInfo getUserInfo(int)> ->_NONE_
<org.apache.harmony.security.PrivateKeyImpl: void setEncoding(byte[])> ->_NONE_
<org.apache.xalan.templates.ElemElement: void setNamespace(org.apache.xalan.templates.AVT)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: void setSoLinger(boolean,int)> ->_NONE_
<android.util.PrefixPrinter: void println(java.lang.String)> ->_NONE_
<android.os.storage.StorageManager: java.lang.String getMountedObbPath(java.lang.String)> ->_NONE_
<android.os.Process: android.os.Process$ProcessStartResult zygoteSendArgsAndGetResult(java.util.ArrayList)> ->_NONE_
<android.content.pm.ContainerEncryptionParams: long getEncryptedDataStart()> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Boolean: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> ->_NONE_
<org.apache.xpath.axes.FilterExprWalker: void setRoot(int)> ->_NONE_
<android.renderscript.Path: android.renderscript.Allocation getLoopAllocation()> ->_NONE_
<android.telephony.SignalStrength: int getLteLevel()> ->_NONE_
<android.widget.Spinner: java.lang.CharSequence getPrompt()> ->_NONE_
<android.view.DragEvent: android.content.ClipData getClipData()> ->_NONE_
<android.preference.Preference: android.content.Intent getIntent()> ->_NONE_
<android.view.inputmethod.BaseInputConnection: boolean setSelection(int,int)> ->_NONE_
<org.xml.sax.helpers.LocatorImpl: int getColumnNumber()> ->_NONE_
<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()> ->_NONE_
<java.io.File: java.io.File getParentFile()> ->_NONE_
<android.content.Intent: java.lang.String getScheme()> ->_NONE_
<org.apache.xpath.functions.FuncStringLength: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<android.support.v4.app.Fragment: android.os.Bundle getArguments()> ->_NONE_
<android.app.Fragment: java.lang.CharSequence getText(int)> ->_NONE_
<android.text.Layout: android.text.Layout$Alignment getAlignment()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLEngine: int getEngineContext()> ->_NONE_
<android.app.Activity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)> ->_NONE_
<android.text.method.TextKeyListener: int getInputType()> ->_NONE_
<org.apache.xml.serializer.ToSAXHandler: void setLexHandler(org.xml.sax.ext.LexicalHandler)> ->_NONE_
<android.os.storage.StorageManager: int getNextNonce()> ->_NONE_
<org.apache.xml.serializer.utils.Messages: java.lang.String getResourceSuffix(java.util.Locale)> ->_NONE_
<java.lang.reflect.Field: void setFloat(java.lang.Object,float)> ->_NONE_
<android.webkit.GeolocationPermissionsClassic: android.webkit.GeolocationPermissionsClassic getInstance()> ->_NONE_
<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.RejectedExecutionHandler getRejectedExecutionHandler()> ->_NONE_
<javax.crypto.Cipher: int update(byte[],int,int,byte[])> ->_NONE_
<org.apache.http.message.BasicRequestLine: org.apache.http.ProtocolVersion getProtocolVersion()> ->_NONE_
<android.webkit.WebSettingsClassic: void setUseDoubleTree(boolean)> ->_NONE_
<org.apache.xalan.templates.StylesheetRoot: boolean getSource_location()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.NativeCrypto: java.lang.String[] getSupportedProtocols()> ->_NONE_
<android.test.AndroidTestRunner: void setPerformanceResultsWriter(android.os.PerformanceCollector$PerformanceResultsWriter)> ->_NONE_
<android.widget.BaseAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)> ->_NONE_
<android.widget.Switch: void setSwitchMinWidth(int)> ->_NONE_
<org.apache.xpath.axes.WalkerFactory: java.lang.String getAnalysisString(int)> ->_NONE_
<libcore.net.url.JarURLConnectionImpl: void setUseCaches(boolean)> ->_NONE_
<android.bluetooth.BluetoothServerSocket: int getChannel()> ->_NONE_
<android.filterfw.core.Frame: long getTimestamp()> ->_NONE_
<java.lang.Throwable: java.lang.String getMessage()> ->_NONE_
<java.text.NumberFormat: java.lang.Number parse(java.lang.String)> ->_NONE_
<javax.crypto.Mac: java.security.Provider getProvider()> ->_NONE_
<android.gesture.Learner: java.util.ArrayList getInstances()> ->_NONE_
<android.accounts.AccountManagerService: android.accounts.AccountManagerService getSingleton()> ->_NONE_
<android.app.Dialog: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)> ->_NONE_
<android.widget.TextView: android.text.Layout getHintLayout()> ->_NONE_
<android.view.inputmethod.InputMethodManager: void setInputMethod(android.os.IBinder,java.lang.String)> ->_NONE_
<java.awt.font.NumericShaper: int getRanges()> ->_NONE_
<libcore.io.BlockGuardOs: int readv(java.io.FileDescriptor,java.lang.Object[],int[],int[])> ->_NONE_
<java.net.HttpCookie: java.lang.String getPortlist()> ->_NONE_
<java.util.IllegalFormatWidthException: java.lang.String getMessage()> ->_NONE_
<org.apache.xml.utils.URI: void setQueryString(java.lang.String)> ->_NONE_
<java.net.URL: java.lang.String getQuery()> ->_NONE_
<java.util.zip.CRC32: void update(int)> ->_NONE_
<org.kxml2.io.KXmlParser: java.lang.String readUntil(char[],boolean)> ->_NONE_
<gov.nist.javax.sip.header.CallID: gov.nist.javax.sip.header.CallIdentifier getCallIdentifer()> ->_NONE_
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)> ->_NONE_
<gov.nist.javax.sip.address.SipUri: void setTelephoneSubscriber(gov.nist.javax.sip.address.TelephoneNumber)> ->_NONE_
<android.net.http.RequestQueue: android.net.http.RequestHandle queueRequest(java.lang.String,android.net.WebAddress,java.lang.String,java.util.Map,android.net.http.EventHandler,java.io.InputStream,int)> ->_NONE_
<android.content.Intent: void setSourceBounds(android.graphics.Rect)> ->_NONE_
<java.lang.Class: java.lang.reflect.Method getEnclosingMethod()> ->_NONE_
<android.app.Activity: java.lang.String getLocalClassName()> ->_NONE_
<org.apache.xalan.transformer.TransformerHandlerImpl: javax.xml.transform.Transformer getTransformer()> ->_NONE_
<org.apache.http.message.AbstractHttpMessage: void setHeader(org.apache.http.Header)> ->_NONE_
<android.mtp.MtpDevice: android.mtp.MtpStorageInfo getStorageInfo(int)> ->_NONE_
<java.net.URI: java.lang.String getQuery()> ->_NONE_
<org.apache.xpath.axes.OneStepIteratorForward: int getAxis()> ->_NONE_
<android.test.suitebuilder.TestGrouping: java.util.List getTests()> ->_NONE_
<android.telephony.SmsMessage: int getStatusOnIcc()> ->_NONE_
<java.text.NumberFormat: void setMaximumFractionDigits(int)> ->_NONE_
<gov.nist.javax.sip.header.MaxForwards: void setMaxForwards(int)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: int getDecimalFormatCount()> ->_NONE_
<android.app.ActivityManagerProxy: void finishSubActivity(android.os.IBinder,java.lang.String,int)> ->_NONE_
<android.widget.TextView: int getFadeTop(boolean)> ->_NONE_
<android.location.Address: void setAdminArea(java.lang.String)> ->_NONE_
<android.webkit.CookieManager: java.lang.String getCookie(android.net.WebAddress)> ->_NONE_
<org.javia.arity.SimpleCodeGen: org.javia.arity.SimpleCodeGen setSymbols(org.javia.arity.Symbols)> ->_NONE_
<net.oauth.OAuthProblemException: void setParameter(java.lang.String,java.lang.Object)> ->_NONE_
<net.oauth.ConsumerProperties: net.oauth.OAuthConsumer getConsumer(java.lang.String)> ->_NONE_
<android.view.MotionEvent: long getHistoricalEventTime(int)> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Oid: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)> ->_NONE_
<android.server.search.Searchables: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)> ->_NONE_
<android.location.Location: java.lang.String getProvider()> ->_NONE_
<org.apache.xalan.transformer.TransformerIdentityImpl: void setErrorListener(javax.xml.transform.ErrorListener)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.CertificateMessage: void send(org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream)> ->_NONE_
<org.jivesoftware.smack.packet.Bind: void setJid(java.lang.String)> ->_NONE_
<android.view.KeyEvent: int getFlags()> ->_NONE_
<android.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName)> ->_NONE_
<android.preference.ListPreference: java.lang.CharSequence[] getEntryValues()> ->_NONE_
<gov.nist.core.Host: void setHostAddress(java.lang.String)> ->_NONE_
<android.support.v4.content.CursorLoader: void onStartLoading()> ->_NONE_
<android.test.IsolatedContext: void sendBroadcast(android.content.Intent)> ->_NONE_
<android.media.audiofx.Visualizer: int setServerDiedListener(android.media.audiofx.Visualizer$OnServerDiedListener)> ->_NONE_
<android.database.sqlite.SQLiteDatabase: int getVersion()> ->_NONE_
<android.content.pm.PackageCleanItem: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.view.ViewConfiguration: int getScaledOverscrollDistance()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: void setXmlVersion(java.lang.String)> ->_NONE_
<android.content.SyncStorageEngine: android.content.SyncStorageEngine$AuthorityInfo getAuthority(int)> ->_NONE_
<org.apache.xml.utils.NamespaceSupport2: java.util.Enumeration getPrefixes(java.lang.String)> ->_NONE_
<libcore.io.ForwardingOs: java.net.InetAddress ioctlInetAddress(java.io.FileDescriptor,int,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.Protocol: void setProtocolVersion(java.lang.String)> ->_NONE_
<android.net.wifi.WifiStateMachine: void sendSupplicantConnectionChangedBroadcast(boolean)> ->_NONE_
<android.filterfw.core.GLFrameTimer: android.filterfw.core.StopWatchMap get()> ->_NONE_
<android.nfc.tech.NfcF: void connect()> ->_NONE_
<android.view.PointerIcon: float getHotSpotX()> ->_NONE_
<org.jivesoftware.smack.PacketWriter: void sendHeartbeatAck()> ->_NONE_
<android.view.PointerIcon: float getHotSpotY()> ->_NONE_
<android.app.admin.DevicePolicyManager: java.util.List getActiveAdmins()> ->_NONE_
<android.media.RingtoneManager: android.net.Uri getUriFromCursor(android.database.Cursor)> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.Stylesheet getStylesheet()> ->_NONE_
<android.app.Activity: java.util.HashMap getLastNonConfigurationChildInstances()> ->_NONE_
<android.widget.TextView: int getTopPaddingOffset()> ->_NONE_
<android.hardware.usb.UsbManager: java.lang.String getDefaultFunction()> ->_NONE_
<java.lang.Class: java.lang.Class[] getDeclaredClasses()> ->_NONE_
<android.text.method.AllCapsTransformationMethod: void setLengthChangesAllowed(boolean)> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack getStack()> ->_NONE_
<android.nfc.tech.NfcB: void connect()> ->_NONE_
<java.beans.PropertyChangeEvent: java.lang.Object getNewValue()> ->_NONE_
<org.jivesoftware.smack.packet.Presence: int getCapabilityFlag()> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: java.lang.String getLocalAvatarHash()> ->_NONE_
<android.webkit.WebSettingsClassic: void setSavePassword(boolean)> ->_NONE_
<gov.nist.javax.sip.header.Warning: int getCode()> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: org.w3c.dom.Document getOwnerDocument()> ->_NONE_
<gov.nist.javax.sip.header.ContentDisposition: void setDispositionType(java.lang.String)> ->_NONE_
<org.apache.harmony.xml.dom.NodeImpl: void setNodeValue(java.lang.String)> ->_NONE_
<libcore.net.http.HttpEngine: java.lang.String getOriginAddress(java.net.URL)> ->_NONE_
<java.sql.SQLClientInfoException: java.util.Map getFailedProperties()> ->_NONE_
<gov.nist.javax.sip.header.extensions.References: java.lang.String getRel()> ->_NONE_
<android.bluetooth.BluetoothHeadset: int getAudioState(android.bluetooth.BluetoothDevice)> ->_NONE_
<android.nfc.tech.NfcA: void connect()> ->_NONE_
<android.text.method.SingleLineTransformationMethod: android.text.method.SingleLineTransformationMethod getInstance()> ->_NONE_
<android.bluetooth.BluetoothTetheringDataTracker: boolean setRadio(boolean)> ->_NONE_
<android.graphics.Paint: void setCompatibilityScaling(float)> ->_NONE_
<android.widget.ViewAnimator: void setDisplayedChild(int)> ->_NONE_
<org.jivesoftware.smack.packet.DataMessage: void setPermission(java.lang.String)> ->_NONE_
<android.hardware.usb.UsbManager: java.util.HashMap getDeviceList()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setFromIndex(int)> ->_NONE_
<gov.nist.javax.sip.address.SipUri: void setUriParameter(gov.nist.core.NameValue)> ->_NONE_
<android.preference.Preference: void setWidgetLayoutResource(int)> ->_NONE_
<org.apache.james.mime4j.field.MailboxListField: org.apache.james.mime4j.field.address.MailboxList getMailboxList()> ->_NONE_
<android.media.MediaFormat: long getLong(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.ParametersHeader: int getParameterAsInt(java.lang.String)> ->_NONE_
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])> ->_NONE_
<android.net.wifi.p2p.WifiP2pDeviceList: android.net.wifi.p2p.WifiP2pDevice get(java.lang.String)> ->_NONE_
<android.widget.AppSecurityPermissions: android.view.View getPermissionItemView(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)> ->_NONE_
<org.apache.xpath.functions.FuncId: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<android.net.wifi.WifiStateMachine: boolean syncDisableNetwork(com.android.internal.util.AsyncChannel,int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.AlertProtocol: java.lang.String getAlertDescription()> ->_NONE_
<org.jivesoftware.smack.XMPPConnection: void write(java.lang.String)> ->_NONE_
<android.net.wifi.WifiNative: boolean setConcurrencyPriority(java.lang.String)> ->_NONE_
<android.accounts.AccountManager: void removeOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener)> ->_NONE_
<android.filterfw.core.FilterFactory: android.filterfw.core.Filter createFilterByClassName(java.lang.String,java.lang.String)> ->_NONE_
<junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test)> ->_NONE_
<java.security.cert.X509CertSelector: byte[] getNameConstraints()> ->_NONE_
<android.net.SSLCertificateSocketFactory: javax.net.ssl.SSLSocketFactory getDelegate()> ->_NONE_
<java.security.CodeSource: java.security.cert.Certificate[] getCertificates()> ->_NONE_
<gov.nist.javax.sip.header.ims.PMediaAuthorization: java.lang.String encodeBody()> ->_NONE_
<org.javia.arity.Symbols: java.lang.String[] getDictionary()> ->_NONE_
<android.animation.Keyframe: android.animation.TimeInterpolator getInterpolator()> ->_NONE_
<java.util.zip.Inflater: int getTotalOut()> ->_NONE_
<gov.nist.javax.sip.SipStackImpl: gov.nist.javax.sip.EventScanner getEventScanner()> ->_NONE_
<android.media.EncoderCapabilities: int[] getOutputFileFormats()> ->_NONE_
<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)> ->_NONE_
<gov.nist.javax.sip.header.AllowEvents: java.lang.String encodeBody()> ->_NONE_
<android.view.View: void setRotation(float)> ->_NONE_
<org.apache.xpath.NodeSet: void runTo(int)> ->_NONE_
<android.view.View: void setMeasuredDimension(int,int)> ->_NONE_
<android.text.SpannableStringInternal: void getChars(int,int,char[],int)> ->_NONE_
<android.text.style.SuperscriptSpan: void updateDrawState(android.text.TextPaint)> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: java.lang.String getAvatarHash()> ->_NONE_
<android.net.WebAddress: void setHost(java.lang.String)> ->_NONE_
<android.content.ContentValues: java.lang.String getAsString(java.lang.String)> ->_NONE_
<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()> ->_NONE_
<java.lang.Long: java.lang.Long getLong(java.lang.String,long)> ->_NONE_
<android.location.Address: java.lang.String getThoroughfare()> ->_NONE_
<android.widget.FrameLayout: int getPaddingBottomWithForeground()> ->_NONE_
<org.apache.http.impl.io.IdentityOutputStream: void write(byte[],int,int)> ->_NONE_
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getUrlLegal()> ->_NONE_
<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x501.Name getIssuer()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: int getToIndex(java.lang.Object)> ->_NONE_
<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager getInstance()> ->_NONE_
<org.apache.xpath.operations.Operation: org.apache.xpath.Expression getExpression()> ->_NONE_
<org.apache.xpath.functions.SecuritySupport12: java.lang.ClassLoader getSystemClassLoader()> ->_NONE_
<android.net.EthernetDataTracker: boolean reconnect()> ->_NONE_
<org.xml.sax.helpers.XMLFilterImpl: org.xml.sax.ErrorHandler getErrorHandler()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: int getNextAttributeIdentity(int)> ->_NONE_
<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: java.lang.String getPhoneWork(java.lang.String)> ->_NONE_
<android.app.Fragment: android.app.Activity getActivity()> ->_NONE_
<android.net.wifi.p2p.WifiP2pWfdInfo: void setCoupledSinkSupportAtSource(boolean)> ->_NONE_
<gov.nist.javax.sip.header.To: java.lang.StringBuffer encodeBody(java.lang.StringBuffer)> ->_NONE_
<gov.nist.javax.sip.stack.MessageProcessor: void setSentBy(java.lang.String)> ->_NONE_
<android.content.IntentFilter: android.os.PatternMatcher getDataPath(int)> ->_NONE_
<android.view.HardwareLayer: android.view.DisplayList getDisplayList()> ->_NONE_
<android.net.EthernetDataTracker: void setUserDataEnable(boolean)> ->_NONE_
<javax.xml.transform.stream.StreamResult: void setWriter(java.io.Writer)> ->_NONE_
<dalvik.system.profiler.BinaryHprofReader: dalvik.system.profiler.HprofData getHprofData()> ->_NONE_
<gov.nist.javax.sip.address.SipUri: int getPort()> ->_NONE_
<java.lang.VMClassLoader: java.util.List getResources(java.lang.String)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setPassword(java.lang.Object,boolean)> ->_NONE_
<org.apache.xml.utils.IntVector: void setElementAt(int,int)> ->_NONE_
<android.hardware.input.InputManager: void setPointerSpeed(android.content.Context,int)> ->_NONE_
<android.graphics.drawable.DrawableContainer: int getOpacity()> ->_NONE_
<android.webkit.WebViewClassic: void setMockGeolocationError(int,java.lang.String)> ->_NONE_
<android.webkit.WebSettingsClassic: void setFixedFontFamily(java.lang.String)> ->_NONE_
<android.view.ViewStub: int getInflatedId()> ->_NONE_
<org.apache.xml.utils.UnImplNode: org.w3c.dom.DocumentFragment createDocumentFragment()> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Any: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)> ->_NONE_
<android.webkit.WebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.SecuritySupport: java.io.FileInputStream getFileInputStream(java.io.File)> ->_NONE_
<android.nfc.NfcAdapter: android.nfc.INfcAdapter getServiceInterface()> ->_NONE_
<java.util.concurrent.atomic.AtomicIntegerArray: int getAndIncrement(int)> ->_NONE_
<gov.nist.javax.sip.header.Via: java.lang.String getBranch()> ->_NONE_
<android.telephony.CellIdentityGsm: int getLac()> ->_NONE_
<android.os.Bundle: long getLong(java.lang.String)> ->_NONE_
<android.webkit.WebSettings: void setCacheMode(int)> ->_NONE_
<gov.nist.javax.sip.stack.MessageChannel: int getPort()> ->_NONE_
<android.graphics.drawable.RotateDrawable: boolean setVisible(boolean,boolean)> ->_NONE_
<android.view.View: android.view.View getRootView()> ->_NONE_
<org.jivesoftware.smack.packet.Authentication: java.lang.String getDigest()> ->_NONE_
<org.kxml2.io.KXmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.harmony.security.x509.tsp.TimeStampReq: int getVersion()> ->_NONE_
<jp.co.omronsoft.openwnn.TextCandidatesViewManager: void setAutoHide(boolean)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: void setVersion(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: java.lang.String getDocumentStandalone(int)> ->_NONE_
<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)> ->_NONE_
<java.util.concurrent.Phaser: java.util.concurrent.Phaser getRoot()> ->_NONE_
<android.app.ActivityOptions: int getCustomExitResId()> ->_NONE_
<org.ccil.cowan.tagsoup.AttributesImpl: void setType(int,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.message.SIPMessage parseSIPMessage(java.lang.String)> ->_NONE_
<libcore.net.UriCodec: void appendEncoded(java.lang.StringBuilder,java.lang.String,java.nio.charset.Charset,boolean)> ->_NONE_
<android.widget.TextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)> ->_NONE_
<android.media.AudioTrack: float getMaxVolume()> ->_NONE_
<org.apache.xml.dtm.ref.DTMTreeWalker: void setDTM(org.apache.xml.dtm.DTM)> ->_NONE_
<javax.xml.datatype.Duration: int getDays()> ->_NONE_
<android.text.style.StrikethroughSpan: int getSpanTypeId()> ->_NONE_
<android.net.ConnectivityManager: java.lang.String getNetworkTypeName(int)> ->_NONE_
<gov.nist.javax.sip.header.StatusLine: void setStatusCode(int)> ->_NONE_
<org.apache.xpath.axes.PredicatedNodeTest: int getPredicateCount()> ->_NONE_
<android.graphics.PathMeasure: void setPath(android.graphics.Path,boolean)> ->_NONE_
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.security.Provider)> ->_NONE_
<android.widget.SearchView: java.lang.String getActionKeyMessage(android.database.Cursor,android.app.SearchableInfo$ActionKeyInfo)> ->_NONE_
<android.widget.ProgressBar: int getMax()> ->_NONE_
<net.oauth.signature.OAuthSignatureMethod: void setTokenSecret(java.lang.String)> ->_NONE_
<android.app.SearchDialog: void setListSelection(int)> ->_NONE_
<org.apache.xalan.templates.OutputProperties: int getIntProperty(java.lang.String)> ->_NONE_
<org.apache.http.impl.conn.ProxySelectorRoutePlanner: void setProxySelector(java.net.ProxySelector)> ->_NONE_
<android.webkit.WebSettings: void setSupportZoom(boolean)> ->_NONE_
<org.apache.xpath.objects.XRTreeFragSelectWrapper: int getType()> ->_NONE_
<android.preference.DialogPreference: android.graphics.drawable.Drawable getDialogIcon()> ->_NONE_
<android.webkit.WebViewClassic: void saveWebArchiveImpl(java.lang.String,boolean,android.webkit.ValueCallback)> ->_NONE_
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()> ->_NONE_
<android.renderscript.FileA3D: android.renderscript.FileA3D$IndexEntry getIndexEntry(int)> ->_NONE_
<android.service.dreams.DreamService: void loadSandman()> ->_NONE_
<android.widget.GridView: void setNumColumns(int)> ->_NONE_
<java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)> ->_NONE_
<android.webkit.BrowserFrame: void externalRepresentation(android.os.Message)> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: boolean getXmlSpace()> ->_NONE_
<libcore.net.http.RequestHeaders: void setConnection(java.lang.String)> ->_NONE_
<java.text.Annotation: java.lang.Object getValue()> ->_NONE_
<android.widget.GridView: int getBottomSelectionPixel(int,int,int,int)> ->_NONE_
<android.inputmethodservice.IInputMethodSessionWrapper: void updateExtractedText(int,android.view.inputmethod.ExtractedText)> ->_NONE_
<android.telephony.ServiceState: void setOperatorAlphaLong(java.lang.String)> ->_NONE_
<org.apache.harmony.xml.dom.TextImpl: java.lang.String getNodeName()> ->_NONE_
<org.apache.commons.io.CopyUtils: void copy(byte[],java.io.OutputStream)> ->_NONE_
<java.lang.Thread: void setPriority(int)> ->_NONE_
<android.net.http.RequestQueue: android.net.http.Request getRequest()> ->_NONE_
<android.net.sip.SipAudioCall: java.lang.String getLocalIp()> ->_NONE_
<android.widget.PopupWindow: void setTouchInterceptor(android.view.View$OnTouchListener)> ->_NONE_
<java.security.cert.X509CRLSelector: void setIssuerNames(java.util.Collection)> ->_NONE_
<android.widget.RemoteViews: void setChronometer(int,long,java.lang.String,boolean)> ->_NONE_
<android.webkit.WebViewClassic: android.content.Context getContext()> ->_NONE_
<android.media.AudioRecord: void setRecordPositionUpdateListener(android.media.AudioRecord$OnRecordPositionUpdateListener)> ->_NONE_
<java.net.Socks4Message: java.lang.String getString(int,int)> ->_NONE_
<org.apache.http.message.HeaderGroup: void setHeaders(org.apache.http.Header[])> ->_NONE_
<java.net.URI: java.lang.String getRawUserInfo()> ->_NONE_
<android.opengl.GLSurfaceView: void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser)> ->_NONE_
<android.webkit.WebViewClassic: void pageSwapCallback(boolean)> ->_NONE_
<java.lang.ThreadGroup: java.lang.ThreadGroup getParent()> ->_NONE_
<org.xmlpull.v1.XmlPullParserFactory: void setNamespaceAware(boolean)> ->_NONE_
<java.security.cert.X509CRLSelector: java.util.Collection getIssuerNames()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setSource(java.lang.Object,android.view.View)> ->_NONE_
<android.webkit.UrlInterceptRegistry: void setUrlInterceptDisabled(boolean)> ->_NONE_
<libcore.io.Posix: int pread(java.io.FileDescriptor,byte[],int,int,long)> ->_NONE_
<android.telephony.gsm.SmsMessage: java.lang.String getPseudoSubject()> ->_NONE_
<android.preference.MultiCheckPreference: java.lang.CharSequence[] getEntries()> ->_NONE_
<android.preference.MultiCheckPreference: void setValue(int,boolean)> ->_NONE_
<gov.nist.core.LogWriter: void setBuildTimeStamp(java.lang.String)> ->_NONE_
<android.filterpacks.base.GLTextureSource: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)> ->_NONE_
<java.net.Socket: void setSoTimeout(int)> ->_NONE_
<org.xmlpull.v1.sax2.Driver: void setFeature(java.lang.String,boolean)> ->_NONE_
<android.view.LayoutInflater: android.view.LayoutInflater$Filter getFilter()> ->_NONE_
<android.view.textservice.SpellCheckerInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.server.search.Searchables: java.util.ArrayList getSearchablesList()> ->_NONE_
<android.app.ApplicationPackageManager: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int)> ->_NONE_
<android.nfc.tech.MifareClassic: void connect()> ->_NONE_
<libcore.io.ForwardingOs: int sendto(java.io.FileDescriptor,java.nio.ByteBuffer,int,java.net.InetAddress,int)> ->_NONE_
<android.webkit.ZoomManager: int getDocumentAnchorX()> ->_NONE_
<android.webkit.ZoomManager: int getDocumentAnchorY()> ->_NONE_
<android.bluetooth.BluetoothTetheringDataTracker: java.lang.String getTcpBufferSizesPropName()> ->_NONE_
<android.filterpacks.imageproc.BlendFilter: android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)> ->_NONE_
<android.view.VelocityTracker: float getYVelocity()> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: void setReadTimeout(int)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.NodeList getChildNodes()> ->_NONE_
<javax.security.auth.x500.X500Principal: byte[] getEncoded()> ->_NONE_
<java.util.concurrent.ForkJoinPool: java.lang.Thread$UncaughtExceptionHandler getUncaughtExceptionHandler()> ->_NONE_
<android.filterfw.core.GLEnvironment: void setSurfaceTimestamp(long)> ->_NONE_
<android.gesture.GestureOverlayView: java.util.ArrayList getCurrentStroke()> ->_NONE_
<org.apache.xpath.axes.OneStepIterator: int getProximityPosition(int)> ->_NONE_
<org.apache.harmony.xml.dom.DocumentFragmentImpl: java.lang.String getNodeName()> ->_NONE_
<android.content.pm.ComponentInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.widget.TextView: int getGravity()> ->_NONE_
<android.hardware.usb.UsbRequest: android.hardware.usb.UsbEndpoint getEndpoint()> ->_NONE_
<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: java.lang.String getUtranCellID3GPP()> ->_NONE_
<android.drm.mobile1.DrmRightsManager: java.util.List getRightsList()> ->_NONE_
<org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)> ->_NONE_
<org.apache.james.mime4j.message.Multipart: void setEpilogue(java.lang.String)> ->_NONE_
<org.ccil.cowan.tagsoup.Element: void setNext(org.ccil.cowan.tagsoup.Element)> ->_NONE_
<android.nfc.NfcActivityManager: void setNdefPushMessageCallback(android.app.Activity,android.nfc.NfcAdapter$CreateNdefMessageCallback)> ->_NONE_
<android.widget.RemoteViews: void setViewPadding(int,int,int,int,int)> ->_NONE_
<org.apache.http.impl.cookie.CookieSpecBase: java.lang.String getDefaultPath(org.apache.http.cookie.CookieOrigin)> ->_NONE_
<gov.nist.javax.sip.parser.ims.PathParser: gov.nist.javax.sip.header.SIPHeader parse()> ->_NONE_
<android.view.View: void setRotationY(float)> ->_NONE_
<java.text.ParseException: int getErrorOffset()> ->_NONE_
<android.net.wifi.WifiConfigStore: android.net.wifi.NetworkUpdateResult saveNetwork(android.net.wifi.WifiConfiguration)> ->_NONE_
<android.view.View: void setRotationX(float)> ->_NONE_
<android.app.Activity: android.content.Intent getIntent()> ->_NONE_
<org.jivesoftware.smack.packet.Packet: org.jivesoftware.smack.packet.XMPPError getError()> ->_NONE_
<android.support.v4.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> ->_NONE_
<javax.xml.transform.stream.StreamSource: void setReader(java.io.Reader)> ->_NONE_
<android.view.View: long getDrawingTime()> ->_NONE_
<android.os.Bundle: int getInt(java.lang.String,int)> ->_NONE_
<org.apache.http.message.BasicNameValuePair: java.lang.String getName()> ->_NONE_
<android.gesture.Gesture: float getLength()> ->_NONE_
<android.net.wifi.p2p.WifiP2pService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> ->_NONE_
<org.apache.http.params.HttpConnectionParamBean: void setTcpNoDelay(boolean)> ->_NONE_
<android.util.XmlPullAttributes: java.lang.String getPositionDescription()> ->_NONE_
<android.text.style.TypefaceSpan: void updateMeasureState(android.text.TextPaint)> ->_NONE_
<org.apache.http.conn.params.ConnPerRouteBean: int getDefaultMaxPerRoute()> ->_NONE_
<android.content.Loader: void onForceLoad()> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: void setOmitXMLDeclaration(boolean)> ->_NONE_
<org.apache.xpath.NodeSet: void setShouldCacheNodes(boolean)> ->_NONE_
<gov.nist.javax.sip.SipProviderImpl: javax.sip.Dialog getNewDialog(javax.sip.Transaction)> ->_NONE_
<android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int)> ->_NONE_
<android.net.http.Request: void setConnection(android.net.http.Connection)> ->_NONE_
<java.nio.FileChannelImpl: long transferFrom(java.nio.channels.ReadableByteChannel,long,long)> ->_NONE_
<java.util.logging.Logger: java.util.logging.Logger getAnonymousLogger()> ->_NONE_
<android.webkit.ZoomControlEmbedded: android.widget.ZoomButtonsController getControls()> ->_NONE_
<android.animation.PropertyValuesHolder: void setProperty(android.util.Property)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()> ->_NONE_
<android.filterfw.core.Scheduler: android.filterfw.core.FilterGraph getGraph()> ->_NONE_
<android.content.res.Configuration: int getLayoutDirection()> ->_NONE_
<android.net.wifi.WifiStateMachine: void setWifiEnabled(boolean)> ->_NONE_
<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getViaHost()> ->_NONE_
<java.util.jar.JarFile: java.util.jar.Manifest getManifest()> ->_NONE_
<android.os.Debug: java.lang.String getCallers(int)> ->_NONE_
<org.apache.commons.io.FileUtils: java.lang.String getUserDirectoryPath()> ->_NONE_
<gov.nist.javax.sip.header.SubscriptionState: int getRetryAfter()> ->_NONE_
<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder replaceWith(byte[])> ->_NONE_
<android.content.BroadcastReceiver: void setResultExtras(android.os.Bundle)> ->_NONE_
<android.net.http.Request: void setBodyProvider(java.io.InputStream,int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: java.security.SecureRandom getSecureRandomMember()> ->_NONE_
<org.apache.harmony.xml.dom.DOMConfigurationImpl: org.w3c.dom.DOMStringList getParameterNames()> ->_NONE_
<android.telephony.ServiceState: int getCssIndicator()> ->_NONE_
<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.ElemTemplate getTemplateComposed(org.apache.xpath.XPathContext,int,org.apache.xml.utils.QName,int,int,boolean,org.apache.xml.dtm.DTM)> ->_NONE_
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(boolean,boolean)> ->_NONE_
<android.mtp.MtpStorage: int getStorageId()> ->_NONE_
<android.net.ConnectivityManager: android.net.LinkProperties getActiveLinkProperties()> ->_NONE_
<org.apache.harmony.xml.dom.DOMErrorImpl: short getSeverity()> ->_NONE_
<android.media.videoeditor.MediaArtistNativeHelper: int getVideoCodecType(int)> ->_NONE_
<org.apache.xml.serializer.SerializerBase: void setStandalone(java.lang.String)> ->_NONE_
<android.net.InterfaceConfiguration: java.lang.Iterable getFlags()> ->_NONE_
<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.lang.Thread getFirstQueuedThread()> ->_NONE_
<android.view.KeyCharacterMap: boolean getKeyData(int,android.view.KeyCharacterMap$KeyData)> ->_NONE_
<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean)> ->_NONE_
<org.apache.xml.utils.AttList: java.lang.String getURI(int)> ->_NONE_
<java.util.concurrent.atomic.AtomicLongFieldUpdater: long getAndIncrement(java.lang.Object)> ->_NONE_
<android.text.style.BackgroundColorSpan: int getBackgroundColor()> ->_NONE_
<android.filterfw.core.InputPort: java.lang.Object getTarget()> ->_NONE_
<android.webkit.DeviceMotionAndOrientationManager: void setMockOrientation(boolean,double,boolean,double,boolean,double)> ->_NONE_
<org.apache.xpath.XPathException: void printStackTrace(java.io.PrintWriter)> ->_NONE_
<java.util.GregorianCalendar: int getLeastMaximum(int)> ->_NONE_
<android.content.pm.ComponentInfo: int getIconResource()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.ServerRequestInterface newSIPServerRequest(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.MessageChannel)> ->_NONE_
<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String getPrefix(java.lang.String)> ->_NONE_
<org.apache.harmony.luni.lang.reflect.Types: java.lang.reflect.Type getType(java.lang.reflect.Type)> ->_NONE_
<gov.nist.javax.sip.header.Via: java.lang.String getSentProtocolField()> ->_NONE_
<android.content.SyncStorageEngine: void stopSyncEvent(long,long,java.lang.String,long,long)> ->_NONE_
<org.apache.harmony.security.x509.CRLNumber: byte[] getEncoded()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: void setTcpNoDelay(boolean)> ->_NONE_
<android.webkit.WebViewClassic: void setScrollBarStyle(int)> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int getTypedAttribute(int,int)> ->_NONE_
<android.media.videoeditor.AudioTrack: int getAudioBitrate()> ->_NONE_
<org.apache.xml.serializer.dom3.LSSerializerImpl: void setFilter(org.w3c.dom.ls.LSSerializerFilter)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getNodeValue()> ->_NONE_
<android.telephony.ServiceState: void setCdmaRoamingIndicator(int)> ->_NONE_
<gov.nist.javax.sip.header.RetryAfter: void setComment(java.lang.String)> ->_NONE_
<android.media.videoeditor.MediaImageItem: void getThumbnailList(int,int,long,long,int,int[],android.media.videoeditor.MediaItem$GetThumbnailListCallback)> ->_NONE_
<java.util.Properties: void loadFromXML(java.io.InputStream)> ->_NONE_
<libcore.io.ForwardingOs: void setsockoptIpMreqn(java.io.FileDescriptor,int,int,int)> ->_NONE_
<android.content.res.TypedArray: float getFraction(int,int,int,float)> ->_NONE_
<android.media.videoeditor.MediaVideoItem: int getFileType()> ->_NONE_
<org.apache.xml.utils.UnImplNode: void setValue(java.lang.String)> ->_NONE_
<org.jivesoftware.smackx.packet.DiscoverInfo: java.util.Iterator getFeatures()> ->_NONE_
<android.gesture.GestureOverlayView: void setGestureVisible(boolean)> ->_NONE_
<android.speech.tts.SynthesisRequest: int getSpeechRate()> ->_NONE_
<java.security.SecureRandom: void setSeed(long)> ->_NONE_
<android.view.animation.Animation: boolean getDetachWallpaper()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: int getFirstAttributeIdentity(int)> ->_NONE_
<android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()> ->_NONE_
<android.app.ActivityManagerProxy: int stopService(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ext.LexicalHandler getInputLexicalHandler()> ->_NONE_
<android.view.View: int getPaddingEnd()> ->_NONE_
<android.content.Loader: android.content.Context getContext()> ->_NONE_
<java.util.Calendar: java.util.TimeZone getTimeZone()> ->_NONE_
<android.filterfw.core.FilterPort: android.filterfw.core.FrameFormat getPortFormat()> ->_NONE_
<android.animation.PropertyValuesHolder: void setFloatValues(float[])> ->_NONE_
<org.apache.harmony.security.x501.AttributeValue: java.lang.String getHexString()> ->_NONE_
<android.text.TextUtils: void dumpSpans(java.lang.CharSequence,android.util.Printer,java.lang.String)> ->_NONE_
<java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)> ->_NONE_
<android.animation.ValueAnimator: android.animation.Animator setDuration(long)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CSeqHeader getCSeqHeader()> ->_NONE_
<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()> ->_NONE_
<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.KeyUsage getKeyUsageValue()> ->_NONE_
<android.text.DynamicLayout: void setBlocksDataForTest(int[],int[],int)> ->_NONE_
<java.util.concurrent.ForkJoinTask: int getQueuedTaskCount()> ->_NONE_
<org.apache.commons.codec.net.QuotedPrintableCodec: java.lang.String getDefaultCharset()> ->_NONE_
<org.apache.commons.io.output.ThresholdingOutputStream: void write(byte[])> ->_NONE_
<org.apache.xpath.operations.Operation: void setExpression(org.apache.xpath.Expression)> ->_NONE_
<org.apache.xpath.axes.ReverseAxesWalker: int getProximityPosition(int)> ->_NONE_
<org.apache.http.impl.HttpConnectionMetricsImpl: long getResponseCount()> ->_NONE_
<java.net.NetworkInterface: java.net.NetworkInterface getByInetAddress(java.net.InetAddress)> ->_NONE_
<gov.nist.javax.sip.header.Via: void setSentBy(gov.nist.core.HostPort)> ->_NONE_
<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList getTextColor()> ->_NONE_
<java.io.RandomAccessFile: void write(byte[],int,int)> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: void setOrganizationUnit(java.lang.String)> ->_NONE_
<org.apache.harmony.security.x509.SubjectKeyIdentifier: byte[] getKeyIdentifier()> ->_NONE_
<android.widget.EditText: boolean getDefaultEditable()> ->_NONE_
<org.apache.xalan.templates.KeyDeclaration: java.lang.String getNodeName()> ->_NONE_
<android.widget.Editor: android.text.method.WordIterator getWordIterator()> ->_NONE_
<java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)> ->_NONE_
<org.apache.http.impl.io.AbstractSessionInputBuffer: int read(byte[])> ->_NONE_
<gov.nist.javax.sip.header.Protocol: void setProtocolName(java.lang.String)> ->_NONE_
<javax.crypto.spec.DHGenParameterSpec: int getExponentSize()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: void setSendBufferSize(int)> ->_NONE_
<gov.nist.javax.sip.message.SIPResponse: void setStatusCode(int)> ->_NONE_
<android.bluetooth.BluetoothAdapter: void setDiscoverableTimeout(int)> ->_NONE_
<android.test.mock.MockContext: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)> ->_NONE_
<android.webkit.WebViewClassic: void updateWebkitSelection(boolean)> ->_NONE_
<android.view.GLES20DisplayList: void setTranslationY(float)> ->_NONE_
<android.text.Layout: float getHorizontal(int,boolean)> ->_NONE_
<android.net.wifi.WifiNative: boolean setConfigMethods(java.lang.String)> ->_NONE_
<org.apache.xpath.NodeSet: void setTail(org.w3c.dom.Node)> ->_NONE_
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable getDrawable(int)> ->_NONE_
<android.filterfw.core.AsyncRunner: void setDoneCallback(android.filterfw.core.GraphRunner$OnRunnerDoneListener)> ->_NONE_
<org.apache.xalan.templates.DecimalFormatProperties: void setGroupingSeparator(char)> ->_NONE_
<org.apache.harmony.security.x509.AlternativeName: byte[] getEncoded()> ->_NONE_
<java.util.concurrent.ThreadPoolExecutor: int getLargestPoolSize()> ->_NONE_
<java.util.logging.Formatter: java.lang.String getHead(java.util.logging.Handler)> ->_NONE_
<android.webkit.CallbackProxy: android.webkit.WebViewClient getWebViewClient()> ->_NONE_
<android.widget.NumberPicker: boolean getWrapSelectorWheel()> ->_NONE_
<android.view.ViewStub: void setLayoutResource(int)> ->_NONE_
<android.drm.mobile1.DrmConstraintInfo: int getCount()> ->_NONE_
<org.apache.xalan.templates.TemplateSubPatternAssociation: int getDocOrderPos()> ->_NONE_
<org.apache.xml.serializer.ToStream: int processLineFeed(char[],int,int,java.io.Writer)> ->_NONE_
<gov.nist.javax.sip.header.ParametersHeader: float getParameterAsFloat(java.lang.String)> ->_NONE_
<android.app.backup.FileBackupHelper: void writeNewStateDescription(android.os.ParcelFileDescriptor)> ->_NONE_
<android.webkit.WebViewClassic: int getTextScrollY()> ->_NONE_
<android.widget.VideoView: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: void setRemoteParty(gov.nist.javax.sip.message.SIPMessage)> ->_NONE_
<android.webkit.WebViewClassic: int getTextScrollX()> ->_NONE_
<org.apache.xml.dtm.ref.DTMTreeWalker: void setcontentHandler(org.xml.sax.ContentHandler)> ->_NONE_
<android.content.ContentValues: java.lang.Double getAsDouble(java.lang.String)> ->_NONE_
<org.apache.harmony.dalvik.ddmc.ChunkHandler: java.lang.String getString(java.nio.ByteBuffer,int)> ->_NONE_
<org.apache.http.params.AbstractHttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)> ->_NONE_
<java.text.ParsePosition: int getErrorIndex()> ->_NONE_
<org.apache.xml.serializer.dom3.DOMErrorHandlerImpl: boolean handleError(org.w3c.dom.DOMError)> ->_NONE_
<android.app.ActivityManagerProxy: java.lang.String getPackageForIntentSender(android.content.IIntentSender)> ->_NONE_
<org.jivesoftware.smack.provider.RawXmlExtensionProvider: org.jivesoftware.smack.packet.PacketExtension parseExtension(com.google.common.io.protocol.ProtoBuf)> ->_NONE_
<android.webkit.HTML5VideoView: void setPlayerBuffering(boolean)> ->_NONE_
<android.util.MonthDisplayHelper: int getColumnOf(int)> ->_NONE_
<android.webkit.MockGeolocation: void setPermission(boolean)> ->_NONE_
<org.apache.james.mime4j.decoder.DecoderUtil: java.lang.String decodeEncodedWord(java.lang.String,int,int)> ->_NONE_
<org.apache.xpath.NodeSetDTM: void setElementAt(int,int)> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: java.lang.String getHeaderField(int)> ->_NONE_
<android.test.TestRunner: java.lang.reflect.Method getChildrenMethod(android.content.Context,java.lang.String)> ->_NONE_
<android.content.SearchRecentSuggestionsProvider: java.lang.String getType(android.net.Uri)> ->_NONE_
<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)> ->_NONE_
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: int getVersion()> ->_NONE_
<android.text.format.DateFormat: java.text.DateFormat getMediumDateFormat(android.content.Context)> ->_NONE_
<org.apache.james.mime4j.field.Field: org.apache.james.mime4j.field.Field parse(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.Attr setAttributeNode(org.w3c.dom.Attr)> ->_NONE_
<android.test.mock.MockPackageManager: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int)> ->_NONE_
<junit.runner.BaseTestRunner: java.lang.Class loadSuiteClass(java.lang.String)> ->_NONE_
<org.apache.xml.serializer.SecuritySupport: long getLastModified(java.io.File)> ->_NONE_
<android.view.inputmethod.InputMethodInfo: android.content.ComponentName getComponent()> ->_NONE_
<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int,double,double,double,double)> ->_NONE_
<android.test.mock.MockResources: java.lang.String getResourceName(int)> ->_NONE_
<android.widget.CursorAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)> ->_NONE_
<org.xmlpull.v1.sax2.Driver: int getLength()> ->_NONE_
<gov.nist.javax.sip.header.MinExpires: java.lang.String encodeBody()> ->_NONE_
<android.media.audiofx.Visualizer: int setCaptureSize(int)> ->_NONE_
<java.nio.IntToByteBufferAdapter: int get(int)> ->_NONE_
<gov.nist.javax.sip.header.ims.SecurityAgree: java.lang.String getMode()> ->_NONE_
<gov.nist.javax.sip.address.AddressImpl: java.lang.String encode()> ->_NONE_
<org.ccil.cowan.tagsoup.XMLWriter: void setOutputProperty(java.lang.String,java.lang.String)> ->_NONE_
<android.text.SpannedString: java.lang.Object[] getSpans(int,int,java.lang.Class)> ->_NONE_
<android.test.mock.MockCursor: float getFloat(int)> ->_NONE_
<javax.security.auth.callback.PasswordCallback: void setPassword(char[])> ->_NONE_
<org.apache.http.entity.EntityTemplate: long getContentLength()> ->_NONE_
<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)> ->_NONE_
<android.drm.DrmInfo: int getInfoType()> ->_NONE_
<org.apache.xml.utils.UnImplNode: void setIdAttribute(java.lang.String,boolean)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean: int getMovementGranularities(java.lang.Object)> ->_NONE_
<android.webkit.CookieManager: void setAcceptCookie(boolean)> ->_NONE_
<android.net.wifi.WifiManager: int getWifiState()> ->_NONE_
<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getPrefix()> ->_NONE_
<org.jivesoftware.smack.packet.RosterPacket: java.util.Iterator getRosterItems()> ->_NONE_
<java.net.URLConnection: void setReadTimeout(int)> ->_NONE_
<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()> ->_NONE_
<org.apache.harmony.xml.parsers.DocumentBuilderImpl: org.w3c.dom.DOMImplementation getDOMImplementation()> ->_NONE_
<gov.nist.javax.sip.stack.TLSMessageChannel: void sendMessage(gov.nist.javax.sip.message.SIPMessage)> ->_NONE_
<org.apache.http.message.HeaderGroup: org.apache.http.Header[] getAllHeaders()> ->_NONE_
<org.apache.james.mime4j.field.datetime.parser.DateTimeParserTokenManager: org.apache.james.mime4j.field.datetime.parser.Token getNextToken()> ->_NONE_
<org.xml.sax.helpers.ParserAdapter: boolean getFeature(java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPublicKey: byte[] getEncoded()> ->_NONE_
<android.inputmethodservice.Keyboard: int getKeyWidth()> ->_NONE_
<javax.xml.transform.stream.StreamSource: void setSystemId(java.lang.String)> ->_NONE_
<java.lang.ClassLoader: java.net.URL getSystemResource(java.lang.String)> ->_NONE_
<java.util.Calendar: void set(int,int,int,int,int)> ->_NONE_
<org.apache.harmony.security.fortress.Services: java.security.Provider$Service getService(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.SIPIfMatch: void setETag(java.lang.String)> ->_NONE_
<java.net.SocketImpl: java.io.FileDescriptor getFileDescriptor()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.AbstractSessionContext: int getSessionCacheSize()> ->_NONE_
<android.hardware.Sensor: int getType()> ->_NONE_
<javax.obex.PrivateOutputStream: void write(int)> ->_NONE_
<org.apache.harmony.xml.dom.NotationImpl: java.lang.String getNodeName()> ->_NONE_
<android.net.nsd.NsdServiceInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.view.GLES20DisplayList: int getNativeDisplayList()> ->_NONE_
<android.net.Uri: boolean getBooleanQueryParameter(java.lang.String,boolean)> ->_NONE_
<android.bluetooth.BluetoothInputDevice: boolean getProtocolMode(android.bluetooth.BluetoothDevice)> ->_NONE_
<android.media.AudioManager: int getMasterMaxVolume()> ->_NONE_
<android.net.rtp.RtpStream: int getRemotePort()> ->_NONE_
<java.lang.String: byte[] getBytes()> ->_NONE_
<java.util.concurrent.ScheduledThreadPoolExecutor: void execute(java.lang.Runnable)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: void setReceiveUdpBufferSize(int)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: java.lang.String getHeaderAsFormattedString(java.lang.String)> ->_NONE_
<android.webkit.ZoomManager: void updateZoomRange(android.webkit.WebViewCore$ViewState,int,int)> ->_NONE_
<android.database.CursorWindow: float getFloat(int,int)> ->_NONE_
<android.webkit.WebViewClassic: void letPageHandleNavKey(int,long,boolean,int)> ->_NONE_
<android.widget.TextClock: java.lang.CharSequence getFormat24Hour()> ->_NONE_
<android.net.sip.SimpleSessionDescription: java.lang.String getAddress()> ->_NONE_
<android.view.animation.Animation: void setFillAfter(boolean)> ->_NONE_
<org.apache.xalan.templates.ElemIf: java.lang.String getNodeName()> ->_NONE_
<android.support.v4.net.TrafficStatsCompatIcs: int getThreadStatsTag()> ->_NONE_
<java.nio.DirectByteBuffer: float getFloat()> ->_NONE_
<android.net.sip.SipProfile: java.lang.String getProtocol()> ->_NONE_
<android.app.ApplicationThreadProxy: void setCoreSettings(android.os.Bundle)> ->_NONE_
<android.graphics.drawable.ShapeDrawable: void setShaderFactory(android.graphics.drawable.ShapeDrawable$ShaderFactory)> ->_NONE_
<org.apache.harmony.xml.parsers.DocumentBuilderFactoryImpl: void setFeature(java.lang.String,boolean)> ->_NONE_
<java.security.KeyStore: java.util.Date getCreationDate(java.lang.String)> ->_NONE_
<android.hardware.usb.UsbAccessory: java.lang.String getVersion()> ->_NONE_
<android.widget.TextView: void setSelected(boolean)> ->_NONE_
<android.content.BroadcastReceiver: void setResultData(java.lang.String)> ->_NONE_
<android.net.nsd.NsdManager: android.net.nsd.NsdServiceInfo getNsdService(int)> ->_NONE_
<android.net.wifi.WifiStateMachine: android.net.NetworkInfo$DetailedState getNetworkDetailedState()> ->_NONE_
<android.widget.FrameLayout: android.graphics.drawable.Drawable getForeground()> ->_NONE_
<java.net.PlainSocketImpl: void socksSendRequest(int,java.net.InetAddress,int)> ->_NONE_
<android.app.ApplicationPackageManager: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity()> ->_NONE_
<java.security.KeyStore: void load(java.io.InputStream,char[])> ->_NONE_
<android.content.Loader: boolean cancelLoad()> ->_NONE_
<org.ccil.cowan.tagsoup.CommandLine: void main(java.lang.String[])> ->_NONE_
<org.apache.xpath.XPathException: java.lang.String getMessage()> ->_NONE_
<android.content.Intent: android.content.Intent replaceExtras(android.content.Intent)> ->_NONE_
<dalvik.system.profiler.BinaryHprofWriter: void writeCpuSamples(int,java.util.Set)> ->_NONE_
<gov.nist.javax.sip.header.ims.PPreferredIdentity: java.lang.String encodeBody()> ->_NONE_
<android.content.SyncStorageEngine: void setOnSyncRequestListener(android.content.SyncStorageEngine$OnSyncRequestListener)> ->_NONE_
<gov.nist.javax.sip.stack.DefaultRouter: javax.sip.address.Hop getOutboundProxy()> ->_NONE_
<android.net.http.Headers: void setXPermittedCrossDomainPolicies(java.lang.String)> ->_NONE_
<org.jivesoftware.smack.PacketReader: org.jivesoftware.smack.packet.RosterPacket parseRoster(com.google.common.io.protocol.ProtoBuf)> ->_NONE_
<android.database.sqlite.SQLiteProgram: java.lang.Object[] getBindArgs()> ->_NONE_
<java.net.Authenticator: void setDefault(java.net.Authenticator)> ->_NONE_
<libcore.net.url.FileURLConnection: java.security.Permission getPermission()> ->_NONE_
<org.apache.http.auth.NTUserPrincipal: java.lang.String getUsername()> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: int getWindowId()> ->_NONE_
<android.widget.CalendarView: void setMaxDate(long)> ->_NONE_
<android.location.LocationRequest: android.location.LocationRequest createFromDeprecatedProvider(java.lang.String,long,float,boolean)> ->_NONE_
<android.text.method.HideReturnsTransformationMethod: android.text.method.HideReturnsTransformationMethod getInstance()> ->_NONE_
<android.test.ActivityInstrumentationTestCase2: void setActivityInitialTouchMode(boolean)> ->_NONE_
<android.webkit.WebSettingsClassic: void setAllowFileAccessFromFileURLs(boolean)> ->_NONE_
<android.accounts.AccountManagerService: void dumpUser(android.accounts.AccountManagerService$UserAccounts,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],boolean)> ->_NONE_
<dalvik.system.profiler.HprofData: java.util.Set getSamples()> ->_NONE_
<gov.nist.javax.sip.message.MessageFactoryImpl: java.lang.String getDefaultContentEncodingCharset()> ->_NONE_
<org.apache.xml.utils.FastStringBuffer: java.lang.StringBuffer getString(java.lang.StringBuffer,int,int,int)> ->_NONE_
<android.test.mock.MockContext: java.io.File getDatabasePath(java.lang.String)> ->_NONE_
<android.filterfw.core.ShaderProgram: void setSourceRect(float,float,float,float)> ->_NONE_
<android.widget.ZoomButtonsController: void setOnZoomListener(android.widget.ZoomButtonsController$OnZoomListener)> ->_NONE_
<org.apache.xpath.axes.ChildTestIterator: void setRoot(int,java.lang.Object)> ->_NONE_
<org.apache.xml.dtm.ref.SecuritySupport12: boolean getFileExists(java.io.File)> ->_NONE_
<java.io.CharArrayReader: boolean ready()> ->_NONE_
<org.apache.xml.utils.PrefixResolverDefault: java.lang.String getBaseIdentifier()> ->_NONE_
<java.util.concurrent.atomic.AtomicLong: long getAndDecrement()> ->_NONE_
<org.apache.http.impl.AbstractHttpServerConnection: void sendResponseEntity(org.apache.http.HttpResponse)> ->_NONE_
<org.apache.commons.io.input.ProxyReader: int read(java.nio.CharBuffer)> ->_NONE_
<org.apache.xalan.processor.XSLTAttributeDef: int getEnum(java.lang.String)> ->_NONE_
<org.apache.harmony.xml.ExpatReader: void setContentHandler(org.xml.sax.ContentHandler)> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertImpl: int getVersion()> ->_NONE_
<java.lang.Class: java.lang.ClassLoader getClassLoader()> ->_NONE_
<android.app.Dialog: void setOnKeyListener(android.content.DialogInterface$OnKeyListener)> ->_NONE_
<android.webkit.WebViewClassic: int getViewHeight()> ->_NONE_
<android.view.Display: int getWidth()> ->_NONE_
<javax.xml.parsers.SAXParser: javax.xml.validation.Schema getSchema()> ->_NONE_
<android.net.EthernetDataTracker: void setDependencyMet(boolean)> ->_NONE_
<org.apache.harmony.security.asn1.ASN1UTCTime: void encodeContent(org.apache.harmony.security.asn1.BerOutputStream)> ->_NONE_
<android.view.animation.Animation: void setAnimationListener(android.view.animation.Animation$AnimationListener)> ->_NONE_
<android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)> ->_NONE_
<android.app.Activity: android.view.MenuInflater getMenuInflater()> ->_NONE_
<org.apache.james.mime4j.codec.EncoderUtil: java.lang.String encodeQ(java.lang.String,java.lang.String,org.apache.james.mime4j.codec.EncoderUtil$Usage,int,java.nio.charset.Charset,byte[])> ->_NONE_
<org.apache.http.params.HttpConnectionParams: int getLinger(org.apache.http.params.HttpParams)> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: void execute(org.apache.xalan.transformer.TransformerImpl)> ->_NONE_
<libcore.net.http.ResponseHeaders: java.net.URI getUri()> ->_NONE_
<android.webkit.Plugin: java.lang.String getName()> ->_NONE_
<android.inputmethodservice.InputMethodService: void setCandidatesViewShown(boolean)> ->_NONE_
<org.apache.http.client.params.HttpClientParams: void setAuthenticating(org.apache.http.params.HttpParams,boolean)> ->_NONE_
<android.media.DecoderCapabilities: java.util.List getVideoDecoders()> ->_NONE_
<java.lang.StringToReal: float parseFloat(java.lang.String)> ->_NONE_
<org.jivesoftware.smack.packet.Message: void setIsIncoming(boolean)> ->_NONE_
<android.nfc.tech.NfcB: byte[] getApplicationData()> ->_NONE_
<org.apache.xml.utils.QName: java.lang.String getLocalName()> ->_NONE_
<org.apache.james.mime4j.field.datetime.parser.SimpleCharStream: int getTabSize(int)> ->_NONE_
<org.apache.xalan.transformer.TransformerHandlerImpl: java.lang.String getSystemId()> ->_NONE_
<java.util.zip.Deflater: void setStrategy(int)> ->_NONE_
<android.hardware.usb.UsbDeviceConnection: void close()> ->_NONE_
<android.net.wifi.WifiNative: boolean setPersistentReconnect(boolean)> ->_NONE_
<android.view.inputmethod.BaseInputConnection: int getComposingSpanStart(android.text.Spannable)> ->_NONE_
<android.app.AlertDialog: void setIcon(android.graphics.drawable.Drawable)> ->_NONE_
<java.util.Calendar: int getFirstDayOfWeek()> ->_NONE_
<org.apache.http.client.params.ClientParamBean: void setHandleRedirects(boolean)> ->_NONE_
<gov.nist.core.GenericObject: java.lang.Class getClassFromName(java.lang.String)> ->_NONE_
<android.app.ActivityManagerProxy: void unstableProviderDied(android.os.IBinder)> ->_NONE_
<org.apache.xpath.NodeSet: int getLength()> ->_NONE_
<android.telephony.gsm.SmsMessage: android.telephony.gsm.SmsMessage$MessageClass getMessageClass()> ->_NONE_
<org.apache.xalan.templates.ElemTemplate: org.apache.xml.utils.QName getMode()> ->_NONE_
<org.apache.harmony.luni.lang.reflect.ListOfVariables: java.lang.reflect.TypeVariable[] getArray()> ->_NONE_
<org.apache.xml.utils.res.XResources_zh_CN: java.lang.Object[][] getContents()> ->_NONE_
<gov.nist.javax.sip.header.RSeq: long getSeqNumber()> ->_NONE_
<android.opengl.GLSurfaceView: boolean getPreserveEGLContextOnPause()> ->_NONE_
<javax.crypto.Cipher: byte[] update(byte[],int,int)> ->_NONE_
<android.app.ActivityManagerProxy: boolean moveActivityTaskToBack(android.os.IBinder,boolean)> ->_NONE_
<android.webkit.WebSettings: void setMediaPlaybackRequiresUserGesture(boolean)> ->_NONE_
<org.jivesoftware.smack.provider.ProviderManager: java.lang.Object getExtensionProvider(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xalan.transformer.XalanTransformState: org.apache.xalan.templates.ElemTemplate getMatchedTemplate()> ->_NONE_
<org.apache.xml.utils.URI: java.lang.String getHost()> ->_NONE_
<java.util.concurrent.locks.AbstractQueuedSynchronizer: int getQueueLength()> ->_NONE_
<android.webkit.WebViewCore: boolean jsUnload(java.lang.String,java.lang.String)> ->_NONE_
<android.media.videoeditor.MediaArtistNativeHelper: int getAspectRatio(int,int)> ->_NONE_
<org.apache.xpath.axes.NodeSequence: org.apache.xml.dtm.DTMIterator getContainedIter()> ->_NONE_
<android.net.LocalSocket: int getReceiveBufferSize()> ->_NONE_
<java.net.DatagramPacket: byte[] getData()> ->_NONE_
<android.filterpacks.imageproc.SaturateFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getTextContent()> ->_NONE_
<android.widget.MediaController: void setMediaPlayer(android.widget.MediaController$MediaPlayerControl)> ->_NONE_
<android.animation.FloatKeyframeSet: java.lang.Object getValue(float)> ->_NONE_
<org.apache.xalan.transformer.TransformerIdentityImpl: javax.xml.transform.Transformer getTransformer()> ->_NONE_
<android.test.ClassPathPackageInfoSource: void setApkPaths(java.lang.String[])> ->_NONE_
<android.text.Layout: float getPrimaryHorizontal(int)> ->_NONE_
<gov.nist.javax.sip.header.From: java.lang.StringBuffer encodeBody(java.lang.StringBuffer)> ->_NONE_
<org.apache.xpath.axes.FilterExprIterator: int getNextNode()> ->_NONE_
<org.apache.xml.serializer.ToStream: void setDTDEntityExpansion(boolean)> ->_NONE_
<android.telephony.TelephonyManager: java.lang.String getDeviceId()> ->_NONE_
<android.content.pm.LabeledIntent: java.lang.CharSequence getNonLocalizedLabel()> ->_NONE_
<dalvik.system.SocketTagger: dalvik.system.SocketTagger get()> ->_NONE_
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)> ->_NONE_
<android.os.CommonTimeConfig: int getClientSyncInterval()> ->_NONE_
<android.net.DummyDataStateTracker: void setDetailedState(android.net.NetworkInfo$DetailedState,java.lang.String,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.SIPDate: void setMinute(int)> ->_NONE_
<org.apache.xml.dtm.SecuritySupport: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)> ->_NONE_
<org.apache.xalan.templates.ElemLiteralResult: void setNamespace(java.lang.String)> ->_NONE_
<android.view.accessibility.AccessibilityEvent: void writeAccessibilityRecordToParcel(android.view.accessibility.AccessibilityRecord,android.os.Parcel,int)> ->_NONE_
<org.apache.xpath.axes.NodeSequence: org.apache.xml.utils.NodeVector getVector()> ->_NONE_
<android.net.sip.SimpleSessionDescription: java.lang.String encode()> ->_NONE_
<libcore.io.Posix: int recvfrom(java.io.FileDescriptor,byte[],int,int,int,java.net.InetSocketAddress)> ->_NONE_
<android.app.ActivityThread: void queueOrSendMessage(int,java.lang.Object,int,int)> ->_NONE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.AuthenticationInfoHeader createAuthenticationInfoHeader(java.lang.String)> ->_NONE_
<android.net.nsd.NsdManager: void discoverServices(java.lang.String,int,android.net.nsd.NsdManager$DiscoveryListener)> ->_NONE_
<libcore.io.ForwardingOs: libcore.io.StructTimeval getsockoptTimeval(java.io.FileDescriptor,int,int)> ->_NONE_
<android.webkit.ZoomManager: android.webkit.ZoomControlBase getCurrentZoomControl()> ->_NONE_
<org.jivesoftware.smack.packet.LoginRequest: java.lang.String getAuthToken()> ->_NONE_
<android.webkit.FindActionModeCallback: int getActionModeGlobalBottom()> ->_NONE_
<android.view.KeyEvent: int getUnicodeChar()> ->_NONE_
<android.net.wifi.WifiStateMachine: void setCountryCode(java.lang.String,boolean)> ->_NONE_
<android.content.EventLogTags: void writeContentUpdateSample(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int)> ->_NONE_
<android.graphics.drawable.ClipDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> ->_NONE_
<android.webkit.MockGeolocation: void setError(int,java.lang.String)> ->_NONE_
<jp.co.omronsoft.openwnn.Keyboard: int getKeyWidth()> ->_NONE_
<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int)> ->_NONE_
<org.apache.xml.serializer.ToStream: void setOutputStreamInternal(java.io.OutputStream,boolean)> ->_NONE_
<android.view.View: void sendAccessibilityEventInternal(int)> ->_NONE_
<org.apache.http.client.utils.URLEncodedUtils: boolean isEncoded(org.apache.http.HttpEntity)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getPeerProtocol()> ->_NONE_
<org.apache.http.entity.AbstractHttpEntity: void setContentType(org.apache.http.Header)> ->_NONE_
<android.text.method.QwertyKeyListener: android.text.method.QwertyKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize)> ->_NONE_
<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getGlobalRTFDTM()> ->_NONE_
<org.apache.http.entity.SerializableEntity: long getContentLength()> ->_NONE_
<android.graphics.Bitmap: int getDensity()> ->_NONE_
<org.apache.http.impl.cookie.BestMatchSpec: org.apache.http.Header getVersionHeader()> ->_NONE_
<android.widget.FastScroller: int getWidth()> ->_NONE_
<android.webkit.WebViewClassic: int getScaledNavSlop()> ->_NONE_
<android.filterfw.core.FilterPort: void setPortFormat(android.filterfw.core.FrameFormat)> ->_NONE_
<android.app.LauncherActivity: void setTitle(int)> ->_NONE_
<android.filterfw.core.FilterContext: android.filterfw.core.GLEnvironment getGLEnvironment()> ->_NONE_
<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)> ->_NONE_
<org.apache.harmony.security.x509.BasicConstraints: byte[] getEncoded()> ->_NONE_
<android.view.ViewConfiguration: int getScaledTouchSlop()> ->_NONE_
<org.apache.xpath.patterns.NodeTest: void setNamespace(java.lang.String)> ->_NONE_
<android.view.GLES20DisplayList: void setTranslationX(float)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: int getActions(java.lang.Object)> ->_NONE_
<android.net.wifi.WifiStateTracker: android.net.LinkCapabilities getLinkCapabilities()> ->_NONE_
<java.io.ObjectStreamField: java.lang.String getName()> ->_NONE_
<android.widget.TextView: android.text.method.MovementMethod getDefaultMovementMethod()> ->_NONE_
<org.apache.http.message.BasicStatusLine: org.apache.http.ProtocolVersion getProtocolVersion()> ->_NONE_
<org.apache.xalan.transformer.XalanTransformState: void setCurrentNode(org.w3c.dom.Node)> ->_NONE_
<android.content.ContextWrapper: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> ->_NONE_
<org.ccil.cowan.tagsoup.Parser: void setFeature(java.lang.String,boolean)> ->_NONE_
<org.apache.xml.serializer.SerializerBase: java.lang.String getNamespaceURI(java.lang.String,boolean)> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertImpl: java.util.Date getNotBefore()> ->_NONE_
<org.apache.xml.utils.Context2: java.lang.String getPrefix(java.lang.String)> ->_NONE_
<java.lang.HexStringParser: float parseFloat(java.lang.String)> ->_NONE_
<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String)> ->_NONE_
<org.kxml2.io.KXmlParser: java.lang.String getPositionDescription()> ->_NONE_
<gov.nist.javax.sip.header.ParametersHeader: void setParameter(java.lang.String,int)> ->_NONE_
<android.filterpacks.imageproc.GrainFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)> ->_NONE_
<org.apache.xpath.functions.SecuritySupport: java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader)> ->_NONE_
<android.app.LoadedApk: java.lang.String getDataDir()> ->_NONE_
<android.net.LocalSocketImpl: java.io.FileDescriptor getFileDescriptor()> ->_NONE_
<android.widget.TabHost: android.view.View getCurrentView()> ->_NONE_
<android.widget.GridView: int getGravity()> ->_NONE_
<android.net.NetworkTemplate: java.lang.String getMatchRuleName(int)> ->_NONE_
<android.widget.ImageView: void setMaxWidth(int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: void setNpnProtocols(byte[])> ->_NONE_
<java.io.Console: java.io.Console printf(java.lang.String,java.lang.Object[])> ->_NONE_
<android.widget.PopupMenu: void setOnMenuItemClickListener(android.widget.PopupMenu$OnMenuItemClickListener)> ->_NONE_
<android.hardware.usb.UsbEndpoint: int getDirection()> ->_NONE_
<javax.xml.transform.dom.DOMResult: void setNode(org.w3c.dom.Node)> ->_NONE_
<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteSession getSession()> ->_NONE_
<android.view.inputmethod.InputMethodSubtype: java.lang.String getExtraValue()> ->_NONE_
<android.hardware.usb.UsbInterface: int getInterfaceClass()> ->_NONE_
<android.webkit.WebView: void setOverScrollMode(int)> ->_NONE_
<android.media.videoeditor.AudioTrack: int getAudioSamplingFrequency()> ->_NONE_
<android.webkit.WebViewCore: android.webkit.WebViewClassic getWebViewClassic()> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int getFirstAttribute(int)> ->_NONE_
<android.webkit.WebSettingsClassic: void setGeolocationEnabled(boolean)> ->_NONE_
<org.apache.xalan.templates.DecimalFormatProperties: org.apache.xml.utils.QName getName()> ->_NONE_
<gov.nist.javax.sip.header.Accept: java.lang.String encodeBody()> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: java.lang.String getChildElementXML()> ->_NONE_
<android.hardware.SerialManager: java.lang.String[] getSerialPorts()> ->_NONE_
<libcore.io.ForwardingOs: int pread(java.io.FileDescriptor,byte[],int,int,long)> ->_NONE_
<java.util.Date: int getTimezoneOffset()> ->_NONE_
<org.apache.xalan.processor.XSLTElementDef: int getType()> ->_NONE_
<org.kxml2.io.KXmlParser: java.lang.String getAttributeValue(int)> ->_NONE_
<java.util.prefs.PreferenceChangeEvent: java.lang.String getKey()> ->_NONE_
<gov.nist.javax.sip.header.Via: void setPort(int)> ->_NONE_
<gov.nist.javax.sip.header.ims.PServedUser: java.lang.String getSessionCase()> ->_NONE_
<android.content.res.Resources: android.graphics.drawable.Drawable loadDrawable(android.util.TypedValue,int)> ->_NONE_
<java.io.PipedReader: int read(char[],int,int)> ->_NONE_
<java.security.KeyStore: void setKeyEntry(java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertImpl: byte[] getSignature()> ->_NONE_
<android.nfc.tech.NfcV: byte getResponseFlags()> ->_NONE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: gov.nist.javax.sip.header.extensions.ReplacesHeader createReplacesHeader(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<java.security.cert.CertPathValidatorException: int getIndex()> ->_NONE_
<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplicationAsUser(java.lang.String,int)> ->_NONE_
<android.net.DnsPinger: void log(java.lang.String)> ->_NONE_
<org.apache.http.message.HeaderGroup: org.apache.http.Header getCondensedHeader(java.lang.String)> ->_NONE_
<android.content.AsyncTaskLoader: boolean isLoadInBackgroundCanceled()> ->_NONE_
<org.apache.xml.serializer.utils.Messages: java.util.ListResourceBundle getResourceBundle()> ->_NONE_
<android.view.ScaleGestureDetector: float getCurrentSpan()> ->_NONE_
<org.apache.xpath.axes.AxesWalker: org.apache.xpath.axes.AxesWalker getNextWalker()> ->_NONE_
<org.apache.commons.io.output.DeferredFileOutputStream: void writeTo(java.io.OutputStream)> ->_NONE_
<android.test.TestCaseUtil: java.util.List getTestCaseNames(junit.framework.Test,boolean)> ->_NONE_
<gov.nist.javax.sip.header.To: void setTag(java.lang.String)> ->_NONE_
<android.webkit.WebViewClassic: int getScaledMaxXScroll()> ->_NONE_
<gov.nist.javax.sip.stack.MessageProcessor: java.net.InetAddress getIpAddress()> ->_NONE_
<android.filterfw.core.FrameFormat: java.lang.Object getMetaValue(java.lang.String)> ->_NONE_
<android.text.style.QuoteSpan: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: java.lang.String getMediaType()> ->_NONE_
<org.apache.http.message.AbstractHttpMessage: org.apache.http.Header[] getHeaders(java.lang.String)> ->_NONE_
<org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream: int getLine()> ->_NONE_
<org.apache.http.message.BasicHeaderValueParser: org.apache.http.NameValuePair[] parseParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)> ->_NONE_
<java.nio.charset.CharsetDecoderICU: void implReplaceWith(java.lang.String)> ->_NONE_
<java.util.HashMap: java.lang.Object get(java.lang.Object)> ->_NONE_
<junit.textui.TestRunner: junit.framework.TestResult start(java.lang.String[])> ->_NONE_
<org.jivesoftware.smack.PacketReader: java.util.Collection parseCompressionMethods(org.xmlpull.v1.XmlPullParser)> ->_NONE_
<android.webkit.WebViewClassic: java.lang.String[] getHttpAuthUsernamePassword(java.lang.String,java.lang.String)> ->_NONE_
<org.xml.sax.helpers.ParserAdapter: void setDocumentLocator(org.xml.sax.Locator)> ->_NONE_
<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter()> ->_NONE_
<java.lang.Class: java.lang.String getSimpleName()> ->_NONE_
<android.content.pm.LabeledIntent: int getIconResource()> ->_NONE_
<android.speech.tts.TtsEngines: java.lang.String getV1Locale()> ->_NONE_
<org.apache.harmony.xml.dom.AttrImpl: void setValue(java.lang.String)> ->_NONE_
<java.util.concurrent.atomic.AtomicBoolean: boolean getAndSet(boolean)> ->_NONE_
<android.database.CursorWindow: short getShort(int,int)> ->_NONE_
<org.apache.xml.utils.FastStringBuffer: int sendNormalizedSAXcharacters(org.xml.sax.ContentHandler,int,int)> ->_NONE_
<android.widget.LinearLayout: void setDividerPadding(int)> ->_NONE_
<org.apache.xml.utils.DOMHelper: void getNodeData(org.w3c.dom.Node,org.apache.xml.utils.FastStringBuffer)> ->_NONE_
<gov.nist.javax.sip.address.TelephoneNumber: java.lang.String encode()> ->_NONE_
<android.text.BoringLayout: boolean getLineContainsTab(int)> ->_NONE_
<org.xmlpull.v1.sax2.Driver: java.lang.String getValue(java.lang.String)> ->_NONE_
<android.view.inputmethod.InputMethodInfo: java.lang.String getSettingsActivity()> ->_NONE_
<gov.nist.javax.sip.header.TimeStamp: java.lang.String encodeBody()> ->_NONE_
<android.view.ViewGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.Stylesheet getInclude(int)> ->_NONE_
<android.net.http.Headers: java.lang.String getPragma()> ->_NONE_
<android.net.NetworkIdentity: int getSubType()> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertImpl: java.security.PublicKey getPublicKey()> ->_NONE_
<gov.nist.javax.sip.DialogFilter: void sendBadRequestResponse(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.SIPServerTransaction,java.lang.String)> ->_NONE_
<org.apache.xalan.Version: int getReleaseVersionNum()> ->_NONE_
<gov.nist.javax.sip.header.AcceptEncoding: java.lang.StringBuffer encodeBody(java.lang.StringBuffer)> ->_NONE_
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: void setEnabledProtocols(java.lang.String[])> ->_NONE_
<java.io.RandomAccessFile: byte readByte()> ->_NONE_
<org.ccil.cowan.tagsoup.PYXWriter: void aval(char[],int,int)> ->_NONE_
<org.apache.harmony.xml.dom.ProcessingInstructionImpl: java.lang.String getData()> ->_NONE_
<android.graphics.drawable.RotateDrawable: int getChangingConfigurations()> ->_NONE_
<java.util.logging.Logger: java.lang.String getResourceBundleName()> ->_NONE_
<android.support.v4.view.PagerTitleStrip: int getTextSpacing()> ->_NONE_
<java.lang.System: void setProperties(java.util.Properties)> ->_NONE_
<java.net.DatagramSocket: void setSoTimeout(int)> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: java.lang.String getOrganization()> ->_NONE_
<java.security.Timestamp: java.util.Date getTimestamp()> ->_NONE_
<android.view.MotionEvent: float getHistoricalY(int)> ->_NONE_
<android.accounts.AccountAuthenticatorActivity: void setAccountAuthenticatorResult(android.os.Bundle)> ->_NONE_
<android.view.MotionEvent: float getHistoricalX(int)> ->_NONE_
<android.view.ViewRootImpl: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)> ->_NONE_
<android.os.Bundle: java.lang.CharSequence[] getCharSequenceArray(java.lang.String)> ->_NONE_
<android.content.ContentValues: byte[] getAsByteArray(java.lang.String)> ->_NONE_
<org.apache.commons.io.filefilter.DelegateFileFilter: boolean accept(java.io.File,java.lang.String)> ->_NONE_
<android.webkit.WebSettingsClassic: void setBlockNetworkImage(boolean)> ->_NONE_
<java.lang.Long: java.lang.Long getLong(java.lang.String)> ->_NONE_
<java.util.concurrent.locks.ReentrantLock: java.util.Collection getQueuedThreads()> ->_NONE_
<android.app.ContextImpl: java.io.File getCacheDir()> ->_NONE_
<org.apache.xml.dtm.DTMManager: boolean getIncremental()> ->_NONE_
<java.util.logging.LogRecord: void setSequenceNumber(long)> ->_NONE_
<android.webkit.WebSettingsClassic: void setUseWideViewPort(boolean)> ->_NONE_
<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int getNodeByPosition(int)> ->_NONE_
<android.test.suitebuilder.TestSuiteBuilder: java.lang.String parsePackageNameFromClassName(java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: void setOOBInline(boolean)> ->_NONE_
<android.filterfw.core.OutputPort: android.filterfw.core.InputPort getTargetPort()> ->_NONE_
<android.renderscript.Element: int getSubElementArraySize(int)> ->_NONE_
<org.apache.xpath.patterns.StepPattern: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<jp.co.omronsoft.openwnn.TextCandidatesViewManager: jp.co.omronsoft.openwnn.WnnWord getFocusedWnnWord()> ->_NONE_
<org.apache.xml.dtm.SecuritySupport12: long getLastModified(java.io.File)> ->_NONE_
<java.util.SimpleTimeZone: int getOffset(int,int,int,int,int,int)> ->_NONE_
<android.widget.OverScroller: float getCurrVelocity()> ->_NONE_
<android.webkit.WebSettings: java.lang.String getUserAgentString()> ->_NONE_
<org.apache.xpath.functions.FuncFalse: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: void setFocused(boolean)> ->_NONE_
<android.net.http.RequestHandle: boolean setupRedirect(java.lang.String,int,java.util.Map)> ->_NONE_
<org.apache.xml.serializer.SerializerBase: void setDoctypeSystem(java.lang.String)> ->_NONE_
<android.animation.LayoutTransition: android.animation.TimeInterpolator getInterpolator(int)> ->_NONE_
<org.jivesoftware.smackx.provider.MUCUserProvider: org.jivesoftware.smackx.packet.MUCUser$Decline parseDecline(org.xmlpull.v1.XmlPullParser)> ->_NONE_
<org.jivesoftware.smack.XMPPConnection: java.util.Map getLoginSettings()> ->_NONE_
<android.opengl.GLLogWrapper: int getLightParamCount(int)> ->_NONE_
<android.location.Criteria: int getBearingAccuracy()> ->_NONE_
<android.widget.GridView: void setAdapter(android.widget.ListAdapter)> ->_NONE_
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri,java.util.Map)> ->_NONE_
<android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int)> ->_NONE_
<android.widget.AbsListView: void setOnScrollListener(android.widget.AbsListView$OnScrollListener)> ->_NONE_
<android.support.v4.app.TaskStackBuilder: android.content.Intent getIntent(int)> ->_NONE_
<android.os.BatteryStats: void dumpCheckinLocked(java.io.PrintWriter,int,int)> ->_NONE_
<org.apache.xalan.processor.ProcessorLRE: org.apache.xalan.templates.Stylesheet getStylesheetRoot(org.apache.xalan.processor.StylesheetHandler)> ->_NONE_
<org.apache.commons.codec.net.URLCodec: java.lang.String encode(java.lang.String,java.lang.String)> ->_NONE_
<android.media.AudioRecord: int read(java.nio.ByteBuffer,int)> ->_NONE_
<android.accounts.AccountManagerService: android.accounts.AccountAndUser[] getAllAccounts()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.CipherSuite: java.lang.String[] getSupportedCipherSuiteNames()> ->_NONE_
<android.widget.ScrollView: void setSmoothScrollingEnabled(boolean)> ->_NONE_
<android.graphics.drawable.Drawable: void setDither(boolean)> ->_NONE_
<gov.nist.javax.sip.ListeningPointImpl: java.lang.String getTransport()> ->_NONE_
<android.app.DatePickerDialog: void updateDate(int,int,int)> ->_NONE_
<javax.crypto.SealedObject: java.lang.String getAlgorithm()> ->_NONE_
<gov.nist.javax.sip.message.SIPResponse: java.lang.String getDialogId(boolean)> ->_NONE_
<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)> ->_NONE_
<android.app.SearchManager: void setOnDismissListener(android.app.SearchManager$OnDismissListener)> ->_NONE_
<android.telephony.gsm.GsmCellLocation: void setLacAndCid(int,int)> ->_NONE_
<android.inputmethodservice.KeyboardView: void setKeyboard(android.inputmethodservice.Keyboard)> ->_NONE_
<android.support.v4.widget.CursorAdapter: long getItemId(int)> ->_NONE_
<javax.crypto.Cipher: int update(java.nio.ByteBuffer,java.nio.ByteBuffer)> ->_NONE_
<org.apache.xalan.templates.ElemTextLiteral: java.lang.String getNodeName()> ->_NONE_
<android.net.wifi.WifiNative: java.lang.String getNetworkVariable(int,java.lang.String)> ->_NONE_
<org.apache.xml.serializer.utils.URI: java.lang.String getSchemeSpecificPart()> ->_NONE_
<java.net.Socket: java.io.OutputStream getOutputStream()> ->_NONE_
<android.view.DisplayInfo: void getLogicalMetrics(android.util.DisplayMetrics,android.view.CompatibilityInfoHolder)> ->_NONE_
<android.filterfw.io.PatternScanner: void updateLineCount(int,int)> ->_NONE_
<android.net.http.IdleCache: android.net.http.Connection getConnection(org.apache.http.HttpHost)> ->_NONE_
<android.widget.ExpandableListView: android.graphics.drawable.Drawable getIndicator(android.widget.ExpandableListConnector$PositionMetadata)> ->_NONE_
<android.telephony.gsm.SmsMessage: int getStatusOnSim()> ->_NONE_
<org.apache.http.params.DefaultedHttpParams: java.util.Set getDefaultNames()> ->_NONE_
<android.telephony.SignalStrength: int getGsmAsuLevel()> ->_NONE_
<org.jivesoftware.smack.RosterEntry: java.lang.String getName()> ->_NONE_
<android.widget.CalendarView: int getFocusedMonthDateColor()> ->_NONE_
<gov.nist.javax.sip.address.AddressImpl: java.lang.String getUserAtHostPort()> ->_NONE_
<android.webkit.WebViewClassic: int findAllBody(java.lang.String,boolean)> ->_NONE_
<android.app.admin.DeviceAdminInfo: void dump(android.util.Printer,java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.ClientSessionContext: javax.net.ssl.SSLSession getSession(byte[])> ->_NONE_
<android.webkit.WebSettingsClassic: java.lang.String getAcceptLanguage()> ->_NONE_
<android.media.videoeditor.OverlayFrame: void setOverlayFrameWidth(int)> ->_NONE_
<org.apache.xalan.templates.ElemExtensionScript: java.lang.String getSrc()> ->_NONE_
<org.apache.xpath.objects.XNodeSet: java.lang.String getTypeString()> ->_NONE_
<org.apache.harmony.xml.dom.InnerNodeImpl: void getElementsByTagNameNS(org.apache.harmony.xml.dom.NodeListImpl,java.lang.String,java.lang.String)> ->_NONE_
<android.animation.ObjectAnimator: void setTarget(java.lang.Object)> ->_NONE_
<android.widget.TextView: int getAutoLinkMask()> ->_NONE_
<org.apache.xalan.templates.ElemMessage: void execute(org.apache.xalan.transformer.TransformerImpl)> ->_NONE_
<android.bluetooth.BluetoothAdapter: java.util.Set getBondedDevices()> ->_NONE_
<org.apache.james.mime4j.field.datetime.DateTime: int getMonth()> ->_NONE_
<android.server.search.SearchManagerService: android.content.ComponentName getGlobalSearchActivity()> ->_NONE_
<android.telephony.NeighboringCellInfo: int getCid()> ->_NONE_
<gov.nist.javax.sip.header.SIPHeaderList: java.lang.Object set(int,java.lang.Object)> ->_NONE_
<org.apache.xalan.transformer.CountersTable: java.util.Vector getCounters(org.apache.xalan.templates.ElemNumber)> ->_NONE_
<libcore.io.ForwardingOs: libcore.io.StructPasswd getpwnam(java.lang.String)> ->_NONE_
<android.view.View: int getAccessibilityViewId()> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: void setDebug(boolean)> ->_NONE_
<gov.nist.javax.sip.header.ims.PAssertedIdentity: java.lang.String encodeBody()> ->_NONE_
<android.net.wifi.WifiNative: void setPowerSave(boolean)> ->_NONE_
<java.io.DataInputStream: int readUnsignedShort()> ->_NONE_
<android.view.animation.AnimationSet: long getStartTime()> ->_NONE_
<org.apache.http.client.methods.HttpRequestBase: org.apache.http.RequestLine getRequestLine()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol: org.apache.harmony.xnet.provider.jsse.SSLSessionImpl getSession()> ->_NONE_
<org.apache.xml.utils.SystemIDResolver: java.lang.String getAbsoluteURIFromRelative(java.lang.String)> ->_NONE_
<android.media.audiofx.AudioEffect: int getParameter(int,short[])> ->_NONE_
<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: java.lang.String getCI3GPP2()> ->_NONE_
<android.widget.TextView: int getCompoundPaddingStart()> ->_NONE_
<org.xml.sax.helpers.XMLFilterImpl: org.xml.sax.ContentHandler getContentHandler()> ->_NONE_
<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCacheListener getListener()> ->_NONE_
<org.apache.james.mime4j.RootInputStream: int getLineNumber()> ->_NONE_
<android.webkit.WebSettings: void setUseWebViewBackgroundForOverscrollBackground(boolean)> ->_NONE_
<java.io.ObjectStreamField: java.lang.String getTypeString()> ->_NONE_
<org.apache.xpath.axes.LocPathIterator: int getAnalysisBits()> ->_NONE_
<android.widget.ArrayAdapter: void setNotifyOnChange(boolean)> ->_NONE_
<android.content.Intent: android.content.Intent getIntent(java.lang.String)> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: long getParentNodeId()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeList: org.apache.xml.dtm.DTMIterator getDTMIterator()> ->_NONE_
<android.database.MatrixCursor: float getFloat(int)> ->_NONE_
<android.app.ActivityManagerProxy: void removeContentProviderExternal(java.lang.String,android.os.IBinder)> ->_NONE_
<org.apache.xml.serializer.utils.SerializerMessages_ca: java.lang.Object[][] getContents()> ->_NONE_
<java.text.MessageFormat: void setFormatByArgumentIndex(int,java.text.Format)> ->_NONE_
<java.security.KeyFactory: java.security.Provider getProvider()> ->_NONE_
<java.net.InetAddress: java.net.InetAddress getByAddress(byte[])> ->_NONE_
<android.widget.AdapterView: java.lang.Object getSelectedItem()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.Object getChild(java.lang.Object,int)> ->_NONE_
<java.net.DatagramSocket: void setBroadcast(boolean)> ->_NONE_
<android.app.ActivityManager: void setFrontActivityScreenCompatMode(int)> ->_NONE_
<android.app.admin.DevicePolicyManager: void setCameraDisabled(android.content.ComponentName,boolean)> ->_NONE_
<android.text.TextLine: float drawRun(android.graphics.Canvas,int,int,boolean,float,int,int,int,boolean)> ->_NONE_
<android.graphics.Paint: android.graphics.Paint$Cap getStrokeCap()> ->_NONE_
<org.apache.http.params.AbstractHttpParams: long getLongParameter(java.lang.String,long)> ->_NONE_
<android.widget.PopupWindow: int getWidth()> ->_NONE_
<android.view.VolumePanel: int getStreamMaxVolume(int)> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: void setContentDescription(java.lang.CharSequence)> ->_NONE_
<java.util.FormatFlagsConversionMismatchException: java.lang.String getFlags()> ->_NONE_
<android.util.XmlPullAttributes: int getAttributeIntValue(java.lang.String,java.lang.String,int)> ->_NONE_
<java.text.DateFormatSymbols: void setShortWeekdays(java.lang.String[])> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CRLImpl: java.security.Principal getIssuerDN()> ->_NONE_
<gov.nist.javax.sip.address.AddressImpl: java.lang.String getHost()> ->_NONE_
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])> ->_NONE_
<javax.crypto.spec.RC5ParameterSpec: int getRounds()> ->_NONE_
<org.apache.http.impl.cookie.BasicClientCookie: void setExpiryDate(java.util.Date)> ->_NONE_
<android.media.videoeditor.OverlayFrame: void setBitmap(android.graphics.Bitmap)> ->_NONE_
<android.graphics.drawable.BitmapDrawable: int getIntrinsicHeight()> ->_NONE_
<org.apache.http.protocol.BasicHttpProcessor: org.apache.http.HttpResponseInterceptor getResponseInterceptor(int)> ->_NONE_
<android.app.ApplicationPackageManager: java.util.List getInstalledPackages(int)> ->_NONE_
<android.telephony.gsm.SmsManager: java.util.ArrayList getAllMessagesFromSim()> ->_NONE_
<android.net.http.AndroidHttpClientConnection: int getSocketTimeout()> ->_NONE_
<org.apache.xml.serializer.ToStream: void characters(char[],int,int)> ->_NONE_
<android.view.inputmethod.InputMethodSubtype: int getIconResId()> ->_NONE_
<android.graphics.drawable.ShapeDrawable: int getIntrinsicWidth()> ->_NONE_
<gov.nist.core.StringTokenizer: java.lang.String getLine()> ->_NONE_
<android.view.Choreographer: long getFrameTime()> ->_NONE_
<java.util.concurrent.ForkJoinTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)> ->_NONE_
<net.oauth.OAuthConsumer: void setProperty(java.lang.String,java.lang.Object)> ->_NONE_
<android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs: boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo)> ->_NONE_
<org.apache.http.message.BasicHttpRequest: org.apache.http.RequestLine getRequestLine()> ->_NONE_
<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.ClassLoader getLowestClassLoader(java.lang.ClassLoader,java.lang.ClassLoader)> ->_NONE_
<java.io.PipedInputStream: int read()> ->_NONE_
<javax.xml.validation.Validator: java.lang.Object getProperty(java.lang.String)> ->_NONE_
<org.jivesoftware.smack.ConnectionConfiguration: void setDebuggerEnabled(boolean)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.SIPHeader getSIPHeaderListLowerCase(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.FuncDocument: int getDoc(org.apache.xpath.XPathContext,int,java.lang.String,java.lang.String)> ->_NONE_
<android.telephony.CellSignalStrengthGsm: int getLevel()> ->_NONE_
<java.io.DataInputStream: char readChar()> ->_NONE_
<android.graphics.drawable.ColorDrawable: void setAlpha(int)> ->_NONE_
<android.net.MailTo: java.lang.String getTo()> ->_NONE_
<android.webkit.JWebCoreJavaBridge: java.lang.String getPluginSharedDataDirectory()> ->_NONE_
<android.hardware.usb.UsbAccessory: java.lang.String getDescription()> ->_NONE_
<java.util.Hashtable: java.lang.Object get(java.lang.Object)> ->_NONE_
<org.jivesoftware.smack.packet.DefaultPacketExtension: java.util.Iterator getNames()> ->_NONE_
<android.content.Context: int getThemeResId()> ->_NONE_
<jp.co.omronsoft.openwnn.JAJP.OpenWnnEngineJAJP: jp.co.omronsoft.openwnn.WnnWord getNextCandidate()> ->_NONE_
<gov.nist.javax.sip.header.AlertInfo: void setAlertInfo(java.lang.String)> ->_NONE_
<android.location.Address: java.lang.String getFeatureName()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.DefaultSSLContextImpl: javax.net.ssl.KeyManager[] getKeyManagers()> ->_NONE_
<android.os.CommonTimeConfig: int getMasterAnnounceInterval()> ->_NONE_
<android.widget.RemoteViewsAdapter: void setVisibleRangeHint(int,int)> ->_NONE_
<android.view.ViewRootImpl: android.view.accessibility.AccessibilityNodeInfo getAccessibilityFocusedVirtualView()> ->_NONE_
<android.hardware.Camera: android.hardware.Camera$Parameters getEmptyParameters()> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.message.MultipartMimeContent getMultipartMimeContent()> ->_NONE_
<java.util.logging.Handler: java.util.logging.Level getLevel()> ->_NONE_
<android.text.method.DialerKeyListener: int getInputType()> ->_NONE_
<android.media.AudioManager: java.lang.String getParameters(java.lang.String)> ->_NONE_
<android.os.storage.StorageVolume: int getDescriptionId()> ->_NONE_
<android.media.videoeditor.VideoEditorProfile: int getExportProfile(int)> ->_NONE_
<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Object)> ->_NONE_
<gov.nist.javax.sip.header.SIPHeaderList: gov.nist.javax.sip.header.SIPHeader get(int)> ->_NONE_
<android.os.StatFs: int getFreeBlocks()> ->_NONE_
<android.animation.AnimatorSet: long getStartDelay()> ->_NONE_
<android.inputmethodservice.InputMethodService: android.view.LayoutInflater getLayoutInflater()> ->_NONE_
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int getConnectionsInPool()> ->_NONE_
<android.content.pm.RegisteredServicesCache: java.util.Collection getAllServices(int)> ->_NONE_
<android.app.ListFragment: long getSelectedItemId()> ->_NONE_
<android.app.admin.DevicePolicyManager: long getPasswordExpirationTimeout(android.content.ComponentName)> ->_NONE_
<org.apache.xalan.templates.ElemAttribute: int getXSLToken()> ->_NONE_
<android.widget.ProgressBar: void setProgress(int,boolean)> ->_NONE_
<android.view.textservice.SpellCheckerSubtype: java.util.HashMap getExtraValueHashMap()> ->_NONE_
<android.widget.ImageView: int getBaseline()> ->_NONE_
<java.text.DecimalFormatSymbols: void setPerMill(char)> ->_NONE_
<java.security.Signature: java.lang.String getAlgorithm()> ->_NONE_
<android.view.GLES20RenderLayer: void setOpaque(boolean)> ->_NONE_
<android.webkit.WebSettingsClassic: void setXSSAuditorEnabled(boolean)> ->_NONE_
<java.security.cert.LDAPCertStoreParameters: int getPort()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.lang.Object getValue(java.lang.String)> ->_NONE_
<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: boolean getNeedClientAuth()> ->_NONE_
<org.apache.xalan.processor.XSLTAttributeDef: boolean getSupportsAVT()> ->_NONE_
<org.apache.xpath.XPath: void error(org.apache.xpath.XPathContext,int,java.lang.String,java.lang.Object[])> ->_NONE_
<android.os.UEventObserver: android.os.UEventObserver$UEventThread getThread()> ->_NONE_
<gov.nist.javax.sip.header.Via: java.lang.String getReceived()> ->_NONE_
<libcore.io.ForwardingOs: int getppid()> ->_NONE_
<gov.nist.javax.sip.header.Contact: java.lang.StringBuffer encodeBody(java.lang.StringBuffer)> ->_NONE_
<android.filterfw.core.FilterGraph: void connectPorts()> ->_NONE_
<org.apache.xalan.templates.ElemSort: java.lang.String getNodeName()> ->_NONE_
<android.view.ViewStub: void setVisibility(int)> ->_NONE_
<android.server.search.SearchManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> ->_NONE_
<javax.crypto.CipherOutputStream: void write(byte[],int,int)> ->_NONE_
<android.webkit.WebViewCore: android.webkit.DeviceMotionService getDeviceMotionService()> ->_NONE_
<org.jivesoftware.smack.sasl.SASLAnonymous: java.lang.String getName()> ->_NONE_
<android.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.os.Message)> ->_NONE_
<android.widget.ListPopupWindow: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)> ->_NONE_
<java.nio.charset.CharsetEncoderICU: void implReplaceWith(byte[])> ->_NONE_
<android.support.v4.view.MenuItemCompatHoneycomb: void setShowAsAction(android.view.MenuItem,int)> ->_NONE_
<android.media.AudioManager: void setMode(int)> ->_NONE_
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()> ->_NONE_
<android.graphics.drawable.ClipDrawable: void setLayoutDirection(int)> ->_NONE_
<android.text.style.ReplacementSpan: void updateMeasureState(android.text.TextPaint)> ->_NONE_
<dalvik.system.VMDebug: void dumpHprofData(java.lang.String)> ->_NONE_
<android.bluetooth.BluetoothInputDevice: boolean getReport(android.bluetooth.BluetoothDevice,byte,byte,int)> ->_NONE_
<android.view.accessibility.AccessibilityEvent: int getMovementGranularity()> ->_NONE_
<android.app.ApplicationThreadProxy: void dumpService(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])> ->_NONE_
<android.net.wifi.p2p.WifiP2pManager: void setDeviceName(android.net.wifi.p2p.WifiP2pManager$Channel,java.lang.String,android.net.wifi.p2p.WifiP2pManager$ActionListener)> ->_NONE_
<org.apache.xml.utils.SuballocatedIntVector: void setSize(int)> ->_NONE_
<android.opengl.GLSurfaceView: void setRenderMode(int)> ->_NONE_
<org.jivesoftware.smack.packet.Packet: java.lang.String getRmq2Id()> ->_NONE_
<android.webkit.WebResourceResponse: java.lang.String getEncoding()> ->_NONE_
<android.util.MathUtils: float log(float)> ->_NONE_
<android.database.AbstractWindowedCursor: void setWindow(android.database.CursorWindow)> ->_NONE_
<java.io.ObjectStreamClass: long getSerialVersionUID()> ->_NONE_
<java.net.DatagramSocket: void setDatagramSocketImplFactory(java.net.DatagramSocketImplFactory)> ->_NONE_
<android.graphics.NinePatch: int getHeight()> ->_NONE_
<android.webkit.WebSettings: void setAppCacheMaxSize(long)> ->_NONE_
<java.lang.reflect.Field: long getLong(java.lang.Object)> ->_NONE_
<android.text.SpannableString: java.lang.Object[] getSpans(int,int,java.lang.Class)> ->_NONE_
<android.telephony.SmsCbMessage: int getMessageFormat()> ->_NONE_
<android.net.wifi.WifiStateMachine: void sendBluetoothAdapterStateChange(int)> ->_NONE_
<org.apache.xpath.axes.WalkingIterator: org.apache.xpath.axes.AxesWalker getFirstWalker()> ->_NONE_
<android.database.MatrixCursor: long getLong(int)> ->_NONE_
<android.widget.AbsSeekBar: void setKeyProgressIncrement(int)> ->_NONE_
<android.net.wifi.WifiStateMachine: void setDriverStart(boolean,boolean)> ->_NONE_
<org.apache.xml.utils.UnImplNode: org.w3c.dom.TypeInfo getSchemaTypeInfo()> ->_NONE_
<android.view.TextureView: android.graphics.SurfaceTexture getSurfaceTexture()> ->_NONE_
<android.os.PerformanceCollector: void addMeasurement(java.lang.String,float)> ->_NONE_
<org.apache.xml.dtm.DTMException: java.lang.Throwable getCause()> ->_NONE_
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getAllButWhitespaceLegal()> ->_NONE_
<java.net.DatagramPacket: void setPort(int)> ->_NONE_
<java.util.zip.ZipOutputStream: void setLevel(int)> ->_NONE_
<org.jivesoftware.smack.packet.RosterPacket: void setEtag(java.lang.String)> ->_NONE_
<org.apache.xml.utils.NodeVector: void setElementAt(int,int)> ->_NONE_
<org.apache.harmony.xml.dom.DOMConfigurationImpl: java.lang.Object getParameter(java.lang.String)> ->_NONE_
<org.apache.harmony.xml.parsers.SAXParserImpl: void setProperty(java.lang.String,java.lang.Object)> ->_NONE_
<org.apache.xalan.processor.XSLTElementDef: boolean getMultiAllowed()> ->_NONE_
<java.net.URLConnection: long getIfModifiedSince()> ->_NONE_
<org.apache.xml.serializer.utils.SerializerMessages_de: java.lang.Object[][] getContents()> ->_NONE_
<android.webkit.HTML5VideoFullScreen: int getBufferPercentage()> ->_NONE_
<android.filterfw.GraphEnvironment: int loadGraph(android.content.Context,int)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.ElemTemplate getTemplate(int)> ->_NONE_
<android.view.View: float getBottomFadingEdgeStrength()> ->_NONE_
<java.security.spec.RSAPrivateKeySpec: java.math.BigInteger getModulus()> ->_NONE_
<android.app.SearchManager: android.content.Intent getAssistIntent(android.content.Context,int)> ->_NONE_
<android.test.IsolatedContext: java.lang.Object getSystemService(java.lang.String)> ->_NONE_
<android.view.animation.Animation: int getBackgroundColor()> ->_NONE_
<android.widget.SimpleExpandableListAdapter: int getGroupCount()> ->_NONE_
<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager getDTMManager()> ->_NONE_
<android.os.CommonTimeConfig: java.lang.String getInterfaceBinding()> ->_NONE_
<dalvik.system.profiler.HprofBinaryToAscii: boolean write(dalvik.system.profiler.HprofData)> ->_NONE_
<android.net.http.SslError: int getPrimaryError()> ->_NONE_
<android.test.AndroidTestRunner: void setPerformanceWriterIfPerformanceCollectorTestCase(junit.framework.Test,android.os.PerformanceCollector$PerformanceResultsWriter)> ->_NONE_
<org.apache.xpath.jaxp.XPathImpl: javax.xml.xpath.XPathFunctionResolver getXPathFunctionResolver()> ->_NONE_
<java.io.FilterInputStream: int read(byte[],int,int)> ->_NONE_
<org.jivesoftware.smack.GroupChat: java.lang.String getNickname()> ->_NONE_
<org.apache.harmony.security.x509.CertificatePolicies: byte[] getEncoded()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setClassName(java.lang.Object,java.lang.CharSequence)> ->_NONE_
<org.apache.xalan.templates.ElemTemplate: org.apache.xalan.templates.StylesheetComposed getStylesheetComposed()> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: java.lang.Object getContent()> ->_NONE_
<android.support.v4.app.ShareCompat: android.content.ComponentName getCallingActivity(android.app.Activity)> ->_NONE_
<java.util.logging.XMLFormatter: java.lang.String getHead(java.util.logging.Handler)> ->_NONE_
<org.apache.xalan.processor.XSLTElementProcessor: org.xml.sax.Attributes setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement,boolean)> ->_NONE_
<java.net.ServerSocket: void setSoTimeout(int)> ->_NONE_
<android.webkit.WebView: void reload()> ->_NONE_
<android.database.sqlite.SQLiteQueryBuilder: void setDistinct(boolean)> ->_NONE_
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script$KernelID getKernelIDClear()> ->_NONE_
<android.nfc.NdefRecord: byte[] getId()> ->_NONE_
<android.preference.Preference: void setPersistent(boolean)> ->_NONE_
<android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)> ->_NONE_
<android.os.Debug: java.lang.String[] getVmFeatureList()> ->_NONE_
<org.apache.harmony.security.pkcs10.CertificationRequestInfo: int getVersion()> ->_NONE_
<android.os.TokenWatcher: void acquire(android.os.IBinder,java.lang.String)> ->_NONE_
<javax.xml.parsers.FactoryConfigurationError: java.lang.Exception getException()> ->_NONE_
<org.jivesoftware.smack.ConnectionConfiguration: boolean isSASLAuthenticationEnabled()> ->_NONE_
<android.telephony.NeighboringCellInfo: int getRssi()> ->_NONE_
<org.apache.xpath.jaxp.XPathExpressionImpl: org.w3c.dom.Document getDummyDocument()> ->_NONE_
<android.util.ReflectiveProperty: void set(java.lang.Object,java.lang.Object)> ->_NONE_
<android.webkit.WebSettings: java.lang.String getCursiveFontFamily()> ->_NONE_
<android.database.MatrixCursor: java.lang.String getString(int)> ->_NONE_
<android.security.KeyChain: java.security.cert.X509Certificate[] getCertificateChain(android.content.Context,java.lang.String)> ->_NONE_
<android.widget.ExpandableListView: int getFlatPositionForConnector(int)> ->_NONE_
<org.apache.xalan.templates.ElemExtensionScript: void setLang(java.lang.String)> ->_NONE_
<libcore.net.url.JarHandler: java.net.URLConnection openConnection(java.net.URL)> ->_NONE_
<android.database.sqlite.SQLiteCursor: java.lang.String[] getColumnNames()> ->_NONE_
<org.apache.xalan.templates.ElemLiteralResult: java.lang.String getNamespace()> ->_NONE_
<android.widget.TextView: int getTotalPaddingTop()> ->_NONE_
<org.jivesoftware.smack.packet.Message: boolean getNoSave()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeIterator: org.w3c.dom.traversal.NodeFilter getFilter()> ->_NONE_
<libcore.icu.ICU: java.util.Locale[] getAvailableNumberFormatLocales()> ->_NONE_
<gov.nist.javax.sip.header.ims.SecurityVerify: void setValue(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: java.lang.String getNodeValue(int)> ->_NONE_
<android.hardware.input.InputManager: void setCurrentKeyboardLayoutForInputDevice(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.harmony.xml.dom.ProcessingInstructionImpl: short getNodeType()> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: java.lang.String getRequestMethod()> ->_NONE_
<android.webkit.WebStorage: android.webkit.WebStorage getInstance()> ->_NONE_
<android.opengl.GLLogWrapper: java.lang.String getMaterialPName(int)> ->_NONE_
<org.apache.xpath.jaxp.XPathImpl: void setNamespaceContext(javax.xml.namespace.NamespaceContext)> ->_NONE_
<gov.nist.core.NameValueList: gov.nist.core.NameValue getNameValue(java.lang.String)> ->_NONE_
<android.database.sqlite.SQLiteConnection: void setAutoCheckpointInterval()> ->_NONE_
<java.nio.charset.UnmappableCharacterException: int getInputLength()> ->_NONE_
<android.view.Display: float getRefreshRate()> ->_NONE_
<gov.nist.javax.sip.SipStackImpl: void setIsBackToBackUserAgent(boolean)> ->_NONE_
<android.net.http.Headers: long getContentLength()> ->_NONE_
<org.apache.xalan.templates.FuncKey: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<android.app.WallpaperManager: void setStream(java.io.InputStream)> ->_NONE_
<gov.nist.javax.sip.header.Reason: java.lang.String getProtocol()> ->_NONE_
<android.widget.ImageView: void setColorFilter(android.graphics.ColorFilter)> ->_NONE_
<java.util.jar.JarVerifier: java.security.cert.Certificate[] getCertificates(java.lang.String)> ->_NONE_
<android.content.Intent: java.lang.String getPackage()> ->_NONE_
<org.apache.commons.codec.binary.Base64: byte[] encode(byte[])> ->_NONE_
<android.app.ActivityManager: android.graphics.Bitmap getTaskTopThumbnail(int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.lang.String getProtocol()> ->_NONE_
<android.webkit.PluginData: java.io.InputStream getInputStream()> ->_NONE_
<gov.nist.javax.sip.stack.TCPMessageChannel: java.lang.String getTransport()> ->_NONE_
<org.apache.xpath.compiler.OpMap: int getArgLength(int)> ->_NONE_
<gov.nist.core.GenericObject: void setMatcher(gov.nist.core.Match)> ->_NONE_
<javax.obex.ClientSession: void setConnectionID(long)> ->_NONE_
<android.util.XmlPullAttributes: java.lang.String getAttributeName(int)> ->_NONE_
<org.apache.xpath.XPathContext: int getCurrentExpressionNode()> ->_NONE_
<java.io.BufferedInputStream: int read()> ->_NONE_
<org.apache.xml.utils.AttList: java.lang.String getType(java.lang.String)> ->_NONE_
<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor getParcelFileDescriptor()> ->_NONE_
<android.widget.AbsListView: void setSelector(android.graphics.drawable.Drawable)> ->_NONE_
<android.renderscript.ScriptGroup: void setOutput(android.renderscript.Script$KernelID,android.renderscript.Allocation)> ->_NONE_
<android.widget.NumberPicker: void setOnScrollListener(android.widget.NumberPicker$OnScrollListener)> ->_NONE_
<org.apache.harmony.xml.dom.AttrImpl: java.lang.String getPrefix()> ->_NONE_
<java.util.concurrent.Executors: java.util.concurrent.ExecutorService unconfigurableExecutorService(java.util.concurrent.ExecutorService)> ->_NONE_
<java.net.JarURLConnection: java.util.jar.JarEntry getJarEntry()> ->_NONE_
<android.widget.OverScroller: void setFriction(float)> ->_NONE_
<java.security.Security: java.security.Provider[] getProviders(java.lang.String)> ->_NONE_
<android.text.Selection: void setSelection(android.text.Spannable,int,int)> ->_NONE_
<android.os.FileUtils: java.lang.String readTextFile(java.io.File,int,java.lang.String)> ->_NONE_
<java.util.concurrent.atomic.AtomicMarkableReference: java.lang.Object getReference()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLMessageDigestJDK: int getCtx()> ->_NONE_
<org.jivesoftware.smack.XMPPException: java.lang.String getMessage()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: boolean getTcpNoDelay()> ->_NONE_
<android.gesture.GestureOverlayView: float getGestureStrokeLengthThreshold()> ->_NONE_
<org.jivesoftware.smackx.packet.DiscoverItems: java.lang.String getChildElementXML()> ->_NONE_
<android.os.CommonTimeUtils: int transactSetLong(int,long)> ->_NONE_
<org.apache.harmony.security.asn1.DerOutputStream: void encodeSequence(org.apache.harmony.security.asn1.ASN1Sequence)> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Node)> ->_NONE_
<android.renderscript.BaseObj: void setName(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: short getNodeType()> ->_NONE_
<gov.nist.javax.sip.header.CSeq: java.lang.String encode()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: java.lang.String getNamespaceFromExpandedNameID(int)> ->_NONE_
<gov.nist.javax.sip.address.SipUri: java.lang.String getParameter(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()> ->_NONE_
<android.widget.ProgressBar: void setVisibility(int)> ->_NONE_
<org.ccil.cowan.tagsoup.PYXWriter: void aname(char[],int,int)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.Node getLastChild()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.CertificateRequest: void send(org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream)> ->_NONE_
<org.apache.xalan.templates.ElemCallTemplate: org.apache.xalan.templates.ElemWithParam getParamElem(int)> ->_NONE_
<android.animation.LayoutTransition: long getStartDelay(int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: java.lang.String[] getEnabledProtocols()> ->_NONE_
<java.util.logging.Logger: void log(java.util.logging.LogRecord)> ->_NONE_
<android.net.wifi.WifiManager: android.net.DhcpInfo getDhcpInfo()> ->_NONE_
<android.widget.PopupWindow: void setClippingEnabled(boolean)> ->_NONE_
<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()> ->_NONE_
<android.view.MotionEvent: float getHistoricalTouchMajor(int,int)> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: void checkAuthenticated(org.jivesoftware.smack.XMPPConnection)> ->_NONE_
<android.location.Criteria: void setSpeedRequired(boolean)> ->_NONE_
<android.widget.AutoCompleteTextView: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)> ->_NONE_
<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)> ->_NONE_
<android.widget.Editor: int getErrorY()> ->_NONE_
<android.support.v4.view.ViewCompatJB: void setHasTransientState(android.view.View,boolean)> ->_NONE_
<android.widget.TextView: int getCompoundPaddingRight()> ->_NONE_
<android.test.mock.MockContext: android.content.res.Resources$Theme getTheme()> ->_NONE_
<android.graphics.drawable.ColorDrawable: int getChangingConfigurations()> ->_NONE_
<org.apache.xml.utils.SecuritySupport12: long getLastModified(java.io.File)> ->_NONE_
<android.widget.Editor: int getErrorX()> ->_NONE_
<org.apache.xalan.templates.Stylesheet: void setVariable(org.apache.xalan.templates.ElemVariable)> ->_NONE_
<org.jivesoftware.smack.packet.HttpResponse: byte[] getData()> ->_NONE_
<org.apache.xml.dtm.SecuritySupport12: java.io.FileInputStream getFileInputStream(java.io.File)> ->_NONE_
<gov.nist.javax.sip.ListeningPointImpl: java.lang.String getIPAddress()> ->_NONE_
<android.content.ContentService: boolean getMasterSyncAutomatically()> ->_NONE_
<org.apache.xml.serializer.utils.SerializerMessages_cs: java.lang.Object[][] getContents()> ->_NONE_
<org.jivesoftware.smack.util.Cache: long getCacheMisses()> ->_NONE_
<android.media.videoeditor.MediaArtistNativeHelper: int getAudioCodecType(int)> ->_NONE_
<org.apache.harmony.security.x509.AlgorithmIdentifier: java.lang.String getAlgorithmName()> ->_NONE_
<gov.nist.javax.sip.header.ims.PPreferredService: java.lang.String getApplicationIdentifiers()> ->_NONE_
<org.apache.harmony.security.x509.Certificate: byte[] getEncoded()> ->_NONE_
<net.oauth.http.HttpResponseMessage: void dump(java.util.Map)> ->_NONE_
<android.app.ContextImpl: java.lang.ClassLoader getClassLoader()> ->_NONE_
<android.media.AudioSystem: int getNumStreamTypes()> ->_NONE_
<android.widget.AdapterViewAnimator: int getDisplayedChild()> ->_NONE_
<android.widget.Gallery: int getChildDrawingOrder(int,int)> ->_NONE_
<android.media.AudioService: void sendVolumeUpdate(int,int,int,int)> ->_NONE_
<org.kxml2.io.KXmlParser: java.lang.String getText()> ->_NONE_
<android.net.wifi.WifiNative: boolean setP2pGroupIdle(java.lang.String,int)> ->_NONE_
<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()> ->_NONE_
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock getLock()> ->_NONE_
<gov.nist.javax.sip.header.Via: java.lang.String getSentByField()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey: java.math.BigInteger getPublicExponent()> ->_NONE_
<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()> ->_NONE_
<net.oauth.client.URLConnectionResponse: java.util.List getHeaders()> ->_NONE_
<android.widget.CalendarView: int getWeeksSinceMinDate(java.util.Calendar)> ->_NONE_
<android.graphics.drawable.ClipDrawable: int getChangingConfigurations()> ->_NONE_
<gov.nist.javax.sip.header.ContentLength: java.lang.String encodeBody()> ->_NONE_
<org.apache.http.client.utils.URLEncodedUtils: java.util.List parse(java.net.URI,java.lang.String)> ->_NONE_
<android.database.sqlite.SQLiteDebug: void dump(android.util.Printer,java.lang.String[])> ->_NONE_
<android.support.v4.view.MotionEventCompatEclair: int getPointerCount(android.view.MotionEvent)> ->_NONE_
<android.support.v4.widget.ScrollerCompatIcs: float getCurrVelocity(android.widget.Scroller)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: int getMaxScrollX()> ->_NONE_
<java.util.TimeZone: java.lang.String getDisplayName()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: int getMaxScrollY()> ->_NONE_
<android.webkit.ZoomManager: void updateMultiTouchSupport(android.content.Context)> ->_NONE_
<org.jivesoftware.smack.ConnectionConfiguration: boolean getUseProtoBuf()> ->_NONE_
<android.widget.TextView: void sendOnTextChanged(java.lang.CharSequence,int,int,int)> ->_NONE_
<java.util.concurrent.atomic.AtomicLong: long get()> ->_NONE_
<android.view.WindowManagerGlobal: android.view.IWindowSession getWindowSession(android.os.Looper)> ->_NONE_
<gov.nist.javax.sip.header.extensions.Replaces: java.lang.String getFromTag()> ->_NONE_
<gov.nist.javax.sip.header.Via: java.lang.StringBuffer encodeBody(java.lang.StringBuffer)> ->_NONE_
<android.widget.TabWidget: void setTabSelectionListener(android.widget.TabWidget$OnTabSelectionChanged)> ->_NONE_
<org.apache.xml.serializer.SecuritySupport: java.lang.String getSystemProperty(java.lang.String)> ->_NONE_
<java.text.CollationElementIterator: void setText(java.text.CharacterIterator)> ->_NONE_
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String encode(java.lang.String,java.lang.String)> ->_NONE_
<java.lang.System: java.util.Properties getProperties()> ->_NONE_
<android.net.NetworkStatsHistory: int getIndexAfter(long)> ->_NONE_
<android.filterpacks.imageproc.FisheyeFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: boolean getUseClientMode()> ->_NONE_
<android.appwidget.AppWidgetHostView: void setOnClickHandler(android.widget.RemoteViews$OnClickHandler)> ->_NONE_
<org.apache.xml.utils.UnImplNode: java.lang.String getAttribute(java.lang.String)> ->_NONE_
<android.view.MotionEvent: float getY()> ->_NONE_
<java.lang.Thread: int getPriority()> ->_NONE_
<android.view.MotionEvent: float getX()> ->_NONE_
<gov.nist.javax.sip.header.From: java.lang.String encodeBody()> ->_NONE_
<org.apache.http.conn.BasicManagedEntity: void writeTo(java.io.OutputStream)> ->_NONE_
<android.net.http.Headers: void setContentLength(long)> ->_NONE_
<android.webkit.WebViewDatabaseClassic: java.lang.String[] getHttpAuthUsernamePassword(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: java.lang.Object getUserData(java.lang.String)> ->_NONE_
<libcore.io.IoBridge: void write(java.io.FileDescriptor,byte[],int,int)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: org.w3c.dom.Node getPreviousSibling()> ->_NONE_
<org.apache.xml.serializer.utils.SerializerMessages_es: java.lang.Object[][] getContents()> ->_NONE_
<android.net.ConnectivityManager: java.lang.String[] getTetherableIfaces()> ->_NONE_
<android.app.ContextImpl: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)> ->_NONE_
<gov.nist.javax.sip.header.Server: java.lang.String encodeProduct()> ->_NONE_
<gov.nist.javax.sip.header.TimeStamp: float getDelay()> ->_NONE_
<android.filterfw.core.FilterFunction: void connectFilterOutputs()> ->_NONE_
<org.jivesoftware.smackx.packet.MUCUser: java.lang.String getPassword()> ->_NONE_
<gov.nist.javax.sip.SipStackImpl: gov.nist.javax.sip.clientauthutils.AuthenticationHelper getSecureAuthenticationHelper(gov.nist.javax.sip.clientauthutils.SecureAccountManager,javax.sip.header.HeaderFactory)> ->_NONE_
<java.net.HttpCookie: void setValue(java.lang.String)> ->_NONE_
<android.widget.TextView: java.util.Locale getTextLocale()> ->_NONE_
<android.app.DownloadManager: java.lang.Long getMaxBytesOverMobile(android.content.Context)> ->_NONE_
<android.view.animation.Animation: int getRepeatMode()> ->_NONE_
<android.media.videoeditor.MediaArtistNativeHelper: boolean getAudioflag()> ->_NONE_
<gov.nist.javax.sip.header.NameMap: java.lang.Class getClassFromName(java.lang.String)> ->_NONE_
<android.net.wifi.WifiStateTracker: android.net.LinkProperties getLinkProperties()> ->_NONE_
<org.json.JSONArray: java.lang.String getString(int)> ->_NONE_
<org.apache.xpath.axes.LocPathIterator: org.apache.xml.dtm.DTMFilter getFilter()> ->_NONE_
<android.support.v4.util.LruCache: java.lang.Object get(java.lang.Object)> ->_NONE_
<org.kxml2.io.KXmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)> ->_NONE_
<org.apache.xpath.XPathContext: org.apache.xpath.objects.DTMXRTreeFrag getDTMXRTreeFrag(int)> ->_NONE_
<java.lang.reflect.UndeclaredThrowableException: java.lang.Throwable getUndeclaredThrowable()> ->_NONE_
<android.view.KeyCharacterMap: int getModifierBehavior()> ->_NONE_
<org.apache.xalan.res.XSLTErrorResources: java.lang.String getResourceSuffix(java.util.Locale)> ->_NONE_
<android.widget.ViewAnimator: android.view.animation.Animation getInAnimation()> ->_NONE_
<android.content.ContentProviderProxy: int delete(android.net.Uri,java.lang.String,java.lang.String[])> ->_NONE_
<gov.nist.javax.sip.header.ParametersHeader: java.util.Iterator getParameterNames()> ->_NONE_
<gov.nist.javax.sip.header.SubscriptionState: int getExpires()> ->_NONE_
<java.io.EmulatedFieldsForLoading: long get(java.lang.String,long)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: void setToTag(java.lang.String)> ->_NONE_
<android.app.ContextImpl: android.content.pm.ApplicationInfo getApplicationInfo()> ->_NONE_
<gov.nist.javax.sip.header.ParametersHeader: gov.nist.core.NameValueList getParameters()> ->_NONE_
<android.test.mock.MockContext: void sendBroadcast(android.content.Intent,java.lang.String)> ->_NONE_
<android.media.MediaCodec: java.nio.ByteBuffer[] getOutputBuffers()> ->_NONE_
<org.apache.xml.serializer.dom3.DOMErrorImpl: java.lang.String getMessage()> ->_NONE_
<android.app.StatusBarManager: void setIcon(java.lang.String,int,int,java.lang.String)> ->_NONE_
<android.database.sqlite.SQLiteStatement: long executeInsert()> ->_NONE_
<android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)> ->_NONE_
<junit.framework.ComparisonFailure: java.lang.String getExpected()> ->_NONE_
<java.lang.reflect.Field: short getShort(java.lang.Object)> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: org.w3c.dom.Node getParentNode()> ->_NONE_
<android.view.View: int getId()> ->_NONE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: void setPrettyEncoding(boolean)> ->_NONE_
<android.filterfw.core.InputPort: android.filterfw.core.FrameFormat getSourceFormat()> ->_NONE_
<android.os.Environment: java.io.File getExternalStorageAppFilesDirectory(java.lang.String)> ->_NONE_
<org.apache.xpath.functions.SecuritySupport: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)> ->_NONE_
<android.widget.SimpleCursorAdapter: void setStringConversionColumn(int)> ->_NONE_
<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: java.util.ArrayList getParamNames()> ->_NONE_
<android.widget.ExpandableListConnector: long getItemId(int)> ->_NONE_
<android.app.Activity: void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int)> ->_NONE_
<java.lang.ClassLoader: java.util.Enumeration getSystemResources(java.lang.String)> ->_NONE_
<android.net.wifi.p2p.WifiP2pDeviceList: java.util.Collection getDeviceList()> ->_NONE_
<android.hardware.display.WifiDisplay: java.lang.String getDeviceAlias()> ->_NONE_
<android.view.MotionEvent: float getTouchMajor()> ->_NONE_
<android.graphics.drawable.StateListDrawable: int[] getStateSet(int)> ->_NONE_
<gov.nist.javax.sip.message.SIPRequest: java.lang.String encode()> ->_NONE_
<android.view.ViewConfiguration: int getScaledFadingEdgeLength()> ->_NONE_
<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: void readObject(java.io.ObjectInputStream)> ->_NONE_
<android.net.wifi.WifiStateMachine: void setHighPerfModeEnabled(boolean)> ->_NONE_
<android.net.NetworkStatsHistory: long getLong(long[],int,long)> ->_NONE_
<gov.nist.javax.sip.header.SIPIfMatch: java.lang.String encodeBody()> ->_NONE_
<android.database.MergeCursor: java.lang.String[] getColumnNames()> ->_NONE_
<org.apache.http.impl.auth.NTLMScheme: java.lang.String getSchemeName()> ->_NONE_
<java.security.AlgorithmParameterGenerator: java.security.AlgorithmParameterGenerator getInstance(java.lang.String)> ->_NONE_
<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.Validity getValidity()> ->_NONE_
<org.apache.xalan.processor.WhitespaceInfoPaths: void setElements(java.util.Vector)> ->_NONE_
<libcore.io.IoUtils: java.lang.UnsafeByteSequence readFileAsBytes(java.lang.String)> ->_NONE_
<android.support.v4.app.Fragment: void setMenuVisibility(boolean)> ->_NONE_
<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.ElemTemplate getTemplateComposed(org.apache.xpath.XPathContext,int,org.apache.xml.utils.QName,boolean,org.apache.xml.dtm.DTM)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeIterator: org.apache.xml.dtm.DTMIterator getDTMIterator()> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM: int getDocument()> ->_NONE_
<org.apache.xml.utils.NamespaceSupport2: java.util.Enumeration getPrefixes()> ->_NONE_
<android.graphics.drawable.NinePatchDrawable: int getChangingConfigurations()> ->_NONE_
<android.os.WorkSource: void set(android.os.WorkSource)> ->_NONE_
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> ->_NONE_
<gov.nist.javax.sip.address.AddressImpl: int getAddressType()> ->_NONE_
<org.xml.sax.helpers.NewInstance: java.lang.ClassLoader getClassLoader()> ->_NONE_
<android.app.backup.FullBackupDataOutput: android.app.backup.BackupDataOutput getData()> ->_NONE_
<android.widget.TextView: void setMarqueeRepeatLimit(int)> ->_NONE_
<java.text.DecimalFormatSymbols: void setCurrency(java.util.Currency)> ->_NONE_
<android.app.Fragment: android.content.res.Resources getResources()> ->_NONE_
<android.widget.AppSecurityPermissions: void getPermissionsForPackage(java.lang.String,java.util.Set)> ->_NONE_
<android.view.ViewRootImpl: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)> ->_NONE_
<android.widget.NumberPicker: int getMinValue()> ->_NONE_
<android.test.AndroidTestRunner: void setTestClassName(java.lang.String,java.lang.String)> ->_NONE_
<android.preference.TwoStatePreference: void setSummaryOff(java.lang.CharSequence)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: java.security.interfaces.DSAParams getParams()> ->_NONE_
<android.webkit.WebHistoryItemClassic: void setFavicon(android.graphics.Bitmap)> ->_NONE_
<android.text.SpannableStringBuilder: void setSpan(boolean,java.lang.Object,int,int,int)> ->_NONE_
<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)> ->_NONE_
<android.filterpacks.imageproc.FlipFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<android.nfc.tech.NfcF: byte[] getSystemCode()> ->_NONE_
<android.content.ContextWrapper: void setTheme(int)> ->_NONE_
<android.widget.RemoteViews: void setBitmapCache(android.widget.RemoteViews$BitmapCache)> ->_NONE_
<android.widget.ListView: int getDividerHeight()> ->_NONE_
<android.view.ViewStub: void setOnInflateListener(android.view.ViewStub$OnInflateListener)> ->_NONE_
<org.apache.harmony.security.x509.AuthorityKeyIdentifier: byte[] getKeyIdentifier()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.message.SIPResponse getLastResponse()> ->_NONE_
<android.filterfw.core.Filter: int getStatus()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setMovementGranularities(int)> ->_NONE_
<org.jivesoftware.smack.ConnectionConfiguration: void setTLSEnabled(boolean)> ->_NONE_
<android.os.Bundle: java.lang.String[] getStringArray(java.lang.String)> ->_NONE_
<org.ccil.cowan.tagsoup.jaxp.SAXParserImpl: org.xml.sax.Parser getParser()> ->_NONE_
<android.os.Messenger: void send(android.os.Message)> ->_NONE_
<org.apache.xalan.templates.ElemLiteralResult: int getExtensionElementPrefixCount()> ->_NONE_
<org.apache.xalan.templates.TemplateSubPatternAssociation: java.lang.String getPattern()> ->_NONE_
<android.view.animation.OvershootInterpolator: float getInterpolation(float)> ->_NONE_
<org.apache.commons.io.input.ProxyReader: int read(char[])> ->_NONE_
<android.media.AudioService: int getRemoteStreamVolume()> ->_NONE_
<gov.nist.javax.sip.header.SIPDateHeader: java.lang.String encodeBody()> ->_NONE_
<android.widget.TextView: android.text.InputFilter[] getFilters()> ->_NONE_
<android.media.videoeditor.VideoEditorImpl: java.lang.String getPath()> ->_NONE_
<java.util.prefs.PreferenceChangeEvent: java.util.prefs.Preferences getNode()> ->_NONE_
<gov.nist.javax.sip.header.ContentType: gov.nist.javax.sip.header.MediaRange getMediaRange()> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getExpandedTypeID(int)> ->_NONE_
<libcore.io.ForwardingOs: java.lang.String getnameinfo(java.net.InetAddress,int)> ->_NONE_
<android.app.SearchableInfo: int getSearchButtonText()> ->_NONE_
<android.webkit.WebSettingsClassic: void setAllowFileAccess(boolean)> ->_NONE_
<android.location.Address: java.lang.String getCountryCode()> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Implicit: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)> ->_NONE_
<org.ccil.cowan.tagsoup.jaxp.SAXFactoryImpl: boolean getFeature(java.lang.String)> ->_NONE_
<android.content.SyncStatusInfo: int getLastFailureMesgAsInt(int)> ->_NONE_
<android.filterfw.core.FieldPort: java.lang.Object getTarget()> ->_NONE_
<android.webkit.CookieManager: void setCookie(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xml.dtm.Axis: int getNamesLength()> ->_NONE_
<android.graphics.drawable.InsetDrawable: boolean setVisible(boolean,boolean)> ->_NONE_
<android.webkit.WebViewClassic: void setUseMockGeolocation()> ->_NONE_
<android.view.ViewRootImpl: android.view.View getCommonPredecessor(android.view.View,android.view.View)> ->_NONE_
<android.app.AlarmManager: void setTime(long)> ->_NONE_
<android.drm.DrmManagerClient: boolean canHandle(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.commons.logging.LogSource: org.apache.commons.logging.Log makeNewLogInstance(java.lang.String)> ->_NONE_
<android.webkit.WebSettingsClassic: int getMinimumFontSize()> ->_NONE_
<android.webkit.WebSettingsClassic: void setLoadsImagesAutomatically(boolean)> ->_NONE_
<android.graphics.Canvas: android.graphics.DrawFilter getDrawFilter()> ->_NONE_
<javax.xml.transform.dom.DOMResult: org.w3c.dom.Node getNode()> ->_NONE_
<java.security.spec.RSAPrivateCrtKeySpec: java.math.BigInteger getPrimeExponentQ()> ->_NONE_
<org.apache.http.impl.cookie.BasicExpiresHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)> ->_NONE_
<java.security.spec.RSAPrivateCrtKeySpec: java.math.BigInteger getPrimeExponentP()> ->_NONE_
<java.net.URLConnection: java.lang.String getHeaderFieldKey(int)> ->_NONE_
<android.net.http.SslCertificate: android.net.http.SslCertificate$DName getIssuedTo()> ->_NONE_
<org.apache.xml.serializer.ToStream: void notationDecl(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.content.pm.ServiceInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.http.params.HttpProtocolParams: java.nio.charset.CodingErrorAction getMalformedInputAction(org.apache.http.params.HttpParams)> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationInfo: void setNextNonce(java.lang.String)> ->_NONE_
<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: org.apache.harmony.luni.lang.reflect.ListOfTypes parseOptTypeArguments()> ->_NONE_
<android.view.View: int getRightPaddingOffset()> ->_NONE_
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: android.net.wifi.p2p.WifiP2pDevice getSrcDevice()> ->_NONE_
<android.os.Bundle: java.lang.String getString(java.lang.String)> ->_NONE_
<org.apache.xpath.axes.LocPathIterator: boolean getFoundLast()> ->_NONE_
<gov.nist.javax.sip.stack.TCPMessageProcessor: int getDefaultTargetPort()> ->_NONE_
<jp.co.omronsoft.openwnn.JAJP.OpenWnnClauseConverterJAJP: void setFilter(jp.co.omronsoft.openwnn.CandidateFilter)> ->_NONE_
<android.os.Parcel: void writeSerializable(java.io.Serializable)> ->_NONE_
<android.webkit.ZoomManager: float getInvScale()> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertImpl: java.util.Collection getSubjectAlternativeNames()> ->_NONE_
<android.view.View: int getImportantForAccessibility()> ->_NONE_
<android.content.Intent: java.lang.CharSequence[] getCharSequenceArrayExtra(java.lang.String)> ->_NONE_
<android.server.search.Searchables: android.content.ComponentName getGlobalSearchActivity()> ->_NONE_
<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.security.Provider)> ->_NONE_
<android.media.AudioService: void dumpRCStack(java.io.PrintWriter)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.Logger: org.apache.harmony.xnet.provider.jsse.Logger$Stream getStream(java.lang.String)> ->_NONE_
<android.test.RenamingDelegatingContext: java.io.File getDatabasePath(java.lang.String)> ->_NONE_
<org.xml.sax.helpers.AttributeListImpl: java.lang.String getValue(int)> ->_NONE_
<android.test.mock.MockResources: int getInteger(int)> ->_NONE_
<java.sql.DriverManager: java.io.PrintWriter getLogWriter()> ->_NONE_
<gov.nist.javax.sip.header.extensions.References: java.lang.String getParameter(java.lang.String)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: java.lang.Object getSource(java.lang.Object)> ->_NONE_
<android.webkit.WebView: int getProgress()> ->_NONE_
<javax.net.ssl.SSLContext: javax.net.ssl.SSLServerSocketFactory getServerSocketFactory()> ->_NONE_
<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.message.SIPRequest createRequest(gov.nist.javax.sip.address.SipUri,gov.nist.javax.sip.header.Via,gov.nist.javax.sip.header.CSeq,gov.nist.javax.sip.header.From,gov.nist.javax.sip.header.To)> ->_NONE_
<android.database.sqlite.SQLiteConnection: void collectDbStats(java.util.ArrayList)> ->_NONE_
<libcore.net.url.FtpURLConnection: boolean readMultiLine()> ->_NONE_
<gov.nist.javax.sip.header.extensions.Join: java.lang.String getCallId()> ->_NONE_
<android.widget.AlphabetIndexer: void setCursor(android.database.Cursor)> ->_NONE_
<android.test.mock.MockPackageManager: void replacePreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)> ->_NONE_
<android.net.wifi.WifiConfiguration: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.drm.DrmManagerClient: void setOnEventListener(android.drm.DrmManagerClient$OnEventListener)> ->_NONE_
<android.net.ProxyProperties: int getPort()> ->_NONE_
<gov.nist.javax.sip.header.SIPDate: void setYear(int)> ->_NONE_
<org.apache.xml.serializer.utils.DOM2Helper: java.lang.String getNamespaceOfNode(org.w3c.dom.Node)> ->_NONE_
<java.util.IllegalFormatConversionException: java.lang.Class getArgumentClass()> ->_NONE_
<android.nfc.tech.IsoDep: boolean isConnected()> ->_NONE_
<org.apache.xalan.templates.ElemExtensionDecl: int getElementCount()> ->_NONE_
<android.view.View: java.lang.Object getTag()> ->_NONE_
<android.text.Layout: float getLineExtent(int,boolean)> ->_NONE_
<libcore.io.ForwardingOs: int readv(java.io.FileDescriptor,java.lang.Object[],int[],int[])> ->_NONE_
<android.view.View: int getDefaultSize(int,int)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler getInputContentHandler()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: org.apache.harmony.xnet.provider.jsse.SSLParametersImpl getDefault()> ->_NONE_
<android.media.videoeditor.VideoEditorProfile: android.media.videoeditor.VideoEditorProfile get()> ->_NONE_
<android.widget.Switch: void setThumbTextPadding(int)> ->_NONE_
<android.widget.FrameLayout: int getPaddingLeftWithForeground()> ->_NONE_
<java.lang.reflect.AccessibleObject: void setAccessible(boolean)> ->_NONE_
<org.apache.xml.utils.FastStringBuffer: java.lang.String getOneChunkString(int,int,int)> ->_NONE_
<android.widget.ScrollView: float getTopFadingEdgeStrength()> ->_NONE_
<android.graphics.ColorMatrix: void setConcat(android.graphics.ColorMatrix,android.graphics.ColorMatrix)> ->_NONE_
<org.apache.xpath.jaxp.XPathExpressionImpl: void setXPath(org.apache.xpath.XPath)> ->_NONE_
<org.apache.commons.io.IOCase: java.lang.String getName()> ->_NONE_
<org.apache.xpath.XPathContext: int getCurrentNode()> ->_NONE_
<android.widget.ListView: void setSelection(int)> ->_NONE_
<libcore.net.http.HttpEngine: void setResponse(libcore.net.http.ResponseHeaders,java.io.InputStream)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: void setMaxForwards(javax.sip.header.MaxForwardsHeader)> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: javax.sip.message.Request createRequest(java.lang.String)> ->_NONE_
<android.app.ActivityManagerProxy: java.lang.String getProviderMimeType(android.net.Uri,int)> ->_NONE_
<javax.xml.parsers.DocumentBuilderFactory: void setCoalescing(boolean)> ->_NONE_
<java.util.GregorianCalendar: int getActualMaximum(int)> ->_NONE_
<java.sql.DriverManager: int getLoginTimeout()> ->_NONE_
<org.apache.xalan.templates.RedundentExprEliminator: org.apache.xalan.templates.ElemVariable getPrevVariableElem(org.apache.xalan.templates.ElemTemplateElement)> ->_NONE_
<java.text.Bidi: int getRunLevel(int)> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransaction getLastTransaction()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl: java.lang.String[] getSupportedCipherSuites()> ->_NONE_
<org.xml.sax.helpers.XMLReaderAdapter: void setLocale(java.util.Locale)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: void setIdAttribute(boolean)> ->_NONE_
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse: java.util.List getUniqueServiceNames()> ->_NONE_
<org.apache.xpath.XPathContext: void setErrorListener(javax.xml.transform.ErrorListener)> ->_NONE_
<java.nio.ShortToByteBufferAdapter: java.nio.ShortBuffer get(short[],int,int)> ->_NONE_
<gov.nist.javax.sip.header.CallIdentifier: void setCallID(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.AVTPartSimple: java.lang.String getSimpleString()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: java.lang.String getHostAddress()> ->_NONE_
<android.net.Proxy: void setHttpProxySystemProperty(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.support.v4.widget.CursorAdapter: android.widget.Filter getFilter()> ->_NONE_
<android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)> ->_NONE_
<org.apache.http.params.HttpConnectionParams: void setSoKeepalive(org.apache.http.params.HttpParams,boolean)> ->_NONE_
<android.app.ApplicationThreadProxy: void scheduleSendResult(android.os.IBinder,java.util.List)> ->_NONE_
<android.widget.LinearLayout: int getLocationOffset(android.view.View)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: long getCreationTime()> ->_NONE_
<org.jivesoftware.smack.packet.Bind: java.lang.String getChildElementXML()> ->_NONE_
<gov.nist.javax.sip.address.TelephoneNumber: gov.nist.core.NameValueList getParameters()> ->_NONE_
<gov.nist.javax.sip.header.ims.PAssertedService: java.lang.String getApplicationIdentifiers()> ->_NONE_
<android.filterpacks.imageproc.SepiaFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<android.telephony.SignalStrength: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.speech.srec.Recognizer: java.lang.String getAcousticState()> ->_NONE_
<android.text.TextLine: int getOffsetToLeftRightOf(int,boolean)> ->_NONE_
<android.location.Address: void setLocality(java.lang.String)> ->_NONE_
<android.app.admin.DeviceAdminInfo: android.content.pm.ActivityInfo getActivityInfo()> ->_NONE_
<gov.nist.javax.sip.address.TelURLImpl: gov.nist.core.NameValueList getParameters()> ->_NONE_
<gov.nist.javax.sip.stack.MessageChannel: java.lang.String getRawIpSourceAddress()> ->_NONE_
<android.renderscript.Allocation: int getBytesSize()> ->_NONE_
<org.apache.xalan.processor.ProcessorOutputElem: void setIndent(boolean)> ->_NONE_
<android.text.style.StyleSpan: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<jp.co.omronsoft.openwnn.SymbolList: java.lang.String getXmlAttribute(android.content.res.XmlResourceParser,java.lang.String)> ->_NONE_
<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForActivity(android.content.ComponentName)> ->_NONE_
<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.XSLTSchema getSchema()> ->_NONE_
<jp.co.omronsoft.openwnn.Keyboard: int getVerticalGap()> ->_NONE_
<android.opengl.EGLLogWrapper: java.lang.String getHex(int)> ->_NONE_
<android.ddm.DdmHandleAppName: void setAppName(java.lang.String,int)> ->_NONE_
<org.apache.xml.serializer.utils.SerializerMessages_fr: java.lang.Object[][] getContents()> ->_NONE_
<org.apache.commons.logging.impl.SimpleLog: void log(int,java.lang.Object,java.lang.Throwable)> ->_NONE_
<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)> ->_NONE_
<java.net.MulticastSocket: java.net.NetworkInterface getNetworkInterface()> ->_NONE_
<android.util.IntProperty: void set(java.lang.Object,java.lang.Integer)> ->_NONE_
<android.media.audiofx.Equalizer: android.media.audiofx.Equalizer$Settings getProperties()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPublicKey: java.math.BigInteger getPublicExponent()> ->_NONE_
<org.apache.harmony.security.x509.Extensions: void dumpValue(java.lang.StringBuilder,java.lang.String)> ->_NONE_
<android.location.Location: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.graphics.drawable.LayerDrawable: int getIntrinsicHeight()> ->_NONE_
<android.widget.GridLayout: int getAlignmentMode()> ->_NONE_
<android.database.sqlite.SQLiteConnectionPool: void dump(android.util.Printer,boolean)> ->_NONE_
<net.oauth.signature.OAuthSignatureMethod: java.lang.String getTokenSecret()> ->_NONE_
<org.jivesoftware.smack.GroupChat: java.util.Iterator getParticipants()> ->_NONE_
<org.apache.xml.serializer.dom3.DOMOutputImpl: java.io.OutputStream getByteStream()> ->_NONE_
<javax.security.auth.SubjectDomainCombiner: javax.security.auth.Subject getSubject()> ->_NONE_
<android.speech.tts.SynthesisRequest: java.lang.String getLanguage()> ->_NONE_
<android.support.v4.widget.SimpleCursorAdapter: android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter()> ->_NONE_
<org.apache.xpath.functions.FuncExtFunction: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<java.net.Inet4Address: byte[] getAddress()> ->_NONE_
<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator(java.text.AttributedCharacterIterator$Attribute[],int,int)> ->_NONE_
<android.net.wifi.p2p.WifiP2pGroupList: int getNetworkId(java.lang.String)> ->_NONE_
<android.net.http.AndroidHttpClientConnection: int getLocalPort()> ->_NONE_
<android.database.DatabaseUtils: int getTypeOfObject(java.lang.Object)> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CRLImpl: java.util.Date getThisUpdate()> ->_NONE_
<org.apache.harmony.xml.dom.EntityImpl: java.lang.String getXmlVersion()> ->_NONE_
<org.apache.xpath.Expression: org.apache.xpath.ExpressionNode getExpressionOwner()> ->_NONE_
<android.net.http.AndroidHttpClientConnection: void close()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getInputEncoding()> ->_NONE_
<android.media.audiofx.AudioEffect: void setParameterListener(android.media.audiofx.AudioEffect$OnParameterChangeListener)> ->_NONE_
<android.os.Handler: android.os.Message getPostMessage(java.lang.Runnable)> ->_NONE_
<java.io.ObjectStreamClass: java.io.ObjectStreamField getField(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: java.lang.String getHref()> ->_NONE_
<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPRequest createACKRequest()> ->_NONE_
<android.test.ClassPathPackageInfoSource: android.test.ClassPathPackageInfo getPackageInfo(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: java.lang.String getLocalNameFromExpandedNameID(int)> ->_NONE_
<java.sql.Time: void setDate(int)> ->_NONE_
<android.os.BatteryStats: void dumpLine(java.io.PrintWriter,int,java.lang.String,java.lang.String,java.lang.Object[])> ->_NONE_
<android.text.DynamicLayout: android.text.Layout$Directions getLineDirections(int)> ->_NONE_
<org.apache.xalan.templates.ElemMessage: void setTerminate(boolean)> ->_NONE_
<org.apache.http.client.protocol.ClientContextConfigurer: void setAuthSchemeRegistry(org.apache.http.auth.AuthSchemeRegistry)> ->_NONE_
<org.apache.http.impl.io.AbstractSessionInputBuffer: java.lang.String readLine()> ->_NONE_
<java.text.DateFormat: java.text.DateFormat getDateInstance()> ->_NONE_
<org.apache.harmony.security.x509.ExtensionValue: byte[] getEncoded()> ->_NONE_
<java.util.Calendar: void set(int,int,int)> ->_NONE_
<org.jivesoftware.smack.packet.RosterPacket: int getRosterItemCount()> ->_NONE_
<org.apache.xalan.templates.Stylesheet: int getImportCount()> ->_NONE_
<org.jivesoftware.smack.packet.XMPPError: java.lang.String getType()> ->_NONE_
<org.apache.xalan.Version: java.lang.String getImplementationLanguage()> ->_NONE_
<android.app.admin.DevicePolicyManager: int getPasswordQuality(android.content.ComponentName,int)> ->_NONE_
<android.location.LocationManager: android.location.LocationProvider getProvider(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.ElemNumber: void setLetterValue(org.apache.xalan.templates.AVT)> ->_NONE_
<android.database.DatabaseUtils: java.lang.String getCollationKey(java.lang.String)> ->_NONE_
<org.jivesoftware.smackx.provider.MUCUserProvider: org.jivesoftware.smackx.packet.MUCUser$Invite parseInvite(org.xmlpull.v1.XmlPullParser)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: boolean getQuietConflictWarnings()> ->_NONE_
<android.filterfw.core.FrameFormat: java.lang.Class getObjectClass()> ->_NONE_
<org.apache.xalan.templates.ElemLiteralResult: java.lang.String getRawName()> ->_NONE_
<android.database.sqlite.SQLiteConnection: long executeForLong(java.lang.String,java.lang.Object[],android.os.CancellationSignal)> ->_NONE_
<android.animation.AnimatorSet: void setInterpolator(android.animation.TimeInterpolator)> ->_NONE_
<org.apache.xml.utils.SecuritySupport12: java.lang.ClassLoader getContextClassLoader()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: java.lang.CharSequence getContentDescription(java.lang.Object)> ->_NONE_
<android.content.pm.ContainerEncryptionParams: java.lang.String getMacAlgorithm()> ->_NONE_
<libcore.net.http.HttpURLConnectionImpl: java.lang.String getHeaderFieldKey(int)> ->_NONE_
<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow(int)> ->_NONE_
<android.app.ActivityOptions: void update(android.app.ActivityOptions)> ->_NONE_
<android.accounts.AuthenticatorDescription: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<jp.co.omronsoft.openwnn.TextCandidatesViewManager: int getMaxLine()> ->_NONE_
<android.support.v4.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> ->_NONE_
<android.widget.RemoteViews: void setBundle(int,java.lang.String,android.os.Bundle)> ->_NONE_
<android.media.RingtoneManager: android.database.Cursor getInternalRingtones()> ->_NONE_
<org.jivesoftware.smack.util.Base64: byte[] encode3to4(byte[],int,int,byte[],int)> ->_NONE_
<org.apache.james.mime4j.codec.EncoderUtil: java.lang.String encodeHeaderParameter(java.lang.String,java.lang.String)> ->_NONE_
<java.text.DecimalFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)> ->_NONE_
<android.location.GpsSatellite: void setStatus(android.location.GpsSatellite)> ->_NONE_
<android.security.KeyStore: byte[] get(byte[])> ->_NONE_
<gov.nist.core.InternalErrorHandler: void handleException(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.extensions.Replaces: void setToTag(java.lang.String)> ->_NONE_
<android.graphics.ColorMatrix: void setScale(float,float,float,float)> ->_NONE_
<android.app.ActionBar: android.content.Context getThemedContext()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: short getLevel(int)> ->_NONE_
<dalvik.system.BlockGuard: dalvik.system.BlockGuard$Policy getThreadPolicy()> ->_NONE_
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.NamespaceAlias getNamespaceAlias(int)> ->_NONE_
<android.app.FragmentBreadCrumbs: void setMaxVisible(int)> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: java.lang.String getStandalone()> ->_NONE_
<android.telephony.TelephonyManager: int getSimState()> ->_NONE_
<android.net.rtp.AudioCodec: android.net.rtp.AudioCodec[] getCodecs()> ->_NONE_
<android.net.http.IdleCache: boolean cacheConnection(org.apache.http.HttpHost,android.net.http.Connection)> ->_NONE_
<gov.nist.javax.sip.header.Challenge: java.lang.String getStale()> ->_NONE_
<gov.nist.javax.sip.message.SIPRequest: byte[] encodeAsBytes(java.lang.String)> ->_NONE_
<android.preference.Preference: int getPersistedInt(int)> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: org.xml.sax.ext.DeclHandler getDeclHandler()> ->_NONE_
<org.javia.arity.Token: org.javia.arity.Token setValue(double)> ->_NONE_
<java.text.DecimalFormat: java.text.DecimalFormatSymbols getDecimalFormatSymbols()> ->_NONE_
<android.webkit.WebViewCore: void webkitDraw(android.webkit.WebViewCore$DrawData)> ->_NONE_
<android.net.wifi.WifiStateMachine: boolean syncRemoveNetwork(com.android.internal.util.AsyncChannel,int)> ->_NONE_
<android.drm.DrmEvent: int getUniqueId()> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.ElemTemplate getCurrentTemplate()> ->_NONE_
<org.kxml2.io.KXmlParser: int getColumnNumber()> ->_NONE_
<org.apache.http.auth.AuthScope: java.lang.String getRealm()> ->_NONE_
<android.preference.Preference: android.content.SharedPreferences$Editor getEditor()> ->_NONE_
<gov.nist.javax.sip.header.SubscriptionState: java.lang.String getReasonCode()> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CRLImpl: byte[] getSigAlgParams()> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: void unparsedEntityDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.content.ContextWrapper: java.io.File getCacheDir()> ->_NONE_
<android.filterpacks.imageproc.ToRGBAFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<org.apache.xalan.templates.ElemCopyOf: void execute(org.apache.xalan.transformer.TransformerImpl)> ->_NONE_
<android.media.audiofx.Visualizer: int getScalingMode()> ->_NONE_
<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme getScheme(java.lang.String)> ->_NONE_
<android.bluetooth.BluetoothPan: boolean connect(android.bluetooth.BluetoothDevice)> ->_NONE_
<android.widget.ViewSwitcher: android.view.View getNextView()> ->_NONE_
<java.net.Socket: boolean getOOBInline()> ->_NONE_
<org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream: int getColumn()> ->_NONE_
<android.database.sqlite.SQLiteQueryBuilder: void setProjectionMap(java.util.Map)> ->_NONE_
<gov.nist.javax.sip.header.ims.Path: void setValue(java.lang.String)> ->_NONE_
<org.apache.http.impl.cookie.RFC2965Spec: java.util.List parse(org.apache.http.HeaderElement[],org.apache.http.cookie.CookieOrigin)> ->_NONE_
<org.apache.xml.serializer.utils.SerializerMessages_it: java.lang.Object[][] getContents()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()> ->_NONE_
<android.widget.CalendarView: void setCurrentLocale(java.util.Locale)> ->_NONE_
<android.preference.Preference: void setShouldDisableView(boolean)> ->_NONE_
<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,int)> ->_NONE_
<android.app.Instrumentation: void sendStatus(int,android.os.Bundle)> ->_NONE_
<java.net.URLConnection: boolean getUseCaches()> ->_NONE_
<java.security.cert.X509CRLSelector: void setMinCRLNumber(java.math.BigInteger)> ->_NONE_
<java.nio.DirectByteBuffer: double getDouble()> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: boolean getDefaultUseCaches()> ->_NONE_
<android.widget.AppSecurityPermissions: android.content.pm.PackageInfo getInstalledPackageInfo()> ->_NONE_
<org.apache.xml.serializer.ToStream: void setNewLine(char[])> ->_NONE_
<android.widget.TextView: android.content.res.ColorStateList getHintTextColors()> ->_NONE_
<org.apache.xpath.compiler.OpMapVector: void setElementAt(int,int)> ->_NONE_
<javax.xml.transform.stream.StreamResult: java.io.OutputStream getOutputStream()> ->_NONE_
<java.util.Date: long getTime()> ->_NONE_
<java.net.URLClassLoader: java.net.URL[] getURLs()> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: void setPackageName(java.lang.CharSequence)> ->_NONE_
<java.text.DateFormat: void setLenient(boolean)> ->_NONE_
<android.webkit.WebView: boolean setFrame(int,int,int,int)> ->_NONE_
<android.view.ViewGroup: int getLayoutMode()> ->_NONE_
<org.apache.xml.dtm.ref.DTMChildIterNodeList: int getLength()> ->_NONE_
<java.util.zip.ZipOutputStream: void setMethod(int)> ->_NONE_
<android.webkit.WebViewClassic: boolean updateScrollCoordinates(int,int)> ->_NONE_
<android.os.Parcel: void readSparseBooleanArrayInternal(android.util.SparseBooleanArray,int)> ->_NONE_
<javax.net.ServerSocketFactory: javax.net.ServerSocketFactory getDefault()> ->_NONE_
<android.webkit.WebViewClassic: int getViewWidth()> ->_NONE_
<org.apache.harmony.xml.parsers.DocumentBuilderFactoryImpl: boolean getFeature(java.lang.String)> ->_NONE_
<org.apache.xml.serializer.SerializerBase: boolean getOmitXMLDeclaration()> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationHeader: void setDomain(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.KeyDeclaration: org.apache.xml.utils.QName getName()> ->_NONE_
<gov.nist.javax.sip.stack.SIPClientTransaction: javax.sip.message.Request createAck()> ->_NONE_
<android.app.ContextImpl: int getThemeResId()> ->_NONE_
<org.apache.xml.utils.UnImplNode: void setNodeValue(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: org.w3c.dom.Element getOwnerElement()> ->_NONE_
<org.apache.http.impl.SocketHttpServerConnection: java.net.Socket getSocket()> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: void setRequestMethod(java.lang.String)> ->_NONE_
<java.security.spec.RSAOtherPrimeInfo: java.math.BigInteger getCrtCoefficient()> ->_NONE_
<java.security.cert.TrustAnchor: byte[] getNameConstraints()> ->_NONE_
<android.widget.ViewAnimator: void setOutAnimation(android.view.animation.Animation)> ->_NONE_
<android.test.mock.MockIContentProvider: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)> ->_NONE_
<java.net.DatagramSocket: void setSendBufferSize(int)> ->_NONE_
<gov.nist.javax.sip.header.Supported: java.lang.String getOptionTag()> ->_NONE_
<net.oauth.client.httpclient4.HttpMethodResponse: java.util.List getHeaders()> ->_NONE_
<org.jivesoftware.smack.PacketReader: org.jivesoftware.smack.packet.StreamError parseStreamError(com.google.common.io.protocol.ProtoBuf)> ->_NONE_
<java.nio.LongBuffer: java.nio.LongBuffer get(long[])> ->_NONE_
<gov.nist.javax.sip.stack.TLSMessageChannel: java.lang.String getKey()> ->_NONE_
<java.util.concurrent.ForkJoinPool: int getPoolSize()> ->_NONE_
<android.text.Layout: float getSpacingMultiplier()> ->_NONE_
<gov.nist.javax.sip.parser.StringMsgParser: void setStrict(boolean)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: void setTransformThread(java.lang.Thread)> ->_NONE_
<gov.nist.javax.sip.header.extensions.Replaces: gov.nist.javax.sip.header.CallIdentifier getCallIdentifer()> ->_NONE_
<android.telephony.ServiceState: void setSystemAndNetworkId(int,int)> ->_NONE_
<android.media.AudioTrack: int getPlayState()> ->_NONE_
<org.apache.xpath.res.XPATHErrorResources: java.lang.String getResourceSuffix(java.util.Locale)> ->_NONE_
<android.widget.TextView: boolean getIncludeFontPadding()> ->_NONE_
<android.webkit.WebSettings: void setBuiltInZoomControls(boolean)> ->_NONE_
<java.util.zip.ZipEntry: void setComment(java.lang.String)> ->_NONE_
<android.preference.SeekBarPreference: java.lang.CharSequence getSummary()> ->_NONE_
<android.support.v4.view.ViewCompat: int getImportantForAccessibility(android.view.View)> ->_NONE_
<android.view.MotionEvent: float getOrientation(int)> ->_NONE_
<android.view.PointerIcon: boolean isLoaded()> ->_NONE_
<android.test.mock.MockResources: int[] getIntArray(int)> ->_NONE_
<android.webkit.CallbackProxy: android.webkit.WebChromeClient getWebChromeClient()> ->_NONE_
<org.apache.xalan.processor.TransformerFactoryImpl: void setAttribute(java.lang.String,java.lang.Object)> ->_NONE_
<android.net.Proxy: java.net.Proxy getProxy(android.content.Context,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.stack.MessageProcessor getMessageProcessor()> ->_NONE_
<javax.obex.HeaderSet: int[] getHeaderList()> ->_NONE_
<org.apache.xml.dtm.ref.SecuritySupport12: java.lang.String getSystemProperty(java.lang.String)> ->_NONE_
<android.graphics.Typeface: int getStyle()> ->_NONE_
<org.apache.http.message.BasicLineParser: org.apache.http.StatusLine parseStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)> ->_NONE_
<android.media.AudioService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> ->_NONE_
<org.apache.harmony.security.x509.IssuingDistributionPoint: void setOnlyContainsAttributeCerts(boolean)> ->_NONE_
<android.speech.srec.WaveHeader: int getSampleRate()> ->_NONE_
<org.apache.xalan.templates.ElemWithParam: void setSelect(org.apache.xpath.XPath)> ->_NONE_
<android.widget.PopupWindow: void setAnimationStyle(int)> ->_NONE_
<java.security.cert.X509CertSelector: void setPathToNames(java.util.Collection)> ->_NONE_
<android.content.pm.PackageParser: android.content.pm.PackageParser$PackageLite parsePackageLite(java.lang.String,int)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: void setEncapsulatedChannel(gov.nist.javax.sip.stack.MessageChannel)> ->_NONE_
<android.net.http.Headers: void setAcceptRanges(java.lang.String)> ->_NONE_
<libcore.net.http.HttpEngine: java.net.HttpURLConnection getHttpConnectionToCache()> ->_NONE_
<android.app.ContextImpl: java.io.File getDataDirFile()> ->_NONE_
<android.widget.ExpandableListView: long getPackedPositionForChild(int,int)> ->_NONE_
<org.apache.xml.serializer.utils.SerializerMessages_hu: java.lang.Object[][] getContents()> ->_NONE_
<android.net.http.SslCertificate: android.net.http.SslCertificate$DName getIssuedBy()> ->_NONE_
<android.view.FocusFinder: android.view.FocusFinder getInstance()> ->_NONE_
<android.app.SearchDialog: void setWorking(boolean)> ->_NONE_
<android.widget.TextView: void getInterestingRect(android.graphics.Rect,int)> ->_NONE_
<android.telephony.CellSignalStrengthCdma: int getEvdoDbm()> ->_NONE_
<android.view.ScaleGestureDetector: float getFocusX()> ->_NONE_
<android.view.ScaleGestureDetector: float getFocusY()> ->_NONE_
<org.apache.xalan.xslt.SecuritySupport12: java.lang.String getSystemProperty(java.lang.String)> ->_NONE_
<android.os.HandlerThread: android.os.Looper getLooper()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLBufferedInput: void setSourceBuffer(java.nio.ByteBuffer)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: byte[] getDigestSHAwithoutLast()> ->_NONE_
<javax.net.ssl.HttpsURLConnection: void setDefaultHostnameVerifier(javax.net.ssl.HostnameVerifier)> ->_NONE_
<android.app.SearchManager: java.util.List getSearchablesInGlobalSearch()> ->_NONE_
<android.opengl.GLLogWrapper: java.lang.String getFactor(int)> ->_NONE_
<android.webkit.WebSettingsClassic: int getMinimumLogicalFontSize()> ->_NONE_
<org.apache.xalan.templates.DecimalFormatProperties: java.lang.String getNodeName()> ->_NONE_
<libcore.io.ForwardingOs: void setuid(int)> ->_NONE_
<android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat: boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo)> ->_NONE_
<android.filterpacks.imageproc.LomoishFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<org.apache.harmony.xml.dom.ElementImpl: org.apache.harmony.xml.dom.AttrImpl getAttributeNodeNS(java.lang.String,java.lang.String)> ->_NONE_
<android.webkit.WebHistoryItem: java.lang.String getTitle()> ->_NONE_
<android.content.IntentFilter: java.lang.String getDataScheme(int)> ->_NONE_
<android.gesture.GestureLibrary: void setSequenceType(int)> ->_NONE_
<android.graphics.drawable.GradientDrawable: int getIntrinsicWidth()> ->_NONE_
<java.util.logging.Handler: void setLevel(java.util.logging.Level)> ->_NONE_
<org.apache.http.impl.conn.ProxySelectorRoutePlanner: java.net.ProxySelector getProxySelector()> ->_NONE_
<java.security.MessageDigest: java.lang.String getAlgorithm()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: int getSendUdpBufferSize()> ->_NONE_
<android.widget.ZoomButton: void setEnabled(boolean)> ->_NONE_
<android.widget.TextView: boolean getDefaultEditable()> ->_NONE_
<libcore.io.ForwardingOs: void seteuid(int)> ->_NONE_
<gov.nist.javax.sip.stack.UDPMessageChannel: void sendMessage(byte[],java.net.InetAddress,int,boolean)> ->_NONE_
<org.xmlpull.v1.sax2.Driver: org.xml.sax.EntityResolver getEntityResolver()> ->_NONE_
<android.hardware.GeomagneticField: float getDeclination()> ->_NONE_
<org.apache.xml.utils.UnImplNode: java.lang.String getXmlVersion()> ->_NONE_
<java.nio.IoVec: int doTransfer(java.io.FileDescriptor)> ->_NONE_
<android.text.DynamicLayout: int getLineStart(int)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.MessageProcessor createMessageProcessor(java.net.InetAddress,int,java.lang.String)> ->_NONE_
<org.apache.harmony.xml.dom.DocumentImpl: java.util.Map getUserDataMapForRead(org.apache.harmony.xml.dom.NodeImpl)> ->_NONE_
<android.media.JetPlayer: boolean setMuteFlag(int,boolean,boolean)> ->_NONE_
<org.apache.xalan.templates.ElemLiteralResult: java.lang.String getAttributeNS(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: int getConnectionsInPool()> ->_NONE_
<java.lang.ClassNotFoundException: java.lang.Throwable getException()> ->_NONE_
<android.net.wifi.WifiConfigStore: java.util.List getConfiguredNetworks()> ->_NONE_
<android.accounts.AccountManager: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: int getResponseInterceptorCount()> ->_NONE_
<android.test.mock.MockCursor: double getDouble(int)> ->_NONE_
<android.widget.AbsListView: void setItemChecked(int,boolean)> ->_NONE_
<android.view.VolumePanel: void postRemoteSliderVisibility(boolean)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: int getToIndex()> ->_NONE_
<android.os.StrictMode: android.os.StrictMode$VmPolicy getVmPolicy()> ->_NONE_
<java.nio.charset.Charset: java.nio.ByteBuffer encode(java.lang.String)> ->_NONE_
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script$KernelID getKernelIDAdd()> ->_NONE_
<org.apache.xml.utils.QName: java.lang.String getLocalPart()> ->_NONE_
<android.view.View: void setTouchDelegate(android.view.TouchDelegate)> ->_NONE_
<android.content.pm.PackageParser: boolean parseAllMetaData(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,java.lang.String,android.content.pm.PackageParser$Component,java.lang.String[])> ->_NONE_
<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)> ->_NONE_
<android.webkit.WebSettingsClassic: void setDefaultFixedFontSize(int)> ->_NONE_
<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect)> ->_NONE_
<android.inputmethodservice.Keyboard: int getMinWidth()> ->_NONE_
<org.xml.sax.InputSource: java.lang.String getSystemId()> ->_NONE_
<android.os.UserManager: boolean isUserRunningOrStopping(android.os.UserHandle)> ->_NONE_
<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.Overlay parseOverlay(org.xmlpull.v1.XmlPullParser,android.media.videoeditor.MediaItem)> ->_NONE_
<java.util.TreeMap: java.lang.Object get(java.lang.Object)> ->_NONE_
<android.test.suitebuilder.TestSuiteBuilder: java.lang.String getSuiteName()> ->_NONE_
<android.database.sqlite.SQLiteSession: boolean executeSpecial(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)> ->_NONE_
<android.webkit.WebResourceResponse: java.lang.String getMimeType()> ->_NONE_
<org.kxml2.io.KXmlSerializer: void docdecl(java.lang.String)> ->_NONE_
<android.content.Intent: java.util.ArrayList getStringArrayListExtra(java.lang.String)> ->_NONE_
<org.apache.commons.io.IOUtils: void write(java.lang.StringBuffer,java.io.OutputStream)> ->_NONE_
<android.location.Location: double getLatitude()> ->_NONE_
<android.content.ContextWrapper: android.content.res.Resources getResources()> ->_NONE_
<android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri,int)> ->_NONE_
<android.widget.GridLayout: int getTotalMargin(android.view.View,boolean)> ->_NONE_
<java.io.RandomAccessFile: int read(byte[],int,int)> ->_NONE_
<jp.co.omronsoft.openwnn.JAJP.DefaultSoftKeyboardJAJP: void setHardKeyboardHidden(boolean)> ->_NONE_
<android.net.wifi.WifiConfigStore: java.lang.String getConfigFile()> ->_NONE_
<android.graphics.drawable.BitmapDrawable: void setColorFilter(android.graphics.ColorFilter)> ->_NONE_
<java.net.ProxySelector: void setDefault(java.net.ProxySelector)> ->_NONE_
<android.util.CharsetUtils: java.lang.String getDefaultVendor()> ->_NONE_
<android.view.animation.Animation: long getStartTime()> ->_NONE_
<android.support.v4.view.ViewCompatJellybeanMr1: void setLabelFor(android.view.View,int)> ->_NONE_
<gov.nist.javax.sip.SipStackImpl: void setEnabledCipherSuites(java.lang.String[])> ->_NONE_
<android.view.View: void setNextFocusUpId(int)> ->_NONE_
<android.widget.SearchView: int getImeOptions()> ->_NONE_
<android.content.ContentProviderProxy: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)> ->_NONE_
<android.net.sip.SipSession: android.net.sip.ISipSession getRealSession()> ->_NONE_
<android.renderscript.Script: void setVar(int,boolean)> ->_NONE_
<android.net.NetworkInfo: boolean isConnectedOrConnecting()> ->_NONE_
<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseTypeSignature()> ->_NONE_
<org.apache.harmony.xml.dom.DOMImplementationImpl: org.apache.harmony.xml.dom.DOMImplementationImpl getInstance()> ->_NONE_
<gov.nist.javax.sip.header.ProxyRequire: void setOptionTag(java.lang.String)> ->_NONE_
<android.test.mock.MockPackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: void setXmlSpace(int)> ->_NONE_
<libcore.io.DiskLruCache: void completeEdit(libcore.io.DiskLruCache$Editor,boolean)> ->_NONE_
<android.content.pm.PackageParser: boolean parseApplication(android.content.pm.PackageParser$Package,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,int,java.lang.String[])> ->_NONE_
<org.ccil.cowan.tagsoup.Parser: java.io.InputStream getInputStream(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: int getCurrentNode()> ->_NONE_
<org.apache.harmony.security.x509.SubjectKeyIdentifier: byte[] getEncoded()> ->_NONE_
<android.app.admin.DeviceAdminInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)> ->_NONE_
<android.security.KeyStore: byte[] getPubkey(java.lang.String)> ->_NONE_
<android.media.MediaSyncEvent: android.media.MediaSyncEvent setAudioSessionId(int)> ->_NONE_
<android.media.videoeditor.AudioTrack: long getBoundaryEndTime()> ->_NONE_
<android.widget.FastScroller: int getState()> ->_NONE_
<android.nfc.tech.Ndef: boolean isConnected()> ->_NONE_
<android.content.res.Resources: android.content.res.XmlResourceParser loadXmlResourceParser(java.lang.String,int,int,java.lang.String)> ->_NONE_
<org.apache.xalan.transformer.TransformerIdentityImpl: void setParameter(java.lang.String,java.lang.Object)> ->_NONE_
<android.database.CursorWrapper: byte[] getBlob(int)> ->_NONE_
<org.apache.xml.serializer.dom3.DOMErrorImpl: short getSeverity()> ->_NONE_
<org.apache.xml.serializer.utils.SerializerMessages_ja: java.lang.Object[][] getContents()> ->_NONE_
<android.app.ApplicationThreadProxy: void scheduleLaunchActivity(android.content.Intent,android.os.IBinder,int,android.content.pm.ActivityInfo,android.content.res.Configuration,android.content.res.CompatibilityInfo,android.os.Bundle,java.util.List,java.util.List,boolean,boolean,java.lang.String,android.os.ParcelFileDescriptor,boolean)> ->_NONE_
<android.webkit.WebSettingsClassic: void setPrivateBrowsingEnabled(boolean)> ->_NONE_
<android.text.style.DynamicDrawableSpan: int getVerticalAlignment()> ->_NONE_
<android.webkit.WebView: int getVisibleTitleHeight()> ->_NONE_
<java.util.UUID: long getMostSignificantBits()> ->_NONE_
<org.apache.xalan.processor.XSLTAttributeDef: int getType()> ->_NONE_
<org.apache.http.message.BasicHttpResponse: org.apache.http.ProtocolVersion getProtocolVersion()> ->_NONE_
<android.drm.DrmManagerClient: android.content.ContentValues getConstraints(java.lang.String,int)> ->_NONE_
<android.nfc.TransceiveResult: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.xalan.templates.NamespaceAlias: java.lang.String getResultNamespace()> ->_NONE_
<android.security.AndroidKeyStore: void engineLoad(java.io.InputStream,char[])> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertImpl: java.security.Principal getSubjectDN()> ->_NONE_
<java.lang.Character: int getNumericValue(char)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ext.DeclHandler getInputDeclHandler()> ->_NONE_
<java.nio.HeapByteBuffer: double getDouble(int)> ->_NONE_
<android.hardware.display.DisplayManagerGlobal: android.view.DisplayInfo getDisplayInfo(int)> ->_NONE_
<gov.nist.core.NameValueList: void set(gov.nist.core.NameValue)> ->_NONE_
<android.view.textservice.SuggestionsInfo: java.lang.String getSuggestionAt(int)> ->_NONE_
<java.util.concurrent.ForkJoinPool: int getQueuedSubmissionCount()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setParent(android.view.View,int)> ->_NONE_
<org.jivesoftware.smack.packet.Message: void setIsRead(boolean)> ->_NONE_
<org.apache.xpath.axes.LocPathIterator: void runTo(int)> ->_NONE_
<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$Orientation getOrientation()> ->_NONE_
<java.sql.Time: int getMonth()> ->_NONE_
<org.jivesoftware.smack.packet.PresenceCapability: java.lang.String getNode()> ->_NONE_
<org.apache.http.conn.params.ConnPerRouteBean: int getDefaultMax()> ->_NONE_
<android.media.videoeditor.AudioTrack: int getAudioType()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: javax.net.ssl.X509TrustManager getTrustManager()> ->_NONE_
<javax.net.ssl.SSLPermission: java.lang.String getActions()> ->_NONE_
<android.view.accessibility.AccessibilityRecord: int getCurrentItemIndex()> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CRLEntryImpl: byte[] getEncoded()> ->_NONE_
<org.apache.harmony.security.asn1.ASN1StringType: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)> ->_NONE_
<android.text.method.QwertyKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)> ->_NONE_
<android.view.GLES20Canvas: int getDisplayListSize(int)> ->_NONE_
<android.database.CursorWindow: java.lang.String getString(int,int)> ->_NONE_
<android.content.pm.LabeledIntent: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<java.io.ObjectInputStream: char readChar()> ->_NONE_
<org.apache.harmony.security.x509.CertificateIssuer: void dumpValue(java.lang.StringBuilder,java.lang.String)> ->_NONE_
<android.telephony.CellSignalStrengthCdma: void setEvdoEcio(int)> ->_NONE_
<android.net.sip.SipAudioCall: int getState()> ->_NONE_
<android.renderscript.RenderScript: android.content.Context getApplicationContext()> ->_NONE_
<java.nio.IntBuffer: java.nio.IntBuffer get(int[])> ->_NONE_
<net.oauth.http.HttpMessageDecoder: void dump(java.util.Map)> ->_NONE_
<android.database.DatabaseUtils: java.lang.String sqlEscapeString(java.lang.String)> ->_NONE_
<android.hardware.Camera: void getCameraInfo(int,android.hardware.Camera$CameraInfo)> ->_NONE_
<java.lang.reflect.Method: java.lang.annotation.Annotation[][] getParameterAnnotations()> ->_NONE_
<gov.nist.javax.sip.header.RetryAfter: int getRetryAfter()> ->_NONE_
<android.drm.mobile1.DrmRights: android.drm.mobile1.DrmConstraintInfo getConstraint(int)> ->_NONE_
<java.lang.ClassLoader: void setDefaultAssertionStatus(boolean)> ->_NONE_
<org.apache.xpath.functions.FuncCurrent: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<android.security.KeyStore: android.security.KeyStore getInstance()> ->_NONE_
<android.media.audiofx.PresetReverb: android.media.audiofx.PresetReverb$Settings getProperties()> ->_NONE_
<org.apache.xpath.NodeSet: org.w3c.dom.traversal.NodeFilter getFilter()> ->_NONE_
<org.apache.xml.utils.AttList: java.lang.String getValue(int)> ->_NONE_
<android.accounts.AccountManagerService: void setPasswordInternal(android.accounts.AccountManagerService$UserAccounts,android.accounts.Account,java.lang.String)> ->_NONE_
<android.text.StaticLayout: int getBottomPadding()> ->_NONE_
<android.view.CompatibilityInfoHolder: android.content.res.CompatibilityInfo getIfNeeded()> ->_NONE_
<android.speech.tts.SynthesisRequest: int getPitch()> ->_NONE_
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo)> ->_NONE_
<org.apache.xml.serializer.SerializerBase: int getIndentAmount()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLEngine: java.security.PrivateKey getPrivateKeyById(java.lang.String)> ->_NONE_
<java.util.UnknownFormatFlagsException: java.lang.String getMessage()> ->_NONE_
<android.net.EthernetDataTracker: int getDefaultGatewayAddr()> ->_NONE_
<org.apache.harmony.security.x509.Extensions: java.util.Set getNonCriticalExtensions()> ->_NONE_
<java.security.cert.X509CRL: java.security.cert.X509CRLEntry getRevokedCertificate(java.security.cert.X509Certificate)> ->_NONE_
<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)> ->_NONE_
<android.os.Bundle: byte getByte(java.lang.String)> ->_NONE_
<android.graphics.drawable.LayerDrawable: void setId(int,int)> ->_NONE_
<android.content.pm.PackageParser: boolean parseProviderTags(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.pm.PackageParser$Provider,java.lang.String[])> ->_NONE_
<gov.nist.javax.sip.address.NetObject: java.lang.String debugDump(int)> ->_NONE_
<android.text.Annotation: java.lang.String getValue()> ->_NONE_
<android.os.Bundle: double getDouble(java.lang.String)> ->_NONE_
<org.apache.xpath.functions.FunctionDef1Arg: double getArg0AsNumber(org.apache.xpath.XPathContext)> ->_NONE_
<android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)> ->_NONE_
<android.view.LayoutInflater: void setFactory2(android.view.LayoutInflater$Factory2)> ->_NONE_
<android.webkit.CookieManager: android.webkit.CookieManager getInstance()> ->_NONE_
<org.apache.xpath.jaxp.JAXPPrefixResolver: java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Node)> ->_NONE_
<android.content.SyncManager: void sendSyncFinishedOrCanceledMessage(android.content.SyncManager$ActiveSyncContext,android.content.SyncResult)> ->_NONE_
<java.util.logging.LogRecord: java.lang.String getMessage()> ->_NONE_
<java.security.cert.TrustAnchor: java.security.PublicKey getCAPublicKey()> ->_NONE_
<gov.nist.javax.sip.ListeningPointImpl: java.lang.String getSentBy()> ->_NONE_
<android.filterfw.core.FrameManager: void setContext(android.filterfw.core.FilterContext)> ->_NONE_
<android.telephony.CellInfoLte: void setCellSignalStrength(android.telephony.CellSignalStrengthLte)> ->_NONE_
<net.oauth.OAuth: java.lang.String percentEncode(java.lang.String)> ->_NONE_
<android.content.ContextWrapper: android.content.res.AssetManager getAssets()> ->_NONE_
<android.widget.RemoteViews: void setUser(android.os.UserHandle)> ->_NONE_
<javax.crypto.spec.PBEParameterSpec: int getIterationCount()> ->_NONE_
<android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getChildFragmentManager()> ->_NONE_
<java.text.DateFormatSymbols: void setShortMonths(java.lang.String[])> ->_NONE_
<android.view.KeyEvent: char getNumber()> ->_NONE_
<android.accounts.AccountManager: java.lang.String getPassword(android.accounts.Account)> ->_NONE_
<java.security.spec.RSAMultiPrimePrivateCrtKeySpec: java.math.BigInteger getPublicExponent()> ->_NONE_
<gov.nist.core.Host: void setHost(java.lang.String,int)> ->_NONE_
<android.widget.AbsListView: float getTopFadingEdgeStrength()> ->_NONE_
<android.location.GpsStatus: int getMaxSatellites()> ->_NONE_
<org.apache.xpath.compiler.OpMapVector: void setToSize(int)> ->_NONE_
<android.content.pm.PackageParser: java.security.cert.Certificate[] loadCertificates(java.util.jar.JarFile,java.util.jar.JarEntry,byte[])> ->_NONE_
<net.oauth.OAuthMessage: void addRequiredParameters(net.oauth.OAuthAccessor)> ->_NONE_
<android.telephony.TelephonyManager: int getDataActivity()> ->_NONE_
<org.apache.commons.codec.language.Metaphone: int getMaxCodeLen()> ->_NONE_
<android.graphics.drawable.ClipDrawable: boolean setVisible(boolean,boolean)> ->_NONE_
<org.apache.xml.serializer.utils.URI: java.lang.String getFragment()> ->_NONE_
<android.graphics.SurfaceTexture: void setDefaultBufferSize(int,int)> ->_NONE_
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script$KernelID getKernelIDDstIn()> ->_NONE_
<android.net.sip.SipManager: android.net.sip.SipSession getSessionFor(android.content.Intent)> ->_NONE_
<android.telephony.PhoneStateListener: void onDataConnectionStateChanged(int,int)> ->_NONE_
<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node getRootDocument()> ->_NONE_
<gov.nist.javax.sip.address.AddressImpl: void setDisplayName(java.lang.String)> ->_NONE_
<android.media.videoeditor.MediaArtistNativeHelper: int getVideoTransitionBehaviour(int)> ->_NONE_
<android.os.AsyncTask: android.os.AsyncTask$Status getStatus()> ->_NONE_
<android.test.mock.MockPackageManager: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)> ->_NONE_
<gov.nist.core.GenericObject: java.lang.String debugDump(int)> ->_NONE_
<android.renderscript.Script: void setVar(int,android.renderscript.FieldPacker,android.renderscript.Element,int[])> ->_NONE_
<javax.crypto.Cipher: javax.crypto.Cipher getCipher(java.lang.String,java.security.Provider)> ->_NONE_
<java.sql.Timestamp: void setNanos(int)> ->_NONE_
<org.kxml2.io.KXmlParser: void setFeature(java.lang.String,boolean)> ->_NONE_
<android.speech.tts.TextToSpeech: int addSpeech(java.lang.String,java.lang.String)> ->_NONE_
<android.filterfw.core.ShaderProgram: void setBlendEnabled(boolean)> ->_NONE_
<android.telephony.SignalStrength: int getGsmLevel()> ->_NONE_
<android.nfc.Tag: byte[] getId()> ->_NONE_
<android.view.DragEvent: java.lang.Object getLocalState()> ->_NONE_
<android.media.videoeditor.Transition: java.lang.String getId()> ->_NONE_
<org.apache.harmony.security.asn1.DerOutputStream: void getSequenceLength(org.apache.harmony.security.asn1.ASN1Sequence)> ->_NONE_
<org.jivesoftware.smack.XMPPConnection: void setDefaultAccountId(long)> ->_NONE_
<org.xmlpull.v1.sax2.Driver: void setEntityResolver(org.xml.sax.EntityResolver)> ->_NONE_
<android.widget.ExpandableListView: void setAdapter(android.widget.ListAdapter)> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getChild(int)> ->_NONE_
<org.apache.harmony.security.x509.KeyUsage: byte[] getEncoded()> ->_NONE_
<jp.co.omronsoft.openwnn.JAJP.OpenWnnClauseConverterJAJP: void setDictionary(jp.co.omronsoft.openwnn.WnnDictionary)> ->_NONE_
<java.util.Calendar: java.util.Calendar getInstance()> ->_NONE_
<android.filterfw.core.ShaderProgram: void setClearColor(float,float,float)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: java.util.LinkedList getMessageAsEncodedStrings()> ->_NONE_
<android.net.NetworkInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<java.net.HttpURLConnection: void setFollowRedirects(boolean)> ->_NONE_
<android.content.IntentFilter: android.content.IntentFilter$AuthorityEntry getDataAuthority(int)> ->_NONE_
<android.animation.PropertyValuesHolder: void setObjectValues(java.lang.Object[])> ->_NONE_
<gov.nist.javax.sip.stack.MessageProcessor: java.lang.String getTransport()> ->_NONE_
<org.jivesoftware.smack.ConnectionConfiguration: int getPort()> ->_NONE_
<org.apache.xpath.axes.UnionPathIterator: int getAxis()> ->_NONE_
<org.apache.commons.io.output.NullWriter: void write(char[])> ->_NONE_
<android.opengl.ManagedEGLContext: javax.microedition.khronos.egl.EGLContext getContext()> ->_NONE_
<org.apache.http.impl.auth.NTLMScheme: boolean isConnectionBased()> ->_NONE_
<android.animation.PropertyValuesHolder: java.lang.Object getAnimatedValue()> ->_NONE_
<android.text.method.DialerKeyListener: char[] getAcceptedChars()> ->_NONE_
<libcore.net.url.FileURLConnection: int getContentLength()> ->_NONE_
<android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)> ->_NONE_
<android.net.http.AndroidHttpClientConnection: int getRemotePort()> ->_NONE_
<java.security.Timestamp: java.security.cert.CertPath getSignerCertPath()> ->_NONE_
<gov.nist.javax.sip.address.SipUri: java.lang.StringBuffer encode(java.lang.StringBuffer)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.SipProviderImpl getSipProvider()> ->_NONE_
<android.view.inputmethod.InputMethodManager: java.util.List getEnabledInputMethodSubtypeList(android.view.inputmethod.InputMethodInfo,boolean)> ->_NONE_
<android.location.Address: void setFeatureName(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.extensions.References: java.lang.String getCallId()> ->_NONE_
<android.media.AudioRecord: int getChannelCount()> ->_NONE_
<javax.xml.parsers.DocumentBuilderFactory: void setNamespaceAware(boolean)> ->_NONE_
<javax.obex.ServerRequestHandler: void setConnectionId(long)> ->_NONE_
<android.net.LinkAddress: int getNetworkPrefixLength()> ->_NONE_
<android.graphics.drawable.ColorDrawable: void setColor(int)> ->_NONE_
<java.security.cert.CertPathValidatorException: java.security.cert.CertPath getCertPath()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.NativeCrypto: byte[][] encodeCertificates(java.security.cert.Certificate[])> ->_NONE_
<android.os.storage.StorageManager: android.os.storage.StorageVolume[] getVolumeList()> ->_NONE_
<java.security.cert.X509CertSelector: void setSubjectAlternativeNames(java.util.Collection)> ->_NONE_
<org.apache.harmony.xml.dom.ElementImpl: short getNodeType()> ->_NONE_
<android.support.v4.app.NavUtils: android.content.Intent getParentActivityIntent(android.app.Activity)> ->_NONE_
<android.graphics.Paint: android.graphics.Rasterizer setRasterizer(android.graphics.Rasterizer)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getDocumentRoot()> ->_NONE_
<gov.nist.javax.sip.header.MimeVersion: int getMajorVersion()> ->_NONE_
<android.webkit.WebSettings: android.webkit.WebSettings$ZoomDensity getDefaultZoom()> ->_NONE_
<gov.nist.javax.sip.header.Organization: void setOrganization(java.lang.String)> ->_NONE_
<org.apache.xml.serializer.utils.SerializerMessages_ko: java.lang.Object[][] getContents()> ->_NONE_
<java.text.DecimalFormat: java.lang.String getPositiveSuffix()> ->_NONE_
<org.apache.harmony.security.x509.tsp.TSTInfo: java.util.Date getGenTime()> ->_NONE_
<android.text.style.SpellCheckSpan: int getSpanTypeId()> ->_NONE_
<org.apache.xalan.transformer.TransformerHandlerImpl: void processingInstruction(java.lang.String,java.lang.String)> ->_NONE_
<android.net.http.Headers: void getHeaders(android.net.http.Headers$HeaderCallback)> ->_NONE_
<org.apache.http.client.HttpResponseException: int getStatusCode()> ->_NONE_
<android.app.ExpandableListActivity: void setListAdapter(android.widget.ExpandableListAdapter)> ->_NONE_
<javax.xml.parsers.DocumentBuilderFactory: void setSchema(javax.xml.validation.Schema)> ->_NONE_
<org.apache.xml.serializer.ToTextSAXHandler: void setOutputFormat(java.util.Properties)> ->_NONE_
<java.net.URLConnection: java.net.URL getURL()> ->_NONE_
<javax.security.cert.X509Certificate: javax.security.cert.X509Certificate getInstance(byte[])> ->_NONE_
<org.apache.xalan.templates.OutputProperties: int getIntProperty(org.apache.xml.utils.QName)> ->_NONE_
<android.media.videoeditor.OverlayFrame: void setFilename(java.lang.String)> ->_NONE_
<android.bluetooth.BluetoothPan: java.util.List getConnectedDevices()> ->_NONE_
<android.mtp.MtpDevice: byte[] getObject(int,int)> ->_NONE_
<org.apache.xpath.functions.FuncContains: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<android.content.res.Resources: java.lang.CharSequence getText(int,java.lang.CharSequence)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setFocusable(java.lang.Object,boolean)> ->_NONE_
<android.net.wifi.p2p.WifiP2pWfdInfo: void setCoupledSinkSupportAtSink(boolean)> ->_NONE_
<org.apache.commons.codec.net.RFC1522Codec: java.lang.String decodeText(java.lang.String)> ->_NONE_
<android.content.ContentProviderProxy: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.address.TelURLImpl: java.lang.StringBuffer encode(java.lang.StringBuffer)> ->_NONE_
<android.app.MediaRouteActionProvider: android.app.Activity getActivity()> ->_NONE_
<org.kxml2.io.KXmlSerializer: void entityRef(java.lang.String)> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: java.lang.String getField(java.lang.String)> ->_NONE_
<org.apache.xml.utils.UnImplNode: java.lang.String getPrefix()> ->_NONE_
<android.appwidget.AppWidgetManager: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo(int)> ->_NONE_
<javax.sip.RequestEvent: javax.sip.message.Request getRequest()> ->_NONE_
<libcore.net.http.RequestHeaders: java.lang.String getAcceptEncoding()> ->_NONE_
<android.server.search.Searchables: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> ->_NONE_
<android.app.ActivityManagerProxy: void finishInstrumentation(android.app.IApplicationThread,int,android.os.Bundle)> ->_NONE_
<java.net.Inet6Address: int getScopeId()> ->_NONE_
<android.emoji.EmojiFactory: int getVendorSpecificPuaFromAndroidPua(int)> ->_NONE_
<org.xml.sax.helpers.AttributeListImpl: java.lang.String getType(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: java.lang.String getDocumentTypeDeclarationPublicIdentifier()> ->_NONE_
<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getKey()> ->_NONE_
<android.support.v4.content.CursorLoader: java.lang.String getSortOrder()> ->_NONE_
<android.content.ContentProviderProxy: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.ICancellationSignal)> ->_NONE_
<android.graphics.drawable.LayerDrawable: int getId(int)> ->_NONE_
<android.telephony.PhoneNumberFormattingTextWatcher: java.lang.String getFormattedNumber(char,boolean)> ->_NONE_
<android.support.v4.app.HCSparseArray: java.lang.Object get(int,java.lang.Object)> ->_NONE_
<libcore.io.IoBridge: int read(java.io.FileDescriptor,byte[],int,int)> ->_NONE_
<android.filterfw.core.SimpleFrame: void setInts(int[])> ->_NONE_
<android.widget.RemoteViewsAdapter: java.util.ArrayList getVisibleWindow(int,int,int)> ->_NONE_
<android.webkit.WebSettingsClassic: boolean getUseWebViewBackgroundForOverscrollBackground()> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getBaseIdentifier()> ->_NONE_
<java.util.concurrent.atomic.AtomicStampedReference: void set(java.lang.Object,int)> ->_NONE_
<android.view.View: int getFadeHeight(boolean)> ->_NONE_
<org.apache.harmony.xml.ExpatAttributes: java.lang.String getLocalName(int)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: char[] getStringValueChunk(int,int,int[])> ->_NONE_
<gov.nist.javax.sip.header.Challenge: java.lang.String getSignedBy()> ->_NONE_
<android.location.Location: void setAltitude(double)> ->_NONE_
<gov.nist.javax.sip.header.Supported: java.lang.String encodeBody()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: void setEnabledProtocols(java.lang.String[])> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: void setStack(gov.nist.javax.sip.stack.SIPTransactionStack)> ->_NONE_
<java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.security.Provider)> ->_NONE_
<org.ccil.cowan.tagsoup.ElementType: void setParent(org.ccil.cowan.tagsoup.ElementType)> ->_NONE_
<android.content.res.AssetManager: java.lang.CharSequence[] getResourceTextArray(int)> ->_NONE_
<net.oauth.OAuthMessage: void sign(net.oauth.OAuthAccessor)> ->_NONE_
<android.telephony.gsm.SmsMessage: int getIndexOnIcc()> ->_NONE_
<android.preference.SwitchPreference: java.lang.CharSequence getSwitchTextOff()> ->_NONE_
<junit.runner.BaseTestRunner: junit.framework.Test getTest(java.lang.String)> ->_NONE_
<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)> ->_NONE_
<java.net.URLStreamHandler: void setURL(java.net.URL,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)> ->_NONE_
<android.view.SurfaceView: android.view.SurfaceHolder$Callback[] getSurfaceCallbacks()> ->_NONE_
<android.nfc.tech.MifareClassic: int getSize()> ->_NONE_
<java.util.logging.Logger: java.util.logging.Logger getAnonymousLogger(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.message.Request createRequest(javax.sip.address.URI,java.lang.String,javax.sip.header.CallIdHeader,javax.sip.header.CSeqHeader,javax.sip.header.FromHeader,javax.sip.header.ToHeader,java.util.List,javax.sip.header.MaxForwardsHeader,javax.sip.header.ContentTypeHeader,java.lang.Object)> ->_NONE_
<java.net.Socket: void setSendBufferSize(int)> ->_NONE_
<android.support.v4.view.VelocityTrackerCompat: float getYVelocity(android.view.VelocityTracker,int)> ->_NONE_
<android.app.ActivityManagerProxy: boolean shutdown(int)> ->_NONE_
<android.graphics.drawable.GradientDrawable: int getIntrinsicHeight()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setPassword(boolean)> ->_NONE_
<android.content.IntentSender: void sendIntent(android.content.Context,int,android.content.Intent,android.content.IntentSender$OnFinished,android.os.Handler)> ->_NONE_
<android.webkit.WebView: java.lang.String getTitle()> ->_NONE_
<android.widget.CursorAdapter: void setFilterQueryProvider(android.widget.FilterQueryProvider)> ->_NONE_
<android.webkit.WebViewClassic: void saveViewState(java.io.OutputStream,android.webkit.ValueCallback)> ->_NONE_
<org.apache.xalan.transformer.SerializerSwitcher: java.lang.String getOutputPropertyNoDefault(java.lang.String,java.util.Properties)> ->_NONE_
<android.app.FragmentState: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.widget.ExpandableListView: long getChildOrGroupId(android.widget.ExpandableListPosition)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int getActions()> ->_NONE_
<org.apache.http.message.BufferedHeader: org.apache.http.util.CharArrayBuffer getBuffer()> ->_NONE_
<android.support.v4.view.ViewPager: void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)> ->_NONE_
<gov.nist.javax.sip.parser.CSeqParser: gov.nist.javax.sip.header.SIPHeader parse()> ->_NONE_
<android.os.RegistrantList: java.lang.Object get(int)> ->_NONE_
<java.text.SimpleDateFormat: java.text.DateFormatSymbols getDateFormatSymbols()> ->_NONE_
<android.app.LoaderManagerImpl: android.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks)> ->_NONE_
<gov.nist.javax.sip.header.ims.PServedUser: void setSessionCase(java.lang.String)> ->_NONE_
<android.net.wifi.WifiNative: boolean setCountryCode(java.lang.String)> ->_NONE_
<android.view.accessibility.AccessibilityRecord: long getSourceNodeId()> ->_NONE_
<android.net.http.RequestQueue: org.apache.http.HttpHost getProxyHost()> ->_NONE_
<org.javia.arity.Function: org.javia.arity.Function getDerivative()> ->_NONE_
<java.security.cert.X509CertSelector: void setBasicConstraints(int)> ->_NONE_
<org.jivesoftware.smack.PacketReader: org.jivesoftware.smack.packet.HttpResponse parseHttpResponse(com.google.common.io.protocol.ProtoBuf)> ->_NONE_
<jp.co.omronsoft.openwnn.OpenWnnDictionaryImpl: jp.co.omronsoft.openwnn.WnnWord getNextWord(int)> ->_NONE_
<android.view.accessibility.AccessibilityRecord: void setScrollable(boolean)> ->_NONE_
<javax.security.auth.Subject: java.util.Set getPrincipals()> ->_NONE_
<android.content.pm.ApplicationInfo: android.content.pm.ApplicationInfo getApplicationInfo()> ->_NONE_
<gov.nist.javax.sip.stack.MessageProcessor: gov.nist.javax.sip.ListeningPointImpl getListeningPoint()> ->_NONE_
<android.media.videoeditor.Overlay: long getDuration()> ->_NONE_
<org.apache.xalan.transformer.Counter: int getPreviouslyCounted(org.apache.xpath.XPathContext,int)> ->_NONE_
<gov.nist.javax.sip.message.ContentImpl: void setContentDispositionHeader(javax.sip.header.ContentDispositionHeader)> ->_NONE_
<android.text.StaticLayout: int getLineCount()> ->_NONE_
<android.app.ActivityThread: void handleDumpService(android.app.ActivityThread$DumpComponentInfo)> ->_NONE_
<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String)> ->_NONE_
<android.view.ViewRootImpl: int getRootMeasureSpec(int,int)> ->_NONE_
<org.apache.harmony.xml.parsers.DocumentBuilderImpl: void setCoalescing(boolean)> ->_NONE_
<android.webkit.BrowserDownloadListener: void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)> ->_NONE_
<android.ddm.DdmHandleAppName: java.lang.String getAppName()> ->_NONE_
<org.apache.xml.serializer.SecuritySupport12: long getLastModified(java.io.File)> ->_NONE_
<android.app.SearchableInfo: java.lang.String getSuggestIntentAction()> ->_NONE_
<android.widget.PopupWindow: int getHeight()> ->_NONE_
<android.net.MobileDataStateTracker: void setUserDataEnable(boolean)> ->_NONE_
<org.jivesoftware.smack.packet.BindAccountResponse: void setJid(java.lang.String)> ->_NONE_
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLetters(android.content.ComponentName)> ->_NONE_
<android.hardware.usb.UsbInterface: int getId()> ->_NONE_
<gov.nist.javax.sip.header.ims.SecurityAgree: int getSPIServer()> ->_NONE_
<android.telephony.gsm.SmsMessage: java.lang.String getServiceCenterAddress()> ->_NONE_
<java.security.spec.ECParameterSpec: java.security.spec.ECPoint getGenerator()> ->_NONE_
<android.app.Fragment: android.app.FragmentManager getFragmentManager()> ->_NONE_
<android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)> ->_NONE_
<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.NodeList getChildNodes()> ->_NONE_
<javax.crypto.EncryptedPrivateKeyInfo: java.security.AlgorithmParameters getAlgParameters()> ->_NONE_
<java.util.SimpleTimeZone: void setStartYear(int)> ->_NONE_
<org.apache.harmony.security.x509.AuthorityKeyIdentifier: byte[] getEncoded()> ->_NONE_
<android.net.LocalSocketImpl: java.io.OutputStream getOutputStream()> ->_NONE_
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: int getServiceType()> ->_NONE_
<android.view.View: android.graphics.drawable.Drawable getBackground()> ->_NONE_
<org.apache.xalan.templates.ElemNumber: void setFormat(org.apache.xalan.templates.AVT)> ->_NONE_
<gov.nist.javax.sip.message.SIPRequest: java.lang.String getDialogId(boolean,java.lang.String)> ->_NONE_
<org.apache.commons.io.output.LockableFileWriter: void write(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.address.SipUri: gov.nist.core.HostPort getHostPort()> ->_NONE_
<org.apache.xml.dtm.ref.SecuritySupport: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)> ->_NONE_
<java.util.logging.Level: java.lang.String getName()> ->_NONE_
<android.widget.ProgressBar: android.graphics.drawable.Drawable getIndeterminateDrawable()> ->_NONE_
<android.media.effect.effects.IdentityEffect: void setParameter(java.lang.String,java.lang.Object)> ->_NONE_
<android.widget.GridLayout: void setColumnOrderPreserved(boolean)> ->_NONE_
<libcore.io.Posix: int sendto(java.io.FileDescriptor,byte[],int,int,int,java.net.InetAddress,int)> ->_NONE_
<gov.nist.javax.sip.header.ims.SecurityAgree: java.lang.String getEncryptionAlgorithm()> ->_NONE_
<org.apache.james.mime4j.field.MailboxField: org.apache.james.mime4j.field.address.Mailbox getMailbox()> ->_NONE_
<org.ccil.cowan.tagsoup.Parser: void pitarget(char[],int,int)> ->_NONE_
<java.util.MissingFormatWidthException: java.lang.String getFormatSpecifier()> ->_NONE_
<android.view.HardwareRenderer: void setEnabled(boolean)> ->_NONE_
<android.telephony.SignalStrength: int getGsmSignalStrength()> ->_NONE_
<android.drm.DrmInfoRequest: java.lang.Object get(java.lang.String)> ->_NONE_
<java.util.concurrent.Phaser: java.util.concurrent.Phaser getParent()> ->_NONE_
<android.os.Bundle: long getLong(java.lang.String,long)> ->_NONE_
<org.apache.harmony.security.x509.tsp.TSTInfo: org.apache.harmony.security.x509.GeneralName getTsa()> ->_NONE_
<java.net.CookieStoreImpl: java.util.List get(java.net.URI)> ->_NONE_
<android.content.SyncManager: void dumpRecentHistory(java.io.PrintWriter)> ->_NONE_
<java.text.MessageFormat: java.lang.Object[] parse(java.lang.String)> ->_NONE_
<javax.obex.ServerSession: void sendResponse(int,byte[])> ->_NONE_
<org.apache.xml.serializer.ToXMLStream: void addUniqueAttribute(java.lang.String,java.lang.String,int)> ->_NONE_
<org.apache.harmony.xml.dom.DocumentFragmentImpl: short getNodeType()> ->_NONE_
<android.support.v4.view.PagerAdapter: void finishUpdate(android.view.ViewGroup)> ->_NONE_
<android.view.animation.GridLayoutAnimationController: int getDirection()> ->_NONE_
<java.math.BigDecimal: java.math.BigDecimal setScale(int)> ->_NONE_
<android.widget.DatePicker: boolean parseDate(java.lang.String,java.util.Calendar)> ->_NONE_
<android.widget.ExpandableListConnector: int getCount()> ->_NONE_
<android.test.TestRunner: java.lang.String getTitle(java.lang.String)> ->_NONE_
<android.app.admin.DevicePolicyManager: int getMaximumFailedPasswordsForWipe(android.content.ComponentName,int)> ->_NONE_
<org.apache.http.message.BasicHttpResponse: void setStatusLine(org.apache.http.ProtocolVersion,int,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.stack.SIPStackTimerTask: void run()> ->_NONE_
<android.telephony.TelephonyManager: java.lang.String getLine1Number()> ->_NONE_
<android.app.backup.BackupHelperDispatcher: void performRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)> ->_NONE_
<android.mtp.MtpStorage: long getMaxFileSize()> ->_NONE_
<libcore.io.IoBridge: java.lang.Object getSocketOption(java.io.FileDescriptor,int)> ->_NONE_
<android.net.http.Headers: java.lang.String getProxyAuthenticate()> ->_NONE_
<dalvik.system.profiler.BinaryHprofReader: java.lang.String readClass()> ->_NONE_
<android.preference.Preference: android.content.Context getContext()> ->_NONE_
<android.app.Activity: void setResult(int)> ->_NONE_
<android.webkit.WebViewClassic: int getBaseLayer()> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)> ->_NONE_
<org.apache.harmony.security.asn1.ASN1GeneralizedTime: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)> ->_NONE_
<org.apache.xml.serializer.SecuritySupport12: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)> ->_NONE_
<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence)> ->_NONE_
<dalvik.system.profiler.BinaryHprofReader: boolean getStrict()> ->_NONE_
<org.apache.xpath.functions.FuncRound: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<org.apache.http.impl.conn.tsccm.AbstractConnPool: void closeExpiredConnections()> ->_NONE_
<org.ccil.cowan.tagsoup.Parser: java.io.Reader getReader(org.xml.sax.InputSource)> ->_NONE_
<android.content.res.TypedArray: int getInteger(int,int)> ->_NONE_
<java.nio.MappedByteBufferAdapter: char getChar(int)> ->_NONE_
<android.webkit.WebSettingsClassic: void setMinimumFontSize(int)> ->_NONE_
<android.graphics.Paint: int getTextGlyphs(java.lang.String,int,int,int,int,int,char[])> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: javax.net.ssl.SSLSession getSession()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: boolean getReuseAddress()> ->_NONE_
<android.widget.CalendarView: void setOnDateChangeListener(android.widget.CalendarView$OnDateChangeListener)> ->_NONE_
<android.view.KeyEvent: int getDeadChar(int,int)> ->_NONE_
<org.apache.harmony.xml.dom.ElementImpl: org.w3c.dom.NamedNodeMap getAttributes()> ->_NONE_
<gov.nist.javax.sip.address.SipUri: java.util.Iterator getParameterNames()> ->_NONE_
<android.app.PendingIntent: android.os.UserHandle getCreatorUserHandle()> ->_NONE_
<android.view.ViewDebug: java.lang.reflect.Method[] getExportedPropertyMethods(java.lang.Class)> ->_NONE_
<android.security.AndroidKeyPairGeneratorSpec: java.math.BigInteger getSerialNumber()> ->_NONE_
<org.apache.http.impl.io.AbstractMessageParser: org.apache.http.Header[] parseHeaders(org.apache.http.io.SessionInputBuffer,int,int,org.apache.http.message.LineParser)> ->_NONE_
<android.os.Build: java.lang.String getRadioVersion()> ->_NONE_
<org.apache.http.impl.cookie.BestMatchSpec: java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin)> ->_NONE_
<android.support.v4.app.LoaderManagerImpl: android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.ConnectionState: int getFragmentSize(int)> ->_NONE_
<android.graphics.drawable.PictureDrawable: void setAlpha(int)> ->_NONE_
<android.view.View: java.util.ArrayList getTouchables()> ->_NONE_
<android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.stack.HopImpl: java.lang.String getTransport()> ->_NONE_
<gov.nist.javax.sip.header.SubscriptionState: java.lang.String encodeBody()> ->_NONE_
<java.text.FieldPosition: void setBeginIndex(int)> ->_NONE_
<android.media.AudioRecord: int getAudioFormat()> ->_NONE_
<android.webkit.WebViewClassic: void animateHandle(boolean,android.animation.ObjectAnimator,android.graphics.Point,int,android.webkit.WebViewClassic$SelectionHandleAlpha)> ->_NONE_
<org.apache.harmony.security.x509.PrivateKeyUsagePeriod: byte[] getEncoded()> ->_NONE_
<android.support.v4.view.ViewConfigurationCompat: int getScaledPagingTouchSlop(android.view.ViewConfiguration)> ->_NONE_
<org.apache.harmony.xml.dom.CDATASectionImpl: short getNodeType()> ->_NONE_
<android.preference.DialogPreference: java.lang.CharSequence getDialogMessage()> ->_NONE_
<java.util.SimpleTimeZone: int getDSTSavings()> ->_NONE_
<android.net.UrlQuerySanitizer: boolean getPreferFirstRepeatedParameter()> ->_NONE_
<org.apache.http.HttpHost: java.lang.String getSchemeName()> ->_NONE_
<android.view.inputmethod.BaseInputConnection: int getCursorCapsMode(int)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.Node getFirstChild()> ->_NONE_
<android.view.animation.Animation: boolean getTransformation(long,android.view.animation.Transformation,float)> ->_NONE_
<android.accounts.AccountManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> ->_NONE_
<android.view.View: void setScaleY(float)> ->_NONE_
<android.view.View: void setScaleX(float)> ->_NONE_
<org.apache.http.impl.cookie.RFC2109Spec: org.apache.http.Header getVersionHeader()> ->_NONE_
<gov.nist.javax.sip.header.RequestLine: java.lang.StringBuffer encode(java.lang.StringBuffer)> ->_NONE_
<android.text.SpannableStringBuilder: android.text.Editable replace(int,int,java.lang.CharSequence,int,int)> ->_NONE_
<android.graphics.drawable.BitmapDrawable: void setFilterBitmap(boolean)> ->_NONE_
<android.os.Bundle: java.lang.ClassLoader getClassLoader()> ->_NONE_
<android.widget.ScrollBarDrawable: boolean getAlwaysDrawVerticalTrack()> ->_NONE_
<android.view.ViewGroup: void setDescendantFocusability(int)> ->_NONE_
<android.widget.TextView: void setShowSoftInputOnFocus(boolean)> ->_NONE_
<org.apache.harmony.xml.dom.DocumentTypeImpl: java.lang.String getInternalSubset()> ->_NONE_
<javax.crypto.spec.DHPrivateKeySpec: java.math.BigInteger getX()> ->_NONE_
<android.server.search.SearchManagerService: android.content.ComponentName getAssistIntent(int)> ->_NONE_
<android.widget.CalendarView: void setDate(long)> ->_NONE_
<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)> ->_NONE_
<android.media.AudioService: void doSetMasterVolume(float,int)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setSource(android.view.View)> ->_NONE_
<org.apache.xalan.extensions.ExtensionNamespaceSupport: java.lang.String getNamespace()> ->_NONE_
<java.util.logging.LogRecord: void setLevel(java.util.logging.Level)> ->_NONE_
<android.location.Address: void setCountryCode(java.lang.String)> ->_NONE_
<android.widget.SimpleAdapter: void setViewImage(android.widget.ImageView,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest getLastAckReceived()> ->_NONE_
<android.media.JetPlayer: boolean loadJetFile(java.lang.String)> ->_NONE_
<libcore.net.http.HttpEngine: javax.net.ssl.SSLSocketFactory getSslSocketFactory()> ->_NONE_
<android.media.audiofx.EnvironmentalReverb: android.media.audiofx.EnvironmentalReverb$Settings getProperties()> ->_NONE_
<java.lang.Package: java.lang.annotation.Annotation[] getDeclaredAnnotations()> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)> ->_NONE_
<android.text.method.TimeKeyListener: int getInputType()> ->_NONE_
<org.jivesoftware.smack.XMPPException: org.jivesoftware.smack.packet.StreamError getStreamError()> ->_NONE_
<android.app.ContextImpl: java.io.File getDir(java.lang.String,int)> ->_NONE_
<gov.nist.javax.sip.header.extensions.SessionExpires: void setValue(java.lang.String)> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: void setUserTokenHandler(org.apache.http.client.UserTokenHandler)> ->_NONE_
<android.speech.tts.TtsEngines: java.lang.String getHighestRankedEngineName()> ->_NONE_
<android.appwidget.AppWidgetHostView: android.content.Context getRemoteContext(android.widget.RemoteViews)> ->_NONE_
<org.apache.xpath.XPathContext: int getPredicatePos()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore: org.apache.harmony.security.x509.SubjectKeyIdentifier getSubjectKeyIdentifier(java.security.cert.X509Certificate)> ->_NONE_
<java.net.ServerSocket: java.net.InetAddress getInetAddress()> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.MaxForwardsHeader getMaxForwards()> ->_NONE_
<android.support.v13.app.FragmentStatePagerAdapter: void finishUpdate(android.view.ViewGroup)> ->_NONE_
<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTElementDef[] getElements()> ->_NONE_
<org.apache.harmony.security.pkcs8.PrivateKeyInfo: byte[] getEncoded()> ->_NONE_
<android.hardware.SerialPort: void write(java.nio.ByteBuffer,int)> ->_NONE_
<android.widget.AbsListView: android.util.SparseBooleanArray getCheckedItemPositions()> ->_NONE_
<java.net.URLConnection: java.io.InputStream getInputStream()> ->_NONE_
<android.filterfw.core.GLFrame: void setFloats(float[])> ->_NONE_
<java.text.DateFormat: java.util.Date parse(java.lang.String)> ->_NONE_
<org.apache.xml.serializer.ToTextStream: void ignorableWhitespace(char[],int,int)> ->_NONE_
<org.apache.xalan.templates.AVT: java.lang.String getURI()> ->_NONE_
<org.jivesoftware.smack.XMPPConnection: void setRmq2Manager(com.google.android.gsf.gtalkservice.rmq.Rmq2Manager)> ->_NONE_
<java.net.MulticastSocket: boolean getLoopbackMode()> ->_NONE_
<org.jivesoftware.smack.ConnectionConfiguration: void setTruststorePassword(java.lang.String)> ->_NONE_
<android.net.wifi.WifiNative: void setScanInterval(int)> ->_NONE_
<android.view.inputmethod.InputMethodManager: void sendAppPrivateCommand(android.view.View,java.lang.String,android.os.Bundle)> ->_NONE_
<android.webkit.WebSettingsClassic: void setLinkPrefetchEnabled(boolean)> ->_NONE_
<android.content.ContentService: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String)> ->_NONE_
<android.os.Debug: void dumpHprofData(java.lang.String,java.io.FileDescriptor)> ->_NONE_
<android.preference.PreferenceManager: void setFragment(android.preference.PreferenceFragment)> ->_NONE_
<android.media.AudioService: int getMode()> ->_NONE_
<org.apache.harmony.xml.ExpatReader: boolean getFeature(java.lang.String)> ->_NONE_
<android.media.RingtoneManager: int getRingtonePosition(android.net.Uri)> ->_NONE_
<org.apache.xml.utils.UnImplNode: org.w3c.dom.Text replaceWholeText(java.lang.String)> ->_NONE_
<libcore.net.http.RequestHeaders: java.lang.String getConnection()> ->_NONE_
<android.app.ActivityManagerProxy: boolean willActivityBeVisible(android.os.IBinder)> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getQop()> ->_NONE_
<android.widget.HorizontalScrollView: void setOverScrollMode(int)> ->_NONE_
<libcore.util.ZoneInfo: void setRawOffset(int)> ->_NONE_
<java.text.CollationElementIterator: void setText(java.lang.String)> ->_NONE_
<android.content.ContentResolver: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String)> ->_NONE_
<android.database.sqlite.SQLiteDatabase: int executeSql(java.lang.String,java.lang.Object[])> ->_NONE_
<android.net.ConnectivityManager: int getNetworkPreference()> ->_NONE_
<android.webkit.WebSettingsClassic: void setDefaultTextEncodingName(java.lang.String)> ->_NONE_
<java.util.concurrent.ForkJoinPool: void execute(java.lang.Runnable)> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Explicit: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)> ->_NONE_
<android.widget.PopupWindow: void setLayoutInScreenEnabled(boolean)> ->_NONE_
<android.telephony.gsm.SmsMessage: android.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,byte[])> ->_NONE_
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long,long,long,int)> ->_NONE_
<android.view.GLES20Canvas: int setupModifiers(android.graphics.Paint)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.PinFailureLogger: void log(java.lang.String,boolean,boolean,java.util.List)> ->_NONE_
<android.test.ApplicationTestCase: android.content.Context getSystemContext()> ->_NONE_
<android.text.style.MetricAffectingSpan: android.text.style.CharacterStyle getUnderlying()> ->_NONE_
<gov.nist.javax.sip.header.ims.PUserDatabase: void setValue(java.lang.String)> ->_NONE_
<org.apache.xml.utils.UnImplNode: org.w3c.dom.Attr setAttributeNodeNS(org.w3c.dom.Attr)> ->_NONE_
<android.mtp.MtpDevice: long getParent(int)> ->_NONE_
<android.media.audiofx.Visualizer: int setEnabled(boolean)> ->_NONE_
<android.net.rtp.AudioGroup: int getMode()> ->_NONE_
<org.xmlpull.v1.sax2.Driver: void setContentHandler(org.xml.sax.ContentHandler)> ->_NONE_
<org.jivesoftware.smack.provider.RawXmlExtensionProvider: int getTag()> ->_NONE_
<org.apache.http.client.methods.HttpRequestBase: void setReleaseTrigger(org.apache.http.conn.ConnectionReleaseTrigger)> ->_NONE_
<org.apache.harmony.security.x509.tsp.PKIFailureInfo: int getMaxValue()> ->_NONE_
<android.net.sip.SipAudioCall: void sendDtmf(int,android.os.Message)> ->_NONE_
<android.content.SyncStorageEngine: void readPendingOperationsLocked()> ->_NONE_
<javax.crypto.spec.DHPrivateKeySpec: java.math.BigInteger getG()> ->_NONE_
<libcore.io.Posix: int pread(java.io.FileDescriptor,java.nio.ByteBuffer,long)> ->_NONE_
<javax.crypto.spec.DHPrivateKeySpec: java.math.BigInteger getP()> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertImpl: javax.security.auth.x500.X500Principal getSubjectX500Principal()> ->_NONE_
<android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)> ->_NONE_
<gov.nist.javax.sip.header.Accept: java.lang.String getContentType()> ->_NONE_
<libcore.net.url.JarURLConnectionImpl: java.security.Permission getPermission()> ->_NONE_
<org.apache.xalan.templates.DecimalFormatProperties: char getZeroDigit()> ->_NONE_
<android.support.v4.widget.CursorAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)> ->_NONE_
<org.apache.xalan.templates.TemplateSubPatternAssociation: void setNext(org.apache.xalan.templates.TemplateSubPatternAssociation)> ->_NONE_
<android.app.WallpaperInfo: void dump(android.util.Printer,java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: void setTcpNoDelay(boolean)> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: void setDialogId(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.extensions.Join: void setFromTag(java.lang.String)> ->_NONE_
<android.webkit.WebSettingsClassic: int getCacheMode()> ->_NONE_
<org.apache.james.mime4j.message.Message: void writeTo(java.io.OutputStream)> ->_NONE_
<org.apache.james.mime4j.decoder.DecoderUtil: byte[] decodeBaseQuotedPrintable(java.lang.String)> ->_NONE_
<java.text.MessageFormat: void setLocale(java.util.Locale)> ->_NONE_
<org.apache.xalan.processor.ProcessorOutputElem: void setOmitXmlDeclaration(boolean)> ->_NONE_
<android.graphics.drawable.ShapeDrawable: void setIntrinsicHeight(int)> ->_NONE_
<android.app.WallpaperInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)> ->_NONE_
<android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)> ->_NONE_
<org.apache.commons.io.output.ByteArrayOutputStream: int write(java.io.InputStream)> ->_NONE_
<gov.nist.javax.sip.header.extensions.Replaces: void setCallIdentifier(gov.nist.javax.sip.header.CallIdentifier)> ->_NONE_
<gov.nist.javax.sip.header.Via: void setBranch(java.lang.String)> ->_NONE_
<android.widget.RemoteViews: void setTextColor(int,int)> ->_NONE_
<org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)> ->_NONE_
<android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.ConnectionStateSSLv3: byte[] decrypt(byte,byte[],int,int)> ->_NONE_
<android.webkit.WebSettings: void setDatabaseEnabled(boolean)> ->_NONE_
<org.apache.harmony.xml.dom.NodeImpl: void setTextContent(java.lang.String)> ->_NONE_
<org.apache.xml.utils.QName: java.lang.String getPrefixFromXMLNSDecl(java.lang.String)> ->_NONE_
<android.widget.CursorTreeAdapter: int getChildrenCount(int)> ->_NONE_
<libcore.util.ZoneInfoDB: java.lang.String getVersion()> ->_NONE_
<org.apache.harmony.security.asn1.ASN1BitString: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)> ->_NONE_
<android.view.accessibility.AccessibilityRecord: void setParcelableData(android.os.Parcelable)> ->_NONE_
<android.net.NetworkStatsHistory: long getEnd()> ->_NONE_
<java.sql.Date: void setSeconds(int)> ->_NONE_
<android.view.MotionEvent: long getDownTime()> ->_NONE_
<android.media.videoeditor.OverlayFrame: int getResizedRGBSizeHeight()> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: java.lang.String getAddressFieldHome(java.lang.String)> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: void setVisibleToUser(boolean)> ->_NONE_
<android.webkit.HTML5VideoInline: android.graphics.SurfaceTexture getSurfaceTexture(int)> ->_NONE_
<android.view.inputmethod.InputBinding: android.view.inputmethod.InputConnection getConnection()> ->_NONE_
<android.preference.MultiCheckPreference: java.lang.CharSequence getSummary()> ->_NONE_
<org.apache.xml.serializer.utils.SystemIDResolver: java.lang.String getAbsoluteURIFromRelative(java.lang.String)> ->_NONE_
<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()> ->_NONE_
<org.apache.xpath.compiler.OpMap: int getFirstChildPos(int)> ->_NONE_
<org.apache.xpath.patterns.StepPattern: void setExpression(org.apache.xpath.Expression)> ->_NONE_
<java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getApplicationLogo(java.lang.String)> ->_NONE_
<android.filterfw.core.ProgramVariable: android.filterfw.core.Program getProgram()> ->_NONE_
<org.apache.commons.codec.language.DoubleMetaphone: java.lang.String encode(java.lang.String)> ->_NONE_
<android.webkit.CallbackProxy: android.webkit.BrowserFrame createWindow(boolean,boolean)> ->_NONE_
<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator getLocator()> ->_NONE_
<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit)> ->_NONE_
<org.apache.xml.utils.SecuritySupport: long getLastModified(java.io.File)> ->_NONE_
<org.apache.xalan.templates.RedundentExprEliminator: int getPseudoVarID()> ->_NONE_
<gov.nist.javax.sip.message.SIPRequest: java.lang.Object getTransaction()> ->_NONE_
<java.security.cert.X509CertSelector: void setPolicy(java.util.Set)> ->_NONE_
<gov.nist.javax.sip.header.StatusLine: java.lang.String getVersionMinor()> ->_NONE_
<java.util.concurrent.locks.AbstractQueuedSynchronizer: int getState()> ->_NONE_
<org.jivesoftware.smack.packet.Packet: void setProperty(java.lang.String,java.lang.Object)> ->_NONE_
<android.bluetooth.BluetoothAdapter: boolean setName(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.From: void setTag(java.lang.String)> ->_NONE_
<org.apache.james.mime4j.field.contenttype.parser.TokenMgrError: java.lang.String addEscapes(java.lang.String)> ->_NONE_
<org.kxml2.io.KXmlParser: void setInput(java.io.Reader)> ->_NONE_
<android.widget.RatingBar: void setMax(int)> ->_NONE_
<android.content.SyncAdapterType: boolean supportsUploading()> ->_NONE_
<android.net.NetworkInfo: void setIsAvailable(boolean)> ->_NONE_
<android.view.ViewRootImpl: void dispatchAppVisibility(boolean)> ->_NONE_
<org.apache.xml.serializer.ToStream: void outputEntityDecl(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xalan.res.XSLTErrorResources: org.apache.xalan.res.XSLTErrorResources loadResourceBundle(java.lang.String)> ->_NONE_
<android.filterfw.core.Filter: android.filterfw.core.FrameFormat getInputFormat(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.ims.PServedUser: java.lang.String encodeBody()> ->_NONE_
<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)> ->_NONE_
<java.util.SimpleTimeZone: void setStartRule(int,int,int,int,boolean)> ->_NONE_
<android.graphics.Bitmap: int getScaledWidth(int)> ->_NONE_
<libcore.net.http.HttpConnection: java.io.OutputStream getOutputStream()> ->_NONE_
<android.view.textservice.SuggestionsInfo: int getSequence()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: void sendMessage(gov.nist.javax.sip.message.SIPMessage)> ->_NONE_
<android.widget.SimpleCursorTreeAdapter: void setViewImage(android.widget.ImageView,java.lang.String)> ->_NONE_
<android.webkit.WebViewClassic: float getDefaultZoomScale()> ->_NONE_
<org.apache.harmony.security.x509.tsp.TSTInfo: java.lang.Boolean getOrdering()> ->_NONE_
<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme get(java.lang.String)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties getOutputFormat()> ->_NONE_
<org.apache.xalan.processor.StylesheetHandler: double getElemVersion()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.DHParameters: byte[] getPrime()> ->_NONE_
<android.util.Property: java.lang.Class getType()> ->_NONE_
<android.view.View: int getTop()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: void setData(java.lang.String)> ->_NONE_
<android.graphics.Matrix: void getValues(float[])> ->_NONE_
<org.apache.xalan.templates.ElemElement: void execute(org.apache.xalan.transformer.TransformerImpl)> ->_NONE_
<android.webkit.WebSettings: void setAppCacheEnabled(boolean)> ->_NONE_
<org.jivesoftware.smack.RosterEntry: void setVCard(org.jivesoftware.smackx.packet.VCard)> ->_NONE_
<android.bluetooth.BluetoothInputDevice: boolean setReport(android.bluetooth.BluetoothDevice,byte,java.lang.String)> ->_NONE_
<java.lang.System: void setSecurityManager(java.lang.SecurityManager)> ->_NONE_
<gov.nist.javax.sip.address.TelURLImpl: void setPostDial(java.lang.String)> ->_NONE_
<javax.net.ssl.HttpsURLConnection: void setHostnameVerifier(javax.net.ssl.HostnameVerifier)> ->_NONE_
<android.accessibilityservice.UiTestAutomationBridge: android.view.accessibility.AccessibilityEvent executeCommandAndWaitForAccessibilityEvent(java.lang.Runnable,com.android.internal.util.Predicate,long)> ->_NONE_
<org.apache.commons.io.output.CountingOutputStream: int getCount()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLEngine: org.apache.harmony.xnet.provider.jsse.OpenSSLEngine getInstance(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.TypeInfo getSchemaTypeInfo()> ->_NONE_
<android.content.BroadcastReceiver: void setResultCode(int)> ->_NONE_
<org.jivesoftware.smackx.packet.MUCUser: void setStatus(org.jivesoftware.smackx.packet.MUCUser$Status)> ->_NONE_
<android.content.res.Resources: java.lang.CharSequence getText(int)> ->_NONE_
<org.apache.xalan.templates.ElemExtensionDecl: void setPrefix(java.lang.String)> ->_NONE_
<org.jivesoftware.smack.GroupChat: java.lang.String getRoom()> ->_NONE_
<org.jivesoftware.smack.packet.Packet: java.lang.String getExtensionsXML()> ->_NONE_
<android.filterfw.core.GLFrame: java.lang.Object getObjectValue()> ->_NONE_
<org.apache.harmony.xml.dom.DOMErrorImpl: java.lang.String getMessage()> ->_NONE_
<libcore.icu.ICU: java.util.Locale[] getAvailableDecimalFormatSymbolsLocales()> ->_NONE_
<android.graphics.drawable.ShapeDrawable: void setColorFilter(android.graphics.ColorFilter)> ->_NONE_
<java.io.FilterOutputStream: void write(byte[],int,int)> ->_NONE_
<android.net.nsd.DnsSdTxtRecord: java.lang.String getKey(int)> ->_NONE_
<android.net.ThrottleManager: long getCliffThreshold(java.lang.String,int)> ->_NONE_
<android.view.ViewDebug: void dumpViewProperties(android.content.Context,java.lang.Object,java.io.BufferedWriter,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.SIPServerTransaction getRetransmissionAlertTransaction(java.lang.String)> ->_NONE_
<android.text.style.RelativeSizeSpan: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.bluetooth.BluetoothA2dp: java.util.List getConnectedDevices()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: int getSoLinger()> ->_NONE_
<org.apache.xpath.axes.OneStepIterator: int getAxis()> ->_NONE_
<android.graphics.YuvImage: int getHeight()> ->_NONE_
<org.apache.james.mime4j.field.address.parser.TokenMgrError: java.lang.String addEscapes(java.lang.String)> ->_NONE_
<java.net.DatagramSocketImpl: int getLocalPort()> ->_NONE_
<android.webkit.WebSettingsClassic: void setMinimumLogicalFontSize(int)> ->_NONE_
<android.app.Activity: android.app.LoaderManager getLoaderManager()> ->_NONE_
<org.apache.harmony.security.x509.tsp.TimeStampResp: org.apache.harmony.security.x509.tsp.PKIStatusInfo getStatus()> ->_NONE_
<android.webkit.HTML5VideoView: void setOnPreparedListener(android.webkit.HTML5VideoViewProxy)> ->_NONE_
<android.widget.Spinner: void setAdapter(android.widget.SpinnerAdapter)> ->_NONE_
<org.apache.xalan.templates.OutputProperties: boolean getBooleanProperty(java.lang.String)> ->_NONE_
<org.jivesoftware.smack.PacketReader: org.jivesoftware.smack.packet.Packet parseBindAccountResponse(com.google.common.io.protocol.ProtoBuf)> ->_NONE_
<org.apache.http.impl.conn.tsccm.WaitingThread: java.lang.Thread getThread()> ->_NONE_
<android.content.Intent: short getShortExtra(java.lang.String,short)> ->_NONE_
<android.telephony.CellIdentityGsm: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getDrawable(java.lang.String,int,android.content.pm.ApplicationInfo)> ->_NONE_
<android.media.AudioService: boolean handleDeviceConnection(boolean,int,java.lang.String)> ->_NONE_
<android.graphics.PathMeasure: float getLength()> ->_NONE_
<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier getHostnameVerifier()> ->_NONE_
<org.apache.harmony.xml.ExpatReader: void setLexicalHandler(org.xml.sax.ext.LexicalHandler)> ->_NONE_
<android.drm.DrmManagerClient: int getEventType(int)> ->_NONE_
<org.apache.xalan.templates.OutputProperties: void setBooleanProperty(java.lang.String,boolean)> ->_NONE_
<android.support.v4.view.ViewCompatHC: void setLayerType(android.view.View,int,android.graphics.Paint)> ->_NONE_
<javax.obex.ClientSession: boolean sendRequest(int,byte[],javax.obex.HeaderSet,javax.obex.PrivateInputStream)> ->_NONE_
<android.webkit.BrowserFrame: java.lang.String getRawResFilename(int)> ->_NONE_
<android.media.videoeditor.MediaVideoItem: int getVideoLevel()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: void setEnabledCipherSuites(java.lang.String[])> ->_NONE_
<android.opengl.GLLogWrapper: java.lang.String getFaceName(int)> ->_NONE_
<javax.xml.namespace.QName: java.lang.String getLocalPart()> ->_NONE_
<java.security.spec.ECPublicKeySpec: java.security.spec.ECParameterSpec getParams()> ->_NONE_
<org.apache.http.message.BasicHttpResponse: org.apache.http.HttpEntity getEntity()> ->_NONE_
<android.app.SearchManager: void setOnCancelListener(android.app.SearchManager$OnCancelListener)> ->_NONE_
<net.oauth.OAuthMessage: java.lang.String getBodyType()> ->_NONE_
<android.app.DownloadManager: android.os.ParcelFileDescriptor openDownloadedFile(long)> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: void setSourceLocation()> ->_NONE_
<java.security.cert.X509CertSelector: java.security.cert.X509Certificate getCertificate()> ->_NONE_
<org.apache.harmony.xml.dom.NotationImpl: short getNodeType()> ->_NONE_
<org.apache.xml.serializer.dom3.LSSerializerImpl: java.lang.String getXMLVersion(org.w3c.dom.Node)> ->_NONE_
<android.nfc.tech.BasicTagTechnology: void reconnect()> ->_NONE_
<android.graphics.Canvas: void setMatrix(android.graphics.Matrix)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getNextDescendant(int,int)> ->_NONE_
<android.widget.AbsSeekBar: void setMax(int)> ->_NONE_
<jp.co.omronsoft.openwnn.JAJP.DefaultSoftKeyboardJAJP: void setHardware12Keyboard(boolean)> ->_NONE_
<java.security.Security: java.security.Provider[] getProviders()> ->_NONE_
<android.net.wifi.p2p.WifiP2pDeviceList: void updateGroupCapability(java.lang.String,int)> ->_NONE_
<android.preference.Preference: android.content.SharedPreferences getSharedPreferences()> ->_NONE_
<android.widget.Spinner: void setPrompt(java.lang.CharSequence)> ->_NONE_
<android.widget.LinearLayout: void setGravity(int)> ->_NONE_
<java.text.DecimalFormat: java.lang.String getNegativePrefix()> ->_NONE_
<android.net.sip.SipAudioCall: android.net.rtp.AudioStream getAudioStream()> ->_NONE_
<org.apache.xml.utils.DefaultErrorHandler: void error(javax.xml.transform.TransformerException)> ->_NONE_
<gov.nist.core.Host: void setHostname(java.lang.String)> ->_NONE_
<android.view.DisplayInfo: void getAppMetrics(android.util.DisplayMetrics,android.view.CompatibilityInfoHolder)> ->_NONE_
<android.webkit.WebViewCore: void sendPluginDrawMsg()> ->_NONE_
<android.drm.DrmEvent: java.lang.Object getAttribute(java.lang.String)> ->_NONE_
<android.widget.AbsListView: int getBottomPaddingOffset()> ->_NONE_
<android.widget.ScrollBarDrawable: void setColorFilter(android.graphics.ColorFilter)> ->_NONE_
<net.oauth.OAuth: boolean isFormEncoded(java.lang.String)> ->_NONE_
<org.apache.xalan.processor.ProcessorInclude: int getStylesheetType()> ->_NONE_
<android.net.Credentials: int getGid()> ->_NONE_
<android.nfc.tech.BasicTagTechnology: boolean isConnected()> ->_NONE_
<java.nio.IntArrayBuffer: java.nio.IntBuffer get(int[],int,int)> ->_NONE_
<android.media.AudioManager: int getRingerMode()> ->_NONE_
<android.support.v4.app.NavUtilsJB: android.content.Intent getParentActivityIntent(android.app.Activity)> ->_NONE_
<android.content.SyncStorageEngine: android.util.Pair parsePeriodicSync(org.xmlpull.v1.XmlPullParser,android.content.SyncStorageEngine$AuthorityInfo)> ->_NONE_
<org.apache.commons.codec.language.Soundex: int getMaxLength()> ->_NONE_
<gov.nist.javax.sip.message.MultipartMimeContentImpl: javax.sip.header.ContentTypeHeader getContentTypeHeader()> ->_NONE_
<android.content.ContentProviderProxy: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)> ->_NONE_
<android.location.LocationProvider: int getAccuracy()> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)> ->_NONE_
<junit.textui.TestRunner: void runFailed(java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.CertificateVerify: int getType()> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: java.security.Principal getPeerPrincipal()> ->_NONE_
<jp.co.omronsoft.openwnn.JAJP.DefaultSoftKeyboardJAJP: int getShiftKeyState(android.view.inputmethod.EditorInfo)> ->_NONE_
<android.content.pm.PackageParser: void setSeparateProcesses(java.lang.String[])> ->_NONE_
<junit.textui.ResultPrinter: void startTest(junit.framework.Test)> ->_NONE_
<android.support.v4.app.NavUtilsJB: java.lang.String getParentActivityName(android.content.pm.ActivityInfo)> ->_NONE_
<android.widget.TextView: boolean getLinksClickable()> ->_NONE_
<android.widget.TableRow: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)> ->_NONE_
<gov.nist.javax.sip.stack.TLSMessageChannel: void sendMessage(byte[],java.net.InetAddress,int,boolean)> ->_NONE_
<android.telephony.CellIdentityGsm: void log(java.lang.String)> ->_NONE_
<org.apache.xpath.axes.FilterExprIteratorSimple: org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)> ->_NONE_
<android.webkit.SelectActionModeCallback: void setTextSelected(boolean)> ->_NONE_
<android.net.BaseNetworkStateTracker: void setTeardownRequested(boolean)> ->_NONE_
<android.app.ListFragment: android.widget.ListView getListView()> ->_NONE_
<android.content.res.Resources: void getValueForDensity(int,int,android.util.TypedValue,boolean)> ->_NONE_
<android.widget.ImageSwitcher: void setImageDrawable(android.graphics.drawable.Drawable)> ->_NONE_
<org.apache.james.mime4j.decoder.DecoderUtil: java.lang.String decodeEncodedWords(java.lang.String)> ->_NONE_
<android.webkit.WebSettings: boolean getJavaScriptEnabled()> ->_NONE_
<android.view.ViewGroup: void setChildrenDrawingOrderEnabled(boolean)> ->_NONE_
<android.util.XmlPullAttributes: int getAttributeCount()> ->_NONE_
<android.graphics.drawable.InsetDrawable: void setAlpha(int)> ->_NONE_
<gov.nist.javax.sip.header.SIPHeaderList: java.lang.Class getMyClass()> ->_NONE_
<android.mtp.MtpDevice: int[] getObjectHandles(int,int,int)> ->_NONE_
<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: void setFrom(javax.sip.header.FromHeader)> ->_NONE_
<org.apache.xml.utils.res.XResources_zh_TW: java.lang.Object[][] getContents()> ->_NONE_
<android.graphics.Paint: float getTextRunAdvances(java.lang.CharSequence,int,int,int,int,int,float[],int,int)> ->_NONE_
<android.accounts.AccountManagerService: android.accounts.Account[] getAccounts(int)> ->_NONE_
<java.util.logging.LogRecord: java.util.logging.Level getLevel()> ->_NONE_
<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: org.apache.james.mime4j.field.contenttype.parser.Token getNextToken()> ->_NONE_
<org.apache.http.impl.conn.DefaultClientConnection: org.apache.http.io.HttpMessageParser createResponseParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams)> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: void setDocumentLocator(org.xml.sax.Locator)> ->_NONE_
<android.widget.TextView: int getLineAtCoordinate(float)> ->_NONE_
<android.graphics.NinePatch: int getWidth()> ->_NONE_
<java.util.HugeEnumSet: void setRange(java.lang.Enum,java.lang.Enum)> ->_NONE_
<android.webkit.CallbackProxy: android.webkit.WebResourceResponse shouldInterceptRequest(java.lang.String)> ->_NONE_
<javax.xml.datatype.XMLGregorianCalendar: int getMillisecond()> ->_NONE_
<android.database.sqlite.SQLiteConnection: void dumpUnsafe(android.util.Printer,boolean)> ->_NONE_
<android.net.sip.SipAudioCall: void setListener(android.net.sip.SipAudioCall$Listener)> ->_NONE_
<org.apache.xml.serializer.ToStream: boolean setLineSepUse(boolean)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setContentDescription(java.lang.CharSequence)> ->_NONE_
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()> ->_NONE_
<android.view.ViewGroup: void setLayoutTransition(android.animation.LayoutTransition)> ->_NONE_
<android.app.Instrumentation: boolean invokeContextMenuAction(android.app.Activity,int,int)> ->_NONE_
<libcore.net.url.FtpURLConnection: java.io.InputStream getInputStream()> ->_NONE_
<gov.nist.javax.sip.header.SubscriptionState: void setState(java.lang.String)> ->_NONE_
<android.database.sqlite.SQLiteDatabase: java.util.Map getSyncedTables()> ->_NONE_
<android.os.storage.StorageVolume: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.ServerHello: int getType()> ->_NONE_
<android.view.View: android.view.View$OnFocusChangeListener getOnFocusChangeListener()> ->_NONE_
<org.apache.http.params.HttpProtocolParamBean: void setContentCharset(java.lang.String)> ->_NONE_
<android.hardware.usb.UsbInterface: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.view.ViewRootImpl: void dispatchInvalidateRectDelayed(android.view.View$AttachInfo$InvalidateInfo,long)> ->_NONE_
<java.util.concurrent.ForkJoinPool: long getStealCount()> ->_NONE_
<android.support.v13.app.FragmentTabHost: void setup(android.content.Context,android.app.FragmentManager,int)> ->_NONE_
<java.lang.Class: java.lang.reflect.Constructor getEnclosingConstructor()> ->_NONE_
<java.net.InetSocketAddress: java.net.InetAddress getAddress()> ->_NONE_
<android.net.NetworkPolicyManager: void setUidPolicy(int,int)> ->_NONE_
<android.graphics.drawable.LayerDrawable: void setColorFilter(android.graphics.ColorFilter)> ->_NONE_
<org.jivesoftware.smackx.ServiceDiscoveryManager: void setNodeInformationProvider(java.lang.String,org.jivesoftware.smackx.NodeInformationProvider)> ->_NONE_
<java.sql.DriverManager: void setLogWriter(java.io.PrintWriter)> ->_NONE_
<junit.framework.TestCase: java.lang.String getName()> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: java.lang.String getLastName()> ->_NONE_
<java.net.URLConnection: void setContentHandlerFactory(java.net.ContentHandlerFactory)> ->_NONE_
<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()> ->_NONE_
<org.apache.xpath.operations.Variable: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)> ->_NONE_
<org.apache.james.mime4j.field.ContentTransferEncodingField: java.lang.String getEncoding()> ->_NONE_
<android.app.ActivityManagerProxy: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,boolean)> ->_NONE_
<android.database.sqlite.SQLiteSession: android.os.ParcelFileDescriptor executeForBlobFileDescriptor(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)> ->_NONE_
<org.apache.xpath.XPath: javax.xml.transform.SourceLocator getLocator()> ->_NONE_
<javax.crypto.spec.DHPublicKeySpec: java.math.BigInteger getG()> ->_NONE_
<android.net.http.Headers: void setWwwAuthenticate(java.lang.String)> ->_NONE_
<android.widget.TextView: void getFocusedRect(android.graphics.Rect)> ->_NONE_
<android.support.v4.view.MenuCompat: boolean setShowAsAction(android.view.MenuItem,int)> ->_NONE_
<gov.nist.core.Host: java.lang.String getAddress()> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: java.lang.String getResponseMessage()> ->_NONE_
<android.gesture.GestureStroke: android.graphics.Path getPath()> ->_NONE_
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)> ->_NONE_
<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()> ->_NONE_
<javax.crypto.spec.DHPublicKeySpec: java.math.BigInteger getP()> ->_NONE_
<org.apache.xml.utils.URI: java.lang.String getPath(boolean,boolean)> ->_NONE_
<android.inputmethodservice.KeyboardView: void setProximityCorrectionEnabled(boolean)> ->_NONE_
<javax.crypto.spec.DHPublicKeySpec: java.math.BigInteger getY()> ->_NONE_
<org.apache.xml.utils.UnImplNode: java.lang.Object getUserData(java.lang.String)> ->_NONE_
<java.io.ObjectInputStream: int readUnsignedShort()> ->_NONE_
<android.net.NetworkPolicyManager: int getUidPolicy(int)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: javax.sip.address.Router getRouter()> ->_NONE_
<android.inputmethodservice.InputMethodService: boolean getCurrentInputStarted()> ->_NONE_
<android.webkit.ZoomManager: boolean onNewPicture(android.webkit.WebViewCore$DrawData)> ->_NONE_
<java.net.URLConnection: java.util.Map getRequestProperties()> ->_NONE_
<java.net.NetworkInterface: java.lang.String getDisplayName()> ->_NONE_
<org.apache.xalan.templates.ElemElement: java.lang.String getNodeName()> ->_NONE_
<android.webkit.WebHistoryItemClassic: android.graphics.Bitmap getFavicon()> ->_NONE_
<org.apache.http.impl.conn.tsccm.BasicPoolEntry: long getValidUntil()> ->_NONE_
<android.webkit.WebViewFragment: android.webkit.WebView getWebView()> ->_NONE_
<android.widget.PopupWindow: void setWindowLayoutType(int)> ->_NONE_
<org.apache.harmony.security.x509.TBSCertificate: int getVersion()> ->_NONE_
<android.gesture.GestureOverlayView: void setOrientation(int)> ->_NONE_
<org.xml.sax.helpers.XMLFilterImpl: void setProperty(java.lang.String,java.lang.Object)> ->_NONE_
<android.hardware.Sensor: java.lang.String getName()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean: void setSource(java.lang.Object,android.view.View,int)> ->_NONE_
<android.content.BroadcastReceiver: void setResult(int,java.lang.String,android.os.Bundle)> ->_NONE_
<org.apache.harmony.security.asn1.ASN1SetOf: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)> ->_NONE_
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthTokenLabel(java.lang.String,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler)> ->_NONE_
<android.webkit.WebSettingsClassic: boolean getBlockNetworkImage()> ->_NONE_
<android.filterpacks.imageproc.VignetteFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)> ->_NONE_
<org.apache.xml.utils.XMLStringDefault: void getChars(int,int,char[],int)> ->_NONE_
<java.text.NumberFormat: void setParseIntegerOnly(boolean)> ->_NONE_
<android.os.Environment: java.io.File getExternalStorageAppMediaDirectory(java.lang.String)> ->_NONE_
<android.service.dreams.DreamService: boolean getSystemUiVisibilityFlagValue(int,boolean)> ->_NONE_
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute)> ->_NONE_
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getClassName()> ->_NONE_
<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)> ->_NONE_
<org.apache.xml.serializer.ToSAXHandler: void setCdataSectionElements(java.util.Vector)> ->_NONE_
<android.widget.AppSecurityPermissions: void getAllUsedPermissions(int,java.util.Set)> ->_NONE_
<java.net.URI: java.lang.String getSchemeSpecificPart()> ->_NONE_
<java.nio.MappedByteBufferAdapter: short getShort()> ->_NONE_
<android.speech.srec.UlawEncoderInputStream: void encode(byte[],int,byte[],int,int,int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.lang.String[] getSupportedProtocols()> ->_NONE_
<org.apache.commons.io.CopyUtils: void copy(byte[],java.io.Writer,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.ListeningPointImpl: gov.nist.javax.sip.stack.MessageProcessor getMessageProcessor()> ->_NONE_
<android.filterfw.core.VertexFrame: void setBitmap(android.graphics.Bitmap)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: void setLocaterInfo(javax.xml.transform.SourceLocator)> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.AuthenticationHandler createTargetAuthenticationHandler()> ->_NONE_
<org.apache.xalan.templates.StylesheetRoot: java.util.Vector getExtensions()> ->_NONE_
<java.net.PlainDatagramSocketImpl: void connect(java.net.InetAddress,int)> ->_NONE_
<org.xml.sax.ext.Attributes2Impl: void setAttributes(org.xml.sax.Attributes)> ->_NONE_
<org.apache.http.params.HttpProtocolParams: void setUnmappableInputAction(org.apache.http.params.HttpParams,java.nio.charset.CodingErrorAction)> ->_NONE_
<android.test.ApplicationTestCase: android.app.Application getApplication()> ->_NONE_
<net.oauth.ConsumerProperties: java.util.Properties getProperties(java.net.URL)> ->_NONE_
<android.graphics.Paint: void getTextPath(java.lang.String,int,int,float,float,android.graphics.Path)> ->_NONE_
<gov.nist.javax.sip.header.SIPObject: boolean equals(java.lang.Object)> ->_NONE_
<libcore.net.url.FtpHandler: java.net.URLConnection openConnection(java.net.URL,java.net.Proxy)> ->_NONE_
<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: void setXMLSource(javax.xml.transform.Source)> ->_NONE_
<org.apache.xpath.axes.AxesWalker: int getRoot()> ->_NONE_
<gov.nist.javax.sip.header.ims.SecurityClient: void setValue(java.lang.String)> ->_NONE_
<android.content.res.Resources: java.lang.CharSequence[] getTextArray(int)> ->_NONE_
<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setClickable(boolean)> ->_NONE_
<android.accounts.ChooseTypeAndAccountActivity: java.util.Set getReleventAccountTypes(android.content.Intent)> ->_NONE_
<android.telephony.ServiceState: int getSystemId()> ->_NONE_
<org.apache.xpath.axes.NodeSequence: boolean getExpandEntityReferences()> ->_NONE_
<android.content.SyncStorageEngine: java.util.ArrayList getPendingOperations()> ->_NONE_
<org.jivesoftware.smack.util.PacketParserUtils: long getLongOrDefault(com.google.common.io.protocol.ProtoBuf,int,long)> ->_NONE_
<android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()> ->_NONE_
<android.widget.RemoteViews: void setChar(int,java.lang.String,char)> ->_NONE_
<android.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)> ->_NONE_
<android.bluetooth.BluetoothServerSocket: void setCloseHandler(android.os.Handler,int)> ->_NONE_
<gov.nist.javax.sip.header.CSeq: void setSeqNumber(long)> ->_NONE_
<android.os.Message: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.lang.String[] getEnabledProtocols()> ->_NONE_
<android.filterfw.core.StreamPort: void setFrame(android.filterfw.core.Frame)> ->_NONE_
<org.apache.http.impl.conn.ProxySelectorRoutePlanner: java.lang.String getHost(java.net.InetSocketAddress)> ->_NONE_
<java.net.HttpCookie: java.lang.String getDomain()> ->_NONE_
<android.text.SpanSet: int getNextTransition(int,int)> ->_NONE_
<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.lang.String)> ->_NONE_
<android.support.v4.app.Fragment: int getTargetRequestCode()> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: java.util.Vector processSortKeys(org.apache.xalan.templates.ElemForEach,int)> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.cookie.CookieSpecRegistry getCookieSpecs()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: void setThreadPoolSize(int)> ->_NONE_
<org.apache.james.mime4j.field.AddressListField: org.apache.james.mime4j.field.address.parser.ParseException getParseException()> ->_NONE_
<org.apache.xml.serializer.SerializerBase: void setEncoding(java.lang.String)> ->_NONE_
<java.lang.ThreadGroup: java.lang.String getName()> ->_NONE_
<android.widget.RemoteViewsAdapter: int getItemViewType(int)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: boolean getProperty(java.lang.String)> ->_NONE_
<org.apache.xpath.patterns.NodeTest: org.apache.xpath.objects.XNumber getStaticScore()> ->_NONE_
<android.view.accessibility.AccessibilityEvent: void setAction(int)> ->_NONE_
<android.preference.PreferenceCategory: boolean onPrepareAddPreference(android.preference.Preference)> ->_NONE_
<android.webkit.WebViewClassic: void setHorizontalScrollbarOverlay(boolean)> ->_NONE_
<android.net.nsd.NsdManager: void resolveService(android.net.nsd.NsdServiceInfo,android.net.nsd.NsdManager$ResolveListener)> ->_NONE_
<android.util.Base64: byte[] encode(byte[],int,int,int)> ->_NONE_
<android.os.UpdateLock: void setReferenceCounted(boolean)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore: java.security.cert.Certificate getCertificate(java.lang.String,boolean)> ->_NONE_
<android.hardware.usb.UsbDeviceConnection: int getFileDescriptor()> ->_NONE_
<android.filterfw.core.Filter: int getNumberOfInputs()> ->_NONE_
<android.filterpacks.imageproc.DrawOverlayFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<java.security.cert.CollectionCertStoreParameters: java.util.Collection getCollection()> ->_NONE_
<org.jivesoftware.smack.ConnectionConfiguration: void setSelfSignedCertificateEnabled(boolean)> ->_NONE_
<org.apache.xpath.res.XPATHErrorResources: org.apache.xpath.res.XPATHErrorResources loadResourceBundle(java.lang.String)> ->_NONE_
<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)> ->_NONE_
<org.apache.xalan.xslt.SecuritySupport: org.apache.xalan.xslt.SecuritySupport getInstance()> ->_NONE_
<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.DocumentType getDoctype()> ->_NONE_
<javax.security.auth.callback.PasswordCallback: char[] getPassword()> ->_NONE_
<android.app.Fragment: void setArguments(android.os.Bundle)> ->_NONE_
<android.util.MonthDisplayHelper: int getOffset()> ->_NONE_
<java.nio.IntArrayBuffer: int get(int)> ->_NONE_
<gov.nist.javax.sip.header.RAck: void setRSequenceNumber(long)> ->_NONE_
<org.apache.xml.dtm.SecuritySupport: java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader)> ->_NONE_
<android.support.v4.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle)> ->_NONE_
<android.webkit.CallbackProxy: void onReceivedError(int,java.lang.String,java.lang.String)> ->_NONE_
<libcore.net.http.RequestHeaders: int getMaxAgeSeconds()> ->_NONE_
<android.widget.HeaderViewListAdapter: int getCount()> ->_NONE_
<java.security.cert.CertStore: java.util.Collection getCertificates(java.security.cert.CertSelector)> ->_NONE_
<android.net.wifi.p2p.WifiP2pManager: void setWFDInfo(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pWfdInfo,android.net.wifi.p2p.WifiP2pManager$ActionListener)> ->_NONE_
<android.net.http.AndroidHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)> ->_NONE_
<gov.nist.javax.sip.address.SipUri: java.lang.String getHeader(java.lang.String)> ->_NONE_
<android.widget.ActivityChooserModel: boolean readHistoricalDataIfNeeded()> ->_NONE_
<org.apache.xalan.templates.ElemCopyOf: java.lang.String getNodeName()> ->_NONE_
<org.apache.commons.io.IOUtils: void write(byte[],java.io.Writer)> ->_NONE_
<android.media.videoeditor.MediaProperties: int[] getAllSupportedAspectRatios()> ->_NONE_
<org.apache.xalan.templates.ElemOtherwise: java.lang.String getNodeName()> ->_NONE_
<net.oauth.signature.OAuthSignatureMethod: java.util.List getParameters(java.util.Collection)> ->_NONE_
<android.app.ContextImpl: android.content.pm.PackageManager getPackageManager()> ->_NONE_
<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.address.SipUri parseSIPUrl(java.lang.String)> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: void setText(java.lang.CharSequence)> ->_NONE_
<net.oauth.client.OAuthClient: void getRequestToken(net.oauth.OAuthAccessor)> ->_NONE_
<android.widget.RemoteViews: void setEmptyView(int,int)> ->_NONE_
<org.apache.http.impl.SocketHttpServerConnection: void setSocketTimeout(int)> ->_NONE_
<org.apache.xml.utils.res.XResources_ja_JP_A: java.lang.Object[][] getContents()> ->_NONE_
<org.apache.xml.dtm.SecuritySupport: java.lang.ClassLoader getContextClassLoader()> ->_NONE_
<android.widget.AlphabetIndexer: java.lang.Object[] getSections()> ->_NONE_
<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getType(int)> ->_NONE_
<android.widget.ExpandableListView: void setGroupIndicator(android.graphics.drawable.Drawable)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: byte[] getNpnSelectedProtocol()> ->_NONE_
<android.support.v4.app.ActivityCompatHoneycomb: void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> ->_NONE_
<android.net.sip.SipProfile: int getPort()> ->_NONE_
<org.apache.commons.logging.impl.SimpleLog: void write(java.lang.StringBuffer)> ->_NONE_
<java.net.HttpCookie: void setVersion(int)> ->_NONE_
<org.xml.sax.helpers.AttributesImpl: java.lang.String getType(java.lang.String)> ->_NONE_
<java.security.cert.CRL: java.lang.String getType()> ->_NONE_
<android.graphics.RectF: boolean setIntersect(android.graphics.RectF,android.graphics.RectF)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)> ->_NONE_
<android.widget.AbsListView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)> ->_NONE_
<android.webkit.CallbackProxy: void setDownloadListener(android.webkit.DownloadListener)> ->_NONE_
<android.opengl.GLLogWrapper: int getIntegerStateFormat(int)> ->_NONE_
<android.speech.tts.TtsEngines: void updateLocalePrefForEngine(java.lang.String,java.lang.String)> ->_NONE_
<java.security.cert.X509CRLSelector: java.math.BigInteger getMaxCRL()> ->_NONE_
<android.text.method.DateTimeKeyListener: android.text.method.DateTimeKeyListener getInstance()> ->_NONE_
<android.view.MotionEvent: float getHistoricalPressure(int,int)> ->_NONE_
<org.apache.xalan.templates.ElemLiteralResult: void setExtensionElementPrefixes(org.apache.xml.utils.StringVector)> ->_NONE_
<android.filterpacks.videosrc.CameraSource: android.hardware.Camera$Parameters getCameraParameters()> ->_NONE_
<org.apache.xml.dtm.ref.ExpandedNameTable: int getExpandedTypeID(int)> ->_NONE_
<org.apache.xpath.compiler.OpMap: int getArgLengthOfStep(int)> ->_NONE_
<java.nio.HeapByteBuffer: long getLong(int)> ->_NONE_
<java.lang.Thread: java.lang.String getName()> ->_NONE_
<android.content.ContentProvider: android.os.ParcelFileDescriptor openPipeHelper(android.net.Uri,java.lang.String,android.os.Bundle,java.lang.Object,android.content.ContentProvider$PipeDataWriter)> ->_NONE_
<org.apache.harmony.lang.annotation.AnnotationFactory: org.apache.harmony.lang.annotation.AnnotationMember[] getElementsDescription(java.lang.Class)> ->_NONE_
<org.apache.xpath.axes.WalkerFactory: org.apache.xpath.axes.AxesWalker loadWalkers(org.apache.xpath.axes.WalkingIterator,org.apache.xpath.compiler.Compiler,int,int)> ->_NONE_
<android.database.AbstractCursor: int getColumnIndex(java.lang.String)> ->_NONE_
<android.net.http.Headers: void setContentEncoding(java.lang.String)> ->_NONE_
<java.util.zip.Deflater: void setInput(byte[])> ->_NONE_
<org.ccil.cowan.tagsoup.PYXWriter: void setDocumentLocator(org.xml.sax.Locator)> ->_NONE_
<android.net.http.ErrorStrings: int getResource(int)> ->_NONE_
<org.jivesoftware.smack.packet.DataMessage: int getAppDataSize()> ->_NONE_
<android.webkit.WebViewCore: void access$400(android.webkit.WebViewCore,int,long)> ->_NONE_
<java.net.DatagramPacket: void setData(byte[])> ->_NONE_
<java.text.DecimalFormat: int getGroupingSize()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore: java.security.cert.X509Certificate readCertificate(java.io.File)> ->_NONE_
<android.util.XmlPullAttributes: int getAttributeUnsignedIntValue(int,int)> ->_NONE_
<android.util.TypedValue: void setTo(android.util.TypedValue)> ->_NONE_
<org.apache.http.message.AbstractHttpMessage: org.apache.http.Header getLastHeader(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.NamespaceAlias: void setResultPrefix(java.lang.String)> ->_NONE_
<android.webkit.WebSettingsClassic: void setAutoFillProfile(android.webkit.WebSettingsClassic$AutoFillProfile)> ->_NONE_
<android.net.wifi.WifiNative: boolean p2pCancelConnect()> ->_NONE_
<android.webkit.WebViewClassic: void setLayoutParams(android.view.ViewGroup$LayoutParams)> ->_NONE_
<gov.nist.javax.sip.header.AcceptLanguage: void setLanguageRange(java.lang.String)> ->_NONE_
<android.net.MobileDataStateTracker: boolean setRadio(boolean)> ->_NONE_
<android.media.videoeditor.OverlayFrame: android.graphics.Bitmap getBitmap()> ->_NONE_
<android.app.ActivityManagerProxy: android.os.IBinder newUriPermissionOwner(java.lang.String)> ->_NONE_
<libcore.net.http.HttpEngine: java.io.OutputStream getRequestBody()> ->_NONE_
<android.app.ActivityManagerProxy: void crashApplication(int,int,java.lang.String,java.lang.String)> ->_NONE_
<android.preference.PreferenceFragment: void setPreferenceScreen(android.preference.PreferenceScreen)> ->_NONE_
<java.io.PushbackInputStream: int read(byte[],int,int)> ->_NONE_
<org.apache.harmony.xml.dom.EntityReferenceImpl: short getNodeType()> ->_NONE_
<java.nio.FloatArrayBuffer: float get()> ->_NONE_
<org.jivesoftware.smack.SmackConfiguration: int getPacketReplyTimeout()> ->_NONE_
<gov.nist.javax.sip.header.Via: void setProtocolVersion(java.lang.String)> ->_NONE_
<android.app.Activity: int getRequestedOrientation()> ->_NONE_
<java.text.ParsePosition: void setIndex(int)> ->_NONE_
<java.nio.charset.CharsetDecoderICU: java.nio.charset.CoderResult decodeLoop(java.nio.ByteBuffer,java.nio.CharBuffer)> ->_NONE_
<gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.header.UserAgentHeader getDefaultUserAgentHeader()> ->_NONE_
<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getDefaultOutAnimation()> ->_NONE_
<org.apache.harmony.security.provider.crypto.SHA1withDSA_SignatureImpl: void engineUpdate(byte[],int,int)> ->_NONE_
<android.view.Window: int getFeatures()> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)> ->_NONE_
<org.apache.xalan.templates.ElemChoose: int getXSLToken()> ->_NONE_
<org.apache.xalan.templates.ElemExsltFunction: void execute(org.apache.xalan.transformer.TransformerImpl,org.apache.xpath.objects.XObject[])> ->_NONE_
<android.widget.Editor: int getAvailableDisplayListIndex(int[],int,int)> ->_NONE_
<android.gesture.GestureOverlayView: void setGestureStrokeAngleThreshold(float)> ->_NONE_
<android.media.Metadata: boolean parse(android.os.Parcel)> ->_NONE_
<android.net.wifi.p2p.WifiP2pManager: void requestGroupInfo(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$GroupInfoListener)> ->_NONE_
<org.apache.commons.io.IOUtils: void write(java.lang.String,java.io.OutputStream)> ->_NONE_
<gov.nist.javax.sip.stack.TCPMessageChannel: java.lang.String getPeerProtocol()> ->_NONE_
<javax.obex.ServerOperation: java.lang.String getEncoding()> ->_NONE_
<android.content.pm.PackageParser: void setCompatibilityModeEnabled(boolean)> ->_NONE_
<android.view.animation.Animation: boolean getTransformation(long,android.view.animation.Transformation)> ->_NONE_
<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)> ->_NONE_
<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: void setExtensionAccessInfo(java.lang.Object)> ->_NONE_
<android.security.SystemKeyStore: android.security.SystemKeyStore getInstance()> ->_NONE_
<org.apache.xpath.objects.XNodeSet: org.apache.xpath.objects.XObject getFresh()> ->_NONE_
<android.media.videoeditor.OverlayFrame: int getOverlayFrameHeight()> ->_NONE_
<android.widget.NumberPicker: void setEnabled(boolean)> ->_NONE_
<org.apache.xml.utils.ObjectVector: void setSize(int)> ->_NONE_
<android.graphics.drawable.ShapeDrawable: int getIntrinsicHeight()> ->_NONE_
<android.hardware.display.WifiDisplayStatus: int getScanState()> ->_NONE_
<android.opengl.GLSurfaceView: void setDebugFlags(int)> ->_NONE_
<org.apache.harmony.xml.dom.CharacterDataImpl: java.lang.String getNodeValue()> ->_NONE_
<gov.nist.javax.sip.parser.StringMsgParser: void setParseExceptionListener(gov.nist.javax.sip.parser.ParseExceptionListener)> ->_NONE_
<org.apache.xml.utils.QName: java.lang.String getPrefixPart(java.lang.String)> ->_NONE_
<java.util.jar.Manifest: java.util.Map getEntries()> ->_NONE_
<android.media.videoeditor.MediaVideoItem: int getFps()> ->_NONE_
<android.widget.AbsListView: int getChoiceMode()> ->_NONE_
<org.apache.xml.utils.URI: void setPort(int)> ->_NONE_
<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.ElemTemplate getTemplateComposed(org.apache.xml.utils.QName)> ->_NONE_
<javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.ims.SecurityAgree: void setEncryptionAlgorithm(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.ElemExsltFuncResult: int getXSLToken()> ->_NONE_
<org.apache.http.message.ParserCursor: int getPos()> ->_NONE_
<dalvik.system.profiler.HprofData: void setStartMillis(long)> ->_NONE_
<android.view.textservice.SpellCheckerSubtype: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: void setNon2XXAckPassedToListener(boolean)> ->_NONE_
<android.app.ActivityManagerProxy: void overridePendingTransition(android.os.IBinder,java.lang.String,int,int)> ->_NONE_
<java.io.PushbackReader: boolean ready()> ->_NONE_
<android.widget.AbsListView: void setAdapter(android.widget.ListAdapter)> ->_NONE_
<org.apache.http.impl.conn.AbstractPooledConnAdapter: org.apache.http.impl.conn.AbstractPoolEntry getPoolEntry()> ->_NONE_
<dalvik.system.profiler.DalvikThreadSampler: void setDepth(int)> ->_NONE_
<java.io.PushbackInputStream: int read()> ->_NONE_
<android.database.MergeCursor: int getInt(int)> ->_NONE_
<android.test.mock.MockCursor: long getLong(int)> ->_NONE_
<java.security.cert.PKIXCertPathBuilderResult: java.security.cert.CertPath getCertPath()> ->_NONE_
<javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.lang.String)> ->_NONE_
<android.text.SpannedString: int getSpanFlags(java.lang.Object)> ->_NONE_
<android.view.InputDevice: android.view.InputDevice$MotionRange getMotionRange(int)> ->_NONE_
<android.media.videoeditor.TransitionAlpha: java.lang.String getMaskFilename()> ->_NONE_
<android.text.style.LocaleSpan: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction setCustomAnimations(int,int)> ->_NONE_
<android.graphics.drawable.Drawable: android.graphics.Insets getLayoutInsets()> ->_NONE_
<android.media.videoeditor.MediaVideoItem: int getVideoProfile()> ->_NONE_
<org.apache.xpath.patterns.StepPattern: int getAxis()> ->_NONE_
<dalvik.system.CloseGuard: void setReporter(dalvik.system.CloseGuard$Reporter)> ->_NONE_
<android.media.videoeditor.MediaItem: java.util.List getAllEffects()> ->_NONE_
<android.net.wifi.p2p.WifiP2pWfdInfo: boolean setDeviceType(int)> ->_NONE_
<org.jivesoftware.smack.packet.Presence: void setStatus(java.lang.String)> ->_NONE_
<android.content.pm.PackageInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.widget.TableLayout: void setShrinkAllColumns(boolean)> ->_NONE_
<gov.nist.javax.sip.address.AddressImpl: java.lang.String getDisplayName()> ->_NONE_
<java.security.spec.ECFieldF2m: int[] getMidTermsOfReductionPolynomial()> ->_NONE_
<gov.nist.javax.sip.header.UserAgent: java.lang.String encodeBody()> ->_NONE_
<libcore.net.http.HttpEngine: java.net.URI getUri()> ->_NONE_
<android.view.ViewConfiguration: int getScaledScrollBarSize()> ->_NONE_
<android.view.DragEvent: float getX()> ->_NONE_
<android.view.GLES20Canvas: void setDrawFilter(android.graphics.DrawFilter)> ->_NONE_
<org.jivesoftware.smack.util.ObservableWriter: void write(char[])> ->_NONE_
<android.view.DragEvent: float getY()> ->_NONE_
<org.apache.xpath.objects.XStringForFSB: void dispatchAsComment(org.xml.sax.ext.LexicalHandler)> ->_NONE_
<java.text.CollationElementIterator: int getMaxExpansion(int)> ->_NONE_
<android.view.ViewConfiguration: int getMinimumFlingVelocity()> ->_NONE_
<org.apache.commons.io.output.FileWriterWithEncoding: void write(int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: void setKeepAlive(boolean)> ->_NONE_
<org.apache.harmony.security.x509.AlgorithmIdentifier: byte[] getParameters()> ->_NONE_
<org.apache.xpath.axes.LocPathIterator: int getLength()> ->_NONE_
<java.security.KeyFactory: java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: int getNamespaceAliasCount()> ->_NONE_
<org.apache.xml.utils.res.XResources_ja_JP_I: java.lang.Object[][] getContents()> ->_NONE_
<org.apache.http.impl.cookie.BasicClientCookie: void setAttribute(java.lang.String,java.lang.String)> ->_NONE_
<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstanceForThread(long)> ->_NONE_
<android.telephony.TelephonyManager: int getCallState()> ->_NONE_
<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: int getAndSet(java.lang.Object,int)> ->_NONE_
<android.hardware.usb.UsbDeviceConnection: java.lang.String getSerial()> ->_NONE_
<java.net.Socket: int getSoLinger()> ->_NONE_
<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getValue(java.lang.String)> ->_NONE_
<android.widget.Switch: void setTrackDrawable(android.graphics.drawable.Drawable)> ->_NONE_
<android.location.LocationRequest: android.location.LocationRequest setSmallestDisplacement(float)> ->_NONE_
<org.apache.xalan.templates.XMLNSDecl: boolean getIsExcluded()> ->_NONE_
<android.graphics.Bitmap: void getPixels(int[],int,int,int,int,int,int)> ->_NONE_
<android.net.wifi.p2p.WifiP2pGroup: void setNetworkId(int)> ->_NONE_
<org.apache.xpath.functions.FunctionOneArg: org.apache.xpath.Expression getArg0()> ->_NONE_
<dalvik.system.profiler.BinaryHprofReader: java.lang.String getVersion()> ->_NONE_
<org.jivesoftware.smack.packet.Packet: void setProperty(java.lang.String,boolean)> ->_NONE_
<android.os.PatternMatcher: java.lang.String getPath()> ->_NONE_
<android.media.videoeditor.Transition: void setFilename(java.lang.String)> ->_NONE_
<android.test.mock.MockPackageManager: android.content.pm.PackageInfo getPackageArchiveInfo(java.lang.String,int)> ->_NONE_
<android.graphics.Canvas: void drawTextRun(java.lang.CharSequence,int,int,int,int,float,float,int,android.graphics.Paint)> ->_NONE_
<android.security.KeyStore: int getLastError()> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getIK()> ->_NONE_
<android.view.Window: android.view.WindowManager getWindowManager()> ->_NONE_
<android.net.wifi.p2p.WifiP2pManager: void addLocalService(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.nsd.WifiP2pServiceInfo,android.net.wifi.p2p.WifiP2pManager$ActionListener)> ->_NONE_
<gov.nist.javax.sip.stack.ServerLog: void setLevel(int)> ->_NONE_
<android.widget.SearchView: void setSubmitButtonEnabled(boolean)> ->_NONE_
<android.app.FragmentBreadCrumbs: void setParentTitle(java.lang.CharSequence,java.lang.CharSequence,android.view.View$OnClickListener)> ->_NONE_
<org.xmlpull.v1.sax2.Driver: void setDTDHandler(org.xml.sax.DTDHandler)> ->_NONE_
<android.speech.srec.WaveHeader: short getNumChannels()> ->_NONE_
<java.io.EmulatedFields: long get(java.lang.String,long)> ->_NONE_
<gov.nist.javax.sip.stack.TCPMessageChannel: java.net.InetAddress getPeerPacketSourceAddress()> ->_NONE_
<org.apache.harmony.security.x509.GeneralName: byte[] getEncodedName()> ->_NONE_
<java.lang.StringBuffer: void setCharAt(int,char)> ->_NONE_
<android.content.ContextWrapper: java.io.File getDir(java.lang.String,int)> ->_NONE_
<org.apache.commons.io.output.TeeOutputStream: void write(int)> ->_NONE_
<android.app.ActivityThread: boolean releaseProvider(android.content.IContentProvider,boolean)> ->_NONE_
<android.webkit.UrlInterceptRegistry: boolean unregisterHandler(android.webkit.UrlInterceptHandler)> ->_NONE_
<android.test.ProviderTestCase2: android.test.IsolatedContext getMockContext()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getPrefix()> ->_NONE_
<android.widget.AbsListView: int getCacheColorHint()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.AbstractSessionContext: void setSessionTimeout(int)> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CRLImpl: byte[] getExtensionValue(java.lang.String)> ->_NONE_
<android.net.wifi.WifiInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.webkit.HTML5VideoViewProxy: void play(java.lang.String,int,int)> ->_NONE_
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)> ->_NONE_
<android.telephony.SignalStrength: int getEvdoDbm()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: int getLength()> ->_NONE_
<android.app.ContextImpl: android.os.IBinder getActivityToken()> ->_NONE_
<android.app.ProgressDialog: int getMax()> ->_NONE_
<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair[] getParameters()> ->_NONE_
<java.security.DigestInputStream: int read(byte[],int,int)> ->_NONE_
<android.os.Debug: boolean dumpService(java.lang.String,java.io.FileDescriptor,java.lang.String[])> ->_NONE_
<java.net.HttpCookie: void setCommentURL(java.lang.String)> ->_NONE_
<org.apache.http.params.HttpConnectionParams: boolean getSoKeepalive(org.apache.http.params.HttpParams)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.io.OutputStream getOutputStream()> ->_NONE_
<gov.nist.javax.sip.header.From: java.lang.String getUserAtHostPort()> ->_NONE_
<android.filterfw.core.KeyValueMap: void setKeyValues(java.lang.Object[])> ->_NONE_
<android.util.DayOfMonthCursor: int getSelectedColumn()> ->_NONE_
<java.util.Calendar: long getTimeInMillis()> ->_NONE_
<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(java.lang.String,android.content.res.CompatibilityInfo,int,int)> ->_NONE_
<android.webkit.WebCoreThreadWatchdog: void run()> ->_NONE_
<android.app.ContextImpl: android.content.res.AssetManager getAssets()> ->_NONE_
<android.filterfw.core.SerializedFrame: void setBitmap(android.graphics.Bitmap)> ->_NONE_
<android.webkit.ZoomManager: void setZoomScale(float,boolean,boolean)> ->_NONE_
<java.net.PlainSocketImpl: java.io.InputStream getInputStream()> ->_NONE_
<android.preference.DialogPreference: void setPositiveButtonText(java.lang.CharSequence)> ->_NONE_
<android.view.GLES20DisplayList: void setPivotY(float)> ->_NONE_
<android.view.GLES20DisplayList: void setPivotX(float)> ->_NONE_
<android.media.AudioRecord: int setPositionNotificationPeriod(int)> ->_NONE_
<android.view.inputmethod.InputMethodManager: void setAdditionalInputMethodSubtypes(java.lang.String,android.view.inputmethod.InputMethodSubtype[])> ->_NONE_
<org.apache.xml.serializer.WriterToASCI: void write(int)> ->_NONE_
<android.support.v4.view.VelocityTrackerCompat: float getXVelocity(android.view.VelocityTracker,int)> ->_NONE_
<android.view.TextureView: android.graphics.Bitmap getBitmap(int,int)> ->_NONE_
<android.app.Service: java.lang.String getClassName()> ->_NONE_
<android.location.Criteria: int getPowerRequirement()> ->_NONE_
<android.view.MotionEvent: void setEdgeFlags(int)> ->_NONE_
<libcore.io.BlockGuardOs: int pread(java.io.FileDescriptor,java.nio.ByteBuffer,long)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityManagerCompatIcs: java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int)> ->_NONE_
<android.app.Activity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)> ->_NONE_
<libcore.icu.LocaleData: java.lang.String getTimeFormat(int)> ->_NONE_
<org.apache.xpath.NodeSetDTM: org.apache.xml.dtm.DTMManager getDTMManager()> ->_NONE_
<android.util.DayOfMonthCursor: void setSelectedRowColumn(int,int)> ->_NONE_
<android.content.Intent: double getDoubleExtra(java.lang.String,double)> ->_NONE_
<android.app.ActivityManager: int getFrontActivityScreenCompatMode()> ->_NONE_
<android.text.style.TextAppearanceSpan: int getTextStyle()> ->_NONE_
<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()> ->_NONE_
<org.apache.http.protocol.DefaultedHttpContext: void setAttribute(java.lang.String,java.lang.Object)> ->_NONE_
<java.lang.ClassNotFoundException: java.lang.Throwable getCause()> ->_NONE_
<org.apache.http.client.methods.HttpRequestBase: void setConnectionRequest(org.apache.http.conn.ClientConnectionRequest)> ->_NONE_
<javax.crypto.Cipher: int getMaxAllowedKeyLength(java.lang.String)> ->_NONE_
<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputContext getInputContext()> ->_NONE_
<android.text.Html: java.lang.String escapeHtml(java.lang.CharSequence)> ->_NONE_
<gov.nist.javax.sip.address.TelephoneNumber: void setGlobal(boolean)> ->_NONE_
<android.database.sqlite.SQLiteConnectionPool: int getPriority(int)> ->_NONE_
<android.media.RemoteControlClient: void setPlaybackInformation(int,int)> ->_NONE_
<android.content.res.Resources: float getFraction(int,int,int)> ->_NONE_
<android.app.ActivityManagerProxy: boolean isIntentSenderTargetedToPackage(android.content.IIntentSender)> ->_NONE_
<org.apache.xpath.functions.FuncGenerateId: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<android.util.LocalLog: void log(java.lang.String)> ->_NONE_
<android.widget.AdapterViewAnimator: void setRemoteViewsOnClickHandler(android.widget.RemoteViews$OnClickHandler)> ->_NONE_
<android.graphics.drawable.AnimatedRotateDrawable: int getOpacity()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getViaHost()> ->_NONE_
<android.view.View: android.view.View$ScrollabilityCache getScrollCache()> ->_NONE_
<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getViaHost()> ->_NONE_
<android.nfc.NfcActivityManager: android.nfc.NfcActivityManager$NfcActivityState getActivityState(android.app.Activity)> ->_NONE_
<gov.nist.javax.sip.header.To: java.lang.String getDisplayName()> ->_NONE_
<gov.nist.javax.sip.parser.ims.PServedUserParser: gov.nist.javax.sip.header.SIPHeader parse()> ->_NONE_
<org.apache.xml.utils.res.IntArrayWrapper: int getInt(int)> ->_NONE_
<javax.sip.DialogTerminatedEvent: javax.sip.Dialog getDialog()> ->_NONE_
<org.apache.james.mime4j.field.address.parser.SimpleCharStream: int getEndLine()> ->_NONE_
<org.xml.sax.helpers.DefaultHandler: void unparsedEntityDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<org.apache.commons.io.input.DemuxInputStream: int read()> ->_NONE_
<org.xml.sax.helpers.AttributeListImpl: void setAttributeList(org.xml.sax.AttributeList)> ->_NONE_
<org.apache.xpath.objects.XBoolean: java.lang.String getTypeString()> ->_NONE_
<android.hardware.display.WifiDisplay: java.lang.String getDeviceName()> ->_NONE_
<gov.nist.javax.sip.header.ParametersHeader: java.lang.String getParameter(java.lang.String)> ->_NONE_
<javax.net.ssl.HandshakeCompletedEvent: java.lang.String getCipherSuite()> ->_NONE_
<android.hardware.input.InputManager: java.lang.String[] getKeyboardLayoutsForInputDevice(java.lang.String)> ->_NONE_
<android.widget.GridLayout: int getColumnCount()> ->_NONE_
<android.bluetooth.BluetoothSocket: int readInt(java.io.InputStream)> ->_NONE_
<org.jivesoftware.smack.PacketReader: void removeConnectionListener(org.jivesoftware.smack.ConnectionListener)> ->_NONE_
<org.apache.xalan.templates.ElemLiteralResult: java.lang.String getAttribute(java.lang.String)> ->_NONE_
<java.nio.MappedByteBufferAdapter: int getInt(int)> ->_NONE_
<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)> ->_NONE_
<android.graphics.Canvas: void setViewport(int,int)> ->_NONE_
<android.preference.PreferenceGroupAdapter: int getCount()> ->_NONE_
<android.database.MatrixCursor: double getDouble(int)> ->_NONE_
<android.filterfw.GraphEnvironment: android.filterfw.core.GraphRunner getRunner(int,int)> ->_NONE_
<android.app.Dialog: void setCancelable(boolean)> ->_NONE_
<android.graphics.RectF: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.animation.PropertyValuesHolder: java.lang.String getPropertyName()> ->_NONE_
<android.webkit.WebSettingsClassic: boolean getLoadsImagesAutomatically()> ->_NONE_
<libcore.io.ForwardingOs: void setsockoptTimeval(java.io.FileDescriptor,int,int,libcore.io.StructTimeval)> ->_NONE_
<android.app.Activity: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)> ->_NONE_
<org.jivesoftware.smack.PacketWriter: void write(java.lang.String)> ->_NONE_
<android.view.animation.GridLayoutAnimationController: long getDelayForView(android.view.View)> ->_NONE_
<javax.xml.transform.stream.StreamSource: void setPublicId(java.lang.String)> ->_NONE_
<android.net.sip.SipSession: android.net.sip.SipProfile getPeerProfile()> ->_NONE_
<android.app.ActivityManagerProxy: void forceStopPackage(java.lang.String,int)> ->_NONE_
<org.apache.xml.serializer.AttributesImplSerializer: int getIndex(java.lang.String)> ->_NONE_
<java.math.BigInt: java.lang.String toAscii(java.lang.String,int)> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: void setNickName(java.lang.String)> ->_NONE_
<android.media.AudioTrack: int getPositionNotificationPeriod()> ->_NONE_
<android.preference.PreferenceGroup: int getPreferenceCount()> ->_NONE_
<android.content.pm.PackageItemInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)> ->_NONE_
<android.view.KeyEvent: java.lang.String getCharacters()> ->_NONE_
<android.app.AlertDialog: void setMessage(java.lang.CharSequence)> ->_NONE_
<android.webkit.PluginManager: java.lang.String[] getPluginDirectories()> ->_NONE_
<android.net.LinkSocket: android.net.LinkCapabilities getCapabilities(java.util.Set)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityEventCompat: int getRecordCount(android.view.accessibility.AccessibilityEvent)> ->_NONE_
<android.graphics.Matrix: void setScale(float,float,float,float)> ->_NONE_
<libcore.io.BlockGuardOs: int sendto(java.io.FileDescriptor,byte[],int,int,int,java.net.InetAddress,int)> ->_NONE_
<java.security.spec.RSAPrivateCrtKeySpec: java.math.BigInteger getPrimeQ()> ->_NONE_
<org.jivesoftware.smack.packet.Registration: java.lang.String getChildElementXML()> ->_NONE_
<java.security.spec.RSAPrivateCrtKeySpec: java.math.BigInteger getPrimeP()> ->_NONE_
<android.preference.TwoStatePreference: void setDisableDependentsState(boolean)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getNextFollowing(int,int)> ->_NONE_
<android.nfc.NfcActivityManager: void setOnNdefPushCompleteCallback(android.app.Activity,android.nfc.NfcAdapter$OnNdefPushCompleteCallback)> ->_NONE_
<android.net.http.RequestHandle: int getRedirectCount()> ->_NONE_
<gov.nist.javax.sip.header.ContentType: void setMediaRange(gov.nist.javax.sip.header.MediaRange)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setFullScreen(java.lang.Object,boolean)> ->_NONE_
<android.filterpacks.performance.Throughput: int getTotalFrameCount()> ->_NONE_
<android.text.TextUtils: int getTrimmedLength(java.lang.CharSequence)> ->_NONE_
<android.util.XmlPullAttributes: float getAttributeFloatValue(java.lang.String,java.lang.String,float)> ->_NONE_
<org.apache.xml.serializer.SerializerBase: java.util.Set getOutputPropDefaultKeys()> ->_NONE_
<javax.net.ssl.SSLSocket: javax.net.ssl.SSLParameters getSSLParameters()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: java.lang.String getDocumentEncoding(int)> ->_NONE_
<java.util.prefs.AbstractPreferences: double getDouble(java.lang.String,double)> ->_NONE_
<gov.nist.core.GenericObject: java.lang.StringBuffer encode(java.lang.StringBuffer)> ->_NONE_
<org.apache.commons.codec.net.QCodec: java.lang.String encode(java.lang.String,java.lang.String)> ->_NONE_
<android.database.CursorWindow: long getLong(int,int)> ->_NONE_
<java.util.logging.Handler: java.util.logging.ErrorManager getErrorManager()> ->_NONE_
<android.support.v4.app.DialogFragment: android.app.Dialog getDialog()> ->_NONE_
<jp.co.omronsoft.openwnn.JAJP.RomkanHalfKatakana: void setPreferences(android.content.SharedPreferences)> ->_NONE_
<android.os.CommonTimeUtils: int transactSetString(int,java.lang.String)> ->_NONE_
<org.apache.commons.io.FilenameUtils: java.lang.String getExtension(java.lang.String)> ->_NONE_
<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder replaceWith(java.lang.String)> ->_NONE_
<android.widget.CursorTreeAdapter: long getChildId(int,int)> ->_NONE_
<android.text.style.ForegroundColorSpan: int getSpanTypeId()> ->_NONE_
<org.apache.xml.serializer.utils.DOM2Helper: java.lang.String getLocalNameOfNodeFallback(org.w3c.dom.Node)> ->_NONE_
<org.apache.http.impl.conn.AbstractClientConnAdapter: java.net.InetAddress getLocalAddress()> ->_NONE_
<android.webkit.WebViewCore: android.webkit.DeviceOrientationService getDeviceOrientationService()> ->_NONE_
<android.webkit.WebViewClassic: void externalRepresentation(android.os.Message)> ->_NONE_
<android.view.ViewConfiguration: long getGlobalActionKeyTimeout()> ->_NONE_
<android.app.ActivityThread: void handleSendResult(android.app.ActivityThread$ResultData)> ->_NONE_
<android.view.GLES20Canvas: int getSaveCount()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: int getDTMNodeNumber()> ->_NONE_
<android.webkit.WebViewClassic: java.lang.String getSelection()> ->_NONE_
<gov.nist.javax.sip.stack.TLSMessageProcessor: int getDefaultTargetPort()> ->_NONE_
<android.widget.SimpleCursorAdapter: void setCursorToStringConverter(android.widget.SimpleCursorAdapter$CursorToStringConverter)> ->_NONE_
<net.oauth.signature.RSA_SHA1: java.lang.String getSignature(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getXmlVersion()> ->_NONE_
<org.apache.xml.utils.UnImplNode: org.w3c.dom.Node getLastChild()> ->_NONE_
<android.widget.Switch: void setChecked(boolean)> ->_NONE_
<android.widget.TextView: int getLineHeight()> ->_NONE_
<java.lang.Thread: java.lang.Thread$State getState()> ->_NONE_
<java.util.concurrent.ScheduledThreadPoolExecutor: boolean getExecuteExistingDelayedTasksAfterShutdownPolicy()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPublicKey: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getOpenSSLKey()> ->_NONE_
<android.bluetooth.BluetoothAdapter: boolean enableNoAutoConnect()> ->_NONE_
<android.gesture.GestureLibrary: void setOrientationStyle(int)> ->_NONE_
<android.webkit.WebViewClassic: void loadUrlImpl(java.lang.String,java.util.Map)> ->_NONE_
<org.apache.harmony.security.asn1.BerInputStream: void decodeValueCollection(org.apache.harmony.security.asn1.ASN1ValueCollection)> ->_NONE_
<android.filterfw.core.ProgramVariable: java.lang.String getVariableName()> ->_NONE_
<org.apache.xml.serializer.SerializerTraceWriter: void write(java.lang.String)> ->_NONE_
<java.util.prefs.PreferenceChangeEvent: java.lang.String getNewValue()> ->_NONE_
<android.preference.PreferenceManager: int getSharedPreferencesMode()> ->_NONE_
<org.apache.http.conn.BasicManagedEntity: java.io.InputStream getContent()> ->_NONE_
<gov.nist.javax.sip.stack.UDPMessageChannel: int getPort()> ->_NONE_
<android.view.GLES20Canvas: void drawTextRun(char[],int,int,int,int,float,float,int,android.graphics.Paint)> ->_NONE_
<android.widget.TableRow: int[] getColumnsWidths(int)> ->_NONE_
<gov.nist.javax.sip.header.To: java.lang.String getUserAtHostPort()> ->_NONE_
<android.content.SyncContext: android.os.IBinder getSyncContextBinder()> ->_NONE_
<java.security.cert.X509CertSelector: void setPrivateKeyValid(java.util.Date)> ->_NONE_
<android.media.AudioRecord: int setNotificationMarkerPosition(int)> ->_NONE_
<org.apache.commons.io.FilenameUtils: java.lang.String getPathNoEndSeparator(java.lang.String)> ->_NONE_
<android.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> ->_NONE_
<android.content.SyncManager: android.net.ConnectivityManager getConnectivityManager()> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getCK()> ->_NONE_
<android.widget.Chronometer: void updateRunning()> ->_NONE_
<org.apache.xalan.templates.ElemSort: void setOrder(org.apache.xalan.templates.AVT)> ->_NONE_
<android.filterfw.core.Filter: void setInputFrame(java.lang.String,android.filterfw.core.Frame)> ->_NONE_
<org.apache.xalan.templates.TemplateList: org.apache.xalan.templates.ElemTemplate getTemplate(org.apache.xpath.XPathContext,int,org.apache.xml.utils.QName,int,int,boolean,org.apache.xml.dtm.DTM)> ->_NONE_
<gov.nist.javax.sip.header.ims.PCalledPartyID: void setValue(java.lang.String)> ->_NONE_
<android.widget.ExpandableListView: int getPackedPositionType(long)> ->_NONE_
<android.media.RemoteControlClient: int getIntPlaybackInformation(int)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setScrollable(boolean)> ->_NONE_
<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse getLastResponse()> ->_NONE_
<android.widget.AbsListView: void setVisibleRangeHint(int,int)> ->_NONE_
<org.xmlpull.v1.sax2.Driver: int getColumnNumber()> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: java.lang.String getPrefix(int)> ->_NONE_
<android.support.v4.app.FragmentPagerAdapter: void startUpdate(android.view.ViewGroup)> ->_NONE_
<android.test.AndroidTestRunner: java.lang.Class loadSuiteClass(java.lang.String)> ->_NONE_
<android.test.mock.MockResources: java.lang.String getResourcePackageName(int)> ->_NONE_
<gov.nist.javax.sip.address.SipUri: void setQHeader(gov.nist.core.NameValue)> ->_NONE_
<java.net.HttpRetryException: java.lang.String getLocation()> ->_NONE_
<java.security.cert.CertPathValidator: java.lang.String getAlgorithm()> ->_NONE_
<android.net.sip.SimpleSessionDescription: void setEncryption(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.lang.String getProtocol()> ->_NONE_
<android.content.Intent: java.util.ArrayList getIntegerArrayListExtra(java.lang.String)> ->_NONE_
<android.test.mock.MockResources: void getValue(int,android.util.TypedValue,boolean)> ->_NONE_
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getAllButNulAndAngleBracketsLegal()> ->_NONE_
<android.support.v4.view.PagerTabStrip: void setBackgroundDrawable(android.graphics.drawable.Drawable)> ->_NONE_
<android.animation.PropertyValuesHolder: void setAnimatedValue(java.lang.Object)> ->_NONE_
<android.preference.Preference: void setOnPreferenceChangeInternalListener(android.preference.Preference$OnPreferenceChangeInternalListener)> ->_NONE_
<org.apache.http.entity.HttpEntityWrapper: long getContentLength()> ->_NONE_
<android.content.res.AssetManager: boolean getThemeValue(int,int,android.util.TypedValue,boolean)> ->_NONE_
<android.net.wifi.WifiStateMachine: void enableRssiPolling(boolean)> ->_NONE_
<gov.nist.javax.sip.header.RAck: void setMethod(java.lang.String)> ->_NONE_
<android.content.Intent: android.content.Intent getSelector()> ->_NONE_
<android.graphics.Canvas: android.graphics.Matrix getMatrix()> ->_NONE_
<android.telephony.ServiceState: int getCdmaEriIconIndex()> ->_NONE_
<org.jivesoftware.smack.packet.LoginRequest: java.lang.String getDomain()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.HandshakeProtocol: java.lang.Runnable getTask()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setText(java.lang.Object,java.lang.CharSequence)> ->_NONE_
<android.widget.CalendarView: java.util.Calendar getCalendarForLocale(java.util.Calendar,java.util.Locale)> ->_NONE_
<android.view.ViewRootImpl: void setDragFocus(android.view.View)> ->_NONE_
<net.oauth.client.ExcerptInputStream: byte[] getExcerpt()> ->_NONE_
<android.test.mock.MockPackageManager: java.lang.String[] getPackagesForUid(int)> ->_NONE_
<android.filterfw.core.NativeProgram: java.lang.Object getHostValue(java.lang.String)> ->_NONE_
<android.app.ApplicationThreadProxy: void dumpActivity(java.io.FileDescriptor,android.os.IBinder,java.lang.String,java.lang.String[])> ->_NONE_
<android.net.wifi.p2p.WifiP2pGroup: void setIsGroupOwner(boolean)> ->_NONE_
<android.support.v4.view.MotionEventCompatEclair: float getY(android.view.MotionEvent,int)> ->_NONE_
<android.support.v4.view.MotionEventCompatEclair: float getX(android.view.MotionEvent,int)> ->_NONE_
<java.lang.SecurityManager: java.lang.ClassLoader currentClassLoader()> ->_NONE_
<android.net.SntpClient: long getNtpTimeReference()> ->_NONE_
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: java.util.Collection getQueuedThreads()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBaseIterators: org.apache.xml.dtm.DTMAxisIterator getAxisIterator(int)> ->_NONE_
<gov.nist.javax.sip.stack.ServerLog: void setAuxInfo(java.lang.String)> ->_NONE_
<org.apache.http.impl.io.HttpTransportMetricsImpl: void setBytesTransferred(long)> ->_NONE_
<android.text.DynamicLayout: int getTopPadding()> ->_NONE_
<android.app.ListFragment: void setListShown(boolean)> ->_NONE_
<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.lang.Object getAndSet(java.lang.Object,java.lang.Object)> ->_NONE_
<org.apache.harmony.security.x509.tsp.TSTInfo: int getVersion()> ->_NONE_
<android.view.View: int getRawTextAlignment()> ->_NONE_
<android.view.accessibility.AccessibilityRecord: void setConnectionId(int)> ->_NONE_
<android.telephony.SmsMessage: java.lang.String getPseudoSubject()> ->_NONE_
<android.widget.Chronometer: java.lang.String getFormat()> ->_NONE_
<android.widget.RemoteViews: void setTextViewCompoundDrawables(int,int,int,int,int)> ->_NONE_
<android.webkit.ZoomManager: boolean setupZoomOverviewWidth(android.webkit.WebViewCore$DrawData,int)> ->_NONE_
<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getDefaultInAnimation()> ->_NONE_
<org.apache.xpath.operations.And: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<android.location.Address: java.lang.String getAdminArea()> ->_NONE_
<android.content.IntentSender: int getCreatorUid()> ->_NONE_
<android.telephony.CellIdentityGsm: int getPsc()> ->_NONE_
<android.test.TestRunner: java.lang.reflect.Method[] getAllTestMethods(java.lang.Class)> ->_NONE_
<libcore.net.http.RawHeaders: libcore.net.http.RawHeaders getAll(java.util.Set)> ->_NONE_
<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.Extensions getExtensions()> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: void setValue(java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.HelloRequest: int getType()> ->_NONE_
<android.net.http.HttpAuthHeader: java.lang.String getOpaque()> ->_NONE_
<android.view.KeyCharacterMap: char getNumber(int)> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: void getBoundsInParent(android.graphics.Rect)> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: void setAvatarForUpload(byte[])> ->_NONE_
<android.content.res.Resources: int getDimensionPixelOffset(int)> ->_NONE_
<android.net.MobileDataStateTracker: java.lang.String getTcpBufferSizesPropName()> ->_NONE_
<android.widget.AdapterViewAnimator: boolean onRemoteAdapterConnected()> ->_NONE_
<android.media.AudioRecord: int getAudioSource()> ->_NONE_
<android.webkit.AccessibilityInjector: boolean handleKeyEventIfNecessary(android.view.KeyEvent)> ->_NONE_
<android.renderscript.Matrix4f: void loadMultiply(android.renderscript.Matrix4f,android.renderscript.Matrix4f)> ->_NONE_
<android.renderscript.Matrix3f: void loadRotate(float)> ->_NONE_
<android.preference.Preference: long getPersistedLong(long)> ->_NONE_
<android.renderscript.Element: android.renderscript.Element$DataType getDataType()> ->_NONE_
<java.text.NumberFormat: java.text.NumberFormat getCurrencyInstance()> ->_NONE_
<org.apache.http.client.params.ClientParamBean: void setCookiePolicy(java.lang.String)> ->_NONE_
<android.support.v4.view.ViewPager: void setOffscreenPageLimit(int)> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: void setAvatar(java.net.URL)> ->_NONE_
<android.telephony.gsm.SmsMessage: java.lang.String getEmailBody()> ->_NONE_
<android.filterfw.core.NativeFrame: int[] getInts()> ->_NONE_
<android.renderscript.RenderScript: void setMessageHandler(android.renderscript.RenderScript$RSMessageHandler)> ->_NONE_
<org.apache.harmony.xml.dom.EntityImpl: java.lang.String getInputEncoding()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: int getPeerPort()> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: org.apache.xml.utils.XMLString getStringValue(int)> ->_NONE_
<java.sql.DriverManager: java.sql.Connection getConnection(java.lang.String,java.util.Properties)> ->_NONE_
<android.webkit.WebBackForwardList: int getSize()> ->_NONE_
<android.media.MediaSyncEvent: int getType()> ->_NONE_
<java.text.NumberFormat: int getMinimumFractionDigits()> ->_NONE_
<android.content.IntentSender: android.content.IIntentSender getTarget()> ->_NONE_
<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getNodeValue()> ->_NONE_
<android.os.Debug: boolean isDebuggerConnected()> ->_NONE_
<android.widget.AbsListView: int getVerticalScrollbarWidth()> ->_NONE_
<org.apache.xml.serializer.dom3.NamespaceSupport: java.lang.String getDeclaredPrefixAt(int)> ->_NONE_
<android.appwidget.AppWidgetManager: int[] getAppWidgetIds(android.content.ComponentName)> ->_NONE_
<org.apache.harmony.xml.dom.DocumentImpl: boolean getXmlStandalone()> ->_NONE_
<android.os.Parcel: java.lang.Object[] readArray(java.lang.ClassLoader)> ->_NONE_
<android.net.LocalSocket: void setSendBufferSize(int)> ->_NONE_
<android.app.backup.RestoreSet: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.media.AudioTrack: int getNotificationMarkerPosition()> ->_NONE_
<gov.nist.javax.sip.header.TimeStamp: java.lang.String getTimeStampAsString()> ->_NONE_
<android.media.SoundPool: int load(android.content.res.AssetFileDescriptor,int)> ->_NONE_
<java.lang.Math: double log(double)> ->_NONE_
<org.apache.xalan.templates.OutputProperties: java.util.Properties getProperties()> ->_NONE_
<gov.nist.javax.sip.header.ContentType: void setContentSubType(java.lang.String)> ->_NONE_
<java.util.logging.LogRecord: java.util.ResourceBundle getResourceBundle()> ->_NONE_
<gov.nist.javax.sip.header.ims.SecurityAgree: java.lang.String getProtocol()> ->_NONE_
<org.xmlpull.v1.sax2.Driver: java.lang.String getQName(int)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: void setPrefix(java.lang.String)> ->_NONE_
<android.content.ClipboardManager: android.content.ClipData getPrimaryClip()> ->_NONE_
<android.widget.SearchView: void setInputType(int)> ->_NONE_
<org.jivesoftware.smack.util.StringUtils: java.lang.String parseName(java.lang.String)> ->_NONE_
<android.telephony.CellBroadcastMessage: int getCmasMessageClass()> ->_NONE_
<android.test.InstrumentationCoreTestRunner: java.util.List getBuilderRequirements()> ->_NONE_
<android.content.ContextWrapper: int getThemeResId()> ->_NONE_
<android.preference.Preference: void setDependency(java.lang.String)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: java.util.List getText()> ->_NONE_
<org.apache.http.impl.io.HttpRequestWriter: void writeHeadLine(org.apache.http.HttpMessage)> ->_NONE_
<android.net.MobileDataStateTracker: void setDependencyMet(boolean)> ->_NONE_
<org.apache.xml.serializer.utils.AttList: int getIndex(java.lang.String)> ->_NONE_
<android.util.TimeUtils: java.util.TimeZone getTimeZone(int,boolean,long,java.lang.String)> ->_NONE_
<android.support.v4.widget.ScrollerCompat: int getCurrY()> ->_NONE_
<android.text.format.Time: boolean parse(java.lang.String)> ->_NONE_
<android.text.method.QwertyKeyListener: java.lang.String getReplacement(java.lang.CharSequence,int,int,android.view.View)> ->_NONE_
<libcore.net.http.HttpResponseCache: libcore.io.DiskLruCache getCache()> ->_NONE_
<android.support.v4.widget.ScrollerCompat: int getCurrX()> ->_NONE_
<java.util.concurrent.ThreadPoolExecutor: void beforeExecute(java.lang.Thread,java.lang.Runnable)> ->_NONE_
<gov.nist.javax.sip.header.extensions.References: java.util.Iterator getParameterNames()> ->_NONE_
<android.os.Bundle: float getFloat(java.lang.String)> ->_NONE_
<org.xml.sax.helpers.LocatorImpl: void setSystemId(java.lang.String)> ->_NONE_
<android.os.WorkSource: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.text.format.Time: int getJulianDay(long,long)> ->_NONE_
<org.apache.xalan.templates.ElemLiteralResult: java.lang.String getExtensionElementPrefix(int)> ->_NONE_
<android.widget.AdapterViewFlipper: void setFlipInterval(int)> ->_NONE_
<org.apache.harmony.security.x509.TBSCertList: org.apache.harmony.security.x501.Name getIssuer()> ->_NONE_
<libcore.icu.NativeDecimalFormat: void setMaximumFractionDigits(int)> ->_NONE_
<android.database.sqlite.SQLiteQueryBuilder: void setStrict(boolean)> ->_NONE_
<android.inputmethodservice.KeyboardView: void setVerticalCorrection(int)> ->_NONE_
<android.app.ActivityManager: java.util.Map getAllPackageLaunchCounts()> ->_NONE_
<android.app.WallpaperInfo: java.lang.String getServiceName()> ->_NONE_
<java.beans.PropertyChangeEvent: java.lang.String getPropertyName()> ->_NONE_
<gov.nist.javax.sip.header.CallID: java.lang.StringBuffer encodeBody(java.lang.StringBuffer)> ->_NONE_
<org.jivesoftware.smack.packet.DataMessage: void setCategory(java.lang.String)> ->_NONE_
<android.graphics.Path: void setLastPoint(float,float)> ->_NONE_
<java.text.NumberFormat: java.text.NumberFormat getPercentInstance()> ->_NONE_
<android.view.textservice.SpellCheckerInfo: java.lang.String getSettingsActivity()> ->_NONE_
<java.util.concurrent.ForkJoinWorkerThread: int getPoolIndex()> ->_NONE_
<android.app.admin.DevicePolicyManager: void getRemoveWarning(android.content.ComponentName,android.os.RemoteCallback)> ->_NONE_
<android.media.MediaFormat: float getFloat(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.stack.SIPClientTransaction: void setDialog(gov.nist.javax.sip.stack.SIPDialog,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationHeader: void setScheme(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.stack.UDPMessageProcessor: int getMaximumMessageSize()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeProviderCompat: java.lang.Object getProvider()> ->_NONE_
<org.apache.xalan.templates.ElemUnknown: int getXSLToken()> ->_NONE_
<android.hardware.GeomagneticField: float getInclination()> ->_NONE_
<android.graphics.Bitmap: int getPixel(int,int)> ->_NONE_
<android.view.View: boolean getKeepScreenOn()> ->_NONE_
<android.app.ApplicationPackageManager: java.lang.String[] getPackagesForUid(int)> ->_NONE_
<org.apache.commons.codec.binary.Base64: byte[] encodeBase64Chunked(byte[])> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getNextNamespaceNode(int,int,boolean)> ->_NONE_
<net.oauth.signature.OAuthSignatureMethod: void setConsumerSecret(java.lang.String)> ->_NONE_
<android.telephony.SmsCbLocation: int getLac()> ->_NONE_
<android.provider.Browser: android.database.Cursor getAllBookmarks(android.content.ContentResolver)> ->_NONE_
<android.net.NetworkStats: android.net.NetworkStats$Entry getTotal(android.net.NetworkStats$Entry,java.util.HashSet)> ->_NONE_
<libcore.icu.CollationElementIteratorICU: libcore.icu.CollationElementIteratorICU getInstance(int,java.lang.String)> ->_NONE_
<dalvik.system.profiler.BinaryHprofWriter: void writeThreadEvent(dalvik.system.profiler.HprofData$ThreadEvent)> ->_NONE_
<org.apache.harmony.xml.dom.ElementImpl: void setIdAttributeNode(org.w3c.dom.Attr,boolean)> ->_NONE_
<android.graphics.drawable.GradientDrawable: void setGradientRadius(float)> ->_NONE_
<android.net.MailTo: java.lang.String getCc()> ->_NONE_
<org.apache.james.mime4j.codec.EncoderUtil: java.lang.String encodeAddressLocalPart(java.lang.String)> ->_NONE_
<org.apache.harmony.security.x509.ExtendedKeyUsage: byte[] getEncoded()> ->_NONE_
<android.os.Handler: android.os.IMessenger getIMessenger()> ->_NONE_
<android.media.videoeditor.MediaItem: java.util.List getAllOverlays()> ->_NONE_
<org.apache.xpath.axes.FilterExprIterator: void setRoot(int,java.lang.Object)> ->_NONE_
<android.text.style.AbsoluteSizeSpan: boolean getDip()> ->_NONE_
<java.lang.String: byte[] getBytes(java.lang.String)> ->_NONE_
<android.app.ActivityManager: boolean isUserRunning(int)> ->_NONE_
<java.nio.BaseByteBuffer: char getChar(int)> ->_NONE_
<android.widget.AbsListView: void setVerticalScrollbarPosition(int)> ->_NONE_
<android.nfc.tech.IsoDep: void setTimeout(int)> ->_NONE_
<android.widget.FrameLayout: int getPaddingTopWithForeground()> ->_NONE_
<android.media.videoeditor.MediaImageItem: int getHeight()> ->_NONE_
<android.view.ViewRootImpl: void setStopped(boolean)> ->_NONE_
<javax.net.ssl.SSLSessionBindingEvent: java.lang.String getName()> ->_NONE_
<android.view.ViewGroup: void setLayoutAnimationListener(android.view.animation.Animation$AnimationListener)> ->_NONE_
<android.webkit.URLUtil: java.lang.String stripAnchor(java.lang.String)> ->_NONE_
<android.test.TestRunner: void run(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.ParametersHeader: java.lang.Object getMultiParameterValue(java.lang.String)> ->_NONE_
<android.text.MeasuredText: void setPos(int)> ->_NONE_
<gov.nist.javax.sip.header.ims.SecurityAgree: float getPreference()> ->_NONE_
<android.app.ActivityManagerProxy: void handleApplicationStrictModeViolation(android.os.IBinder,int,android.os.StrictMode$ViolationInfo)> ->_NONE_
<gov.nist.javax.sip.header.Indentation: java.lang.String getIndentation()> ->_NONE_
<android.bluetooth.BluetoothSocket: java.io.OutputStream getOutputStream()> ->_NONE_
<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)> ->_NONE_
<org.apache.xpath.patterns.StepPattern: int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)> ->_NONE_
<android.webkit.WebSettings: java.lang.String getFixedFontFamily()> ->_NONE_
<javax.sip.RequestEvent: javax.sip.Dialog getDialog()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: javax.sip.address.Router getRouter(gov.nist.javax.sip.message.SIPRequest)> ->_NONE_
<gov.nist.javax.sip.stack.DefaultRouter: java.util.ListIterator getNextHops(javax.sip.message.Request)> ->_NONE_
<android.database.sqlite.SQLiteDatabaseConfiguration: java.lang.String stripPathForLogs(java.lang.String)> ->_NONE_
<android.widget.Scroller: float getCurrVelocity()> ->_NONE_
<android.widget.Scroller: void setFriction(float)> ->_NONE_
<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()> ->_NONE_
<android.media.AudioService: void updateRemoteControlDisplay_syncAfRcs(int)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: org.xml.sax.DTDHandler getDTDHandler()> ->_NONE_
<android.app.Instrumentation: android.os.Bundle getAllocCounts()> ->_NONE_
<java.lang.ClassLoader: java.lang.Class findLoadedClass(java.lang.String)> ->_NONE_
<org.apache.xml.utils.FastStringBuffer: void getChars(int,int,char[],int)> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.CredentialsProvider getCredentialsProvider()> ->_NONE_
<libcore.io.StrictLineReader: int readInt()> ->_NONE_
<java.net.URLConnection: boolean getAllowUserInteraction()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: java.lang.String[] getEnabledProtocols()> ->_NONE_
<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object getAndSet(int,java.lang.Object)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityEventCompat: android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int)> ->_NONE_
<gov.nist.javax.sip.header.ims.Privacy: void setValue(java.lang.String)> ->_NONE_
<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getTextContent()> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.RecordRouteList getRecordRouteHeaders()> ->_NONE_
<android.widget.SearchView: void setOnSuggestionListener(android.widget.SearchView$OnSuggestionListener)> ->_NONE_
<org.apache.xml.serializer.ToStream: java.util.Properties getOutputFormat()> ->_NONE_
<org.apache.http.impl.io.AbstractSessionOutputBuffer: void handleEncodingResult(java.nio.charset.CoderResult)> ->_NONE_
<org.apache.xalan.templates.ElemVariable: boolean getIsTopLevel()> ->_NONE_
<android.telephony.SmsCbMessage: int getMessagePriority()> ->_NONE_
<android.view.InputDevice: android.view.InputDevice getDevice(int)> ->_NONE_
<android.os.CommonClock: long getTime()> ->_NONE_
<org.apache.http.auth.AuthScope: int getPort()> ->_NONE_
<android.content.Intent: java.lang.String getType()> ->_NONE_
<javax.xml.transform.dom.DOMSource: java.lang.String getSystemId()> ->_NONE_
<javax.obex.ClientOperation: void streamClosed(boolean)> ->_NONE_
<android.gesture.GestureOverlayView: void setFadeOffset(long)> ->_NONE_
<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings getVideoClipProperties()> ->_NONE_
<javax.crypto.spec.PBEKeySpec: int getIterationCount()> ->_NONE_
<android.nfc.tech.NfcA: byte[] getAtqa()> ->_NONE_
<android.widget.ScrollBarDrawable: void setHorizontalTrackDrawable(android.graphics.drawable.Drawable)> ->_NONE_
<gov.nist.javax.sip.message.SIPDuplicateHeaderException: void setSIPHeader(gov.nist.javax.sip.header.SIPHeader)> ->_NONE_
<org.apache.http.message.BasicHeader: java.lang.String getValue()> ->_NONE_
<android.widget.TextView: void setAccessibilityCursorPosition(int)> ->_NONE_
<android.view.Choreographer: void setFrameDelay(long)> ->_NONE_
<org.apache.harmony.security.pkcs10.CertificationRequestInfo: byte[] getEncoded()> ->_NONE_
<android.app.ActivityManagerProxy: int[] getRunningUserIds()> ->_NONE_
<android.media.MediaRouter: android.media.MediaRouter$RouteInfo getRouteAtStatic(int)> ->_NONE_
<org.apache.xml.utils.DOMHelper: java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Element)> ->_NONE_
<org.apache.xpath.axes.FilterExprIterator: void setInnerExpression(org.apache.xpath.Expression)> ->_NONE_
<android.graphics.Matrix: void setScale(float,float)> ->_NONE_
<android.filterfw.core.OutputPort: android.filterfw.core.InputPort getBasePort()> ->_NONE_
<gov.nist.javax.sip.header.SIPDate: void setDay(int)> ->_NONE_
<android.view.KeyEvent: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<gov.nist.core.DuplicateNameValueList: void set(gov.nist.core.NameValue)> ->_NONE_
<org.apache.harmony.security.x509.ExtendedKeyUsage: java.util.List getExtendedKeyUsage()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.lang.String getPeerHost()> ->_NONE_
<java.net.URISyntaxException: java.lang.String getReason()> ->_NONE_
<android.media.videoeditor.MediaImageItem: int getScaledWidth()> ->_NONE_
<java.security.cert.CertificateFactory: java.util.Iterator getCertPathEncodings()> ->_NONE_
<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)> ->_NONE_
<android.text.BoringLayout: float getLineMax(int)> ->_NONE_
<org.apache.xml.dtm.ref.DTMAxisIterNodeList: int getLength()> ->_NONE_
<android.text.format.DateFormat: java.lang.String getTimeZoneString(java.util.Calendar,int)> ->_NONE_
<android.app.FragmentBreadCrumbs: android.app.BackStackRecord createBackStackEntry(java.lang.CharSequence,java.lang.CharSequence)> ->_NONE_
<android.net.RouteInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.telephony.CellInfoLte: android.telephony.CellSignalStrengthLte getCellSignalStrength()> ->_NONE_
<android.app.ActivityManagerProxy: boolean killProcessesBelowForeground(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationInfo: java.lang.String getResponse()> ->_NONE_
<android.bluetooth.BluetoothHealthAppConfiguration: int getRole()> ->_NONE_
<org.apache.xpath.patterns.StepPattern: int getPredicateCount()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: void setApplicationData(java.lang.Object)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInScreen(android.graphics.Rect)> ->_NONE_
<junit.runner.BaseTestRunner: java.lang.String getFilteredTrace(java.lang.Throwable)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.SIPDialog getDialog(java.lang.String)> ->_NONE_
<org.apache.http.message.BasicHeaderElement: int getParameterCount()> ->_NONE_
<android.view.animation.AnimationSet: void setStartTime(long)> ->_NONE_
<org.apache.james.mime4j.field.datetime.parser.SimpleCharStream: int getEndLine()> ->_NONE_
<java.text.DecimalFormat: void setMaximumFractionDigits(int)> ->_NONE_
<java.util.jar.InitManifest: int getPos()> ->_NONE_
<org.apache.xalan.templates.ElemTextLiteral: void setPreserveSpace(boolean)> ->_NONE_
<org.apache.http.impl.io.ChunkedInputStream: int read(byte[])> ->_NONE_
<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: int getAndAdd(java.lang.Object,int)> ->_NONE_
<org.apache.xpath.NodeSetDTM: int getWhatToShow()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLInputStream: int read(byte[],int,int)> ->_NONE_
<android.os.CommonClock: void setServerDiedListener(android.os.CommonClock$OnServerDiedListener)> ->_NONE_
<android.filterfw.core.InputPort: boolean isConnected()> ->_NONE_
<gov.nist.javax.sip.header.Accept: void setContentSubType(java.lang.String)> ->_NONE_
<android.view.View: int getScrollBarSize()> ->_NONE_
<java.util.logging.Handler: void setErrorManager(java.util.logging.ErrorManager)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: int getWindowId()> ->_NONE_
<android.bluetooth.BluetoothDevice: boolean setPin(byte[])> ->_NONE_
<android.content.SyncStorageEngine: void setDelayUntilTime(android.accounts.Account,int,java.lang.String,long)> ->_NONE_
<android.database.BulkCursorProxy: android.database.CursorWindow getWindow(int)> ->_NONE_
<android.util.XmlPullAttributes: int getAttributeListValue(int,java.lang.String[],int)> ->_NONE_
<org.apache.harmony.security.x509.tsp.TimeStampReq: org.apache.harmony.security.x509.Extensions getExtensions()> ->_NONE_
<org.xml.sax.helpers.AttributesImpl: void setValue(int,java.lang.String)> ->_NONE_
<org.jivesoftware.smackx.packet.MUCUser: void setPassword(java.lang.String)> ->_NONE_
<android.widget.Space: int getDefaultSize2(int,int)> ->_NONE_
<android.os.BatteryStats: void dumpLocked(java.io.PrintWriter,java.lang.String,int,int)> ->_NONE_
<android.filterfw.core.GLFrame: java.nio.ByteBuffer getData()> ->_NONE_
<android.net.wifi.WifiInfo: int getIpAddress()> ->_NONE_
<android.telephony.SmsMessage: java.lang.String getDisplayMessageBody()> ->_NONE_
<android.app.Activity: android.content.ComponentName getComponentName()> ->_NONE_
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xpath.compiler.XPathParser: java.lang.String getTokenRelative(int)> ->_NONE_
<android.app.ApplicationErrorReport: void dump(android.util.Printer,java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getElementById(java.lang.String)> ->_NONE_
<org.apache.http.impl.cookie.RFC2109Spec: int getVersion()> ->_NONE_
<android.webkit.WebViewClassic: int getTitleHeight()> ->_NONE_
<org.apache.harmony.security.asn1.DerOutputStream: void encodeValueCollection(org.apache.harmony.security.asn1.ASN1ValueCollection)> ->_NONE_
<gov.nist.javax.sip.parser.MaxForwardsParser: gov.nist.javax.sip.header.SIPHeader parse()> ->_NONE_
<android.database.CursorWrapper: long getLong(int)> ->_NONE_
<org.ccil.cowan.tagsoup.Parser: java.lang.Object getProperty(java.lang.String)> ->_NONE_
<android.view.accessibility.AccessibilityManager: int addAccessibilityInteractionConnection(android.view.IWindow,android.view.accessibility.IAccessibilityInteractionConnection)> ->_NONE_
<org.apache.harmony.security.asn1.DerOutputStream: void encodeChoice(org.apache.harmony.security.asn1.ASN1Choice)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.ConnectionStateTLS: byte[] decrypt(byte,byte[],int,int)> ->_NONE_
<android.nfc.NdefRecord: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.filterfw.core.FilterFunction: android.filterfw.core.Frame execute(android.filterfw.core.KeyValueMap)> ->_NONE_
<android.view.animation.LayoutAnimationController: long getDelayForView(android.view.View)> ->_NONE_
<android.os.CommonTimeConfig: int setClientSyncInterval(int)> ->_NONE_
<android.graphics.Paint: float getTextRunAdvances(char[],int,int,int,int,int,float[],int)> ->_NONE_
<android.app.NativeActivity: void setWindowFlags(int,int)> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getUsername()> ->_NONE_
<android.webkit.CallbackProxy: void setWebBackForwardListClient(android.webkit.WebBackForwardListClient)> ->_NONE_
<org.apache.xml.utils.NodeVector: void setTail(int)> ->_NONE_
<java.util.Locale: java.lang.String getDisplayCountry(java.util.Locale)> ->_NONE_
<android.opengl.GLLogWrapper: java.lang.String getTextureEnvTarget(int)> ->_NONE_
<java.net.InetAddress: java.net.InetAddress getByAddress(java.lang.String,byte[])> ->_NONE_
<java.util.logging.Logger: java.util.ResourceBundle getResourceBundle()> ->_NONE_
<android.webkit.WebBackForwardList: int getCurrentIndex()> ->_NONE_
<java.nio.charset.CharsetEncoderICU: boolean canEncode(char)> ->_NONE_
<gov.nist.javax.sip.header.Via: void setMAddr(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.ExpandedNameTable: int getLocalNameID(int)> ->_NONE_
<android.support.v13.app.FragmentPagerAdapter: void startUpdate(android.view.ViewGroup)> ->_NONE_
<java.net.PlainSocketImpl: void socksConnect(java.net.InetAddress,int,int)> ->_NONE_
<java.lang.BootClassLoader: java.util.Enumeration getResources(java.lang.String)> ->_NONE_
<android.view.GLES20Canvas: int getMaximumBitmapHeight()> ->_NONE_
<org.apache.xpath.functions.FuncSystemProperty: void loadPropertyFile(java.lang.String,java.util.Properties)> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: int getNumberOfNodes()> ->_NONE_
<java.net.HttpURLConnection: int getResponseCode()> ->_NONE_
<net.oauth.signature.RSA_SHA1: java.security.PublicKey getPublicKeyFromPemCert(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.ListeningPointImpl: void setSipProvider(gov.nist.javax.sip.SipProviderImpl)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: java.util.Vector getElementCallstack()> ->_NONE_
<android.database.sqlite.SQLiteConnection: void setJournalMode(java.lang.String)> ->_NONE_
<android.app.backup.BackupDataInput: java.lang.String getKey()> ->_NONE_
<android.widget.ActivityChooserModel: boolean loadActivitiesIfNeeded()> ->_NONE_
<android.media.videoeditor.EffectColor: int getType()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setPassword(boolean)> ->_NONE_
<gov.nist.javax.sip.header.AcceptLanguageList: gov.nist.javax.sip.header.AcceptLanguage getLast()> ->_NONE_
<android.support.v4.view.ViewPager: int getOffscreenPageLimit()> ->_NONE_
<android.content.SyncStorageEngine: boolean getMasterSyncAutomatically(int)> ->_NONE_
<java.util.logging.Formatter: java.lang.String getTail(java.util.logging.Handler)> ->_NONE_
<org.apache.xml.utils.ObjectStack: void setTop(java.lang.Object)> ->_NONE_
<android.location.Country: int getSource()> ->_NONE_
<gov.nist.javax.sip.message.MessageFactoryImpl: void setDefaultUserAgentHeader(javax.sip.header.UserAgentHeader)> ->_NONE_
<org.apache.xpath.NodeSetDTM: void setCurrentPos(int)> ->_NONE_
<android.telephony.SmsCbLocation: java.lang.String getPlmn()> ->_NONE_
<org.apache.xpath.patterns.StepPattern: void setAxis(int)> ->_NONE_
<android.view.View: void setContentDescription(java.lang.CharSequence)> ->_NONE_
<org.apache.commons.io.IOUtils: java.util.List readLines(java.io.Reader)> ->_NONE_
<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String getPath()> ->_NONE_
<android.widget.TextView: void setCompoundDrawablePadding(int)> ->_NONE_
<java.net.ServerSocket: boolean getReuseAddress()> ->_NONE_
<org.apache.xml.serializer.utils.SerializerMessages_zh: java.lang.Object[][] getContents()> ->_NONE_
<libcore.icu.NativeDecimalFormat: java.lang.String getPositiveSuffix()> ->_NONE_
<org.apache.http.impl.conn.AbstractPoolEntry: void setState(java.lang.Object)> ->_NONE_
<android.support.v4.view.PagerTabStrip: void setDrawFullUnderline(boolean)> ->_NONE_
<android.content.pm.ComponentInfo: void dumpFront(android.util.Printer,java.lang.String)> ->_NONE_
<android.inputmethodservice.InputMethodService: java.lang.CharSequence getTextForImeAction(int)> ->_NONE_
<android.widget.BaseExpandableListAdapter: int getGroupTypeCount()> ->_NONE_
<android.webkit.WebViewClassic: void setPictureListener(android.webkit.WebView$PictureListener)> ->_NONE_
<libcore.io.ForwardingOs: int getpid()> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: javax.sip.message.Request createRequest(java.lang.String,gov.nist.javax.sip.message.SIPResponse)> ->_NONE_
<org.apache.xml.serializer.dom3.LSSerializerImpl: java.lang.String getInputEncoding(org.w3c.dom.Node)> ->_NONE_
<android.content.DefaultDataHandler: void insert(android.content.ContentResolver,java.lang.String)> ->_NONE_
<org.apache.james.mime4j.field.datetime.parser.SimpleCharStream: int getEndColumn()> ->_NONE_
<android.view.VolumePanel: android.media.ToneGenerator getOrCreateToneGenerator(int)> ->_NONE_
<android.view.GLES20Canvas: int getRenderer()> ->_NONE_
<android.app.Activity: android.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean)> ->_NONE_
<android.app.IntentService: void setIntentRedelivery(boolean)> ->_NONE_
<android.support.v4.app.Fragment: void setRetainInstance(boolean)> ->_NONE_
<gov.nist.javax.sip.address.TelephoneNumber: java.lang.String getIsdnSubaddress()> ->_NONE_
<android.view.View: void setTag(java.lang.Object)> ->_NONE_
<java.net.Socket: void setReceiveBufferSize(int)> ->_NONE_
<org.apache.http.client.methods.HttpRequestBase: org.apache.http.ProtocolVersion getProtocolVersion()> ->_NONE_
<android.database.DatabaseUtils: void dumpCursor(android.database.Cursor,java.io.PrintStream)> ->_NONE_
<org.apache.http.impl.io.ContentLengthOutputStream: void write(int)> ->_NONE_
<org.apache.xalan.transformer.XalanTransformState: org.w3c.dom.Node getCurrentNode()> ->_NONE_
<android.content.res.TypedArray: java.lang.String getPositionDescription()> ->_NONE_
<android.bluetooth.BluetoothA2dp: java.util.List getDevicesMatchingConnectionStates(int[])> ->_NONE_
<android.nfc.tech.NdefFormatable: android.nfc.tech.NdefFormatable get(android.nfc.Tag)> ->_NONE_
<android.content.pm.PackageParser: android.content.pm.PackageParser$Activity parseActivityAlias(android.content.pm.PackageParser$Package,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,int,java.lang.String[])> ->_NONE_
<android.renderscript.RenderScriptGL: void setSurfaceTexture(android.graphics.SurfaceTexture,int,int)> ->_NONE_
<android.widget.CalendarView: void setEnabled(boolean)> ->_NONE_
<java.io.LineNumberReader: int read()> ->_NONE_
<android.widget.ScrollView: int getScrollRange()> ->_NONE_
<android.net.wifi.WifiStateTracker: android.net.NetworkInfo getNetworkInfo()> ->_NONE_
<org.kxml2.io.KXmlParser: void readAttributeListDeclaration()> ->_NONE_
<org.apache.xml.utils.URI: void setScheme(java.lang.String)> ->_NONE_
<android.app.ApplicationPackageManager: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)> ->_NONE_
<gov.nist.javax.sip.stack.TLSMessageChannel: void handleException(java.text.ParseException,gov.nist.javax.sip.message.SIPMessage,java.lang.Class,java.lang.String,java.lang.String)> ->_NONE_
<android.content.res.Resources: void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle)> ->_NONE_
<android.net.sip.SipProfile: java.lang.String getAuthUserName()> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertImpl: java.util.Set getNonCriticalExtensionOIDs()> ->_NONE_
<org.apache.james.mime4j.field.address.Mailbox: java.lang.String getLocalPart()> ->_NONE_
<android.text.BoringLayout: int getLineDescent(int)> ->_NONE_
<java.util.Date: void setSeconds(int)> ->_NONE_
<android.os.Bundle: boolean[] getBooleanArray(java.lang.String)> ->_NONE_
<android.os.UserManager: long getSerialNumberForUser(android.os.UserHandle)> ->_NONE_
<java.util.concurrent.ThreadPoolExecutor: void setCorePoolSize(int)> ->_NONE_
<java.util.concurrent.ForkJoinTask: java.lang.Throwable getThrowableException()> ->_NONE_
<org.ccil.cowan.tagsoup.PYXWriter: void endElement(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<org.apache.james.mime4j.field.datetime.DateTime: int getMinute()> ->_NONE_
<java.text.MessageFormat: void setFormat(int,java.text.Format)> ->_NONE_
<android.inputmethodservice.InputMethodService: void onUpdateCursor(android.graphics.Rect)> ->_NONE_
<javax.crypto.spec.RC5ParameterSpec: int getWordSize()> ->_NONE_
<android.media.MediaRouter: android.media.MediaRouter$RouteInfo getSystemAudioRoute()> ->_NONE_
<android.test.mock.MockPackageManager: java.lang.String getInstallerPackageName(java.lang.String)> ->_NONE_
<java.util.prefs.FilePreferencesImpl: java.lang.String getSpi(java.lang.String)> ->_NONE_
<android.webkit.CallbackProxy: void setWebViewClient(android.webkit.WebViewClient)> ->_NONE_
<java.nio.HeapByteBuffer: double getDouble()> ->_NONE_
<android.webkit.WebViewClassic: int getWidth()> ->_NONE_
<android.drm.mobile1.DrmConstraintInfo: java.util.Date getStartDate()> ->_NONE_
<android.location.LocationRequest: android.location.LocationRequest setExpireAt(long)> ->_NONE_
<java.text.DateFormat: java.text.DateFormat getInstance()> ->_NONE_
<java.io.FilterWriter: void write(char[],int,int)> ->_NONE_
<org.apache.xalan.transformer.KeyTable: java.util.Vector getKeyDeclarations()> ->_NONE_
<android.webkit.WebSettingsClassic: void setLightTouchEnabled(boolean)> ->_NONE_
<android.animation.ObjectAnimator: void setPropertyName(java.lang.String)> ->_NONE_
<android.graphics.YuvImage: int getWidth()> ->_NONE_
<org.apache.commons.io.EndianUtils: void writeSwappedInteger(java.io.OutputStream,int)> ->_NONE_
<android.support.v4.app.FragmentManagerImpl: void setBackStackIndex(int,android.support.v4.app.BackStackRecord)> ->_NONE_
<android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()> ->_NONE_
<org.apache.xml.serializer.SerializerBase: void setNamespaceMappings(org.apache.xml.serializer.NamespaceMappings)> ->_NONE_
<android.webkit.WebSettingsClassic: java.lang.String getDefaultTextEncodingName()> ->_NONE_
<gov.nist.javax.sip.parser.PipelinedMsgParser: int getNewUid()> ->_NONE_
<android.webkit.WebSettings: boolean getSavePassword()> ->_NONE_
<android.widget.SuggestionsAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)> ->_NONE_
<android.view.MotionEvent: long getHistoricalEventTimeNano(int)> ->_NONE_
<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()> ->_NONE_
<android.telephony.CellIdentityCdma: int getLatitude()> ->_NONE_
<org.apache.xpath.axes.LocPathIterator: void setShouldCacheNodes(boolean)> ->_NONE_
<javax.xml.datatype.Duration: int getHours()> ->_NONE_
<org.apache.http.impl.auth.RFC2617Scheme: java.lang.String getRealm()> ->_NONE_
<gov.nist.javax.sip.header.InReplyTo: java.lang.String encodeBody()> ->_NONE_
<javax.crypto.EncryptedPrivateKeyInfo: java.security.spec.PKCS8EncodedKeySpec getKeySpec(java.security.Key,java.security.Provider)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: boolean getCompatibleMode()> ->_NONE_
<android.app.ListFragment: void setListShownNoAnimation(boolean)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack getCurrentTemplateElements()> ->_NONE_
<org.apache.harmony.luni.lang.reflect.ImplForVariable: java.lang.reflect.Type[] getBounds()> ->_NONE_
<android.security.SystemKeyStore: java.io.File getKeyFile(java.lang.String)> ->_NONE_
<android.preference.DialogPreference: void setDialogIcon(android.graphics.drawable.Drawable)> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationHeader: void setResponse(java.lang.String)> ->_NONE_
<android.media.MediaExtractor: void setDataSource(java.lang.String,java.util.Map)> ->_NONE_
<android.content.Intent: void setAllowFds(boolean)> ->_NONE_
<android.webkit.AccessibilityInjector: java.lang.String getScreenReaderInjectionUrl()> ->_NONE_
<java.io.File: boolean setReadOnly()> ->_NONE_
<android.widget.ListPopupWindow: void setListItemExpandMax(int)> ->_NONE_
<org.apache.commons.io.input.CountingInputStream: long getByteCount()> ->_NONE_
<java.util.GregorianCalendar: int getActualMinimum(int)> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getMethod()> ->_NONE_
<android.gesture.GestureOverlayView: void setGestureStrokeLengthThreshold(float)> ->_NONE_
<android.webkit.WebSettingsClassic: void setSyntheticLinksEnabled(boolean)> ->_NONE_
<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.DTM getDTM(int)> ->_NONE_
<android.widget.AutoCompleteTextView: void setDropDownHeight(int)> ->_NONE_
<android.webkit.CacheManager: java.io.File getCacheFileBaseDir()> ->_NONE_
<java.text.Collator: void setStrength(int)> ->_NONE_
<android.test.mock.MockPackageManager: java.util.List getPreferredPackages(int)> ->_NONE_
<java.net.ServerSocket: java.nio.channels.ServerSocketChannel getChannel()> ->_NONE_
<org.apache.xml.serializer.ToStream: void setOutputStream(java.io.OutputStream)> ->_NONE_
<org.apache.harmony.security.asn1.ASN1BitString: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> ->_NONE_
<gov.nist.javax.sip.message.SIPDuplicateHeaderException: void setSIPMessage(gov.nist.javax.sip.message.SIPMessage)> ->_NONE_
<org.apache.xalan.transformer.TransformerIdentityImpl: void setResult(javax.xml.transform.Result)> ->_NONE_
<org.jivesoftware.smack.sasl.SASLAnonymous: java.lang.String getChallengeResponse(byte[])> ->_NONE_
<gov.nist.javax.sip.address.TelephoneNumber: java.lang.String getPostDial()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.Object getUserData(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getDocument()> ->_NONE_
<android.content.pm.PackageItemInfo: android.content.res.XmlResourceParser loadXmlMetaData(android.content.pm.PackageManager,java.lang.String)> ->_NONE_
<org.apache.xalan.templates.DecimalFormatProperties: void setDecimalSeparator(char)> ->_NONE_
<net.oauth.signature.HMAC_SHA1: void setConsumerSecret(java.lang.String)> ->_NONE_
<gov.nist.core.HostPort: java.net.InetAddress getInetAddress()> ->_NONE_
<android.speech.srec.WaveHeader: int getNumBytes()> ->_NONE_
<org.apache.xml.dtm.ref.ExpandedNameTable: java.lang.String getNamespace(int)> ->_NONE_
<android.database.sqlite.SQLiteDatabase: java.lang.String getLabel()> ->_NONE_
<android.widget.AutoCompleteTextView: boolean setFrame(int,int,int,int)> ->_NONE_
<java.io.OutputStream: void write(byte[])> ->_NONE_
<android.text.BoringLayout: int getEllipsisCount(int)> ->_NONE_
<java.security.cert.X509CertSelector: java.util.Date getCertificateValid()> ->_NONE_
<org.jivesoftware.smack.packet.DataMessage: void log(java.lang.String)> ->_NONE_
<libcore.net.url.FtpURLConnection: java.io.OutputStream getOutputStream()> ->_NONE_
<java.sql.DataTruncation: boolean getParameter()> ->_NONE_
<android.view.View: void setAlpha(float)> ->_NONE_
<java.util.concurrent.atomic.AtomicIntegerArray: void set(int,int)> ->_NONE_
<android.text.style.SuggestionRangeSpan: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)> ->_NONE_
<android.widget.Editor: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)> ->_NONE_
<android.os.Binder: void dumpAsync(java.io.FileDescriptor,java.lang.String[])> ->_NONE_
<android.hardware.usb.UsbManager: void setMassStorageBackingFile(java.lang.String)> ->_NONE_
<android.support.v4.app.ShareCompatJB: java.lang.String escapeHtml(java.lang.CharSequence)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.DecimalFormatProperties getDecimalFormat(int)> ->_NONE_
<android.view.View: int getMeasuredWidthAndState()> ->_NONE_
<org.apache.harmony.security.asn1.DerOutputStream: void getSequenceOfLength(org.apache.harmony.security.asn1.ASN1SequenceOf)> ->_NONE_
<android.app.ContextImpl: java.io.File getObbDir()> ->_NONE_
<android.service.dreams.DreamService: boolean getWindowFlagValue(int,boolean)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: void setExtensionElementPrefixes(org.apache.xml.utils.StringVector)> ->_NONE_
<android.hardware.usb.UsbEndpoint: int getInterval()> ->_NONE_
<android.content.Intent: android.content.Intent setType(java.lang.String)> ->_NONE_
<android.filterfw.core.FilterFunction: android.filterfw.core.Frame executeWithArgList(java.lang.Object[])> ->_NONE_
<android.widget.TextView: java.lang.CharSequence getError()> ->_NONE_
<android.graphics.Paint: void getTextPath(char[],int,int,float,float,android.graphics.Path)> ->_NONE_
<org.xml.sax.helpers.AttributesImpl: java.lang.String getValue(int)> ->_NONE_
<java.io.EmulatedFieldsForLoading: boolean get(java.lang.String,boolean)> ->_NONE_
<android.content.res.TypedArray: int getColor(int,int)> ->_NONE_
<android.webkit.DeviceOrientationService: void maybeSendChange(double,double,double)> ->_NONE_
<android.os.storage.StorageVolume: java.io.File getPathFile()> ->_NONE_
<android.speech.tts.TtsEngines: java.lang.String getLocalePrefForEngine(java.lang.String)> ->_NONE_
<android.os.UserManager: void setGuestEnabled(boolean)> ->_NONE_
<android.opengl.GLException: int getError()> ->_NONE_
<android.widget.AutoCompleteTextView: int getDropDownHorizontalOffset()> ->_NONE_
<android.net.http.Headers: java.util.ArrayList getSetCookie()> ->_NONE_
<android.app.ActivityManagerProxy: void grantUriPermission(android.app.IApplicationThread,java.lang.String,android.net.Uri,int)> ->_NONE_
<android.renderscript.Font: java.lang.String getFontFileName(java.lang.String,android.renderscript.Font$Style)> ->_NONE_
<android.telephony.gsm.SmsManager: boolean updateMessageOnSim(int,int,byte[])> ->_NONE_
<org.apache.xalan.templates.ElemLiteralResult: java.lang.String getNodeName()> ->_NONE_
<java.nio.ServerSocketChannelImpl: java.io.FileDescriptor getFD()> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: java.lang.String getLocalName()> ->_NONE_
<javax.xml.validation.SchemaFactoryFinder: void debugPrintln(java.lang.String)> ->_NONE_
<javax.crypto.Cipher: java.security.spec.AlgorithmParameterSpec getMaxAllowedParameterSpec(java.lang.String)> ->_NONE_
<java.net.Authenticator: java.lang.String getRequestingPrompt()> ->_NONE_
<org.kxml2.io.KXmlSerializer: org.xmlpull.v1.XmlSerializer text(char[],int,int)> ->_NONE_
<java.text.NumberFormat: java.text.NumberFormat getInstance()> ->_NONE_
<android.widget.SimpleCursorTreeAdapter: void setViewText(android.widget.TextView,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.DialogTimeoutEvent: gov.nist.javax.sip.DialogTimeoutEvent$Reason getReason()> ->_NONE_
<org.apache.harmony.security.asn1.DerOutputStream: void getExplicitLength(org.apache.harmony.security.asn1.ASN1Explicit)> ->_NONE_
<android.widget.RadioGroup: void setOnCheckedChangeListener(android.widget.RadioGroup$OnCheckedChangeListener)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: void setRetransmitTimer(int)> ->_NONE_
<android.widget.AbsSpinner: int getCount()> ->_NONE_
<android.drm.DrmRights: byte[] getData()> ->_NONE_
<gov.nist.core.NameValueList: java.util.Iterator getNames()> ->_NONE_
<org.apache.http.impl.cookie.RFC2965VersionAttributeHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)> ->_NONE_
<android.support.v4.view.AccessibilityDelegateCompat: void sendAccessibilityEvent(android.view.View,int)> ->_NONE_
<java.text.StringCharacterIterator: char setIndex(int)> ->_NONE_
<java.net.URLConnection: void setDefaultRequestProperty(java.lang.String,java.lang.String)> ->_NONE_
<android.net.wifi.WifiStateMachine: void sendNetworkStateChangeBroadcast(java.lang.String)> ->_NONE_
<android.view.Window: android.content.res.TypedArray getWindowStyle()> ->_NONE_
<org.apache.xml.utils.UnImplNode: void setActualEncoding(java.lang.String)> ->_NONE_
<android.os.ServiceManager: android.os.IBinder getService(java.lang.String)> ->_NONE_
<android.app.ApplicationErrorReport: android.content.ComponentName getErrorReportReceiver(android.content.Context,java.lang.String,int)> ->_NONE_
<android.webkit.PluginList: java.util.List getList()> ->_NONE_
<gov.nist.javax.sip.header.TimeStamp: long getTime()> ->_NONE_
<android.text.style.DrawableMarginSpan: int getLeadingMargin(boolean)> ->_NONE_
<android.nfc.tech.MifareUltralight: int getMaxTransceiveLength()> ->_NONE_
<android.graphics.drawable.RotateDrawable: int getIntrinsicHeight()> ->_NONE_
<java.net.CookieManager: java.net.CookieStore getCookieStore()> ->_NONE_
<android.media.videoeditor.MediaVideoItem: int getAudioType()> ->_NONE_
<android.nfc.tech.Ndef: java.lang.String getType()> ->_NONE_
<android.text.style.SuggestionSpan: java.lang.String getLocale()> ->_NONE_
<java.util.prefs.AbstractPreferences: java.util.prefs.AbstractPreferences getChild(java.lang.String)> ->_NONE_
<javax.crypto.EncryptedPrivateKeyInfo: byte[] getEncryptedData()> ->_NONE_
<android.text.Layout: int getLineVisibleEnd(int)> ->_NONE_
<java.util.concurrent.atomic.AtomicLongArray: long get(int)> ->_NONE_
<org.apache.commons.io.IOUtils: void writeLines(java.util.Collection,java.lang.String,java.io.OutputStream,java.lang.String)> ->_NONE_
<org.apache.xpath.XPathContext: java.util.Stack getContextNodeListsStack()> ->_NONE_
<android.net.wifi.NetworkUpdateResult: void setNetworkId(int)> ->_NONE_
<android.app.WallpaperManager: int getDesiredMinimumHeight()> ->_NONE_
<android.location.Location: void setExtraLocation(java.lang.String,android.location.Location)> ->_NONE_
<java.text.DecimalFormat: void setGroupingSize(int)> ->_NONE_
<java.util.zip.ZipEntry: long getSize()> ->_NONE_
<android.graphics.drawable.LayerDrawable: void setAlpha(int)> ->_NONE_
<gov.nist.javax.sip.SipProviderImpl: javax.sip.ListeningPoint getListeningPoint()> ->_NONE_
<android.media.MediaRecorder: void setOutputFile(java.lang.String)> ->_NONE_
<org.apache.xml.utils.FastStringBuffer: java.lang.StringBuffer getString(java.lang.StringBuffer,int,int)> ->_NONE_
<gov.nist.javax.sip.header.CallInfo: java.lang.String getPurpose()> ->_NONE_
<android.widget.ActivityChooserModel: android.widget.ActivityChooserModel get(android.content.Context,java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.DTMAxisIterNodeList: org.apache.xml.dtm.DTMAxisIterator getDTMAxisIterator()> ->_NONE_
<gov.nist.javax.sip.address.TelURLImpl: void setPhoneContext(java.lang.String)> ->_NONE_
<android.content.pm.PathPermission: java.lang.String getWritePermission()> ->_NONE_
<org.apache.xml.serializer.utils.URI: void setScheme(java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: boolean getNeedClientAuth()> ->_NONE_
<android.widget.SearchView: void setImeOptions(int)> ->_NONE_
<android.support.v4.app.TaskStackBuilderJellybean: android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle)> ->_NONE_
<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaItem parseMediaItem(org.xmlpull.v1.XmlPullParser)> ->_NONE_
<android.location.Geofence: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<jp.co.omronsoft.openwnn.OpenWnnDictionaryImpl: byte[][] getConnectMatrix()> ->_NONE_
<android.webkit.WebSettingsClassic: void setRenderPriority(android.webkit.WebSettings$RenderPriority)> ->_NONE_
<android.net.sip.SipAudioCall: android.net.sip.SipSession getSipSession()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPublicKey: java.math.BigInteger getY()> ->_NONE_
<java.util.zip.ZipEntry: void setExtra(byte[])> ->_NONE_
<org.jivesoftware.smack.RosterEntry: org.jivesoftware.smackx.packet.VCard getVCard()> ->_NONE_
<android.renderscript.Program: android.renderscript.Type getConstant(int)> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: boolean declAlreadyDeclared(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.stack.SIPClientTransaction: void setNextHop(javax.sip.address.Hop)> ->_NONE_
<org.apache.http.impl.conn.AbstractClientConnAdapter: java.net.InetAddress getRemoteAddress()> ->_NONE_
<org.apache.harmony.xml.dom.LeafNodeImpl: org.w3c.dom.Node getNextSibling()> ->_NONE_
<android.telephony.CellIdentityCdma: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.support.v4.content.CursorLoader: java.lang.String[] getSelectionArgs()> ->_NONE_
<android.opengl.GLLogWrapper: java.lang.String getCap(int)> ->_NONE_
<android.security.KeyStore: byte[] getKeyBytes(java.lang.String)> ->_NONE_
<org.apache.xml.utils.UnImplNode: boolean getStrictErrorChecking()> ->_NONE_
<java.net.Socks4Message: byte[] getBytes()> ->_NONE_
<org.xmlpull.v1.XmlPullParserFactory: void setValidating(boolean)> ->_NONE_
<org.apache.http.auth.AuthSchemeRegistry: java.util.List getSchemeNames()> ->_NONE_
<org.jivesoftware.smack.packet.Message: java.lang.String getBody()> ->_NONE_
<org.ccil.cowan.tagsoup.XMLWriter: void processingInstruction(java.lang.String,java.lang.String)> ->_NONE_
<android.app.Activity: void setFeatureDrawable(int,android.graphics.drawable.Drawable)> ->_NONE_
<java.security.AccessController: java.security.AccessControlContext getContext()> ->_NONE_
<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])> ->_NONE_
<android.bluetooth.BluetoothHeadset: int getConnectionState(android.bluetooth.BluetoothDevice)> ->_NONE_
<android.webkit.AccessibilityInjectorFallback: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> ->_NONE_
<android.app.Activity: void setFeatureDrawableUri(int,android.net.Uri)> ->_NONE_
<android.widget.ActivityChooserModel: android.content.Intent getIntent()> ->_NONE_
<org.apache.xml.utils.URI: void setFragment(java.lang.String)> ->_NONE_
<android.filterfw.core.VertexFrame: void setFloats(float[])> ->_NONE_
<org.apache.xpath.functions.FuncTrue: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<gov.nist.javax.sip.header.ims.PPreferredService: void setValue(java.lang.String)> ->_NONE_
<android.widget.ImageView: void setBaselineAlignBottom(boolean)> ->_NONE_
<android.webkit.WebViewClassic: void setLayerType(int,android.graphics.Paint)> ->_NONE_
<gov.nist.javax.sip.message.SIPRequest: void setMethod(java.lang.String)> ->_NONE_
<org.apache.commons.logging.LogSource: java.lang.String[] getLogNames()> ->_NONE_
<android.renderscript.ScriptIntrinsicConvolve5x5: android.renderscript.Script$KernelID getKernelID()> ->_NONE_
<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(java.lang.String)> ->_NONE_
<android.content.ContentProviderOperation: android.net.Uri getUri()> ->_NONE_
<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)> ->_NONE_
<org.xml.sax.helpers.XMLFilterImpl: void parse(java.lang.String)> ->_NONE_
<android.media.videoeditor.EffectKenBurns: android.graphics.Rect getEndRect()> ->_NONE_
<android.test.mock.MockResources: android.content.res.Configuration getConfiguration()> ->_NONE_
<org.apache.xpath.functions.FunctionMultiArgs: void setArg(org.apache.xpath.Expression,int)> ->_NONE_
<org.apache.xalan.templates.ElemForEach: int getSortElemCount()> ->_NONE_
<org.apache.james.mime4j.field.Field: java.lang.String getRaw()> ->_NONE_
<org.apache.xalan.templates.ElemUnknown: void execute(org.apache.xalan.transformer.TransformerImpl)> ->_NONE_
<android.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)> ->_NONE_
<android.webkit.WebSettings: void setUserAgentString(java.lang.String)> ->_NONE_
<android.webkit.JWebCoreJavaBridge: java.lang.String getSignedPublicKey(int,java.lang.String,java.lang.String)> ->_NONE_
<android.text.util.Rfc822Token: java.lang.String getName()> ->_NONE_
<android.app.UiModeManager: int getCurrentModeType()> ->_NONE_
<org.apache.commons.io.output.FileWriterWithEncoding: void write(java.lang.String,int,int)> ->_NONE_
<android.renderscript.Script: void setVar(int,android.renderscript.BaseObj)> ->_NONE_
<android.text.BoringLayout: android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: void sendMessage(byte[],java.net.InetAddress,int,boolean)> ->_NONE_
<java.io.ObjectInputStream: long readLong()> ->_NONE_
<android.webkit.WebViewClassic: void passToJavaScript(java.lang.String,android.view.KeyEvent)> ->_NONE_
<android.text.TextUtils: int getOffsetBefore(java.lang.CharSequence,int)> ->_NONE_
<android.hardware.input.InputManager: void sendMessageToInputDeviceListenersLocked(int,int)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: void setErrorListener(javax.xml.transform.ErrorListener)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: int getWindowId(java.lang.Object)> ->_NONE_
<org.apache.harmony.xml.dom.LeafNodeImpl: org.w3c.dom.Node getPreviousSibling()> ->_NONE_
<android.widget.ScrollBarDrawable: void setAlwaysDrawVerticalTrack(boolean)> ->_NONE_
<android.net.nsd.NsdServiceInfo: void setServiceName(java.lang.String)> ->_NONE_
<org.jivesoftware.smack.packet.XMPPError: void setMessage(java.lang.String)> ->_NONE_
<org.apache.commons.io.FileCleaningTracker: int getTrackCount()> ->_NONE_
<gov.nist.javax.sip.header.ErrorInfo: void setErrorInfo(javax.sip.address.URI)> ->_NONE_
<org.apache.xpath.patterns.StepPattern: org.apache.xpath.Expression getExpression()> ->_NONE_
<gov.nist.javax.sip.address.SipUri: void setAuthority(gov.nist.javax.sip.address.Authority)> ->_NONE_
<android.widget.AutoCompleteTextView: void replaceText(java.lang.CharSequence)> ->_NONE_
<org.apache.xml.utils.XMLReaderManager: org.xml.sax.XMLReader getXMLReader()> ->_NONE_
<gov.nist.javax.sip.header.ParametersHeader: gov.nist.javax.sip.address.GenericURI getParameterAsURI(java.lang.String)> ->_NONE_
<android.app.ActivityManagerProxy: void setProcessLimit(int)> ->_NONE_
<org.apache.xpath.XPathContext: org.apache.xml.utils.PrefixResolver getNamespaceContext()> ->_NONE_
<android.media.AudioRecord: int getState()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: void setUseClientMode(boolean)> ->_NONE_
<android.widget.TextView: void setExtracting(android.view.inputmethod.ExtractedTextRequest)> ->_NONE_
<java.util.Properties: java.lang.String getProperty(java.lang.String)> ->_NONE_
<android.webkit.JWebCoreJavaBridge: void setCookies(java.lang.String,java.lang.String)> ->_NONE_
<android.opengl.GLLogWrapper: int getTextureEnvParamCount(int)> ->_NONE_
<javax.xml.transform.sax.SAXSource: org.xml.sax.InputSource getInputSource()> ->_NONE_
<android.database.sqlite.SQLiteConnection: int executeForCursorWindow(java.lang.String,java.lang.Object[],android.database.CursorWindow,int,int,boolean,android.os.CancellationSignal)> ->_NONE_
<libcore.io.ForwardingOs: int geteuid()> ->_NONE_
<android.content.BroadcastReceiver: boolean getDebugUnregister()> ->_NONE_
<android.webkit.WebView: int getContentWidth()> ->_NONE_
<org.jivesoftware.smack.packet.Bind: void setResource(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: java.lang.String getPrefix(int)> ->_NONE_
<android.preference.PreferenceManager: android.preference.PreferenceManager$OnPreferenceTreeClickListener getOnPreferenceTreeClickListener()> ->_NONE_
<android.support.v4.util.TimeUtils: void formatDuration(long,java.io.PrintWriter,int)> ->_NONE_
<java.security.cert.X509CertSelector: void setKeyUsage(boolean[])> ->_NONE_
<java.text.ChoiceFormat: java.lang.Object[] getFormats()> ->_NONE_
<android.preference.MultiCheckPreference: void setEntries(java.lang.CharSequence[])> ->_NONE_
<android.webkit.PluginManager: java.lang.Class getPluginClass(java.lang.String,java.lang.String)> ->_NONE_
<android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter,int)> ->_NONE_
<android.speech.tts.TextToSpeech: java.util.Locale getLanguage()> ->_NONE_
<org.xml.sax.ext.Locator2Impl: java.lang.String getEncoding()> ->_NONE_
<android.webkit.PluginFullScreenHolder: void setContentView(android.view.View)> ->_NONE_
<android.net.LinkSocket: void log(java.lang.String)> ->_NONE_
<android.util.NtpTrustedTime: long getCachedNtpTime()> ->_NONE_
<android.app.PendingIntent: android.app.PendingIntent getActivitiesAsUser(android.content.Context,int,android.content.Intent[],int,android.os.Bundle,android.os.UserHandle)> ->_NONE_
<gov.nist.javax.sip.header.From: java.lang.String getDisplayName()> ->_NONE_
<org.apache.http.entity.StringEntity: java.io.InputStream getContent()> ->_NONE_
<android.nfc.tech.MifareClassic: int getBlockCountInSector(int)> ->_NONE_
<android.widget.TextView: void setTypefaceFromAttrs(java.lang.String,int,int)> ->_NONE_
<android.media.AudioService: void setRingtonePlayer(android.media.IRingtonePlayer)> ->_NONE_
<org.apache.harmony.xml.ExpatParser: void parseDocument(java.io.InputStream)> ->_NONE_
<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: org.apache.http.impl.conn.AbstractPoolEntry getPoolEntry()> ->_NONE_
<junit.runner.TestCaseClassLoader: byte[] loadJarData(java.lang.String,java.lang.String)> ->_NONE_
<android.database.CursorWrapper: java.lang.String[] getColumnNames()> ->_NONE_
<android.widget.AppSecurityPermissions: android.widget.AppSecurityPermissions$PermissionItemView getPermissionItemView(android.widget.AppSecurityPermissions$MyPermissionGroupInfo,android.widget.AppSecurityPermissions$MyPermissionInfo,boolean,java.lang.CharSequence)> ->_NONE_
<org.jivesoftware.smackx.provider.MUCUserProvider: com.google.common.io.protocol.ProtoBufType getProtoBufType()> ->_NONE_
<jp.co.omronsoft.openwnn.OpenWnnEN: jp.co.omronsoft.openwnn.OpenWnnEN getInstance()> ->_NONE_
<java.util.SimpleTimeZone: void setRawOffset(int)> ->_NONE_
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getDatabaseLocked(boolean)> ->_NONE_
<android.widget.RemoteViewsAdapter: java.lang.Object getItem(int)> ->_NONE_
<android.widget.RelativeLayout: void setGravity(int)> ->_NONE_
<android.net.wifi.WifiStateMachine: void updateBatteryWorkSource(android.os.WorkSource)> ->_NONE_
<android.view.VolumePanel: void postRemoteVolumeChanged(int,int)> ->_NONE_
<android.bluetooth.BluetoothInputDevice: boolean connect(android.bluetooth.BluetoothDevice)> ->_NONE_
<gov.nist.javax.sip.header.ims.Privacy: void setPrivacy(java.lang.String)> ->_NONE_
<org.apache.xpath.objects.XString: java.lang.String getTypeString()> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: java.lang.String getRequestProperty(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPRequest createCancelRequest()> ->_NONE_
<org.apache.http.impl.io.HttpResponseParser: org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer)> ->_NONE_
<javax.obex.ClientSession: long getConnectionID()> ->_NONE_
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getId()> ->_NONE_
<android.content.ContextWrapper: java.io.File getSharedPrefsFile(java.lang.String)> ->_NONE_
<android.app.Fragment: android.app.Fragment getTargetFragment()> ->_NONE_
<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)> ->_NONE_
<android.widget.GridLayout: boolean getUseDefaultMargins()> ->_NONE_
<android.content.Intent: java.lang.String getDataString()> ->_NONE_
<android.hardware.usb.UsbDevice: int getProductId()> ->_NONE_
<org.apache.harmony.security.x509.TBSCertList: byte[] getEncoded()> ->_NONE_
<android.widget.AbsListView: void setMultiChoiceModeListener(android.widget.AbsListView$MultiChoiceModeListener)> ->_NONE_
<org.apache.http.client.protocol.ClientContextConfigurer: void setAuthSchemePref(java.util.List)> ->_NONE_
<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()> ->_NONE_
<android.support.v4.net.TrafficStatsCompat: int getThreadStatsTag()> ->_NONE_
<org.apache.http.impl.client.RedirectLocations: java.util.List getAll()> ->_NONE_
<android.view.ViewStub: void setLayoutInflater(android.view.LayoutInflater)> ->_NONE_
<android.webkit.WebSettingsClassic: void setDefaultZoom(android.webkit.WebSettings$ZoomDensity)> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: void setMediaType(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.Utils: gov.nist.javax.sip.Utils getInstance()> ->_NONE_
<android.database.sqlite.SQLiteDatabase: void dumpAll(android.util.Printer,boolean)> ->_NONE_
<android.webkit.WebView: void setDownloadListener(android.webkit.DownloadListener)> ->_NONE_
<android.gesture.GestureStore: void setSequenceType(int)> ->_NONE_
<android.media.videoeditor.Transition: long getMaximumDuration()> ->_NONE_
<gov.nist.javax.sip.header.Protocol: java.lang.String getProtocolVersion()> ->_NONE_
<android.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int)> ->_NONE_
<android.nfc.NfcAdapter: int getAdapterState()> ->_NONE_
<android.graphics.drawable.DrawableContainer: int getMinimumWidth()> ->_NONE_
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long)> ->_NONE_
<android.drm.DrmManagerClient: int getErrorType(int)> ->_NONE_
<android.support.v4.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> ->_NONE_
<android.renderscript.RSTextureView: android.renderscript.RenderScriptGL getRenderScriptGL()> ->_NONE_
<android.view.accessibility.AccessibilityInteractionClient: void setFindAccessibilityNodeInfoResult(android.view.accessibility.AccessibilityNodeInfo,int)> ->_NONE_
<android.opengl.GLLogWrapper: java.lang.String getTextureParamName(float)> ->_NONE_
<android.widget.TabWidget: void setDividerDrawable(android.graphics.drawable.Drawable)> ->_NONE_
<android.hardware.usb.UsbDevice: int getDeviceProtocol()> ->_NONE_
<javax.xml.transform.sax.SAXResult: void setLexicalHandler(org.xml.sax.ext.LexicalHandler)> ->_NONE_
<android.view.InputDevice: java.util.List getMotionRanges()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setBeforeText(java.lang.CharSequence)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setPackageName(java.lang.Object,java.lang.CharSequence)> ->_NONE_
<org.apache.james.mime4j.message.TempFileBinaryBody: void setParent(org.apache.james.mime4j.message.Entity)> ->_NONE_
<java.util.SimpleTimeZone: void setEndRule(int,int,int)> ->_NONE_
<android.widget.AppSecurityPermissions: android.view.View getPermissionsView(int)> ->_NONE_
<android.text.Selection: int getSelectionEnd(java.lang.CharSequence)> ->_NONE_
<org.apache.http.impl.conn.AbstractClientConnAdapter: java.lang.Object getAttribute(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)> ->_NONE_
<android.view.ViewConfiguration: int getJumpTapTimeout()> ->_NONE_
<org.ccil.cowan.tagsoup.PYXWriter: void pitarget(char[],int,int)> ->_NONE_
<gov.nist.javax.sip.header.extensions.References: void setValue(java.lang.String)> ->_NONE_
<libcore.icu.NativeDecimalFormat: void setMinimumIntegerDigits(int)> ->_NONE_
<android.app.Dialog: android.content.ComponentName getAssociatedActivity()> ->_NONE_
<jp.co.omronsoft.openwnn.TextCandidatesViewManager: android.view.View getCurrentView()> ->_NONE_
<org.apache.xml.serializer.SerializerBase: void setStandaloneInternal(java.lang.String)> ->_NONE_
<android.widget.SearchView: java.lang.CharSequence getQueryHint()> ->_NONE_
<java.nio.SelectionKeyImpl: boolean isConnected()> ->_NONE_
<android.content.res.AssetFileDescriptor: long getDeclaredLength()> ->_NONE_
<android.webkit.WebSettings: boolean getJavaScriptCanOpenWindowsAutomatically()> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Enumerated: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)> ->_NONE_
<android.net.ConnectivityManager: android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()> ->_NONE_
<org.apache.harmony.xml.dom.NotationImpl: java.lang.String getSystemId()> ->_NONE_
<java.net.URLConnection: java.io.OutputStream getOutputStream()> ->_NONE_
<java.nio.MappedByteBuffer: boolean isLoaded()> ->_NONE_
<java.io.FileInputStream: int read(byte[])> ->_NONE_
<android.nfc.tech.Ndef: android.nfc.tech.Ndef get(android.nfc.Tag)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.NativeCrypto: void setEnabledCipherSuites(int,java.lang.String[])> ->_NONE_
<android.net.NetworkPolicy: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: java.lang.String getNodeValue(int)> ->_NONE_
<java.util.logging.LogManager: java.lang.String getProperty(java.lang.String)> ->_NONE_
<android.app.FragmentBreadCrumbs: int getPreEntryCount()> ->_NONE_
<org.apache.xpath.VariableStack: void setLocalVariable(int,org.apache.xpath.objects.XObject)> ->_NONE_
<org.apache.harmony.security.pkcs7.SignedData: int getVersion()> ->_NONE_
<android.webkit.WebSettingsClassic: void setDefaultFontSize(int)> ->_NONE_
<java.util.Locale: java.lang.String getISO3Language()> ->_NONE_
<android.filterfw.core.NativeFrame: void setDataFromFrame(android.filterfw.core.Frame)> ->_NONE_
<android.widget.Switch: java.lang.CharSequence getTextOff()> ->_NONE_
<org.apache.xml.serializer.ToHTMLStream: void setOutputFormat(java.util.Properties)> ->_NONE_
<android.view.accessibility.AccessibilityEvent: void setEventType(int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.KeyManagerImpl: java.lang.String[] getServerAliases(java.lang.String,java.security.Principal[])> ->_NONE_
<android.database.sqlite.SQLiteCursor: android.database.sqlite.SQLiteDatabase getDatabase()> ->_NONE_
<java.net.DatagramSocket: boolean getReuseAddress()> ->_NONE_
<android.webkit.WebSettingsClassic: boolean getAllowContentAccess()> ->_NONE_
<org.apache.commons.io.FileUtils: java.lang.String getTempDirectoryPath()> ->_NONE_
<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParserTokenManager: void setDebugStream(java.io.PrintStream)> ->_NONE_
<junit.runner.BaseTestRunner: java.util.Properties getPreferences()> ->_NONE_
<android.net.sip.SipSession: android.net.sip.SipProfile getLocalProfile()> ->_NONE_
<android.view.accessibility.AccessibilityManager: android.view.accessibility.IAccessibilityManagerClient getClient()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setParent(android.view.View)> ->_NONE_
<android.net.http.RequestHandle: void setRedirectCount(int)> ->_NONE_
<android.widget.GridLayout: void setRowCount(int)> ->_NONE_
<android.renderscript.ScriptIntrinsicLUT: void setRed(int,int)> ->_NONE_
<android.net.wifi.p2p.WifiP2pGroupList: int getNetworkId(java.lang.String,java.lang.String)> ->_NONE_
<android.net.TrafficStats: long getMobileRxBytes()> ->_NONE_
<javax.net.ssl.TrustManagerFactory: java.security.Provider getProvider()> ->_NONE_
<android.app.ActivityManagerProxy: long[] getProcessPss(int[])> ->_NONE_
<android.content.res.Resources: java.lang.String getResourceEntryName(int)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: void setIdAttribute(java.lang.String,boolean)> ->_NONE_
<android.location.Location: float getSpeed()> ->_NONE_
<gov.nist.javax.sip.address.TelURLImpl: void setGlobal(boolean)> ->_NONE_
<java.util.ArrayDeque: void writeObject(java.io.ObjectOutputStream)> ->_NONE_
<android.net.Uri: java.lang.String encode(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: void addUnparsed(java.lang.String)> ->_NONE_
<javax.net.ssl.SSLEngine: javax.net.ssl.SSLParameters getSSLParameters()> ->_NONE_
<android.test.mock.MockResources: java.lang.String getString(int)> ->_NONE_
<android.app.ContextImpl: java.lang.Object getSystemService(java.lang.String)> ->_NONE_
<libcore.net.url.FileHandler: void parseURL(java.net.URL,java.lang.String,int,int)> ->_NONE_
<android.net.TrafficStats: long getTotalRxPackets()> ->_NONE_
<org.apache.xalan.templates.AVT: java.lang.String getSimpleString()> ->_NONE_
<org.apache.http.impl.io.IdentityInputStream: int read(byte[],int,int)> ->_NONE_
<android.graphics.drawable.PictureDrawable: void setFilterBitmap(boolean)> ->_NONE_
<org.apache.xalan.templates.NamespaceAlias: void setStylesheetPrefix(java.lang.String)> ->_NONE_
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setListener(android.animation.Animator$AnimatorListener)> ->_NONE_
<gov.nist.javax.sip.stack.ServerLog: void setStackProperties(java.util.Properties)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.CharSequence getText(java.lang.Object)> ->_NONE_
<android.widget.GridView: int getStretchMode()> ->_NONE_
<org.apache.james.mime4j.field.address.parser.AddressListParserTokenManager: void setDebugStream(java.io.PrintStream)> ->_NONE_
<android.location.Address: java.lang.String getPostalCode()> ->_NONE_
<org.xmlpull.v1.sax2.Driver: java.lang.String getValue(java.lang.String,java.lang.String)> ->_NONE_
<java.util.Date: int getSeconds()> ->_NONE_
<android.net.NetworkInfo: boolean isConnected()> ->_NONE_
<org.apache.http.auth.BasicUserPrincipal: java.lang.String getName()> ->_NONE_
<android.widget.Toast: int getYOffset()> ->_NONE_
<android.content.SyncStorageEngine: int getPendingOperationCount()> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationInfo: void setCNonce(java.lang.String)> ->_NONE_
<org.apache.xml.utils.ObjectPool: java.lang.Object getInstance()> ->_NONE_
<javax.xml.transform.dom.DOMResult: org.w3c.dom.Node getNextSibling()> ->_NONE_
<android.speech.tts.TtsEngines: java.util.List getEngines()> ->_NONE_
<android.widget.RelativeLayout: int getGravity()> ->_NONE_
<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.Drawable getFrame(int)> ->_NONE_
<org.apache.harmony.xml.dom.DocumentTypeImpl: java.lang.String getSystemId()> ->_NONE_
<org.apache.http.impl.io.IdentityOutputStream: void write(int)> ->_NONE_
<android.app.AlertDialog: void setIcon(int)> ->_NONE_
<android.nfc.Tag: java.lang.String[] getTechList()> ->_NONE_
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<gov.nist.javax.sip.message.SIPResponse: byte[] encodeAsBytes(java.lang.String)> ->_NONE_
<android.app.ContextImpl: java.io.File getSharedPrefsFile(java.lang.String)> ->_NONE_
<java.text.Collator: java.text.Collator getInstance()> ->_NONE_
<android.test.mock.MockPackageManager: java.util.List getInstalledPackages(int)> ->_NONE_
<android.widget.GridView: void setColumnWidth(int)> ->_NONE_
<org.json.JSONObject: double getDouble(java.lang.String)> ->_NONE_
<org.apache.commons.codec.net.BCodec: java.lang.String decode(java.lang.String)> ->_NONE_
<android.view.ContextThemeWrapper: int getThemeResId()> ->_NONE_
<android.os.Debug: int getGlobalAllocSize()> ->_NONE_
<dalvik.system.profiler.BinaryHprofWriter: void writeRecordHeader(dalvik.system.profiler.BinaryHprof$Tag,int,int)> ->_NONE_
<android.net.LocalSocket: java.io.FileDescriptor[] getAncillaryFileDescriptors()> ->_NONE_
<android.webkit.ZoomManager: float getDefaultMaxZoomScale()> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Oid: org.apache.harmony.security.asn1.ASN1Oid getInstance()> ->_NONE_
<android.view.View: void setScrollBarDefaultDelayBeforeFade(int)> ->_NONE_
<android.telephony.CellInfo: long getTimeStamp()> ->_NONE_
<android.webkit.CookieManager: java.lang.String getCookie(java.lang.String)> ->_NONE_
<android.net.wifi.p2p.WifiP2pManager: void clearServiceRequests(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ActionListener)> ->_NONE_
<android.content.ClipboardManager: java.lang.CharSequence getText()> ->_NONE_
<android.media.audiofx.AudioEffect: int getParameter(int[],int[])> ->_NONE_
<org.apache.http.impl.SocketHttpServerConnection: java.net.InetAddress getLocalAddress()> ->_NONE_
<android.widget.FastScroller: int getThumbPositionForListPosition(int,int,int)> ->_NONE_
<org.apache.http.conn.routing.HttpRoute: java.net.InetAddress getLocalAddress()> ->_NONE_
<org.apache.http.protocol.BasicHttpProcessor: org.apache.http.HttpRequestInterceptor getRequestInterceptor(int)> ->_NONE_
<android.widget.NumberPicker: void setValue(int)> ->_NONE_
<org.kxml2.io.KXmlParser: void setInput(java.io.InputStream,java.lang.String)> ->_NONE_
<android.view.View: void setScrollBarSize(int)> ->_NONE_
<java.util.Locale: java.util.Locale getDefault()> ->_NONE_
<android.widget.Switch: void setSwitchPadding(int)> ->_NONE_
<android.widget.TextView: int getMaxWidth()> ->_NONE_
<gov.nist.javax.sip.stack.SIPClientTransaction: int getViaPort()> ->_NONE_
<org.apache.xalan.templates.StylesheetRoot: void setOptimizer(boolean)> ->_NONE_
<android.widget.AdapterViewFlipper: void setAutoStart(boolean)> ->_NONE_
<android.widget.ExpandableListView: void setOnChildClickListener(android.widget.ExpandableListView$OnChildClickListener)> ->_NONE_
<gov.nist.javax.sip.parser.ExpiresParser: gov.nist.javax.sip.header.SIPHeader parse()> ->_NONE_
<org.jivesoftware.smack.XMPPException: void printStackTrace(java.io.PrintWriter)> ->_NONE_
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationLogo(java.lang.String)> ->_NONE_
<android.widget.FrameLayout: boolean getConsiderGoneChildrenWhenMeasuring()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl getCachedClientSession(org.apache.harmony.xnet.provider.jsse.ClientSessionContext)> ->_NONE_
<android.widget.AutoCompleteTextView: void setDropDownBackgroundDrawable(android.graphics.drawable.Drawable)> ->_NONE_
<gov.nist.javax.sip.header.CallInfo: java.lang.String encodeBody()> ->_NONE_
<org.apache.xml.utils.UnImplNode: java.lang.String getInputEncoding()> ->_NONE_
<android.content.res.Resources: android.content.res.ColorStateList loadColorStateList(android.util.TypedValue,int)> ->_NONE_
<android.test.mock.MockResources: java.lang.String getQuantityString(int,int)> ->_NONE_
<org.jivesoftware.smack.packet.PresenceCapability: void setExtension(java.lang.String)> ->_NONE_
<android.content.Intent: java.lang.Object getExtra(java.lang.String)> ->_NONE_
<android.text.style.TypefaceSpan: java.lang.String getFamily()> ->_NONE_
<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: void setFeature(java.lang.String,boolean)> ->_NONE_
<android.filterfw.core.MutableFrameFormat: void setMetaValue(java.lang.String,java.lang.Object)> ->_NONE_
<android.view.ViewGroup: android.view.ViewGroup$TouchTarget getTouchTarget(android.view.View)> ->_NONE_
<android.app.Activity: void startActivityFromChild(android.app.Activity,android.content.Intent,int,android.os.Bundle)> ->_NONE_
<android.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)> ->_NONE_
<android.webkit.WebSettings: boolean getUseWebViewBackgroundForOverscrollBackground()> ->_NONE_
<android.view.ViewGroup: android.view.animation.Animation$AnimationListener getLayoutAnimationListener()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.ClientHello: byte[] getRandom()> ->_NONE_
<gov.nist.javax.sip.header.Challenge: java.lang.String encode()> ->_NONE_
<android.view.accessibility.AccessibilityEvent: int getAction()> ->_NONE_
<org.apache.xml.utils.DOMHelper: java.lang.String getLocalNameOfNode(org.w3c.dom.Node)> ->_NONE_
<android.location.Criteria: int getHorizontalAccuracy()> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: void setWriter(java.io.Writer)> ->_NONE_
<java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)> ->_NONE_
<android.app.ActivityThread: android.content.res.Resources getTopLevelResources(java.lang.String,int,android.content.res.Configuration,android.content.res.CompatibilityInfo)> ->_NONE_
<java.nio.DoubleToByteBufferAdapter: java.nio.DoubleBuffer get(double[],int,int)> ->_NONE_
<org.apache.commons.io.output.NullOutputStream: void write(byte[])> ->_NONE_
<android.app.ActivityManagerProxy: void setPackageScreenCompatMode(java.lang.String,int)> ->_NONE_
<org.apache.http.entity.StringEntity: long getContentLength()> ->_NONE_
<android.inputmethodservice.InputMethodService: void setBackDisposition(int)> ->_NONE_
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getAmpLegal()> ->_NONE_
<java.io.ObjectInputStream: short readShort()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.CertificateRequest: java.lang.String[] getTypesAsString()> ->_NONE_
<android.graphics.drawable.ScaleDrawable: boolean getPadding(android.graphics.Rect)> ->_NONE_
<android.view.GLES20TextureLayer: void setTransform(android.graphics.Matrix)> ->_NONE_
<android.os.Parcel: void writeIntArray(int[])> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: java.lang.String getFixedNames(int)> ->_NONE_
<jp.co.omronsoft.openwnn.Keyboard: void setKeyWidth(int)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.KeyManager getKeyManager()> ->_NONE_
<android.support.v4.view.PagerAdapter: int getItemPosition(java.lang.Object)> ->_NONE_
<android.support.v4.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> ->_NONE_
<org.ccil.cowan.tagsoup.XMLWriter: void endElement(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xpath.functions.SecuritySupport: boolean getFileExists(java.io.File)> ->_NONE_
<gov.nist.javax.sip.header.Via: java.lang.String encodeBody()> ->_NONE_
<android.telephony.CellSignalStrengthCdma: int getAsuLevel()> ->_NONE_
<android.media.MediaRecorder: void setOnInfoListener(android.media.MediaRecorder$OnInfoListener)> ->_NONE_
<java.nio.ShortArrayBuffer: short get(int)> ->_NONE_
<android.os.PowerManager: int getMinimumScreenBrightnessSetting()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.net.AddressResolver getAddressResolver()> ->_NONE_
<org.jivesoftware.smack.packet.Authentication: void setUsername(java.lang.String)> ->_NONE_
<android.view.inputmethod.InputConnectionWrapper: void setTarget(android.view.inputmethod.InputConnection)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey: java.math.BigInteger getCrtCoefficient()> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.protocol.BasicHttpProcessor getHttpProcessor()> ->_NONE_
<android.database.AbstractCursor: android.net.Uri getNotificationUri()> ->_NONE_
<java.io.DataInputStream: long readLong()> ->_NONE_
<java.text.NumberFormat: void setCurrency(java.util.Currency)> ->_NONE_
<android.view.GLES20TextureLayer: void update(int,int,boolean)> ->_NONE_
<android.test.ServiceTestCase: void setApplication(android.app.Application)> ->_NONE_
<android.webkit.HTML5VideoView: boolean getStartWhenPrepared()> ->_NONE_
<android.os.Parcel: void writeBinderArray(android.os.IBinder[])> ->_NONE_
<org.apache.xpath.XPathContext: void setAxesIteratorStackStacks(java.util.Stack)> ->_NONE_
<android.test.mock.MockCursor: boolean getWantsAllOnMoveCalls()> ->_NONE_
<android.media.MediaMetadataRetriever: byte[] getEmbeddedPicture()> ->_NONE_
<android.os.Parcel: void writeMapInternal(java.util.Map)> ->_NONE_
<java.net.DatagramSocket: java.nio.channels.DatagramChannel getChannel()> ->_NONE_
<java.security.cert.LDAPCertStoreParameters: java.lang.String getServerName()> ->_NONE_
<org.apache.harmony.security.x509.GeneralNames: java.util.List getNames()> ->_NONE_
<android.widget.ViewSwitcher: void setFactory(android.widget.ViewSwitcher$ViewFactory)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getActualEncoding()> ->_NONE_
<java.util.Locale: java.lang.String getVariant()> ->_NONE_
<java.lang.BootClassLoader: java.lang.BootClassLoader getInstance()> ->_NONE_
<android.net.DummyDataStateTracker: java.lang.String getTcpBufferSizesPropName()> ->_NONE_
<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(boolean)> ->_NONE_
<org.apache.xalan.templates.FuncDocument: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<android.os.StrictMode: android.os.StrictMode$ThreadPolicy getThreadPolicy()> ->_NONE_
<java.io.LineNumberInputStream: int getLineNumber()> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: short getNodeType()> ->_NONE_
<org.apache.xml.utils.SystemIDResolver: java.lang.String getAbsolutePathFromRelativePath(java.lang.String)> ->_NONE_
<android.bluetooth.BluetoothInputDevice: void log(java.lang.String)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityManagerCompat: java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager)> ->_NONE_
<android.webkit.WebView: android.webkit.WebViewFactoryProvider getFactory()> ->_NONE_
<android.webkit.WebViewClassic: void setInitialScale(int)> ->_NONE_
<android.media.audiofx.Visualizer: int getWaveForm(byte[])> ->_NONE_
<org.apache.harmony.security.x509.CertificateList: byte[] getEncoded()> ->_NONE_
<android.webkit.WebViewClassic: float computeReadingLevelScale(float)> ->_NONE_
<android.test.mock.MockContext: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)> ->_NONE_
<org.apache.xml.serializer.NamespaceMappings: org.apache.xml.serializer.NamespaceMappings$MappingRecord getMappingFromPrefix(java.lang.String)> ->_NONE_
<android.text.style.BulletSpan: int getLeadingMargin(boolean)> ->_NONE_
<android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)> ->_NONE_
<org.apache.xml.serializer.dom3.LSSerializerImpl: void setNewLine(java.lang.String)> ->_NONE_
<java.net.DatagramSocket: int getTrafficClass()> ->_NONE_
<java.nio.CharBuffer: java.nio.CharBuffer get(char[],int,int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: long getCreationTime()> ->_NONE_
<android.widget.OverScroller: int getStartX()> ->_NONE_
<android.widget.OverScroller: int getStartY()> ->_NONE_
<android.graphics.drawable.AnimationDrawable: boolean setVisible(boolean,boolean)> ->_NONE_
<android.preference.TwoStatePreference: void sendAccessibilityEvent(android.view.View)> ->_NONE_
<javax.xml.transform.dom.DOMSource: org.w3c.dom.Node getNode()> ->_NONE_
<android.test.mock.MockIContentProvider: java.lang.String getType(android.net.Uri)> ->_NONE_
<android.webkit.WebChromeClient: void onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage$QuotaUpdater)> ->_NONE_
<java.util.BitSet: java.util.BitSet get(int,int)> ->_NONE_
<android.test.mock.MockContext: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> ->_NONE_
<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getSelectedText(int)> ->_NONE_
<java.io.ByteArrayInputStream: int read()> ->_NONE_
<android.media.MediaRecorder: void setOutputFile(java.io.FileDescriptor)> ->_NONE_
<org.ccil.cowan.tagsoup.jaxp.SAX1ParserAdapter: void setErrorHandler(org.xml.sax.ErrorHandler)> ->_NONE_
<org.apache.xml.utils.QName: org.apache.xml.utils.QName getQNameFromString(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.extensions.ReferredBy: java.lang.String encodeBody()> ->_NONE_
<org.apache.james.mime4j.field.ContentTypeField: java.util.Map getParameters()> ->_NONE_
<android.webkit.ZoomManager: void setZoomScale(float,boolean)> ->_NONE_
<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputBinding getCurrentInputBinding()> ->_NONE_
<java.net.DatagramSocket: void connect(java.net.SocketAddress)> ->_NONE_
<android.inputmethodservice.Keyboard: int getDimensionOrFraction(android.content.res.TypedArray,int,int,int)> ->_NONE_
<android.net.TrafficStats: long getTotalTxBytes()> ->_NONE_
<org.apache.harmony.security.pkcs8.PrivateKeyInfo: org.apache.harmony.security.x509.AlgorithmIdentifier getAlgorithmIdentifier()> ->_NONE_
<android.view.MotionEvent: void setDownTime(long)> ->_NONE_
<gov.nist.core.DuplicateNameValueList: void set(java.lang.String,java.lang.Object)> ->_NONE_
<android.media.AudioService: void setBluetoothScoOn(boolean)> ->_NONE_
<android.widget.Switch: int getCompoundPaddingLeft()> ->_NONE_
<org.apache.http.impl.io.ChunkedInputStream: org.apache.http.Header[] getFooters()> ->_NONE_
<org.apache.xml.utils.SystemIDResolver: java.lang.String replaceChars(java.lang.String)> ->_NONE_
<android.widget.Filter: void filter(java.lang.CharSequence,android.widget.Filter$FilterListener)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.Element getOwnerElement()> ->_NONE_
<org.jivesoftware.smack.packet.DataMessage: void setToken(java.lang.String)> ->_NONE_
<android.app.ContextImpl: android.content.Context getOuterContext()> ->_NONE_
<java.util.Locale: java.lang.String getDisplayVariant()> ->_NONE_
<android.app.MediaRouteActionProvider: void setExtendedSettingsClickListener(android.view.View$OnClickListener)> ->_NONE_
<android.view.SurfaceView: void setZOrderMediaOverlay(boolean)> ->_NONE_
<org.apache.http.params.AbstractHttpParams: org.apache.http.params.HttpParams setLongParameter(java.lang.String,long)> ->_NONE_
<libcore.icu.NativeDecimalFormat: void setMaximumIntegerDigits(int)> ->_NONE_
<java.security.UnresolvedPermission: java.lang.String getUnresolvedName()> ->_NONE_
<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getNetworkName()> ->_NONE_
<android.support.v4.content.CursorLoader: void setSortOrder(java.lang.String)> ->_NONE_
<org.jivesoftware.smack.util.Base64: java.lang.String encodeBytes(byte[],int)> ->_NONE_
<android.app.ActivityThread: android.util.DisplayMetrics getDisplayMetricsLocked(int,android.content.res.CompatibilityInfo)> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int getNextNamespaceNode2(int)> ->_NONE_
<android.net.wifi.WifiWatchdogStateMachine: boolean getSettingsGlobalBoolean(android.content.ContentResolver,java.lang.String,boolean)> ->_NONE_
<android.text.style.BackgroundColorSpan: int getSpanTypeId()> ->_NONE_
<org.apache.commons.codec.net.BCodec: java.lang.String encode(java.lang.String,java.lang.String)> ->_NONE_
<android.content.res.Resources: android.graphics.drawable.Drawable getCachedDrawable(android.util.LongSparseArray,long)> ->_NONE_
<android.view.MotionEvent: float getHistoricalTouchMinor(int,int)> ->_NONE_
<android.webkit.WebSettingsClassic: void setUserAgent(int)> ->_NONE_
<org.apache.http.protocol.BasicHttpProcessor: int getResponseInterceptorCount()> ->_NONE_
<android.animation.Keyframe: void setInterpolator(android.animation.TimeInterpolator)> ->_NONE_
<android.support.v4.view.GestureDetectorCompat: void setIsLongpressEnabled(boolean)> ->_NONE_
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle getAccountRemovalAllowed(android.accounts.AccountAuthenticatorResponse,android.accounts.Account)> ->_NONE_
<android.widget.AbsListView: float getBottomFadingEdgeStrength()> ->_NONE_
<android.widget.TextView: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)> ->_NONE_
<org.apache.xalan.transformer.TransformerHandlerImpl: void endEntity(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: void setField(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.http.client.protocol.ClientContextConfigurer: void setCookieStore(org.apache.http.client.CookieStore)> ->_NONE_
<gov.nist.javax.sip.header.Require: void setOptionTag(java.lang.String)> ->_NONE_
<android.webkit.FindActionModeCallback: void setText(java.lang.String)> ->_NONE_
<org.apache.harmony.security.PublicKeyImpl: void setEncoding(byte[])> ->_NONE_
<android.text.format.Time: int getWeekNumber()> ->_NONE_
<android.view.Display: int getOrientation()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: void setAddressResolver(gov.nist.core.net.AddressResolver)> ->_NONE_
<org.apache.harmony.security.pkcs7.ContentInfo: byte[] getEncoded()> ->_NONE_
<java.util.Calendar: void setMinimalDaysInFirstWeek(int)> ->_NONE_
<libcore.net.http.HttpConnection: void closeSocketAndStreams()> ->_NONE_
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)> ->_NONE_
<gov.nist.javax.sip.header.Warning: void setText(java.lang.String)> ->_NONE_
<java.security.SecureRandom: byte[] getSeed(int)> ->_NONE_
<android.test.mock.MockContext: void sendStickyBroadcast(android.content.Intent)> ->_NONE_
<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.OutputProperties getOutputComposed()> ->_NONE_
<android.webkit.WebIconDatabase: void requestIconForPageUrl(java.lang.String,android.webkit.WebIconDatabase$IconListener)> ->_NONE_
<android.app.AlertDialog: void setButton(java.lang.CharSequence,android.os.Message)> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Boolean: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)> ->_NONE_
<org.apache.xalan.templates.ElemPI: org.apache.xalan.templates.AVT getName()> ->_NONE_
<android.telephony.SmsMessage: int getStatusOnSim()> ->_NONE_
<android.app.admin.DevicePolicyManager: void setKeyguardDisabledFeatures(android.content.ComponentName,int)> ->_NONE_
<org.json.JSONArray: double getDouble(int)> ->_NONE_
<android.support.v4.content.Loader: int getId()> ->_NONE_
<android.location.Address: java.util.Locale getLocale()> ->_NONE_
<gov.nist.javax.sip.header.CallID: void setCallId(java.lang.String)> ->_NONE_
<org.apache.http.message.BasicLineParser: org.apache.http.RequestLine createRequestLine(java.lang.String,java.lang.String,org.apache.http.ProtocolVersion)> ->_NONE_
<java.util.concurrent.atomic.AtomicLongArray: long getAndIncrement(int)> ->_NONE_
<android.content.SyncStorageEngine: void setBackoff(android.accounts.Account,int,java.lang.String,long,long)> ->_NONE_
<gov.nist.javax.sip.header.ContentType: java.lang.String encodeBody()> ->_NONE_
<org.jivesoftware.smackx.packet.MUCUser: void setDecline(org.jivesoftware.smackx.packet.MUCUser$Decline)> ->_NONE_
<org.apache.xml.serializer.ToStream: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)> ->_NONE_
<android.media.videoeditor.WaveformData: int getFramesCount()> ->_NONE_
<android.webkit.WebSettings: boolean getLoadWithOverviewMode()> ->_NONE_
<android.os.Bundle: double getDouble(java.lang.String,double)> ->_NONE_
<org.apache.xpath.XPathException: org.w3c.dom.Node getStylesheetNode(org.apache.xpath.ExpressionNode)> ->_NONE_
<android.media.videoeditor.MediaProperties: int[] getSupportedVideoFileFormat()> ->_NONE_
<android.view.View: int getScrollBarFadeDuration()> ->_NONE_
<org.ccil.cowan.tagsoup.PYXWriter: void processingInstruction(java.lang.String,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.ims.PPreferredService: java.lang.String encodeBody()> ->_NONE_
<android.media.AudioService: int getVibrateSetting(int)> ->_NONE_
<java.lang.AbstractStringBuilder: void setLength(int)> ->_NONE_
<android.inputmethodservice.Keyboard: java.util.List getModifierKeys()> ->_NONE_
<android.renderscript.RSSurfaceView: android.renderscript.RenderScriptGL getRenderScriptGL()> ->_NONE_
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.ElemAttributeSet getAttributeSet(int)> ->_NONE_
<android.text.style.QuoteSpan: int getLeadingMargin(boolean)> ->_NONE_
<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)> ->_NONE_
<org.apache.james.mime4j.field.address.parser.SimpleCharStream: int getBeginColumn()> ->_NONE_
<junit.runner.BaseTestRunner: void setPreference(java.lang.String,java.lang.String)> ->_NONE_
<javax.xml.datatype.FactoryFinder: void debugPrintln(java.lang.String)> ->_NONE_
<android.net.InterfaceConfiguration: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.widget.TextView: boolean getFreezesText()> ->_NONE_
<android.bluetooth.BluetoothInputDevice: boolean setProtocolMode(android.bluetooth.BluetoothDevice,int)> ->_NONE_
<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue getDecodedExtensionValue()> ->_NONE_
<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.Collection getExclusiveQueuedThreads()> ->_NONE_
<org.apache.xml.serializer.utils.SerializerMessages_pt_BR: java.lang.Object[][] getContents()> ->_NONE_
<org.apache.xpath.objects.DTMXRTreeFrag: int getDTMIdentity()> ->_NONE_
<org.apache.xpath.jaxp.JAXPVariableStack: org.apache.xpath.objects.XObject getVariableOrParam(org.apache.xpath.XPathContext,org.apache.xml.utils.QName)> ->_NONE_
<java.nio.CharArrayBuffer: char get(int)> ->_NONE_
<android.app.ActivityManagerNative: android.app.IActivityManager getDefault()> ->_NONE_
<gov.nist.javax.sip.message.SIPResponse: java.lang.String getFirstLine()> ->_NONE_
<android.media.AudioTrack: void setPlaybackPositionUpdateListener(android.media.AudioTrack$OnPlaybackPositionUpdateListener)> ->_NONE_
<org.jivesoftware.smack.packet.Packet: void setRmq2Id(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.OutputProperties: void setBooleanProperty(org.apache.xml.utils.QName,boolean)> ->_NONE_
<org.apache.xalan.templates.ElemNumber: org.apache.xalan.templates.AVT getLetterValue()> ->_NONE_
<org.apache.xml.utils.DefaultErrorHandler: void warning(javax.xml.transform.TransformerException)> ->_NONE_
<android.net.wifi.WifiNative: void closeSupplicantConnection()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setClassName(java.lang.CharSequence)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setEnabled(java.lang.Object,boolean)> ->_NONE_
<android.renderscript.ScriptIntrinsicBlur: void setRadius(float)> ->_NONE_
<org.apache.harmony.xml.dom.NodeListImpl: int getLength()> ->_NONE_
<org.apache.commons.io.output.ThresholdingOutputStream: void write(int)> ->_NONE_
<dalvik.system.VMRuntime: long getExternalBytesAllocated()> ->_NONE_
<android.widget.ProgressBar: android.graphics.drawable.Drawable getCurrentDrawable()> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: java.util.Map getRequestProperties()> ->_NONE_
<android.preference.PreferenceActivity: void loadHeadersFromResource(int,java.util.List)> ->_NONE_
<org.jivesoftware.smack.RosterEntry: org.jivesoftware.smack.packet.RosterPacket$ItemType getType()> ->_NONE_
<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)> ->_NONE_
<android.net.WebAddress: java.lang.String getPath()> ->_NONE_
<android.media.AudioService: void setVibrateSetting(int,int)> ->_NONE_
<java.net.InterfaceAddress: java.net.InetAddress getBroadcast()> ->_NONE_
<android.widget.AdapterView: int getCount()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getNodeName()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: int getCurrentItemIndex()> ->_NONE_
<android.database.CursorWrapper: short getShort(int)> ->_NONE_
<android.webkit.WebSettingsClassic: java.lang.String getDefaultUserAgentForLocale(android.content.Context,java.util.Locale)> ->_NONE_
<android.app.ActivityThread: void handleReceiver(android.app.ActivityThread$ReceiverData)> ->_NONE_
<org.apache.xml.res.XMLMessages: java.util.ListResourceBundle loadResourceBundle(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.Contact: void setContactList(gov.nist.javax.sip.header.ContactList)> ->_NONE_
<java.text.NumberFormat: java.text.NumberFormat getIntegerInstance(java.util.Locale)> ->_NONE_
<android.content.res.Resources: android.content.res.Resources getSystem()> ->_NONE_
<org.xml.sax.SAXParseException: int getColumnNumber()> ->_NONE_
<org.apache.http.params.HttpProtocolParamBean: void setUseExpectContinue(boolean)> ->_NONE_
<android.telephony.CellIdentityLte: int getCi()> ->_NONE_
<org.apache.xalan.templates.OutputProperties: void setQNameProperty(org.apache.xml.utils.QName,org.apache.xml.utils.QName)> ->_NONE_
<android.content.ContextWrapper: java.io.File getFileStreamPath(java.lang.String)> ->_NONE_
<gov.nist.core.HostPort: void setPort(int)> ->_NONE_
<gov.nist.javax.sip.SipProviderImpl: javax.sip.header.CallIdHeader getNewCallId()> ->_NONE_
<android.os.UserManager: java.lang.String getUserName()> ->_NONE_
<android.widget.TimePicker: void setCurrentLocale(java.util.Locale)> ->_NONE_
<org.apache.xml.serializer.SerializerBase: void setMediaType(java.lang.String)> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: java.util.Properties getOutputFormat()> ->_NONE_
<org.apache.xalan.templates.Stylesheet: void setStripSpaces(org.apache.xalan.templates.WhiteSpaceInfo)> ->_NONE_
<android.widget.ActivityChooserModel: int getActivityCount()> ->_NONE_
<junit.runner.TestCaseClassLoader: void readExcludedPackages()> ->_NONE_
<android.animation.PropertyValuesHolder: void setEvaluator(android.animation.TypeEvaluator)> ->_NONE_
<android.filterfw.core.Filter: java.lang.String getFilterClassName()> ->_NONE_
<android.filterpacks.imageproc.SharpenFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)> ->_NONE_
<android.text.style.ImageSpan: java.lang.String getSource()> ->_NONE_
<java.math.BigInt: void setSign(int)> ->_NONE_
<gov.nist.javax.sip.stack.SIPClientTransaction: void setResponseInterface(gov.nist.javax.sip.stack.ServerResponseInterface)> ->_NONE_
<org.apache.harmony.xml.dom.NodeImpl: java.lang.Object getUserData(java.lang.String)> ->_NONE_
<android.net.wifi.WifiManager: android.net.wifi.WifiConfiguration getWifiApConfiguration()> ->_NONE_
<org.apache.harmony.xml.dom.ElementImpl: org.w3c.dom.Attr setAttributeNodeNS(org.w3c.dom.Attr)> ->_NONE_
<android.os.Parcel: void writeDoubleArray(double[])> ->_NONE_
<org.apache.xml.utils.UnImplNode: void setIdAttribute(boolean)> ->_NONE_
<org.apache.xml.utils.UnImplNode: void setXmlVersion(java.lang.String)> ->_NONE_
<org.apache.commons.codec.net.QCodec: java.lang.Object decode(java.lang.Object)> ->_NONE_
<org.apache.http.entity.StringEntity: void writeTo(java.io.OutputStream)> ->_NONE_
<javax.net.ssl.HttpsURLConnection: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()> ->_NONE_
<android.media.RingtoneManager: void setStopPreviousRingtone(boolean)> ->_NONE_
<android.app.Activity: int getTaskId()> ->_NONE_
<android.bluetooth.BluetoothHealthAppConfiguration: java.lang.String getName()> ->_NONE_
<android.support.v4.view.AccessibilityDelegateCompat: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)> ->_NONE_
<javax.crypto.spec.IvParameterSpec: byte[] getIV()> ->_NONE_
<java.sql.Time: void setMonth(int)> ->_NONE_
<java.lang.SecurityManager: java.lang.Object getSecurityContext()> ->_NONE_
<gov.nist.javax.sip.message.SIPResponse: java.lang.String getSIPVersion()> ->_NONE_
<android.location.Criteria: int getVerticalAccuracy()> ->_NONE_
<java.sql.DriverManager: java.io.PrintStream getLogStream()> ->_NONE_
<android.app.LauncherActivity: android.content.Intent getTargetIntent()> ->_NONE_
<android.os.PowerManager: int getMaximumScreenBrightnessSetting()> ->_NONE_
<java.net.DefaultFileNameMap: java.lang.String getContentTypeFor(java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: void setSendBufferSize(int)> ->_NONE_
<org.apache.xalan.templates.ElemTemplate: java.lang.String getNodeName()> ->_NONE_
<android.support.v4.app.Fragment: boolean getRetainInstance()> ->_NONE_
<android.view.GLES20DisplayList: void setCaching(boolean)> ->_NONE_
<android.webkit.WebSettings: void setDefaultFixedFontSize(int)> ->_NONE_
<android.app.ActivityManagerProxy: void getMemoryInfo(android.app.ActivityManager$MemoryInfo)> ->_NONE_
<android.view.View: void setDrawingCacheBackgroundColor(int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.CipherSuite: org.apache.harmony.xnet.provider.jsse.CipherSuite getCipherSuiteByCode(int,int,int)> ->_NONE_
<org.jivesoftware.smack.packet.DataMessage: void setPkgSignature(java.lang.String)> ->_NONE_
<org.apache.xml.serializer.ToHTMLStream: void writeAttrString(java.io.Writer,java.lang.String,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.ContentLanguage: void setLanguageTag(java.lang.String)> ->_NONE_
<org.apache.xml.serializer.utils.DOM2Helper: java.lang.String getLocalNameOfNode(org.w3c.dom.Node)> ->_NONE_
<gov.nist.javax.sip.message.ContentImpl: void setContentTypeHeader(javax.sip.header.ContentTypeHeader)> ->_NONE_
<java.util.TimeZone: java.lang.String getDisplayName(boolean,int,java.util.Locale)> ->_NONE_
<org.apache.xalan.templates.StylesheetRoot: java.util.Vector getAttributeSetComposed(org.apache.xml.utils.QName)> ->_NONE_
<org.apache.harmony.xml.dom.ElementImpl: java.lang.String getNamespaceURI()> ->_NONE_
<gov.nist.javax.sip.SipProviderImpl: void sendResponse(javax.sip.message.Response)> ->_NONE_
<java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xpath.compiler.Compiler: void setNamespaceContext(org.apache.xml.utils.PrefixResolver)> ->_NONE_
<android.view.animation.Animation: long getStartOffset()> ->_NONE_
<android.view.inputmethod.InputConnectionWrapper: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)> ->_NONE_
<android.widget.LinearLayout: int getBaseline()> ->_NONE_
<javax.security.auth.PrivateCredentialPermission: java.lang.String[][] getPrincipals()> ->_NONE_
<android.content.pm.PackageInfoLite: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<java.util.MapEntry: java.lang.Object getKey()> ->_NONE_
<android.widget.CalendarView: void setFocusedMonthDateColor(int)> ->_NONE_
<android.text.style.AbsoluteSizeSpan: int getSpanTypeId()> ->_NONE_
<android.text.BoringLayout: android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int)> ->_NONE_
<gov.nist.javax.sip.message.MultipartMimeContentImpl: gov.nist.javax.sip.message.Content getContentByType(java.lang.String,java.lang.String)> ->_NONE_
<android.widget.Spinner: int getDropDownWidth()> ->_NONE_
<org.apache.xml.serializer.utils.AttList: java.lang.String getType(java.lang.String,java.lang.String)> ->_NONE_
<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()> ->_NONE_
<org.apache.xml.serializer.AttributesImplSerializer: int getIndex(java.lang.String,java.lang.String)> ->_NONE_
<android.preference.MultiCheckPreference: boolean[] getValues()> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: java.lang.String getPrefixPartUnknown(java.lang.String)> ->_NONE_
<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$LayerType getLayerType()> ->_NONE_
<android.renderscript.Program: java.lang.String getTextureName(int)> ->_NONE_
<org.apache.harmony.security.x509.NameConstraints: void dumpValue(java.lang.StringBuilder,java.lang.String)> ->_NONE_
<org.apache.http.impl.cookie.BrowserCompatSpec: java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin)> ->_NONE_
<android.app.SearchableInfo: boolean getVoiceSearchEnabled()> ->_NONE_
<java.lang.Class: java.lang.reflect.Field[] getFields()> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: void setChecked(boolean)> ->_NONE_
<android.webkit.WebSettings: java.lang.String getDatabasePath()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: java.lang.String getAlgorithm()> ->_NONE_
<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)> ->_NONE_
<org.apache.xpath.patterns.StepPattern: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)> ->_NONE_
<org.jivesoftware.smack.provider.ProviderManager: java.lang.Object getIQProvider(java.lang.String,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: void setExpires(javax.sip.header.ExpiresHeader)> ->_NONE_
<android.widget.TextView: void setMinLines(int)> ->_NONE_
<java.util.MissingResourceException: java.lang.String getClassName()> ->_NONE_
<gov.nist.javax.sip.stack.UDPMessageChannel: int getPeerPacketSourcePort()> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: java.util.Properties getOutputProperties()> ->_NONE_
<android.content.Loader: int getId()> ->_NONE_
<android.graphics.drawable.NinePatchDrawable: boolean getPadding(android.graphics.Rect)> ->_NONE_
<android.widget.Toast: void setText(java.lang.CharSequence)> ->_NONE_
<android.widget.Spinner: void setDropDownWidth(int)> ->_NONE_
<org.apache.xpath.axes.LocPathIterator: int getCurrentContextNode()> ->_NONE_
<android.webkit.WebSettings: java.lang.String getFantasyFontFamily()> ->_NONE_
<android.widget.SimpleExpandableListAdapter: long getGroupId(int)> ->_NONE_
<android.webkit.WebHistoryItemClassic: java.lang.Object getCustomData()> ->_NONE_
<gov.nist.javax.sip.header.RecordRoute: java.lang.StringBuffer encodeBody(java.lang.StringBuffer)> ->_NONE_
<gov.nist.javax.sip.address.TelURLImpl: java.lang.String getScheme()> ->_NONE_
<org.xml.sax.InputSource: void setPublicId(java.lang.String)> ->_NONE_
<android.content.pm.PackageParser: android.content.pm.PackageParser$PackageLite parsePackageLite(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,int,java.lang.String[])> ->_NONE_
<android.database.AbstractWindowedCursor: double getDouble(int)> ->_NONE_
<java.security.cert.PKIXParameters: void setSigProvider(java.lang.String)> ->_NONE_
<org.apache.commons.io.IOUtils: void write(java.lang.CharSequence,java.io.Writer)> ->_NONE_
<android.opengl.GLLogWrapper: java.lang.String getTexturePName(int)> ->_NONE_
<java.io.SerializationHandleMap: int get(java.lang.Object)> ->_NONE_
<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.ContentLength: java.lang.StringBuffer encodeBody(java.lang.StringBuffer)> ->_NONE_
<org.apache.xalan.templates.ElemLiteralResult: void setLocalName(java.lang.String)> ->_NONE_
<java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.security.Provider)> ->_NONE_
<java.nio.DoubleArrayBuffer: java.nio.DoubleBuffer get(double[],int,int)> ->_NONE_
<android.webkit.WebSettings: void setMinimumLogicalFontSize(int)> ->_NONE_
<android.webkit.GeolocationService: void setEnableGps(boolean)> ->_NONE_
<android.test.IsolatedContext: void sendOrderedBroadcast(android.content.Intent,java.lang.String)> ->_NONE_
<android.content.DefaultDataHandler: void setDocumentLocator(org.xml.sax.Locator)> ->_NONE_
<gov.nist.javax.sip.address.SipUri: void setMAddrParam(java.lang.String)> ->_NONE_
<org.apache.xpath.functions.FuncExtFunctionAvailable: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<android.speech.tts.FileSynthesisCallback: int start(int,int,int)> ->_NONE_
<android.database.ContentObserver: android.database.IContentObserver getContentObserver()> ->_NONE_
<android.media.DecoderCapabilities: java.util.List getAudioDecoders()> ->_NONE_
<android.app.ActivityManagerProxy: android.graphics.Bitmap getTaskTopThumbnail(int)> ->_NONE_
<android.widget.SeekBar: void setOnSeekBarChangeListener(android.widget.SeekBar$OnSeekBarChangeListener)> ->_NONE_
<android.content.pm.VerificationParams: android.content.pm.ManifestDigest getManifestDigest()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: int getLastChild(int)> ->_NONE_
<android.media.MediaPlayer: void setOnVideoSizeChangedListener(android.media.MediaPlayer$OnVideoSizeChangedListener)> ->_NONE_
<org.apache.http.util.EncodingUtils: java.lang.String getString(byte[],int,int,java.lang.String)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,org.w3c.dom.Node,org.apache.xml.utils.QName,org.xml.sax.ContentHandler)> ->_NONE_
<org.apache.james.mime4j.field.UnstructuredField: java.lang.String getValue()> ->_NONE_
<java.io.DataInputStream: short readShort()> ->_NONE_
<javax.crypto.spec.OAEPParameterSpec: java.security.spec.AlgorithmParameterSpec getMGFParameters()> ->_NONE_
<android.text.SpannableString: void setSpan(java.lang.Object,int,int,int)> ->_NONE_
<org.apache.xml.dtm.ref.DTMManagerDefault: int getFirstFreeDTMID()> ->_NONE_
<gov.nist.javax.sip.header.CSeq: long getSeqNumber()> ->_NONE_
<gov.nist.core.LexerCore: java.lang.String getNextId()> ->_NONE_
<android.view.ViewConfiguration: int getMaximumFlingVelocity()> ->_NONE_
<android.net.rtp.AudioStream: android.net.rtp.AudioGroup getGroup()> ->_NONE_
<javax.net.ssl.SSLParameters: void setCipherSuites(java.lang.String[])> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPublicKey: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getInstance(java.security.interfaces.RSAPublicKey)> ->_NONE_
<android.app.Activity: android.content.Intent getParentActivityIntent()> ->_NONE_
<gov.nist.javax.sip.header.ims.PPreferredService: java.lang.String getSubserviceIdentifiers()> ->_NONE_
<java.util.logging.LogRecord: void setSourceClassName(java.lang.String)> ->_NONE_
<android.renderscript.BaseObj: void setID(int)> ->_NONE_
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void closeExpiredConnections()> ->_NONE_
<android.widget.TextView: java.lang.CharSequence getIterableTextForAccessibility()> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertPathImpl: org.apache.harmony.security.provider.cert.X509CertPathImpl getInstance(java.io.InputStream,java.lang.String)> ->_NONE_
<org.apache.commons.io.IOUtils: void write(java.lang.CharSequence,java.io.OutputStream)> ->_NONE_
<gov.nist.javax.sip.DialogTimeoutEvent: javax.sip.Dialog getDialog()> ->_NONE_
<android.graphics.Bitmap: int getScaledWidth(android.util.DisplayMetrics)> ->_NONE_
<android.view.Window: void setLayout(int,int)> ->_NONE_
<android.view.View: void setHasTransientState(boolean)> ->_NONE_
<java.security.cert.CertStore: java.security.cert.CertStore getInstance(java.lang.String,java.security.cert.CertStoreParameters,java.lang.String)> ->_NONE_
<dalvik.system.profiler.HprofData: long getStartMillis()> ->_NONE_
<android.graphics.drawable.RotateDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: void setShouldReset(boolean)> ->_NONE_
<android.net.SSLCertificateSocketFactory: byte[] getNpnSelectedProtocol(java.net.Socket)> ->_NONE_
<jp.co.omronsoft.openwnn.JAJP.DefaultSoftKeyboardJAJP: int getTableIndex(int)> ->_NONE_
<org.apache.harmony.security.x509.X509PublicKey: java.lang.String getFormat()> ->_NONE_
<android.content.pm.ComponentInfo: android.graphics.drawable.Drawable loadDefaultLogo(android.content.pm.PackageManager)> ->_NONE_
<org.apache.http.impl.AbstractHttpClientConnection: void init(org.apache.http.io.SessionInputBuffer,org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams)> ->_NONE_
<android.view.View: void setHovered(boolean)> ->_NONE_
<android.view.accessibility.AccessibilityManager: void setAccessibilityState(boolean)> ->_NONE_
<android.net.NetworkStats: android.net.NetworkStats$Entry getTotal(android.net.NetworkStats$Entry,java.util.HashSet,int,boolean)> ->_NONE_
<org.apache.xpath.patterns.NodeTest: double getDefaultScore()> ->_NONE_
<java.util.logging.Handler: void setFilter(java.util.logging.Filter)> ->_NONE_
<android.hardware.usb.UsbDevice: int getDeviceSubclass()> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: java.lang.String getLocalName(int)> ->_NONE_
<org.apache.harmony.security.pkcs7.ContentInfo: int[] getContentType()> ->_NONE_
<android.widget.FrameLayout: void setMeasureAllChildren(boolean)> ->_NONE_
<org.apache.xml.utils.res.LongArrayWrapper: int getLength()> ->_NONE_
<gov.nist.javax.sip.header.SIPHeaderList: java.util.List getHeaderList()> ->_NONE_
<android.hardware.usb.UsbEndpoint: int getType()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: javax.net.ssl.SSLSessionContext getSessionContext()> ->_NONE_
<android.media.Ringtone: java.lang.String getTitle(android.content.Context,android.net.Uri,boolean)> ->_NONE_
<android.content.pm.VerificationParams: android.net.Uri getVerificationURI()> ->_NONE_
<android.app.ActivityManagerProxy: boolean isIntentSenderAnActivity(android.content.IIntentSender)> ->_NONE_
<android.app.SharedPreferencesImpl: float getFloat(java.lang.String,float)> ->_NONE_
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getEntryCount()> ->_NONE_
<java.util.concurrent.Executors: java.util.concurrent.Callable privilegedCallableUsingCurrentClassLoader(java.util.concurrent.Callable)> ->_NONE_
<android.util.MonthDisplayHelper: int[] getDigitsForRow(int)> ->_NONE_
<android.media.videoeditor.MediaImageItem: int getWidth()> ->_NONE_
<gov.nist.javax.sip.header.SIPHeader: java.lang.StringBuffer encode(java.lang.StringBuffer)> ->_NONE_
<java.io.RandomAccessFile: int readUnsignedShort()> ->_NONE_
<android.app.ActivityManagerProxy: void grantUriPermissionFromOwner(android.os.IBinder,int,java.lang.String,android.net.Uri,int)> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: void setSealed(boolean)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.ConnectionState: int getMinFragmentSize()> ->_NONE_
<android.speech.tts.TextToSpeech: android.os.IBinder getCallerIdentity()> ->_NONE_
<android.widget.ListPopupWindow: android.view.View getSelectedView()> ->_NONE_
<java.io.StringWriter: java.lang.StringBuffer getBuffer()> ->_NONE_
<org.apache.http.util.EntityUtils: java.lang.String getContentCharSet(org.apache.http.HttpEntity)> ->_NONE_
<android.widget.ImageView: android.widget.ImageView$ScaleType getScaleType()> ->_NONE_
<android.view.textservice.TextInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<gov.nist.javax.sip.header.ims.PAssociatedURI: void setAssociatedURI(javax.sip.address.URI)> ->_NONE_
<java.nio.IntToByteBufferAdapter: int get()> ->_NONE_
<gov.nist.javax.sip.stack.TCPMessageChannel: int getPeerPort()> ->_NONE_
<org.apache.http.message.BasicHttpEntityEnclosingRequest: org.apache.http.HttpEntity getEntity()> ->_NONE_
<java.nio.MappedByteBuffer: java.nio.MappedByteBuffer load()> ->_NONE_
<android.app.SearchableInfo: boolean getVoiceSearchLaunchRecognizer()> ->_NONE_
<android.net.http.HttpAuthHeader: int getScheme()> ->_NONE_
<android.view.View: void setNextFocusDownId(int)> ->_NONE_
<org.apache.xalan.templates.ElemExtensionDecl: void runtimeInit(org.apache.xalan.transformer.TransformerImpl)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.lang.String getCipherSuite()> ->_NONE_
<org.apache.xalan.templates.OutputProperties: org.apache.xml.utils.QName getQNameProperty(java.lang.String,java.util.Properties)> ->_NONE_
<android.drm.mobile1.DrmRawContent: java.lang.String getContentType()> ->_NONE_
<android.net.wifi.WifiManager: boolean setWifiEnabled(boolean)> ->_NONE_
<android.widget.AdapterView: int getPositionForView(android.view.View)> ->_NONE_
<android.webkit.WebSettings: void setStandardFontFamily(java.lang.String)> ->_NONE_
<org.jivesoftware.smackx.provider.SimpleVCardProvider: int getTag()> ->_NONE_
<android.graphics.Bitmap: void setLayoutBounds(int[])> ->_NONE_
<android.preference.Preference: void setOnPreferenceClickListener(android.preference.Preference$OnPreferenceClickListener)> ->_NONE_
<android.speech.tts.PlaybackQueueItem: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher getDispatcher()> ->_NONE_
<android.view.ContextThemeWrapper: void setTheme(int)> ->_NONE_
<jp.co.omronsoft.openwnn.EN.DefaultSoftKeyboardEN: void setPreferences(android.content.SharedPreferences,android.view.inputmethod.EditorInfo)> ->_NONE_
<org.apache.xml.serializer.ToHTMLStream: void cdata(char[],int,int)> ->_NONE_
<org.apache.http.message.BasicHeaderValueParser: org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)> ->_NONE_
<org.apache.xml.dtm.ref.ExpandedNameTable: short getType(int)> ->_NONE_
<org.apache.http.entity.ByteArrayEntity: void writeTo(java.io.OutputStream)> ->_NONE_
<android.telephony.SmsCbCmasInfo: int getResponseType()> ->_NONE_
<java.security.CodeSigner: java.security.cert.CertPath getSignerCertPath()> ->_NONE_
<java.lang.reflect.Field: java.lang.Class getDeclaringClass()> ->_NONE_
<java.util.zip.ZipEntry: byte[] getExtra()> ->_NONE_
<jp.co.omronsoft.openwnn.KeyboardView: int getKeyIndices(int,int,int[])> ->_NONE_
<java.util.zip.CRC32: void update(byte[],int,int)> ->_NONE_
<java.util.Date: int getMinutes()> ->_NONE_
<javax.sip.IOExceptionEvent: java.lang.String getHost()> ->_NONE_
<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.DOMImplementation getImplementation()> ->_NONE_
<org.apache.xml.utils.SecuritySupport: java.lang.ClassLoader getContextClassLoader()> ->_NONE_
<android.telephony.CellSignalStrengthGsm: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.xalan.templates.ElemTemplate: void setLocaterInfo(javax.xml.transform.SourceLocator)> ->_NONE_
<org.jivesoftware.smack.PacketCollector: org.jivesoftware.smack.filter.PacketFilter getPacketFilter()> ->_NONE_
<org.apache.xpath.axes.AxesWalker: org.apache.xml.dtm.DTM getDTM(int)> ->_NONE_
<org.apache.james.mime4j.message.Entity: java.lang.String getCharset()> ->_NONE_
<android.app.ActivityManagerProxy: java.util.List getServices(int,int)> ->_NONE_
<android.view.animation.AnticipateInterpolator: float getInterpolation(float)> ->_NONE_
<android.os.PatternMatcher: int getType()> ->_NONE_
<android.graphics.drawable.RotateDrawable: void setColorFilter(android.graphics.ColorFilter)> ->_NONE_
<android.view.View: int getScrollBarStyle()> ->_NONE_
<org.apache.xml.dtm.SecuritySupport: org.apache.xml.dtm.SecuritySupport getInstance()> ->_NONE_
<android.graphics.drawable.StateListDrawable: int getStateDrawableIndex(int[])> ->_NONE_
<android.graphics.Paint: android.graphics.Xfermode setXfermode(android.graphics.Xfermode)> ->_NONE_
<android.webkit.AccessibilityInjector: void updateJavaScriptEnabled(boolean)> ->_NONE_
<android.view.PointerIcon: android.graphics.Bitmap getBitmap()> ->_NONE_
<gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)> ->_NONE_
<jp.co.omronsoft.openwnn.DefaultSoftKeyboard: android.view.View getKeyboardView()> ->_NONE_
<android.widget.ImageView: void setMaxHeight(int)> ->_NONE_
<android.content.ContextWrapper: void setWallpaper(java.io.InputStream)> ->_NONE_
<android.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: int getNodeHandle(int)> ->_NONE_
<gov.nist.javax.sip.header.MediaRange: java.lang.String getSubtype()> ->_NONE_
<android.media.videoeditor.MediaImageItem: int getGeneratedClipHeight()> ->_NONE_
<org.apache.http.impl.io.HttpRequestParser: org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer)> ->_NONE_
<org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)> ->_NONE_
<org.jivesoftware.smack.packet.Message: void setSubject(java.lang.String)> ->_NONE_
<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()> ->_NONE_
<android.view.KeyEvent: int getUnicodeChar(int)> ->_NONE_
<java.nio.DirectByteBuffer: float getFloat(int)> ->_NONE_
<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.util.Iterator getContents()> ->_NONE_
<android.text.Layout: void replaceWith(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float)> ->_NONE_
<android.net.MailTo: java.util.Map getHeaders()> ->_NONE_
<android.webkit.BrowserFrame: void documentAsText(android.os.Message)> ->_NONE_
<org.jivesoftware.smack.packet.DataMessage: java.lang.String getPermission()> ->_NONE_
<android.test.mock.MockPackageManager: android.content.res.XmlResourceParser getXml(java.lang.String,int,android.content.pm.ApplicationInfo)> ->_NONE_
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute)> ->_NONE_
<android.widget.Switch: int getThumbScrollRange()> ->_NONE_
<android.widget.LinearLayout: int getShowDividers()> ->_NONE_
<android.widget.AdapterView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)> ->_NONE_
<android.webkit.SslCertLookupTable: void setIsAllowed(android.net.http.SslError)> ->_NONE_
<android.preference.PreferenceActivity: android.preference.PreferenceScreen getPreferenceScreen()> ->_NONE_
<android.net.wifi.WifiManager: java.util.List getScanResults()> ->_NONE_
<android.location.Criteria: int getAccuracy()> ->_NONE_
<java.security.spec.ECPrivateKeySpec: java.security.spec.ECParameterSpec getParams()> ->_NONE_
<android.opengl.GLLogWrapper: java.lang.String getLightName(int)> ->_NONE_
<org.apache.commons.io.input.ProxyInputStream: int read(byte[])> ->_NONE_
<android.widget.HorizontalScrollView: float getLeftFadingEdgeStrength()> ->_NONE_
<android.app.ActionBar: void setHomeButtonEnabled(boolean)> ->_NONE_
<android.util.AtomicFile: byte[] readFully()> ->_NONE_
<gov.nist.javax.sip.stack.IOHandler: java.net.Socket getSocket(java.lang.String)> ->_NONE_
<android.net.wifi.WifiNative: java.lang.String p2pConnect(android.net.wifi.p2p.WifiP2pConfig,boolean)> ->_NONE_
<android.os.Parcel: void writeByteArray(byte[])> ->_NONE_
<org.jivesoftware.smack.PacketReader: org.jivesoftware.smack.packet.Authentication parseAuthentication(org.xmlpull.v1.XmlPullParser)> ->_NONE_
<org.jivesoftware.smack.packet.Packet: void setPacketID(java.lang.String)> ->_NONE_
<org.apache.xml.serializer.dom3.DOMLocatorImpl: java.lang.String getUri()> ->_NONE_
<java.net.Socks4Message: void setIP(byte[])> ->_NONE_
<gov.nist.javax.sip.header.ContentDisposition: void setHandling(java.lang.String)> ->_NONE_
<android.view.MotionEvent: float getHistoricalOrientation(int)> ->_NONE_
<android.media.videoeditor.MediaArtistNativeHelper: int getMediaItemRenderingMode(int)> ->_NONE_
<android.test.mock.MockCursor: int getType(int)> ->_NONE_
<org.apache.xpath.functions.SecuritySupport: java.io.FileInputStream getFileInputStream(java.io.File)> ->_NONE_
<android.widget.VideoView: void setMediaController(android.widget.MediaController)> ->_NONE_
<android.webkit.WebSettings: int getTextZoom()> ->_NONE_
<android.webkit.WebView: void setCertificate(android.net.http.SslCertificate)> ->_NONE_
<android.graphics.drawable.DrawableContainer: void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState)> ->_NONE_
<java.lang.StringBuffer: void getChars(int,int,char[],int)> ->_NONE_
<android.test.ActivityUnitTestCase: void setActivityContext(android.content.Context)> ->_NONE_
<gov.nist.javax.sip.address.SipUri: void setSecure(boolean)> ->_NONE_
<java.net.URI: java.lang.String getRawQuery()> ->_NONE_
<java.util.MapEntry: java.lang.Object setValue(java.lang.Object)> ->_NONE_
<android.animation.ValueAnimator: void setStartDelay(long)> ->_NONE_
<android.preference.SeekBarPreference: void setProgress(int,boolean)> ->_NONE_
<android.emoji.EmojiFactory: android.graphics.Bitmap getBitmapFromAndroidPua(int)> ->_NONE_
<libcore.io.Base64: java.lang.String encode(byte[])> ->_NONE_
<android.media.videoeditor.AudioTrack: int getVolume()> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.RouteList getRouteHeaders()> ->_NONE_
<java.nio.charset.IllegalCharsetNameException: java.lang.String getCharsetName()> ->_NONE_
<android.webkit.WebViewClassic: android.webkit.WebView getWebView()> ->_NONE_
<android.webkit.WebViewClassic: void setNewPicture(android.webkit.WebViewCore$DrawData,boolean)> ->_NONE_
<java.lang.ThreadLocal: void set(java.lang.Object)> ->_NONE_
<gov.nist.javax.sip.header.extensions.ReferredBy: void setValue(java.lang.String)> ->_NONE_
<org.apache.xpath.axes.WalkingIterator: org.apache.xpath.axes.AxesWalker getLastUsedWalker()> ->_NONE_
<android.net.DummyDataStateTracker: void setUserDataEnable(boolean)> ->_NONE_
<android.accessibilityservice.AccessibilityServiceInfo: boolean getCanRetrieveWindowContent()> ->_NONE_
<android.renderscript.Allocation: void setSurfaceTexture(android.graphics.SurfaceTexture)> ->_NONE_
<android.os.CommonClock: void setTimelineChangedListener(android.os.CommonClock$OnTimelineChangedListener)> ->_NONE_
<gov.nist.javax.sip.header.AcceptLanguageList: gov.nist.javax.sip.header.AcceptLanguage getFirst()> ->_NONE_
<android.net.Uri: java.util.Set getQueryParameterNames()> ->_NONE_
<android.telephony.CellBroadcastMessage: void setIsRead(boolean)> ->_NONE_
<net.oauth.OAuthProblemException: int getHttpStatusCode()> ->_NONE_
<java.sql.Timestamp: void setTime(long)> ->_NONE_
<android.telephony.cdma.CdmaSmsCbProgramResults: int getCategoryResult()> ->_NONE_
<android.net.SSLCertificateSocketFactory: void setNpnProtocols(byte[][])> ->_NONE_
<android.graphics.drawable.ClipDrawable: boolean getPadding(android.graphics.Rect)> ->_NONE_
<android.app.ExpandableListActivity: long getSelectedId()> ->_NONE_
<android.test.mock.MockPackageManager: void setApplicationEnabledSetting(java.lang.String,int,int)> ->_NONE_
<java.text.DecimalFormatSymbols: char getDigit()> ->_NONE_
<org.apache.harmony.xml.dom.ProcessingInstructionImpl: java.lang.String getNodeName()> ->_NONE_
<android.test.mock.MockContext: void sendBroadcast(android.content.Intent)> ->_NONE_
<android.filterfw.core.SyncRunner: java.lang.Exception getError()> ->_NONE_
<org.xml.sax.helpers.NamespaceSupport: void setNamespaceDeclUris(boolean)> ->_NONE_
<android.net.sip.SipManager: java.lang.String getCallId(android.content.Intent)> ->_NONE_
<java.net.URLStreamHandler: int getDefaultPort()> ->_NONE_
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: java.lang.String getDnsQueryName()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: void setUseClientMode(boolean)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: void connect(java.net.SocketAddress)> ->_NONE_
<android.os.Binder: java.lang.String getInterfaceDescriptor()> ->_NONE_
<android.webkit.WebView: void loadUrl(java.lang.String,java.util.Map)> ->_NONE_
<android.database.MergeCursor: int getCount()> ->_NONE_
<android.test.mock.MockResources: android.util.DisplayMetrics getDisplayMetrics()> ->_NONE_
<java.util.zip.CheckedInputStream: java.util.zip.Checksum getChecksum()> ->_NONE_
<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String,boolean)> ->_NONE_
<android.graphics.drawable.BitmapDrawable: void setAlpha(int)> ->_NONE_
<android.widget.Scroller: void setFinalY(int)> ->_NONE_
<org.apache.xpath.objects.XObject: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<org.kxml2.io.KXmlParser: void readEndTag()> ->_NONE_
<java.lang.StringBuffer: java.lang.StringBuffer replace(int,int,java.lang.String)> ->_NONE_
<org.apache.xml.utils.UnImplNode: org.w3c.dom.DOMConfiguration getDomConfig()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setContentDescription(java.lang.Object,java.lang.CharSequence)> ->_NONE_
<android.graphics.Path: android.graphics.Path$FillType getFillType()> ->_NONE_
<java.util.logging.LogManager: java.util.logging.LoggingMXBean getLoggingMXBean()> ->_NONE_
<android.text.Layout: int getHeight()> ->_NONE_
<javax.crypto.KeyAgreement: java.lang.String getAlgorithm()> ->_NONE_
<android.widget.BaseExpandableListAdapter: long getCombinedChildId(long,long)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setFocused(java.lang.Object,boolean)> ->_NONE_
<java.text.DateFormatSymbols: java.lang.String[] getMonths()> ->_NONE_
<org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.ElemSort: org.apache.xalan.templates.AVT getLang()> ->_NONE_
<android.speech.tts.BlockingAudioTrack: int getBytesPerFrame(int)> ->_NONE_
<org.apache.harmony.security.asn1.DerOutputStream: void getSetOfLength(org.apache.harmony.security.asn1.ASN1SetOf)> ->_NONE_
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)> ->_NONE_
<android.filterfw.core.Frame: void setTimestamp(long)> ->_NONE_
<android.net.DnsPinger: int pingDnsAsync(java.net.InetAddress,int,int)> ->_NONE_
<android.hardware.input.KeyboardLayout: java.lang.String getLabel()> ->_NONE_
<android.content.pm.PackageParser: java.lang.String buildTaskAffinityName(java.lang.String,java.lang.String,java.lang.CharSequence,java.lang.String[])> ->_NONE_
<org.apache.xpath.NodeSetDTM: void setRoot(int,java.lang.Object)> ->_NONE_
<android.test.TestCaseUtil: java.lang.String getTestName(junit.framework.Test)> ->_NONE_
<android.nfc.tech.NfcBarcode: int getType()> ->_NONE_
<android.widget.ResourceCursorAdapter: void setViewResource(int)> ->_NONE_
<java.security.Signature: java.security.Provider getProvider()> ->_NONE_
<android.database.AbstractCursor: int getColumnCount()> ->_NONE_
<org.apache.james.mime4j.field.MailboxListField: org.apache.james.mime4j.field.address.parser.ParseException getParseException()> ->_NONE_
<android.filterfw.io.TextGraphReader: android.filterfw.core.FilterGraph readGraphString(java.lang.String)> ->_NONE_
<android.bluetooth.BluetoothAdapter: boolean setScanMode(int,int)> ->_NONE_
<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int getPosition()> ->_NONE_
<android.view.GLES20RecordingCanvas: android.view.GLES20RecordingCanvas getNextPoolable()> ->_NONE_
<android.inputmethodservice.KeyboardView: boolean setShifted(boolean)> ->_NONE_
<org.apache.xpath.axes.DescendantIterator: int getAxis()> ->_NONE_
<java.net.InetSocketAddress: int getPort()> ->_NONE_
<org.apache.xpath.axes.WalkingIterator: int getAnalysisBits()> ->_NONE_
<android.widget.Scroller: void setFinalX(int)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setMaxScrollY(int)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getFirstNamespaceNode(int,boolean)> ->_NONE_
<org.apache.xml.res.XMLMessages: java.util.Locale getLocale()> ->_NONE_
<org.apache.james.mime4j.field.Field: org.apache.james.mime4j.field.DefaultFieldParser getParser()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setMaxScrollX(int)> ->_NONE_
<org.apache.james.mime4j.message.Entity: void setHeader(org.apache.james.mime4j.message.Header)> ->_NONE_
<gov.nist.core.NameValue: java.lang.Object getValueAsObject()> ->_NONE_
<org.xml.sax.InputSource: java.io.Reader getCharacterStream()> ->_NONE_
<java.security.cert.X509CertSelector: void setCertificateValid(java.util.Date)> ->_NONE_
<gov.nist.javax.sip.header.Server: java.util.ListIterator getProduct()> ->_NONE_
<javax.net.ssl.SSLContext: javax.net.ssl.SSLSessionContext getServerSessionContext()> ->_NONE_
<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress getPeerInetAddress()> ->_NONE_
<org.apache.xalan.templates.TemplateList: org.apache.xalan.templates.ElemTemplate getTemplateFast(org.apache.xpath.XPathContext,int,int,org.apache.xml.utils.QName,int,boolean,org.apache.xml.dtm.DTM)> ->_NONE_
<android.webkit.CallbackProxy: boolean onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)> ->_NONE_
<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node getCurrentNode()> ->_NONE_
<android.location.Location: void setSpeed(float)> ->_NONE_
<android.widget.Chronometer: long getBase()> ->_NONE_
<java.net.PlainSocketImpl: void connect(java.net.SocketAddress,int)> ->_NONE_
<gov.nist.javax.sip.stack.MessageProcessor: int getPort()> ->_NONE_
<android.telephony.CellIdentityLte: int getMnc()> ->_NONE_
<org.apache.xml.utils.DOM2Helper: org.w3c.dom.Node getParentOfNode(org.w3c.dom.Node)> ->_NONE_
<android.app.WallpaperManager: int getDesiredMinimumWidth()> ->_NONE_
<java.lang.Character: int getNumericValue(int)> ->_NONE_
<org.apache.harmony.security.x509.SubjectPublicKeyInfo: org.apache.harmony.security.x509.AlgorithmIdentifier getAlgorithmIdentifier()> ->_NONE_
<java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)> ->_NONE_
<libcore.icu.NativeDecimalFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)> ->_NONE_
<gov.nist.javax.sip.header.extensions.Join: void setCallId(java.lang.String)> ->_NONE_
<org.apache.xml.serializer.dom3.LSSerializerImpl: java.lang.String getPathWithoutEscapes(java.lang.String)> ->_NONE_
<java.nio.DoubleToByteBufferAdapter: double get(int)> ->_NONE_
<android.widget.Editor: void sendOnTextChanged(int,int)> ->_NONE_
<android.text.Layout: int getLineBottom(int)> ->_NONE_
<java.util.jar.JarEntry: java.security.cert.Certificate[] getCertificates()> ->_NONE_
<android.view.ViewConfiguration: long getSendRecurringAccessibilityEventsInterval()> ->_NONE_
<android.widget.SuggestionsAdapter: int getQueryRefinement()> ->_NONE_
<android.webkit.HTML5Audio: void setDataSource(java.lang.String)> ->_NONE_
<android.view.ViewRootImpl: int getHostVisibility()> ->_NONE_
<android.renderscript.Script: void setVar(int,double)> ->_NONE_
<org.apache.harmony.xml.parsers.DocumentBuilderImpl: void setNamespaceAware(boolean)> ->_NONE_
<android.nfc.tech.Ndef: int getMaxSize()> ->_NONE_
<android.os.Process: int getThreadGroupLeader(int)> ->_NONE_
<android.media.MediaPlayer: java.lang.String getStringParameter(int)> ->_NONE_
<android.webkit.WebIconDatabase: void bulkRequestIconForPageUrl(android.content.ContentResolver,java.lang.String,android.webkit.WebIconDatabase$IconListener)> ->_NONE_
<org.xml.sax.helpers.ParserAdapter: org.xml.sax.ContentHandler getContentHandler()> ->_NONE_
<android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.core.Host parseHost(java.lang.String)> ->_NONE_
<android.net.http.HttpAuthHeader: java.lang.String getPassword()> ->_NONE_
<org.apache.xpath.patterns.UnionPattern: org.apache.xpath.patterns.StepPattern[] getPatterns()> ->_NONE_
<org.apache.harmony.xml.dom.ElementImpl: java.lang.String getTagName()> ->_NONE_
<android.app.ApplicationThreadProxy: void scheduleNewIntent(java.util.List,android.os.IBinder)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: java.lang.String getDocumentVersion(int)> ->_NONE_
<org.apache.http.impl.io.ChunkedInputStream: void parseTrailerHeaders()> ->_NONE_
<gov.nist.javax.sip.header.ims.SecurityAgree: void setProtocol(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.Protocol: java.lang.String getProtocol()> ->_NONE_
<org.apache.xalan.templates.Stylesheet: short getNodeType()> ->_NONE_
<android.content.SyncStatusInfo: long getPeriodicSyncTime(int)> ->_NONE_
<gov.nist.core.GenericObjectList: void setMyClass(java.lang.Class)> ->_NONE_
<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.io.HttpTransportMetrics getMetrics()> ->_NONE_
<gov.nist.javax.sip.address.SipUri: void setParameter(java.lang.String,java.lang.String)> ->_NONE_
<android.util.MonthDisplayHelper: int getDayAt(int,int)> ->_NONE_
<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.Collection getWaitingThreads(java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)> ->_NONE_
<android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPublicKey: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getInstance(java.security.interfaces.DSAPublicKey)> ->_NONE_
<android.content.pm.ComponentInfo: android.graphics.drawable.Drawable loadDefaultIcon(android.content.pm.PackageManager)> ->_NONE_
<org.apache.xalan.templates.ElemVariable: void setIsTopLevel(boolean)> ->_NONE_
<android.view.ViewRootImpl: android.media.AudioManager getAudioManager()> ->_NONE_
<android.hardware.Sensor: int getMinDelay()> ->_NONE_
<android.media.AudioService: void setRemoteSubmixOn(boolean,int)> ->_NONE_
<android.webkit.WebSettings: void setDefaultZoom(android.webkit.WebSettings$ZoomDensity)> ->_NONE_
<android.webkit.WebViewCore: void access$3500(android.webkit.WebViewCore,int,boolean)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.CipherSuite: java.lang.String getAuthType(boolean)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.CipherSuite: org.apache.harmony.xnet.provider.jsse.CipherSuite getByCode(byte,byte)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: byte[] getId()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getOpenSSLKey()> ->_NONE_
<org.apache.xalan.Version: void main(java.lang.String[])> ->_NONE_
<java.io.BufferedOutputStream: void write(byte[],int,int)> ->_NONE_
<java.net.Socket: void setSocketImplFactory(java.net.SocketImplFactory)> ->_NONE_
<android.support.v4.view.ViewCompatJB: java.lang.Object getAccessibilityNodeProvider(android.view.View)> ->_NONE_
<org.apache.harmony.xml.dom.TextImpl: org.w3c.dom.Text replaceWholeText(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.DecimalFormatProperties: void setPerMille(char)> ->_NONE_
<android.widget.GridLayout: void setAlignmentMode(int)> ->_NONE_
<android.support.v4.widget.CursorAdapter: java.lang.Object getItem(int)> ->_NONE_
<android.app.ActivityManager: void setPackageScreenCompatMode(java.lang.String,int)> ->_NONE_
<android.widget.NumberPicker: int getSolidColor()> ->_NONE_
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: void setHead(java.util.concurrent.locks.AbstractQueuedLongSynchronizer$Node)> ->_NONE_
<android.webkit.WebViewClassic: android.webkit.WebViewCore getWebViewCore()> ->_NONE_
<org.apache.http.entity.AbstractHttpEntity: org.apache.http.Header getContentType()> ->_NONE_
<java.util.logging.StreamHandler: void setEncoding(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.address.SipUri: java.lang.String getMethodParam()> ->_NONE_
<gov.nist.javax.sip.header.Warning: java.lang.String encodeBody()> ->_NONE_
<android.accessibilityservice.UiTestAutomationBridge: boolean isConnected()> ->_NONE_
<android.media.videoeditor.VideoEditorProfile: int getExportLevel(int)> ->_NONE_
<android.app.ActivityManager: java.util.List getProcessesInErrorState()> ->_NONE_
<java.nio.DatagramChannelImpl: long write(java.nio.ByteBuffer[],int,int)> ->_NONE_
<java.security.cert.PKIXParameters: void setExplicitPolicyRequired(boolean)> ->_NONE_
<android.app.DialogFragment: int getTheme()> ->_NONE_
<org.jivesoftware.smack.packet.LoginResponse: org.jivesoftware.smack.packet.HeartbeatConfig getHeartbeatConfig()> ->_NONE_
<android.app.NativeActivity: void setWindowFormat(int)> ->_NONE_
<android.widget.GridView: int getTopSelectionPixel(int,int,int)> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: long getIfModifiedSince()> ->_NONE_
<android.test.mock.MockContentProvider: android.content.IContentProvider getIContentProvider()> ->_NONE_
<org.apache.http.params.BasicHttpParams: java.lang.Object getParameter(java.lang.String)> ->_NONE_
<org.apache.commons.io.IOUtils: void write(java.lang.String,java.io.OutputStream,java.lang.String)> ->_NONE_
<android.text.util.Rfc822Token: java.lang.String getAddress()> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)> ->_NONE_
<android.accounts.ChooseTypeAndAccountActivity: void runAddAccountForAuthenticator(java.lang.String)> ->_NONE_
<android.webkit.HTML5VideoViewProxy: android.content.Context getContext()> ->_NONE_
<org.apache.http.message.BasicHeader: org.apache.http.HeaderElement[] getElements()> ->_NONE_
<java.lang.reflect.Field: void setLong(java.lang.Object,long)> ->_NONE_
<android.view.GLES20DisplayList: void setRotation(float)> ->_NONE_
<gov.nist.javax.sip.header.ContentDisposition: java.lang.String getHandling()> ->_NONE_
<android.media.RemoteControlClient: android.media.IRemoteControlClient getIRemoteControlClient()> ->_NONE_
<java.security.cert.X509CertSelector: byte[] getIssuerAsBytes()> ->_NONE_
<android.view.View: int getVerticalScrollbarWidth()> ->_NONE_
<android.drm.DrmSupportInfo: java.util.Iterator getFileSuffixIterator()> ->_NONE_
<android.widget.ZoomButtonsController: void setVisible(boolean)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: java.lang.String getCharset()> ->_NONE_
<java.util.concurrent.atomic.AtomicLongFieldUpdater: long getAndAdd(java.lang.Object,long)> ->_NONE_
<org.apache.commons.io.input.ProxyReader: int read(char[],int,int)> ->_NONE_
<android.os.TokenWatcher: void dump(java.io.PrintWriter)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: void setOutputProperties(java.util.Properties)> ->_NONE_
<java.nio.CharArrayBuffer: java.nio.CharBuffer get(char[],int,int)> ->_NONE_
<gov.nist.core.Debug: void setStackLogger(gov.nist.core.StackLogger)> ->_NONE_
<android.telephony.ServiceState: void setOperatorName(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<dalvik.system.profiler.BinaryHprofWriter: int writeLoadClass(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.ElemVariable getVariableOrParamComposed(org.apache.xml.utils.QName)> ->_NONE_
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script$KernelID getKernelIDSrcOver()> ->_NONE_
<android.app.admin.DevicePolicyManager: void setPasswordExpirationTimeout(android.content.ComponentName,long)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: int getPeerPort()> ->_NONE_
<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: void setInput(java.lang.reflect.GenericDeclaration,java.lang.String)> ->_NONE_
<org.apache.xml.serializer.dom3.DOM3SerializerImpl: char[] getNewLine()> ->_NONE_
<android.view.GLES20Canvas: int getHeight()> ->_NONE_
<gov.nist.javax.sip.header.ParametersHeader: long getParameterAsLong(java.lang.String)> ->_NONE_
<android.webkit.WebSettingsClassic: boolean getAllowFileAccessFromFileURLs()> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ViaList getViaHeaders()> ->_NONE_
<android.webkit.WebViewClassic: void requestFocusNodeHref(android.os.Message)> ->_NONE_
<android.widget.MediaController: void setEnabled(boolean)> ->_NONE_
<android.net.wifi.p2p.WifiP2pManager: void setUpnpServiceResponseListener(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$UpnpServiceResponseListener)> ->_NONE_
<android.app.Fragment: java.lang.String getTag()> ->_NONE_
<android.app.ContextImpl: java.io.File getFileStreamPath(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: void setDocumentURI(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: boolean getShouldStripWhitespace()> ->_NONE_
<android.webkit.WebViewClient: void onUnhandledKeyEvent(android.webkit.WebView,android.view.KeyEvent)> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: void setOutputStream(java.io.OutputStream)> ->_NONE_
<android.os.ServiceManager: android.os.IServiceManager getIServiceManager()> ->_NONE_
<libcore.net.http.ResponseHeaders: java.util.Date getServedDate()> ->_NONE_
<android.emoji.EmojiFactory: android.graphics.Bitmap getBitmapFromVendorSpecificSjis(char)> ->_NONE_
<org.apache.commons.io.filefilter.OrFileFilter: boolean accept(java.io.File,java.lang.String)> ->_NONE_
<android.view.ViewDebug: boolean dumpViewWithProperties(android.content.Context,android.view.View,java.io.BufferedWriter,int)> ->_NONE_
<android.view.View: android.view.HardwareLayer getHardwareLayer()> ->_NONE_
<android.media.videoeditor.MediaImageItem: void setDuration(long)> ->_NONE_
<jp.co.omronsoft.openwnn.EN.OpenWnnEngineEN: void setPreferences(android.content.SharedPreferences)> ->_NONE_
<android.sax.Children: android.sax.Element get(java.lang.String,java.lang.String)> ->_NONE_
<android.util.EventLog: int getTagCode(java.lang.String)> ->_NONE_
<android.nfc.tech.MifareUltralight: int getType()> ->_NONE_
<org.apache.xml.utils.UnImplNode: java.lang.String getDocumentURI()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: java.lang.String getUnparsedEntityURI(java.lang.String)> ->_NONE_
<android.widget.TextView: float getLineSpacingMultiplier()> ->_NONE_
<android.content.ContentProviderProxy: int bulkInsert(android.net.Uri,android.content.ContentValues[])> ->_NONE_
<gov.nist.javax.sip.header.RequestLine: java.lang.String getVersionMinor()> ->_NONE_
<android.accounts.AccountAuthenticatorCache: android.accounts.AuthenticatorDescription parseServiceAttributes(android.content.res.Resources,java.lang.String,android.util.AttributeSet)> ->_NONE_
<javax.net.ssl.SSLContext: void setDefault(javax.net.ssl.SSLContext)> ->_NONE_
<java.io.RandomAccessFile: java.lang.String readUTF()> ->_NONE_
<android.widget.CalendarView: void setMinDate(long)> ->_NONE_
<android.os.CommonClock: int getState()> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getDomain()> ->_NONE_
<org.apache.harmony.security.x509.GeneralName: byte[] getEncoded()> ->_NONE_
<org.apache.http.impl.io.AbstractMessageParser: org.apache.http.Header[] parseHeaders(org.apache.http.io.SessionInputBuffer,int,int,org.apache.http.message.LineParser,java.util.List)> ->_NONE_
<java.lang.Class: java.lang.reflect.Type[] getGenericInterfaces()> ->_NONE_
<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.ElemTemplate getStartRule()> ->_NONE_
<java.security.cert.X509CertSelector: void setIssuer(javax.security.auth.x500.X500Principal)> ->_NONE_
<android.view.View: android.view.KeyEvent$DispatcherState getKeyDispatcherState()> ->_NONE_
<org.apache.commons.logging.impl.LogFactoryImpl: void setAttribute(java.lang.String,java.lang.Object)> ->_NONE_
<org.apache.xalan.templates.ElemCallTemplate: int getParamElemCount()> ->_NONE_
<android.location.Location: void setLatitude(double)> ->_NONE_
<android.telephony.SignalStrength: int getLteRssnr()> ->_NONE_
<android.content.CursorLoader: java.lang.String getSortOrder()> ->_NONE_
<android.view.View: int getTopPaddingOffset()> ->_NONE_
<android.net.wifi.WifiNative: boolean setDeviceType(java.lang.String)> ->_NONE_
<java.security.spec.RSAMultiPrimePrivateCrtKeySpec: java.security.spec.RSAOtherPrimeInfo[] getOtherPrimeInfo()> ->_NONE_
<android.widget.Gallery: void setAnimationDuration(int)> ->_NONE_
<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getNodeName()> ->_NONE_
<android.app.admin.DeviceAdminInfo: java.lang.String getTagForPolicy(int)> ->_NONE_
<android.media.AudioTrack: int setPlaybackHeadPosition(int)> ->_NONE_
<javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.security.Provider)> ->_NONE_
<org.apache.xalan.templates.ElemNumber: org.apache.xalan.templates.AVT getGroupingSize()> ->_NONE_
<android.inputmethodservice.IInputMethodSessionWrapper: void updateCursor(android.graphics.Rect)> ->_NONE_
<java.security.Identity: void setInfo(java.lang.String)> ->_NONE_
<android.telephony.SmsCbEtwsInfo: byte[] getPrimaryNotificationSignature()> ->_NONE_
<gov.nist.javax.sip.header.Warning: void setCode(int)> ->_NONE_
<android.app.BackStackRecord: android.app.FragmentTransaction setTransitionStyle(int)> ->_NONE_
<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getParentBaseUri()> ->_NONE_
<org.apache.xpath.axes.FilterExprWalker: int getAxis()> ->_NONE_
<android.app.admin.DevicePolicyManager: android.content.ComponentName setGlobalProxy(android.content.ComponentName,java.net.Proxy,java.util.List)> ->_NONE_
<android.gesture.GestureOverlayView: float getGestureStrokeSquarenessTreshold()> ->_NONE_
<android.net.LinkProperties: java.util.Collection getAddresses()> ->_NONE_
<org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream: int getTabSize(int)> ->_NONE_
<android.database.sqlite.SQLiteDatabase: long replaceOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)> ->_NONE_
<org.apache.xml.utils.UnImplNode: org.w3c.dom.Attr getAttributeNode(java.lang.String)> ->_NONE_
<java.text.DecimalFormatSymbols: java.lang.String getInfinity()> ->_NONE_
<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)> ->_NONE_
<android.app.MediaRouteButton: int getRouteTypes()> ->_NONE_
<android.app.admin.DevicePolicyManager: int getKeyguardDisabledFeatures(android.content.ComponentName)> ->_NONE_
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager getInstance(android.content.Context)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: void setHandshakeTimeout(int)> ->_NONE_
<android.view.View: android.os.IBinder getWindowToken()> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)> ->_NONE_
<android.widget.FrameLayout: int getForegroundGravity()> ->_NONE_
<android.media.MediaCodec: android.media.MediaFormat getOutputFormat()> ->_NONE_
<org.apache.xml.utils.ObjectPool: java.lang.Object getInstanceIfFree()> ->_NONE_
<android.graphics.PointF: void set(android.graphics.PointF)> ->_NONE_
<org.apache.xalan.templates.AVT: void setRawName(java.lang.String)> ->_NONE_
<org.apache.xml.serializer.ToSAXHandler: void setTransformState(org.apache.xml.serializer.TransformStateSetter)> ->_NONE_
<android.app.Dialog: void setContentView(android.view.View)> ->_NONE_
<org.apache.james.mime4j.codec.EncoderUtil: java.lang.String encodeEncodedWord(java.lang.String,org.apache.james.mime4j.codec.EncoderUtil$Usage,int,java.nio.charset.Charset,org.apache.james.mime4j.codec.EncoderUtil$Encoding)> ->_NONE_
<android.view.KeyEvent: char getMatch(char[],int)> ->_NONE_
<android.widget.TextView: android.text.Layout getLayout()> ->_NONE_
<android.webkit.WebSettings: void setDefaultFontSize(int)> ->_NONE_
<gov.nist.javax.sip.header.Challenge: java.lang.String getOpaque()> ->_NONE_
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script$KernelID getKernelIDSrc()> ->_NONE_
<org.apache.xpath.patterns.StepPattern: org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol: byte[] wrap(byte,byte[],int,int)> ->_NONE_
<android.location.LocationManager: void requestLocationUpdates(android.location.LocationRequest,android.app.PendingIntent)> ->_NONE_
<libcore.icu.CollationElementIteratorICU: void setText(java.text.CharacterIterator)> ->_NONE_
<javax.net.ssl.HttpsURLConnection: void setDefaultSSLSocketFactory(javax.net.ssl.SSLSocketFactory)> ->_NONE_
<org.apache.james.mime4j.field.datetime.parser.SimpleCharStream: void setTabSize(int)> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: int getEndColumnNumber()> ->_NONE_
<org.xml.sax.helpers.ParserAdapter: void parse(java.lang.String)> ->_NONE_
<android.net.LinkSocket: android.net.LinkCapabilities getNeededCapabilities()> ->_NONE_
<java.nio.ShortBuffer: java.nio.ShortBuffer get(short[])> ->_NONE_
<android.webkit.WebViewClassic: int getContentHeight()> ->_NONE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.ProxyAuthenticateHeader createProxyAuthenticateHeader(java.lang.String)> ->_NONE_
<jp.co.omronsoft.openwnn.Keyboard: int getHorizontalGap()> ->_NONE_
<android.os.storage.StorageEventListener: void onUsbMassStorageConnectionChanged(boolean)> ->_NONE_
<android.content.pm.ContainerEncryptionParams: long getAuthenticatedDataStart()> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot getStylesheet()> ->_NONE_
<android.net.nsd.DnsSdTxtRecord: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<javax.sip.ResponseEvent: javax.sip.message.Response getResponse()> ->_NONE_
<org.ccil.cowan.tagsoup.Parser: int getEntity()> ->_NONE_
<android.bluetooth.BluetoothDevice: boolean setAlias(java.lang.String)> ->_NONE_
<android.hardware.SerialPort: void sendBreak()> ->_NONE_
<android.telephony.cdma.CdmaSmsCbProgramData: int getAlertOption()> ->_NONE_
<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()> ->_NONE_
<java.text.DecimalFormatSymbols: java.lang.String getCurrencySymbol()> ->_NONE_
<org.apache.xml.res.XMLErrorResources: java.lang.String getResourceSuffix(java.util.Locale)> ->_NONE_
<android.opengl.GLLogWrapper: java.lang.String getClientState(int)> ->_NONE_
<org.jivesoftware.smack.packet.PresenceCapability: java.lang.String getHash()> ->_NONE_
<gov.nist.javax.sip.header.MimeVersion: void setMajorVersion(int)> ->_NONE_
<java.util.Vector: java.lang.Object get(int)> ->_NONE_
<android.widget.TableLayout: void setColumnCollapsed(int,boolean)> ->_NONE_
<org.apache.xpath.NodeSetDTM: int getLength()> ->_NONE_
<android.renderscript.Element: int getBytesSize()> ->_NONE_
<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.NamedNodeMap getAttributes()> ->_NONE_
<android.accounts.AccountManagerService: long getAccountIdLocked(android.database.sqlite.SQLiteDatabase,android.accounts.Account)> ->_NONE_
<gov.nist.javax.sip.stack.TLSMessageChannel: gov.nist.javax.sip.stack.HandshakeCompletedListenerImpl getHandshakeCompletedListener()> ->_NONE_
<android.media.SoundPool: int load(java.lang.String,int)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: java.lang.String getDocumentStandalone(int)> ->_NONE_
<android.support.v13.app.FragmentPagerAdapter: void finishUpdate(android.view.ViewGroup)> ->_NONE_
<android.content.ContentProvider: void setReadPermission(java.lang.String)> ->_NONE_
<android.content.BroadcastReceiver: android.content.BroadcastReceiver$PendingResult getPendingResult()> ->_NONE_
<android.webkit.WebSettingsClassic: boolean getSavePassword()> ->_NONE_
<android.widget.SimpleAdapter: void setViewImage(android.widget.ImageView,int)> ->_NONE_
<android.widget.ActivityChooserModel: android.content.pm.ResolveInfo getActivity(int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: org.apache.harmony.xnet.provider.jsse.ServerSessionContext getServerSessionContext()> ->_NONE_
<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.extensions.ExtensionNamespacesManager getExtensionNamespacesManager()> ->_NONE_
<android.widget.TextView: int getMarqueeRepeatLimit()> ->_NONE_
<gov.nist.javax.sip.header.Protocol: java.lang.String encode()> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: int getMatchedNode()> ->_NONE_
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: boolean readTxtData(java.io.DataInputStream)> ->_NONE_
<android.widget.LinearLayout: int getDividerPadding()> ->_NONE_
<android.support.v4.view.AccessibilityDelegateCompatIcs: void sendAccessibilityEvent(java.lang.Object,android.view.View,int)> ->_NONE_
<android.media.audiofx.Visualizer: int getFft(byte[])> ->_NONE_
<org.xmlpull.v1.sax2.Driver: java.lang.String getType(int)> ->_NONE_
<android.app.PendingIntent: void writePendingIntentOrNullToParcel(android.app.PendingIntent,android.os.Parcel)> ->_NONE_
<org.apache.http.cookie.CookieOrigin: int getPort()> ->_NONE_
<android.test.mock.MockPackageManager: android.content.pm.FeatureInfo[] getSystemAvailableFeatures()> ->_NONE_
<android.view.GLES20DisplayList: void setBottom(int)> ->_NONE_
<android.view.ViewRootImpl: void getLastTouchPoint(android.graphics.Point)> ->_NONE_
<android.widget.GridView: int getColumnWidth()> ->_NONE_
<android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()> ->_NONE_
<org.jivesoftware.smack.provider.ProviderManager: java.util.Iterator getIQProviders()> ->_NONE_
<jp.co.omronsoft.openwnn.EN.OpenWnnEngineEN: boolean setSearchKey(java.lang.String)> ->_NONE_
<android.telephony.CellSignalStrengthCdma: int getCdmaEcio()> ->_NONE_
<android.filterpacks.imageproc.DuotoneFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<android.database.CursorWrapper: int getColumnCount()> ->_NONE_
<java.text.BreakIterator: java.text.BreakIterator getLineInstance(java.util.Locale)> ->_NONE_
<org.apache.http.message.BasicHttpResponse: void setReasonPhrase(java.lang.String)> ->_NONE_
<android.webkit.HTML5Audio: float getMaxTimeSeekable()> ->_NONE_
<android.content.Intent: android.content.Intent setAction(java.lang.String)> ->_NONE_
<android.database.AbstractWindowedCursor: int getInt(int)> ->_NONE_
<android.filterfw.core.Filter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)> ->_NONE_
<java.net.Socket: java.nio.channels.SocketChannel getChannel()> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: java.lang.String getUnparsedEntityURI(java.lang.String)> ->_NONE_
<android.net.LinkAddress: java.net.InetAddress getAddress()> ->_NONE_
<android.telephony.CellIdentityLte: int getMcc()> ->_NONE_
<android.app.SharedPreferencesImpl: long getLong(java.lang.String,long)> ->_NONE_
<android.app.ActivityManagerProxy: boolean removeTask(int,int)> ->_NONE_
<android.view.View: void setMinimumWidth(int)> ->_NONE_
<java.lang.reflect.Method: java.lang.annotation.Annotation[] getDeclaredAnnotations()> ->_NONE_
<javax.xml.xpath.XPathFactoryFinder: javax.xml.xpath.XPathFactory loadFromServicesFile(java.lang.String,java.lang.String,java.io.InputStream)> ->_NONE_
<android.widget.PopupWindow: void setLayoutInsetDecor(boolean)> ->_NONE_
<android.view.ViewRootImpl: android.view.View getAccessibilityFocusedHost()> ->_NONE_
<java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)> ->_NONE_
<android.telephony.SmsCbMessage: int getGeographicalScope()> ->_NONE_
<android.net.nsd.NsdManager: void registerService(android.net.nsd.NsdServiceInfo,int,android.net.nsd.NsdManager$RegistrationListener)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: void setDocumentLocator(org.xml.sax.Locator)> ->_NONE_
<java.net.Socks4Message: void setPort(int)> ->_NONE_
<java.nio.DatagramChannelImpl: int write(java.nio.ByteBuffer)> ->_NONE_
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationLogo(android.content.pm.ApplicationInfo)> ->_NONE_
<android.widget.VideoView: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)> ->_NONE_
<gov.nist.javax.sip.header.SIPDate: void setHour(int)> ->_NONE_
<java.util.Date: void setMinutes(int)> ->_NONE_
<android.gesture.GestureStore: void load(java.io.InputStream,boolean)> ->_NONE_
<java.util.logging.LogRecord: java.lang.Object[] getParameters()> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentEncodingHeader getContentEncoding()> ->_NONE_
<java.lang.Character: byte getDirectionality(int)> ->_NONE_
<org.jivesoftware.smack.packet.Presence: void setType(org.jivesoftware.smack.packet.Presence$Type)> ->_NONE_
<org.apache.xalan.templates.ElemNumber: void setGroupingSeparator(org.apache.xalan.templates.AVT)> ->_NONE_
<org.jivesoftware.smack.packet.IQ: org.jivesoftware.smack.packet.IQ$Type getType()> ->_NONE_
<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect,android.graphics.Point)> ->_NONE_
<org.apache.harmony.security.pkcs7.SignerInfo: java.lang.String getDigestEncryptionAlgorithm()> ->_NONE_
<android.webkit.JniUtil: android.content.Context getContext()> ->_NONE_
<org.apache.xpath.SourceTreeManager: int getNode(javax.xml.transform.Source)> ->_NONE_
<java.util.Date: void setHours(int)> ->_NONE_
<android.os.storage.StorageVolume: android.os.UserHandle getOwner()> ->_NONE_
<android.widget.GridView: void setStretchMode(int)> ->_NONE_
<org.apache.xpath.axes.ChildIterator: int getAxis()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.HandshakeProtocol: javax.net.ssl.SSLEngineResult$HandshakeStatus getStatus()> ->_NONE_
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setStartDelay(long)> ->_NONE_
<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: void setAccessType(java.lang.String)> ->_NONE_
<android.app.admin.DevicePolicyManager: long getPasswordExpiration(android.content.ComponentName)> ->_NONE_
<android.net.NetworkInfo: java.lang.String getSubtypeName()> ->_NONE_
<org.apache.xalan.templates.ElemVariable: void setIndex(int)> ->_NONE_
<android.text.TextUtils: int getOffsetAfter(java.lang.CharSequence,int)> ->_NONE_
<android.nfc.Tag: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.xalan.xslt.SecuritySupport12: java.io.FileInputStream getFileInputStream(java.io.File)> ->_NONE_
<org.apache.xalan.templates.OutputProperties: void setQNameProperties(java.lang.String,java.util.Vector)> ->_NONE_
<android.widget.TextView: void setInputType(int)> ->_NONE_
<android.app.ActivityThread: android.app.Activity getActivity(android.os.IBinder)> ->_NONE_
<org.apache.http.params.HttpProtocolParams: java.lang.String getContentCharset(org.apache.http.params.HttpParams)> ->_NONE_
<org.apache.xalan.templates.ElemVariable: int getXSLToken()> ->_NONE_
<org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy: long getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)> ->_NONE_
<android.widget.SlidingDrawer: void setOnDrawerOpenListener(android.widget.SlidingDrawer$OnDrawerOpenListener)> ->_NONE_
<android.webkit.WebSettingsClassic: android.webkit.WebSettings$ZoomDensity getDefaultZoom()> ->_NONE_
<android.widget.Editor: float getPrimaryHorizontal(android.text.Layout,android.text.Layout,int)> ->_NONE_
<org.apache.xalan.templates.ElemExtensionDecl: int getXSLToken()> ->_NONE_
<android.net.wifi.p2p.WifiP2pManager: void requestPeers(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$PeerListListener)> ->_NONE_
<java.nio.charset.CharsetICU: java.nio.charset.CharsetEncoder newEncoder()> ->_NONE_
<org.apache.xpath.axes.WalkerFactory: int getAnalysisBitFromAxes(int)> ->_NONE_
<org.apache.xml.utils.AttList: java.lang.String getLocalName(int)> ->_NONE_
<javax.xml.parsers.DocumentBuilderFactory: void setIgnoringComments(boolean)> ->_NONE_
<android.view.textservice.SentenceSuggestionsInfo: android.view.textservice.SuggestionsInfo getSuggestionsInfoAt(int)> ->_NONE_
<java.security.KeyStore: java.security.cert.Certificate getCertificate(java.lang.String)> ->_NONE_
<android.filterfw.core.ProgramVariable: java.lang.Object getValue()> ->_NONE_
<android.webkit.WebSettingsClassic: int getDoubleTapToastCount()> ->_NONE_
<org.ccil.cowan.tagsoup.XMLWriter: void characters(char[],int,int)> ->_NONE_
<android.opengl.GLLogWrapper: java.lang.String getClearBufferMask(int)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: void setMaxConnections(int)> ->_NONE_
<android.view.ViewGroup: void setMotionEventSplittingEnabled(boolean)> ->_NONE_
<org.apache.xml.serializer.CharInfo: boolean get(int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore: org.apache.harmony.security.x509.AuthorityKeyIdentifier getAuthorityKeyIdentifier(java.security.cert.X509Certificate)> ->_NONE_
<org.jivesoftware.smackx.ServiceDiscoveryManager: java.util.Iterator getFeatures()> ->_NONE_
<android.app.ApplicationPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)> ->_NONE_
<javax.xml.parsers.SAXParser: void parse(java.io.InputStream,org.xml.sax.helpers.DefaultHandler)> ->_NONE_
<org.apache.xml.serializer.ToStream: void setContentHandler(org.xml.sax.ContentHandler)> ->_NONE_
<android.test.ProviderTestCase2: android.content.ContentProvider getProvider()> ->_NONE_
<org.apache.xalan.templates.ElemVariable: java.lang.String getNodeName()> ->_NONE_
<android.view.ScaleGestureDetector: float getPreviousSpan()> ->_NONE_
<java.net.Authenticator: java.net.URL getRequestingURL()> ->_NONE_
<android.webkit.CallbackProxy: void onIndexChanged(android.webkit.WebHistoryItem,int)> ->_NONE_
<android.media.audiofx.Visualizer: int setDataCaptureListener(android.media.audiofx.Visualizer$OnDataCaptureListener,int,boolean,boolean)> ->_NONE_
<android.renderscript.Matrix2f: void set(int,int,float)> ->_NONE_
<android.widget.TextView: int getExtendedPaddingTop()> ->_NONE_
<android.util.Log: android.util.Log$TerribleFailureHandler setWtfHandler(android.util.Log$TerribleFailureHandler)> ->_NONE_
<android.app.backup.BackupDataOutput: void setKeyPrefix(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CSeqHeader getCSeq()> ->_NONE_
<android.text.style.URLSpan: int getSpanTypeId()> ->_NONE_
<android.widget.TextView: int getBaseline()> ->_NONE_
<android.view.View: int getMinimumWidth()> ->_NONE_
<android.net.http.Request: android.net.http.EventHandler getEventHandler()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore: void installCertificate(java.security.cert.X509Certificate)> ->_NONE_
<android.widget.AdapterViewAnimator: void setInAnimation(android.animation.ObjectAnimator)> ->_NONE_
<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()> ->_NONE_
<android.preference.SwitchPreference: void setSwitchTextOn(java.lang.CharSequence)> ->_NONE_
<android.media.videoeditor.AudioTrack: long getBoundaryBeginTime()> ->_NONE_
<android.webkit.WebSettingsClassic: java.lang.String getDatabasePath()> ->_NONE_
<android.widget.TextView: java.lang.CharSequence getTransformedText(int,int)> ->_NONE_
<android.net.LocalSocket: int getSoTimeout()> ->_NONE_
<gov.nist.javax.sip.address.SipUri: java.lang.String getUserType()> ->_NONE_
<java.nio.DoubleArrayBuffer: double get(int)> ->_NONE_
<android.filterpacks.imageproc.ColorTemperatureFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)> ->_NONE_
<org.jivesoftware.smack.packet.BatchPresence: org.jivesoftware.smack.packet.Presence getPresenceStanza(int)> ->_NONE_
<org.apache.xml.serializer.utils.Messages: java.util.ListResourceBundle loadResourceBundle(java.lang.String)> ->_NONE_
<org.apache.harmony.security.asn1.DerOutputStream: void getChoiceLength(org.apache.harmony.security.asn1.ASN1Choice)> ->_NONE_
<android.nfc.NdefRecord: short getTnf()> ->_NONE_
<javax.obex.ServerOperation: long getLength()> ->_NONE_
<android.support.v4.app.LoaderManager: boolean hasRunningLoaders()> ->_NONE_
<android.widget.ImageView: boolean getAdjustViewBounds()> ->_NONE_
<org.apache.http.impl.AbstractHttpClientConnection: void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest)> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object decode(java.io.InputStream)> ->_NONE_
<java.text.RuleBasedCollator: java.text.CollationKey getCollationKey(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.AcceptLanguage: void setAcceptLanguage(java.util.Locale)> ->_NONE_
<org.apache.james.mime4j.field.address.parser.AddressListParser: void log(java.lang.String)> ->_NONE_
<android.filterfw.core.FilterGraph: void preconnect(android.filterfw.core.OutputPort,android.filterfw.core.InputPort)> ->_NONE_
<org.apache.http.auth.AuthSchemeRegistry: org.apache.http.auth.AuthScheme getAuthScheme(java.lang.String,org.apache.http.params.HttpParams)> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: org.apache.xml.utils.XMLString getStringValue(int)> ->_NONE_
<gov.nist.javax.sip.address.SipUri: gov.nist.core.NameValueList getParameters()> ->_NONE_
<android.app.ContextImpl: void setWallpaper(android.graphics.Bitmap)> ->_NONE_
<android.view.textservice.SpellCheckerSession: void getSuggestions(android.view.textservice.TextInfo,int)> ->_NONE_
<android.content.pm.ComponentInfo: void dumpBack(android.util.Printer,java.lang.String)> ->_NONE_
<org.apache.xml.serializer.utils.URI: void setPort(int)> ->_NONE_
<gov.nist.javax.sip.header.Protocol: void setTransport(java.lang.String)> ->_NONE_
<android.view.inputmethod.InputConnectionWrapper: boolean setSelection(int,int)> ->_NONE_
<android.widget.AbsListView: void setFastScrollEnabled(boolean)> ->_NONE_
<android.telephony.ServiceState: java.lang.String getOperatorNumeric()> ->_NONE_
<java.security.cert.X509CertSelector: void setNameConstraints(byte[])> ->_NONE_
<android.test.mock.MockPackageManager: android.content.res.Resources getResourcesForActivity(android.content.ComponentName)> ->_NONE_
<gov.nist.javax.sip.stack.UDPMessageChannel: int getViaPort()> ->_NONE_
<android.util.JsonReader: char readEscapeCharacter()> ->_NONE_
<java.util.concurrent.LinkedTransferQueue: int getWaitingConsumerCount()> ->_NONE_
<android.media.MediaCodecList: android.media.MediaCodecInfo getCodecInfoAt(int)> ->_NONE_
<jp.co.omronsoft.openwnn.OpenWnnJAJP: void setDictionary(int)> ->_NONE_
<android.net.wifi.SupplicantStateTracker: void sendSupplicantStateChangedBroadcast(android.net.wifi.SupplicantState,boolean)> ->_NONE_
<android.view.animation.LayoutAnimationController: float getDelay()> ->_NONE_
<android.support.v4.widget.CursorAdapter: int getCount()> ->_NONE_
<org.apache.http.impl.conn.AbstractPooledConnAdapter: org.apache.http.conn.routing.HttpRoute getRoute()> ->_NONE_
<android.location.Criteria: void setAccuracy(int)> ->_NONE_
<java.io.Console: int setEcho(boolean,int)> ->_NONE_
<org.apache.xml.serializer.utils.SerializerMessages_pl: java.lang.Object[][] getContents()> ->_NONE_
<gov.nist.javax.sip.header.SIPETag: java.lang.String getETag()> ->_NONE_
<android.app.Activity: java.lang.CharSequence getTitle()> ->_NONE_
<android.opengl.GLLogWrapper: void endLogIndices()> ->_NONE_
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getCachedIcon(android.app.ApplicationPackageManager$ResourceName)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: void setTrafficClass(int)> ->_NONE_
<java.security.spec.RSAPrivateCrtKeySpec: java.math.BigInteger getCrtCoefficient()> ->_NONE_
<java.nio.FloatToByteBufferAdapter: java.nio.FloatBuffer get(float[],int,int)> ->_NONE_
<android.nfc.tech.IsoDep: void reconnect()> ->_NONE_
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry getFreeEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,java.lang.Object)> ->_NONE_
<android.widget.CursorAdapter: java.lang.Object getItem(int)> ->_NONE_
<org.apache.xml.dtm.SecuritySupport12: java.lang.ClassLoader getContextClassLoader()> ->_NONE_
<android.telephony.CellSignalStrengthCdma: void log(java.lang.String)> ->_NONE_
<android.net.CaptivePortalTracker: void detectCaptivePortal(android.net.NetworkInfo)> ->_NONE_
<android.view.ViewPropertyAnimator: void setValue(int,float)> ->_NONE_
<org.apache.xpath.Expression: java.lang.String getSystemId()> ->_NONE_
<android.webkit.WebSettingsClassic: java.lang.String getFixedFontFamily()> ->_NONE_
<android.webkit.CallbackProxy: void onReceivedTitle(java.lang.String)> ->_NONE_
<org.xml.sax.helpers.AttributesImpl: java.lang.String getURI(int)> ->_NONE_
<java.util.logging.LogRecord: void setLoggerName(java.lang.String)> ->_NONE_
<android.media.AudioManager: int getLastAudibleStreamVolume(int)> ->_NONE_
<android.media.AudioService: void setMode(int,android.os.IBinder)> ->_NONE_
<android.test.mock.MockResources: android.content.res.ColorStateList getColorStateList(int)> ->_NONE_
<gov.nist.javax.sip.stack.MessageChannel: void sendMessage(gov.nist.javax.sip.message.SIPMessage,javax.sip.address.Hop)> ->_NONE_
<org.apache.harmony.security.x509.Extensions: java.util.Set getCriticalExtensions()> ->_NONE_
<android.view.animation.Animation: void setBackgroundColor(int)> ->_NONE_
<android.view.textservice.SpellCheckerSession: void getSentenceSuggestions(android.view.textservice.TextInfo[],int)> ->_NONE_
<org.jivesoftware.smack.provider.RawXmlExtensionProvider: com.google.common.io.protocol.ProtoBufType getProtoBufType()> ->_NONE_
<android.view.textservice.SpellCheckerSession: void getSuggestions(android.view.textservice.TextInfo[],int,boolean)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.KeyManagerImpl: java.security.cert.X509Certificate[] getCertificateChain(java.lang.String)> ->_NONE_
<org.apache.james.mime4j.field.address.NamedMailbox: java.lang.String getName()> ->_NONE_
<android.sax.Element: void setEndTextElementListener(android.sax.EndTextElementListener)> ->_NONE_
<gov.nist.javax.sip.header.ContentType: void setContentType(java.lang.String,java.lang.String)> ->_NONE_
<android.view.View: void setTranslationY(float)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: org.apache.xml.utils.FastStringBuffer getContentBuffer()> ->_NONE_
<android.view.View: void setTranslationX(float)> ->_NONE_
<android.speech.SpeechRecognizer: boolean checkOpenConnection()> ->_NONE_
<android.app.SearchableInfo: int getSuggestThreshold()> ->_NONE_
<gov.nist.javax.sip.header.SIPHeader: java.lang.StringBuffer encodeBody(java.lang.StringBuffer)> ->_NONE_
<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: java.lang.String encodeBody()> ->_NONE_
<android.database.AbstractCursor: android.database.CursorWindow getWindow()> ->_NONE_
<android.app.ProgressDialog: void setIndeterminate(boolean)> ->_NONE_
<org.apache.xalan.templates.OutputProperties: java.util.Properties getDefaultMethodProperties(java.lang.String)> ->_NONE_
<android.opengl.GLUtils: int getInternalFormat(android.graphics.Bitmap)> ->_NONE_
<android.view.View: int getScrollBarDefaultDelayBeforeFade()> ->_NONE_
<org.ccil.cowan.tagsoup.XMLWriter: void writeEsc(char[],int,int,boolean)> ->_NONE_
<android.app.Fragment: void setMenuVisibility(boolean)> ->_NONE_
<gov.nist.javax.sip.header.SIPETag: java.lang.String encodeBody()> ->_NONE_
<java.io.FilterReader: boolean ready()> ->_NONE_
<android.content.SyncStorageEngine: android.content.SyncStatusInfo getOrCreateSyncStatusLocked(int)> ->_NONE_
<android.widget.DigitalClock: boolean get24HourMode()> ->_NONE_
<android.net.DummyDataStateTracker: boolean setRadio(boolean)> ->_NONE_
<android.renderscript.Matrix4f: void set(int,int,float)> ->_NONE_
<gov.nist.javax.sip.header.ims.SecurityAgree: int getSPIClient()> ->_NONE_
<android.os.Environment: java.io.File getSecureDataDirectory()> ->_NONE_
<org.apache.xpath.axes.FilterExprIteratorSimple: int getAxis()> ->_NONE_
<org.apache.harmony.security.x509.NameConstraints: byte[] getExtensionValue(java.security.cert.X509Certificate,java.lang.String)> ->_NONE_
<android.view.View: void setImportantForAccessibility(int)> ->_NONE_
<android.text.style.TextAppearanceSpan: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.app.ContextImpl: int getWallpaperDesiredMinimumWidth()> ->_NONE_
<android.telephony.cdma.CdmaSmsCbProgramData: int getLanguage()> ->_NONE_
<android.app.ContextImpl: android.os.Looper getMainLooper()> ->_NONE_
<android.telephony.TelephonyManager: int getPhoneTypeFromNetworkType()> ->_NONE_
<android.os.Bundle: boolean getBoolean(java.lang.String)> ->_NONE_
<android.text.SpannedString: int getSpanEnd(java.lang.Object)> ->_NONE_
<java.lang.RealToString: java.lang.String resultOrSideEffect(java.lang.AbstractStringBuilder,java.lang.String)> ->_NONE_
<android.text.TextLine: float handleReplacement(android.text.style.ReplacementSpan,android.text.TextPaint,int,int,boolean,android.graphics.Canvas,float,int,int,int,android.graphics.Paint$FontMetricsInt,boolean)> ->_NONE_
<gov.nist.javax.sip.stack.MessageChannel: java.lang.String getHost()> ->_NONE_
<android.view.View: void setLayerType(int,android.graphics.Paint)> ->_NONE_
<java.util.zip.Inflater: void setDictionary(byte[],int,int)> ->_NONE_
<android.net.NetworkInfo: int getSubtype()> ->_NONE_
<org.apache.xpath.axes.IteratorPool: org.apache.xml.dtm.DTMIterator getInstance()> ->_NONE_
<org.apache.xalan.templates.ElemNumber: org.apache.xpath.XPath getCountMatchPattern(org.apache.xpath.XPathContext,int)> ->_NONE_
<org.apache.xml.dtm.ref.IncrementalSAXSource_Filter: int getSourceCoroutineID()> ->_NONE_
<android.view.MotionEvent: float getAxisValue(int)> ->_NONE_
<android.widget.ListPopupWindow: void setListSelector(android.graphics.drawable.Drawable)> ->_NONE_
<android.nfc.TechListParcel: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.webkit.WebSettingsClassic: java.lang.String getCurrentUserAgent()> ->_NONE_
<org.apache.james.mime4j.message.TempFileBinaryBody: org.apache.james.mime4j.message.Entity getParent()> ->_NONE_
<gov.nist.javax.sip.stack.SIPServerTransaction: void sendReliableProvisionalResponse(javax.sip.message.Response)> ->_NONE_
<java.text.SimpleDateFormat: void setDateFormatSymbols(java.text.DateFormatSymbols)> ->_NONE_
<org.apache.harmony.security.x509.GeneralSubtree: byte[] getEncoded()> ->_NONE_
<android.graphics.Region: android.graphics.Path getBoundaryPath()> ->_NONE_
<org.kxml2.io.KXmlSerializer: int getDepth()> ->_NONE_
<org.apache.xalan.templates.ElemExtensionScript: java.lang.String getLang()> ->_NONE_
<libcore.icu.LocaleData: libcore.icu.LocaleData get(java.util.Locale)> ->_NONE_
<android.telephony.SignalStrength: int getCdmaAsuLevel()> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getRemoteTag()> ->_NONE_
<android.os.storage.StorageVolume: void setStorageId(int)> ->_NONE_
<org.apache.harmony.luni.lang.reflect.ImplForVariable: java.lang.reflect.GenericDeclaration getGenericDeclaration()> ->_NONE_
<android.widget.TabHost: int getCurrentTab()> ->_NONE_
<android.media.AudioTrack: int setPositionNotificationPeriod(int)> ->_NONE_
<android.webkit.WebSettingsClassic: java.lang.String getFantasyFontFamily()> ->_NONE_
<android.net.sip.SipAudioCall: void setListener(android.net.sip.SipAudioCall$Listener,boolean)> ->_NONE_
<java.net.Socks4Message: void setUserId(java.lang.String)> ->_NONE_
<javax.obex.ClientOperation: boolean continueOperation(boolean,boolean)> ->_NONE_
<android.net.MobileDataStateTracker: void setTeardownRequested(boolean)> ->_NONE_
<android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View,int,boolean)> ->_NONE_
<android.app.Fragment: boolean getUserVisibleHint()> ->_NONE_
<gov.nist.javax.sip.header.SIPDate: int getHour()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: org.apache.xml.dtm.ref.DTMStringPool getNsNameTable()> ->_NONE_
<android.graphics.drawable.ShapeDrawable: void setPadding(android.graphics.Rect)> ->_NONE_
<android.support.v4.widget.SimpleCursorAdapter: void setViewText(android.widget.TextView,java.lang.String)> ->_NONE_
<android.database.sqlite.SQLiteQueryBuilder: void setCursorFactory(android.database.sqlite.SQLiteDatabase$CursorFactory)> ->_NONE_
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()> ->_NONE_
<gov.nist.javax.sip.header.ims.PServedUser: java.lang.String getRegistrationState()> ->_NONE_
<android.content.ContentProviderProxy: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)> ->_NONE_
<org.apache.xml.serializer.utils.SerializerMessages_sk: java.lang.Object[][] getContents()> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: int getAttributeNode(int,java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xml.serializer.utils.SerializerMessages_sl: java.lang.Object[][] getContents()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.CipherSuite: java.lang.String getServerKeyType()> ->_NONE_
<android.net.wifi.WifiManager: void setFrequencyBand(int,boolean)> ->_NONE_
<android.text.AutoText: int getSize()> ->_NONE_
<android.bluetooth.BluetoothServerSocket: void setServiceName(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.address.SipUri: java.lang.String getHost()> ->_NONE_
<android.widget.AppSecurityPermissions: int getPermissionCount()> ->_NONE_
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.TemplateList: org.apache.xalan.templates.ElemTemplate getTemplate(org.apache.xpath.XPathContext,int,org.apache.xml.utils.QName,boolean,org.apache.xml.dtm.DTM)> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: void setServerTransactionFlag(boolean)> ->_NONE_
<org.apache.xpath.SourceTreeManager: int getSourceTree(java.lang.String,java.lang.String,javax.xml.transform.SourceLocator,org.apache.xpath.XPathContext)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: org.xml.sax.ext.DeclHandler getDeclHandler()> ->_NONE_
<org.apache.james.mime4j.field.contenttype.parser.ParseException: java.lang.String getMessage()> ->_NONE_
<android.net.http.AndroidHttpClientConnection: void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest)> ->_NONE_
<android.telephony.PhoneNumberUtils: java.lang.String internalGetStrippedReversed(java.lang.String,int)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: int getFirstAttribute(int)> ->_NONE_
<java.util.concurrent.atomic.AtomicIntegerArray: int getAndAdd(int,int)> ->_NONE_
<android.widget.TableLayout: void setColumnStretchable(int,boolean)> ->_NONE_
<android.test.ServiceTestCase: android.app.Application getApplication()> ->_NONE_
<android.filterfw.MffEnvironment: android.filterfw.core.FilterContext getContext()> ->_NONE_
<gov.nist.javax.sip.header.SIPHeaderList: void setMyClass(java.lang.Class)> ->_NONE_
<android.app.ContextImpl: void setTheme(int)> ->_NONE_
<android.inputmethodservice.KeyboardView: android.inputmethodservice.KeyboardView$OnKeyboardActionListener getOnKeyboardActionListener()> ->_NONE_
<android.widget.CursorTreeAdapter: android.widget.Filter getFilter()> ->_NONE_
<android.text.style.RelativeSizeSpan: int getSpanTypeId()> ->_NONE_
<android.bluetooth.BluetoothHeadset: boolean acceptIncomingConnect(android.bluetooth.BluetoothDevice)> ->_NONE_
<android.preference.PreferenceFragment: android.widget.ListView getListView()> ->_NONE_
<org.apache.http.params.HttpProtocolParamBean: void setHttpElementCharset(java.lang.String)> ->_NONE_
<android.widget.ExpandableListView: void setIndicatorBounds(int,int)> ->_NONE_
<android.renderscript.ScriptIntrinsicLUT: void setGreen(int,int)> ->_NONE_
<android.webkit.WebSettings: void setTextZoom(int)> ->_NONE_
<org.xml.sax.helpers.LocatorImpl: java.lang.String getSystemId()> ->_NONE_
<android.webkit.JsResult: boolean getResult()> ->_NONE_
<org.apache.http.conn.params.ConnRouteParamBean: void setForcedRoute(org.apache.http.conn.routing.HttpRoute)> ->_NONE_
<org.apache.harmony.security.asn1.ASN1UTCTime: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)> ->_NONE_
<android.preference.RingtonePreference: boolean getShowSilent()> ->_NONE_
<org.apache.xml.utils.UnImplNode: org.w3c.dom.Attr setAttributeNode(org.w3c.dom.Attr)> ->_NONE_
<android.content.pm.PermissionGroupInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: void executeNSDecls(org.apache.xalan.transformer.TransformerImpl)> ->_NONE_
<android.net.LinkSocket: void connect(java.lang.String,int)> ->_NONE_
<android.webkit.WebSettingsClassic: void setSaveFormData(boolean)> ->_NONE_
<android.webkit.JniUtil: java.lang.String getAutofillQueryUrl()> ->_NONE_
<android.renderscript.Matrix3f: void set(int,int,float)> ->_NONE_
<org.apache.james.mime4j.message.BodyPart: void writeTo(java.io.OutputStream)> ->_NONE_
<android.net.MobileDataStateTracker: void setPolicyDataEnable(boolean)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ViaHeader getTopmostViaHeader()> ->_NONE_
<android.app.Fragment: android.app.LoaderManager getLoaderManager()> ->_NONE_
<org.apache.xml.serializer.SerializerFactory: org.apache.xml.serializer.Serializer getSerializer(java.util.Properties)> ->_NONE_
<android.widget.TextView: void setCursorVisible(boolean)> ->_NONE_
<org.apache.xpath.operations.Variable: void setQName(org.apache.xml.utils.QName)> ->_NONE_
<android.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> ->_NONE_
<java.net.HttpCookie: boolean getDiscard()> ->_NONE_
<android.hardware.usb.UsbAccessory: java.lang.String getSerial()> ->_NONE_
<java.io.InputStream: int read(byte[])> ->_NONE_
<org.apache.harmony.security.x509.PolicyInformation: byte[] getEncoded()> ->_NONE_
<org.apache.harmony.security.PrivateKeyImpl: java.lang.String getFormat()> ->_NONE_
<android.preference.PreferenceGroup: void setEnabled(boolean)> ->_NONE_
<java.net.PlainSocketImpl: void setOption(int,java.lang.Object)> ->_NONE_
<android.webkit.WebViewCore: float getFixedDisplayDensity(android.content.Context)> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: int getEndLineNumber()> ->_NONE_
<android.app.ApplicationPackageManager: java.util.List getInstalledApplications(int)> ->_NONE_
<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo getApplicationInfo()> ->_NONE_
<android.text.Layout: float getSecondaryHorizontal(int)> ->_NONE_
<android.webkit.WebHistoryItem: android.graphics.Bitmap getFavicon()> ->_NONE_
<android.app.SearchManager: java.util.List getGlobalSearchActivities()> ->_NONE_
<javax.net.ssl.SSLContext: javax.net.ssl.SSLParameters getDefaultSSLParameters()> ->_NONE_
<org.apache.xalan.processor.ProcessorOutputElem: void setDoctypeSystem(java.lang.String)> ->_NONE_
<android.renderscript.Sampler: android.renderscript.Sampler$Value getMinification()> ->_NONE_
<android.text.style.MaskFilterSpan: android.graphics.MaskFilter getMaskFilter()> ->_NONE_
<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.ClassLoader getClassLoader(java.lang.Class)> ->_NONE_
<android.os.CommonClock: int getEstimatedError()> ->_NONE_
<android.content.ContextWrapper: void setWallpaper(android.graphics.Bitmap)> ->_NONE_
<android.text.TextUtils: java.lang.String htmlEncode(java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.lang.String getPeerHost()> ->_NONE_
<java.util.prefs.XMLParser: void flushEmptyElement(java.lang.String,java.lang.String[],java.lang.String[],java.io.BufferedWriter)> ->_NONE_
<android.content.pm.PermissionGroupInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.xml.serializer.utils.SerializerMessages_ru: java.lang.Object[][] getContents()> ->_NONE_
<android.webkit.WebSettingsClassic: int getDefaultFontSize()> ->_NONE_
<org.apache.xalan.templates.TemplateSubPatternAssociation: int getImportLevel()> ->_NONE_
<org.jivesoftware.smack.packet.Packet: void setProperty(java.lang.String,float)> ->_NONE_
<net.oauth.signature.RSA_SHA1: java.security.PublicKey getPublicKeyFromPem(java.lang.String)> ->_NONE_
<android.preference.MultiSelectListPreference: java.lang.CharSequence[] getEntryValues()> ->_NONE_
<java.util.zip.ZipOutputStream: void setComment(java.lang.String)> ->_NONE_
<android.inputmethodservice.KeyboardView: void setPreviewEnabled(boolean)> ->_NONE_
<android.content.ContentResolver: java.lang.String getType(android.net.Uri)> ->_NONE_
<org.apache.xalan.templates.StylesheetRoot: java.util.Vector getVariablesAndParamsComposed()> ->_NONE_
<android.filterfw.core.FilterGraph: boolean readyForProcessing(android.filterfw.core.Filter,java.util.Set)> ->_NONE_
<java.util.logging.MemoryHandler: void setPushLevel(java.util.logging.Level)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: int getTemplateCount()> ->_NONE_
<android.webkit.WebViewClassic: void overrideLoading(java.lang.String)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean: void setMovementGranularities(java.lang.Object,int)> ->_NONE_
<android.webkit.WebViewClassic: android.webkit.WebViewProvider$ScrollDelegate getScrollDelegate()> ->_NONE_
<java.util.zip.Adler32: long getValue()> ->_NONE_
<android.widget.AdapterView: android.view.View getEmptyView()> ->_NONE_
<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.Element getDocumentElement()> ->_NONE_
<android.widget.AdapterViewFlipper: void updateRunning(boolean)> ->_NONE_
<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.Authorization getAuthorization()> ->_NONE_
<java.security.Provider: void load(java.io.InputStream)> ->_NONE_
<org.apache.xalan.templates.DecimalFormatProperties: char getDecimalSeparator()> ->_NONE_
<libcore.net.http.HttpHandler: java.net.URLConnection openConnection(java.net.URL,java.net.Proxy)> ->_NONE_
<java.io.ObjectOutputStream: java.lang.Object replaceObject(java.lang.Object)> ->_NONE_
<android.animation.ValueAnimator: float getAnimatedFraction()> ->_NONE_
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.ComponentName)> ->_NONE_
<android.net.NetworkQuotaInfo: long getHardLimitBytes()> ->_NONE_
<android.widget.GridView: void setSelectionInt(int)> ->_NONE_
<android.util.XmlPullAttributes: boolean getAttributeBooleanValue(int,boolean)> ->_NONE_
<java.util.TimeZone: java.util.TimeZone getDefault()> ->_NONE_
<android.media.audiofx.AudioEffect: int setEnabled(boolean)> ->_NONE_
<java.net.URI: java.lang.String getHost()> ->_NONE_
<java.util.zip.ZipEntry: int getMethod()> ->_NONE_
<android.widget.ScrollBarDrawable: boolean getAlwaysDrawHorizontalTrack()> ->_NONE_
<java.net.URL: java.lang.String getHost()> ->_NONE_
<android.security.KeyStore: long getmtime(java.lang.String)> ->_NONE_
<android.app.Dialog: int getVolumeControlStream()> ->_NONE_
<android.view.animation.GridLayoutAnimationController: void setRowDelay(float)> ->_NONE_
<android.emoji.EmojiFactory: int getVendorSpecificSjisFromAndroidPua(int)> ->_NONE_
<android.view.accessibility.AccessibilityEvent: int getEventType()> ->_NONE_
<android.content.res.Resources: java.lang.String getResourceName(int)> ->_NONE_
<org.apache.xml.serializer.utils.SerializerMessages_tr: java.lang.Object[][] getContents()> ->_NONE_
<gov.nist.javax.sip.message.SIPResponse: java.lang.String encodeMessage()> ->_NONE_
<org.apache.xalan.templates.DecimalFormatProperties: void setPercent(char)> ->_NONE_
<javax.crypto.Cipher: byte[] getIV()> ->_NONE_
<android.os.CommonTimeConfig: int setAutoDisable(boolean)> ->_NONE_
<android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence)> ->_NONE_
<org.apache.xml.utils.StylesheetPIHandler: javax.xml.transform.URIResolver getURIResolver()> ->_NONE_
<android.webkit.WebSettingsClassic: void setForceUserScalable(boolean)> ->_NONE_
<android.test.mock.MockContext: android.content.ContentResolver getContentResolver()> ->_NONE_
<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.String getSystemProperty(java.lang.String,java.lang.String)> ->_NONE_
<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)> ->_NONE_
<android.filterpacks.imageproc.Invert: android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)> ->_NONE_
<gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.header.ServerHeader getDefaultServerHeader()> ->_NONE_
<android.content.ContentResolver: boolean getMasterSyncAutomatically()> ->_NONE_
<jp.co.omronsoft.openwnn.Keyboard: int[] getNearestKeys(int,int)> ->_NONE_
<android.webkit.CallbackProxy: boolean onSavePassword(java.lang.String,java.lang.String,java.lang.String,android.os.Message)> ->_NONE_
<libcore.util.ZoneInfoDB: java.lang.String[] getAvailableIDs()> ->_NONE_
<org.apache.xml.serializer.utils.URI: void setFragment(java.lang.String)> ->_NONE_
<android.telephony.cdma.CdmaSmsCbProgramResults: int getLanguage()> ->_NONE_
<jp.co.omronsoft.openwnn.KeyboardView: void setKeyboard(jp.co.omronsoft.openwnn.Keyboard)> ->_NONE_
<android.media.videoeditor.MediaVideoItem: int getAudioBitrate()> ->_NONE_
<org.apache.http.entity.SerializableEntity: void createBytes(java.io.Serializable)> ->_NONE_
<java.text.ChoiceFormat: void setChoices(double[],java.lang.String[])> ->_NONE_
<android.webkit.WebResourceResponse: void setData(java.io.InputStream)> ->_NONE_
<android.webkit.WebIconDatabaseClassic: android.webkit.WebIconDatabaseClassic getInstance()> ->_NONE_
<android.view.GLES20DisplayList: void setLeftTopRightBottom(int,int,int,int)> ->_NONE_
<javax.xml.transform.stream.StreamSource: java.io.InputStream getInputStream()> ->_NONE_
<org.apache.http.impl.SocketHttpClientConnection: int getRemotePort()> ->_NONE_
<android.view.animation.CycleInterpolator: float getInterpolation(float)> ->_NONE_
<android.webkit.CacheManager: android.webkit.CacheManager$CacheResult getCacheFile(java.lang.String,java.util.Map)> ->_NONE_
<android.filterfw.MffEnvironment: void setGLEnvironment(android.filterfw.core.GLEnvironment)> ->_NONE_
<android.os.Message: long getWhen()> ->_NONE_
<java.nio.FloatBuffer: java.nio.FloatBuffer get(float[])> ->_NONE_
<gov.nist.javax.sip.header.Challenge: java.lang.String getRealm()> ->_NONE_
<android.mtp.MtpObjectInfo: java.lang.String getKeywords()> ->_NONE_
<gov.nist.javax.sip.stack.SIPServerTransaction: void sendResponse(gov.nist.javax.sip.message.SIPResponse)> ->_NONE_
<android.view.ViewRootImpl: android.view.AccessibilityInteractionController getAccessibilityInteractionController()> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: void setState(int)> ->_NONE_
<android.webkit.WebView: java.lang.String[] getHttpAuthUsernamePassword(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xpath.XPathContext: org.apache.xalan.extensions.ExpressionContext getExpressionContext()> ->_NONE_
<android.webkit.WebSettingsClassic: void setAutoFillEnabled(boolean)> ->_NONE_
<org.apache.xml.serializer.utils.URI: java.lang.String getQueryString()> ->_NONE_
<android.media.MediaRouter: android.media.MediaRouter$RouteCategory getSystemAudioCategory()> ->_NONE_
<android.webkit.WebSettingsClassic: void setShrinksStandaloneImagesToFit(boolean)> ->_NONE_
<net.oauth.OAuthMessage: java.util.Map getParameterMap()> ->_NONE_
<android.graphics.drawable.RotateDrawable: int getOpacity()> ->_NONE_
<android.widget.TextView: void setHeight(int)> ->_NONE_
<org.apache.xalan.templates.AVT: java.lang.String getName()> ->_NONE_
<java.util.jar.Manifest: java.util.jar.Attributes getMainAttributes()> ->_NONE_
<android.net.NetworkTemplate: java.lang.String getNetworkId()> ->_NONE_
<android.widget.ActivityChooserModel: void setOnChooseActivityListener(android.widget.ActivityChooserModel$OnChooseActivityListener)> ->_NONE_
<android.os.RemoteCallback: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<libcore.net.http.RequestHeaders: java.lang.String getTransferEncoding()> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Integer: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: void setOutputFormat(org.apache.xalan.templates.OutputProperties)> ->_NONE_
<org.kxml2.io.KXmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xpath.functions.FuncLang: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<gov.nist.javax.sip.parser.TimeStampParser: gov.nist.javax.sip.header.SIPHeader parse()> ->_NONE_
<org.apache.xml.serializer.ToXMLSAXHandler: void setOutputStream(java.io.OutputStream)> ->_NONE_
<android.graphics.Matrix: void setSkew(float,float,float,float)> ->_NONE_
<android.net.wifi.WifiNative: boolean setModelNumber(java.lang.String)> ->_NONE_
<android.telephony.gsm.SmsMessage: java.lang.String getDisplayMessageBody()> ->_NONE_
<android.telephony.CellBroadcastMessage: long getDeliveryTime()> ->_NONE_
<org.json.JSONObject: java.lang.Object get(java.lang.String)> ->_NONE_
<android.net.SSLCertificateSocketFactory: void setHostname(java.net.Socket,java.lang.String)> ->_NONE_
<org.apache.xml.serializer.utils.StringToIntTable: int getLength()> ->_NONE_
<java.net.HttpURLConnection: boolean getInstanceFollowRedirects()> ->_NONE_
<org.xml.sax.InputSource: void setCharacterStream(java.io.Reader)> ->_NONE_
<org.apache.http.entity.BasicHttpEntity: void setContent(java.io.InputStream)> ->_NONE_
<java.net.PlainSocketImpl: void connect(java.lang.String,int)> ->_NONE_
<org.jivesoftware.smack.PacketReader: org.jivesoftware.smack.packet.Bind parseResourceBinding(org.xmlpull.v1.XmlPullParser)> ->_NONE_
<android.bluetooth.BluetoothHeadset: boolean connect(android.bluetooth.BluetoothDevice)> ->_NONE_
<android.inputmethodservice.InputMethodService: void sendDownUpKeyEvents(int)> ->_NONE_
<libcore.net.http.HttpURLConnectionImpl: java.util.Map getHeaderFields()> ->_NONE_
<gov.nist.javax.sip.stack.SIPServerTransaction: void setMapped(boolean)> ->_NONE_
<java.lang.Class: java.lang.String getCanonicalName()> ->_NONE_
<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)> ->_NONE_
<java.text.DecimalFormatSymbols: java.lang.String getNaN()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketFactoryImpl: java.lang.String[] getSupportedCipherSuites()> ->_NONE_
<android.net.DummyDataStateTracker: android.net.NetworkInfo getNetworkInfo()> ->_NONE_
<android.media.RingtoneManager: android.net.Uri getActualDefaultRingtoneUri(android.content.Context,int)> ->_NONE_
<org.apache.harmony.security.x509.GeneralName: java.lang.Object getName()> ->_NONE_
<android.app.WallpaperManager: android.graphics.drawable.Drawable getFastDrawable()> ->_NONE_
<android.webkit.HTML5VideoViewProxy: void loadPoster(java.lang.String)> ->_NONE_
<android.view.inputmethod.InputMethodInfo: void dump(android.util.Printer,java.lang.String)> ->_NONE_
<android.net.Uri: android.net.Uri getCanonicalUri()> ->_NONE_
<android.util.JsonReader: int getLineNumber()> ->_NONE_
<gov.nist.javax.sip.header.ims.SecurityAgree: void setAlgorithm(java.lang.String)> ->_NONE_
<android.nfc.NfcAdapter: android.nfc.NfcAdapter getNfcAdapter(android.content.Context)> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: java.lang.String getDoctypeSystem()> ->_NONE_
<org.apache.xml.serializer.utils.SerializerMessages_sv: java.lang.Object[][] getContents()> ->_NONE_
<android.telephony.CellIdentityGsm: int getCid()> ->_NONE_
<javax.net.ssl.HttpsURLConnection: javax.net.ssl.HostnameVerifier getDefaultHostnameVerifier()> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.CountersTable getCountersTable()> ->_NONE_
<java.text.DateFormat: java.text.DateFormat getDateTimeInstance()> ->_NONE_
<gov.nist.javax.sip.address.SipUri: void setUserPassword(java.lang.String)> ->_NONE_
<android.speech.tts.TtsEngines: java.lang.String getDefaultEngine()> ->_NONE_
<jp.co.omronsoft.openwnn.Keyboard: void setHorizontalGap(int)> ->_NONE_
<android.preference.MultiCheckPreference: void setEntryValues(java.lang.String[])> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: java.lang.String getBaseURLOfSource()> ->_NONE_
<android.media.MediaPlayer: android.media.Metadata getMetadata(boolean,boolean)> ->_NONE_
<java.text.ChoiceFormat: double[] getLimits()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.NativeCrypto: void setEnabledProtocols(int,java.lang.String[])> ->_NONE_
<android.media.AudioService: void dumpRCCStack(java.io.PrintWriter)> ->_NONE_
<android.bluetooth.BluetoothClass: int getDeviceClass()> ->_NONE_
<org.jivesoftware.smack.packet.DataMessage: java.util.ArrayList getAppDataList()> ->_NONE_
<java.lang.reflect.Constructor: java.lang.Class[] getExceptionTypes()> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Boolean: void encodeContent(org.apache.harmony.security.asn1.BerOutputStream)> ->_NONE_
<android.preference.Preference: java.lang.String getDependency()> ->_NONE_
<android.webkit.WebViewClassic: android.view.View getZoomControls()> ->_NONE_
<android.widget.PopupWindow: void setWindowLayoutMode(int,int)> ->_NONE_
<android.support.v4.view.PagerTabStrip: void setPadding(int,int,int,int)> ->_NONE_
<java.nio.HeapByteBuffer: float getFloat(int)> ->_NONE_
<gov.nist.javax.sip.stack.SIPServerTransaction: void setInviteTransaction(gov.nist.javax.sip.stack.SIPServerTransaction)> ->_NONE_
<org.xml.sax.helpers.NamespaceSupport: java.util.Enumeration getDeclaredPrefixes()> ->_NONE_
<gov.nist.javax.sip.address.SipUri: gov.nist.core.NameValueList getQheaders()> ->_NONE_
<org.apache.http.message.BufferedHeader: java.lang.String getName()> ->_NONE_
<android.renderscript.Matrix3f: void load(android.renderscript.Matrix3f)> ->_NONE_
<android.support.v4.app.ListFragment: long getSelectedItemId()> ->_NONE_
<org.apache.http.impl.conn.LoggingSessionOutputBuffer: void writeLine(java.lang.String)> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: void setParams(org.apache.http.params.HttpParams)> ->_NONE_
<org.apache.http.conn.params.ConnManagerParamBean: void setConnectionsPerRoute(org.apache.http.conn.params.ConnPerRouteBean)> ->_NONE_
<org.apache.xml.utils.UnImplNode: org.w3c.dom.NodeList getChildNodes()> ->_NONE_
<java.security.cert.X509Certificate: java.util.List getExtendedKeyUsage()> ->_NONE_
<android.widget.ScrollBarDrawable: void setVerticalThumbDrawable(android.graphics.drawable.Drawable)> ->_NONE_
<android.webkit.HTML5VideoView: int getCurrentState()> ->_NONE_
<java.util.concurrent.locks.ReentrantLock: int getHoldCount()> ->_NONE_
<android.sax.Element: android.sax.Element getChild(java.lang.String)> ->_NONE_
<android.app.LoadedApk: java.lang.ClassLoader getClassLoader()> ->_NONE_
<org.apache.xpath.functions.FuncExtFunctionAvailable: void setFunctionTable(org.apache.xpath.compiler.FunctionTable)> ->_NONE_
<org.apache.http.impl.cookie.NetscapeDraftHeaderParser: org.apache.http.HeaderElement parseHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)> ->_NONE_
<android.speech.tts.TtsEngines: java.lang.String getDefaultLocale()> ->_NONE_
<org.apache.xalan.xslt.EnvironmentCheck: void logMsg(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.address.SipUri: void setScheme(java.lang.String)> ->_NONE_
<android.widget.ExpandableListView: long getSelectedPosition()> ->_NONE_
<java.net.URL: java.lang.String getFile()> ->_NONE_
<org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getCNs(java.security.cert.X509Certificate)> ->_NONE_
<org.jivesoftware.smack.OpenTrustManager: java.security.cert.X509Certificate[] getAcceptedIssuers()> ->_NONE_
<android.view.View: int getRight()> ->_NONE_
<android.renderscript.Allocation: void setSurface(android.view.Surface)> ->_NONE_
<android.widget.RemoteViews: void setImageViewResource(int,int)> ->_NONE_
<org.jivesoftware.smack.packet.PresenceCapability: java.lang.String getExtension()> ->_NONE_
<android.nfc.NfcAdapter: void setOnNdefPushCompleteCallback(android.nfc.NfcAdapter$OnNdefPushCompleteCallback,android.app.Activity,android.app.Activity[])> ->_NONE_
<org.apache.xalan.Version: int getMajorVersionNum()> ->_NONE_
<gov.nist.javax.sip.address.SipUri: java.lang.String getGrParam()> ->_NONE_
<org.apache.commons.io.IOUtils: void writeLines(java.util.Collection,java.lang.String,java.io.OutputStream)> ->_NONE_
<org.apache.xpath.operations.Operation: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<android.text.SpannableStringInternal: void setSpan(java.lang.Object,int,int,int)> ->_NONE_
<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.URIResolver getURIResolver()> ->_NONE_
<android.net.NetworkPolicyManager: void setRestrictBackground(boolean)> ->_NONE_
<org.apache.xpath.NodeSet: void setElementAt(org.w3c.dom.Node,int)> ->_NONE_
<android.media.MediaFormat: int getInteger(java.lang.String)> ->_NONE_
<android.filterfw.core.FilterFunction: android.filterfw.core.Filter getFilter()> ->_NONE_
<gov.nist.javax.sip.header.SIPHeaderList: java.util.List getHeadersAsEncodedStrings()> ->_NONE_
<org.xmlpull.v1.sax2.Driver: void setProperty(java.lang.String,java.lang.Object)> ->_NONE_
<android.nfc.NfcActivityManager: void setNdefPushContentUriCallback(android.app.Activity,android.nfc.NfcAdapter$CreateBeamUrisCallback)> ->_NONE_
<android.app.admin.DeviceAdminReceiver: android.app.admin.DevicePolicyManager getManager(android.content.Context)> ->_NONE_
<android.view.Surface: void setWindowCrop(android.graphics.Rect)> ->_NONE_
<android.app.BackStackRecord: android.app.FragmentTransaction replace(int,android.app.Fragment,java.lang.String)> ->_NONE_
<android.util.MonthDisplayHelper: int getMonth()> ->_NONE_
<android.view.animation.AnimationSet: void setDuration(long)> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: void setSource(android.view.View)> ->_NONE_
<org.apache.http.params.DefaultedHttpParams: java.util.Set getNames()> ->_NONE_
<android.graphics.Paint: android.graphics.Xfermode getXfermode()> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: void setHttpRequestRetryHandler(org.apache.http.client.HttpRequestRetryHandler)> ->_NONE_
<android.filterfw.core.SerializedFrame: java.lang.Object getObjectValue()> ->_NONE_
<android.widget.TabWidget: int getChildDrawingOrder(int,int)> ->_NONE_
<org.apache.http.impl.conn.tsccm.BasicPoolEntry: long getCreated()> ->_NONE_
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationIcon(java.lang.String)> ->_NONE_
<android.preference.SwitchPreference: java.lang.CharSequence getSwitchTextOn()> ->_NONE_
<android.webkit.WebSettingsClassic: boolean getLightTouchEnabled()> ->_NONE_
<android.opengl.Matrix: void setLookAtM(float[],int,float,float,float,float,float,float,float,float,float)> ->_NONE_
<android.telephony.SmsMessage: int getIndexOnIcc()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getAttributeNS(java.lang.String,java.lang.String)> ->_NONE_
<java.util.MissingResourceException: java.lang.String getKey()> ->_NONE_
<org.xml.sax.helpers.XMLFilterImpl: void setParent(org.xml.sax.XMLReader)> ->_NONE_
<android.database.sqlite.SQLiteDatabase: void setMaxSqlCacheSize(int)> ->_NONE_
<android.view.View: void sendAccessibilityHoverEvent(int)> ->_NONE_
<org.apache.commons.codec.net.QCodec: java.lang.String getDefaultCharset()> ->_NONE_
<org.apache.xpath.functions.FuncExtFunction: int getArgCount()> ->_NONE_
<java.security.Policy: java.security.PermissionCollection getPermissions(java.security.ProtectionDomain)> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Integer: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)> ->_NONE_
<android.media.SoundPool: int load(java.io.FileDescriptor,long,long,int)> ->_NONE_
<android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence)> ->_NONE_
<java.lang.reflect.Field: java.lang.String getName()> ->_NONE_
<android.os.AsyncTask: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])> ->_NONE_
<jp.co.omronsoft.openwnn.JAJP.OpenWnnEngineJAJP: void setPreferences(android.content.SharedPreferences)> ->_NONE_
<android.support.v4.app.FragmentActivity: android.support.v4.app.LoaderManager getSupportLoaderManager()> ->_NONE_
<java.io.FilterReader: int read()> ->_NONE_
<org.apache.harmony.security.asn1.BerOutputStream: void getSequenceLength(org.apache.harmony.security.asn1.ASN1Sequence)> ->_NONE_
<org.apache.xalan.transformer.TransformerIdentityImpl: javax.xml.transform.URIResolver getURIResolver()> ->_NONE_
<net.oauth.signature.PLAINTEXT: java.lang.String getSignature(java.lang.String)> ->_NONE_
<org.jivesoftware.smack.packet.Authentication: java.lang.String getUsername()> ->_NONE_
<android.view.KeyEvent: void setSource(int)> ->_NONE_
<java.security.cert.X509CertSelector: void setSubjectPublicKeyAlgID(java.lang.String)> ->_NONE_
<libcore.io.IoBridge: java.net.InetAddress getSocketLocalAddress(java.io.FileDescriptor)> ->_NONE_
<org.apache.http.entity.BufferedHttpEntity: void writeTo(java.io.OutputStream)> ->_NONE_
<java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService unconfigurableScheduledExecutorService(java.util.concurrent.ScheduledExecutorService)> ->_NONE_
<libcore.icu.RuleBasedCollatorICU: libcore.icu.CollationElementIteratorICU getCollationElementIterator(java.lang.String)> ->_NONE_
<android.net.sip.SipProfile: java.lang.String getUriString()> ->_NONE_
<android.view.textservice.SpellCheckerInfo: android.content.ComponentName getComponent()> ->_NONE_
<junit.runner.BaseTestRunner: int getPreference(java.lang.String,int)> ->_NONE_
<android.filterpacks.imageproc.ContrastFilter: android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: int getPacketBufferSize()> ->_NONE_
<org.jivesoftware.smack.ProtoBufAuthentication: long getServerClockSkew()> ->_NONE_
<java.util.concurrent.locks.AbstractQueuedSynchronizer: int getWaitQueueLength(java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)> ->_NONE_
<android.content.pm.PackageParser: java.lang.String buildCompoundName(java.lang.String,java.lang.CharSequence,java.lang.String,java.lang.String[])> ->_NONE_
<java.util.jar.JarFile: java.util.zip.ZipEntry getEntry(java.lang.String)> ->_NONE_
<org.apache.http.conn.params.ConnRouteParams: void setForcedRoute(org.apache.http.params.HttpParams,org.apache.http.conn.routing.HttpRoute)> ->_NONE_
<android.test.mock.MockContentProvider: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)> ->_NONE_
<android.view.Display: void getRealSize(android.graphics.Point)> ->_NONE_
<android.app.ListFragment: int getSelectedItemPosition()> ->_NONE_
<android.nfc.tech.NfcBarcode: android.nfc.tech.NfcBarcode get(android.nfc.Tag)> ->_NONE_
<android.filterfw.core.GLFrame: void setViewport(int,int,int,int)> ->_NONE_
<android.renderscript.Matrix4f: void load(android.renderscript.Matrix4f)> ->_NONE_
<android.os.Looper: void dump(android.util.Printer,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.address.TelephoneNumber: void setPhoneNumber(java.lang.String)> ->_NONE_
<java.security.cert.X509Certificate: java.util.Collection getIssuerAlternativeNames()> ->_NONE_
<org.apache.xpath.XPathContext: int getDTMHandleFromNode(org.w3c.dom.Node)> ->_NONE_
<android.net.wifi.p2p.WifiP2pManager: void deletePersistentGroup(android.net.wifi.p2p.WifiP2pManager$Channel,int,android.net.wifi.p2p.WifiP2pManager$ActionListener)> ->_NONE_
<android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction setTransitionStyle(int)> ->_NONE_
<android.os.Handler: boolean sendMessageAtTime(android.os.Message,long)> ->_NONE_
<gov.nist.javax.sip.header.ContentDisposition: java.lang.String getContentDisposition()> ->_NONE_
<android.webkit.WebViewCore: void contentScrollTo(int,int,boolean,boolean)> ->_NONE_
<android.telephony.gsm.GsmCellLocation: int getPsc()> ->_NONE_
<org.jivesoftware.smack.packet.Packet: java.lang.Object getProperty(java.lang.String)> ->_NONE_
<org.jivesoftware.smack.packet.Packet: long getRmqId()> ->_NONE_
<org.kxml2.io.KXmlSerializer: java.lang.Object getProperty(java.lang.String)> ->_NONE_
<android.webkit.AccessibilityInjectorFallback: void setCurrentAxis(int,boolean,java.lang.String)> ->_NONE_
<org.apache.xml.utils.UnImplNode: void setXmlEncoding(java.lang.String)> ->_NONE_
<org.apache.xpath.functions.SecuritySupport: long getLastModified(java.io.File)> ->_NONE_
<org.jivesoftware.smack.packet.DataMessage: org.jivesoftware.smack.packet.DataMessage$AppData getAppData(int)> ->_NONE_
<android.text.AndroidBidi: int bidi(int,char[],byte[],int,boolean)> ->_NONE_
<android.widget.VideoView: void setOnInfoListener(android.media.MediaPlayer$OnInfoListener)> ->_NONE_
<net.oauth.http.HttpMessageDecoder: int getStatusCode()> ->_NONE_
<org.apache.xalan.templates.ElemNumber: java.lang.String getCountString(org.apache.xalan.transformer.TransformerImpl,int)> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationHeader: void setChallenge(gov.nist.javax.sip.header.Challenge)> ->_NONE_
<org.apache.http.impl.client.BasicCookieStore: java.util.List getCookies()> ->_NONE_
<android.widget.CursorAdapter: android.database.Cursor getCursor()> ->_NONE_
<android.preference.TwoStatePreference: void setChecked(boolean)> ->_NONE_
<java.net.ServerSocket: void setReceiveBufferSize(int)> ->_NONE_
<android.widget.RemoteViews: void setUri(int,java.lang.String,android.net.Uri)> ->_NONE_
<android.content.pm.ApplicationInfo: void dump(android.util.Printer,java.lang.String)> ->_NONE_
<android.nfc.NfcAdapter: int getSdkVersion()> ->_NONE_
<gov.nist.javax.sip.header.Via: javax.sip.address.Hop getHop()> ->_NONE_
<android.view.ViewDebug: long getViewRootImplCount()> ->_NONE_
<android.view.MotionEvent: int getAction()> ->_NONE_
<android.net.http.HttpAuthHeader: java.lang.String getQop()> ->_NONE_
<java.lang.ClassLoader: java.lang.ClassLoader getParent()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getNextSibling(int)> ->_NONE_
<android.app.ActivityManagerProxy: int checkPermission(java.lang.String,int,int)> ->_NONE_
<android.content.IntentSender: android.os.UserHandle getCreatorUserHandle()> ->_NONE_
<android.view.Surface: android.os.IBinder getBuiltInDisplay(int)> ->_NONE_
<org.apache.harmony.security.PrivateKeyImpl: java.lang.String getAlgorithm()> ->_NONE_
<jp.co.omronsoft.openwnn.JAJP.OpenWnnEngineJAJP: jp.co.omronsoft.openwnn.WnnWord getCandidate(int)> ->_NONE_
<org.javia.arity.Symbol: org.javia.arity.Symbol setKey(java.lang.String,int)> ->_NONE_
<java.security.DigestOutputStream: void setMessageDigest(java.security.MessageDigest)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.HandshakeProtocol: void setRecordProtocol(org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol)> ->_NONE_
<android.widget.ExpandableListConnector: android.widget.ExpandableListAdapter getAdapter()> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: java.lang.String getFromTag()> ->_NONE_
<android.preference.Preference: void setEnabled(boolean)> ->_NONE_
<org.apache.xalan.templates.DecimalFormatProperties: void setPatternSeparator(char)> ->_NONE_
<org.apache.http.util.VersionInfo: java.lang.String getRelease()> ->_NONE_
<dalvik.system.profiler.HprofData: void setDepth(int)> ->_NONE_
<android.view.KeyEvent: long getEventTime()> ->_NONE_
<android.filterpacks.performance.Throughput: float getNanosPerPixel()> ->_NONE_
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: int getStatus()> ->_NONE_
<gov.nist.javax.sip.message.SIPResponse: java.lang.String getReasonPhrase(int)> ->_NONE_
<org.apache.xpath.compiler.XPathParser: void warn(java.lang.String,java.lang.Object[])> ->_NONE_
<android.text.style.RelativeSizeSpan: float getSizeChange()> ->_NONE_
<android.test.AndroidTestRunner: java.lang.String getTestClassName()> ->_NONE_
<android.text.DynamicLayout: int getEllipsisStart(int)> ->_NONE_
<android.view.View: int getSuggestedMinimumWidth()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setVisibleToUser(boolean)> ->_NONE_
<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT getName()> ->_NONE_
<org.jivesoftware.smack.packet.Packet: void setAccountId(long)> ->_NONE_
<android.app.TabActivity: android.widget.TabWidget getTabWidget()> ->_NONE_
<android.graphics.drawable.LayerDrawable: void setOpacity(int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: int getSoTimeout()> ->_NONE_
<org.apache.http.entity.ByteArrayEntity: java.io.InputStream getContent()> ->_NONE_
<java.nio.LongBuffer: java.nio.LongBuffer get(long[],int,int)> ->_NONE_
<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()> ->_NONE_
<org.xml.sax.ext.Locator2Impl: void setXMLVersion(java.lang.String)> ->_NONE_
<org.apache.xml.utils.SuballocatedIntVector: int[] getMap0()> ->_NONE_
<android.os.Handler: java.lang.String getMessageName(android.os.Message)> ->_NONE_
<org.jivesoftware.smack.SmackConfiguration: void setKeepAliveInterval(int)> ->_NONE_
<net.oauth.client.OAuthResponseMessage: java.lang.String getBodyEncoding()> ->_NONE_
<android.text.Layout: int getOffsetToRightOf(int)> ->_NONE_
<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()> ->_NONE_
<android.support.v4.view.ViewPager: int getPageMargin()> ->_NONE_
<org.xml.sax.helpers.XMLReaderAdapter: void setEntityResolver(org.xml.sax.EntityResolver)> ->_NONE_
<android.preference.Preference: int getLayoutResource()> ->_NONE_
<android.net.NetworkStats: long getElapsedRealtime()> ->_NONE_
<org.apache.harmony.xml.ExpatParser: void handleExternalEntity(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xpath.axes.AttributeIterator: int getAxis()> ->_NONE_
<android.app.Dialog: void setFeatureDrawableAlpha(int,int)> ->_NONE_
<android.animation.PropertyValuesHolder: void setupStartValue(java.lang.Object)> ->_NONE_
<org.kxml2.io.KXmlParser: boolean getFeature(java.lang.String)> ->_NONE_
<android.security.AndroidKeyStore: java.util.Date getModificationDate(java.lang.String)> ->_NONE_
<android.text.BoringLayout: int getEllipsisStart(int)> ->_NONE_
<org.ccil.cowan.tagsoup.AttributesImpl: void setAttributes(org.xml.sax.Attributes)> ->_NONE_
<android.text.method.MetaKeyKeyListener: int getMetaState(long,int)> ->_NONE_
<android.net.http.Headers: java.lang.String getContentType()> ->_NONE_
<android.app.admin.DevicePolicyManager: void setPasswordMinimumNumeric(android.content.ComponentName,int)> ->_NONE_
<java.lang.reflect.Constructor: java.lang.annotation.Annotation[][] getParameterAnnotations()> ->_NONE_
<org.apache.xml.serializer.ToHTMLStream: void processingInstruction(java.lang.String,java.lang.String)> ->_NONE_
<android.hardware.display.DisplayManagerGlobal: android.view.Display getRealDisplay(int)> ->_NONE_
<android.graphics.NinePatch: android.graphics.Region getTransparentRegion(android.graphics.Rect)> ->_NONE_
<org.apache.http.conn.routing.RouteTracker: void connectTarget(boolean)> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: java.lang.Object getContent(java.lang.Class[])> ->_NONE_
<org.apache.harmony.xml.dom.DocumentImpl: java.lang.String getTextContent()> ->_NONE_
<org.apache.http.message.HeaderGroup: org.apache.http.Header getLastHeader(java.lang.String)> ->_NONE_
<gov.nist.core.LogWriter: java.lang.String getLoggerName()> ->_NONE_
<android.renderscript.RSTextureView: void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)> ->_NONE_
<android.view.textservice.SuggestionsInfo: void setCookieAndSequence(int,int)> ->_NONE_
<android.os.Bundle: short[] getShortArray(java.lang.String)> ->_NONE_
<android.os.Debug: int getGlobalExternalFreedCount()> ->_NONE_
<android.filterfw.core.FrameFormat: int getDimensionCount()> ->_NONE_
<android.location.LocationRequest: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.hardware.usb.UsbDeviceConnection: byte[] getRawDescriptors()> ->_NONE_
<gov.nist.javax.sip.header.Challenge: void setAuthParams(gov.nist.core.NameValueList)> ->_NONE_
<android.app.ActivityManagerProxy: android.os.Debug$MemoryInfo[] getProcessMemoryInfo(int[])> ->_NONE_
<android.view.accessibility.AccessibilityRecord: void setRemovedCount(int)> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: int getHeaderFieldInt(java.lang.String,int)> ->_NONE_
<org.apache.http.auth.params.AuthParams: void setCredentialCharset(org.apache.http.params.HttpParams,java.lang.String)> ->_NONE_
<android.media.AudioTrack: int getPlaybackRate()> ->_NONE_
<android.os.storage.StorageVolume: int getStorageId()> ->_NONE_
<android.view.PointerIcon: android.view.PointerIcon getDefaultIcon(android.content.Context)> ->_NONE_
<android.filterfw.core.SimpleFrame: android.graphics.Bitmap getBitmap()> ->_NONE_
<android.widget.LinearLayout: void setShowDividers(int)> ->_NONE_
<android.webkit.PluginData: int getStatusCode()> ->_NONE_
<android.renderscript.Matrix2f: void loadScale(float,float)> ->_NONE_
<android.renderscript.Matrix2f: void load(android.renderscript.Matrix2f)> ->_NONE_
<net.oauth.signature.OAuthSignatureMethod: java.lang.String getSignature(net.oauth.OAuthMessage)> ->_NONE_
<android.widget.ListPopupWindow: void setHorizontalOffset(int)> ->_NONE_
<android.widget.PopupWindow: int getAnimationStyle()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.TransactionState getState()> ->_NONE_
<gov.nist.javax.sip.stack.TLSMessageChannel: java.lang.String getViaHost()> ->_NONE_
<android.net.BaseNetworkStateTracker: android.net.LinkCapabilities getLinkCapabilities()> ->_NONE_
<java.security.cert.CertPath: java.lang.String getType()> ->_NONE_
<android.app.BackStackRecord: android.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence)> ->_NONE_
<java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: int getColumnNumber()> ->_NONE_
<android.view.accessibility.AccessibilityEvent: int getRecordCount()> ->_NONE_
<gov.nist.javax.sip.header.SIPDate: java.lang.String getMonth()> ->_NONE_
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.Intent)> ->_NONE_
<java.io.InputStreamReader: java.lang.String getEncoding()> ->_NONE_
<android.view.FocusFinder: android.view.View getBackwardFocusable(android.view.ViewGroup,android.view.View,java.util.ArrayList,int)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setChecked(java.lang.Object,boolean)> ->_NONE_
<android.graphics.drawable.StateListDrawable: void setLayoutDirection(int)> ->_NONE_
<android.graphics.LargeBitmap: int getHeight()> ->_NONE_
<android.net.UrlQuerySanitizer: void setUnregisteredParameterValueSanitizer(android.net.UrlQuerySanitizer$ValueSanitizer)> ->_NONE_
<java.text.Collator: int getStrength()> ->_NONE_
<gov.nist.javax.sip.header.SIPETag: void setValue(java.lang.String)> ->_NONE_
<android.text.format.DateFormat: java.lang.String getYearString(java.util.Calendar,int)> ->_NONE_
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse: boolean parse()> ->_NONE_
<android.text.method.BaseMovementMethod: int getMovementMetaState(android.text.Spannable,android.view.KeyEvent)> ->_NONE_
<android.widget.QuickContactBadge: void setExcludeMimes(java.lang.String[])> ->_NONE_
<android.webkit.WebViewClassic: void setupPackageListener(android.content.Context)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: void setContentBuffer(org.apache.xml.utils.FastStringBuffer)> ->_NONE_
<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String[] getEnumNames()> ->_NONE_
<android.webkit.BrowserFrame: android.webkit.BrowserFrame createWindow(boolean,boolean)> ->_NONE_
<org.apache.xpath.patterns.ContextMatchStepPattern: org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xpath.patterns.StepPattern)> ->_NONE_
<javax.xml.transform.TransformerFactoryConfigurationError: java.lang.String getMessage()> ->_NONE_
<org.json.JSONArray: java.lang.Object get(int)> ->_NONE_
<org.apache.harmony.xml.dom.DOMConfigurationImpl: boolean canSetParameter(java.lang.String,java.lang.Object)> ->_NONE_
<org.apache.xpath.XPathContext: org.apache.xpath.axes.SubContextList getCurrentNodeList()> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Any: org.apache.harmony.security.asn1.ASN1Any getInstance()> ->_NONE_
<gov.nist.javax.sip.stack.ServerLog: java.lang.String getLogFileName()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: boolean getKeepAlive()> ->_NONE_
<gov.nist.javax.sip.header.SIPHeader: void setHeaderName(java.lang.String)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent()> ->_NONE_
<org.apache.xml.dtm.DTMException: void printStackTrace(java.io.PrintStream)> ->_NONE_
<android.preference.ListPreference: void setEntryValues(java.lang.CharSequence[])> ->_NONE_
<org.apache.xalan.xslt.SecuritySupport12: java.lang.ClassLoader getSystemClassLoader()> ->_NONE_
<android.webkit.ZoomManager: float getReadingLevelScale()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.HandshakeProtocol: int getRSAKeyLength(java.security.PublicKey)> ->_NONE_
<android.view.View: void setOnGenericMotionListener(android.view.View$OnGenericMotionListener)> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertImpl: java.util.Date getNotAfter()> ->_NONE_
<gov.nist.javax.sip.message.MessageFactoryImpl: void setTest(boolean)> ->_NONE_
<org.jivesoftware.smack.packet.Bind: java.lang.String getResource()> ->_NONE_
<org.apache.xml.serializer.utils.Messages: java.util.Locale getLocale()> ->_NONE_
<android.webkit.ZoomManager: void onFirstLayout(android.webkit.WebViewCore$DrawData)> ->_NONE_
<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)> ->_NONE_
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance()> ->_NONE_
<org.apache.xpath.axes.PredicatedNodeTest: boolean executePredicates(int,org.apache.xpath.XPathContext)> ->_NONE_
<android.app.AlertDialog: void setButton2(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)> ->_NONE_
<android.app.AlertDialog: void setButton3(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)> ->_NONE_
<android.content.pm.LabeledIntent: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)> ->_NONE_
<android.content.pm.ResolveInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.app.ActivityManager: int getLauncherLargeIconDensity()> ->_NONE_
<android.content.res.TypedArray: int getLayoutDimension(int,int)> ->_NONE_
<android.widget.ListPopupWindow: int getSelectedItemPosition()> ->_NONE_
<org.apache.xalan.templates.OutputProperties: void setQNameProperty(java.lang.String,org.apache.xml.utils.QName)> ->_NONE_
<org.apache.xpath.compiler.OpMap: org.apache.xml.utils.ObjectVector getTokenQueue()> ->_NONE_
<android.os.CommonClock: java.net.InetSocketAddress getMasterAddr()> ->_NONE_
<android.graphics.drawable.ScaleDrawable: float getPercent(android.content.res.TypedArray,int)> ->_NONE_
<android.webkit.WebSettingsClassic: void setMaximumDecodedImageSize(long)> ->_NONE_
<android.location.Location: void setAccuracy(float)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: java.lang.String getNamespaceURI(int)> ->_NONE_
<android.app.ActivityManagerProxy: boolean clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver,int)> ->_NONE_
<org.xml.sax.helpers.AttributesImpl: int getIndex(java.lang.String)> ->_NONE_
<android.view.inputmethod.CorrectionInfo: int getOffset()> ->_NONE_
<java.util.Vector: java.lang.Object set(int,java.lang.Object)> ->_NONE_
<org.apache.xpath.functions.FuncNamespace: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<org.apache.xalan.xslt.SecuritySupport12: boolean getFileExists(java.io.File)> ->_NONE_
<android.view.ViewConfiguration: int getDoubleTapSlop()> ->_NONE_
<android.media.audiofx.EnvironmentalReverb: short getRoomLevel()> ->_NONE_
<libcore.net.http.ResponseHeaders: java.lang.String getEtag()> ->_NONE_
<android.widget.Editor: android.widget.Editor$InsertionPointCursorController getInsertionController()> ->_NONE_
<android.preference.DialogPreference: int getDialogLayoutResource()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: void setEnableSessionCreation(boolean)> ->_NONE_
<org.apache.commons.io.output.ProxyWriter: void write(java.lang.String,int,int)> ->_NONE_
<java.text.DateFormatSymbols: void setZoneStrings(java.lang.String[][])> ->_NONE_
<android.app.ActivityGroup: android.app.Activity getCurrentActivity()> ->_NONE_
<android.media.MediaPlayer: void setVideoScalingMode(int)> ->_NONE_
<android.app.LauncherActivity: void setTitle(java.lang.CharSequence)> ->_NONE_
<org.apache.harmony.security.x509.Certificate: byte[] getSignatureValue()> ->_NONE_
<org.apache.james.mime4j.message.Multipart: java.lang.String getSubType()> ->_NONE_
<org.apache.xpath.axes.UnionPathIterator: void loadLocationPaths(org.apache.xpath.compiler.Compiler,int,int)> ->_NONE_
<android.filterfw.core.AsyncRunner: void setException(java.lang.Exception)> ->_NONE_
<org.apache.http.impl.io.IdentityInputStream: int read()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: int getServerTransactionTableSize()> ->_NONE_
<android.preference.GenericInflater: java.lang.String getDefaultPackage()> ->_NONE_
<org.apache.harmony.security.x509.NameConstraints: byte[] getEncoded()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: void setUseClientMode(boolean)> ->_NONE_
<android.widget.AdapterViewAnimator: int getNumActiveViews()> ->_NONE_
<org.jivesoftware.smack.packet.DataMessage: void setUserSerialNumber(long)> ->_NONE_
<javax.crypto.SecretKeyFactory: java.security.Provider getProvider()> ->_NONE_
<org.apache.xpath.operations.Operation: org.apache.xpath.Expression getLeftOperand()> ->_NONE_
<org.jivesoftware.smackx.provider.DiscoverInfoProvider: int getTag()> ->_NONE_
<android.app.ActivityManagerProxy: boolean refContentProvider(android.os.IBinder,int,int)> ->_NONE_
<net.oauth.OAuthProblemException: java.util.Map getParameters()> ->_NONE_
<org.apache.harmony.security.asn1.ASN1OctetString: org.apache.harmony.security.asn1.ASN1OctetString getInstance()> ->_NONE_
<android.renderscript.Matrix3f: void loadScale(float,float)> ->_NONE_
<org.apache.james.mime4j.util.SimpleTempStorage: org.apache.james.mime4j.util.TempPath getRootTempPath()> ->_NONE_
<android.webkit.WebViewDatabase: android.webkit.WebViewDatabase getInstance(android.content.Context)> ->_NONE_
<java.io.ObjectStreamField: void setOffset(int)> ->_NONE_
<android.media.audiofx.BassBoost: boolean getStrengthSupported()> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: java.lang.String getAvatarBase64Encoded()> ->_NONE_
<android.view.View: float getX()> ->_NONE_
<android.webkit.WebSettings: boolean getLoadsImagesAutomatically()> ->_NONE_
<android.view.View: float getY()> ->_NONE_
<net.oauth.SimpleOAuthValidator: void validateMessage(net.oauth.OAuthMessage,net.oauth.OAuthAccessor)> ->_NONE_
<org.apache.james.mime4j.message.MemoryBinaryBody: org.apache.james.mime4j.message.Entity getParent()> ->_NONE_
<java.lang.Thread: void setName(java.lang.String)> ->_NONE_
<org.apache.http.impl.client.EntityEnclosingRequestWrapper: org.apache.http.HttpEntity getEntity()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getFirstChild(int)> ->_NONE_
<android.text.Layout: float getLineExtent(int,android.text.Layout$TabStops,boolean)> ->_NONE_
<android.widget.AutoCompleteTextView: void setText(java.lang.CharSequence,boolean)> ->_NONE_
<android.webkit.BrowserFrame: void didReceiveAuthenticationChallenge(int,java.lang.String,java.lang.String,boolean,boolean)> ->_NONE_
<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()> ->_NONE_
<android.net.NetworkStats: java.lang.String[] getUniqueIfaces()> ->_NONE_
<org.apache.xml.utils.Context2: org.apache.xml.utils.Context2 getChild()> ->_NONE_
<android.graphics.drawable.Drawable: int getMinimumHeight()> ->_NONE_
<android.support.v4.app.FragmentManagerImpl: int getBackStackEntryCount()> ->_NONE_
<android.filterfw.core.VertexFrame: java.lang.Object getObjectValue()> ->_NONE_
<gov.nist.javax.sip.Utils: java.lang.String getQuotedString(java.lang.String)> ->_NONE_
<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadLogo(android.content.pm.PackageManager)> ->_NONE_
<android.app.ActivityManagerProxy: java.lang.String getPackageForToken(android.os.IBinder)> ->_NONE_
<android.database.sqlite.SQLiteDatabase: void setPageSize(long)> ->_NONE_
<android.location.GeocoderParams: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.service.dreams.DreamService: void setLowProfile(boolean)> ->_NONE_
<android.widget.DatePicker: int getYear()> ->_NONE_
<android.security.AndroidKeyPairGeneratorSpec: java.lang.String getKeystoreAlias()> ->_NONE_
<android.net.wifi.WifiWatchdogStateMachine: void updateCurrentBssid(java.lang.String)> ->_NONE_
<android.view.accessibility.AccessibilityEvent: void setMovementGranularity(int)> ->_NONE_
<android.media.RingtoneManager: android.database.Cursor getCursor()> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertFactoryImpl: java.security.cert.CRL getCRL(byte[])> ->_NONE_
<org.apache.xml.utils.UnImplNode: void setPrefix(java.lang.String)> ->_NONE_
<java.security.cert.CertificateFactory: java.security.Provider getProvider()> ->_NONE_
<java.io.LineNumberReader: void setLineNumber(int)> ->_NONE_
<android.text.Layout: java.lang.Object[] getParagraphSpans(android.text.Spanned,int,int,java.lang.Class)> ->_NONE_
<android.webkit.SelectActionModeCallback: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)> ->_NONE_
<android.text.style.ScaleXSpan: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<java.util.zip.ZipEntry: long getTime()> ->_NONE_
<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothDevice getRemoteDevice()> ->_NONE_
<gov.nist.javax.sip.address.NetObjectList: void setMyClass(java.lang.Class)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: java.lang.String getNamespaceURI(int)> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getEarlyDialogId()> ->_NONE_
<java.nio.DatagramChannelImpl: java.io.FileDescriptor getFD()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: void setEnableSessionCreation(boolean)> ->_NONE_
<android.text.format.Time: java.lang.String getCurrentTimezone()> ->_NONE_
<org.jivesoftware.smack.provider.RawXmlIQProvider: com.google.common.io.protocol.ProtoBufType getProtoBufType()> ->_NONE_
<android.media.audiofx.EnvironmentalReverb: short getDensity()> ->_NONE_
<org.jivesoftware.smack.packet.Packet: void setFrom(java.lang.String)> ->_NONE_
<java.security.KeyFactory: java.lang.String getAlgorithm()> ->_NONE_
<android.widget.ListPopupWindow: void setHeight(int)> ->_NONE_
<org.apache.harmony.xml.dom.InnerNodeImpl: org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)> ->_NONE_
<android.app.ActivityManagerProxy: boolean switchUser(int)> ->_NONE_
<android.os.Parcel: void writeSparseBooleanArray(android.util.SparseBooleanArray)> ->_NONE_
<org.apache.xpath.XPathContext: org.apache.xpath.SourceTreeManager getSourceTreeManager()> ->_NONE_
<org.apache.xpath.XPathException: void printStackTrace(java.io.PrintStream)> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationInfo: void setParameter(java.lang.String,java.lang.String)> ->_NONE_
<android.test.mock.MockResources: android.content.res.XmlResourceParser getXml(int)> ->_NONE_
<android.widget.ListPopupWindow: void setAnchorView(android.view.View)> ->_NONE_
<dalvik.system.DexFile: java.lang.Class loadClass(java.lang.String,java.lang.ClassLoader)> ->_NONE_
<javax.obex.ClientOperation: java.lang.String getEncoding()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setRemovedCount(int)> ->_NONE_
<java.util.Random: void setSeed(long)> ->_NONE_
<gov.nist.javax.sip.header.Contact: java.lang.String getTempGruuParam()> ->_NONE_
<android.view.WindowManagerGlobal: void dumpGfxInfo(java.io.FileDescriptor)> ->_NONE_
<java.util.Date: void setDate(int)> ->_NONE_
<org.apache.james.mime4j.MimeStreamParser: void setContentHandler(org.apache.james.mime4j.ContentHandler)> ->_NONE_
<gov.nist.javax.sip.header.MimeVersion: java.lang.String encodeBody()> ->_NONE_
<java.nio.NIOAccess: java.lang.Object getBaseArray(java.nio.Buffer)> ->_NONE_
<java.text.DecimalFormat: void setDecimalFormatSymbols(java.text.DecimalFormatSymbols)> ->_NONE_
<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)> ->_NONE_
<android.widget.SuggestionsAdapter: void setQueryRefinement(int)> ->_NONE_
<android.app.ActivityManagerProxy: int getUidForIntentSender(android.content.IIntentSender)> ->_NONE_
<android.support.v4.app.BackStackState: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.filterfw.core.FilterPort: java.lang.String getName()> ->_NONE_
<org.apache.commons.codec.net.URLCodec: java.lang.String encode(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.Via: int getPort()> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: java.lang.String getAddressFieldWork(java.lang.String)> ->_NONE_
<org.apache.http.impl.conn.LoggingSessionOutputBuffer: void writeLine(org.apache.http.util.CharArrayBuffer)> ->_NONE_
<android.webkit.WebViewClassic: void onConfigurationChanged(android.content.res.Configuration)> ->_NONE_
<android.database.sqlite.SQLiteStatement: void execute()> ->_NONE_
<android.media.audiofx.Equalizer: short getCurrentPreset()> ->_NONE_
<javax.crypto.Mac: int getMacLength()> ->_NONE_
<gov.nist.javax.sip.header.SIPHeader: java.lang.String getValue()> ->_NONE_
<org.jivesoftware.smack.packet.Registration: void setAttributes(java.util.Map)> ->_NONE_
<gov.nist.javax.sip.stack.MessageChannel: java.lang.String getKey(java.net.InetAddress,int,java.lang.String)> ->_NONE_
<android.text.Layout: int getLineEnd(int)> ->_NONE_
<libcore.io.BlockGuardOs: int pread(java.io.FileDescriptor,byte[],int,int,long)> ->_NONE_
<android.database.sqlite.SQLiteDatabase: void setLocale(java.util.Locale)> ->_NONE_
<android.os.Bundle: java.util.ArrayList getCharSequenceArrayList(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.parser.ContentEncodingParser: gov.nist.javax.sip.header.SIPHeader parse()> ->_NONE_
<gov.nist.javax.sip.header.ReplyTo: gov.nist.core.HostPort getHostPort()> ->_NONE_
<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: java.lang.String getDSLLocation()> ->_NONE_
<android.app.Activity: void setRequestedOrientation(int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.security.Principal getLocalPrincipal()> ->_NONE_
<org.apache.xalan.templates.StylesheetRoot: int getGlobalImportCount()> ->_NONE_
<android.text.format.DateUtils: long getNumberOfDaysPassed(long,long)> ->_NONE_
<javax.crypto.Cipher: java.security.Provider getProvider()> ->_NONE_
<java.util.Date: int getMonth()> ->_NONE_
<android.app.ActivityManagerProxy: void reportThumbnail(android.os.IBinder,android.graphics.Bitmap,java.lang.CharSequence)> ->_NONE_
<dalvik.system.BlockGuard: void setThreadPolicy(dalvik.system.BlockGuard$Policy)> ->_NONE_
<org.kxml2.io.KXmlParser: java.lang.String getPublicId()> ->_NONE_
<org.apache.xpath.axes.AttributeIterator: int getNextNode()> ->_NONE_
<android.widget.AbsListView: int getHeaderViewsCount()> ->_NONE_
<android.telephony.PhoneNumberUtils: int getFormatTypeForLocale(java.util.Locale)> ->_NONE_
<android.filterfw.core.FieldPort: void setFieldFrame(android.filterfw.core.Frame,boolean)> ->_NONE_
<android.webkit.WebSettingsClassic: void setHardwareAccelSkiaEnabled(boolean)> ->_NONE_
<android.view.animation.LayoutAnimationController: android.view.animation.Interpolator getInterpolator()> ->_NONE_
<android.animation.ValueAnimator: long getCurrentPlayTime()> ->_NONE_
<org.apache.xpath.compiler.Keywords: java.lang.Object getKeyWord(java.lang.String)> ->_NONE_
<android.view.View: int getAccessibilityWindowId()> ->_NONE_
<android.view.accessibility.AccessibilityManager: java.util.List getEnabledAccessibilityServiceList(int)> ->_NONE_
<gov.nist.javax.sip.header.Protocol: java.lang.String getProtocolName()> ->_NONE_
<android.nfc.tech.BasicTagTechnology: void close()> ->_NONE_
<gov.nist.javax.sip.stack.SIPClientTransaction: void setViaPort(int)> ->_NONE_
<android.webkit.WebSettingsClassic: int getUserAgent()> ->_NONE_
<android.app.SearchableInfo: java.lang.String getSuggestSelection()> ->_NONE_
<android.webkit.HTML5VideoViewProxy: void sendTimeupdate()> ->_NONE_
<org.apache.http.conn.scheme.Scheme: org.apache.http.conn.scheme.SocketFactory getSocketFactory()> ->_NONE_
<android.app.backup.BackupDataInputStream: java.lang.String getKey()> ->_NONE_
<android.test.mock.MockContentProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ->_NONE_
<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)> ->_NONE_
<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,java.lang.ClassLoader,boolean,boolean)> ->_NONE_
<android.graphics.drawable.AnimatedRotateDrawable: int getChangingConfigurations()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.security.Principal getPeerPrincipal()> ->_NONE_
<android.util.Base64: byte[] encode(byte[],int)> ->_NONE_
<android.graphics.Bitmap: int getDefaultDensity()> ->_NONE_
<gov.nist.javax.sip.header.extensions.Replaces: void setCallId(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: org.w3c.dom.NamedNodeMap getAttributes()> ->_NONE_
<android.util.Property: java.lang.String getName()> ->_NONE_
<android.app.SearchableInfo: int getLabelId()> ->_NONE_
<android.net.http.HttpResponseCache: int getNetworkCount()> ->_NONE_
<android.webkit.WebViewClassic: android.webkit.ViewManager getViewManager()> ->_NONE_
<android.widget.ExpandableListView: android.widget.ExpandableListAdapter getExpandableListAdapter()> ->_NONE_
<org.apache.harmony.xml.parsers.SAXParserFactoryImpl: void setFeature(java.lang.String,boolean)> ->_NONE_
<java.util.regex.Matcher: java.util.regex.Matcher appendReplacement(java.lang.StringBuffer,java.lang.String)> ->_NONE_
<android.net.UrlQuerySanitizer: java.util.Set getParameterSet()> ->_NONE_
<android.webkit.WebView: android.webkit.WebViewProvider getWebViewProvider()> ->_NONE_
<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTAttributeDef getAttributeDef(java.lang.String,java.lang.String)> ->_NONE_
<android.app.ContextImpl: void setWallpaper(java.io.InputStream)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: void replaceData(int,int,java.lang.String)> ->_NONE_
<org.jivesoftware.smack.XMPPConnection: long getDefaultAccountId()> ->_NONE_
<android.net.wifi.WifiInfo: java.lang.String getSSID()> ->_NONE_
<android.location.Criteria: void setBearingAccuracy(int)> ->_NONE_
<gov.nist.javax.sip.header.AddressParametersHeader: void setAddress(javax.sip.address.Address)> ->_NONE_
<android.widget.SearchView: int getPreferredWidth()> ->_NONE_
<junit.framework.TestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)> ->_NONE_
<android.webkit.URLUtil: int parseHex(byte)> ->_NONE_
<android.net.NetworkStatsHistory: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<java.util.logging.Handler: void setFormatter(java.util.logging.Formatter)> ->_NONE_
<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection)> ->_NONE_
<org.apache.xalan.templates.XUnresolvedVariable: int getType()> ->_NONE_
<android.os.CommonTimeConfig: byte getMasterElectionPriority()> ->_NONE_
<android.gesture.GestureStore: java.util.ArrayList getGestures(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: org.xml.sax.DTDHandler getDTDHandler()> ->_NONE_
<gov.nist.core.HostPort: int getPort()> ->_NONE_
<java.lang.reflect.Field: void setShort(java.lang.Object,short)> ->_NONE_
<java.security.spec.PKCS8EncodedKeySpec: java.lang.String getFormat()> ->_NONE_
<net.oauth.OAuthProblemException: java.lang.String getProblem()> ->_NONE_
<org.jivesoftware.smack.ConnectionConfiguration: java.lang.String getHost()> ->_NONE_
<android.util.AtomicFile: java.io.File getBaseFile()> ->_NONE_
<android.net.ConnectivityManager: void setNetworkPreference(int)> ->_NONE_
<libcore.net.http.HttpURLConnectionImpl: java.util.Map getRequestProperties()> ->_NONE_
<jp.co.omronsoft.openwnn.OpenWnnDictionaryImpl: jp.co.omronsoft.openwnn.WnnWord getNextWord()> ->_NONE_
<android.text.Layout: float getHorizontal(int,boolean,int)> ->_NONE_
<org.apache.xml.serializer.Encodings: org.apache.xml.serializer.EncodingInfo getEncodingInfo(java.lang.String)> ->_NONE_
<org.apache.xml.utils.URI: int getPort()> ->_NONE_
<android.webkit.WebViewClassic: void setFocusControllerActive(boolean)> ->_NONE_
<android.telephony.CellBroadcastMessage: android.content.ContentValues getContentValues()> ->_NONE_
<gov.nist.javax.sip.header.extensions.MinSE: void setValue(java.lang.String)> ->_NONE_
<org.ccil.cowan.tagsoup.XMLWriter: void emptyElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)> ->_NONE_
<java.lang.SecurityManager: void checkCreateClassLoader()> ->_NONE_
<java.security.AlgorithmParameterGenerator: java.security.AlgorithmParameterGenerator getInstance(java.lang.String,java.security.Provider)> ->_NONE_
<org.apache.james.mime4j.field.ContentTypeField: java.lang.String getMimeType(org.apache.james.mime4j.field.ContentTypeField,org.apache.james.mime4j.field.ContentTypeField)> ->_NONE_
<android.animation.ValueAnimator: long getStartDelay()> ->_NONE_
<org.apache.commons.io.input.NullReader: long getSize()> ->_NONE_
<org.jivesoftware.smackx.provider.DiscoverItemsProvider: com.google.common.io.protocol.ProtoBufType getProtoBufType()> ->_NONE_
<android.filterfw.core.SerializedFrame: android.graphics.Bitmap getBitmap()> ->_NONE_
<android.os.Handler: boolean sendMessage(android.os.Message)> ->_NONE_
<android.database.MatrixCursor: short getShort(int)> ->_NONE_
<android.graphics.Bitmap: int getGenerationId()> ->_NONE_
<android.location.Address: java.lang.String getPremises()> ->_NONE_
<android.filterfw.core.MutableFrameFormat: void setDimensionCount(int)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: void setCSeq(javax.sip.header.CSeqHeader)> ->_NONE_
<android.os.Parcel: void writeMap(java.util.Map)> ->_NONE_
<android.accounts.AccountManagerService: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes()> ->_NONE_
<org.jivesoftware.smack.XMPPConnection: void close()> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: void setPrefixes(org.xml.sax.helpers.NamespaceSupport)> ->_NONE_
<android.gesture.Gesture: int getStrokesCount()> ->_NONE_
<gov.nist.javax.sip.parser.PipelinedMsgParser: void setMessageListener(gov.nist.javax.sip.parser.SIPMessageListener)> ->_NONE_
<java.nio.DirectByteBuffer: void get(short[],int,int)> ->_NONE_
<android.net.wifi.WifiSsid: byte[] getOctets()> ->_NONE_
<android.graphics.drawable.NinePatchDrawable: void setAlpha(int)> ->_NONE_
<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFirstLine()> ->_NONE_
<org.apache.http.conn.routing.HttpRoute: int getHopCount()> ->_NONE_
<android.app.ResultInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<java.security.PrivilegedActionException: java.lang.Exception getException()> ->_NONE_
<android.widget.TextView: void setPaintFlags(int)> ->_NONE_
<android.media.MiniThumbFile: long getMagic(long)> ->_NONE_
<gov.nist.javax.sip.address.UserInfo: void setUser(java.lang.String)> ->_NONE_
<java.security.UnresolvedPermission: java.lang.String getUnresolvedType()> ->_NONE_
<gov.nist.core.NameValue: java.lang.Object getKey()> ->_NONE_
<android.inputmethodservice.IInputMethodSessionWrapper: android.view.inputmethod.InputMethodSession getInternalInputMethodSession()> ->_NONE_
<org.jivesoftware.smack.packet.BindAccountRequest: java.lang.String getUser()> ->_NONE_
<android.webkit.WebBackForwardListClassic: boolean getClearPending()> ->_NONE_
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setInterpolator(android.animation.TimeInterpolator)> ->_NONE_
<org.apache.harmony.xml.ExpatAttributes: java.lang.String getType(java.lang.String)> ->_NONE_
<android.test.InstrumentationTestCase: void runTestOnUiThread(java.lang.Runnable)> ->_NONE_
<org.apache.xalan.templates.ElemLiteralResult: org.w3c.dom.NamedNodeMap getAttributes()> ->_NONE_
<android.webkit.WebViewFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: long getLastModified()> ->_NONE_
<android.view.InputEvent: android.view.InputDevice getDevice()> ->_NONE_
<android.webkit.WebSettingsClassic: boolean getMediaPlaybackRequiresUserGesture()> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: java.util.ListIterator getHeaderNames()> ->_NONE_
<android.content.BroadcastReceiver: java.lang.String getResultData()> ->_NONE_
<org.jivesoftware.smackx.provider.SimpleVCardProvider: void log(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.address.SipUri: void setPort(int)> ->_NONE_
<android.app.Instrumentation: void sendKeyDownUpSync(int)> ->_NONE_
<android.filterfw.core.ShaderProgram: void setClearsOutput(boolean)> ->_NONE_
<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.String[] getAttributeNames()> ->_NONE_
<android.filterfw.core.Frame: void setObjectValue(java.lang.Object)> ->_NONE_
<android.webkit.WebViewClient: void onFormResubmission(android.webkit.WebView,android.os.Message,android.os.Message)> ->_NONE_
<android.os.Parcel: void writeCharSequenceArray(java.lang.CharSequence[])> ->_NONE_
<org.apache.xalan.templates.ElemLiteralResult: int getXSLToken()> ->_NONE_
<android.text.PackedIntVector: int getValue(int,int)> ->_NONE_
<android.content.pm.ResolveInfo: int getIconResource()> ->_NONE_
<android.widget.AutoCompleteTextView: void setValidator(android.widget.AutoCompleteTextView$Validator)> ->_NONE_
<android.support.v4.app.Fragment: java.lang.String getTag()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: java.net.InetAddress getPeerInetAddress()> ->_NONE_
<android.renderscript.BaseObj: int getID(android.renderscript.RenderScript)> ->_NONE_
<org.apache.james.mime4j.message.Multipart: java.lang.String getBoundary()> ->_NONE_
<android.app.ExpandableListActivity: android.widget.ExpandableListView getExpandableListView()> ->_NONE_
<android.os.Debug: int getThreadAllocSize()> ->_NONE_
<org.apache.commons.logging.LogConfigurationException: java.lang.Throwable getCause()> ->_NONE_
<org.apache.xml.dtm.SecuritySupport: java.io.FileInputStream getFileInputStream(java.io.File)> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getResponse()> ->_NONE_
<android.location.GeocoderParams: java.lang.String getClientPackage()> ->_NONE_
<org.javia.arity.Complex: org.javia.arity.Complex set(double,double)> ->_NONE_
<gov.nist.javax.sip.header.Organization: java.lang.String encodeBody()> ->_NONE_
<android.renderscript.FieldPacker: byte[] getData()> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: void setEndLocaterInfo(javax.xml.transform.SourceLocator)> ->_NONE_
<android.webkit.WebViewClassic: void loadUrl(java.lang.String,java.util.Map)> ->_NONE_
<javax.xml.parsers.SAXParser: void parse(java.io.InputStream,org.xml.sax.helpers.DefaultHandler,java.lang.String)> ->_NONE_
<android.view.MotionEvent: float getHistoricalTouchMajor(int)> ->_NONE_
<org.xml.sax.helpers.ParserAdapter: org.xml.sax.DTDHandler getDTDHandler()> ->_NONE_
<org.apache.harmony.security.x509.AuthorityKeyIdentifier: void dumpValue(java.lang.StringBuilder,java.lang.String)> ->_NONE_
<android.webkit.WebViewClassic: int getSelectionCoordinate(int,int,int)> ->_NONE_
<android.app.ActivityManagerProxy: void signalPersistentProcesses(int)> ->_NONE_
<gov.nist.javax.sip.header.Accept: void setMediaRange(gov.nist.javax.sip.header.MediaRange)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: boolean getDocumentAllDeclarationsProcessed()> ->_NONE_
<java.util.concurrent.atomic.AtomicLongArray: long getAndSet(int,long)> ->_NONE_
<android.webkit.JniUtil: java.lang.String getCacheDirectory()> ->_NONE_
<android.widget.ImageView: int getMaxHeight()> ->_NONE_
<android.content.SyncStorageEngine: int getCurrentDayLocked()> ->_NONE_
<java.net.ResponseSource: boolean requiresConnection()> ->_NONE_
<org.apache.http.impl.cookie.BrowserCompatSpec: int getVersion()> ->_NONE_
<android.widget.RemoteViewsAdapter: int getCount()> ->_NONE_
<android.filterfw.core.FilterGraph: android.filterfw.core.Filter getFilter(java.lang.String)> ->_NONE_
<org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)> ->_NONE_
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)> ->_NONE_
<android.preference.PreferenceManager: void setSharedPreferencesMode(int)> ->_NONE_
<java.util.zip.Inflater: void setInput(byte[],int,int)> ->_NONE_
<java.nio.MappedByteBufferAdapter: char getChar()> ->_NONE_
<android.net.DummyDataStateTracker: boolean reconnect()> ->_NONE_
<org.apache.xml.utils.res.XResources_cy: java.lang.Object[][] getContents()> ->_NONE_
<gov.nist.javax.sip.address.Authority: gov.nist.core.Host getHost()> ->_NONE_
<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.templates.Stylesheet getLastPoppedStylesheet()> ->_NONE_
<android.preference.RingtonePreference: void setShowSilent(boolean)> ->_NONE_
<android.test.mock.MockContext: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> ->_NONE_
<android.widget.ListView: android.graphics.drawable.Drawable getOverscrollHeader()> ->_NONE_
<org.apache.xpath.objects.XNull: java.lang.String getTypeString()> ->_NONE_
<android.app.admin.DevicePolicyManager: void setPasswordHistoryLength(android.content.ComponentName,int)> ->_NONE_
<org.apache.james.mime4j.field.MailboxField: org.apache.james.mime4j.field.address.parser.ParseException getParseException()> ->_NONE_
<android.animation.ValueAnimator: void setDurationScale(float)> ->_NONE_
<javax.crypto.SecretKeyFactory: java.lang.String getAlgorithm()> ->_NONE_
<android.telephony.CellSignalStrengthGsm: void log(java.lang.String)> ->_NONE_
<org.apache.http.impl.io.ChunkedOutputStream: void write(byte[],int,int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: long getLastAccessedTime()> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Set: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)> ->_NONE_
<android.text.format.DateFormat: java.text.DateFormat getDateFormatForSetting(android.content.Context,java.lang.String)> ->_NONE_
<android.telephony.SmsMessage: java.lang.String getMessageBody()> ->_NONE_
<java.net.DatagramSocket: void setTrafficClass(int)> ->_NONE_
<java.util.logging.LogRecord: java.lang.String getSourceClassName()> ->_NONE_
<android.mtp.MtpStorageInfo: long getMaxCapacity()> ->_NONE_
<android.widget.SlidingDrawer: void setOnDrawerCloseListener(android.widget.SlidingDrawer$OnDrawerCloseListener)> ->_NONE_
<android.support.v4.app.Fragment: java.lang.CharSequence getText(int)> ->_NONE_
<android.widget.PopupWindow: void update(android.view.View,int,int)> ->_NONE_
<org.apache.james.mime4j.field.datetime.parser.DateTimeParser: org.apache.james.mime4j.field.datetime.parser.Token getNextToken()> ->_NONE_
<android.test.InstrumentationTestRunner: android.test.AndroidTestRunner getAndroidTestRunner()> ->_NONE_
<android.support.v4.view.ViewCompat: int getLabelFor(android.view.View)> ->_NONE_
<gov.nist.javax.sip.message.SIPRequest: java.lang.String getSIPVersion()> ->_NONE_
<org.apache.xml.utils.SystemIDResolver: java.lang.String getAbsoluteURI(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: java.lang.String getDocumentBaseURI()> ->_NONE_
<org.apache.harmony.security.x509.InvalidityDate: java.util.Date getDate()> ->_NONE_
<java.net.DatagramSocket: boolean getBroadcast()> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address getRemoteTarget()> ->_NONE_
<org.jivesoftware.smack.util.Base64: byte[] decodeFromFile(java.lang.String)> ->_NONE_
<java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)> ->_NONE_
<java.lang.reflect.AccessibleObject: java.lang.annotation.Annotation[] getAnnotations()> ->_NONE_
<java.util.Locale: java.util.Locale[] getAvailableLocales()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getPreviousSibling(int)> ->_NONE_
<gov.nist.javax.sip.header.WWWAuthenticate: void setURI(javax.sip.address.URI)> ->_NONE_
<org.apache.xml.utils.res.XResources_de: java.lang.Object[][] getContents()> ->_NONE_
<android.webkit.WebSettings: void setJavaScriptCanOpenWindowsAutomatically(boolean)> ->_NONE_
<android.webkit.WebViewClassic: void updateDefaultZoomDensity(float)> ->_NONE_
<org.apache.xalan.processor.XSLTElementProcessor: void setElemDef(org.apache.xalan.processor.XSLTElementDef)> ->_NONE_
<javax.obex.ClientOperation: boolean sendRequest(int)> ->_NONE_
<java.lang.ClassLoader: void setClassAssertionStatus(java.lang.String,boolean)> ->_NONE_
<android.test.mock.MockCursor: int getPosition()> ->_NONE_
<android.view.View: android.view.DisplayList getHardwareLayerDisplayList(android.view.HardwareLayer)> ->_NONE_
<android.webkit.ClientCertRequestHandler: void setSslClientCertFromCtx(int,byte[][])> ->_NONE_
<android.net.wifi.WifiInfo: int getRssi()> ->_NONE_
<org.apache.xpath.objects.XStringForFSB: void getChars(int,int,char[],int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.ServerKeyExchange: void send(org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream)> ->_NONE_
<java.util.IllegalFormatPrecisionException: java.lang.String getMessage()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: void setSendUdpBufferSize(int)> ->_NONE_
<android.content.Intent: int getIntExtra(java.lang.String,int)> ->_NONE_
<android.content.CursorLoader: java.lang.String[] getSelectionArgs()> ->_NONE_
<android.app.ApplicationPackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int)> ->_NONE_
<java.security.SecureRandom: void setSeed(byte[])> ->_NONE_
<android.widget.DatePicker: boolean getCalendarViewShown()> ->_NONE_
<android.net.http.Headers: java.lang.String getContentDisposition()> ->_NONE_
<android.view.Window: void setAttributes(android.view.WindowManager$LayoutParams)> ->_NONE_
<android.graphics.Matrix: void setSkew(float,float)> ->_NONE_
<org.apache.xpath.functions.FuncLast: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<android.view.View: void getLocationInWindow(int[])> ->_NONE_
<android.support.v4.content.ModernAsyncTask: void onPostExecute(java.lang.Object)> ->_NONE_
<android.content.SyncStatusInfo: void setPeriodicSyncTime(int,long)> ->_NONE_
<org.apache.xml.serializer.ToStream: boolean addAttributeAlways(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: int getScrollY(java.lang.Object)> ->_NONE_
<org.apache.xpath.axes.FilterExprIterator: int getAnalysisBits()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: int getScrollX(java.lang.Object)> ->_NONE_
<android.content.pm.VerificationParams: void setInstallerUid(int)> ->_NONE_
<org.apache.xpath.functions.Function: void setArg(org.apache.xpath.Expression,int)> ->_NONE_
<android.app.Activity: void setTitle(java.lang.CharSequence)> ->_NONE_
<org.xml.sax.helpers.AttributesImpl: void setAttribute(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.webkit.WebSettings: java.lang.String getStandardFontFamily()> ->_NONE_
<android.renderscript.Matrix4f: void loadTranslate(float,float,float)> ->_NONE_
<gov.nist.javax.sip.message.SIPRequest: void setInviteTransaction(java.lang.Object)> ->_NONE_
<android.os.StrictMode: void setVmPolicy(android.os.StrictMode$VmPolicy)> ->_NONE_
<android.support.v13.app.FragmentPagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)> ->_NONE_
<android.graphics.ColorMatrix: float[] getArray()> ->_NONE_
<android.animation.PropertyValuesHolder: void setupSetter(java.lang.Class)> ->_NONE_
<android.webkit.CallbackProxy: boolean onJsConfirm(java.lang.String,java.lang.String)> ->_NONE_
<android.media.videoeditor.MediaItem: java.lang.String getFilename()> ->_NONE_
<org.apache.xalan.templates.Stylesheet: void setNonXslTopLevel(org.apache.xml.utils.QName,java.lang.Object)> ->_NONE_
<android.widget.Gallery: void setSpacing(int)> ->_NONE_
<java.util.jar.JarVerifier: void setManifest(java.util.jar.Manifest)> ->_NONE_
<android.app.admin.DevicePolicyManager: int setStorageEncryption(android.content.ComponentName,boolean)> ->_NONE_
<org.apache.xalan.transformer.TransformerHandlerImpl: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)> ->_NONE_
<android.app.ActivityManagerProxy: boolean dumpHeap(java.lang.String,int,boolean,java.lang.String,android.os.ParcelFileDescriptor)> ->_NONE_
<java.net.DatagramPacket: void setSocketAddress(java.net.SocketAddress)> ->_NONE_
<java.io.EmulatedFieldsForLoading: float get(java.lang.String,float)> ->_NONE_
<org.apache.harmony.security.x509.ExtendedKeyUsage: void dumpValue(java.lang.StringBuilder,java.lang.String)> ->_NONE_
<android.webkit.WebViewClassic: float getZoomOverviewScale()> ->_NONE_
<android.webkit.WebSettingsClassic: java.lang.String getProperty(java.lang.String)> ->_NONE_
<org.apache.commons.io.input.NullReader: long getPosition()> ->_NONE_
<android.net.SntpClient: long getRoundTripTime()> ->_NONE_
<java.nio.CharSequenceAdapter: char get()> ->_NONE_
<gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser: void parseQuotedString(gov.nist.javax.sip.header.ims.PVisitedNetworkID)> ->_NONE_
<android.database.AbstractWindowedCursor: int getType(int)> ->_NONE_
<java.util.zip.Deflater: int getAdler()> ->_NONE_
<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCache$ServiceInfo parseServiceInfo(android.content.pm.ResolveInfo)> ->_NONE_
<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()> ->_NONE_
<libcore.io.ForwardingOs: java.net.InetAddress getsockoptInAddr(java.io.FileDescriptor,int,int)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getData()> ->_NONE_
<android.widget.AbsListView: void setTranscriptMode(int)> ->_NONE_
<android.media.AudioService: void dumpRingerMode(java.io.PrintWriter)> ->_NONE_
<java.util.IllegalFormatFlagsException: java.lang.String getMessage()> ->_NONE_
<android.net.wifi.p2p.WifiP2pManager: void discoverServices(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ActionListener)> ->_NONE_
<android.view.View: int getLabelFor()> ->_NONE_
<org.apache.http.util.EntityUtils: java.lang.String getContentMimeType(org.apache.http.HttpEntity)> ->_NONE_
<gov.nist.javax.sip.header.AlertInfo: void setAlertInfo(javax.sip.address.URI)> ->_NONE_
<android.util.TimeUtils: java.util.ArrayList getTimeZonesWithUniqueOffsets(java.lang.String)> ->_NONE_
<android.view.ViewConfiguration: int getTouchSlop()> ->_NONE_
<android.graphics.drawable.ClipDrawable: void setAlpha(int)> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: void setEventHeader(javax.sip.header.EventHeader)> ->_NONE_
<android.graphics.Paint: int getTextWidths(java.lang.String,int,int,float[])> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: short getNodeType()> ->_NONE_
<android.view.inputmethod.BaseInputConnection: boolean setComposingRegion(int,int)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: java.lang.CharSequence getContentDescription()> ->_NONE_
<org.apache.xalan.transformer.TrAXFilter: void setErrorListener(javax.xml.transform.ErrorListener)> ->_NONE_
<android.app.ApplicationThreadProxy: void updateTimeZone()> ->_NONE_
<android.graphics.Bitmap: int getHeight()> ->_NONE_
<org.apache.http.params.HttpConnectionParamBean: void setSocketBufferSize(int)> ->_NONE_
<android.inputmethodservice.KeyboardView: int getKeyIndices(int,int,int[])> ->_NONE_
<android.content.CursorLoader: void onStopLoading()> ->_NONE_
<android.util.PrintStreamPrinter: void println(java.lang.String)> ->_NONE_
<java.util.logging.LogRecord: java.lang.String getSourceMethodName()> ->_NONE_
<java.security.cert.X509CertSelector: byte[] getAuthorityKeyIdentifier()> ->_NONE_
<android.telephony.CellInfoGsm: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.xml.utils.res.XResources_fr: java.lang.Object[][] getContents()> ->_NONE_
<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,org.xml.sax.ContentHandler)> ->_NONE_
<android.os.Debug: int setGlobalAllocationLimit(int)> ->_NONE_
<android.bluetooth.BluetoothSocket: java.io.InputStream getInputStream()> ->_NONE_
<android.app.ActivityManagerProxy: int startActivityWithConfig(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.content.res.Configuration,android.os.Bundle,int)> ->_NONE_
<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()> ->_NONE_
<org.jivesoftware.smack.XMPPConnection: java.lang.String getUser()> ->_NONE_
<android.widget.TextView: android.content.res.ColorStateList getTextColors(android.content.Context,android.content.res.TypedArray)> ->_NONE_
<org.apache.xpath.jaxp.XPathImpl: javax.xml.parsers.DocumentBuilder getParser()> ->_NONE_
<android.widget.RemoteViews: void setOnClickFillInIntent(int,android.content.Intent)> ->_NONE_
<java.io.PushbackReader: int read(char[],int,int)> ->_NONE_
<android.drm.DrmEvent: int getType()> ->_NONE_
<org.apache.xml.serializer.ToXMLStream: java.lang.String getXMLVersion()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: void setCertificate(java.lang.String)> ->_NONE_
<javax.net.ssl.SSLEngine: int getPeerPort()> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPServerTransaction getInviteTransaction()> ->_NONE_
<android.location.LocationRequest: android.location.LocationRequest setNumUpdates(int)> ->_NONE_
<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()> ->_NONE_
<android.os.Environment: java.io.File getExternalStorageAppCacheDirectory(java.lang.String)> ->_NONE_
<android.telephony.SignalStrength: int getEvdoAsuLevel()> ->_NONE_
<org.apache.xpath.XPathContext: int getIteratorRoot()> ->_NONE_
<junit.runner.BaseTestRunner: java.lang.String getFilteredTrace(java.lang.String)> ->_NONE_
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getDefaultActivityIcon()> ->_NONE_
<gov.nist.javax.sip.header.CSeq: java.lang.String encodeBody()> ->_NONE_
<org.jivesoftware.smack.XMPPConnection: void setUseProtoBuf(boolean)> ->_NONE_
<android.view.View: android.os.IBinder getApplicationWindowToken()> ->_NONE_
<android.widget.TableRow: android.view.View getVirtualChildAt(int)> ->_NONE_
<android.widget.ExpandableListView: void setOnGroupCollapseListener(android.widget.ExpandableListView$OnGroupCollapseListener)> ->_NONE_
<android.filterfw.core.FrameFormat: int getTarget()> ->_NONE_
<org.apache.xml.serializer.ToStream: void externalEntityDecl(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xml.utils.URI: java.lang.String getQueryString()> ->_NONE_
<android.app.ProgressDialog: void setMax(int)> ->_NONE_
<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType,boolean,int)> ->_NONE_
<android.location.LocationManager: boolean sendNiResponse(int,int)> ->_NONE_
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()> ->_NONE_
<org.apache.xalan.templates.ElemTextLiteral: char[] getChars()> ->_NONE_
<android.telephony.ServiceState: void setRoaming(boolean)> ->_NONE_
<java.security.spec.PKCS8EncodedKeySpec: byte[] getEncoded()> ->_NONE_
<org.apache.xml.utils.res.XResources_el: java.lang.Object[][] getContents()> ->_NONE_
<android.widget.TextView: android.text.method.MovementMethod getMovementMethod()> ->_NONE_
<gov.nist.javax.sip.header.ErrorInfo: javax.sip.address.URI getErrorInfo()> ->_NONE_
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script$KernelID getKernelIDDstOver()> ->_NONE_
<android.media.SoundPool: int load(android.content.Context,int,int)> ->_NONE_
<android.util.JsonReader: void setLenient(boolean)> ->_NONE_
<android.net.http.Headers: void setConnectionType(org.apache.http.util.CharArrayBuffer,int)> ->_NONE_
<org.apache.xml.utils.res.XResources_en: java.lang.Object[][] getContents()> ->_NONE_
<android.os.Parcel: void writeBooleanArray(boolean[])> ->_NONE_
<android.widget.AdapterView: boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)> ->_NONE_
<android.mtp.MtpDevice: int[] getStorageIds()> ->_NONE_
<org.apache.xml.serializer.ToHTMLStream: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)> ->_NONE_
<libcore.io.ForwardingOs: java.net.SocketAddress getsockname(java.io.FileDescriptor)> ->_NONE_
<org.apache.http.client.params.HttpClientParams: boolean isAuthenticating(org.apache.http.params.HttpParams)> ->_NONE_
<android.app.admin.DevicePolicyManager: int getPasswordMinimumNumeric(android.content.ComponentName,int)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: void setParameter(java.lang.String,java.lang.Object)> ->_NONE_
<gov.nist.javax.sip.header.Unsupported: java.lang.String getOptionTag()> ->_NONE_
<android.content.res.TypedArray: java.lang.String getString(int)> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Sequence: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)> ->_NONE_
<android.widget.DatePicker: void updateDate(int,int,int)> ->_NONE_
<java.text.DateFormat: java.util.Calendar getCalendar()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.CertificateRequest: int getType()> ->_NONE_
<android.widget.ExpandableListConnector: int getViewTypeCount()> ->_NONE_
<android.webkit.CookieManager: void setAcceptFileSchemeCookiesImpl(boolean)> ->_NONE_
<android.hardware.display.WifiDisplayStatus: int getActiveDisplayState()> ->_NONE_
<org.apache.xml.utils.res.XResources_es: java.lang.Object[][] getContents()> ->_NONE_
<jp.co.omronsoft.openwnn.JAJP.OpenWnnClauseConverterJAJP: java.util.ArrayList getAncillaryPattern(java.lang.String)> ->_NONE_
<java.lang.AbstractStringBuilder: java.lang.AbstractStringBuilder replace(int,int,java.lang.String)> ->_NONE_
<android.widget.CursorTreeAdapter: android.database.Cursor getGroup(int)> ->_NONE_
<org.apache.http.protocol.UriPatternMatcher: java.util.Map getObjects()> ->_NONE_
<android.mtp.MtpObjectInfo: int getStorageId()> ->_NONE_
<android.app.LoadedApk: android.content.pm.ApplicationInfo getApplicationInfo()> ->_NONE_
<javax.sip.TransactionTerminatedEvent: javax.sip.ClientTransaction getClientTransaction()> ->_NONE_
<android.net.http.Connection: org.apache.http.HttpHost getHost()> ->_NONE_
<gov.nist.javax.sip.stack.UDPMessageProcessor: java.lang.String getTransport()> ->_NONE_
<java.lang.reflect.Constructor: java.lang.String getName()> ->_NONE_
<android.media.EncoderCapabilities: java.util.List getAudioEncoders()> ->_NONE_
<android.net.nsd.DnsSdTxtRecord: byte[] getValue(java.lang.String)> ->_NONE_
<org.apache.james.mime4j.field.AddressListField: org.apache.james.mime4j.field.address.AddressList getAddressList()> ->_NONE_
<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction getCanceledInviteTransaction()> ->_NONE_
<android.security.Credentials: android.security.Credentials getInstance()> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: javax.xml.transform.SourceLocator getSourceLocatorFor(int)> ->_NONE_
<android.view.ScaleGestureDetector: long getEventTime()> ->_NONE_
<org.javia.arity.UnitTest: void main(java.lang.String[])> ->_NONE_
<org.apache.commons.io.output.LockableFileWriter: void write(java.lang.String,int,int)> ->_NONE_
<android.net.wifi.WifiStateMachine: void handleSuccessfulIpConfiguration(android.net.DhcpInfoInternal)> ->_NONE_
<android.mtp.MtpObjectInfo: int getImagePixHeight()> ->_NONE_
<android.text.format.DateFormat: java.text.DateFormat getTimeFormat(android.content.Context)> ->_NONE_
<gov.nist.core.NameValue: java.lang.StringBuffer encode(java.lang.StringBuffer)> ->_NONE_
<android.widget.ListPopupWindow: int getSoftInputMode()> ->_NONE_
<org.apache.commons.codec.binary.Hex: java.lang.Object decode(java.lang.Object)> ->_NONE_
<org.apache.http.message.AbstractHttpMessage: void setHeaders(org.apache.http.Header[])> ->_NONE_
<gov.nist.javax.sip.stack.MessageProcessor: int getDefaultPort(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: void setInclude(org.apache.xalan.templates.Stylesheet)> ->_NONE_
<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: void removeCachedAuthenticationHeaders(java.lang.String)> ->_NONE_
<android.graphics.drawable.ScaleDrawable: int getOpacity()> ->_NONE_
<android.app.Dialog: void setContentView(int)> ->_NONE_
<android.widget.Editor: long getCharRange(int)> ->_NONE_
<java.nio.SocketChannelImpl: boolean isConnectionPending()> ->_NONE_
<android.os.Debug: int getGlobalExternalAllocSize()> ->_NONE_
<android.app.ActivityOptions: android.os.IRemoteCallback getOnAnimationStartListener()> ->_NONE_
<android.view.MotionEvent: int getFlags()> ->_NONE_
<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])> ->_NONE_
<android.telephony.CellInfoGsm: void setCellSignalStrength(android.telephony.CellSignalStrengthGsm)> ->_NONE_
<android.media.AudioManager: void setParameters(java.lang.String)> ->_NONE_
<javax.obex.ClientOperation: int getResponseCode()> ->_NONE_
<org.apache.xml.utils.DOM2Helper: java.lang.String getNamespaceOfNode(org.w3c.dom.Node)> ->_NONE_
<android.text.method.BaseMovementMethod: int getInnerWidth(android.widget.TextView)> ->_NONE_
<org.apache.james.mime4j.codec.EncoderUtil: boolean hasToBeEncoded(java.lang.String,int)> ->_NONE_
<android.test.mock.MockPackageManager: void setComponentEnabledSetting(android.content.ComponentName,int,int)> ->_NONE_
<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getType(java.lang.String,java.lang.String)> ->_NONE_
<org.jivesoftware.smack.ServerTrustManager: java.lang.String getPeerIdentity(java.security.cert.X509Certificate)> ->_NONE_
<gov.nist.core.ParserCore: void dbg_leave(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.TimeStamp: void setTimeDelay(int)> ->_NONE_
<org.apache.harmony.security.x509.GeneralName: java.util.List getAsList()> ->_NONE_
<net.oauth.OAuthAccessor: java.lang.Object getProperty(java.lang.String)> ->_NONE_
<java.util.concurrent.FutureTask: void setException(java.lang.Throwable)> ->_NONE_
<org.apache.xml.dtm.ref.SecuritySupport: java.lang.String getSystemProperty(java.lang.String)> ->_NONE_
<android.filterfw.core.SerializedFrame: void setFloats(float[])> ->_NONE_
<android.nfc.tech.NfcBarcode: boolean isConnected()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: void setHostname(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.DTMException: javax.xml.transform.SourceLocator getLocator()> ->_NONE_
<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()> ->_NONE_
<android.view.GLES20RecordingCanvas: void setNextPoolable(android.view.GLES20RecordingCanvas)> ->_NONE_
<dalvik.system.profiler.BinaryHprofReader: java.lang.String readString()> ->_NONE_
<android.net.NetworkPolicyManager: int[] getUidsWithPolicy(int)> ->_NONE_
<org.apache.xpath.jaxp.XPathImpl: javax.xml.xpath.XPathVariableResolver getXPathVariableResolver()> ->_NONE_
<android.webkit.AutoCompletePopup: void setAutoFillQueryId(int)> ->_NONE_
<org.apache.harmony.xml.ExpatReader: java.lang.Object getProperty(java.lang.String)> ->_NONE_
<org.apache.xml.serializer.ElemDesc: void setAttr(java.lang.String,int)> ->_NONE_
<android.content.ContentProvider: void setPathPermissions(android.content.pm.PathPermission[])> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: void sendUrgentData(int)> ->_NONE_
<android.telephony.CellIdentityLte: int getPci()> ->_NONE_
<org.apache.commons.io.IOUtils: long copyLarge(java.io.InputStream,java.io.OutputStream)> ->_NONE_
<android.inputmethodservice.KeyboardView: java.lang.CharSequence getPreviewText(android.inputmethodservice.Keyboard$Key)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getStringValueChunkCount(int)> ->_NONE_
<org.apache.james.mime4j.message.TempFileTextBody: java.io.Reader getReader()> ->_NONE_
<android.test.mock.MockCursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: java.lang.String getPrefix(java.lang.String)> ->_NONE_
<android.view.MotionEvent: long getEventTimeNano()> ->_NONE_
<java.util.concurrent.ThreadPoolExecutor: int getCorePoolSize()> ->_NONE_
<gov.nist.javax.sip.SipStackImpl: java.lang.String getIPAddress()> ->_NONE_
<android.net.http.SslError: android.net.http.SslCertificate getCertificate()> ->_NONE_
<android.view.InputDevice: int getSources()> ->_NONE_
<org.apache.xalan.processor.TransformerFactoryImpl: java.lang.Object getAttribute(java.lang.String)> ->_NONE_
<android.emoji.EmojiFactory: int getAndroidPuaFromVendorSpecificPua(int)> ->_NONE_
<android.view.GLES20RenderLayer: void setTransform(android.graphics.Matrix)> ->_NONE_
<jp.co.omronsoft.openwnn.DefaultSoftKeyboard: jp.co.omronsoft.openwnn.Keyboard getModeChangeKeyboard(int)> ->_NONE_
<android.graphics.RectF: void printShortString(java.io.PrintWriter)> ->_NONE_
<java.security.spec.PSSParameterSpec: java.lang.String getDigestAlgorithm()> ->_NONE_
<android.telephony.TelephonyManager: java.util.List getAllCellInfo()> ->_NONE_
<org.apache.commons.codec.net.QuotedPrintableCodec: java.lang.String decode(java.lang.String)> ->_NONE_
<org.apache.harmony.security.x509.TBSCertificate: boolean[] getIssuerUniqueID()> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: java.lang.String getPrefix(java.lang.String,java.lang.String)> ->_NONE_
<android.webkit.HTML5VideoViewProxy: void handleMessage(android.os.Message)> ->_NONE_
<android.webkit.WebViewClassic: void setNetworkAvailable(boolean)> ->_NONE_
<android.os.Debug: int getGlobalAllocCount()> ->_NONE_
<org.apache.xml.utils.res.XResources_he: java.lang.Object[][] getContents()> ->_NONE_
<android.speech.srec.WaveHeader: android.speech.srec.WaveHeader setNumBytes(int)> ->_NONE_
<java.net.URLConnection: void setFileNameMap(java.net.FileNameMap)> ->_NONE_
<org.apache.xml.serializer.utils.WrappedRuntimeException: java.lang.Exception getException()> ->_NONE_
<android.net.LinkProperties: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.xml.sax.helpers.ParserAdapter: void setProperty(java.lang.String,java.lang.Object)> ->_NONE_
<android.animation.PropertyValuesHolder: void setPropertyName(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.StylesheetRoot: void setSource_location(boolean)> ->_NONE_
<android.app.ActivityThread: android.content.Intent getIntentBeingBroadcast()> ->_NONE_
<org.apache.xalan.templates.ElemWithParam: org.apache.xml.utils.QName getName()> ->_NONE_
<org.apache.http.entity.ByteArrayEntity: long getContentLength()> ->_NONE_
<android.media.videoeditor.Effect: android.media.videoeditor.MediaItem getMediaItem()> ->_NONE_
<java.net.DatagramSocketImpl: void connect(java.net.InetAddress,int)> ->_NONE_
<android.graphics.Paint: int getTextWidths(java.lang.String,float[])> ->_NONE_
<java.util.zip.CheckedOutputStream: java.util.zip.Checksum getChecksum()> ->_NONE_
<android.webkit.WebSettings: int getUserAgent()> ->_NONE_
<android.widget.ListPopupWindow: android.graphics.drawable.Drawable getBackground()> ->_NONE_
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)> ->_NONE_
<java.lang.HexStringParser: double parseDouble(java.lang.String)> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RedirectHandler getRedirectHandler()> ->_NONE_
<android.test.mock.MockContext: java.lang.String getPackageName()> ->_NONE_
<android.content.ContextWrapper: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> ->_NONE_
<android.view.textservice.TextInfo: java.lang.String getText()> ->_NONE_
<android.net.wifi.p2p.WifiP2pManager: void setServiceResponseListener(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ServiceResponseListener)> ->_NONE_
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> ->_NONE_
<gov.nist.javax.sip.SipStackImpl: java.util.Iterator getListeningPoints()> ->_NONE_
<java.beans.PropertyChangeEvent: void setPropagationId(java.lang.Object)> ->_NONE_
<android.os.Debug: int getGlobalGcInvocationCount()> ->_NONE_
<org.apache.harmony.xml.parsers.DocumentBuilderImpl: void setIgnoreComments(boolean)> ->_NONE_
<android.net.http.Headers: void setContentType(java.lang.String)> ->_NONE_
<org.jivesoftware.smack.packet.Message: boolean getIsIncoming()> ->_NONE_
<android.os.Bundle: char getChar(java.lang.String,char)> ->_NONE_
<android.view.MotionEvent: float getToolMinor(int)> ->_NONE_
<java.security.spec.ECPublicKeySpec: java.security.spec.ECPoint getW()> ->_NONE_
<org.apache.xalan.templates.ElemNumber: java.text.DecimalFormat getNumberFormatter(org.apache.xalan.transformer.TransformerImpl,int)> ->_NONE_
<gov.nist.javax.sip.stack.TLSMessageProcessor: int getMaximumMessageSize()> ->_NONE_
<android.widget.ScrollBarDrawable: void setAlwaysDrawHorizontalTrack(boolean)> ->_NONE_
<org.apache.http.message.ParserCursor: int getUpperBound()> ->_NONE_
<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()> ->_NONE_
<org.apache.xalan.templates.ElemCallTemplate: void setName(org.apache.xml.utils.QName)> ->_NONE_
<android.graphics.drawable.NinePatchDrawable: int getMinimumHeight()> ->_NONE_
<android.text.Layout: int getLineForVertical(int)> ->_NONE_
<android.net.rtp.AudioStream: void setCodec(android.net.rtp.AudioCodec)> ->_NONE_
<android.app.admin.DevicePolicyManager: int getPasswordMinimumNonLetter(android.content.ComponentName,int)> ->_NONE_
<org.apache.xalan.extensions.ExtensionsTable: org.apache.xalan.extensions.ExtensionHandler get(java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.ClientKeyExchange: void send(org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream)> ->_NONE_
<android.media.RingtoneManager: void setIncludeDrm(boolean)> ->_NONE_
<android.bluetooth.BluetoothSocket: boolean isConnected()> ->_NONE_
<org.apache.harmony.security.x509.EDIPartyName: byte[] getEncoded()> ->_NONE_
<android.media.videoeditor.Transition: int getBehavior()> ->_NONE_
<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.Node renameNode(org.w3c.dom.Node,java.lang.String,java.lang.String)> ->_NONE_
<org.jivesoftware.smack.util.PacketParserUtils: org.jivesoftware.smack.packet.PacketExtension parsePacketExtension(java.lang.String,java.lang.String,org.xmlpull.v1.XmlPullParser,byte[])> ->_NONE_
<net.oauth.signature.RSA_SHA1: java.security.PrivateKey getPrivateKeyFromPem(java.lang.String)> ->_NONE_
<org.apache.http.client.params.ClientParamBean: void setConnectionManagerFactory(org.apache.http.conn.ClientConnectionManagerFactory)> ->_NONE_
<android.widget.ListPopupWindow: int getInputMethodMode()> ->_NONE_
<android.database.sqlite.SQLiteConnection: void setLocaleFromConfiguration()> ->_NONE_
<dalvik.system.profiler.BinaryHprofWriter: void writeStopThread(dalvik.system.profiler.HprofData$ThreadEvent)> ->_NONE_
<dalvik.system.VMDebug: int setAllocationLimit(int)> ->_NONE_
<android.media.AudioService: int getValueForVibrateSetting(int,int,int)> ->_NONE_
<java.lang.ExceptionInInitializerError: java.lang.Throwable getException()> ->_NONE_
<gov.nist.javax.sip.stack.SIPClientTransaction: javax.sip.Dialog getDialog()> ->_NONE_
<gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.message.Request createRequest(java.lang.String)> ->_NONE_
<javax.net.ssl.DistinguishedNameParser: int getByte(int)> ->_NONE_
<org.apache.xalan.templates.ElemCopy: java.lang.String getNodeName()> ->_NONE_
<android.webkit.WebViewClassic: void setBaseLayer(int,boolean,boolean)> ->_NONE_
<android.content.SyncStorageEngine: android.content.SyncStorageEngine getSingleton()> ->_NONE_
<android.nfc.NfcAdapter: void setBeamPushUrisCallback(android.nfc.NfcAdapter$CreateBeamUrisCallback,android.app.Activity)> ->_NONE_
<libcore.io.Streams: int copy(java.io.InputStream,java.io.OutputStream)> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Time: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> ->_NONE_
<org.apache.james.mime4j.field.Field: java.lang.String getBody()> ->_NONE_
<android.app.Service: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> ->_NONE_
<android.net.http.AndroidHttpClientConnection: void setSocketTimeout(int)> ->_NONE_
<android.webkit.WebChromeClient: void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater)> ->_NONE_
<android.widget.CursorTreeAdapter: android.widget.FilterQueryProvider getFilterQueryProvider()> ->_NONE_
<android.gesture.GestureStore: void load(java.io.InputStream)> ->_NONE_
<javax.obex.PrivateOutputStream: void write(byte[])> ->_NONE_
<android.graphics.drawable.StateListDrawable: android.graphics.drawable.Drawable getStateDrawable(int)> ->_NONE_
<javax.crypto.ExemptionMechanism: java.security.Provider getProvider()> ->_NONE_
<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)> ->_NONE_
<java.security.Provider: java.lang.Object get(java.lang.Object)> ->_NONE_
<android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View)> ->_NONE_
<org.jivesoftware.smackx.ServiceDiscoveryManager: org.jivesoftware.smackx.packet.DiscoverInfo discoverInfo(java.lang.String,java.lang.String)> ->_NONE_
<java.io.RandomAccessFile: float readFloat()> ->_NONE_
<android.media.effect.FilterEffect: java.lang.String getName()> ->_NONE_
<gov.nist.javax.sip.stack.UDPMessageChannel: void sendMessage(gov.nist.javax.sip.message.SIPMessage)> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: void setContentHandler(org.xml.sax.ContentHandler)> ->_NONE_
<android.database.sqlite.SQLiteGlobal: java.lang.String getWALSyncMode()> ->_NONE_
<org.apache.xml.serializer.ToStream: void cdata(char[],int,int)> ->_NONE_
<org.apache.harmony.xml.parsers.DocumentBuilderImpl: void setErrorHandler(org.xml.sax.ErrorHandler)> ->_NONE_
<java.net.DatagramPacket: int getLength()> ->_NONE_
<android.app.ActivityManagerProxy: android.content.pm.UserInfo getCurrentUser()> ->_NONE_
<gov.nist.javax.sip.header.ims.PChargingVector: java.lang.String getTerminatingIOI()> ->_NONE_
<android.content.res.ColorStateList: int getColorForState(int[],int)> ->_NONE_
<org.apache.xml.dtm.ref.DTMManagerDefault: org.xml.sax.XMLReader getXMLReader(javax.xml.transform.Source)> ->_NONE_
<org.apache.http.entity.AbstractHttpEntity: void setChunked(boolean)> ->_NONE_
<org.apache.xml.utils.FastStringBuffer: int sendNormalizedSAXcharacters(char[],int,int,org.xml.sax.ContentHandler,int)> ->_NONE_
<android.webkit.ZoomManager: float getDefaultMinZoomScale()> ->_NONE_
<java.io.DataInputStream: java.lang.String readLine()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: int getPort()> ->_NONE_
<android.support.v4.app.NavUtils: java.lang.String getParentActivityName(android.app.Activity)> ->_NONE_
<android.view.MotionEvent: float getHistoricalToolMajor(int,int)> ->_NONE_
<android.filterfw.core.FrameFormat: int getBaseType()> ->_NONE_
<android.graphics.Point: void set(int,int)> ->_NONE_
<org.apache.commons.io.IOUtils: void write(java.lang.StringBuffer,java.io.Writer)> ->_NONE_
<android.widget.RemoteViews: void setLong(int,java.lang.String,long)> ->_NONE_
<gov.nist.javax.sip.header.AllowEvents: void setEventType(java.lang.String)> ->_NONE_
<org.apache.http.cookie.CookieSpecRegistry: void setItems(java.util.Map)> ->_NONE_
<android.view.accessibility.AccessibilityRecord: int getToIndex()> ->_NONE_
<org.apache.http.impl.cookie.NetscapeDraftSpec: int getVersion()> ->_NONE_
<android.widget.PopupWindow: void setWidth(int)> ->_NONE_
<gov.nist.javax.sip.header.SubscriptionState: void setRetryAfter(int)> ->_NONE_
<gov.nist.javax.sip.header.Via: void setComment(java.lang.String)> ->_NONE_
<android.view.inputmethod.BaseInputConnection: void setComposingSpans(android.text.Spannable)> ->_NONE_
<java.net.DatagramPacket: java.net.InetAddress getAddress()> ->_NONE_
<android.media.videoeditor.MediaArtistNativeHelper: int getFrameRate(int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.lang.String getCipherSuite()> ->_NONE_
<java.nio.MappedByteBufferAdapter: short getShort(int)> ->_NONE_
<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getG()> ->_NONE_
<android.graphics.NinePatch: int getDensity()> ->_NONE_
<android.bluetooth.BluetoothHealth: boolean connectChannelToSource(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)> ->_NONE_
<org.apache.harmony.xml.dom.DOMErrorImpl: org.w3c.dom.DOMLocator getLocation()> ->_NONE_
<android.text.Layout: float getLineMax(int)> ->_NONE_
<javax.crypto.spec.DHParameterSpec: int getL()> ->_NONE_
<org.apache.xml.utils.TreeWalker: void setContentHandler(org.xml.sax.ContentHandler)> ->_NONE_
<org.apache.xml.serializer.SecuritySupport12: java.lang.ClassLoader getContextClassLoader()> ->_NONE_
<android.support.v4.content.LocalBroadcastManager: android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context)> ->_NONE_
<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getP()> ->_NONE_
<android.test.suitebuilder.TestGrouping: java.util.List getTestMethods(java.lang.Class)> ->_NONE_
<android.filterpacks.imageproc.GrainFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)> ->_NONE_
<android.speech.srec.WaveHeader: short getBitsPerSample()> ->_NONE_
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: java.util.Collection getSharedQueuedThreads()> ->_NONE_
<libcore.net.http.RawHeaders: void set(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xml.serializer.dom3.DOM3SerializerImpl: void setNewLine(char[])> ->_NONE_
<gov.nist.javax.sip.message.SIPRequest: java.lang.String encodeMessage()> ->_NONE_
<android.app.ActivityThread: java.lang.String getProcessName()> ->_NONE_
<android.widget.Switch: android.graphics.drawable.Drawable getThumbDrawable()> ->_NONE_
<android.net.http.HttpAuthHeader: java.lang.String getAlgorithm()> ->_NONE_
<org.apache.xpath.axes.LocPathIterator: void setCurrentContextNode(int)> ->_NONE_
<org.apache.xpath.NodeSetDTM: int getCurrentNode()> ->_NONE_
<org.apache.xalan.templates.KeyDeclaration: org.apache.xpath.XPath getMatch()> ->_NONE_
<java.util.zip.Deflater: void setLevel(int)> ->_NONE_
<android.webkit.WebViewCore: void updateTextSizeAndScroll(int,int,int,int,int)> ->_NONE_
<android.webkit.CallbackProxy: void setWebChromeClient(android.webkit.WebChromeClient)> ->_NONE_
<android.media.videoeditor.MediaImageItem: int getAspectRatio()> ->_NONE_
<java.net.HttpCookie: void setDomain(java.lang.String)> ->_NONE_
<android.net.RouteInfo: java.net.InetAddress getGateway()> ->_NONE_
<java.util.concurrent.atomic.AtomicLongFieldUpdater: long getAndDecrement(java.lang.Object)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketFactoryImpl: java.lang.String[] getDefaultCipherSuites()> ->_NONE_
<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseFieldTypeSignature()> ->_NONE_
<android.opengl.GLLogWrapper: java.lang.String getLightModelPName(int)> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: void setInstanceFollowRedirects(boolean)> ->_NONE_
<org.apache.http.impl.SocketHttpServerConnection: int getLocalPort()> ->_NONE_
<android.hardware.input.InputManager: android.hardware.input.KeyboardLayout getKeyboardLayout(java.lang.String)> ->_NONE_
<android.view.Display: void getMetrics(android.util.DisplayMetrics)> ->_NONE_
<android.test.RenamingDelegatingContext: java.io.File getCacheDir()> ->_NONE_
<org.jivesoftware.smack.ConnectionConfiguration: void setTruststoreType(java.lang.String)> ->_NONE_
<android.net.wifi.WifiSsid: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.xml.utils.res.XResources_it: java.lang.Object[][] getContents()> ->_NONE_
<org.apache.commons.codec.net.URLCodec: java.lang.String getEncoding()> ->_NONE_
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.StylesheetRoot getStylesheetRoot()> ->_NONE_
<org.apache.xpath.functions.SecuritySupport: org.apache.xpath.functions.SecuritySupport getInstance()> ->_NONE_
<java.util.concurrent.ConcurrentSkipListMap: java.util.AbstractMap$SimpleImmutableEntry getNear(java.lang.Object,int)> ->_NONE_
<android.support.v4.app.LoaderManagerImpl: android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSignature: void engineUpdate(byte[],int,int)> ->_NONE_
<org.apache.http.entity.InputStreamEntity: void writeTo(java.io.OutputStream)> ->_NONE_
<android.view.GLES20Canvas: int setupModifiers(android.graphics.Paint,int)> ->_NONE_
<android.database.AbstractCursor: byte[] getBlob(int)> ->_NONE_
<gov.nist.javax.sip.stack.ServerLog: void setTraceLevel(int)> ->_NONE_
<org.kxml2.io.KXmlParser: void readEntity(java.lang.StringBuilder,boolean,boolean,org.kxml2.io.KXmlParser$ValueContext)> ->_NONE_
<android.net.ConnectivityManager: void setBackgroundDataSetting(boolean)> ->_NONE_
<org.apache.commons.codec.net.QCodec: java.lang.String getEncoding()> ->_NONE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.WWWAuthenticateHeader createWWWAuthenticateHeader(java.lang.String)> ->_NONE_
<android.widget.Spinner: void setEnabled(boolean)> ->_NONE_
<java.util.concurrent.atomic.AtomicInteger: int getAndSet(int)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: java.lang.String getPrefix(int)> ->_NONE_
<android.net.TrafficStats: long getMobileTxBytes()> ->_NONE_
<org.apache.commons.io.output.ProxyOutputStream: void write(byte[])> ->_NONE_
<org.apache.http.impl.io.AbstractSessionOutputBuffer: void write(byte[])> ->_NONE_
<java.nio.FileChannelImpl: java.nio.channels.FileChannel truncate(long)> ->_NONE_
<android.content.ContentProvider: android.content.IContentProvider getIContentProvider()> ->_NONE_
<android.preference.ListPreference: int getValueIndex()> ->_NONE_
<org.apache.http.entity.AbstractHttpEntity: void setContentEncoding(org.apache.http.Header)> ->_NONE_
<android.inputmethodservice.InputMethodService: int getBackDisposition()> ->_NONE_
<android.mtp.MtpPropertyList: void setResult(int)> ->_NONE_
<org.jivesoftware.smack.packet.Message: long getTimestamp()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: int getParent(int)> ->_NONE_
<java.io.OutputStreamWriter: void write(char[],int,int)> ->_NONE_
<android.os.Binder: android.os.UserHandle getCallingUserHandle()> ->_NONE_
<android.telephony.TelephonyManager: int getLteOnCdmaModeStatic()> ->_NONE_
<org.apache.commons.codec.net.BCodec: java.lang.Object decode(java.lang.Object)> ->_NONE_
<org.apache.xpath.compiler.Compiler: long getNextMethodId()> ->_NONE_
<android.nfc.tech.NfcF: byte[] getManufacturer()> ->_NONE_
<android.text.BoringLayout: int getHeight()> ->_NONE_
<java.util.Vector: void setSize(int)> ->_NONE_
<android.view.animation.Animation: boolean getFillBefore()> ->_NONE_
<android.widget.TextView: float getRightFadingEdgeStrength()> ->_NONE_
<android.test.mock.MockContext: android.content.res.Resources getResources()> ->_NONE_
<org.apache.harmony.xml.ExpatReader: void setNamespaceProcessingEnabled(boolean)> ->_NONE_
<android.app.ActivityThread: android.content.res.Configuration getConfiguration()> ->_NONE_
<org.apache.harmony.security.asn1.ASN1TypeCollection: void getValues(java.lang.Object,java.lang.Object[])> ->_NONE_
<android.widget.ExpandableListView: int getAbsoluteFlatPosition(int)> ->_NONE_
<android.os.NullVibrator: android.os.NullVibrator getInstance()> ->_NONE_
<android.animation.ValueAnimator: void setFloatValues(float[])> ->_NONE_
<java.util.ResourceBundle: void setParent(java.util.ResourceBundle)> ->_NONE_
<org.apache.james.mime4j.field.ContentTypeField: java.lang.String getMimeType()> ->_NONE_
<org.apache.xalan.processor.ProcessorInclude: java.lang.String getHref()> ->_NONE_
<org.apache.xalan.templates.DecimalFormatProperties: char getPercent()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: java.lang.String getPkeyAlias()> ->_NONE_
<org.apache.xpath.axes.NodeSequence: void runTo(int)> ->_NONE_
<android.app.Instrumentation: android.content.Context getContext()> ->_NONE_
<org.apache.xalan.templates.StylesheetRoot: java.util.Hashtable getAvailableElements()> ->_NONE_
<android.view.accessibility.AccessibilityRecord: void setToIndex(int)> ->_NONE_
<android.filterfw.core.ShaderProgram: void setAttributeValues(java.lang.String,android.filterfw.core.VertexFrame,int,int,int,int,boolean)> ->_NONE_
<org.apache.james.mime4j.field.address.parser.AddressListParser: void main(java.lang.String[])> ->_NONE_
<android.view.inputmethod.InputMethodInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)> ->_NONE_
<gov.nist.javax.sip.message.SIPRequest: void setRequestURI(javax.sip.address.URI)> ->_NONE_
<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()> ->_NONE_
<org.apache.xalan.templates.ElemExtensionCall: void execute(org.apache.xalan.transformer.TransformerImpl)> ->_NONE_
<android.webkit.WebViewClassic: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)> ->_NONE_
<android.widget.TextView: android.text.Layout$Alignment getLayoutAlignment()> ->_NONE_
<android.net.ConnectivityManager: int getLastTetherError(java.lang.String)> ->_NONE_
<android.appwidget.AppWidgetHostView: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo()> ->_NONE_
<java.util.Collections: boolean replaceAll(java.util.List,java.lang.Object,java.lang.Object)> ->_NONE_
<android.app.ContextImpl: android.content.Context getReceiverRestrictedContext()> ->_NONE_
<android.hardware.input.InputManager: android.hardware.input.KeyboardLayout[] getKeyboardLayouts()> ->_NONE_
<android.widget.ListView: void setOverscrollHeader(android.graphics.drawable.Drawable)> ->_NONE_
<android.app.ActivityManagerProxy: void publishService(android.os.IBinder,android.content.Intent,android.os.IBinder)> ->_NONE_
<android.net.rtp.AudioGroup: void setMode(int)> ->_NONE_
<java.net.DatagramSocketImpl: java.io.FileDescriptor getFileDescriptor()> ->_NONE_
<android.view.View: void setScrollBarFadeDuration(int)> ->_NONE_
<android.animation.AnimatorSet: android.animation.Animator setDuration(long)> ->_NONE_
<android.test.mock.MockResources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xalan.templates.OutputProperties: void setIntProperty(java.lang.String,int)> ->_NONE_
<java.io.SerializationHandleMap: int getModuloHash(java.lang.Object,int)> ->_NONE_
<android.graphics.Region: boolean setPath(android.graphics.Path,android.graphics.Region)> ->_NONE_
<org.apache.xalan.templates.ElemWithParam: org.apache.xpath.objects.XObject getValue(org.apache.xalan.transformer.TransformerImpl,int)> ->_NONE_
<java.lang.ClassLoader: java.lang.Package[] getPackages()> ->_NONE_
<org.kxml2.io.KXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean,boolean)> ->_NONE_
<android.widget.TextView: void setIncludeFontPadding(boolean)> ->_NONE_
<org.apache.xml.utils.res.XResources_hy: java.lang.Object[][] getContents()> ->_NONE_
<gov.nist.javax.sip.header.Via: void setProtocol(java.lang.String)> ->_NONE_
<org.jivesoftware.smack.packet.XMPPError: int getCode()> ->_NONE_
<java.lang.System: void setErr(java.io.PrintStream)> ->_NONE_
<android.text.style.BackgroundColorSpan: void updateDrawState(android.text.TextPaint)> ->_NONE_
<org.apache.xalan.Version: int getMaintenanceVersionNum()> ->_NONE_
<android.widget.TextView: void setCursorPosition_internal(int,int)> ->_NONE_
<android.content.ContextWrapper: int getWallpaperDesiredMinimumWidth()> ->_NONE_
<gov.nist.javax.sip.stack.MessageProcessor: void setListeningPoint(gov.nist.javax.sip.ListeningPointImpl)> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: void setLocalSequenceNumber(long)> ->_NONE_
<android.filterfw.core.ShaderProgram: void setMaximumTileSize(int)> ->_NONE_
<android.speech.tts.SynthesisRequest: void setLanguage(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xml.utils.NamespaceSupport2: java.util.Enumeration getDeclaredPrefixes()> ->_NONE_
<org.apache.xalan.processor.XSLTElementDef: void setLastOrder(int)> ->_NONE_
<javax.crypto.EncryptedPrivateKeyInfo: java.security.spec.PKCS8EncodedKeySpec getKeySpec(java.security.Key)> ->_NONE_
<android.renderscript.Type: android.renderscript.Element getElement()> ->_NONE_
<android.content.IntentFilter: java.lang.String getAction(int)> ->_NONE_
<android.support.v4.widget.CursorAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)> ->_NONE_
<org.apache.http.client.params.HttpClientParams: void setCookiePolicy(org.apache.http.params.HttpParams,java.lang.String)> ->_NONE_
<org.xml.sax.helpers.XMLReaderAdapter: void setDocumentLocator(org.xml.sax.Locator)> ->_NONE_
<gov.nist.javax.sip.header.ims.SecurityServer: void setValue(java.lang.String)> ->_NONE_
<android.media.MiniThumbFile: byte[] getMiniThumbFromFile(long,byte[])> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: long getOriginalLocalSequenceNumber()> ->_NONE_
<android.media.AudioTrack: int getSampleRate()> ->_NONE_
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.Stylesheet getStylesheet()> ->_NONE_
<android.webkit.CallbackProxy: void onReceivedLoginRequest(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: int getWrappedPort()> ->_NONE_
<org.apache.http.message.BasicNameValuePair: java.lang.String getValue()> ->_NONE_
<android.media.audiofx.Equalizer: short getNumberOfBands()> ->_NONE_
<android.media.MediaRecorder: void setOnErrorListener(android.media.MediaRecorder$OnErrorListener)> ->_NONE_
<android.content.SyncManager: void dumpSyncHistory(java.io.PrintWriter)> ->_NONE_
<java.util.Calendar: int getMinimalDaysInFirstWeek()> ->_NONE_
<android.content.res.ColorStateList: int getDefaultColor()> ->_NONE_
<android.inputmethodservice.InputMethodService: int getMaxWidth()> ->_NONE_
<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTAttributeDef[] getAttributes()> ->_NONE_
<android.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String)> ->_NONE_
<android.telephony.TelephonyManager: int getDataState()> ->_NONE_
<libcore.net.url.JarURLConnectionImpl: boolean getDefaultUseCaches()> ->_NONE_
<org.apache.xml.serializer.SerializerBase: java.lang.String getPrefix(java.lang.String)> ->_NONE_
<java.awt.font.NumericShaper: java.awt.font.NumericShaper getContextualShaper(int)> ->_NONE_
<android.app.FragmentBreadCrumbs: void setOnBreadCrumbClickListener(android.app.FragmentBreadCrumbs$OnBreadCrumbClickListener)> ->_NONE_
<android.view.ViewGroup: void setChildrenDrawnWithCacheEnabled(boolean)> ->_NONE_
<org.apache.xalan.templates.ElemLiteralResult: boolean getIsLiteralResultAsStylesheet()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: void setXmlStandalone(boolean)> ->_NONE_
<android.test.ActivityUnitTestCase: int getFinishedActivityRequest()> ->_NONE_
<android.media.AudioRecord: int read(byte[],int,int)> ->_NONE_
<android.renderscript.ProgramStore: android.renderscript.ProgramStore$DepthFunc getDepthFunc()> ->_NONE_
<android.media.RingtoneManager: android.database.Cursor getDrmRingtones()> ->_NONE_
<android.widget.TextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()> ->_NONE_
<android.widget.AutoCompleteTextView: int getDropDownAnchor()> ->_NONE_
<org.apache.xpath.functions.Function: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<android.net.ThrottleManager: java.lang.String getHelpUri()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: java.lang.String getNodeName(int)> ->_NONE_
<android.net.Proxy: org.apache.http.HttpHost getPreferredHttpHost(android.content.Context,java.lang.String)> ->_NONE_
<org.ccil.cowan.tagsoup.Parser: org.xml.sax.EntityResolver getEntityResolver()> ->_NONE_
<gov.nist.javax.sip.header.RequestLine: java.lang.String getMethod()> ->_NONE_
<org.apache.xalan.templates.Stylesheet: void setHref(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: java.lang.String getDocumentTypeDeclarationSystemIdentifier()> ->_NONE_
<android.webkit.WebViewCore: void focusNodeChanged(int,android.webkit.WebViewCore$WebKitHitTest)> ->_NONE_
<org.apache.commons.codec.net.QuotedPrintableCodec: byte[] encode(byte[])> ->_NONE_
<org.apache.xml.serializer.CharInfo: org.apache.xml.serializer.CharInfo getCharInfo(java.lang.String,java.lang.String)> ->_NONE_
<android.media.AudioManager: void setMicrophoneMute(boolean)> ->_NONE_
<android.telephony.CellIdentityLte: void log(java.lang.String)> ->_NONE_
<org.apache.commons.io.filefilter.OrFileFilter: java.util.List getFileFilters()> ->_NONE_
<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getHopTarget(int)> ->_NONE_
<java.net.HttpCookie: void setPath(java.lang.String)> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: long getDate()> ->_NONE_
<android.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> ->_NONE_
<android.view.animation.Transformation: android.graphics.Matrix getMatrix()> ->_NONE_
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.DecimalFormatProperties getDecimalFormat(org.apache.xml.utils.QName)> ->_NONE_
<libcore.icu.NativeDecimalFormat: void setCurrency(java.util.Currency)> ->_NONE_
<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()> ->_NONE_
<org.apache.xalan.templates.ElemLiteralResult: org.apache.xalan.templates.AVT getLiteralResultAttribute(java.lang.String)> ->_NONE_
<android.test.mock.MockResources: android.content.res.XmlResourceParser getAnimation(int)> ->_NONE_
<android.view.GLES20DisplayList: void setScaleY(float)> ->_NONE_
<android.view.accessibility.AccessibilityRecord: void setCurrentItemIndex(int)> ->_NONE_
<android.view.GLES20DisplayList: void setScaleX(float)> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getLabeledBy()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.DocumentFragment createDocumentFragment()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.HandshakeProtocol: void send(org.apache.harmony.xnet.provider.jsse.Message)> ->_NONE_
<java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)> ->_NONE_
<javax.obex.ServerRequestHandler: void onAuthenticationFailure(byte[])> ->_NONE_
<gov.nist.javax.sip.address.UserInfo: java.lang.String getPassword()> ->_NONE_
<gov.nist.javax.sip.stack.TLSMessageChannel: java.lang.String getPeerAddress()> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: java.net.URL getURL()> ->_NONE_
<android.text.method.DateKeyListener: char[] getAcceptedChars()> ->_NONE_
<android.content.CursorLoader: void onStartLoading()> ->_NONE_
<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getPassphrase()> ->_NONE_
<android.app.ApplicationThreadProxy: void scheduleReceiver(android.content.Intent,android.content.pm.ActivityInfo,android.content.res.CompatibilityInfo,int,java.lang.String,android.os.Bundle,boolean,int)> ->_NONE_
<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: void setValue(java.lang.String)> ->_NONE_
<android.widget.SearchView: int getSearchIconId()> ->_NONE_
<android.app.ActivityManagerProxy: java.util.List getProcessesInErrorState()> ->_NONE_
<org.apache.james.mime4j.codec.EncoderUtil: byte[] encode(java.lang.String,java.nio.charset.Charset)> ->_NONE_
<android.webkit.AccessibilityInjectorFallback: void onSelectionStringChange(java.lang.String)> ->_NONE_
<android.app.Fragment: android.app.Fragment getParentFragment()> ->_NONE_
<android.app.SearchableInfo: int getIconId()> ->_NONE_
<android.widget.AppSecurityPermissions: java.util.List getPermissionList(android.widget.AppSecurityPermissions$MyPermissionGroupInfo,int)> ->_NONE_
<org.apache.xalan.templates.DecimalFormatProperties: char getPatternSeparator()> ->_NONE_
<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTElementProcessor getProcessorForUnknown(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.http.entity.InputStreamEntity: long getContentLength()> ->_NONE_
<android.telephony.TelephonyManager: int getCurrentPhoneType()> ->_NONE_
<android.os.PerformanceCollector: void addMeasurement(java.lang.String,java.lang.String)> ->_NONE_
<android.webkit.WebSettings: int getDefaultFontSize()> ->_NONE_
<android.content.res.TypedArray: int getLayoutDimension(int,java.lang.String)> ->_NONE_
<android.support.v4.app.Fragment: android.support.v4.app.Fragment getParentFragment()> ->_NONE_
<gov.nist.javax.sip.header.Contact: gov.nist.core.NameValueList getContactParms()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.lang.String getWrappedHostName()> ->_NONE_
<android.media.JetPlayer: boolean setMuteArray(boolean[],boolean)> ->_NONE_
<android.view.ViewRootImpl: android.view.ViewParent getParent()> ->_NONE_
<android.telephony.gsm.SmsMessage: android.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean)> ->_NONE_
<android.media.videoeditor.MediaImageItem: int getGeneratedClipWidth()> ->_NONE_
<android.view.View: void setOnKeyListener(android.view.View$OnKeyListener)> ->_NONE_
<org.apache.harmony.xml.ExpatAttributes: java.lang.String getValue(int)> ->_NONE_
<org.apache.xpath.compiler.OpMap: int getTokenQueueSize()> ->_NONE_
<gov.nist.javax.sip.header.Subject: java.lang.String getSubject()> ->_NONE_
<android.telephony.SignalStrength: int getLteAsuLevel()> ->_NONE_
<android.widget.ExpandableListConnector: android.widget.ExpandableListConnector$PositionMetadata getFlattenedPos(android.widget.ExpandableListPosition)> ->_NONE_
<android.support.v4.view.ViewPager: int getChildDrawingOrder(int,int)> ->_NONE_
<android.telephony.NeighboringCellInfo: int getNetworkType()> ->_NONE_
<org.apache.james.mime4j.util.PositionInputStream: long getPosition()> ->_NONE_
<java.text.NumberFormat: void setMinimumIntegerDigits(int)> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: void setAuthSchemes(org.apache.http.auth.AuthSchemeRegistry)> ->_NONE_
<org.apache.xml.serializer.ToHTMLStream: boolean getOmitMetaTag()> ->_NONE_
<android.view.MotionEvent: float getTouchMinor(int)> ->_NONE_
<org.apache.harmony.xml.dom.LeafNodeImpl: org.w3c.dom.Node getParentNode()> ->_NONE_
<org.xml.sax.ext.Locator2Impl: void setEncoding(java.lang.String)> ->_NONE_
<android.nfc.tech.NdefFormatable: boolean isConnected()> ->_NONE_
<android.support.v4.app.Fragment: android.support.v4.app.Fragment getTargetFragment()> ->_NONE_
<android.net.wifi.WifiManager: boolean reconnect()> ->_NONE_
<android.media.AudioManager: java.lang.String getIdForAudioFocusListener(android.media.AudioManager$OnAudioFocusChangeListener)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: void setCallId(java.lang.String)> ->_NONE_
<android.webkit.WebView: void setFindListener(android.webkit.WebView$FindListener)> ->_NONE_
<android.text.TextUtils: float setPara(android.text.MeasuredText,android.text.TextPaint,java.lang.CharSequence,int,int,android.text.TextDirectionHeuristic)> ->_NONE_
<org.apache.xalan.templates.ElemExsltFuncResult: java.lang.String getNodeName()> ->_NONE_
<android.media.videoeditor.MediaProperties: int[] getSupportedVideoBitrates()> ->_NONE_
<org.apache.harmony.security.x509.TBSCertList: java.util.Date getThisUpdate()> ->_NONE_
<java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor(java.util.concurrent.ThreadFactory)> ->_NONE_
<android.text.StaticLayout: int getLineForVertical(int)> ->_NONE_
<java.util.zip.Inflater: int getAdler()> ->_NONE_
<android.filterfw.core.SyncRunner: android.filterfw.core.FilterGraph getGraph()> ->_NONE_
<android.inputmethodservice.KeyboardView: void setPopupParent(android.view.View)> ->_NONE_
<android.text.style.TypefaceSpan: void updateDrawState(android.text.TextPaint)> ->_NONE_
<org.apache.http.impl.conn.DefaultClientConnection: java.net.Socket getSocket()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getValue()> ->_NONE_
<android.os.SystemProperties: void set(java.lang.String,java.lang.String)> ->_NONE_
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: boolean parse()> ->_NONE_
<android.drm.mobile1.DrmConstraintInfo: long getInterval()> ->_NONE_
<android.graphics.drawable.NinePatchDrawable: android.graphics.Region getTransparentRegion()> ->_NONE_
<android.webkit.WebSettingsClassic: void setLoadWithOverviewMode(boolean)> ->_NONE_
<org.apache.xpath.axes.LocPathIterator: boolean getIsTopLevel()> ->_NONE_
<jp.co.omronsoft.openwnn.JAJP.UserDictionaryToolsListJAJP: java.util.Comparator getComparator()> ->_NONE_
<gov.nist.javax.sip.address.AddressImpl: void setAddess(javax.sip.address.URI)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.io.FileDescriptor getFileDescriptor$()> ->_NONE_
<java.text.DecimalFormat: void setMultiplier(int)> ->_NONE_
<android.util.XmlPullAttributes: java.lang.String getIdAttribute()> ->_NONE_
<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler getContentHandler()> ->_NONE_
<java.lang.Package: java.lang.Package getPackage(java.lang.String)> ->_NONE_
<java.security.cert.PolicyQualifierInfo: java.lang.String getPolicyQualifierId()> ->_NONE_
<android.content.pm.PackageParser: java.lang.String buildProcessName(java.lang.String,java.lang.String,java.lang.CharSequence,int,java.lang.String[],java.lang.String[])> ->_NONE_
<javax.net.SocketFactory: javax.net.SocketFactory getDefault()> ->_NONE_
<android.net.nsd.NsdManager: void setEnabled(boolean)> ->_NONE_
<android.app.ApplicationPackageManager: int getComponentEnabledSetting(android.content.ComponentName)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setFocused(boolean)> ->_NONE_
<org.jivesoftware.smack.XMPPConnection: void setRmqManager(com.google.android.gsf.gtalkservice.rmq.RmqManager)> ->_NONE_
<android.net.LinkProperties: java.util.Collection getLinkAddresses()> ->_NONE_
<org.apache.http.protocol.HttpRequestHandlerRegistry: void setHandlers(java.util.Map)> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Set: void encodeContent(org.apache.harmony.security.asn1.BerOutputStream)> ->_NONE_
<org.apache.xalan.templates.ElemNumber: org.apache.xpath.XPath getCount()> ->_NONE_
<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,int)> ->_NONE_
<java.nio.BaseByteBuffer: char getChar()> ->_NONE_
<android.app.Activity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)> ->_NONE_
<android.widget.ScrollBarDrawable: int getSize(boolean)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setBoundsInScreen(java.lang.Object,android.graphics.Rect)> ->_NONE_
<android.content.ComponentName: java.lang.String getClassName()> ->_NONE_
<android.view.GLES20Canvas: int getStencilSize()> ->_NONE_
<android.net.wifi.NetworkUpdateResult: int getNetworkId()> ->_NONE_
<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> ->_NONE_
<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap readKeyValueAssignments(java.lang.String)> ->_NONE_
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse: int getVersion()> ->_NONE_
<java.io.DataInputStream: int readInt()> ->_NONE_
<android.widget.ProgressBar: int getSecondaryProgress()> ->_NONE_
<android.webkit.WebSettingsClassic: int getDoubleTapZoom()> ->_NONE_
<android.view.TextureView: void setSurfaceTexture(android.graphics.SurfaceTexture)> ->_NONE_
<android.mtp.MtpDatabase: int[] getObjectReferences(int)> ->_NONE_
<android.webkit.HTML5VideoView: int getCurrentPosition()> ->_NONE_
<android.webkit.WebViewFactory: android.webkit.WebViewFactoryProvider loadChromiumProvider()> ->_NONE_
<android.view.Window: android.view.Window getContainer()> ->_NONE_
<org.apache.xpath.jaxp.XPathImpl: void setXPathFunctionResolver(javax.xml.xpath.XPathFunctionResolver)> ->_NONE_
<org.apache.http.protocol.HttpDateGenerator: java.lang.String getCurrentDate()> ->_NONE_
<android.view.View: android.view.AccessibilityIterators$TextSegmentIterator getIteratorForGranularity(int)> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: java.util.Iterator getRouteSet()> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getPreviousSiblingElem()> ->_NONE_
<java.net.HttpURLConnection: java.lang.String getRequestMethod()> ->_NONE_
<org.apache.http.entity.BufferedHttpEntity: long getContentLength()> ->_NONE_
<org.apache.xalan.processor.XSLTElementDef: int getOrder()> ->_NONE_
<android.app.admin.DevicePolicyManager: android.content.ComponentName getGlobalProxyAdmin()> ->_NONE_
<org.apache.harmony.security.x509.TBSCertList: org.apache.harmony.security.x509.Extensions getCrlExtensions()> ->_NONE_
<android.content.SyncManager: void dumpDayStatistics(java.io.PrintWriter)> ->_NONE_
<org.apache.xpath.NodeSetDTM: void setItem(int,int)> ->_NONE_
<android.telephony.ServiceState: int getCdmaDefaultRoamingIndicator()> ->_NONE_
<android.net.sip.SipProfile: java.lang.String getProfileName()> ->_NONE_
<android.net.http.Headers: void setLocation(java.lang.String)> ->_NONE_
<android.view.ViewStub: void setInflatedId(int)> ->_NONE_
<android.widget.AdapterView: int getSelectedItemPosition()> ->_NONE_
<android.net.MobileDataStateTracker: void getPhoneService(boolean)> ->_NONE_
<java.net.HttpCookie: long getMaxAge()> ->_NONE_
<android.content.pm.VerifierDeviceIdentity: java.lang.String encodeBase32(long)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.Header getHeaderLowerCase(java.lang.String)> ->_NONE_
<android.app.Activity: void setDefaultKeyMode(int)> ->_NONE_
<android.app.MediaRouteButton: void setExtendedSettingsClickListener(android.view.View$OnClickListener)> ->_NONE_
<org.apache.xml.utils.QName: java.lang.String getLocalPart(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.ContentLanguage: java.util.Locale getContentLanguage()> ->_NONE_
<gov.nist.javax.sip.stack.TLSMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()> ->_NONE_
<java.io.BufferedReader: int read()> ->_NONE_
<android.app.Fragment: void setInitialSavedState(android.app.Fragment$SavedState)> ->_NONE_
<org.apache.xpath.functions.FuncNormalizeSpace: void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)> ->_NONE_
<java.net.PasswordAuthentication: java.lang.String getUserName()> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getParentElem()> ->_NONE_
<gov.nist.javax.sip.header.extensions.MinSE: java.lang.String encodeBody()> ->_NONE_
<android.telephony.ServiceState: void setState(int)> ->_NONE_
<gov.nist.javax.sip.header.TimeStamp: float getTimeStamp()> ->_NONE_
<gov.nist.javax.sip.address.TelURLImpl: java.util.Iterator getParameterNames()> ->_NONE_
<android.os.Parcel: void writeException(java.lang.Exception)> ->_NONE_
<android.text.HtmlToSpannedConverter: void setDocumentLocator(org.xml.sax.Locator)> ->_NONE_
<org.apache.harmony.xml.dom.DocumentTypeImpl: org.w3c.dom.NamedNodeMap getEntities()> ->_NONE_
<android.widget.ListPopupWindow: void setVerticalOffset(int)> ->_NONE_
<android.app.ActivityManagerProxy: void setDebugApp(java.lang.String,boolean,boolean)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.NamedNodeMap getAttributes()> ->_NONE_
<libcore.io.IoBridge: void setSocketOption(java.io.FileDescriptor,int,java.lang.Object)> ->_NONE_
<android.widget.ScrollView: int getMaxScrollAmount()> ->_NONE_
<android.webkit.WebViewClassic: void setMockGeolocationPosition(double,double,double)> ->_NONE_
<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EffectSettings getOverlaySettings(android.media.videoeditor.OverlayFrame)> ->_NONE_
<gov.nist.javax.sip.message.ContentImpl: javax.sip.header.ContentTypeHeader getContentTypeHeader()> ->_NONE_
<android.gesture.Gesture: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.Intent)> ->_NONE_
<android.widget.LinearLayout: void setWeightSum(float)> ->_NONE_
<android.content.SyncStorageEngine: android.content.SyncStorageEngine$AuthorityInfo getAuthorityLocked(android.accounts.Account,int,java.lang.String,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationHeader: void setQop(java.lang.String)> ->_NONE_
<android.webkit.WebSettingsClassic: boolean getAllowFileAccess()> ->_NONE_
<android.widget.ViewFlipper: void setAutoStart(boolean)> ->_NONE_
<android.app.ApplicationPackageManager: java.util.List getInstalledPackages(int,int)> ->_NONE_
<org.apache.http.util.VersionInfo: java.lang.String getPackage()> ->_NONE_
<org.apache.xml.serializer.dom3.DOMOutputImpl: java.io.Writer getCharacterStream()> ->_NONE_
<android.view.View: float getCameraDistance()> ->_NONE_
<android.media.Ringtone: android.net.Uri getUri()> ->_NONE_
<android.net.wifi.WifiStateTracker: boolean reconnect()> ->_NONE_
<org.apache.harmony.security.x509.TBSCertList: org.apache.harmony.security.x509.AlgorithmIdentifier getSignature()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: void setReuseAddress(boolean)> ->_NONE_
<libcore.net.http.HttpResponseCache: int getNetworkCount()> ->_NONE_
<android.os.Parcel: android.util.SparseArray readSparseArray(java.lang.ClassLoader)> ->_NONE_
<javax.obex.ObexHelper: byte[] computeAuthenticationChallenge(byte[],java.lang.String,boolean,boolean)> ->_NONE_
<android.widget.ArrayAdapter: java.lang.Object getItem(int)> ->_NONE_
<org.apache.xpath.functions.FuncDoclocation: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<android.net.wifi.p2p.WifiP2pService: android.os.Messenger getMessenger()> ->_NONE_
<android.media.videoeditor.MediaVideoItem: int getHeight()> ->_NONE_
<android.media.MediaPlayer: int getIntParameter(int)> ->_NONE_
<libcore.net.url.FtpURLConnection: java.lang.String readLine()> ->_NONE_
<org.apache.http.impl.cookie.RFC2109Spec: java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin)> ->_NONE_
<android.os.SystemProperties: java.lang.String get(java.lang.String)> ->_NONE_
<org.apache.xml.utils.AttList: int getIndex(java.lang.String)> ->_NONE_
<javax.security.auth.Subject: javax.security.auth.Subject getSubject(java.security.AccessControlContext)> ->_NONE_
<java.net.Authenticator: java.net.PasswordAuthentication requestPasswordAuthentication(java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<org.jivesoftware.smack.provider.ProviderManager: java.lang.Object getRawXmlIqProvider(java.lang.String,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.ims.PChargingVector: java.lang.String getICID()> ->_NONE_
<libcore.io.BlockGuardOs: int writev(java.io.FileDescriptor,java.lang.Object[],int[],int[])> ->_NONE_
<org.apache.xalan.templates.ElemTextLiteral: boolean getDisableOutputEscaping()> ->_NONE_
<android.text.style.TypefaceSpan: int getSpanTypeId()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: int getPacketBufferSize()> ->_NONE_
<android.speech.tts.PlaybackQueueItem: java.lang.Object getCallerIdentity()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setAddedCount(java.lang.Object,int)> ->_NONE_
<android.view.textservice.SuggestionsInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: org.w3c.dom.Node getLastChild()> ->_NONE_
<android.animation.LayoutTransition: void setStartDelay(int,long)> ->_NONE_
<android.text.format.Time: void set(int,int,int,int,int,int)> ->_NONE_
<android.view.LayoutInflater: android.view.View createViewFromTag(android.view.View,java.lang.String,android.util.AttributeSet)> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CRLImpl: byte[] getEncoded()> ->_NONE_
<android.filterfw.core.Filter: int getNumberOfConnectedOutputs()> ->_NONE_
<android.widget.GridLayout: int getMeasurement(android.view.View,boolean)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: java.lang.String getFormat()> ->_NONE_
<android.support.v4.app.Fragment: void setIndex(int,android.support.v4.app.Fragment)> ->_NONE_
<android.view.View: void setScrollbarFadingEnabled(boolean)> ->_NONE_
<android.app.WallpaperManager: void setWallpaperOffsets(android.os.IBinder,float,float)> ->_NONE_
<java.net.MulticastSocket: void setInterface(java.net.InetAddress)> ->_NONE_
<android.support.v4.app.FragmentActivity: void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View)> ->_NONE_
<org.apache.harmony.xml.parsers.SAXParserFactoryImpl: boolean getFeature(java.lang.String)> ->_NONE_
<java.net.Socket: void setReuseAddress(boolean)> ->_NONE_
<android.app.ContextImpl: java.io.File getDatabasePath(java.lang.String)> ->_NONE_
<org.apache.xpath.NodeSet: int getLast()> ->_NONE_
<java.security.spec.RSAPrivateCrtKeySpec: java.math.BigInteger getPublicExponent()> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: void setLabeledBy(android.view.View,int)> ->_NONE_
<android.widget.SimpleAdapter: java.lang.Object getItem(int)> ->_NONE_
<org.apache.http.conn.params.ConnPerRouteBean: void setMaxForRoute(org.apache.http.conn.routing.HttpRoute,int)> ->_NONE_
<javax.xml.datatype.Duration: long getTimeInMillis(java.util.Calendar)> ->_NONE_
<org.apache.xml.dtm.ref.ExtendedType: java.lang.String getNamespace()> ->_NONE_
<android.filterfw.core.Filter: void setWaitsOnInputPort(java.lang.String,boolean)> ->_NONE_
<gov.nist.javax.sip.header.ContentType: java.lang.String getMediaSubType()> ->_NONE_
<android.net.wifi.WifiStateMachine: boolean syncPingSupplicant(com.android.internal.util.AsyncChannel)> ->_NONE_
<org.apache.xalan.templates.ElemWithParam: java.lang.String getNodeName()> ->_NONE_
<libcore.net.http.RawHeaders: java.lang.String get(java.lang.String)> ->_NONE_
<org.apache.http.protocol.BasicHttpContext: void setAttribute(java.lang.String,java.lang.Object)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.ElemVariable getVariableOrParam(org.apache.xml.utils.QName)> ->_NONE_
<android.filterfw.core.FrameFormat: int getDimension(int)> ->_NONE_
<android.widget.LinearLayout: int getBaselineAlignedChildIndex()> ->_NONE_
<java.lang.Thread: void setDaemon(boolean)> ->_NONE_
<gov.nist.core.LexerCore: java.lang.String getBuffer()> ->_NONE_
<org.apache.xalan.transformer.XalanTransformState: org.apache.xalan.templates.ElemTemplateElement getCurrentElement()> ->_NONE_
<android.util.LongSparseArray: java.lang.Object get(long)> ->_NONE_
<org.apache.xml.utils.StringToIntTable: int getIgnoreCase(java.lang.String)> ->_NONE_
<org.apache.commons.io.input.SwappedDataInputStream: int readUnsignedByte()> ->_NONE_
<org.apache.commons.io.output.TeeOutputStream: void write(byte[])> ->_NONE_
<gov.nist.javax.sip.header.AcceptEncoding: void setQValue(float)> ->_NONE_
<org.apache.xml.dtm.SecuritySupport: long getLastModified(java.io.File)> ->_NONE_
<android.webkit.WebViewClassic: int getContentWidth()> ->_NONE_
<android.view.ViewGroup: void setPersistentDrawingCache(int)> ->_NONE_
<android.content.Intent: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.xml.sax.InputSource: java.lang.String getPublicId()> ->_NONE_
<android.accessibilityservice.UiTestAutomationBridge: android.view.accessibility.AccessibilityEvent getLastAccessibilityEvent()> ->_NONE_
<org.apache.xpath.operations.UnaryOperation: void setRight(org.apache.xpath.Expression)> ->_NONE_
<gov.nist.javax.sip.stack.MessageChannel: gov.nist.javax.sip.header.Via getViaHeader()> ->_NONE_
<org.jivesoftware.smack.ConnectionConfiguration: void setNotMatchingDomainCheckEnabled(boolean)> ->_NONE_
<gov.nist.javax.sip.header.ims.SecurityAgree: java.lang.String getAlgorithm()> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: void setUseCaches(boolean)> ->_NONE_
<android.app.ActivityManagerProxy: void setAlwaysFinish(boolean)> ->_NONE_
<org.apache.xalan.processor.StylesheetHandler: void setSystemId(java.lang.String)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.ElemTemplate getMatchedTemplate()> ->_NONE_
<java.util.AbstractMap: java.lang.Object get(java.lang.Object)> ->_NONE_
<org.apache.xalan.templates.ElemUse: void execute(org.apache.xalan.transformer.TransformerImpl)> ->_NONE_
<android.app.AlertDialog: void setButton2(java.lang.CharSequence,android.os.Message)> ->_NONE_
<android.app.AlertDialog: void setButton3(java.lang.CharSequence,android.os.Message)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: boolean getDocumentAllDeclarationsProcessed()> ->_NONE_
<android.content.pm.ContainerEncryptionParams: java.security.spec.AlgorithmParameterSpec getEncryptionSpec()> ->_NONE_
<android.view.View: float getRotation()> ->_NONE_
<gov.nist.javax.sip.address.SipUri: java.lang.Object getParm(java.lang.String)> ->_NONE_
<android.telephony.TelephonyManager: java.lang.String getNetworkTypeName(int)> ->_NONE_
<org.apache.xalan.processor.XSLTElementProcessor: void unparsedEntityDecl(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.content.res.Resources: java.lang.CharSequence getQuantityText(int,int)> ->_NONE_
<org.apache.xpath.compiler.OpMap: java.lang.String getStepNS(int)> ->_NONE_
<org.apache.xpath.patterns.StepPattern: boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)> ->_NONE_
<android.net.Proxy: int getDefaultPort()> ->_NONE_
<org.apache.xml.utils.ObjectFactory: java.lang.ClassLoader findClassLoader()> ->_NONE_
<android.filterfw.geometry.Quad: float getBoundingWidth()> ->_NONE_
<jp.co.omronsoft.openwnn.KeyboardView: java.lang.CharSequence getPreviewText(jp.co.omronsoft.openwnn.Keyboard$Key)> ->_NONE_
<android.graphics.Paint: int getTextRunCursor(char[],int,int,int,int,int)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getOwnerDocument(int)> ->_NONE_
<android.net.http.HttpAuthHeader: void parseParameter(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: int getPreviousSibling(int)> ->_NONE_
<android.preference.PreferenceGroup: android.preference.Preference getPreference(int)> ->_NONE_
<org.jivesoftware.smack.XMPPConnection: long getServerClockSkew()> ->_NONE_
<android.widget.ExpandableListView: void setOnGroupExpandListener(android.widget.ExpandableListView$OnGroupExpandListener)> ->_NONE_
<android.filterfw.core.KeyValueMap: int getInt(java.lang.String)> ->_NONE_
<android.filterfw.core.FrameFormat: int getWidth()> ->_NONE_
<android.webkit.WebSettingsClassic: boolean getHardwareAccelSkiaEnabled()> ->_NONE_
<org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String)> ->_NONE_
<android.graphics.drawable.RotateDrawable: void setAlpha(int)> ->_NONE_
<java.net.ProxySelector: java.net.ProxySelector getDefault()> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertFactoryImpl: java.security.cert.Certificate getCertificate(java.io.InputStream)> ->_NONE_
<android.view.ViewGroup: void setLayoutAnimation(android.view.animation.LayoutAnimationController)> ->_NONE_
<org.apache.http.impl.conn.AbstractClientConnAdapter: void setSocketTimeout(int)> ->_NONE_
<android.app.ActivityOptions: java.lang.String getPackageName()> ->_NONE_
<gov.nist.javax.sip.header.Require: java.lang.String getOptionTag()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: java.net.InetAddress getInetAddress()> ->_NONE_
<android.widget.AdapterViewAnimator: void setDisplayedChild(int,boolean)> ->_NONE_
<android.content.pm.LabeledIntent: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)> ->_NONE_
<java.lang.reflect.UndeclaredThrowableException: java.lang.Throwable getCause()> ->_NONE_
<android.net.sip.SipManager: java.lang.String getOfferSessionDescription(android.content.Intent)> ->_NONE_
<android.webkit.WebViewClassic: void dumpViewHierarchyWithProperties(java.io.BufferedWriter,int)> ->_NONE_
<android.app.PendingIntent: void send(int)> ->_NONE_
<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)> ->_NONE_
<android.content.CursorLoader: void setSortOrder(java.lang.String)> ->_NONE_
<android.os.Parcel: void setDataSize(int)> ->_NONE_
<org.apache.xpath.axes.WalkingIterator: void setRoot(int,java.lang.Object)> ->_NONE_
<android.webkit.WebSettingsClassic: void setCursiveFontFamily(java.lang.String)> ->_NONE_
<android.app.Activity: void dumpInner(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> ->_NONE_
<android.gesture.Gesture: java.util.ArrayList getStrokes()> ->_NONE_
<android.widget.Toast: android.app.INotificationManager getService()> ->_NONE_
<java.net.HttpURLConnection: java.lang.String getHeaderFieldKey(int)> ->_NONE_
<org.jivesoftware.smack.util.Base64: java.lang.String encodeBytes(byte[])> ->_NONE_
<android.database.MatrixCursor: java.lang.Object get(int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.ProtocolVersion: org.apache.harmony.xnet.provider.jsse.ProtocolVersion getByVersion(byte[])> ->_NONE_
<org.apache.harmony.luni.util.DeleteOnExit: org.apache.harmony.luni.util.DeleteOnExit getInstance()> ->_NONE_
<org.apache.harmony.xml.ExpatAttributes: java.lang.String getURI(int)> ->_NONE_
<gov.nist.javax.sip.clientauthutils.CredentialsCache: java.util.Collection getCachedAuthorizationHeaders(java.lang.String)> ->_NONE_
<android.test.AndroidTestRunner: void setContext(android.content.Context)> ->_NONE_
<org.apache.xml.utils.SecuritySupport: java.lang.ClassLoader getSystemClassLoader()> ->_NONE_
<java.math.BigDecimal: java.math.BigDecimal setScale(int,java.math.RoundingMode)> ->_NONE_
<android.view.inputmethod.CompletionInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<java.net.URLConnection: int getContentLength()> ->_NONE_
<android.widget.GridLayout: int getRowCount()> ->_NONE_
<org.apache.xalan.templates.ElemVariable: int getIndex()> ->_NONE_
<android.widget.RelativeLayout: void setIgnoreGravity(int)> ->_NONE_
<android.util.DayOfMonthCursor: void setSelectedDayOfMonth(int)> ->_NONE_
<android.view.Window: void setCloseOnTouchOutsideIfNotSet(boolean)> ->_NONE_
<android.media.AudioSystem: void setErrorCallback(android.media.AudioSystem$ErrorCallback)> ->_NONE_
<android.telephony.CellBroadcastMessage: java.lang.String getMessageBody()> ->_NONE_
<net.oauth.OAuthMessage: java.lang.String getHeader(java.lang.String)> ->_NONE_
<org.ccil.cowan.tagsoup.AttributesImpl: int getLength()> ->_NONE_
<android.app.BackStackRecord: int getTransitionStyle()> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertImpl: boolean[] getIssuerUniqueID()> ->_NONE_
<android.appwidget.AppWidgetManager: void updateAppWidgetOptions(int,android.os.Bundle)> ->_NONE_
<java.lang.AbstractStringBuilder: void getChars(int,int,char[],int)> ->_NONE_
<android.app.ActivityManagerProxy: void revokeUriPermission(android.app.IApplicationThread,android.net.Uri,int)> ->_NONE_
<org.apache.xalan.templates.TemplateList: org.apache.xalan.templates.TemplateList$TemplateWalker getWalker()> ->_NONE_
<android.content.res.Resources: android.content.res.CompatibilityInfo getCompatibilityInfo()> ->_NONE_
<org.apache.xalan.templates.ElemExtensionDecl: java.lang.String getPrefix()> ->_NONE_
<android.media.videoeditor.MediaVideoItem: void setVolume(int)> ->_NONE_
<android.graphics.Matrix: boolean setPolyToPoly(float[],int,float[],int,int)> ->_NONE_
<libcore.net.http.HttpURLConnectionImpl: java.lang.String getRequestProperty(java.lang.String)> ->_NONE_
<android.support.v4.view.ViewPager: boolean executeKeyEvent(android.view.KeyEvent)> ->_NONE_
<org.apache.xml.utils.DOMHelper: java.lang.String getNamespaceOfNode(org.w3c.dom.Node)> ->_NONE_
<org.xml.sax.helpers.XMLReaderFactory: org.xml.sax.XMLReader createXMLReader()> ->_NONE_
<android.os.PerformanceCollector: void addMeasurement(java.lang.String,long)> ->_NONE_
<android.media.videoeditor.MediaArtistNativeHelper: void setAudioflag(boolean)> ->_NONE_
<android.app.ActivityManagerProxy: void activityDestroyed(android.os.IBinder)> ->_NONE_
<org.apache.harmony.luni.internal.util.TimezoneGetter: org.apache.harmony.luni.internal.util.TimezoneGetter getInstance()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: void setStrictErrorChecking(boolean)> ->_NONE_
<android.filterfw.core.Frame: int getCapacity()> ->_NONE_
<java.lang.StringBuffer: void setLength(int)> ->_NONE_
<android.media.AudioService: void sendVolumeUpdateToRemote(int,int)> ->_NONE_
<java.text.BreakIterator: void setText(java.lang.String)> ->_NONE_
<org.apache.http.entity.HttpEntityWrapper: org.apache.http.Header getContentType()> ->_NONE_
<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseClassTypeSignature()> ->_NONE_
<android.security.KeyStore: byte[] getPasswordBytes(java.lang.String)> ->_NONE_
<java.util.ServiceLoader: java.lang.Object loadFromSystemProperty(java.lang.Class)> ->_NONE_
<android.content.res.TypedArray: java.lang.CharSequence getText(int)> ->_NONE_
<jp.co.omronsoft.openwnn.Keyboard: int getShiftKeyIndex()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: void setStackName(java.lang.String)> ->_NONE_
<android.media.videoeditor.MediaImageItem: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings getKenBurns(android.media.videoeditor.EffectKenBurns)> ->_NONE_
<org.apache.xpath.patterns.NodeTest: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)> ->_NONE_
<android.nfc.tech.MifareUltralight: boolean isConnected()> ->_NONE_
<android.inputmethodservice.AbstractInputMethodService: android.view.KeyEvent$DispatcherState getKeyDispatcherState()> ->_NONE_
<android.text.style.SuggestionSpan: int getSpanTypeId()> ->_NONE_
<java.text.DecimalFormat: void setPositiveSuffix(java.lang.String)> ->_NONE_
<android.text.Annotation: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.preference.RingtonePreference: boolean getShowDefault()> ->_NONE_
<org.apache.xml.res.XMLErrorResources: org.apache.xml.res.XMLErrorResources loadResourceBundle(java.lang.String)> ->_NONE_
<android.text.SpannableString: int getSpanEnd(java.lang.Object)> ->_NONE_
<android.webkit.WebViewClient: void onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String)> ->_NONE_
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthTokenByFeatures(java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler)> ->_NONE_
<android.view.MotionEvent: void getPointerProperties(int,android.view.MotionEvent$PointerProperties)> ->_NONE_
<android.webkit.HTML5Audio: void onBufferingUpdate(android.media.MediaPlayer,int)> ->_NONE_
<android.filterfw.core.Frame: int getRefCount()> ->_NONE_
<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)> ->_NONE_
<org.jivesoftware.smack.packet.DataMessage: java.lang.String getExtensionsXML()> ->_NONE_
<java.util.zip.InflaterOutputStream: void write(int)> ->_NONE_
<android.support.v4.content.AsyncTaskLoader: void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object)> ->_NONE_
<org.apache.http.client.methods.HttpDelete: java.lang.String getMethod()> ->_NONE_
<android.content.ContextWrapper: void sendBroadcast(android.content.Intent,java.lang.String)> ->_NONE_
<org.apache.james.mime4j.field.address.parser.AddressListParser: org.apache.james.mime4j.field.address.parser.Token getToken(int)> ->_NONE_
<android.widget.TextView: void setSpan_internal(java.lang.Object,int,int,int)> ->_NONE_
<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)> ->_NONE_
<android.telephony.TelephonyManager: java.util.List getNeighboringCellInfo()> ->_NONE_
<android.support.v4.view.ViewCompat: int getLayerType(android.view.View)> ->_NONE_
<org.apache.http.conn.scheme.SchemeRegistry: java.util.List getSchemeNames()> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)> ->_NONE_
<android.nfc.Tag: int getConnectedTechnology()> ->_NONE_
<org.apache.harmony.crypto.internal.NullCipherSpi: int engineUpdate(byte[],int,int,byte[],int)> ->_NONE_
<android.widget.DateTimeView: java.text.DateFormat getDateFormat()> ->_NONE_
<android.net.wifi.WifiStateMachine: void setWifiState(int)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setContentDescription(java.lang.CharSequence)> ->_NONE_
<org.kxml2.io.KXmlSerializer: java.lang.String getNamespace()> ->_NONE_
<java.lang.String: void getBytes(int,int,byte[],int)> ->_NONE_
<android.webkit.WebViewDatabaseClassic: java.util.ArrayList getFormData(java.lang.String,java.lang.String)> ->_NONE_
<java.util.Date: void setYear(int)> ->_NONE_
<org.apache.xalan.templates.ElemNumber: org.apache.xpath.XPath getFrom()> ->_NONE_
<android.widget.TextView: void setTypeface(android.graphics.Typeface)> ->_NONE_
<java.util.Calendar: int getActualMinimum(int)> ->_NONE_
<android.telephony.SmsManager: java.util.ArrayList getAllMessagesFromIcc()> ->_NONE_
<android.telephony.cdma.CdmaCellLocation: void setCellLocationData(int,int,int)> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: org.apache.xml.utils.XMLString getStringValue(int)> ->_NONE_
<org.apache.james.mime4j.field.address.parser.SimpleCharStream: int getColumn()> ->_NONE_
<android.location.LocationManager: void requestLocationUpdates(android.location.LocationRequest,android.location.LocationListener,android.os.Looper)> ->_NONE_
<org.jivesoftware.smack.packet.Registration: java.lang.String getInstructions()> ->_NONE_
<android.app.ActivityManagerProxy: void updatePersistentConfiguration(android.content.res.Configuration)> ->_NONE_
<java.security.cert.X509CertSelector: byte[] getSubjectAsBytes()> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationInfo: void setResponse(java.lang.String)> ->_NONE_
<android.text.TextPaint: void setUnderlineText(int,float)> ->_NONE_
<android.opengl.GLLogWrapper: java.lang.String getHintMode(int)> ->_NONE_
<org.xml.sax.helpers.AttributesImpl: java.lang.String getType(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getInstance(java.security.interfaces.RSAPrivateKey)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: org.apache.xml.dtm.ref.DTMStringPool getPrefixNameTable()> ->_NONE_
<android.animation.ValueAnimator: void setIntValues(int[])> ->_NONE_
<android.net.LinkProperties: java.util.Collection getDnses()> ->_NONE_
<org.jivesoftware.smack.util.Cache: void setMaxLifetime(long)> ->_NONE_
<android.webkit.WebHistoryItem: int getId()> ->_NONE_
<org.apache.http.impl.entity.EntitySerializer: void serialize(org.apache.http.io.SessionOutputBuffer,org.apache.http.HttpMessage,org.apache.http.HttpEntity)> ->_NONE_
<org.apache.xpath.CachedXPathAPI: org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,java.lang.String,org.apache.xml.utils.PrefixResolver)> ->_NONE_
<android.text.StaticLayout: int getTopPadding()> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CRLEntryImpl: java.util.Set getNonCriticalExtensionOIDs()> ->_NONE_
<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)> ->_NONE_
<gov.nist.javax.sip.header.Allow: void setMethod(java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.AlertProtocol: void setProcessed()> ->_NONE_
<android.app.ActivityManagerProxy: void activitySlept(android.os.IBinder)> ->_NONE_
<android.media.videoeditor.Overlay: android.media.videoeditor.MediaItem getMediaItem()> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.EventHeader getEventHeader()> ->_NONE_
<android.content.Intent: char[] getCharArrayExtra(java.lang.String)> ->_NONE_
<android.net.LocalSocket: void connect(android.net.LocalSocketAddress,int)> ->_NONE_
<libcore.net.http.ChunkedOutputStream: void write(byte[],int,int)> ->_NONE_
<jp.co.omronsoft.openwnn.KeyboardView: void setPreviewEnabled(boolean)> ->_NONE_
<org.jivesoftware.smack.packet.LoginRequest: java.lang.String getDeviceId()> ->_NONE_
<java.security.SignedObject: java.lang.String getAlgorithm()> ->_NONE_
<android.util.MonthDisplayHelper: int getWeekStartDay()> ->_NONE_
<gov.nist.javax.sip.header.AcceptEncoding: float getQValue()> ->_NONE_
<java.nio.DatagramChannelImpl: boolean isConnected()> ->_NONE_
<libcore.net.http.HttpResponseCache: libcore.net.http.HttpEngine getHttpEngine(java.net.HttpURLConnection)> ->_NONE_
<android.media.effect.Effect: void setUpdateListener(android.media.effect.EffectUpdateListener)> ->_NONE_
<org.apache.xalan.templates.ElemForEach: org.apache.xalan.templates.ElemSort getSortElem(int)> ->_NONE_
<java.security.cert.X509CertSelector: boolean[] getKeyUsage()> ->_NONE_
<org.apache.xpath.axes.LocPathIterator: boolean getExpandEntityReferences()> ->_NONE_
<android.widget.TextView: android.view.AccessibilityIterators$TextSegmentIterator getIteratorForGranularity(int)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: org.w3c.dom.Node getNode(int)> ->_NONE_
<java.sql.Timestamp: int getNanos()> ->_NONE_
<android.net.BaseNetworkStateTracker: void setDependencyMet(boolean)> ->_NONE_
<libcore.icu.NativeBreakIterator: libcore.icu.NativeBreakIterator getSentenceInstance(java.util.Locale)> ->_NONE_
<android.preference.Preference: android.preference.PreferenceManager getPreferenceManager()> ->_NONE_
<org.apache.xalan.xslt.SecuritySupport12: long getLastModified(java.io.File)> ->_NONE_
<org.apache.xalan.templates.TemplateSubPatternAssociation: org.apache.xpath.patterns.StepPattern getStepPattern()> ->_NONE_
<gov.nist.javax.sip.stack.MessageProcessor: java.lang.String getSavedIpAddress()> ->_NONE_
<android.view.MotionEvent: int getToolType(int)> ->_NONE_
<android.net.ProxyProperties: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<libcore.io.Streams: long skipByReading(java.io.InputStream,long)> ->_NONE_
<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.WhiteSpaceInfo getWhiteSpaceInfo(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM)> ->_NONE_
<android.speech.tts.TextToSpeech: int setEngineByPackageName(java.lang.String)> ->_NONE_
<org.apache.http.message.BasicHeaderElement: java.lang.String getValue()> ->_NONE_
<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getLocalName()> ->_NONE_
<org.apache.harmony.xml.dom.ElementImpl: java.lang.String getAttribute(java.lang.String)> ->_NONE_
<android.net.wifi.WifiStateMachine: void setScanOnlyMode(boolean)> ->_NONE_
<gov.nist.javax.sip.header.SIPHeaderList: java.lang.StringBuffer encode(java.lang.StringBuffer)> ->_NONE_
<android.test.mock.MockResources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)> ->_NONE_
<android.view.WindowManagerImpl: android.view.Display getDefaultDisplay()> ->_NONE_
<android.content.pm.RegisteredServicesCache: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int)> ->_NONE_
<java.net.DatagramSocket: void setReceiveBufferSize(int)> ->_NONE_
<java.lang.Package: java.lang.Package[] getPackages()> ->_NONE_
<android.widget.Toast: void setMargin(float,float)> ->_NONE_
<org.apache.xalan.templates.AVTPartXPath: java.lang.String getSimpleString()> ->_NONE_
<org.apache.xml.serializer.SecuritySupport: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)> ->_NONE_
<android.view.Window: int getForcedWindowFlags()> ->_NONE_
<gov.nist.javax.sip.header.ims.ServiceRoute: java.lang.String encodeBody()> ->_NONE_
<java.net.Inet6Address: java.net.Inet6Address getByAddress(java.lang.String,byte[],java.net.NetworkInterface)> ->_NONE_
<org.apache.http.message.ParserCursor: int getLowerBound()> ->_NONE_
<org.apache.xml.serializer.utils.AttList: java.lang.String getValue(java.lang.String)> ->_NONE_
<android.preference.MultiCheckPreference: java.lang.String[] getEntryValues()> ->_NONE_
<android.content.pm.PackageParser: android.content.pm.PackageParser$Activity parseActivity(android.content.pm.PackageParser$Package,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,int,java.lang.String[],boolean,boolean)> ->_NONE_
<android.media.videoeditor.AudioTrack: java.lang.String getFilename()> ->_NONE_
<java.nio.SocketChannelImpl: java.io.FileDescriptor getFD()> ->_NONE_
<android.telephony.SignalStrength: int getDbm()> ->_NONE_
<org.apache.harmony.security.x509.SubjectPublicKeyInfo: byte[] getSubjectPublicKey()> ->_NONE_
<android.net.wifi.p2p.WifiP2pWfdInfo: int getDeviceType()> ->_NONE_
<gov.nist.javax.sip.header.RAck: java.lang.String getMethod()> ->_NONE_
<android.content.res.Resources: void getValue(java.lang.String,android.util.TypedValue,boolean)> ->_NONE_
<jp.co.omronsoft.openwnn.KeyboardView: jp.co.omronsoft.openwnn.KeyboardView$OnKeyboardActionListener getOnKeyboardActionListener()> ->_NONE_
<android.app.backup.AbsoluteFileBackupHelper: void writeNewStateDescription(android.os.ParcelFileDescriptor)> ->_NONE_
<org.jivesoftware.smack.ConnectionConfiguration: void setVerifyChainEnabled(boolean)> ->_NONE_
<java.lang.reflect.Field: byte getByte(java.lang.Object)> ->_NONE_
<android.widget.TextView: void setPrivateImeOptions(java.lang.String)> ->_NONE_
<android.media.videoeditor.OverlayFrame: void setResizedRGBSize(int,int)> ->_NONE_
<org.apache.xml.serializer.utils.URI: java.lang.String getHost()> ->_NONE_
<android.app.BackStackRecord: android.app.FragmentTransaction replace(int,android.app.Fragment)> ->_NONE_
<org.apache.xml.utils.StylesheetPIHandler: java.lang.String getBaseId()> ->_NONE_
<android.view.accessibility.AccessibilityRecord: int getWindowId()> ->_NONE_
<org.apache.xpath.objects.XNumber: java.lang.String getTypeString()> ->_NONE_
<org.apache.xpath.axes.WalkerFactory: void diagnoseIterator(java.lang.String,int,org.apache.xpath.compiler.Compiler)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: java.lang.String getAlgorithm()> ->_NONE_
<android.graphics.Bitmap: int getScaledHeight(android.util.DisplayMetrics)> ->_NONE_
<java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newSingleThreadScheduledExecutor(java.util.concurrent.ThreadFactory)> ->_NONE_
<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.Collection getSharedQueuedThreads()> ->_NONE_
<org.apache.xpath.NodeSet: boolean getShouldCacheNodes()> ->_NONE_
<android.mtp.MtpServer: void sendObjectAdded(int)> ->_NONE_
<android.graphics.drawable.GradientDrawable: void setSize(int,int)> ->_NONE_
<org.apache.http.cookie.CookieSpecRegistry: org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String,org.apache.http.params.HttpParams)> ->_NONE_
<gov.nist.javax.sip.header.Warning: java.lang.String getAgent()> ->_NONE_
<android.view.View: boolean getFilterTouchesWhenObscured()> ->_NONE_
<jp.co.omronsoft.openwnn.KeyboardView: jp.co.omronsoft.openwnn.Keyboard getKeyboard()> ->_NONE_
<javax.xml.xpath.XPathFactoryFinder: javax.xml.xpath.XPathFactory _newFactory(java.lang.String)> ->_NONE_
<java.nio.DatagramChannelImpl: int send(java.nio.ByteBuffer,java.net.SocketAddress)> ->_NONE_
<android.widget.SearchView: void setOnCloseListener(android.widget.SearchView$OnCloseListener)> ->_NONE_
<org.apache.xalan.templates.ElemApplyTemplates: void execute(org.apache.xalan.transformer.TransformerImpl)> ->_NONE_
<android.widget.HeaderViewListAdapter: android.widget.ListAdapter getWrappedAdapter()> ->_NONE_
<org.apache.xpath.axes.MatchPatternIterator: void setRoot(int,java.lang.Object)> ->_NONE_
<android.text.method.QwertyKeyListener: android.text.method.QwertyKeyListener getInstanceForFullKeyboard()> ->_NONE_
<android.net.http.Headers: void setExpires(java.lang.String)> ->_NONE_
<android.widget.HeaderViewListAdapter: int getItemViewType(int)> ->_NONE_
<android.content.res.Configuration: void setTo(android.content.res.Configuration)> ->_NONE_
<android.webkit.WebSettings: void setBlockNetworkLoads(boolean)> ->_NONE_
<android.location.Address: java.lang.String getSubAdminArea()> ->_NONE_
<android.app.MediaRouteButton: void setCheatSheetEnabled(boolean)> ->_NONE_
<android.net.http.Headers: void setProxyAuthenticate(java.lang.String)> ->_NONE_
<android.os.Bundle: short getShort(java.lang.String,short)> ->_NONE_
<android.app.ActivityManager: android.app.ActivityManager$TaskThumbnails getTaskThumbnails(int)> ->_NONE_
<java.util.ResourceBundle: java.lang.Object getObject(java.lang.String)> ->_NONE_
<org.apache.http.client.params.ClientParamBean: void setAllowCircularRedirects(boolean)> ->_NONE_
<android.hardware.display.DisplayManagerGlobal: android.view.Display getCompatibleDisplay(int,android.view.CompatibilityInfoHolder)> ->_NONE_
<android.graphics.Shader: void setLocalMatrix(android.graphics.Matrix)> ->_NONE_
<android.media.JetPlayer: int getMaxTracks()> ->_NONE_
<gov.nist.javax.sip.address.TelephoneNumber: java.lang.String getPhoneNumber()> ->_NONE_
<gov.nist.javax.sip.ListeningPointImpl: gov.nist.javax.sip.header.Via getViaHeader()> ->_NONE_
<android.test.ProviderTestCase: android.test.mock.MockContentResolver getMockContentResolver()> ->_NONE_
<org.apache.http.message.BasicHttpResponse: java.lang.String getReason(int)> ->_NONE_
<android.media.AudioService: void onSetA2dpConnectionState(android.bluetooth.BluetoothDevice,int)> ->_NONE_
<android.media.MediaExtractor: android.media.MediaFormat getTrackFormat(int)> ->_NONE_
<android.nfc.tech.MifareClassic: boolean isConnected()> ->_NONE_
<android.media.MediaPlayer: void setSurface(android.view.Surface)> ->_NONE_
<gov.nist.javax.sip.address.Authority: void setHost(gov.nist.core.Host)> ->_NONE_
<android.test.mock.MockResources: void getValue(java.lang.String,android.util.TypedValue,boolean)> ->_NONE_
<android.widget.TextView: int getMinHeight()> ->_NONE_
<android.os.ParcelUuid: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<gov.nist.javax.sip.header.Protocol: java.lang.String getTransport()> ->_NONE_
<org.apache.xalan.templates.XUnresolvedVariable: void setVarStackPos(int)> ->_NONE_
<android.view.VelocityTracker: android.view.VelocityTracker getNextPoolable()> ->_NONE_
<android.content.res.Resources: android.content.res.XmlResourceParser getAnimation(int)> ->_NONE_
<android.support.v4.content.CursorLoader: void setProjection(java.lang.String[])> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.message.Response getResponse()> ->_NONE_
<org.kxml2.io.KXmlParser: void readDoctype(boolean)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: boolean getReuseAddress()> ->_NONE_
<java.nio.HeapByteBuffer: int getInt()> ->_NONE_
<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityRecord getRecord(int)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setScrollable(java.lang.Object,boolean)> ->_NONE_
<android.os.SystemService: android.os.SystemService$State getState(java.lang.String)> ->_NONE_
<android.widget.HeaderViewListAdapter: java.lang.Object getItem(int)> ->_NONE_
<java.text.DecimalFormatSymbols: char getPerMill()> ->_NONE_
<android.webkit.WebViewClassic: void getSelectionHandles(int[])> ->_NONE_
<android.preference.Preference: void setSelectable(boolean)> ->_NONE_
<org.apache.james.mime4j.field.address.MailboxList: org.apache.james.mime4j.field.address.Mailbox get(int)> ->_NONE_
<android.text.style.TextAppearanceSpan: int getTextSize()> ->_NONE_
<android.app.ActivityManager: void getMemoryInfo(android.app.ActivityManager$MemoryInfo)> ->_NONE_
<android.view.View: int getNextFocusUpId()> ->_NONE_
<android.app.DialogFragment: android.app.Dialog getDialog()> ->_NONE_
<javax.crypto.spec.PBEKeySpec: int getKeyLength()> ->_NONE_
<javax.xml.datatype.Duration: javax.xml.namespace.QName getXMLSchemaType()> ->_NONE_
<android.net.LinkSocket: java.util.Set getTrackedCapabilities()> ->_NONE_
<libcore.icu.NativeDecimalFormat: void setParseIntegerOnly(boolean)> ->_NONE_
<gov.nist.javax.sip.header.ExtensionHeaderImpl: void setName(java.lang.String)> ->_NONE_
<android.renderscript.ScriptIntrinsicYuvToRGB: android.renderscript.Script$KernelID getKernelID()> ->_NONE_
<javax.net.ssl.KeyManagerFactory: java.lang.String getDefaultAlgorithm()> ->_NONE_
<android.net.LinkSocket: void connect(java.lang.String,int,int)> ->_NONE_
<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String getValue()> ->_NONE_
<android.speech.tts.FileSynthesisCallback: int audioAvailable(byte[],int,int)> ->_NONE_
<java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)> ->_NONE_
<java.io.ByteArrayInputStream: int read(byte[],int,int)> ->_NONE_
<android.view.ViewRootImpl: void getGfxInfo(android.view.View,int[])> ->_NONE_
<android.preference.Preference: void setSummary(java.lang.CharSequence)> ->_NONE_
<android.view.Window: void setDimAmount(float)> ->_NONE_
<org.apache.xalan.transformer.XalanTransformState: javax.xml.transform.Transformer getTransformer()> ->_NONE_
<org.xml.sax.helpers.XMLReaderFactory: org.xml.sax.XMLReader createXMLReader(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: void setStylesheetParent(org.apache.xalan.templates.Stylesheet)> ->_NONE_
<org.apache.xalan.transformer.KeyTable: org.apache.xalan.transformer.KeyIterator getKeyIterator()> ->_NONE_
<android.support.v4.view.GestureDetectorCompat: void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)> ->_NONE_
<android.webkit.WebView: void ensureProviderCreated()> ->_NONE_
<android.graphics.drawable.InsetDrawable: int getChangingConfigurations()> ->_NONE_
<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()> ->_NONE_
<android.app.Dialog: android.view.View getCurrentFocus()> ->_NONE_
<org.apache.james.mime4j.codec.EncoderUtil: java.lang.String encodeB(byte[])> ->_NONE_
<org.jivesoftware.smack.util.StringUtils: java.lang.String parseBareAddress(java.lang.String)> ->_NONE_
<java.net.Socket: boolean getReuseAddress()> ->_NONE_
<android.mtp.MtpDatabase: int[] getSupportedObjectProperties(int)> ->_NONE_
<android.content.pm.ContainerEncryptionParams: java.security.spec.AlgorithmParameterSpec getMacSpec()> ->_NONE_
<java.security.cert.PKIXParameters: void setInitialPolicies(java.util.Set)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeList: int getLength()> ->_NONE_
<java.io.FilterInputStream: int read(byte[])> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: int getNextNodeIdentity(int)> ->_NONE_
<android.content.SyncStorageEngine: android.util.Pair getBackoff(android.accounts.Account,int,java.lang.String)> ->_NONE_
<org.apache.xpath.axes.WalkerFactory: int getAxisFromStep(org.apache.xpath.compiler.Compiler,int)> ->_NONE_
<android.os.RemoteCallback: void sendResult(android.os.Bundle)> ->_NONE_
<android.app.ListActivity: void setListAdapter(android.widget.ListAdapter)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.CertPinManager: java.lang.String getMatchingCN(java.lang.String)> ->_NONE_
<android.graphics.drawable.GradientDrawable: int getChangingConfigurations()> ->_NONE_
<gov.nist.javax.sip.header.ContentType: java.lang.String getContentSubType()> ->_NONE_
<android.database.sqlite.SQLiteConnection: void close()> ->_NONE_
<java.text.MessageFormat: java.lang.Object parseObject(java.lang.String,java.text.ParsePosition)> ->_NONE_
<org.apache.xpath.axes.NodeSequence: void setShouldCacheNodes(boolean)> ->_NONE_
<org.ccil.cowan.tagsoup.jaxp.SAXParserImpl: void setFeature(java.lang.String,boolean)> ->_NONE_
<org.apache.xml.serializer.ToStream: void writeAttrString(java.io.Writer,java.lang.String,java.lang.String)> ->_NONE_
<javax.sip.RequestEvent: javax.sip.ServerTransaction getServerTransaction()> ->_NONE_
<android.bluetooth.BluetoothTetheringDataTracker: void setPolicyDataEnable(boolean)> ->_NONE_
<org.apache.http.impl.client.RequestWrapper: org.apache.http.RequestLine getRequestLine()> ->_NONE_
<android.os.SystemProperties: int getInt(java.lang.String,int)> ->_NONE_
<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.ClassLoader getBaseClassLoader()> ->_NONE_
<org.apache.james.mime4j.field.address.Group: java.lang.String getName()> ->_NONE_
<android.widget.TextView: int getCompoundDrawablePadding()> ->_NONE_
<gov.nist.javax.sip.address.AddressImpl: java.lang.StringBuffer encode(java.lang.StringBuffer)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: org.w3c.dom.TypeInfo getSchemaTypeInfo()> ->_NONE_
<org.apache.xpath.NodeSet: boolean getExpandEntityReferences()> ->_NONE_
<gov.nist.javax.sip.stack.MessageChannel: gov.nist.core.HostPort getHostPort()> ->_NONE_
<android.view.MotionEvent: int getPointerCount()> ->_NONE_
<android.graphics.drawable.LayerDrawable: int getOpacity()> ->_NONE_
<android.text.TextLine: int getOffsetBeforeAfter(int,int,int,boolean,int,boolean)> ->_NONE_
<libcore.io.DiskLruCache: java.io.File getDirectory()> ->_NONE_
<android.content.Entity: android.content.ContentValues getEntityValues()> ->_NONE_
<android.inputmethodservice.IInputMethodWrapper: android.view.inputmethod.InputMethod getInternalInputMethod()> ->_NONE_
<android.speech.tts.EventLogger: int getUtteranceLength()> ->_NONE_
<android.graphics.Paint: android.graphics.Paint$FontMetricsInt getFontMetricsInt()> ->_NONE_
<android.database.BulkCursorProxy: android.os.Bundle getExtras()> ->_NONE_
<android.app.Activity: android.view.WindowManager getWindowManager()> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: void setRemoteTag(java.lang.String)> ->_NONE_
<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])> ->_NONE_
<android.widget.Toast: int getXOffset()> ->_NONE_
<android.view.View: float getTranslationY()> ->_NONE_
<android.bluetooth.BluetoothHealthAppConfiguration: int getDataType()> ->_NONE_
<org.apache.http.impl.SocketHttpServerConnection: int getRemotePort()> ->_NONE_
<android.preference.DialogPreference: android.app.Dialog getDialog()> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: void setOutputProperty(java.lang.String,java.lang.String)> ->_NONE_
<android.view.accessibility.AccessibilityRecord: int getAddedCount()> ->_NONE_
<org.apache.xml.serializer.Version: java.lang.String getProduct()> ->_NONE_
<android.widget.PopupWindow: void setTouchable(boolean)> ->_NONE_
<android.graphics.Matrix: void setSinCos(float,float,float,float)> ->_NONE_
<android.bluetooth.BluetoothAdapter: int getProfileConnectionState(int)> ->_NONE_
<android.bluetooth.BluetoothAdapter: android.bluetooth.IBluetoothManager getBluetoothManager()> ->_NONE_
<android.telephony.ServiceState: int getRadioTechnology()> ->_NONE_
<android.filterfw.core.FilterPort: void setChecksType(boolean)> ->_NONE_
<java.util.Date: int getDate()> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: org.xml.sax.ext.LexicalHandler getLexicalHandler()> ->_NONE_
<android.view.inputmethod.CorrectionInfo: java.lang.CharSequence getOldText()> ->_NONE_
<android.speech.srec.WaveHeader: android.speech.srec.WaveHeader setFormat(short)> ->_NONE_
<android.view.View: float getTranslationX()> ->_NONE_
<android.inputmethodservice.InputMethodService: void setTheme(int)> ->_NONE_
<libcore.icu.RuleBasedCollatorICU: java.text.CollationKey getCollationKey(java.lang.String)> ->_NONE_
<org.apache.xpath.axes.NodeSequence: int getAnalysisBits()> ->_NONE_
<org.apache.xpath.XPathContext: void setPrimaryReader(org.xml.sax.XMLReader)> ->_NONE_
<android.widget.TextClock: java.lang.CharSequence getFormat12Hour()> ->_NONE_
<android.filterpacks.imageproc.BlackWhiteFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<java.security.spec.EllipticCurve: byte[] getSeed()> ->_NONE_
<android.renderscript.Sampler: android.renderscript.Sampler$Value getWrapT()> ->_NONE_
<android.renderscript.Sampler: android.renderscript.Sampler$Value getWrapS()> ->_NONE_
<android.test.mock.MockContext: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)> ->_NONE_
<android.database.sqlite.SQLiteConnection: void execute(java.lang.String,java.lang.Object[],android.os.CancellationSignal)> ->_NONE_
<org.apache.xalan.templates.StylesheetRoot: int getImportNumber(org.apache.xalan.templates.StylesheetComposed)> ->_NONE_
<android.content.Intent: android.net.Uri getData()> ->_NONE_
<android.test.InstrumentationTestCase: void runMethod(java.lang.reflect.Method,int,boolean)> ->_NONE_
<org.apache.xalan.templates.OutputProperties: boolean getBooleanProperty(org.apache.xml.utils.QName)> ->_NONE_
<android.database.BulkCursorProxy: int requery(android.database.IContentObserver)> ->_NONE_
<android.view.ViewRootImpl: void dispatchCloseSystemDialogs(java.lang.String)> ->_NONE_
<android.view.Window: void setDefaultWindowFormat(int)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: int getMaxMessageSize()> ->_NONE_
<android.database.CursorWindow: java.lang.String getName()> ->_NONE_
<android.webkit.WebSettings: void setGeolocationEnabled(boolean)> ->_NONE_
<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.stack.SIPDialog getDialog(java.lang.String)> ->_NONE_
<org.apache.james.mime4j.field.address.Mailbox: java.lang.String getAddressString()> ->_NONE_
<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.stack.MessageChannel getRequestChannel()> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: java.lang.String getToTag()> ->_NONE_
<android.net.wifi.WifiStateMachine: void startScan(boolean)> ->_NONE_
<org.jivesoftware.smack.packet.Packet: java.lang.String getPacketID()> ->_NONE_
<android.view.animation.Animation: void setRepeatCount(int)> ->_NONE_
<android.net.UrlQuerySanitizer: java.lang.String unescape(java.lang.String)> ->_NONE_
<android.net.http.SslCertificate: java.lang.String getSerialNumber(java.security.cert.X509Certificate)> ->_NONE_
<android.media.audiofx.AudioEffect: int getParameter(int,int[])> ->_NONE_
<android.graphics.Bitmap: int getScaledHeight(int)> ->_NONE_
<android.widget.ListView: void setSelectionInt(int)> ->_NONE_
<org.kxml2.io.KXmlParser: java.lang.String getAttributePrefix(int)> ->_NONE_
<android.graphics.Paint: void setBidiFlags(int)> ->_NONE_
<org.apache.harmony.security.x509.PolicyInformation: java.lang.String getPolicyIdentifier()> ->_NONE_
<org.apache.xalan.transformer.TransformerHandlerImpl: void skippedEntity(java.lang.String)> ->_NONE_
<android.text.format.DateFormat: java.lang.String getMonthString(java.util.Calendar,int,int)> ->_NONE_
<gov.nist.javax.sip.header.Event: java.lang.StringBuffer encodeBody(java.lang.StringBuffer)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: int getChildCount(java.lang.Object)> ->_NONE_
<org.kxml2.io.KXmlParser: int getAttributeCount()> ->_NONE_
<org.ccil.cowan.tagsoup.jaxp.SAXParserImpl: void setProperty(java.lang.String,java.lang.Object)> ->_NONE_
<android.graphics.Paint: android.graphics.Typeface getTypeface()> ->_NONE_
<java.nio.HeapByteBuffer: char getChar()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: boolean getWantClientAuth()> ->_NONE_
<android.content.MutableContextWrapper: void setBaseContext(android.content.Context)> ->_NONE_
<org.apache.xml.dtm.DTMManager: boolean getSource_location()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: int getOwnerDocument(int)> ->_NONE_
<jp.co.omronsoft.openwnn.SymbolList: void setPreferences(android.content.SharedPreferences)> ->_NONE_
<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.templates.Stylesheet getStylesheet()> ->_NONE_
<android.telephony.SmsMessage: android.telephony.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean)> ->_NONE_
<android.nfc.tech.NfcB: void reconnect()> ->_NONE_
<android.widget.DialerFilter: java.lang.CharSequence getLetters()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.CharSequence getPackageName(java.lang.Object)> ->_NONE_
<android.preference.Preference: java.util.Set getPersistedStringSet(java.util.Set)> ->_NONE_
<android.app.DownloadManager: void setAccessAllDownloads(boolean)> ->_NONE_
<org.apache.james.mime4j.field.ContentTypeField: org.apache.james.mime4j.field.contenttype.parser.ParseException getParseException()> ->_NONE_
<android.nfc.tech.NfcA: void reconnect()> ->_NONE_
<java.io.RandomAccessFile: int read(byte[])> ->_NONE_
<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)> ->_NONE_
<android.renderscript.Script: void setVar(int,long)> ->_NONE_
<android.webkit.SelectActionModeCallback: void setWebView(android.webkit.WebViewClassic)> ->_NONE_
<java.util.zip.ZipEntry: java.lang.String getComment()> ->_NONE_
<org.apache.xpath.axes.LocPathIterator: int getRoot()> ->_NONE_
<android.view.MotionEvent: int getHistorySize()> ->_NONE_
<java.io.WriteAbortedException: java.lang.String getMessage()> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: void sendRequest(javax.sip.ClientTransaction,boolean)> ->_NONE_
<android.widget.Chronometer: void setStarted(boolean)> ->_NONE_
<javax.crypto.spec.PBEKeySpec: byte[] getSalt()> ->_NONE_
<android.net.Credentials: int getPid()> ->_NONE_
<org.apache.http.message.BasicLineParser: org.apache.http.ProtocolVersion parseProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)> ->_NONE_
<android.widget.CompoundButton: int getCompoundPaddingRight()> ->_NONE_
<android.view.GLES20DisplayList: void setLeft(int)> ->_NONE_
<org.apache.xalan.templates.ElemValueOf: void setSelect(org.apache.xpath.XPath)> ->_NONE_
<android.nfc.tech.NfcF: void reconnect()> ->_NONE_
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)> ->_NONE_
<android.os.Parcel: void writeStrongInterface(android.os.IInterface)> ->_NONE_
<android.nfc.tech.NfcBarcode: byte[] getBarcode()> ->_NONE_
<android.database.MatrixCursor: byte[] getBlob(int)> ->_NONE_
<android.media.AudioService: int getRingerMode()> ->_NONE_
<android.view.View: int getWidth()> ->_NONE_
<android.util.TypedValue: float getFraction(float,float)> ->_NONE_
<org.apache.http.client.methods.HttpRequestBase: void setURI(java.net.URI)> ->_NONE_
<android.net.http.Connection: byte[] getBuf()> ->_NONE_
<org.apache.xalan.templates.ElemNumber: org.apache.xalan.templates.AVT getLang()> ->_NONE_
<javax.net.ssl.HandshakeCompletedEvent: java.security.Principal getLocalPrincipal()> ->_NONE_
<android.text.method.ScrollingMovementMethod: android.text.method.MovementMethod getInstance()> ->_NONE_
<android.text.SpannableStringInternal: int getSpanEnd(java.lang.Object)> ->_NONE_
<libcore.io.Streams: void readFully(java.io.InputStream,byte[],int,int)> ->_NONE_
<android.text.style.StyleSpan: int getStyle()> ->_NONE_
<android.location.LocationRequest: android.location.LocationRequest setInterval(long)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: void setUseSessionTickets(boolean)> ->_NONE_
<java.nio.CharBuffer: java.nio.CharBuffer get(char[])> ->_NONE_
<java.security.spec.ECGenParameterSpec: java.lang.String getName()> ->_NONE_
<gov.nist.javax.sip.header.SubscriptionState: java.lang.StringBuffer encodeBody(java.lang.StringBuffer)> ->_NONE_
<android.widget.NumberPicker: void setFormatter(android.widget.NumberPicker$Formatter)> ->_NONE_
<android.app.SearchableInfo: int getVoicePromptTextId()> ->_NONE_
<org.apache.james.mime4j.message.MemoryBinaryBody: void setParent(org.apache.james.mime4j.message.Entity)> ->_NONE_
<android.widget.CursorTreeAdapter: android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)> ->_NONE_
<java.io.EmulatedFieldsForLoading: short get(java.lang.String,short)> ->_NONE_
<android.preference.PreferenceGroupAdapter: android.preference.Preference getItem(int)> ->_NONE_
<org.apache.xpath.patterns.StepPattern: org.apache.xpath.patterns.StepPattern getRelativePathPattern()> ->_NONE_
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.Stylesheet getStylesheetParent()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: org.xml.sax.ext.LexicalHandler getLexicalHandler()> ->_NONE_
<android.widget.TextView: java.util.Locale getTextServicesLocale()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setAddedCount(int)> ->_NONE_
<org.apache.xalan.processor.TransformerFactoryImpl: java.lang.String getDOMsystemID()> ->_NONE_
<java.sql.DriverManager: void setLogStream(java.io.PrintStream)> ->_NONE_
<android.content.pm.PackageParser: android.content.pm.PackageParser$Permission parsePermission(android.content.pm.PackageParser$Package,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,java.lang.String[])> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPublicKey: java.security.interfaces.DSAParams getParams()> ->_NONE_
<android.net.sip.SimpleSessionDescription: void setAttribute(java.lang.String,java.lang.String)> ->_NONE_
<android.nfc.tech.MifareClassic: void setTimeout(int)> ->_NONE_
<android.content.CursorLoader: java.lang.String getSelection()> ->_NONE_
<gov.nist.javax.sip.ResponseEventExt: gov.nist.javax.sip.ClientTransactionExt getOriginalTransaction()> ->_NONE_
<android.speech.tts.TextToSpeech: int addEarcon(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: java.lang.Runnable getDelegatedTask()> ->_NONE_
<java.lang.Thread: void setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: java.lang.String getContentType()> ->_NONE_
<android.speech.tts.SynthesisRequest: void setPitch(int)> ->_NONE_
<android.widget.RelativeLayout: android.widget.RelativeLayout$LayoutParams getRelatedViewParams(int[],int)> ->_NONE_
<java.util.concurrent.atomic.AtomicReferenceArray: void set(int,java.lang.Object)> ->_NONE_
<android.nfc.tech.NfcV: void reconnect()> ->_NONE_
<java.text.BreakIterator: java.text.BreakIterator getWordInstance(java.util.Locale)> ->_NONE_
<android.app.ActivityManagerProxy: void moveTaskBackwards(int)> ->_NONE_
<org.apache.harmony.security.x509.IssuingDistributionPoint: byte[] getEncoded()> ->_NONE_
<android.net.wifi.p2p.WifiP2pWfdInfo: void setWfdEnabled(boolean)> ->_NONE_
<android.filterfw.core.MutableFrameFormat: void setDimensions(int[])> ->_NONE_
<android.widget.EditText: void setText(java.lang.CharSequence,android.widget.TextView$BufferType)> ->_NONE_
<java.util.SimpleTimeZone: int getOffset(long)> ->_NONE_
<android.security.KeyStore: byte[] get(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.ElemLiteralResult: void setExcludeResultPrefixes(org.apache.xml.utils.StringVector)> ->_NONE_
<org.apache.xml.utils.UnImplNode: org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)> ->_NONE_
<java.text.BreakIterator: java.util.Locale[] getAvailableLocales()> ->_NONE_
<android.graphics.drawable.NinePatchDrawable: int getMinimumWidth()> ->_NONE_
<android.webkit.WebViewClassic: void setCertificate(android.net.http.SslCertificate)> ->_NONE_
<android.filterfw.core.FrameFormat: int getLength()> ->_NONE_
<android.view.animation.AnimationUtils: android.view.animation.LayoutAnimationController loadLayoutAnimation(android.content.Context,int)> ->_NONE_
<org.jivesoftware.smack.packet.BindAccountRequest: java.lang.String getDomain()> ->_NONE_
<org.apache.http.message.BasicHttpResponse: void setEntity(org.apache.http.HttpEntity)> ->_NONE_
<org.apache.xml.utils.res.XResources_sv: java.lang.Object[][] getContents()> ->_NONE_
<android.net.http.Headers: void setContentDisposition(java.lang.String)> ->_NONE_
<org.apache.http.util.CharArrayBuffer: void setLength(int)> ->_NONE_
<org.apache.xalan.templates.ElemVariable: void setSelect(org.apache.xpath.XPath)> ->_NONE_
<org.apache.xpath.axes.NodeSequence: int getCurrentPos()> ->_NONE_
<android.view.View: void setHorizontalFadingEdgeEnabled(boolean)> ->_NONE_
<java.io.BufferedWriter: void write(char[],int,int)> ->_NONE_
<android.view.Surface: void setFlags(int,int)> ->_NONE_
<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String getName()> ->_NONE_
<android.text.method.SingleLineTransformationMethod: char[] getReplacement()> ->_NONE_
<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: void setParameter(java.lang.String,java.lang.Object)> ->_NONE_
<android.net.wifi.p2p.WifiP2pManager: void removeLocalService(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.nsd.WifiP2pServiceInfo,android.net.wifi.p2p.WifiP2pManager$ActionListener)> ->_NONE_
<android.text.Layout: int getParagraphLeadingMargin(int)> ->_NONE_
<android.view.animation.Animation: void setFillEnabled(boolean)> ->_NONE_
<android.media.audiofx.AudioEffect: int getParameter(byte[],byte[])> ->_NONE_
<libcore.net.url.FileURLConnection: java.lang.String getContentType()> ->_NONE_
<org.apache.xalan.templates.DecimalFormatProperties: void setName(org.apache.xml.utils.QName)> ->_NONE_
<android.view.textservice.SentenceSuggestionsInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<java.math.BigDecimal: java.math.BigDecimal setScale(int,int)> ->_NONE_
<android.net.LinkSocket: void connect(java.net.SocketAddress)> ->_NONE_
<android.net.wifi.WifiNative: boolean setP2pPowerSave(java.lang.String,boolean)> ->_NONE_
<android.filterfw.core.FilterSurfaceView: int getSurfaceId()> ->_NONE_
<org.json.JSONObject: int getInt(java.lang.String)> ->_NONE_
<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean)> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: void setPrefixes(org.xml.sax.helpers.NamespaceSupport,boolean)> ->_NONE_
<android.media.JetPlayer: void setEventListener(android.media.JetPlayer$OnJetEventListener)> ->_NONE_
<android.text.method.MultiTapKeyListener: android.text.method.MultiTapKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize)> ->_NONE_
<android.util.NtpTrustedTime: long getCacheCertainty()> ->_NONE_
<gov.nist.javax.sip.header.Protocol: void setProtocol(java.lang.String)> ->_NONE_
<junit.textui.ResultPrinter: void printDefectTrace(junit.framework.TestFailure)> ->_NONE_
<libcore.net.http.HttpURLConnectionImpl: int getFixedContentLength()> ->_NONE_
<org.apache.http.impl.SocketHttpClientConnection: int getLocalPort()> ->_NONE_
<libcore.net.http.HttpURLConnectionImpl: java.lang.String getHeaderField(int)> ->_NONE_
<org.apache.harmony.security.x509.Extension: byte[] getExtnValue()> ->_NONE_
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: java.util.Map getTxtRecord()> ->_NONE_
<org.apache.http.protocol.SyncBasicHttpContext: void setAttribute(java.lang.String,java.lang.Object)> ->_NONE_
<android.telephony.TelephonyManager: java.lang.String getProcCmdLine()> ->_NONE_
<android.content.Intent: double[] getDoubleArrayExtra(java.lang.String)> ->_NONE_
<android.support.v4.content.CursorLoader: void setSelectionArgs(java.lang.String[])> ->_NONE_
<android.bluetooth.BluetoothA2dp: boolean shouldSendVolumeKeys(android.bluetooth.BluetoothDevice)> ->_NONE_
<android.net.rtp.RtpStream: int getLocalPort()> ->_NONE_
<java.io.FileInputStream: java.io.FileDescriptor getFD()> ->_NONE_
<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.javax.sip.header.SIPHeader parse()> ->_NONE_
<android.bluetooth.BluetoothHealth: void log(java.lang.String)> ->_NONE_
<android.widget.TextView: float getShadowRadius()> ->_NONE_
<org.apache.james.mime4j.field.datetime.parser.SimpleCharStream: int getLine()> ->_NONE_
<android.media.AudioService: void setBluetoothA2dpOnInt(boolean)> ->_NONE_
<android.location.LocationProvider: java.lang.String getName()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.ServerHello: void send(org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream)> ->_NONE_
<javax.xml.parsers.SAXParser: void parse(java.io.File,org.xml.sax.HandlerBase)> ->_NONE_
<android.media.videoeditor.MediaImageItem: long getTimelineDuration()> ->_NONE_
<org.apache.http.impl.client.AbstractAuthenticationHandler: java.util.List getAuthPreferences()> ->_NONE_
<android.os.BatteryStats: void dumpCheckinLocked(java.io.PrintWriter,java.lang.String[],java.util.List)> ->_NONE_
<android.sax.Children: android.sax.Element getOrCreate(android.sax.Element,java.lang.String,java.lang.String)> ->_NONE_
<org.apache.harmony.security.x509.AlgorithmIdentifier: byte[] getEncoded()> ->_NONE_
<org.apache.xml.serializer.SecuritySupport: boolean getFileExists(java.io.File)> ->_NONE_
<android.widget.RatingBar: void setOnRatingBarChangeListener(android.widget.RatingBar$OnRatingBarChangeListener)> ->_NONE_
<java.net.HttpCookie: int getVersion()> ->_NONE_
<android.view.inputmethod.InputMethodManager: java.util.Map getShortcutInputMethodsAndSubtypes()> ->_NONE_
<org.apache.xpath.Arg: org.apache.xml.utils.QName getQName()> ->_NONE_
<android.nfc.tech.MifareUltralight: void setTimeout(int)> ->_NONE_
<java.io.InputStreamReader: int read(char[],int,int)> ->_NONE_
<org.apache.xalan.templates.TemplateSubPatternAssociation: java.lang.String getTargetString()> ->_NONE_
<android.view.inputmethod.InputMethodManager: void updateSelection(android.view.View,int,int,int,int)> ->_NONE_
<android.view.accessibility.AccessibilityEvent: void setEventTime(long)> ->_NONE_
<gov.nist.javax.sip.header.SIPDate: java.lang.String getWkday()> ->_NONE_
<android.support.v4.view.ViewCompat: void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)> ->_NONE_
<android.renderscript.Mesh: int getVertexAllocationCount()> ->_NONE_
<java.nio.ShortBuffer: java.nio.ShortBuffer get(short[],int,int)> ->_NONE_
<org.apache.http.impl.SocketHttpClientConnection: void close()> ->_NONE_
<android.net.wifi.p2p.WifiP2pManager: void stopPeerDiscovery(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ActionListener)> ->_NONE_
<android.widget.ListPopupWindow: void setPromptView(android.view.View)> ->_NONE_
<libcore.net.http.RequestHeaders: int getMaxStaleSeconds()> ->_NONE_
<android.webkit.WebViewClassic: void clearCache(boolean)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: void setIdAttributeNode(org.w3c.dom.Attr,boolean)> ->_NONE_
<org.apache.xml.serializer.dom3.LSSerializerImpl: org.w3c.dom.ls.LSSerializerFilter getFilter()> ->_NONE_
<java.security.ProtectionDomain: java.security.CodeSource getCodeSource()> ->_NONE_
<android.widget.CalendarView: void setDate(long,boolean,boolean)> ->_NONE_
<android.media.effect.FilterGraphEffect: void setParameter(java.lang.String,java.lang.Object)> ->_NONE_
<java.util.zip.Inflater: long getBytesRead()> ->_NONE_
<android.webkit.WebView: void setVerticalScrollbarOverlay(boolean)> ->_NONE_
<gov.nist.javax.sip.header.SIPDate: int getYear()> ->_NONE_
<java.security.spec.EncodedKeySpec: byte[] getEncoded()> ->_NONE_
<android.media.MediaRouter: int getRouteCountStatic()> ->_NONE_
<org.jivesoftware.smack.provider.ProviderManager: java.lang.Object getRawXmlExtensionProvider(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.http.impl.io.ContentLengthOutputStream: void write(byte[],int,int)> ->_NONE_
<java.nio.DirectByteBuffer: short getShort(int)> ->_NONE_
<android.widget.ImageView: void setImageURI(android.net.Uri)> ->_NONE_
<android.location.Location: void setBearing(float)> ->_NONE_
<org.apache.harmony.security.x509.Extension: void dumpValue(java.lang.StringBuilder,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.message.ListMap: java.lang.Class getListClass(java.lang.Class)> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertImpl: boolean[] getSubjectUniqueID()> ->_NONE_
<android.content.SearchRecentSuggestionsProvider: void setupSuggestions(java.lang.String,int)> ->_NONE_
<org.apache.xalan.templates.AVT: void setURI(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.address.AddressImpl: void setAddressType(int)> ->_NONE_
<org.apache.xalan.templates.ElemFallback: void executeFallback(org.apache.xalan.transformer.TransformerImpl)> ->_NONE_
<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Body getBody()> ->_NONE_
<org.apache.xalan.processor.StylesheetHandler: java.lang.String getSystemId()> ->_NONE_
<gov.nist.javax.sip.message.SIPRequest: java.lang.String getDialogId(boolean)> ->_NONE_
<android.os.Bundle: long[] getLongArray(java.lang.String)> ->_NONE_
<java.text.DecimalFormatSymbols: char getMinusSign()> ->_NONE_
<junit.extensions.RepeatedTest: void run(junit.framework.TestResult)> ->_NONE_
<jp.co.omronsoft.openwnn.OpenWnnDictionaryImpl: int setApproxPattern(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xml.serializer.ToXMLSAXHandler: void setOutputFormat(java.util.Properties)> ->_NONE_
<android.text.style.SuperscriptSpan: int getSpanTypeId()> ->_NONE_
<android.security.KeyStore: byte[] getPubkey(byte[])> ->_NONE_
<android.database.sqlite.SQLiteSession: void endTransactionUnchecked(android.os.CancellationSignal,boolean)> ->_NONE_
<org.apache.http.conn.routing.RouteTracker: boolean isConnected()> ->_NONE_
<android.content.Intent: java.lang.CharSequence getCharSequenceExtra(java.lang.String)> ->_NONE_
<java.text.DecimalFormatSymbols: void setInfinity(java.lang.String)> ->_NONE_
<java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)> ->_NONE_
<junit.runner.ReloadingTestSuiteLoader: junit.runner.TestCaseClassLoader createLoader()> ->_NONE_
<org.apache.xpath.NodeSetDTM: boolean getShouldCacheNodes()> ->_NONE_
<android.widget.ProgressBar: void setProgress(int)> ->_NONE_
<org.xml.sax.HandlerBase: void unparsedEntityDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String)> ->_NONE_
<android.media.MediaFile: java.lang.String getMimeTypeForFile(java.lang.String)> ->_NONE_
<android.nfc.tech.MifareClassic: android.nfc.Tag getTag()> ->_NONE_
<android.filterfw.core.NativeFrame: float[] getFloats()> ->_NONE_
<android.view.View: void setScrollY(int)> ->_NONE_
<android.view.View: void setScrollX(int)> ->_NONE_
<android.net.wifi.WifiManager: void connect(android.net.wifi.WifiConfiguration,android.net.wifi.WifiManager$ActionListener)> ->_NONE_
<android.view.InputDevice: android.view.InputDevice$MotionRange getMotionRange(int,int)> ->_NONE_
<android.view.ViewRootImpl: void setLayoutParams(android.view.WindowManager$LayoutParams,boolean)> ->_NONE_
<java.sql.DataTruncation: boolean getRead()> ->_NONE_
<android.preference.PreferenceManager: int getNextRequestCode()> ->_NONE_
<android.support.v4.content.ModernAsyncTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.AuthenticationHandler getProxyAuthenticationHandler()> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: void setHasModified(boolean)> ->_NONE_
<android.view.accessibility.AccessibilityRecord: void setBeforeText(java.lang.CharSequence)> ->_NONE_
<android.media.AudioService: void sendMasterVolumeUpdate(int,int,int)> ->_NONE_
<android.app.admin.DevicePolicyManager: int getKeyguardDisabledFeatures(android.content.ComponentName,int)> ->_NONE_
<org.apache.xalan.templates.ElemUse: void setUseAttributeSets(java.util.Vector)> ->_NONE_
<org.apache.http.impl.client.DefaultRedirectHandler: java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)> ->_NONE_
<org.apache.xml.serializer.ToXMLStream: void entityReference(java.lang.String)> ->_NONE_
<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)> ->_NONE_
<org.jivesoftware.smackx.provider.SimpleVCardProvider: org.jivesoftware.smack.packet.IQ parseIQ(com.google.common.io.protocol.ProtoBuf)> ->_NONE_
<org.jivesoftware.smack.SASLAuthentication: boolean hasAnonymousAuthentication()> ->_NONE_
<android.app.ActivityOptions: int getAnimationType()> ->_NONE_
<android.view.KeyEvent: void setTainted(boolean)> ->_NONE_
<android.gesture.GestureOverlayView: void setFadeEnabled(boolean)> ->_NONE_
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,boolean,android.accounts.AccountManagerCallback,android.os.Handler)> ->_NONE_
<android.support.v4.app.DialogFragment: void setCancelable(boolean)> ->_NONE_
<java.security.spec.PSSParameterSpec: int getTrailerField()> ->_NONE_
<libcore.net.http.RequestHeaders: void setContentLength(int)> ->_NONE_
<android.app.ActivityManagerProxy: java.util.List getTasks(int,int,android.app.IThumbnailReceiver)> ->_NONE_
<javax.xml.parsers.SAXParser: void parse(java.io.File,org.xml.sax.helpers.DefaultHandler)> ->_NONE_
<org.javia.arity.Token: org.javia.arity.Token setAlpha(java.lang.String)> ->_NONE_
<android.filterfw.io.TextGraphReader: void executeCommands()> ->_NONE_
<java.net.URLConnection: void setDefaultUseCaches(boolean)> ->_NONE_
<android.net.wifi.WifiInfo: void setBSSID(java.lang.String)> ->_NONE_
<java.nio.DirectByteBuffer: long getLong(int)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: java.lang.String getOutputProperty(java.lang.String)> ->_NONE_
<org.apache.xml.serializer.dom3.DOM3SerializerImpl: void setNodeFilter(org.w3c.dom.ls.LSSerializerFilter)> ->_NONE_
<org.apache.james.mime4j.message.MemoryBinaryBody: java.io.InputStream getInputStream()> ->_NONE_
<android.filterfw.core.NativeFrame: void setInts(int[])> ->_NONE_
<libcore.net.http.HttpResponseCache: void update(java.net.CacheResponse,java.net.HttpURLConnection)> ->_NONE_
<android.widget.AutoCompleteTextView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)> ->_NONE_
<android.preference.SeekBarPreference: void setProgress(int)> ->_NONE_
<java.io.RandomAccessFile: int readUnsignedByte()> ->_NONE_
<gov.nist.core.Host: java.lang.String getIpAddress()> ->_NONE_
<libcore.icu.RuleBasedCollatorICU: java.lang.String getRules()> ->_NONE_
<android.renderscript.Element: java.lang.String getSubElementName(int)> ->_NONE_
<org.apache.xml.dtm.ref.NodeLocator: java.lang.String getSystemId()> ->_NONE_
<android.webkit.WebView: void setLayerType(int,android.graphics.Paint)> ->_NONE_
<android.net.wifi.p2p.WifiP2pManager: void connect(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pConfig,android.net.wifi.p2p.WifiP2pManager$ActionListener)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: javax.net.ssl.SSLSessionContext getSessionContext()> ->_NONE_
<gov.nist.javax.sip.header.ims.ServiceRoute: void setValue(java.lang.String)> ->_NONE_
<android.webkit.WebViewCore: java.lang.Class getPluginClass(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.http.message.BasicRequestLine: java.lang.String getMethod()> ->_NONE_
<android.util.NtpTrustedTime: long getCacheAge()> ->_NONE_
<android.opengl.GLSurfaceView: int getRenderMode()> ->_NONE_
<gov.nist.javax.sip.header.AddressParametersHeader: javax.sip.address.Address getAddress()> ->_NONE_
<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)> ->_NONE_
<org.apache.james.mime4j.message.Multipart: org.apache.james.mime4j.message.Entity getParent()> ->_NONE_
<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable getCurrent()> ->_NONE_
<android.filterpacks.base.RetargetFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<android.view.accessibility.AccessibilityRecord: void setWindowId(int)> ->_NONE_
<android.webkit.WebViewCore: void chromeTakeFocus(int)> ->_NONE_
<org.apache.xalan.processor.XSLTElementDef: java.lang.String getRequiredElem()> ->_NONE_
<org.kxml2.io.KXmlSerializer: java.lang.String getName()> ->_NONE_
<android.widget.LinearLayout: android.graphics.drawable.Drawable getDividerDrawable()> ->_NONE_
<android.net.wifi.WifiNative: boolean setBluetoothCoexistenceMode(int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: boolean getNeedClientAuth()> ->_NONE_
<android.view.inputmethod.InputMethodManager: java.util.List getEnabledInputMethodList()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: void setReceiveBufferSize(int)> ->_NONE_
<org.apache.xml.utils.UnImplNode: java.lang.String getWholeText()> ->_NONE_
<javax.obex.ServerRequestHandler: void updateStatus(java.lang.String)> ->_NONE_
<android.filterfw.core.FrameFormat: int getSize()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.CipherSuite: org.apache.harmony.xnet.provider.jsse.CipherSuite getByName(java.lang.String)> ->_NONE_
<android.content.pm.PackageParser: android.content.pm.PackageParser$Instrumentation parseInstrumentation(android.content.pm.PackageParser$Package,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,java.lang.String[])> ->_NONE_
<android.webkit.WebViewClassic: int getScaledMaxYScroll()> ->_NONE_
<java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()> ->_NONE_
<android.view.accessibility.AccessibilityInteractionClient: boolean getPerformAccessibilityActionResultAndClear(int)> ->_NONE_
<android.view.MotionEvent: float getY(int)> ->_NONE_
<android.webkit.WebSettingsClassic: int getTextZoom()> ->_NONE_
<android.view.MotionEvent: float getX(int)> ->_NONE_
<gov.nist.javax.sip.address.UserInfo: java.lang.StringBuffer encode(java.lang.StringBuffer)> ->_NONE_
<android.webkit.WebSettingsClassic: void setAppCacheMaxSize(long)> ->_NONE_
<android.content.res.Resources: java.lang.String[] getStringArray(int)> ->_NONE_
<android.media.audiofx.Virtualizer: android.media.audiofx.Virtualizer$Settings getProperties()> ->_NONE_
<javax.xml.transform.sax.SAXSource: void setXMLReader(org.xml.sax.XMLReader)> ->_NONE_
<android.test.TestCaseUtil: java.util.List getTests(junit.framework.Test,boolean)> ->_NONE_
<java.security.cert.X509CertSelector: java.math.BigInteger getSerialNumber()> ->_NONE_
<gov.nist.javax.sip.message.MessageFactoryImpl: void setDefaultServerHeader(javax.sip.header.ServerHeader)> ->_NONE_
<android.webkit.GeolocationPermissionsClassic: void getOrigins(android.webkit.ValueCallback)> ->_NONE_
<android.webkit.WebViewCore: void initEditField(int,int,int,android.webkit.WebViewCore$TextFieldInitData)> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: void setParent(android.view.View,int)> ->_NONE_
<android.nfc.NfcAdapter: android.content.Context getContext()> ->_NONE_
<org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getSubjectAlts(java.security.cert.X509Certificate,java.lang.String)> ->_NONE_
<org.apache.xml.utils.UnImplNode: org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.harmony.security.pkcs7.SignedData: java.util.List getCertificates()> ->_NONE_
<gov.nist.javax.sip.address.UserInfo: void setPassword(java.lang.String)> ->_NONE_
<android.telephony.cdma.CdmaCellLocation: int getSystemId()> ->_NONE_
<android.bluetooth.BluetoothSocket: int read(byte[],int,int)> ->_NONE_
<org.ccil.cowan.tagsoup.ElementType: void setModel(int)> ->_NONE_
<org.apache.http.impl.auth.NTLMScheme: java.lang.String getRealm()> ->_NONE_
<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getEndTransition()> ->_NONE_
<org.apache.harmony.luni.lang.reflect.ImplForType: java.lang.reflect.Type[] getActualTypeArguments()> ->_NONE_
<org.apache.harmony.xml.dom.ElementImpl: java.lang.String getNodeName()> ->_NONE_
<android.test.mock.MockResources: int getColor(int)> ->_NONE_
<android.content.ContentService: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.StatusLine: void setSipVersion(java.lang.String)> ->_NONE_
<android.content.pm.PermissionInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)> ->_NONE_
<android.text.SpannableStringBuilder: float getTextRunAdvances(int,int,int,int,int,float[],int,android.graphics.Paint,int)> ->_NONE_
<org.apache.xpath.patterns.NodeTest: java.lang.String getNamespace()> ->_NONE_
<android.test.mock.MockResources: java.lang.String[] getStringArray(int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.AbstractSessionContext: int getSessionTimeout()> ->_NONE_
<android.webkit.WebViewDatabaseClassic: java.lang.String[] getUsernamePassword(java.lang.String)> ->_NONE_
<android.widget.SimpleCursorTreeAdapter: android.widget.SimpleCursorTreeAdapter$ViewBinder getViewBinder()> ->_NONE_
<android.app.ActivityThread: int getIntCoreSetting(java.lang.String,int)> ->_NONE_
<org.apache.commons.codec.net.QuotedPrintableCodec: java.lang.String encode(java.lang.String,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.parser.StringMsgParser: void setComputeContentLengthFromMessage(boolean)> ->_NONE_
<android.animation.ObjectAnimator: void setIntValues(int[])> ->_NONE_
<android.webkit.BrowserFrame: void didFinishLoading()> ->_NONE_
<gov.nist.javax.sip.header.Supported: java.lang.String encode()> ->_NONE_
<android.accessibilityservice.AccessibilityService: void setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)> ->_NONE_
<android.preference.PreferenceManager: boolean setPreferences(android.preference.PreferenceScreen)> ->_NONE_
<org.jivesoftware.smack.XMPPConnection: void sendPacket(org.jivesoftware.smack.packet.Packet)> ->_NONE_
<android.support.v4.content.ModernAsyncTask: java.lang.Object get()> ->_NONE_
<android.preference.DialogPreference: java.lang.CharSequence getPositiveButtonText()> ->_NONE_
<android.renderscript.RenderScript: void setPriority(android.renderscript.RenderScript$Priority)> ->_NONE_
<android.webkit.UrlInterceptRegistry: android.webkit.CacheManager$CacheResult getSurrogate(java.lang.String,java.util.Map)> ->_NONE_
<android.media.Ringtone: java.lang.String getTitle(android.content.Context)> ->_NONE_
<android.gesture.GestureOverlayView: int getGestureStrokeType()> ->_NONE_
<android.widget.ExpandableListView: int getFlatListPosition(long)> ->_NONE_
<android.telephony.cdma.CdmaCellLocation: void setCellLocationData(int,int,int,int,int)> ->_NONE_
<android.view.LayoutInflater: void setFactory(android.view.LayoutInflater$Factory)> ->_NONE_
<android.gesture.GestureStore: int getSequenceType()> ->_NONE_
<org.apache.commons.codec.net.URLCodec: byte[] encodeUrl(java.util.BitSet,byte[])> ->_NONE_
<android.net.wifi.p2p.WifiP2pManager: void requestConnectionInfo(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ConnectionInfoListener)> ->_NONE_
<android.test.mock.MockPackageManager: void setInstallerPackageName(java.lang.String,java.lang.String)> ->_NONE_
<android.database.AbstractCursor: void setExtras(android.os.Bundle)> ->_NONE_
<java.sql.SQLException: java.lang.String getSQLState()> ->_NONE_
<android.opengl.Matrix: void setIdentityM(float[],int)> ->_NONE_
<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.File)> ->_NONE_
<android.net.UrlQuerySanitizer: int decodeHexDigit(char)> ->_NONE_
<android.support.v4.util.LongSparseArray: java.lang.Object get(long)> ->_NONE_
<android.media.audiofx.AudioEffect: int getId()> ->_NONE_
<android.accounts.AccountManagerService: void checkAuthenticateAccountsPermission(android.accounts.Account)> ->_NONE_
<android.inputmethodservice.KeyboardView: android.inputmethodservice.Keyboard getKeyboard()> ->_NONE_
<org.apache.xml.dtm.SecuritySupport12: java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getCipherSuite()> ->_NONE_
<java.lang.reflect.Constructor: int getModifiers()> ->_NONE_
<android.os.MemoryFile: java.io.InputStream getInputStream()> ->_NONE_
<java.util.logging.LogManager: java.util.logging.Logger getLogger(java.lang.String)> ->_NONE_
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script$KernelID getKernelIDDstOut()> ->_NONE_
<android.view.inputmethod.InputMethodManager: void setFullscreenMode(boolean)> ->_NONE_
<gov.nist.javax.sip.header.StatusLine: java.lang.String encode()> ->_NONE_
<android.inputmethodservice.Keyboard: void parseKeyboardAttributes(android.content.res.Resources,android.content.res.XmlResourceParser)> ->_NONE_
<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.SipProviderImpl: javax.sip.ListeningPoint getListeningPoint(java.lang.String)> ->_NONE_
<android.nfc.tech.IsoDep: android.nfc.tech.IsoDep get(android.nfc.Tag)> ->_NONE_
<org.apache.xalan.templates.ElemSort: org.apache.xalan.templates.AVT getDataType()> ->_NONE_
<android.widget.AbsListView: boolean setFrame(int,int,int,int)> ->_NONE_
<android.webkit.MimeTypeMap: java.lang.String getExtensionFromMimeType(java.lang.String)> ->_NONE_
<java.text.DecimalFormat: int getMaximumFractionDigits()> ->_NONE_
<org.apache.http.protocol.BasicHttpProcessor: void setInterceptors(java.util.List)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: void setNeedClientAuth(boolean)> ->_NONE_
<java.io.EmulatedFields: boolean get(java.lang.String,boolean)> ->_NONE_
<gov.nist.core.MultiValueMapImpl: java.lang.Object get(java.lang.Object)> ->_NONE_
<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()> ->_NONE_
<android.database.sqlite.SQLiteConnection: void setOnlyAllowReadOnlyOperations(boolean)> ->_NONE_
<java.io.EmulatedFields: char get(java.lang.String,char)> ->_NONE_
<android.renderscript.RenderScript: void setErrorHandler(android.renderscript.RenderScript$RSErrorHandler)> ->_NONE_
<org.jivesoftware.smack.XMPPConnection: long getLastActivityFromServerTime()> ->_NONE_
<org.apache.harmony.xml.dom.ElementImpl: java.lang.String getPrefix()> ->_NONE_
<java.security.AllPermission: java.lang.String getActions()> ->_NONE_
<org.apache.xml.serializer.ToXMLSAXHandler: java.util.Properties getOutputFormat()> ->_NONE_
<org.apache.xalan.transformer.TransformerHandlerImpl: void comment(char[],int,int)> ->_NONE_
<libcore.io.IoBridge: boolean connect(java.io.FileDescriptor,java.net.InetAddress,int,int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.ServerHelloDone: void send(org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream)> ->_NONE_
<android.telephony.ServiceState: void setCdmaEriIconMode(int)> ->_NONE_
<org.apache.http.impl.conn.AbstractClientConnAdapter: void sendRequestHeader(org.apache.http.HttpRequest)> ->_NONE_
<gov.nist.javax.sip.header.Unsupported: java.lang.String encodeBody()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: java.lang.Object getApplicationData()> ->_NONE_
<java.lang.reflect.Method: java.lang.Class getReturnType()> ->_NONE_
<org.apache.xml.serializer.SerializerBase: java.lang.String getProp(java.lang.String,boolean)> ->_NONE_
<android.text.Layout: int getLineBounds(int,android.graphics.Rect)> ->_NONE_
<org.apache.xalan.templates.KeyDeclaration: void setUse(org.apache.xpath.XPath)> ->_NONE_
<org.apache.xml.serializer.utils.AttList: java.lang.String getURI(int)> ->_NONE_
<android.support.v4.view.ViewPager: void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener)> ->_NONE_
<javax.xml.parsers.SAXParserFactory: void setSchema(javax.xml.validation.Schema)> ->_NONE_
<android.view.PointerIcon: android.view.PointerIcon getNullIcon()> ->_NONE_
<org.apache.xalan.templates.ElemExsltFuncResult: void execute(org.apache.xalan.transformer.TransformerImpl)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.CertificateMessage: java.lang.String getAuthType()> ->_NONE_
<gov.nist.javax.sip.header.Event: java.lang.String getEventId()> ->_NONE_
<android.media.MediaPlayer: void setOnSeekCompleteListener(android.media.MediaPlayer$OnSeekCompleteListener)> ->_NONE_
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])> ->_NONE_
<org.apache.xalan.templates.Stylesheet: java.lang.String getExcludeResultPrefix(int)> ->_NONE_
<java.net.MulticastSocket: void send(java.net.DatagramPacket,byte)> ->_NONE_
<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()> ->_NONE_
<android.widget.TextView: android.content.res.ColorStateList getTextColors()> ->_NONE_
<org.apache.http.conn.EofSensorInputStream: boolean isReadAllowed()> ->_NONE_
<android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)> ->_NONE_
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getUnregisteredParameterValueSanitizer()> ->_NONE_
<gov.nist.javax.sip.address.Authority: java.lang.String getUser()> ->_NONE_
<org.apache.xpath.axes.OneStepIteratorForward: void setRoot(int,java.lang.Object)> ->_NONE_
<android.view.MotionEvent: float getPressure()> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ErrorInfoList getErrorInfoHeaders()> ->_NONE_
<java.text.DecimalFormatSymbols: void setMonetaryDecimalSeparator(char)> ->_NONE_
<android.sax.Element: void setElementListener(android.sax.ElementListener)> ->_NONE_
<android.webkit.WebView: void setInitialScale(int)> ->_NONE_
<android.os.AsyncTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)> ->_NONE_
<org.apache.xalan.templates.ElemValueOf: org.apache.xpath.XPath getSelect()> ->_NONE_
<android.content.PeriodicSync: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.jivesoftware.smack.packet.RosterPacket: void setNotModified(java.lang.Boolean)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: int getTypedNextSibling(int,int)> ->_NONE_
<android.mtp.MtpObjectInfo: int getCompressedSize()> ->_NONE_
<android.telephony.CellInfoGsm: android.telephony.CellIdentityGsm getCellIdentity()> ->_NONE_
<org.apache.harmony.security.x509.TBSCertList: java.util.List getRevokedCertificates()> ->_NONE_
<android.util.XmlPullAttributes: int getAttributeResourceValue(int,int)> ->_NONE_
<android.webkit.WebSettings: android.webkit.WebSettings$LayoutAlgorithm getLayoutAlgorithm()> ->_NONE_
<org.kxml2.io.KXmlParser: java.lang.String getPrefix()> ->_NONE_
<jp.co.omronsoft.openwnn.OpenWnnJAJP: void onUpdateSelection(int,int,int,int,int,int)> ->_NONE_
<android.media.SoundPool: void setOnLoadCompleteListener(android.media.SoundPool$OnLoadCompleteListener)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.security.Principal getPeerPrincipal()> ->_NONE_
<android.widget.ViewAnimator: boolean getAnimateFirstView()> ->_NONE_
<android.net.wifi.WifiInfo: void setInetAddress(java.net.InetAddress)> ->_NONE_
<org.apache.http.params.AbstractHttpParams: java.util.Set getNames()> ->_NONE_
<jp.co.omronsoft.openwnn.DefaultSoftKeyboard: void setHardware12Keyboard(boolean)> ->_NONE_
<android.database.sqlite.SQLiteGlobal: int getWALAutoCheckpoint()> ->_NONE_
<android.media.AudioRoutesInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.os.UserManager: void setUserIcon(int,android.graphics.Bitmap)> ->_NONE_
<gov.nist.javax.sip.address.Authority: gov.nist.javax.sip.address.UserInfo getUserInfo()> ->_NONE_
<android.widget.ActivityChooserModel: void setDefaultActivity(int)> ->_NONE_
<android.webkit.WebViewClassic: void updateMultiTouchSupport(android.content.Context)> ->_NONE_
<android.bluetooth.BluetoothAdapter: boolean setScanMode(int)> ->_NONE_
<java.util.PropertyPermission: java.lang.String getActions()> ->_NONE_
<android.test.ProviderTestCase: android.test.IsolatedContext getMockContext()> ->_NONE_
<java.security.cert.X509CertSelector: java.lang.String getSubjectPublicKeyAlgID()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.lang.String[] getValueNames()> ->_NONE_
<org.apache.xalan.templates.StylesheetRoot: java.lang.String getExtensionHandlerClass()> ->_NONE_
<android.net.LocalSocketImpl: java.io.FileDescriptor[] getAncillaryFileDescriptors()> ->_NONE_
<org.apache.xml.utils.DOMHelper: org.w3c.dom.Document getDOMFactory()> ->_NONE_
<android.renderscript.Allocation: void setFromFieldPacker(int,android.renderscript.FieldPacker)> ->_NONE_
<javax.crypto.Cipher: javax.crypto.ExemptionMechanism getExemptionMechanism()> ->_NONE_
<android.webkit.HTML5VideoView: int getDuration()> ->_NONE_
<java.util.GregorianCalendar: void setGregorianChange(java.util.Date)> ->_NONE_
<org.jivesoftware.smack.XMPPConnection: java.lang.String getHost()> ->_NONE_
<org.jivesoftware.smack.XMPPException: org.jivesoftware.smack.packet.XMPPError getXMPPError()> ->_NONE_
<android.renderscript.Program: android.renderscript.Program$TextureType getTextureType(int)> ->_NONE_
<org.apache.xalan.templates.ElemOtherwise: int getXSLToken()> ->_NONE_
<org.apache.xml.utils.res.XResourceBundle: java.lang.String getResourceSuffix(java.util.Locale)> ->_NONE_
<org.apache.http.impl.cookie.BestMatchSpec: org.apache.http.impl.cookie.RFC2965Spec getStrict()> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: org.xml.sax.ErrorHandler getErrorHandler()> ->_NONE_
<android.support.v13.app.FragmentCompat: void setUserVisibleHint(android.app.Fragment,boolean)> ->_NONE_
<java.io.ObjectInputStream: int readInt()> ->_NONE_
<gov.nist.javax.sip.DialogFilter: void sendRequestPendingResponse(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.SIPServerTransaction)> ->_NONE_
<android.webkit.WebView: android.view.View getZoomControls()> ->_NONE_
<android.widget.ZoomControls: void setZoomSpeed(long)> ->_NONE_
<android.app.LoadedApk: java.lang.String getResDir()> ->_NONE_
<dalvik.system.TemporaryDirectory: void setUpDirectory(java.io.File)> ->_NONE_
<android.media.videoeditor.MediaItem: java.lang.String getId()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeListBase: int getLength()> ->_NONE_
<org.apache.xml.utils.PrefixResolverDefault: java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Node)> ->_NONE_
<android.test.IsolatedContext: java.util.List getAndClearBroadcastIntents()> ->_NONE_
<org.apache.harmony.security.provider.crypto.SHA1_MessageDigestImpl: void engineUpdate(byte[],int,int)> ->_NONE_
<android.telephony.gsm.SmsMessage: byte[] getPdu()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getName()> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: void setOutputTarget(javax.xml.transform.Result)> ->_NONE_
<android.animation.LayoutTransition: java.util.List getTransitionListeners()> ->_NONE_
<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.SipStackImpl: java.lang.String getStackName()> ->_NONE_
<android.webkit.WebChromeClient: void setupAutoFill(android.os.Message)> ->_NONE_
<org.apache.xml.utils.UnImplNode: boolean getXmlStandalone()> ->_NONE_
<javax.sip.TimeoutEvent: javax.sip.Timeout getTimeout()> ->_NONE_
<java.nio.charset.UnsupportedCharsetException: java.lang.String getCharsetName()> ->_NONE_
<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()> ->_NONE_
<org.apache.xpath.axes.LocPathIterator: void setIsTopLevel(boolean)> ->_NONE_
<org.apache.xpath.axes.LocPathIterator: int getContext()> ->_NONE_
<javax.obex.ClientSession: void setAuthenticator(javax.obex.Authenticator)> ->_NONE_
<android.mtp.MtpObjectInfo: long getDateCreated()> ->_NONE_
<android.content.Intent: android.content.ClipData getClipData()> ->_NONE_
<android.media.AudioService: int getActiveStreamType(int)> ->_NONE_
<javax.security.auth.SubjectDomainCombiner: java.security.ProtectionDomain[] combine(java.security.ProtectionDomain[],java.security.ProtectionDomain[])> ->_NONE_
<android.test.mock.MockCursor: java.lang.String getColumnName(int)> ->_NONE_
<android.app.Dialog: void setFeatureDrawableResource(int,int)> ->_NONE_
<android.animation.ValueAnimator: float getDurationScale()> ->_NONE_
<android.test.TestRunner: void setPerformanceMode(int)> ->_NONE_
<org.apache.xalan.templates.ElemSort: org.apache.xalan.templates.AVT getCaseOrder()> ->_NONE_
<org.apache.http.impl.client.RequestWrapper: java.lang.String getMethod()> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: long getSourceNodeId()> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: void executeNSDecls(org.apache.xalan.transformer.TransformerImpl,java.lang.String)> ->_NONE_
<android.view.ViewRootImpl: void dispatchSystemUiVisibilityChanged(int,int,int,int)> ->_NONE_
<android.view.CompatibilityInfoHolder: void set(android.content.res.CompatibilityInfo)> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: java.lang.String getEmailWork()> ->_NONE_
<android.net.EthernetDataTracker: void setPolicyDataEnable(boolean)> ->_NONE_
<gov.nist.javax.sip.stack.HopImpl: int getPort()> ->_NONE_
<android.view.Display: void getSize(android.graphics.Point)> ->_NONE_
<org.apache.xml.utils.res.XResources_ka: java.lang.Object[][] getContents()> ->_NONE_
<org.apache.xml.serializer.WriterToUTF8Buffered: void write(java.lang.String)> ->_NONE_
<org.apache.james.mime4j.codec.EncoderUtil: java.lang.String encodeIfNecessary(java.lang.String,org.apache.james.mime4j.codec.EncoderUtil$Usage,int)> ->_NONE_
<android.renderscript.Sampler: android.renderscript.Sampler$Value getMagnification()> ->_NONE_
<android.widget.Gallery: int getCenterOfGallery()> ->_NONE_
<java.util.logging.Level: java.lang.String getResourceBundleName()> ->_NONE_
<android.webkit.WebViewClassic: void findNext(boolean)> ->_NONE_
<java.net.ServerSocket: void setSocketFactory(java.net.SocketImplFactory)> ->_NONE_
<android.util.MonthDisplayHelper: int getNumberOfDaysInMonth()> ->_NONE_
<org.apache.xalan.transformer.TransformerHandlerImpl: void ignorableWhitespace(char[],int,int)> ->_NONE_
<android.speech.tts.TextToSpeech: android.os.Bundle getParams(java.util.HashMap)> ->_NONE_
<jp.co.omronsoft.openwnn.DefaultSoftKeyboard: void setHardKeyboardHidden(boolean)> ->_NONE_
<libcore.net.http.HttpURLConnectionImpl: java.lang.String getAuthorizationCredentials(libcore.net.http.RawHeaders,java.lang.String)> ->_NONE_
<android.app.Fragment: android.view.View getView()> ->_NONE_
<android.webkit.WebViewCore: void access$3200(android.webkit.WebViewCore,int,int,int,java.lang.String,int,int,int)> ->_NONE_
<android.support.v4.content.CursorLoader: void onStopLoading()> ->_NONE_
<android.webkit.WebSettings: void setUseDoubleTree(boolean)> ->_NONE_
<junit.runner.BaseTestRunner: java.lang.String getPreference(java.lang.String)> ->_NONE_
<android.net.wifi.p2p.WifiP2pDevice: int parseHex(java.lang.String)> ->_NONE_
<android.webkit.CallbackProxy: void onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage$QuotaUpdater)> ->_NONE_
<android.widget.ListView: android.widget.Adapter getAdapter()> ->_NONE_
<android.content.IntentFilter: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: java.lang.String getCGI3GPP()> ->_NONE_
<android.support.v13.app.FragmentCompatICS: void setMenuVisibility(android.app.Fragment,boolean)> ->_NONE_
<org.apache.harmony.security.provider.crypto.DSAPublicKeyImpl: java.math.BigInteger getY()> ->_NONE_
<android.animation.Keyframe: void setFraction(float)> ->_NONE_
<android.mtp.MtpObjectInfo: int getAssociationType()> ->_NONE_
<android.webkit.WebSettingsClassic: void setTextZoom(int)> ->_NONE_
<android.support.v4.view.MotionEventCompat: int getPointerCount(android.view.MotionEvent)> ->_NONE_
<android.app.ProgressDialog: void setProgressDrawable(android.graphics.drawable.Drawable)> ->_NONE_
<org.apache.harmony.security.x509.GeneralSubtree: org.apache.harmony.security.x509.GeneralName getBase()> ->_NONE_
<java.security.KeyStore: void setEntry(java.lang.String,java.security.KeyStore$Entry,java.security.KeyStore$ProtectionParameter)> ->_NONE_
<junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)> ->_NONE_
<java.io.StringReader: int read(char[],int,int)> ->_NONE_
<org.apache.harmony.security.pkcs7.ContentInfo: java.lang.Object getContent()> ->_NONE_
<org.apache.http.impl.cookie.AbstractCookieSpec: org.apache.http.cookie.CookieAttributeHandler getAttribHandler(java.lang.String)> ->_NONE_
<org.apache.http.impl.EnglishReasonPhraseCatalog: java.lang.String getReason(int,java.util.Locale)> ->_NONE_
<android.app.ActivityManagerProxy: void setRequestedOrientation(android.os.IBinder,int)> ->_NONE_
<android.os.Debug: java.lang.String getCaller()> ->_NONE_
<android.preference.Preference: android.preference.Preference$OnPreferenceChangeListener getOnPreferenceChangeListener()> ->_NONE_
<android.content.pm.ManifestDigest: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)> ->_NONE_
<android.view.inputmethod.InputMethodManager: void reportFinishInputConnection(android.view.inputmethod.InputConnection)> ->_NONE_
<android.os.Bundle: boolean setAllowFds(boolean)> ->_NONE_
<android.filterfw.core.GLFrame: android.filterfw.core.GLEnvironment getGLEnvironment()> ->_NONE_
<org.apache.xml.utils.res.XResources_ko: java.lang.Object[][] getContents()> ->_NONE_
<org.apache.http.impl.cookie.BasicClientCookie2: void setDiscard(boolean)> ->_NONE_
<android.location.GpsStatus: void setStatus(int,int[],float[],float[],float[],int,int,int)> ->_NONE_
<android.nfc.tech.IsoDep: byte[] getHiLayerResponse()> ->_NONE_
<org.jivesoftware.smackx.provider.DiscoverInfoProvider: org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser)> ->_NONE_
<android.app.FragmentBreadCrumbs: void setTitle(java.lang.CharSequence,java.lang.CharSequence)> ->_NONE_
<org.json.JSONArray: org.json.JSONObject getJSONObject(int)> ->_NONE_
<android.text.method.DigitsKeyListener: char[] getAcceptedChars()> ->_NONE_
<android.webkit.WebViewCore: android.webkit.WebView getWebView()> ->_NONE_
<android.widget.CalendarView: int getSelectedWeekBackgroundColor()> ->_NONE_
<android.view.View: android.view.animation.Animation getAnimation()> ->_NONE_
<android.widget.CalendarView: long getMaxDate()> ->_NONE_
<android.view.InputDevice: android.view.KeyCharacterMap getKeyCharacterMap()> ->_NONE_
<android.view.ViewDebug: void dump(android.view.View,java.io.OutputStream)> ->_NONE_
<android.widget.EdgeEffect: android.graphics.Rect getBounds(boolean)> ->_NONE_
<android.webkit.WebSettingsClassic: boolean getLoadWithOverviewMode()> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getParentNodeElem()> ->_NONE_
<android.database.sqlite.SQLiteSession: int executeForChangedRowCount(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)> ->_NONE_
<android.view.accessibility.AccessibilityRecord: java.util.List getText()> ->_NONE_
<android.gesture.GestureOverlayView: void setGestureColor(int)> ->_NONE_
<android.drm.DrmInfo: java.lang.String getMimeType()> ->_NONE_
<android.database.sqlite.SQLiteConnection: void setPageSize()> ->_NONE_
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.OutputProperties getOutput(int)> ->_NONE_
<java.util.Locale: java.lang.String getDisplayVariant(java.util.Locale)> ->_NONE_
<android.os.Environment: java.io.File getUserSystemDirectory(int)> ->_NONE_
<gov.nist.javax.sip.address.TelephoneNumber: void setParameters(gov.nist.core.NameValueList)> ->_NONE_
<android.os.Environment: java.io.File getDownloadCacheDirectory()> ->_NONE_
<android.net.wifi.WifiInfo: void setSupplicantState(android.net.wifi.SupplicantState)> ->_NONE_
<java.util.DuplicateFormatFlagsException: java.lang.String getMessage()> ->_NONE_
<org.apache.xpath.compiler.Compiler: int getLocationPathDepth()> ->_NONE_
<android.net.ConnectivityManager: java.lang.String[] getTetheringErroredIfaces()> ->_NONE_
<android.app.ActivityManagerProxy: void getMyMemoryState(android.app.ActivityManager$RunningAppProcessInfo)> ->_NONE_
<android.test.mock.MockContext: java.io.File getExternalCacheDir()> ->_NONE_
<org.apache.harmony.security.x509.SubjectPublicKeyInfo: byte[] getEncoded()> ->_NONE_
<jp.co.omronsoft.openwnn.OpenWnnEN: int getShiftKeyState(android.view.inputmethod.EditorInfo)> ->_NONE_
<org.apache.xml.utils.res.IntArrayWrapper: int getLength()> ->_NONE_
<org.apache.xml.serializer.SerializerBase: void setProp(java.lang.String,java.lang.String,boolean)> ->_NONE_
<gov.nist.javax.sip.SipProviderImpl: javax.sip.ClientTransaction getNewClientTransaction(javax.sip.message.Request)> ->_NONE_
<android.widget.ActivityChooserModel: android.content.pm.ResolveInfo getDefaultActivity()> ->_NONE_
<android.preference.DialogPreference: void setDialogLayoutResource(int)> ->_NONE_
<org.apache.xalan.templates.KeyDeclaration: void setMatch(org.apache.xpath.XPath)> ->_NONE_
<android.text.method.ArrowKeyMovementMethod: int getCurrentLineTop(android.text.Spannable,android.text.Layout)> ->_NONE_
<org.apache.xml.serializer.utils.AttList: java.lang.String getValue(int)> ->_NONE_
<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScope getAuthScope()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.DocumentType getDoctype()> ->_NONE_
<android.text.style.SuperscriptSpan: void updateMeasureState(android.text.TextPaint)> ->_NONE_
<android.telephony.gsm.SmsMessage: java.lang.String getEmailFrom()> ->_NONE_
<android.drm.DrmManagerClient: void setOnInfoListener(android.drm.DrmManagerClient$OnInfoListener)> ->_NONE_
<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.header.Via getOutgoingViaHeader()> ->_NONE_
<org.apache.xml.serializer.ToStream: void setWriter(java.io.Writer)> ->_NONE_
<android.bluetooth.BluetoothDevice: boolean setDeviceOutOfBandData(byte[],byte[])> ->_NONE_
<org.jivesoftware.smack.util.StringUtils: java.lang.String encodeBase64(byte[])> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLKey: java.lang.String getAlias()> ->_NONE_
<android.widget.ProgressBar: int getProgress()> ->_NONE_
<android.preference.DialogPreference: java.lang.CharSequence getNegativeButtonText()> ->_NONE_
<android.content.ContextWrapper: java.io.File getObbDir()> ->_NONE_
<android.app.Dialog: void setOnShowListener(android.content.DialogInterface$OnShowListener)> ->_NONE_
<javax.security.auth.callback.UnsupportedCallbackException: javax.security.auth.callback.Callback getCallback()> ->_NONE_
<junit.extensions.ActiveTestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)> ->_NONE_
<org.apache.xpath.axes.AxesWalker: int getAnalysisBits()> ->_NONE_
<org.apache.harmony.xml.ExpatReader: org.xml.sax.EntityResolver getEntityResolver()> ->_NONE_
<jp.co.omronsoft.openwnn.UserDictionaryToolsListFocus: android.view.View getPairView()> ->_NONE_
<libcore.io.ForwardingOs: int sendto(java.io.FileDescriptor,byte[],int,int,int,java.net.InetAddress,int)> ->_NONE_
<org.apache.xalan.processor.XSLTElementDef: java.lang.String getName()> ->_NONE_
<android.view.KeyCharacterMap: int getKeyboardType()> ->_NONE_
<android.filterfw.core.NativeFrame: void setData(java.nio.ByteBuffer,int,int)> ->_NONE_
<java.util.logging.Handler: java.util.logging.Formatter getFormatter()> ->_NONE_
<android.net.sip.SipAudioCall: android.net.sip.SipProfile getPeerProfile()> ->_NONE_
<java.lang.BootClassLoader: java.net.URL getResource(java.lang.String)> ->_NONE_
<org.apache.xpath.Expression: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)> ->_NONE_
<org.apache.xpath.objects.XNodeSet: int getType()> ->_NONE_
<android.widget.ExpandableListView: long getPackedPositionForGroup(int)> ->_NONE_
<net.oauth.http.HttpMessage: java.lang.String getHeader(java.lang.String)> ->_NONE_
<android.app.ApplicationPackageManager: java.lang.CharSequence getText(java.lang.String,int,android.content.pm.ApplicationInfo)> ->_NONE_
<android.net.sip.SipProfile: java.lang.String getDisplayName()> ->_NONE_
<android.view.AbsSavedState: android.os.Parcelable getSuperState()> ->_NONE_
<android.app.FragmentManagerImpl: int getBackStackEntryCount()> ->_NONE_
<android.opengl.GLSurfaceView: int getDebugFlags()> ->_NONE_
<android.net.LinkCapabilities: void log(java.lang.String)> ->_NONE_
<android.text.DynamicLayout: int getBottomPadding()> ->_NONE_
<android.view.View: android.view.DisplayList getDisplayList(android.view.DisplayList,boolean)> ->_NONE_
<android.media.Metadata: java.util.Date getDate(int)> ->_NONE_
<android.widget.SimpleCursorAdapter: android.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter()> ->_NONE_
<org.apache.xalan.templates.DecimalFormatProperties: java.text.DecimalFormatSymbols getDecimalFormatSymbols()> ->_NONE_
<android.content.res.Configuration: void setLocale(java.util.Locale)> ->_NONE_
<org.jivesoftware.smack.packet.DefaultPacketExtension: java.util.Iterator getAttributeNames()> ->_NONE_
<android.widget.TextView: int getLineCount()> ->_NONE_
<android.app.ContextImpl: java.io.File getDatabasesDir()> ->_NONE_
<android.widget.AdapterViewAnimator: int getWindowSize()> ->_NONE_
<libcore.net.http.HttpsHandler: java.net.URLConnection openConnection(java.net.URL,java.net.Proxy)> ->_NONE_
<android.app.WallpaperManager: void sendWallpaperCommand(android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: boolean getOOBInline()> ->_NONE_
<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setParent(java.lang.Object,android.view.View)> ->_NONE_
<android.hardware.Sensor: float getMaximumRange()> ->_NONE_
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: void setUseClientMode(boolean)> ->_NONE_
<android.widget.SearchView: void setQuery(java.lang.CharSequence,boolean)> ->_NONE_
<android.view.Window: void setUiOptions(int)> ->_NONE_
<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: int getLineNumber()> ->_NONE_
<org.apache.harmony.xml.parsers.SAXParserImpl: org.xml.sax.Parser getParser()> ->_NONE_
<org.apache.harmony.security.x509.Extensions: org.apache.harmony.security.x509.Extension getExtensionByOID(java.lang.String)> ->_NONE_
<org.apache.commons.io.output.ThresholdingOutputStream: void write(byte[],int,int)> ->_NONE_
<jp.co.omronsoft.openwnn.KeyboardView: void setPopupParent(android.view.View)> ->_NONE_
<android.app.admin.DevicePolicyManager: int getPasswordHistoryLength(android.content.ComponentName,int)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: java.lang.String getNodeName()> ->_NONE_
<android.net.wifi.WifiManager: int getFrequencyBand()> ->_NONE_
<android.widget.Switch: int getThumbTextPadding()> ->_NONE_
<android.telephony.ServiceState: void setRadioTechnology(int)> ->_NONE_
<android.webkit.WebViewClassic: void setTouchHighlightRects(android.webkit.WebViewCore$WebKitHitTest)> ->_NONE_
<net.oauth.OAuthMessage: java.lang.String getToken()> ->_NONE_
<android.accessibilityservice.UiTestAutomationBridge: void ensureValidConnection(int)> ->_NONE_
<org.apache.xalan.processor.StylesheetHandler: java.lang.String getNamespaceForPrefix(java.lang.String)> ->_NONE_
<android.view.ViewConfiguration: int getScaledDoubleTapSlop()> ->_NONE_
<org.apache.xpath.axes.WalkerFactory: org.apache.xpath.patterns.StepPattern loadSteps(org.apache.xpath.axes.MatchPatternIterator,org.apache.xpath.compiler.Compiler,int,int)> ->_NONE_
<org.apache.xml.utils.ObjectVector: void setToSize(int)> ->_NONE_
<javax.crypto.ExemptionMechanism: javax.crypto.ExemptionMechanism getInstance(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xpath.operations.Variable: org.apache.xalan.templates.ElemVariable getElemVariable()> ->_NONE_
<android.webkit.WebSettingsClassic: void setNavDump(boolean)> ->_NONE_
<android.app.ApplicationThreadProxy: void dumpHeap(boolean,java.lang.String,android.os.ParcelFileDescriptor)> ->_NONE_
<android.net.NetworkStatsHistory: android.net.NetworkStatsHistory$Entry getValues(int,android.net.NetworkStatsHistory$Entry)> ->_NONE_
<java.lang.Runtime: java.io.InputStream getLocalizedInputStream(java.io.InputStream)> ->_NONE_
<android.view.View: void setOverScrollMode(int)> ->_NONE_
<android.text.StaticLayout: int getLineStart(int)> ->_NONE_
<android.test.suitebuilder.TestGrouping: java.util.SortedSet getTestCaseClasses()> ->_NONE_
<gov.nist.javax.sip.header.ims.PChargingVector: void setOriginatingIOI(java.lang.String)> ->_NONE_
<android.location.Address: java.lang.String getAddressLine(int)> ->_NONE_
<gov.nist.javax.sip.stack.MessageChannel: java.lang.String createBadReqRes(java.lang.String,java.text.ParseException)> ->_NONE_
<org.apache.xalan.processor.ProcessorStylesheetElement: org.apache.xalan.templates.Stylesheet getStylesheetRoot(org.apache.xalan.processor.StylesheetHandler)> ->_NONE_
<java.io.FileOutputStream: void write(byte[],int,int)> ->_NONE_
<gov.nist.javax.sip.address.SipUri: java.lang.String getLrParam()> ->_NONE_
<android.support.v4.app.FragmentManagerImpl: android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int)> ->_NONE_
<android.filterpacks.imageproc.BitmapSource: void loadImage(android.filterfw.core.FilterContext)> ->_NONE_
<java.nio.charset.CharsetEncoder: void implReplaceWith(byte[])> ->_NONE_
<org.apache.xalan.templates.ElemTemplate: int getXSLToken()> ->_NONE_
<org.xml.sax.helpers.XMLFilterImpl: void setErrorHandler(org.xml.sax.ErrorHandler)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: org.w3c.dom.NodeList getChildNodes()> ->_NONE_
<android.widget.ExpandableListConnector: android.widget.Filter getFilter()> ->_NONE_
<android.renderscript.ScriptIntrinsicLUT: android.renderscript.Script$KernelID getKernelID()> ->_NONE_
<android.os.UserManager: java.util.List getUsers()> ->_NONE_
<java.text.NumberFormat: void setMaximumIntegerDigits(int)> ->_NONE_
<android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)> ->_NONE_
<android.widget.RelativeLayout: android.view.View getRelatedView(int[],int)> ->_NONE_
<android.media.videoeditor.OverlayFrame: java.lang.String getBitmapImageFileName()> ->_NONE_
<android.view.ViewRootImpl: void dispatchInvalidateDelayed(android.view.View,long)> ->_NONE_
<org.apache.harmony.security.x509.Extensions: byte[] getEncoded()> ->_NONE_
<android.content.Intent: java.util.ArrayList getParcelableArrayListExtra(java.lang.String)> ->_NONE_
<android.content.SyncManager: void dumpDayStatistic(java.io.PrintWriter,android.content.SyncStorageEngine$DayStats)> ->_NONE_
<android.support.v4.widget.SimpleCursorAdapter: android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder()> ->_NONE_
<org.apache.xpath.axes.LocPathIterator: org.apache.xml.utils.PrefixResolver getPrefixResolver()> ->_NONE_
<org.apache.xml.utils.QName: java.lang.String getNamespaceURI()> ->_NONE_
<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)> ->_NONE_
<android.widget.ActivityChooserModel: void setIntent(android.content.Intent)> ->_NONE_
<java.security.KeyStore: void load(java.security.KeyStore$LoadStoreParameter)> ->_NONE_
<java.security.GuardedObject: java.lang.Object getObject()> ->_NONE_
<android.telephony.SignalStrength: int getAsuLevel()> ->_NONE_
<javax.crypto.SealedObject: java.lang.Object getObject(java.security.Key)> ->_NONE_
<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)> ->_NONE_
<android.accounts.AccountManagerService: void getAuthToken(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle)> ->_NONE_
<android.support.v4.app.DialogFragment: boolean getShowsDialog()> ->_NONE_
<android.webkit.WebViewClassic: void contentSizeChanged(boolean)> ->_NONE_
<org.apache.commons.io.input.TeeInputStream: int read()> ->_NONE_
<android.widget.TextView: int getBottomPaddingOffset()> ->_NONE_
<org.jivesoftware.smackx.provider.SimpleVCardProvider: com.google.common.io.protocol.ProtoBufType getProtoBufType()> ->_NONE_
<org.apache.http.impl.cookie.BestMatchSpec: int getVersion()> ->_NONE_
<gov.nist.javax.sip.header.UserAgent: java.util.ListIterator getProduct()> ->_NONE_
<android.view.HardwareRenderer: void setupDiskCache(java.io.File)> ->_NONE_
<java.security.cert.PKIXParameters: java.util.Set getInitialPolicies()> ->_NONE_
<org.javia.arity.Complex: org.javia.arity.Complex set(org.javia.arity.Complex)> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.StylesheetComposed getStylesheetComposed()> ->_NONE_
<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)> ->_NONE_
<org.apache.harmony.security.pkcs7.SignerInfo: java.util.List getAuthenticatedAttributes()> ->_NONE_
<libcore.io.ForwardingOs: int getuid()> ->_NONE_
<java.security.spec.RSAMultiPrimePrivateCrtKeySpec: java.math.BigInteger getPrimeExponentQ()> ->_NONE_
<java.security.spec.RSAMultiPrimePrivateCrtKeySpec: java.math.BigInteger getPrimeExponentP()> ->_NONE_
<org.apache.xalan.templates.OutputProperties: java.util.Vector getQNameProperties(java.lang.String,java.util.Properties)> ->_NONE_
<android.widget.TextView: android.graphics.Path getUpdatedHighlightPath()> ->_NONE_
<org.apache.http.message.BasicStatusLine: java.lang.String getReasonPhrase()> ->_NONE_
<org.apache.harmony.xml.ExpatReader: void setEntityResolver(org.xml.sax.EntityResolver)> ->_NONE_
<org.apache.xalan.templates.ElemNumber: void setCount(org.apache.xpath.XPath)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.CipherSuite: org.apache.harmony.xnet.provider.jsse.CipherSuite getByCode(byte,byte,byte)> ->_NONE_
<android.nfc.Tag: byte[] readBytesWithNull(android.os.Parcel)> ->_NONE_
<android.view.View: java.lang.Object getTag(int)> ->_NONE_
<android.app.UiModeManager: int getNightMode()> ->_NONE_
<java.security.cert.PKIXParameters: void setPolicyQualifiersRejected(boolean)> ->_NONE_
<android.inputmethodservice.InputMethodService: void onUpdateExtractedText(int,android.view.inputmethod.ExtractedText)> ->_NONE_
<org.apache.xalan.templates.ElemAttribute: void setName(org.apache.xalan.templates.AVT)> ->_NONE_
<android.view.MotionEvent: void setAction(int)> ->_NONE_
<org.apache.xml.serializer.SerializerBase: javax.xml.transform.Transformer getTransformer()> ->_NONE_
<android.content.ContentProviderOperation: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.widget.AdapterView: void setNextSelectedPositionInt(int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: void setNeedClientAuth(boolean)> ->_NONE_
<android.media.AudioManager: int getMasterVolume()> ->_NONE_
<android.app.admin.DevicePolicyManager: void setPasswordMinimumSymbols(android.content.ComponentName,int)> ->_NONE_
<android.net.InterfaceConfiguration: void setFlag(java.lang.String)> ->_NONE_
<java.lang.Class: java.lang.Class[] getClasses()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: void setWantClientAuth(boolean)> ->_NONE_
<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)> ->_NONE_
<org.apache.harmony.security.x509.tsp.PKIStatusInfo: org.apache.harmony.security.x509.tsp.PKIStatus getStatus()> ->_NONE_
<javax.net.ssl.HttpsURLConnection: java.security.Principal getLocalPrincipal()> ->_NONE_
<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)> ->_NONE_
<org.apache.commons.io.input.SwappedDataInputStream: char readChar()> ->_NONE_
<android.graphics.Shader: boolean getLocalMatrix(android.graphics.Matrix)> ->_NONE_
<android.app.ContextImpl: int getUserId()> ->_NONE_
<android.app.ContextImpl: java.io.FileOutputStream openFileOutput(java.lang.String,int)> ->_NONE_
<android.graphics.drawable.shapes.Shape: float getHeight()> ->_NONE_
<org.apache.james.mime4j.message.Multipart: java.lang.String getPreamble()> ->_NONE_
<android.view.KeyEvent: int getSource()> ->_NONE_
<android.filterfw.core.FieldPort: void setFrame(android.filterfw.core.Frame)> ->_NONE_
<android.net.http.Headers: java.lang.String getRefresh()> ->_NONE_
<android.filterpacks.ui.SurfaceRenderFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)> ->_NONE_
<java.util.concurrent.ScheduledThreadPoolExecutor: boolean getContinueExistingPeriodicTasksAfterShutdownPolicy()> ->_NONE_
<android.webkit.WebSettings: void setUserAgent(int)> ->_NONE_
<java.security.AlgorithmParameters: java.security.Provider getProvider()> ->_NONE_
<android.net.NetworkStats: java.lang.String setToString(int)> ->_NONE_
<android.support.v4.app.Fragment: java.lang.String getString(int,java.lang.Object[])> ->_NONE_
<org.ccil.cowan.tagsoup.AttributesImpl: void setURI(int,java.lang.String)> ->_NONE_
<android.drm.DrmManagerClient: int getDrmObjectType(android.net.Uri,java.lang.String)> ->_NONE_
<android.util.JsonWriter: void setIndent(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.SIPHeader: java.lang.String getHeaderName()> ->_NONE_
<android.text.SpannableStringBuilder: void getChars(int,int,char[],int)> ->_NONE_
<android.filterfw.core.FilterGraph: java.util.Set getFilters()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl: java.lang.String[] getDefaultCipherSuites()> ->_NONE_
<android.test.mock.MockResources: android.graphics.drawable.Drawable getDrawable(int)> ->_NONE_
<org.apache.james.mime4j.decoder.UnboundedFifoByteBuffer: byte get()> ->_NONE_
<org.apache.http.protocol.HttpRequestHandlerRegistry: java.util.Map getHandlers()> ->_NONE_
<android.media.audiofx.AudioEffect: int setParameter(int,byte[])> ->_NONE_
<android.app.Dialog: android.view.LayoutInflater getLayoutInflater()> ->_NONE_
<android.support.v4.app.ListFragment: void setEmptyText(java.lang.CharSequence)> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Enumerated: void encodeContent(org.apache.harmony.security.asn1.BerOutputStream)> ->_NONE_
<org.kxml2.io.KXmlParser: void readNotationDeclaration()> ->_NONE_
<java.util.ResourceBundle: java.util.Locale getLocale()> ->_NONE_
<android.text.DynamicLayout: int getLineDescent(int)> ->_NONE_
<android.media.AudioManager: void setRingerMode(int)> ->_NONE_
<org.apache.commons.codec.net.BCodec: java.lang.String getEncoding()> ->_NONE_
<android.graphics.Paint: int getBidiFlags()> ->_NONE_
<android.view.InputDevice: int getId()> ->_NONE_
<android.text.Layout: int getLineAscent(int)> ->_NONE_
<android.widget.FastScroller: void setScrollbarPosition(int)> ->_NONE_
<android.graphics.drawable.ShapeDrawable: void setShape(android.graphics.drawable.shapes.Shape)> ->_NONE_
<android.accessibilityservice.AccessibilityService: android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow()> ->_NONE_
<org.apache.xml.serializer.Version: int getDevelopmentVersionNum()> ->_NONE_
<android.widget.ExpandableListConnector: int getItemViewType(int)> ->_NONE_
<android.location.LocationRequest: android.location.LocationRequest setExpireIn(long)> ->_NONE_
<android.media.videoeditor.MediaImageItem: int getScaledHeight()> ->_NONE_
<android.media.videoeditor.TransitionAlpha: int getRGBFileWidth()> ->_NONE_
<android.telephony.SmsCbLocation: int getCid()> ->_NONE_
<java.security.AlgorithmParameterGenerator: java.security.Provider getProvider()> ->_NONE_
<android.animation.ObjectAnimator: void setFloatValues(float[])> ->_NONE_
<net.oauth.signature.PLAINTEXT: java.lang.String getSignature()> ->_NONE_
<android.webkit.WebView: void dumpViewHierarchyWithProperties(java.io.BufferedWriter,int)> ->_NONE_
<android.view.animation.LayoutAnimationController: void setDelay(float)> ->_NONE_
<org.jivesoftware.smack.packet.Packet: void setProperty(java.lang.String,long)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: void setQuietConflictWarnings(boolean)> ->_NONE_
<android.app.DialogFragment: void setStyle(int,int)> ->_NONE_
<gov.nist.javax.sip.header.Contact: java.lang.String encodeBody()> ->_NONE_
<android.app.Dialog: void setOnCancelListener(android.content.DialogInterface$OnCancelListener)> ->_NONE_
<android.filterpacks.imageproc.ContrastFilter: android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)> ->_NONE_
<android.widget.TableLayout: void setStretchAllColumns(boolean)> ->_NONE_
<org.apache.xalan.templates.ElemApplyImport: java.lang.String getNodeName()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: void setBranch(java.lang.String)> ->_NONE_
<junit.runner.TestCaseClassLoader: java.lang.Class loadClass(java.lang.String,boolean)> ->_NONE_
<android.telephony.SmsCbMessage: int getServiceCategory()> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: java.lang.String getLocalNameUnknown(java.lang.String)> ->_NONE_
<org.apache.http.entity.SerializableEntity: java.io.InputStream getContent()> ->_NONE_
<gov.nist.javax.sip.address.AddressImpl: void setUser(java.lang.String)> ->_NONE_
<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseReturnType()> ->_NONE_
<org.apache.xpath.axes.ChildTestIterator: int getAxis()> ->_NONE_
<org.apache.xml.utils.res.XResourceBundle: org.apache.xml.utils.res.XResourceBundle loadResourceBundle(java.lang.String,java.util.Locale)> ->_NONE_
<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> ->_NONE_
<org.apache.http.impl.AbstractHttpServerConnection: void init(org.apache.http.io.SessionInputBuffer,org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams)> ->_NONE_
<gov.nist.javax.sip.message.MessageFactoryImpl: void setDefaultContentEncodingCharset(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.SubscriptionState: void setReasonCode(java.lang.String)> ->_NONE_
<java.security.Signature: void setParameter(java.lang.String,java.lang.Object)> ->_NONE_
<android.filterfw.core.InputPort: android.filterfw.core.OutputPort getSourcePort()> ->_NONE_
<android.content.pm.PackageParser: android.os.Bundle parseMetaData(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.os.Bundle,java.lang.String[])> ->_NONE_
<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()> ->_NONE_
<android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance()> ->_NONE_
<android.support.v4.util.SparseArrayCompat: java.lang.Object get(int,java.lang.Object)> ->_NONE_
<android.widget.DatePicker: int getMonth()> ->_NONE_
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getBeforeText()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: org.w3c.dom.Node getNode(int)> ->_NONE_
<android.net.nsd.NsdServiceInfo: void setServiceType(java.lang.String)> ->_NONE_
<java.io.ObjectStreamField: int getOffset()> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: boolean getAllowUserInteraction()> ->_NONE_
<android.animation.ObjectAnimator: void setProperty(android.util.Property)> ->_NONE_
<android.net.wifi.WifiConfigStore: boolean forgetNetwork(int)> ->_NONE_
<android.support.v4.content.CursorLoader: java.lang.String getSelection()> ->_NONE_
<org.apache.james.mime4j.message.TempFileBinaryBody: java.io.InputStream getInputStream()> ->_NONE_
<org.apache.xpath.XPathContext: int getPredicateRoot()> ->_NONE_
<android.telephony.TelephonyManager: java.lang.String getIsimDomain()> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: void setSipProvider(gov.nist.javax.sip.SipProviderImpl)> ->_NONE_
<android.graphics.Rect: boolean setIntersect(android.graphics.Rect,android.graphics.Rect)> ->_NONE_
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByTypeAsUser(java.lang.String,android.os.UserHandle)> ->_NONE_
<libcore.icu.NativeDecimalFormat: void setRoundingMode(java.math.RoundingMode,double)> ->_NONE_
<java.util.jar.JarInputStream: java.util.zip.ZipEntry getNextEntry()> ->_NONE_
<android.view.animation.Animation: void setFillBefore(boolean)> ->_NONE_
<org.jivesoftware.smackx.packet.MUCInitialPresence: void setHistory(org.jivesoftware.smackx.packet.MUCInitialPresence$History)> ->_NONE_
<android.app.BackStackRecord: java.lang.CharSequence getBreadCrumbShortTitle()> ->_NONE_
<android.location.Location: long getTime()> ->_NONE_
<android.util.SparseBooleanArray: boolean get(int)> ->_NONE_
<org.apache.harmony.xml.dom.ProcessingInstructionImpl: java.lang.String getNodeValue()> ->_NONE_
<android.app.ActivityManagerProxy: void killApplicationWithAppId(java.lang.String,int)> ->_NONE_
<android.support.v4.view.PagerTitleStrip: int getMinHeight()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityManagerCompat: java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int)> ->_NONE_
<android.net.wifi.WifiNative: boolean setScanMode(boolean)> ->_NONE_
<org.apache.http.message.BufferedHeader: java.lang.String getValue()> ->_NONE_
<android.app.ActivityManager: android.os.Debug$MemoryInfo[] getProcessMemoryInfo(int[])> ->_NONE_
<android.view.InputQueue: android.view.InputChannel getInputChannel()> ->_NONE_
<android.webkit.WebSettingsClassic: void setUserAgentString(java.lang.String)> ->_NONE_
<org.apache.xml.serializer.ToHTMLStream: void characters(char[],int,int)> ->_NONE_
<android.widget.GridView: int getHorizontalSpacing()> ->_NONE_
<android.net.sip.SipProfile: void setCallingUid(int)> ->_NONE_
<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String getCommentURL()> ->_NONE_
<org.apache.http.entity.BasicHttpEntity: void setContentLength(long)> ->_NONE_
<android.telephony.CellSignalStrengthLte: int getLevel()> ->_NONE_
<java.util.Calendar: void setTimeInMillis(long)> ->_NONE_
<javax.net.ssl.SSLContext: java.lang.String getProtocol()> ->_NONE_
<android.view.View: boolean setAlphaNoInvalidation(float)> ->_NONE_
<java.text.DecimalFormatSymbols: void setNaN(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.TemplateList: org.apache.xalan.templates.TemplateSubPatternAssociation getHead(java.lang.String)> ->_NONE_
<android.content.ContentService: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String)> ->_NONE_
<libcore.net.http.HttpResponseCache: java.net.CacheResponse get(java.net.URI,java.lang.String,java.util.Map)> ->_NONE_
<java.util.concurrent.atomic.AtomicStampedReference: java.lang.Object get(int[])> ->_NONE_
<java.io.Reader: int read(char[])> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CRLEntryImpl: java.math.BigInteger getSerialNumber()> ->_NONE_
<gov.nist.javax.sip.header.AcceptEncoding: java.lang.String encodeBody()> ->_NONE_
<android.widget.ListPopupWindow: int getPromptPosition()> ->_NONE_
<java.security.cert.X509CertSelector: java.util.Set getPolicy()> ->_NONE_
<android.preference.Preference: void setOrder(int)> ->_NONE_
<android.widget.TextView: android.text.TextDirectionHeuristic getTextDirectionHeuristic()> ->_NONE_
<jp.co.omronsoft.openwnn.OpenWnnJAJP: int getShiftKeyState(android.view.inputmethod.EditorInfo)> ->_NONE_
<gov.nist.javax.sip.address.Authority: gov.nist.core.HostPort getHostPort()> ->_NONE_
<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.Transition getTransition(java.lang.String)> ->_NONE_
<org.ccil.cowan.tagsoup.AttributesImpl: void setLocalName(int,java.lang.String)> ->_NONE_
<java.lang.reflect.Field: float getFloat(java.lang.Object)> ->_NONE_
<android.view.MotionEvent: float getHistoricalPressure(int)> ->_NONE_
<android.graphics.drawable.GradientDrawable: void setCornerRadius(float)> ->_NONE_
<java.text.CollationElementIterator: void setOffset(int)> ->_NONE_
<org.apache.commons.codec.net.URLCodec: java.lang.Object decode(java.lang.Object)> ->_NONE_
<java.nio.charset.ModifiedUtf8: void encode(byte[],int,java.lang.String)> ->_NONE_
<android.filterfw.core.FrameFormat: int[] getDimensions()> ->_NONE_
<android.provider.MediaStore: android.net.Uri getMediaScannerUri()> ->_NONE_
<org.jivesoftware.smack.util.Base64: java.lang.String encodeBytes(byte[],int,int,int)> ->_NONE_
<java.net.URLConnection: boolean getDefaultAllowUserInteraction()> ->_NONE_
<org.apache.xalan.templates.ElemApplyTemplates: java.lang.String getNodeName()> ->_NONE_
<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.Drawable getDrawable()> ->_NONE_
<org.apache.http.impl.cookie.BasicClientCookie: void setSecure(boolean)> ->_NONE_
<android.text.HtmlToSpannedConverter: java.lang.Object getLast(android.text.Spanned,java.lang.Class)> ->_NONE_
<android.widget.Spinner: int getBaseline()> ->_NONE_
<android.media.MediaFormat: java.util.Map getMap()> ->_NONE_
<android.webkit.WebViewClassic: void setHitTestTypeFromUrl(java.lang.String)> ->_NONE_
<android.text.Layout: long getLineRangeForDraw(android.graphics.Canvas)> ->_NONE_
<gov.nist.javax.sip.message.SIPResponse: java.lang.String encode()> ->_NONE_
<android.animation.ValueAnimator: void setRepeatCount(int)> ->_NONE_
<android.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)> ->_NONE_
<libcore.net.url.JarURLConnectionImpl: boolean getUseCaches()> ->_NONE_
<android.net.MobileDataStateTracker: int setEnableApn(java.lang.String,boolean)> ->_NONE_
<org.apache.xml.dtm.ref.SecuritySupport12: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)> ->_NONE_
<android.database.sqlite.SQLiteDatabase: java.util.ArrayList getActiveDatabases()> ->_NONE_
<org.apache.xalan.xslt.SecuritySupport12: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)> ->_NONE_
<android.net.wifi.WifiStateMachine: void setFrequencyBand(int,boolean)> ->_NONE_
<android.filterpacks.imageproc.FlipFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)> ->_NONE_
<gov.nist.javax.sip.header.HeaderFactoryImpl: gov.nist.javax.sip.header.SipRequestLine createRequestLine(java.lang.String)> ->_NONE_
<android.media.videoeditor.AudioTrack: int getDuckedTrackVolume()> ->_NONE_
<android.webkit.BrowserFrame: void setCertificate(byte[])> ->_NONE_
<java.security.cert.PKIXParameters: java.lang.String getSigProvider()> ->_NONE_
<android.webkit.AutoCompletePopup: void setText(java.lang.CharSequence)> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: void setEmailHome(java.lang.String)> ->_NONE_
<android.view.Surface: void setLayer(int)> ->_NONE_
<android.webkit.WebViewClassic: void setupTrustStorageListener(android.content.Context)> ->_NONE_
<java.nio.DirectByteBuffer: byte get()> ->_NONE_
<android.webkit.CallbackProxy: void onPageStarted(java.lang.String,android.graphics.Bitmap)> ->_NONE_
<android.view.ViewConfiguration: int getKeyRepeatTimeout()> ->_NONE_
<libcore.net.http.RequestHeaders: java.lang.String getProxyAuthorization()> ->_NONE_
<android.webkit.WebViewCore: void updateTextSelection(int,int,int,int,int)> ->_NONE_
<android.app.admin.DevicePolicyManager: int getPasswordMinimumUpperCase(android.content.ComponentName,int)> ->_NONE_
<android.telephony.NeighboringCellInfo: int getLac()> ->_NONE_
<org.apache.http.auth.NTCredentials: java.security.Principal getUserPrincipal()> ->_NONE_
<android.hardware.SensorManager: float[] getOrientation(float[],float[])> ->_NONE_
<android.graphics.drawable.BitmapDrawable: int getOpacity()> ->_NONE_
<android.os.Parcel: java.util.HashMap readHashMap(java.lang.ClassLoader)> ->_NONE_
<org.jivesoftware.smack.PacketReader: org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser)> ->_NONE_
<java.net.URISyntaxException: int getIndex()> ->_NONE_
<android.filterfw.core.OutputPort: android.filterfw.core.Filter getTargetFilter()> ->_NONE_
<android.view.TextureView: int getLayerType()> ->_NONE_
<org.apache.xpath.compiler.OpMap: java.lang.Object getToken(int)> ->_NONE_
<android.graphics.drawable.ScaleDrawable: void setAlpha(int)> ->_NONE_
<android.webkit.BrowserFrame: java.lang.String getRawResFilename(int,android.content.Context)> ->_NONE_
<android.speech.srec.Recognizer: void setAcousticState(java.lang.String)> ->_NONE_
<org.apache.xml.utils.UnImplNode: void setInputEncoding(java.lang.String)> ->_NONE_
<org.xml.sax.helpers.NamespaceSupport: java.lang.String getURI(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: void setAuthenticationHeaders(javax.sip.message.Request)> ->_NONE_
<android.service.dreams.DreamService: void setScreenBright(boolean)> ->_NONE_
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script$KernelID getKernelIDXor()> ->_NONE_
<gov.nist.javax.sip.header.Reason: java.lang.String getName()> ->_NONE_
<android.bluetooth.BluetoothAdapter: int getScanMode()> ->_NONE_
<android.telephony.cdma.CdmaCellLocation: int getBaseStationLongitude()> ->_NONE_
<android.telephony.CellSignalStrengthLte: int getTimingAdvance()> ->_NONE_
<org.apache.xpath.functions.FuncCount: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<org.apache.xalan.templates.OutputProperties: void setIntProperty(org.apache.xml.utils.QName,int)> ->_NONE_
<android.widget.RemoteViews: void setShort(int,java.lang.String,short)> ->_NONE_
<android.view.View: int getVerticalFadingEdgeLength()> ->_NONE_
<android.widget.ListView: int getTopSelectionPixel(int,int,int)> ->_NONE_
<android.widget.TextClock: void setFormat12Hour(java.lang.CharSequence)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.AbstractSessionContext: javax.net.ssl.SSLSession getSession(byte[])> ->_NONE_
<android.webkit.WebSettingsClassic: boolean getUseWideViewPort()> ->_NONE_
<org.apache.james.mime4j.MimeStreamParser: void parseMessage(java.io.InputStream)> ->_NONE_
<android.app.admin.DevicePolicyManager: void setActivePasswordState(int,int,int,int,int,int,int,int,int)> ->_NONE_
<android.graphics.drawable.BitmapDrawable: void setGravity(int)> ->_NONE_
<org.apache.http.params.HttpProtocolParams: void setVersion(org.apache.http.params.HttpParams,org.apache.http.ProtocolVersion)> ->_NONE_
<java.nio.charset.MalformedInputException: java.lang.String getMessage()> ->_NONE_
<android.database.sqlite.SQLiteConnection: void dump(android.util.Printer,boolean)> ->_NONE_
<android.net.http.Request: void setLoadingPaused(boolean)> ->_NONE_
<android.telephony.TelephonyManager: java.lang.String getSimOperatorName()> ->_NONE_
<android.os.storage.StorageVolume: long getMaxFileSize()> ->_NONE_
<android.view.View: boolean getLocalVisibleRect(android.graphics.Rect)> ->_NONE_
<android.webkit.HTML5VideoView: void setOnInfoListener(android.webkit.HTML5VideoViewProxy)> ->_NONE_
<gov.nist.javax.sip.header.Contact: int getExpires()> ->_NONE_
<android.widget.CompoundButton: void setOnCheckedChangeWidgetListener(android.widget.CompoundButton$OnCheckedChangeListener)> ->_NONE_
<android.app.ApplicationThreadProxy: void unstableProviderDied(android.os.IBinder)> ->_NONE_
<org.apache.xml.utils.UnImplNode: org.w3c.dom.NamedNodeMap getAttributes()> ->_NONE_
<android.view.View: float getAlpha()> ->_NONE_
<android.widget.ZoomControls: void setIsZoomInEnabled(boolean)> ->_NONE_
<java.io.BufferedReader: boolean ready()> ->_NONE_
<java.util.TimeZone: int getDSTSavings()> ->_NONE_
<javax.xml.parsers.DocumentBuilderFactory: void setValidating(boolean)> ->_NONE_
<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getPeerName()> ->_NONE_
<android.view.View: int getNextFocusDownId()> ->_NONE_
<org.apache.http.impl.auth.DigestScheme: java.lang.String encode(byte[])> ->_NONE_
<android.filterfw.core.Filter: void notifyFieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)> ->_NONE_
<java.util.zip.ZipEntry: void setMethod(int)> ->_NONE_
<android.test.TestRunner: void setInternalIterations(int)> ->_NONE_
<android.text.Layout: float getLineRight(int)> ->_NONE_
<android.net.TrafficStats: long getRxPackets(java.lang.String)> ->_NONE_
<android.net.http.HttpsConnection: javax.net.ssl.SSLSocketFactory getSocketFactory()> ->_NONE_
<android.view.View: int getVerticalScrollbarPosition()> ->_NONE_
<android.content.res.ObbScanner: android.content.res.ObbInfo getObbInfo(java.lang.String)> ->_NONE_
<java.sql.DataTruncation: int getDataSize()> ->_NONE_
<android.webkit.WebSettings: boolean getAllowContentAccess()> ->_NONE_
<org.apache.harmony.xml.dom.CommentImpl: short getNodeType()> ->_NONE_
<android.view.MotionEvent: int axisFromString(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getTransactionId()> ->_NONE_
<android.view.MotionEvent: float getHistoricalToolMinor(int)> ->_NONE_
<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)> ->_NONE_
<java.util.concurrent.FutureTask: void set(java.lang.Object)> ->_NONE_
<java.io.EmulatedFields: short get(java.lang.String,short)> ->_NONE_
<android.support.v4.widget.SimpleCursorAdapter: void setStringConversionColumn(int)> ->_NONE_
<java.security.spec.RSAMultiPrimePrivateCrtKeySpec: java.math.BigInteger getPrimeP()> ->_NONE_
<org.apache.xalan.transformer.KeyIterator: org.apache.xml.utils.QName getName()> ->_NONE_
<java.security.spec.RSAMultiPrimePrivateCrtKeySpec: java.math.BigInteger getPrimeQ()> ->_NONE_
<org.apache.xml.serializer.SerializerBase: java.lang.String getDoctypeSystem()> ->_NONE_
<android.webkit.WebViewCore: void showRect(int,int,int,int,int,int,float,float,float,float)> ->_NONE_
<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)> ->_NONE_
<android.view.InputDevice: java.lang.String getName()> ->_NONE_
<android.webkit.WebSettings: void setSaveFormData(boolean)> ->_NONE_
<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTElementProcessor getProcessorFor(java.lang.String,java.lang.String)> ->_NONE_
<java.text.Bidi: int getLevelAt(int)> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationHeader: void setUsername(java.lang.String)> ->_NONE_
<android.preference.GenericInflater: void setFactory(android.preference.GenericInflater$Factory)> ->_NONE_
<org.apache.xalan.templates.ElemNumber: org.apache.xalan.templates.AVT getFormat()> ->_NONE_
<org.apache.http.message.BasicHttpResponse: void setStatusCode(int)> ->_NONE_
<android.widget.AbsSeekBar: void setThumb(android.graphics.drawable.Drawable)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: int getViaPort()> ->_NONE_
<android.webkit.WebSettings: boolean getBlockNetworkLoads()> ->_NONE_
<org.apache.xpath.functions.SecuritySupport: java.lang.String getSystemProperty(java.lang.String)> ->_NONE_
<java.lang.Class: java.lang.annotation.Annotation[] getAnnotations()> ->_NONE_
<java.util.jar.JarEntry: java.security.CodeSigner[] getCodeSigners()> ->_NONE_
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAccountsByTypeAndFeatures(java.lang.String,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)> ->_NONE_
<android.media.MediaMetadataRetriever: void setDataSource(java.lang.String,java.util.Map)> ->_NONE_
<javax.obex.ObexHelper: byte[] getTagValue(byte,byte[])> ->_NONE_
<android.graphics.drawable.DrawableContainer: android.graphics.Insets getLayoutInsets()> ->_NONE_
<java.security.cert.X509CertSelector: java.util.Collection getSubjectAlternativeNames()> ->_NONE_
<android.test.mock.MockResources: java.lang.String getResourceTypeName(int)> ->_NONE_
<android.bluetooth.BluetoothDevice: boolean setTrust(boolean)> ->_NONE_
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)> ->_NONE_
<android.view.ViewGroup: int getPersistentDrawingCache()> ->_NONE_
<org.apache.commons.io.input.TeeInputStream: int read(byte[],int,int)> ->_NONE_
<java.net.URI: java.lang.String getPath()> ->_NONE_
<android.location.LocationManager: void requestSingleUpdate(android.location.Criteria,android.location.LocationListener,android.os.Looper)> ->_NONE_
<org.ccil.cowan.tagsoup.HTMLScanner: java.lang.String getPublicId()> ->_NONE_
<android.view.textservice.TextServicesManager: void setSpellCheckerEnabled(boolean)> ->_NONE_
<jp.co.omronsoft.openwnn.OpenWnnJAJP: int commitTextThroughInputConnection(java.lang.String)> ->_NONE_
<android.animation.LayoutTransition: void setAnimator(int,android.animation.Animator)> ->_NONE_
<android.support.v13.app.FragmentPagerAdapter: long getItemId(int)> ->_NONE_
<java.net.URL: java.lang.String getPath()> ->_NONE_
<android.app.ActivityManager: int getLauncherLargeIconSize()> ->_NONE_
<org.apache.xpath.axes.ChildTestIterator: int getNextNode()> ->_NONE_
<android.view.View: void setOnDragListener(android.view.View$OnDragListener)> ->_NONE_
<android.database.sqlite.SQLiteGlobal: int getWALConnectionPoolSize()> ->_NONE_
<org.apache.harmony.security.x509.InvalidityDate: byte[] getEncoded()> ->_NONE_
<java.nio.LongToByteBufferAdapter: long get()> ->_NONE_
<java.nio.charset.CharsetEncoderICU: byte[] makeReplacement(java.lang.String,long)> ->_NONE_
<java.security.spec.RSAOtherPrimeInfo: java.math.BigInteger getPrime()> ->_NONE_
<org.apache.xalan.templates.Stylesheet: int getVariableOrParamCount()> ->_NONE_
<android.net.wifi.WifiInfo: int getNetworkId()> ->_NONE_
<android.graphics.drawable.Drawable: boolean setLevel(int)> ->_NONE_
<android.filterpacks.imageproc.VignetteFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<android.text.style.SuggestionSpan: void setFlags(int)> ->_NONE_
<gov.nist.javax.sip.parser.RAckParser: gov.nist.javax.sip.header.SIPHeader parse()> ->_NONE_
<android.widget.SimpleCursorAdapter: void setViewImage(android.widget.ImageView,java.lang.String)> ->_NONE_
<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScheme getAuthScheme()> ->_NONE_
<android.hardware.usb.UsbDevice: int getDeviceClass()> ->_NONE_
<android.drm.ProcessedData: java.lang.String getSubscriptionId()> ->_NONE_
<libcore.io.ForwardingOs: void connect(java.io.FileDescriptor,java.net.InetAddress,int)> ->_NONE_
<dalvik.system.profiler.PortableThreadSampler: void setDepth(int)> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationHeader: void setParameter(java.lang.String,java.lang.String)> ->_NONE_
<android.util.EventLogTags: android.util.EventLogTags$Description get(int)> ->_NONE_
<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPResponse createResponse(int,java.lang.String)> ->_NONE_
<android.view.FocusFinder: int getWeightedDistanceFor(int,int)> ->_NONE_
<java.net.Inet4Address: java.lang.String getHostAddress()> ->_NONE_
<android.media.RingtoneManager: android.net.Uri getDefaultUri(int)> ->_NONE_
<java.util.concurrent.atomic.AtomicIntegerArray: int get(int)> ->_NONE_
<android.widget.TextView: void handleTextChanged(java.lang.CharSequence,int,int,int)> ->_NONE_
<android.filterfw.geometry.Quad: float getBoundingHeight()> ->_NONE_
<android.graphics.Matrix: void setTranslate(float,float)> ->_NONE_
<org.apache.xml.utils.SecuritySupport: java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader)> ->_NONE_
<android.telephony.TelephonyManager: int getPhoneType(int)> ->_NONE_
<android.webkit.WebSettings: void setNeedInitialFocus(boolean)> ->_NONE_
<libcore.net.url.FtpHandler: int getDefaultPort()> ->_NONE_
<android.preference.Preference: java.lang.String getKey()> ->_NONE_
<org.apache.http.auth.NTCredentials: java.lang.String getPassword()> ->_NONE_
<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)> ->_NONE_
<android.view.ViewPropertyAnimator: long getStartDelay()> ->_NONE_
<gov.nist.javax.sip.header.Via: java.lang.String getProtocol()> ->_NONE_
<net.oauth.http.HttpMessage: void dump(java.util.Map)> ->_NONE_
<android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View,int)> ->_NONE_
<android.net.DnsPinger: void handleMessage(android.os.Message)> ->_NONE_
<android.media.videoeditor.OverlayFrame: int getResizedRGBSizeWidth()> ->_NONE_
<android.webkit.BrowserFrame: android.webkit.CallbackProxy getCallbackProxy()> ->_NONE_
<android.webkit.WebViewCore: void setMockDeviceOrientation(boolean,double,boolean,double,boolean,double)> ->_NONE_
<org.apache.harmony.security.x509.AuthorityKeyIdentifier: org.apache.harmony.security.x509.GeneralNames getAuthorityCertIssuer()> ->_NONE_
<net.oauth.OAuthProblemException: java.lang.String getMessage()> ->_NONE_
<android.graphics.Bitmap: void setPixel(int,int,int)> ->_NONE_
<android.widget.TextView: int getCompoundPaddingLeft()> ->_NONE_
<android.webkit.WebSettingsClassic: java.lang.String getUserAgentString()> ->_NONE_
<android.widget.TextView: int getCompoundPaddingEnd()> ->_NONE_
<android.os.RemoteCallbackList: int getRegisteredCallbackCount()> ->_NONE_
<org.apache.http.impl.conn.tsccm.AbstractConnPool: org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntry(org.apache.http.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit)> ->_NONE_
<org.xmlpull.v1.sax2.Driver: java.lang.String getLocalName(int)> ->_NONE_
<android.content.CursorLoader: void setUri(android.net.Uri)> ->_NONE_
<java.security.cert.X509CertSelector: java.util.Collection getPathToNames()> ->_NONE_
<java.security.cert.PKIXCertPathValidatorResult: java.security.cert.TrustAnchor getTrustAnchor()> ->_NONE_
<org.apache.xml.utils.DOM2Helper: org.w3c.dom.Element getElementByID(java.lang.String,org.w3c.dom.Document)> ->_NONE_
<java.nio.DatagramChannelImpl: java.net.InetAddress getLocalAddress()> ->_NONE_
<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.reflect.Constructor getLogConstructor()> ->_NONE_
<android.net.http.HttpAuthHeader: java.lang.String getRealm()> ->_NONE_
<android.view.View: int getNextFocusLeftId()> ->_NONE_
<android.app.ApplicationThreadProxy: void scheduleTrimMemory(int)> ->_NONE_
<android.net.wifi.p2p.WifiP2pManager: void removeServiceRequest(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.nsd.WifiP2pServiceRequest,android.net.wifi.p2p.WifiP2pManager$ActionListener)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setScrollX(java.lang.Object,int)> ->_NONE_
<java.lang.VMClassLoader: java.net.URL getResource(java.lang.String)> ->_NONE_
<java.security.spec.X509EncodedKeySpec: byte[] getEncoded()> ->_NONE_
<android.net.wifi.p2p.WifiP2pGroup: int getNetworkId()> ->_NONE_
<android.app.Notification: void setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)> ->_NONE_
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: long getState()> ->_NONE_
<android.widget.TextView: android.os.Bundle getInputExtras(boolean)> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: void setLocalTag(java.lang.String)> ->_NONE_
<android.webkit.WebSettings: int getCacheMode()> ->_NONE_
<android.net.ThrottleManager: long getResetTime(java.lang.String)> ->_NONE_
<org.apache.james.mime4j.BodyDescriptor: java.util.Map getHeaderParams(java.lang.String)> ->_NONE_
<android.app.PendingIntent: java.lang.String getCreatorPackage()> ->_NONE_
<java.io.StringReader: boolean ready()> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: void setFixedLengthStreamingMode(int)> ->_NONE_
<java.security.spec.ECFieldF2m: int getM()> ->_NONE_
<org.apache.xpath.axes.OneStepIterator: int getLength()> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: void setTransformer(javax.xml.transform.Transformer)> ->_NONE_
<android.test.InstrumentationTestRunner: java.lang.ClassLoader getLoader()> ->_NONE_
<org.apache.xalan.transformer.TransformerHandlerImpl: void setDocumentLocator(org.xml.sax.Locator)> ->_NONE_
<org.ccil.cowan.tagsoup.XMLWriter: void startDTD(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.database.CursorWrapper: java.lang.String getString(int)> ->_NONE_
<java.net.Socket: int getLocalPort()> ->_NONE_
<android.webkit.WebSettings: void setTextSize(android.webkit.WebSettings$TextSize)> ->_NONE_
<android.telephony.ServiceState: int getCdmaEriIconMode()> ->_NONE_
<android.app.ContextImpl: android.app.ContextImpl getImpl(android.content.Context)> ->_NONE_
<android.view.TextureView: android.graphics.Matrix getTransform(android.graphics.Matrix)> ->_NONE_
<org.apache.xpath.Expression: int getLineNumber()> ->_NONE_
<android.net.ThrottleManager: long getByteCount(java.lang.String,int,int,int)> ->_NONE_
<org.apache.http.impl.SocketHttpServerConnection: java.net.InetAddress getRemoteAddress()> ->_NONE_
<android.graphics.Region: boolean set(android.graphics.Region)> ->_NONE_
<java.util.TimeZone: int getOffset(long)> ->_NONE_
<org.apache.xml.dtm.ref.NodeLocator: int getLineNumber()> ->_NONE_
<android.os.Message: java.lang.Runnable getCallback()> ->_NONE_
<android.webkit.WebSettingsClassic: void setDatabaseEnabled(boolean)> ->_NONE_
<android.webkit.WebViewClassic: int getProgress()> ->_NONE_
<android.util.FloatProperty: void set(java.lang.Object,java.lang.Float)> ->_NONE_
<android.widget.NumberPicker: int getValue()> ->_NONE_
<android.bluetooth.BluetoothA2dp: void log(java.lang.String)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setScrollY(java.lang.Object,int)> ->_NONE_
<android.view.View: android.view.HardwareRenderer getHardwareRenderer()> ->_NONE_
<org.apache.http.impl.io.AbstractSessionInputBuffer: int read(byte[],int,int)> ->_NONE_
<gov.nist.javax.sip.address.SipUri: void setGrParam(java.lang.String)> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: void setReuseStrategy(org.apache.http.ConnectionReuseStrategy)> ->_NONE_
<org.apache.james.mime4j.field.address.parser.AddressListParser: org.apache.james.mime4j.field.address.parser.Token getNextToken()> ->_NONE_
<android.app.ActivityThread: android.content.res.Resources getTopLevelResources(java.lang.String,int,android.content.res.Configuration,android.app.LoadedApk)> ->_NONE_
<android.hardware.Camera: void setZoomChangeListener(android.hardware.Camera$OnZoomChangeListener)> ->_NONE_
<org.apache.xml.serializer.NamespaceMappings: org.apache.xml.serializer.NamespaceMappings$Stack getPrefixStack(java.lang.String)> ->_NONE_
<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: int getAndIncrement(java.lang.Object)> ->_NONE_
<org.apache.xalan.templates.ElemLiteralResult: void setVersion(java.lang.String)> ->_NONE_
<libcore.icu.ICU: java.util.Locale[] getAvailableLocales()> ->_NONE_
<org.apache.xpath.Expression: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)> ->_NONE_
<android.preference.MultiSelectListPreference: void setValues(java.util.Set)> ->_NONE_
<java.util.Locale: java.lang.String getCountry()> ->_NONE_
<android.widget.AppSecurityPermissions: android.view.View getPermissionItemViewOld(android.content.Context,android.view.LayoutInflater,java.lang.CharSequence,java.lang.CharSequence,boolean,android.graphics.drawable.Drawable)> ->_NONE_
<android.app.ListFragment: android.widget.ListAdapter getListAdapter()> ->_NONE_
<android.net.http.HttpAuthHeader: void setUsername(java.lang.String)> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertImpl: byte[] getExtensionValue(java.lang.String)> ->_NONE_
<org.apache.james.mime4j.codec.EncoderUtil: int qEncodedLength(byte[],org.apache.james.mime4j.codec.EncoderUtil$Usage)> ->_NONE_
<org.apache.xalan.templates.StylesheetRoot: java.text.DecimalFormatSymbols getDecimalFormatComposed(org.apache.xml.utils.QName)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setParcelableData(android.os.Parcelable)> ->_NONE_
<java.net.URL: java.lang.Object getContent(java.lang.Class[])> ->_NONE_
<android.graphics.drawable.RotateDrawable: boolean getPadding(android.graphics.Rect)> ->_NONE_
<junit.framework.TestResult: void run(junit.framework.TestCase)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.security.cert.Certificate[] getPeerCertificates()> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: void setSourceTreeDocForThread(int)> ->_NONE_
<org.apache.harmony.xml.ExpatParser: void parseFragment(java.io.Reader)> ->_NONE_
<libcore.icu.NativeDecimalFormat: int getMinimumIntegerDigits()> ->_NONE_
<android.content.SyncStorageEngine: android.content.SyncStatusInfo getOrCreateSyncStatus(android.content.SyncStorageEngine$AuthorityInfo)> ->_NONE_
<org.apache.xml.res.XMLMessages: void setLocale(java.util.Locale)> ->_NONE_
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLength(android.content.ComponentName,int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.ProtocolVersion: org.apache.harmony.xnet.provider.jsse.ProtocolVersion getLatestVersion(java.lang.String[])> ->_NONE_
<android.view.accessibility.AccessibilityRecord: void setChecked(boolean)> ->_NONE_
<android.content.Loader: void onStopLoading()> ->_NONE_
<android.content.SyncQueue: java.util.Collection getOperations()> ->_NONE_
<java.net.ServerSocket: void setReuseAddress(boolean)> ->_NONE_
<android.view.View: void setLabelFor(int)> ->_NONE_
<android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)> ->_NONE_
<android.net.http.RequestQueue: android.net.http.Request getRequest(org.apache.http.HttpHost)> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CRLImpl: java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)> ->_NONE_
<android.widget.GridView: void setSelection(int)> ->_NONE_
<android.drm.DrmManagerClient: int processDrmInfo(android.drm.DrmInfo)> ->_NONE_
<java.io.RandomAccessFile: void write(byte[])> ->_NONE_
<org.apache.http.impl.cookie.RFC2109VersionHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.CipherSuite: java.lang.String getBulkEncryptionAlgorithm()> ->_NONE_
<org.apache.xalan.transformer.TransformerHandlerImpl: void setSystemId(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.Accept: gov.nist.javax.sip.header.MediaRange getMediaRange()> ->_NONE_
<org.apache.xml.serializer.SecuritySupport12: java.lang.ClassLoader getSystemClassLoader()> ->_NONE_
<gov.nist.javax.sip.header.SIPHeaderList: java.lang.String getName()> ->_NONE_
<android.os.Messenger: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.os.UserManager: boolean isUserRunning(android.os.UserHandle)> ->_NONE_
<android.app.ApplicationPackageManager: void setComponentEnabledSetting(android.content.ComponentName,int,int)> ->_NONE_
<android.widget.TextView: void setMinHeight(int)> ->_NONE_
<android.speech.tts.TextToSpeech: int setSpeechRate(float)> ->_NONE_
<org.jivesoftware.smack.packet.PresenceCapability: void setHash(java.lang.String)> ->_NONE_
<libcore.icu.CollationElementIteratorICU: void setOffset(int)> ->_NONE_
<javax.xml.transform.stream.StreamResult: void setOutputStream(java.io.OutputStream)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: int getItemCount()> ->_NONE_
<android.media.audiofx.EnvironmentalReverb: int getReflectionsDelay()> ->_NONE_
<android.webkit.CallbackProxy: void onProgressChanged(int)> ->_NONE_
<android.net.wifi.WifiConfigStore: android.net.wifi.NetworkUpdateResult addOrUpdateNetworkNative(android.net.wifi.WifiConfiguration)> ->_NONE_
<android.view.KeyCharacterMap: android.view.KeyCharacterMap load(int)> ->_NONE_
<java.sql.SQLWarning: java.sql.SQLWarning getNextWarning()> ->_NONE_
<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.Source getAssociatedStylesheet(javax.xml.transform.Source,java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.view.GestureDetector: void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)> ->_NONE_
<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()> ->_NONE_
<android.widget.Toast: void setView(android.view.View)> ->_NONE_
<android.os.CommonTimeConfig: int setPanicThreshold(int)> ->_NONE_
<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)> ->_NONE_
<org.apache.xalan.templates.StylesheetRoot: java.util.Properties getOutputProperties()> ->_NONE_
<android.renderscript.Matrix3f: float[] getArray()> ->_NONE_
<android.nfc.NfcActivityManager: void setNdefPushContentUri(android.app.Activity,android.net.Uri[])> ->_NONE_
<android.webkit.BrowserFrame: void loadData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.support.v4.content.ModernAsyncTask: void execute(java.lang.Runnable)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setSource(android.view.View)> ->_NONE_
<org.apache.xml.serializer.SerializerBase: java.lang.String getLocalName(java.lang.String)> ->_NONE_
<jp.co.omronsoft.openwnn.ComposingText: jp.co.omronsoft.openwnn.StrSegment getStrSegment(int,int)> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getLabelFor()> ->_NONE_
<org.apache.xalan.templates.ElemValueOf: void setDisableOutputEscaping(boolean)> ->_NONE_
<android.gesture.GestureLibrary: android.gesture.Learner getLearner()> ->_NONE_
<org.apache.xml.utils.UnImplNode: void setDocumentURI(java.lang.String)> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CRLImpl: java.util.Set getRevokedCertificates()> ->_NONE_
<android.media.audiofx.AudioEffect: android.media.audiofx.AudioEffect$Descriptor getDescriptor()> ->_NONE_
<gov.nist.core.StringTokenizer: char getNextChar()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: int getAddedCount()> ->_NONE_
<java.util.zip.Inflater: int getTotalIn()> ->_NONE_
<android.os.storage.StorageManager: java.lang.String[] getVolumePaths()> ->_NONE_
<android.net.rtp.AudioStream: void setDtmfType(int)> ->_NONE_
<org.apache.http.protocol.UriPatternMatcher: void setHandlers(java.util.Map)> ->_NONE_
<org.apache.xpath.compiler.OpMap: int getFirstChildPosOfStep(int)> ->_NONE_
<java.util.zip.ZipInputStream: java.util.zip.ZipEntry getNextEntry()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getDocumentURI()> ->_NONE_
<android.content.res.AssetManager: java.lang.CharSequence getPooledString(int,int)> ->_NONE_
<android.app.ActivityThread: void sendActivityResult(android.os.IBinder,java.lang.String,int,int,android.content.Intent)> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: java.lang.String getNodeNameX(int)> ->_NONE_
<org.apache.commons.codec.net.BCodec: byte[] doDecoding(byte[])> ->_NONE_
<android.media.videoeditor.MediaItem: android.media.videoeditor.Effect getEffect(java.lang.String)> ->_NONE_
<android.util.SparseArray: void setValueAt(int,java.lang.Object)> ->_NONE_
<android.nfc.NdefMessage: int getByteArrayLength()> ->_NONE_
<android.view.KeyEvent: int getKeyCode()> ->_NONE_
<org.apache.xalan.templates.ElemCopy: void execute(org.apache.xalan.transformer.TransformerImpl)> ->_NONE_
<org.apache.xpath.axes.AxesWalker: int getCurrentNode()> ->_NONE_
<android.view.animation.GridLayoutAnimationController: float getColumnDelay()> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: java.lang.String getNodeValue()> ->_NONE_
<android.animation.ValueAnimator: int getRepeatCount()> ->_NONE_
<android.view.View: int getMeasuredState()> ->_NONE_
<android.webkit.WebHistoryItemClassic: int getId()> ->_NONE_
<android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)> ->_NONE_
<android.drm.ProcessedData: byte[] getData()> ->_NONE_
<android.app.admin.DevicePolicyManager: int getPasswordMinimumNonLetter(android.content.ComponentName)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: java.lang.String getNodeName(int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.io.InputStream getInputStream()> ->_NONE_
<org.apache.xml.dtm.ref.IncrementalSAXSource_Filter: org.apache.xml.dtm.ref.CoroutineManager getCoroutineManager()> ->_NONE_
<android.support.v4.view.ViewCompat: android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)> ->_NONE_
<java.util.Date: int getYear()> ->_NONE_
<org.json.JSONArray: boolean getBoolean(int)> ->_NONE_
<java.util.concurrent.atomic.AtomicLong: long getAndAdd(long)> ->_NONE_
<org.apache.xml.utils.DefaultErrorHandler: void fatalError(javax.xml.transform.TransformerException)> ->_NONE_
<java.sql.DataTruncation: int getTransferSize()> ->_NONE_
<org.apache.http.conn.params.ConnManagerParams: void setMaxConnectionsPerRoute(org.apache.http.params.HttpParams,org.apache.http.conn.params.ConnPerRoute)> ->_NONE_
<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()> ->_NONE_
<android.hardware.display.WifiDisplayStatus: android.hardware.display.WifiDisplay[] getRememberedDisplays()> ->_NONE_
<android.test.mock.MockResources: java.lang.String getString(int,java.lang.Object[])> ->_NONE_
<android.text.DynamicLayout: int getNumberOfBlocks()> ->_NONE_
<android.text.style.TypefaceSpan: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.xalan.processor.StylesheetHandler: javax.xml.transform.Templates getTemplates()> ->_NONE_
<libcore.io.GaiException: java.lang.String getMessage()> ->_NONE_
<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] getValues()> ->_NONE_
<javax.xml.transform.stream.StreamResult: void setSystemId(java.io.File)> ->_NONE_
<android.media.audiofx.EnvironmentalReverb: short getRoomHFLevel()> ->_NONE_
<android.net.http.RequestQueue: android.net.http.Request removeFirst(java.util.LinkedHashMap)> ->_NONE_
<javax.xml.xpath.XPathFactoryFinder: javax.xml.xpath.XPathFactory createInstance(java.lang.String)> ->_NONE_
<android.database.sqlite.SQLiteProgram: java.lang.String[] getColumnNames()> ->_NONE_
<java.nio.HeapByteBuffer: char getChar(int)> ->_NONE_
<android.inputmethodservice.SoftInputWindow: int getSize()> ->_NONE_
<android.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsMessageBase getSmsFacility()> ->_NONE_
<android.webkit.CallbackProxy: void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater)> ->_NONE_
<android.nfc.NdefRecord: android.nfc.NdefRecord createUri(java.lang.String)> ->_NONE_
<android.renderscript.ScriptIntrinsicBlur: void setInput(android.renderscript.Allocation)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: java.lang.CharSequence getBeforeText()> ->_NONE_
<gov.nist.javax.sip.address.GenericURI: java.lang.String getScheme()> ->_NONE_
<java.text.RuleBasedBreakIterator: java.text.CharacterIterator getText()> ->_NONE_
<android.text.method.BaseMovementMethod: int getScrollBoundsLeft(android.widget.TextView)> ->_NONE_
<org.apache.xpath.operations.Operation: org.apache.xpath.Expression getRightOperand()> ->_NONE_
<android.graphics.drawable.ClipDrawable: int getIntrinsicHeight()> ->_NONE_
<gov.nist.javax.sip.header.Allow: java.lang.String getMethod()> ->_NONE_
<java.io.DataInputStream: float readFloat()> ->_NONE_
<android.media.ExifInterface: void loadAttributes()> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)> ->_NONE_
<android.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getIcon2(android.database.Cursor)> ->_NONE_
<android.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getIcon1(android.database.Cursor)> ->_NONE_
<org.apache.xml.utils.UnImplNode: boolean getSpecified()> ->_NONE_
<android.net.TrafficStats: long getRxBytes(java.lang.String)> ->_NONE_
<org.jivesoftware.smackx.ServiceDiscoveryManager: java.lang.String getIdentityType()> ->_NONE_
<android.support.v4.app.Fragment: void setUserVisibleHint(boolean)> ->_NONE_
<android.content.res.TypedArray: float getDimension(int,float)> ->_NONE_
<org.apache.xml.utils.DOM2Helper: java.lang.String getLocalNameOfNode(org.w3c.dom.Node)> ->_NONE_
<org.ccil.cowan.tagsoup.PYXWriter: void pi(char[],int,int)> ->_NONE_
<gov.nist.javax.sip.header.ims.PAssertedService: void setApplicationIdentifiers(java.lang.String)> ->_NONE_
<android.webkit.WebSettings: boolean getSaveFormData()> ->_NONE_
<android.media.MediaFile: java.lang.String getFileTitle(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.SIPDate: java.util.Calendar getJavaCal()> ->_NONE_
<org.jivesoftware.smack.SmackConfiguration: int getKeepAliveInterval()> ->_NONE_
<org.ccil.cowan.tagsoup.Parser: void setErrorHandler(org.xml.sax.ErrorHandler)> ->_NONE_
<gov.nist.javax.sip.header.ims.PMediaAuthorization: void setValue(java.lang.String)> ->_NONE_
<android.content.res.TypedArray: java.lang.CharSequence[] getTextArray(int)> ->_NONE_
<android.text.method.DateTimeKeyListener: int getInputType()> ->_NONE_
<android.preference.Preference: android.preference.Preference$OnPreferenceClickListener getOnPreferenceClickListener()> ->_NONE_
<org.apache.xpath.Expression: void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: int getHandleFromNode(org.w3c.dom.Node)> ->_NONE_
<android.location.Address: void setPremises(java.lang.String)> ->_NONE_
<android.view.View: int getLeftPaddingOffset()> ->_NONE_
<android.widget.AutoCompleteTextView: void setDropDownAnimationStyle(int)> ->_NONE_
<android.net.nsd.NsdManager: void unregisterService(android.net.nsd.NsdManager$RegistrationListener)> ->_NONE_
<android.media.AudioService: int getStreamVolume(int)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: java.lang.String getTypeName()> ->_NONE_
<org.apache.commons.codec.net.QuotedPrintableCodec: java.lang.String decode(java.lang.String,java.lang.String)> ->_NONE_
<android.widget.SearchView: void setQueryHint(java.lang.CharSequence)> ->_NONE_
<android.accounts.AccountManagerService: java.lang.Integer getCredentialPermissionNotificationId(android.accounts.Account,java.lang.String,int)> ->_NONE_
<android.text.method.SingleLineTransformationMethod: char[] getOriginal()> ->_NONE_
<java.net.Inet6Address: byte[] getAddress()> ->_NONE_
<android.view.textservice.SpellCheckerSession: android.view.textservice.SpellCheckerInfo getSpellChecker()> ->_NONE_
<android.os.Bundle: char getChar(java.lang.String)> ->_NONE_
<android.widget.TextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)> ->_NONE_
<org.apache.xml.utils.PrefixResolverDefault: java.lang.String getNamespaceForPrefix(java.lang.String)> ->_NONE_
<android.net.DnsPinger: java.util.List getDnsList()> ->_NONE_
<android.view.ViewRootImpl: void enqueueDisplayList(android.view.DisplayList)> ->_NONE_
<org.apache.commons.io.input.NullInputStream: int read(byte[])> ->_NONE_
<org.apache.commons.io.IOUtils: long copyLarge(java.io.Reader,java.io.Writer)> ->_NONE_
<java.net.PlainDatagramSocketImpl: void setOption(int,java.lang.Object)> ->_NONE_
<android.hardware.display.DisplayManagerGlobal: android.hardware.display.WifiDisplayStatus getWifiDisplayStatus()> ->_NONE_
<android.drm.ProcessedData: java.lang.String getAccountId()> ->_NONE_
<android.media.AudioService: void setRemoteStreamVolume(int)> ->_NONE_
<org.apache.http.params.HttpProtocolParams: java.lang.String getUserAgent(org.apache.http.params.HttpParams)> ->_NONE_
<android.content.pm.PackageParser: java.lang.String buildClassName(java.lang.String,java.lang.CharSequence,java.lang.String[])> ->_NONE_
<android.view.View: void setTag(int,java.lang.Object)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: java.lang.String[] getEnabledProtocols()> ->_NONE_
<org.apache.http.util.EncodingUtils: byte[] getBytes(java.lang.String,java.lang.String)> ->_NONE_
<android.webkit.AccessibilityInjector: int getAxsUrlParameterValue(java.lang.String)> ->_NONE_
<android.widget.ResourceCursorAdapter: void setDropDownViewResource(int)> ->_NONE_
<javax.crypto.Cipher: byte[] update(byte[])> ->_NONE_
<android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()> ->_NONE_
<jp.co.omronsoft.openwnn.ComposingText: void replaceStrSegment0(int,jp.co.omronsoft.openwnn.StrSegment[],int,int)> ->_NONE_
<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String,boolean)> ->_NONE_
<java.text.DateFormatSymbols: java.lang.String[] getShortMonths()> ->_NONE_
<gov.nist.javax.sip.header.Reason: void setProtocol(java.lang.String)> ->_NONE_
<android.view.animation.Transformation: void printShortString(java.io.PrintWriter)> ->_NONE_
<gov.nist.core.StringTokenizer: java.lang.String getNextToken(char)> ->_NONE_
<java.util.Locale: java.lang.String getDisplayName()> ->_NONE_
<android.provider.Browser: android.database.Cursor getAllVisitedUrls(android.content.ContentResolver)> ->_NONE_
<android.hardware.display.WifiDisplayStatus: android.hardware.display.WifiDisplay getActiveDisplay()> ->_NONE_
<org.apache.harmony.luni.lang.reflect.ImplForType: java.lang.reflect.Type getResolvedType()> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: byte[] getFileBytes(java.io.File)> ->_NONE_
<java.util.regex.PatternSyntaxException: int getIndex()> ->_NONE_
<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: void setDSLLocation(java.lang.String)> ->_NONE_
<android.widget.Filter: void setDelayer(android.widget.Filter$Delayer)> ->_NONE_
<java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale)> ->_NONE_
<android.webkit.SslClientCertLookupTable: android.webkit.SslClientCertLookupTable getInstance()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: java.lang.String getDocumentSystemIdentifier(int)> ->_NONE_
<java.util.concurrent.ThreadPoolExecutor: void setKeepAliveTime(long,java.util.concurrent.TimeUnit)> ->_NONE_
<android.content.IntentSender: java.lang.String getTargetPackage()> ->_NONE_
<android.widget.ArrayAdapter: int getCount()> ->_NONE_
<junit.textui.TestRunner: junit.framework.TestResult runSingleMethod(java.lang.String,java.lang.String,boolean)> ->_NONE_
<android.graphics.Bitmap: void setHasMipMap(boolean)> ->_NONE_
<javax.net.ssl.HandshakeCompletedEvent: java.security.cert.Certificate[] getPeerCertificates()> ->_NONE_
<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)> ->_NONE_
<android.webkit.MimeTypeMap: java.lang.String remapGenericMimeType(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler getErrorHandler()> ->_NONE_
<android.webkit.WebViewClassic: void setFindListener(android.webkit.WebView$FindListener)> ->_NONE_
<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)> ->_NONE_
<java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int,java.util.Locale)> ->_NONE_
<java.net.InterfaceAddress: java.net.InetAddress getAddress()> ->_NONE_
<javax.crypto.spec.OAEPParameterSpec: java.lang.String getMGFAlgorithm()> ->_NONE_
<android.content.SyncStorageEngine: android.content.SyncStorageEngine$DayStats[] getDayStatistics()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: int getSendBufferSize()> ->_NONE_
<android.hardware.SerialPort: java.lang.String getName()> ->_NONE_
<gov.nist.core.NameValue: java.lang.String setValue(java.lang.String)> ->_NONE_
<android.drm.DrmManagerClient: java.lang.String getOriginalMimeType(android.net.Uri)> ->_NONE_
<org.jivesoftware.smack.ServerTrustManager: void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String)> ->_NONE_
<android.widget.DatePicker: long getMinDate()> ->_NONE_
<org.ccil.cowan.tagsoup.jaxp.SAX1ParserAdapter: void setDocumentHandler(org.xml.sax.DocumentHandler)> ->_NONE_
<android.net.wifi.p2p.WifiP2pManager: void createGroup(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ActionListener)> ->_NONE_
<android.view.Window: void setGravity(int)> ->_NONE_
<android.app.ActivityOptions: int getStartY()> ->_NONE_
<android.app.ActivityOptions: int getStartX()> ->_NONE_
<org.apache.harmony.security.x509.CRLDistributionPoints: void dumpValue(java.lang.StringBuilder,java.lang.String)> ->_NONE_
<android.telephony.CellBroadcastMessage: java.lang.String getDateString(android.content.Context)> ->_NONE_
<libcore.net.http.HttpEngine: java.io.InputStream getResponseBody()> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: int getNextNodeIdentity(int)> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Enumerated: org.apache.harmony.security.asn1.ASN1Enumerated getInstance()> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: short getShouldStripSpace(int,org.apache.xml.dtm.DTM)> ->_NONE_
<org.apache.xalan.transformer.TransformerIdentityImpl: void setOutputProperties(java.util.Properties)> ->_NONE_
<android.hardware.display.DisplayManager: void connectWifiDisplay(java.lang.String)> ->_NONE_
<android.app.LoadedApk: java.lang.String getLibDir()> ->_NONE_
<android.mtp.MtpStorage: java.lang.String getDescription()> ->_NONE_
<android.renderscript.Matrix2f: float[] getArray()> ->_NONE_
<java.beans.PropertyChangeSupport: java.beans.PropertyChangeListener[] getPropertyChangeListeners()> ->_NONE_
<android.app.ActivityManagerProxy: int bindService(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,int,int)> ->_NONE_
<org.jivesoftware.smackx.packet.DiscoverInfo: void setNode(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.Via: java.lang.String getTransport()> ->_NONE_
<android.widget.VideoView: int getCurrentPosition()> ->_NONE_
<java.security.DigestInputStream: java.security.MessageDigest getMessageDigest()> ->_NONE_
<java.text.RuleBasedBreakIterator: void setText(java.text.CharacterIterator)> ->_NONE_
<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getTransport()> ->_NONE_
<android.mtp.MtpDeviceInfo: java.lang.String getManufacturer()> ->_NONE_
<android.net.http.HttpsConnection: java.lang.String getScheme()> ->_NONE_
<android.widget.SimpleExpandableListAdapter: java.lang.Object getGroup(int)> ->_NONE_
<android.bluetooth.BluetoothTetheringDataTracker: android.net.LinkProperties getLinkProperties()> ->_NONE_
<android.app.Dialog: android.app.ActionBar getActionBar()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: org.apache.xml.dtm.DTMManager getManager()> ->_NONE_
<android.accounts.AccountManager: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)> ->_NONE_
<android.app.ProgressDialog: void setProgress(int)> ->_NONE_
<org.apache.http.conn.routing.HttpRoute: org.apache.http.conn.routing.RouteInfo$LayerType getLayerType()> ->_NONE_
<android.webkit.WebResourceResponse: void setEncoding(java.lang.String)> ->_NONE_
<android.widget.ListView: int getArrowScrollPreviewLength()> ->_NONE_
<org.jivesoftware.smackx.ServiceDiscoveryManager: void publishItems(java.lang.String,java.lang.String,org.jivesoftware.smackx.packet.DiscoverItems)> ->_NONE_
<android.webkit.WebHistoryItemClassic: java.lang.String getTitle()> ->_NONE_
<android.widget.AbsListView: void setScrollingCacheEnabled(boolean)> ->_NONE_
<gov.nist.javax.sip.header.AllowEvents: java.lang.String getEventType()> ->_NONE_
<android.widget.TextView: int getCurrentTextColor()> ->_NONE_
<java.text.BreakIterator: java.text.BreakIterator getSentenceInstance()> ->_NONE_
<android.telephony.PhoneNumberUtils: int getFormatTypeFromCountryCode(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.OutputProperties: void setProperty(org.apache.xml.utils.QName,java.lang.String)> ->_NONE_
<org.apache.harmony.security.asn1.DerOutputStream: void encodeSequenceOf(org.apache.harmony.security.asn1.ASN1SequenceOf)> ->_NONE_
<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)> ->_NONE_
<android.widget.ViewAnimator: int getDisplayedChild()> ->_NONE_
<android.content.pm.PathPermission: java.lang.String getReadPermission()> ->_NONE_
<libcore.net.http.RawHeaders: int getResponseCode()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setChecked(boolean)> ->_NONE_
<android.support.v4.app.BackStackRecord: void dump(java.lang.String,java.io.PrintWriter,boolean)> ->_NONE_
<gov.nist.javax.sip.parser.WarningParser: gov.nist.javax.sip.header.SIPHeader parse()> ->_NONE_
<android.widget.ZoomButtonsController: void setAutoDismissed(boolean)> ->_NONE_
<gov.nist.javax.sip.header.SIPHeaderList: void setPrettyEncode(boolean)> ->_NONE_
<org.apache.http.impl.HttpConnectionMetricsImpl: void setMetric(java.lang.String,java.lang.Object)> ->_NONE_
<android.text.DynamicLayout: int[] getBlockEndLines()> ->_NONE_
<java.util.zip.InflaterOutputStream: void write(byte[],int,int)> ->_NONE_
<android.widget.TextView: android.graphics.Typeface getTypeface()> ->_NONE_
<android.widget.SlidingDrawer: android.view.View getContent()> ->_NONE_
<org.apache.xml.serializer.EncodingInfo: char getHighChar()> ->_NONE_
<android.content.pm.VerificationParams: int getInstallerUid()> ->_NONE_
<java.io.Console: java.io.Console getConsole()> ->_NONE_
<gov.nist.javax.sip.parser.AcceptLanguageParser: gov.nist.javax.sip.header.SIPHeader parse()> ->_NONE_
<android.provider.Browser: java.lang.String[] getVisitedHistory(android.content.ContentResolver)> ->_NONE_
<java.security.spec.RSAKeyGenParameterSpec: java.math.BigInteger getPublicExponent()> ->_NONE_
<gov.nist.javax.sip.stack.TLSMessageChannel: void sendMessage(byte[],boolean)> ->_NONE_
<org.kxml2.io.KXmlParser: boolean readExternalId(boolean,boolean)> ->_NONE_
<android.telephony.SignalStrength: int getGsmBitErrorRate()> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: void setRemoteTarget(javax.sip.header.ContactHeader)> ->_NONE_
<org.kxml2.io.KXmlParser: void readEntityDeclaration()> ->_NONE_
<android.telephony.TelephonyManager: int getLteOnCdmaMode()> ->_NONE_
<android.telephony.PhoneNumberUtils: java.lang.String replaceUnicodeDigits(java.lang.String)> ->_NONE_
<org.apache.http.impl.client.BasicCredentialsProvider: org.apache.http.auth.Credentials getCredentials(org.apache.http.auth.AuthScope)> ->_NONE_
<org.apache.http.impl.conn.AbstractClientConnAdapter: void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest)> ->_NONE_
<android.widget.TextView: void setAutoLinkMask(int)> ->_NONE_
<java.io.RandomAccessFile: char readChar()> ->_NONE_
<android.support.v4.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)> ->_NONE_
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: void setTransactionId(int)> ->_NONE_
<org.kxml2.io.KXmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)> ->_NONE_
<org.apache.harmony.security.asn1.DerOutputStream: void getValueOfLength(org.apache.harmony.security.asn1.ASN1ValueCollection)> ->_NONE_
<android.support.v4.view.VelocityTrackerCompatHoneycomb: float getYVelocity(android.view.VelocityTracker,int)> ->_NONE_
<gov.nist.javax.sip.header.Challenge: java.lang.String getScheme()> ->_NONE_
<android.bluetooth.BluetoothAdapter: int getState()> ->_NONE_
<java.util.concurrent.RecursiveTask: void setRawResult(java.lang.Object)> ->_NONE_
<android.webkit.HTML5VideoViewProxy: void setBaseLayer(int)> ->_NONE_
<android.media.CameraProfile: int[] getImageEncodingQualityLevels(int)> ->_NONE_
<android.view.View: void setIsRootNamespace(boolean)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.ClientHello: int getType()> ->_NONE_
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void setMaxTotalConnections(int)> ->_NONE_
<android.os.Bundle: float[] getFloatArray(java.lang.String)> ->_NONE_
<java.nio.FileChannelImpl: int write(java.nio.ByteBuffer)> ->_NONE_
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)> ->_NONE_
<android.filterfw.core.ShaderProgram: void setTargetRect(float,float,float,float)> ->_NONE_
<android.app.ApplicationPackageManager: int[] getPackageGids(java.lang.String)> ->_NONE_
<org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream: int getBeginColumn()> ->_NONE_
<org.xml.sax.helpers.ParserAdapter: void setContentHandler(org.xml.sax.ContentHandler)> ->_NONE_
<java.net.Socks4Message: java.lang.String getErrorString(int)> ->_NONE_
<org.apache.xml.utils.IntVector: void setSize(int)> ->_NONE_
<java.lang.ThreadGroup: void setDaemon(boolean)> ->_NONE_
<org.apache.xpath.axes.LocPathIterator: int getCurrentNode()> ->_NONE_
<android.media.videoeditor.MediaArtistNativeHelper: void onPreviewProgressUpdate(int,boolean,boolean,java.lang.String,int,int)> ->_NONE_
<android.graphics.drawable.NinePatchDrawable: void setDither(boolean)> ->_NONE_
<org.apache.commons.codec.language.Soundex: void setSoundexMapping(char[])> ->_NONE_
<libcore.net.MimeUtils: java.io.InputStream getContentTypesPropertiesStream()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: int getDocument()> ->_NONE_
<android.net.wifi.WifiNative: boolean setBluetoothCoexistenceScanMode(boolean)> ->_NONE_
<android.net.wifi.WifiStateMachine: android.os.Messenger getMessenger()> ->_NONE_
<android.util.JsonWriter: android.util.JsonWriter close(android.util.JsonScope,android.util.JsonScope,java.lang.String)> ->_NONE_
<java.net.SocketUtils: void setCreated(java.net.Socket)> ->_NONE_
<android.widget.ArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler getContentHandler()> ->_NONE_
<java.nio.IntArrayBuffer: int get()> ->_NONE_
<android.widget.Switch: void setSwitchTypeface(android.graphics.Typeface,int)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: byte[] encodeAsBytes(java.lang.String)> ->_NONE_
<javax.obex.ServerOperation: boolean continueOperation(boolean,boolean)> ->_NONE_
<android.graphics.drawable.AnimatedRotateDrawable: void setFramesCount(int)> ->_NONE_
<android.media.videoeditor.MediaVideoItem: int getAudioChannels()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.ServerKeyExchange: java.security.interfaces.RSAPublicKey getRSAPublicKey()> ->_NONE_
<java.util.regex.PatternSyntaxException: java.lang.String getDescription()> ->_NONE_
<android.widget.ListPopupWindow: void setContentWidth(int)> ->_NONE_
<android.net.BaseNetworkStateTracker: android.os.Handler getTargetHandler()> ->_NONE_
<android.net.TrafficStats: long getMobileRxPackets()> ->_NONE_
<gov.nist.javax.sip.stack.SIPServerTransaction: void sendResponse(javax.sip.message.Response)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: void setNeedClientAuth(boolean)> ->_NONE_
<org.apache.commons.io.EndianUtils: void writeSwappedDouble(byte[],int,double)> ->_NONE_
<android.widget.TextView: android.content.res.ColorStateList getLinkTextColors()> ->_NONE_
<libcore.net.http.ResponseHeaders: libcore.net.http.RawHeaders getHeaders()> ->_NONE_
<android.animation.ValueAnimator: android.animation.ValueAnimator$AnimationHandler getOrCreateAnimationHandler()> ->_NONE_
<org.apache.harmony.xml.parsers.DocumentBuilderFactoryImpl: void setAttribute(java.lang.String,java.lang.Object)> ->_NONE_
<android.content.res.TypedArray: int getIndexCount()> ->_NONE_
<org.apache.xml.dtm.DTMManager: void setXMLStringFactory(org.apache.xml.utils.XMLStringFactory)> ->_NONE_
<android.emoji.EmojiFactory: int getMinimumAndroidPua()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: int getNextNamespaceNode(int,int,boolean)> ->_NONE_
<gov.nist.javax.sip.header.CSeq: void setMethod(java.lang.String)> ->_NONE_
<android.media.videoeditor.MediaItem: void setGeneratedImageClip(java.lang.String)> ->_NONE_
<java.net.InetSocketAddress: java.lang.String getHostName()> ->_NONE_
<android.view.MotionEvent: float getHistoricalTouchMinor(int)> ->_NONE_
<android.widget.ArrayAdapter: int getPosition(java.lang.Object)> ->_NONE_
<android.test.suitebuilder.TestSuiteBuilder: android.test.suitebuilder.TestGrouping getTestGrouping()> ->_NONE_
<java.net.URLConnection: void setIfModifiedSince(long)> ->_NONE_
<android.net.rtp.RtpStream: java.net.InetAddress getLocalAddress()> ->_NONE_
<org.apache.harmony.security.x509.Extension: byte[] getRawExtnValue()> ->_NONE_
<java.util.concurrent.ThreadPoolExecutor: long getKeepAliveTime(java.util.concurrent.TimeUnit)> ->_NONE_
<org.jivesoftware.smack.packet.LoginRequest: java.lang.String getUser()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.ConnectionState: int getContentSize(int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: boolean getKeepAlive()> ->_NONE_
<java.util.PropertyResourceBundle: java.util.Enumeration getKeys()> ->_NONE_
<android.media.MediaCodecInfo: java.lang.String getName()> ->_NONE_
<org.apache.xml.utils.FastStringBuffer: void sendSAXComment(org.xml.sax.ext.LexicalHandler,int,int)> ->_NONE_
<org.apache.xalan.transformer.XalanTransformState: org.w3c.dom.Node getMatchedNode()> ->_NONE_
<android.net.NetworkStatsHistory: android.net.NetworkStatsHistory$Entry getValues(long,long,long,android.net.NetworkStatsHistory$Entry)> ->_NONE_
<android.app.DownloadManager: android.net.Uri getUriForDownloadedFile(long)> ->_NONE_
<android.filterfw.core.InputPort: void setSourcePort(android.filterfw.core.OutputPort)> ->_NONE_
<java.security.cert.X509CertSelector: void setAuthorityKeyIdentifier(byte[])> ->_NONE_
<gov.nist.javax.sip.header.ParametersHeader: boolean getParameterAsBoolean(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.SecuritySupport: java.lang.String getSystemProperty(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.From: gov.nist.core.HostPort getHostPort()> ->_NONE_
<android.text.style.LocaleSpan: int getSpanTypeId()> ->_NONE_
<android.widget.TextView: int getOffsetForPosition(float,float)> ->_NONE_
<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Object[])> ->_NONE_
<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EffectSettings getEffectSettings(android.media.videoeditor.EffectColor)> ->_NONE_
<android.os.Debug: java.lang.String getCallers(int,java.lang.String)> ->_NONE_
<org.apache.commons.logging.impl.SimpleLog: java.lang.ClassLoader getContextClassLoader()> ->_NONE_
<android.content.res.Resources: android.content.res.XmlResourceParser loadXmlResourceParser(int,java.lang.String)> ->_NONE_
<org.apache.http.client.methods.HttpHead: java.lang.String getMethod()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: int getTypedFirstChild(int,int)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: java.util.ListIterator getHeaders(java.lang.String)> ->_NONE_
<android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)> ->_NONE_
<android.location.Address: java.lang.String getSubThoroughfare()> ->_NONE_
<gov.nist.javax.sip.header.Credentials: java.lang.String getScheme()> ->_NONE_
<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper getNativeContext()> ->_NONE_
<java.sql.DriverManager: void setLoginTimeout(int)> ->_NONE_
<gov.nist.javax.sip.header.RequestLine: gov.nist.javax.sip.address.GenericURI getUri()> ->_NONE_
<android.hardware.Sensor: int getHandle()> ->_NONE_
<android.telephony.gsm.SmsMessage: int getProtocolIdentifier()> ->_NONE_
<java.util.regex.PatternSyntaxException: java.lang.String getPattern()> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: void setLabeledBy(android.view.View)> ->_NONE_
<android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.CertificateMessage: int getType()> ->_NONE_
<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.text.CharacterIterator)> ->_NONE_
<java.io.DataOutputStream: void write(byte[],int,int)> ->_NONE_
<java.lang.Package: java.lang.String getSpecificationVersion()> ->_NONE_
<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getValue(int)> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CRLEntryImpl: javax.security.auth.x500.X500Principal getCertificateIssuer()> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: java.lang.Exception getExceptionThrown()> ->_NONE_
<java.lang.reflect.Method: int getModifiers()> ->_NONE_
<junit.runner.TestCaseClassLoader: byte[] getClassData(java.io.File)> ->_NONE_
<java.net.ServerSocket: int getSoTimeout()> ->_NONE_
<org.apache.xalan.processor.StylesheetHandler: java.lang.String getBaseIdentifier()> ->_NONE_
<org.apache.xalan.processor.ProcessorKey: void setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement)> ->_NONE_
<java.util.concurrent.ForkJoinWorkerThread: java.util.concurrent.ForkJoinPool getPool()> ->_NONE_
<org.jivesoftware.smack.SmackConfiguration: java.lang.String getVersion()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: int getPeerPacketSourcePort()> ->_NONE_
<java.util.ArrayDeque: java.lang.Object getLast()> ->_NONE_
<gov.nist.javax.sip.header.Unsupported: void setOptionTag(java.lang.String)> ->_NONE_
<org.apache.http.impl.io.AbstractSessionOutputBuffer: org.apache.http.io.HttpTransportMetrics getMetrics()> ->_NONE_
<gov.nist.javax.sip.stack.ServerLog: void setLogFileName(java.lang.String)> ->_NONE_
<android.webkit.WebView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)> ->_NONE_
<gov.nist.javax.sip.address.SipUri: int getTTLParam()> ->_NONE_
<java.lang.String: void getChars(int,int,char[],int)> ->_NONE_
<java.nio.DoubleArrayBuffer: double get()> ->_NONE_
<org.apache.harmony.security.asn1.BitString: void setBit(int,boolean)> ->_NONE_
<android.net.http.HttpsConnection: void setCertificate(android.net.http.SslCertificate)> ->_NONE_
<android.widget.SearchView: java.lang.CharSequence getQuery()> ->_NONE_
<org.apache.xalan.templates.ElemCopy: int getXSLToken()> ->_NONE_
<android.net.wifi.WifiConfiguration: int getAuthType()> ->_NONE_
<java.util.concurrent.ScheduledThreadPoolExecutor: void setExecuteExistingDelayedTasksAfterShutdownPolicy(boolean)> ->_NONE_
<org.apache.xpath.XPathContext: void setURIResolver(javax.xml.transform.URIResolver)> ->_NONE_
<android.os.HandlerThread: int getThreadId()> ->_NONE_
<java.net.PlainDatagramSocketImpl: byte getTTL()> ->_NONE_
<org.apache.http.auth.AuthScope: java.lang.String getHost()> ->_NONE_
<android.webkit.MimeTypeMap: java.lang.String getFileExtensionFromUrl(java.lang.String)> ->_NONE_
<java.security.spec.RSAOtherPrimeInfo: java.math.BigInteger getExponent()> ->_NONE_
<android.database.CursorWrapper: float getFloat(int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.DigitalSignature: void setMD5(byte[])> ->_NONE_
<android.telephony.CellInfoGsm: void setCellIdentity(android.telephony.CellIdentityGsm)> ->_NONE_
<java.security.CodeSigner: java.security.Timestamp getTimestamp()> ->_NONE_
<net.oauth.client.OAuthResponseMessage: java.io.InputStream getBodyAsStream()> ->_NONE_
<android.filterpacks.imageproc.TintFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)> ->_NONE_
<org.jivesoftware.smack.util.StringUtils: java.lang.String escapeForXML(java.lang.String)> ->_NONE_
<java.lang.reflect.Field: int getModifiers()> ->_NONE_
<java.text.DecimalFormat: int getMultiplier()> ->_NONE_
<java.nio.charset.CharsetEncoder: boolean isLegalReplacement(byte[])> ->_NONE_
<android.server.search.Searchables: android.content.ComponentName getWebSearchActivity()> ->_NONE_
<org.apache.http.impl.SocketHttpClientConnection: java.net.Socket getSocket()> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.params.HttpParams getParams()> ->_NONE_
<dalvik.system.CloseGuard: void setEnabled(boolean)> ->_NONE_
<org.apache.xpath.axes.FilterExprIteratorSimple: void setInnerExpression(org.apache.xpath.Expression)> ->_NONE_
<gov.nist.javax.sip.SipStackImpl: gov.nist.javax.sip.LogRecordFactory getLogRecordFactory()> ->_NONE_
<android.graphics.Canvas: android.graphics.Rect getClipBounds()> ->_NONE_
<android.net.ConnectivityManager: java.lang.String[] getTetheredIfaces()> ->_NONE_
<android.nfc.NdefRecord: android.net.Uri parseWktUri()> ->_NONE_
<android.widget.ImageView: boolean getCropToPadding()> ->_NONE_
<android.graphics.drawable.ShapeDrawable: void setAlpha(int)> ->_NONE_
<org.apache.xalan.templates.StylesheetRoot: void setSecureProcessing(boolean)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setScrollable(boolean)> ->_NONE_
<android.security.AndroidKeyPairGeneratorSpec: java.util.Date getEndDate()> ->_NONE_
<org.apache.xml.serializer.dom3.NamespaceSupport: int getDeclaredPrefixCount()> ->_NONE_
<android.widget.TextView: void setPaddingRelative(int,int,int,int)> ->_NONE_
<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String getComment()> ->_NONE_
<java.io.LineNumberInputStream: int read(byte[],int,int)> ->_NONE_
<android.net.wifi.p2p.WifiP2pGroupList: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.http.impl.AbstractHttpServerConnection: org.apache.http.io.HttpMessageParser createRequestParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpRequestFactory,org.apache.http.params.HttpParams)> ->_NONE_
<org.apache.xalan.templates.ElemExsltFunction: int getXSLToken()> ->_NONE_
<org.apache.xml.serializer.ToStream: void charactersRaw(char[],int,int)> ->_NONE_
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void closeIdleConnections(long,java.util.concurrent.TimeUnit)> ->_NONE_
<android.database.sqlite.SQLiteConnection: void setForeignKeyModeFromConfiguration()> ->_NONE_
<android.webkit.WebSettings: boolean getBuiltInZoomControls()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.Document getOwnerDocument()> ->_NONE_
<java.net.URLStreamHandler: java.net.URLConnection openConnection(java.net.URL,java.net.Proxy)> ->_NONE_
<android.widget.TableRow: void setColumnsWidthConstraints(int[])> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: java.net.InetAddress getLocalAddress()> ->_NONE_
<org.jivesoftware.smack.packet.Presence: void setCapabilityFlag(int)> ->_NONE_
<android.media.AudioService: void dispatchMediaKeyEvent(android.view.KeyEvent,boolean)> ->_NONE_
<android.app.ExpandableListActivity: boolean setSelectedChild(int,int,boolean)> ->_NONE_
<android.nfc.ApduList: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.xpath.XPathContext: javax.xml.transform.ErrorListener getErrorListener()> ->_NONE_
<android.filterfw.core.AsyncRunner: android.filterfw.core.FilterGraph getGraph()> ->_NONE_
<android.widget.GridView: int getNumColumns()> ->_NONE_
<android.widget.CalendarView: android.graphics.drawable.Drawable getSelectedDateVerticalBar()> ->_NONE_
<java.text.DecimalFormatSymbols: void setGroupingSeparator(char)> ->_NONE_
<org.apache.xml.serializer.dom3.LSSerializerImpl: java.lang.String getNewLine()> ->_NONE_
<android.widget.CalendarView: int getFirstDayOfWeek()> ->_NONE_
<android.webkit.WebSettingsClassic: void setPageCacheCapacity(int)> ->_NONE_
<android.webkit.WebSettings: void setPluginsPath(java.lang.String)> ->_NONE_
<org.jivesoftware.smack.provider.ProviderManager: void setDefault(org.jivesoftware.smack.provider.ProviderManager)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: java.lang.String getPkeyAlias()> ->_NONE_
<android.filterfw.core.Filter: int getNumberOfOutputs()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPublicKey: java.lang.String getAlgorithm()> ->_NONE_
<android.app.Activity: android.app.FragmentManager getFragmentManager()> ->_NONE_
<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int getAxis()> ->_NONE_
<java.util.AbstractList: java.lang.Object set(int,java.lang.Object)> ->_NONE_
<java.security.cert.CertPathBuilder: java.lang.String getDefaultType()> ->_NONE_
<org.jivesoftware.smack.packet.LoginRequest: java.lang.String getResource()> ->_NONE_
<android.webkit.WebViewClassic: boolean onKeyDown(int,android.view.KeyEvent)> ->_NONE_
<org.jivesoftware.smack.packet.BatchPresence: int getNumPresenceStanzas()> ->_NONE_
<org.apache.harmony.security.fortress.Services: java.security.Provider getProvider(java.lang.String)> ->_NONE_
<android.net.ConnectivityManager: boolean setRadio(int,boolean)> ->_NONE_
<android.app.Dialog: android.content.Context getContext()> ->_NONE_
<android.telephony.CellSignalStrengthGsm: int getAsuLevel()> ->_NONE_
<org.apache.xpath.VariableStack: void setLocalVariable(int,org.apache.xpath.objects.XObject,int)> ->_NONE_
<android.webkit.HTML5VideoViewProxy: android.webkit.WebViewClassic getWebView()> ->_NONE_
<javax.crypto.spec.OAEPParameterSpec: java.lang.String getDigestAlgorithm()> ->_NONE_
<android.app.DialogFragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> ->_NONE_
<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getInAnimation()> ->_NONE_
<android.media.AudioManager: int getStreamVolume(int)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: void runTransformThread(int)> ->_NONE_
<android.widget.RadioGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)> ->_NONE_
<gov.nist.javax.sip.header.extensions.References: java.lang.String getName()> ->_NONE_
<android.text.PackedIntVector: void setValue(int,int,int)> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplate getOwnerXSLTemplate()> ->_NONE_
<org.apache.xalan.templates.ElemNumber: org.apache.xml.utils.NodeVector getMatchingAncestors(org.apache.xpath.XPathContext,int,boolean)> ->_NONE_
<android.net.sip.SipProfile: java.lang.String getSipDomain()> ->_NONE_
<gov.nist.javax.sip.header.Challenge: java.lang.String getResponse()> ->_NONE_
<android.graphics.drawable.PictureDrawable: int getOpacity()> ->_NONE_
<android.net.dhcp.DhcpPacket: int getTransactionId()> ->_NONE_
<android.app.ActivityManagerProxy: android.content.IIntentSender getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)> ->_NONE_
<android.graphics.Matrix: boolean setConcat(android.graphics.Matrix,android.graphics.Matrix)> ->_NONE_
<android.app.Activity: android.content.SharedPreferences getPreferences(int)> ->_NONE_
<android.webkit.ZoomManager: float getDefaultScale()> ->_NONE_
<java.lang.StringBuilder: java.lang.StringBuilder replace(int,int,java.lang.String)> ->_NONE_
<android.view.accessibility.AccessibilityInteractionClient: void addConnection(int,android.accessibilityservice.IAccessibilityServiceConnection)> ->_NONE_
<android.bluetooth.BluetoothInputDevice: java.util.List getDevicesMatchingConnectionStates(int[])> ->_NONE_
<org.xml.sax.helpers.ParserAdapter: void setDTDHandler(org.xml.sax.DTDHandler)> ->_NONE_
<android.widget.AbsListView: void sendAccessibilityEvent(int)> ->_NONE_
<android.graphics.Paint: int getTextRunCursor(java.lang.String,int,int,int,int,int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: byte[] getDigestSHA()> ->_NONE_
<android.media.audiofx.AudioEffect: void setEnableStatusListener(android.media.audiofx.AudioEffect$OnEnableStatusChangeListener)> ->_NONE_
<javax.security.auth.Subject: java.util.Set getPublicCredentials()> ->_NONE_
<android.webkit.WebStorageClassic: void getUsageForOrigin(java.lang.String,android.webkit.ValueCallback)> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.auth.AuthSchemeRegistry getAuthSchemes()> ->_NONE_
<org.jivesoftware.smack.packet.XMPPError: java.lang.String getMessage()> ->_NONE_
<android.widget.CalendarView: int getWeekNumberColor()> ->_NONE_
<android.webkit.WebSettingsClassic: void setBlockNetworkLoads(boolean)> ->_NONE_
<android.filterfw.core.Frame: android.filterfw.core.FrameManager getFrameManager()> ->_NONE_
<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node getRootNode()> ->_NONE_
<android.widget.PopupWindow: android.graphics.drawable.Drawable getBackground()> ->_NONE_
<java.util.logging.LogRecord: long getSequenceNumber()> ->_NONE_
<net.oauth.http.HttpMessage: java.lang.String getCharset(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int getNextAttributeIdentity(int)> ->_NONE_
<java.nio.charset.CharsetDecoder: void implReplaceWith(java.lang.String)> ->_NONE_
<android.app.ActivityThread: android.os.Handler getHandler()> ->_NONE_
<org.apache.http.params.HttpProtocolParamBean: void setVersion(org.apache.http.HttpVersion)> ->_NONE_
<org.apache.xpath.NodeSet: org.w3c.dom.Node getRoot()> ->_NONE_
<org.apache.harmony.luni.lang.reflect.ImplForWildcard: java.lang.reflect.Type[] getLowerBounds()> ->_NONE_
<org.jivesoftware.smack.packet.LoginRequest: long getLastRmqId()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: boolean getUseClientMode()> ->_NONE_
<libcore.icu.NativeDecimalFormat: void setMultiplier(int)> ->_NONE_
<android.net.sip.SipSession: java.lang.String getLocalIp()> ->_NONE_
<org.ccil.cowan.tagsoup.PYXWriter: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)> ->_NONE_
<android.webkit.CookieManagerClassic: void setCookie(java.lang.String,java.lang.String,boolean)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setBoundsInParent(java.lang.Object,android.graphics.Rect)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.CipherSuite: java.lang.String getHmacName()> ->_NONE_
<gov.nist.core.ThreadAuditor: void setPingIntervalInMillisecs(long)> ->_NONE_
<java.io.PipedWriter: void connect(java.io.PipedReader)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.Object getInfo()> ->_NONE_
<android.content.pm.ConfigurationInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.webkit.AutoCompletePopup: void setAdapter(android.widget.ListAdapter)> ->_NONE_
<gov.nist.javax.sip.header.ims.SecurityAgree: java.lang.String getSecurityMechanism()> ->_NONE_
<org.apache.xalan.templates.Stylesheet: java.lang.String getExtensionElementPrefix(int)> ->_NONE_
<android.widget.AbsListView: void setOverScrollEffectPadding(int,int)> ->_NONE_
<java.text.DateFormatSymbols: java.lang.String getLocalPatternChars()> ->_NONE_
<junit.runner.TestCaseClassLoader: java.net.URL getResource(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: java.lang.String getNamespaceURI(java.lang.String)> ->_NONE_
<android.test.mock.MockContext: java.io.File getFilesDir()> ->_NONE_
<android.view.GLES20DisplayList: void setHasOverlappingRendering(boolean)> ->_NONE_
<android.content.res.TypedArray: java.lang.CharSequence loadStringValueAt(int)> ->_NONE_
<android.preference.Preference: void setDefaultValue(java.lang.Object)> ->_NONE_
<jp.co.omronsoft.openwnn.SymbolList: boolean setDictionary(java.lang.String)> ->_NONE_
<android.media.videoeditor.VideoEditorImpl: long getDuration()> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: java.lang.String getStringValueX(int)> ->_NONE_
<java.io.DataInputStream: byte readByte()> ->_NONE_
<java.security.SecureClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)> ->_NONE_
<org.apache.commons.codec.language.DoubleMetaphone: int getMaxCodeLen()> ->_NONE_
<android.webkit.CallbackProxy: void onReceivedClientCertRequest(android.webkit.ClientCertRequestHandler,java.lang.String)> ->_NONE_
<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.String getConfigurationValue(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse getReliableProvisionalResponse()> ->_NONE_
<android.app.NotificationManager: android.app.INotificationManager getService()> ->_NONE_
<org.apache.xml.serializer.dom3.DOM3SerializerImpl: void setErrorHandler(org.w3c.dom.DOMErrorHandler)> ->_NONE_
<android.preference.Preference: java.lang.String getFragment()> ->_NONE_
<android.app.ContextImpl: java.io.File getExternalCacheDir()> ->_NONE_
<org.apache.commons.io.IOUtils: void write(byte[],java.io.OutputStream)> ->_NONE_
<org.apache.xml.serializer.utils.StringToIntTable: int get(java.lang.String)> ->_NONE_
<android.widget.TextView: float getShadowDy()> ->_NONE_
<android.media.MediaFile: android.media.MediaFile$MediaFileType getFileType(java.lang.String)> ->_NONE_
<android.widget.TextView: float getShadowDx()> ->_NONE_
<dalvik.system.profiler.HprofBinaryToAscii: dalvik.system.profiler.HprofData read(java.io.InputStream)> ->_NONE_
<android.app.ListActivity: long getSelectedItemId()> ->_NONE_
<android.webkit.AccessibilityInjector: void handleSelectionChangedIfNecessary(java.lang.String)> ->_NONE_
<java.util.concurrent.atomic.AtomicMarkableReference: void set(java.lang.Object,boolean)> ->_NONE_
<android.filterpacks.imageproc.BrightnessFilter: android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)> ->_NONE_
<org.apache.james.mime4j.field.address.parser.ParseException: java.lang.String getMessage()> ->_NONE_
<gov.nist.javax.sip.header.SIPHeaderList: gov.nist.javax.sip.header.SIPHeader set(int,gov.nist.javax.sip.header.SIPHeader)> ->_NONE_
<android.content.OperationApplicationException: int getNumSuccessfulYieldPoints()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean: void setSource(java.lang.Object,android.view.View,int)> ->_NONE_
<org.apache.xpath.NodeSetDTM: org.apache.xml.dtm.DTMFilter getFilter()> ->_NONE_
<libcore.icu.ICU: java.util.Locale[] getAvailableDateFormatSymbolsLocales()> ->_NONE_
<android.os.Bundle: java.lang.Byte getByte(java.lang.String,byte)> ->_NONE_
<android.filterpacks.imageproc.RotateFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)> ->_NONE_
<java.text.Bidi: int getRunLimit(int)> ->_NONE_
<android.text.format.DateFormat: java.lang.String getDateFormatString(android.content.Context)> ->_NONE_
<org.apache.harmony.xml.dom.NodeImpl: java.lang.String sanitizeUri(java.lang.String)> ->_NONE_
<android.view.Surface: void setDisplayLayerStack(android.os.IBinder,int)> ->_NONE_
<android.content.AsyncTaskLoader: java.lang.Object onLoadInBackground()> ->_NONE_
<org.apache.xpath.XPathContext: javax.xml.transform.SourceLocator getSAXLocator()> ->_NONE_
<org.jivesoftware.smack.packet.Presence: void setPriority(int)> ->_NONE_
<android.os.PowerManager: int getDefaultScreenBrightnessSetting()> ->_NONE_
<java.security.cert.CertStore: java.util.Collection getCRLs(java.security.cert.CRLSelector)> ->_NONE_
<org.apache.james.mime4j.field.datetime.DateTime: int getDay()> ->_NONE_
<android.bluetooth.BluetoothAdapter: boolean getProfileProxy(android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener,int)> ->_NONE_
<org.jivesoftware.smack.util.ObservableWriter: void write(java.lang.String,int,int)> ->_NONE_
<java.net.DatagramSocket: int getSoTimeout()> ->_NONE_
<org.apache.xalan.xslt.SecuritySupport: long getLastModified(java.io.File)> ->_NONE_
<android.widget.TextView: int getCompoundPaddingBottom()> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: void setXPathContext(org.apache.xpath.XPathContext)> ->_NONE_
<org.jivesoftware.smackx.provider.DiscoverInfoProvider: com.google.common.io.protocol.ProtoBufType getProtoBufType()> ->_NONE_
<android.graphics.drawable.RotateDrawable: int getIntrinsicWidth()> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Oid: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)> ->_NONE_
<android.webkit.WebSettings: java.lang.String getSansSerifFontFamily()> ->_NONE_
<java.net.InterfaceAddress: short getNetworkPrefixLength()> ->_NONE_
<android.mtp.MtpStorageInfo: int getStorageId()> ->_NONE_
<android.preference.PreferenceActivity: android.widget.Button getNextButton()> ->_NONE_
<java.lang.Runtime: java.lang.Runtime getRuntime()> ->_NONE_
<org.apache.http.message.BasicHeaderValueParser: org.apache.http.HeaderElement parseHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)> ->_NONE_
<android.content.res.StringBlock: java.lang.String subtag(java.lang.String,java.lang.String)> ->_NONE_
<android.net.wifi.WifiNative: boolean setBand(int)> ->_NONE_
<gov.nist.javax.sip.header.CallInfo: void setInfo(javax.sip.address.URI)> ->_NONE_
<android.graphics.Interpolator: void setKeyFrame(int,int,float[],float[])> ->_NONE_
<android.text.Layout: float getSpacingAdd()> ->_NONE_
<org.apache.xml.utils.NamespaceSupport2: java.lang.String getURI(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.AcceptEncoding: java.lang.String getEncoding()> ->_NONE_
<android.widget.SimpleAdapter: long getItemId(int)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setClickable(java.lang.Object,boolean)> ->_NONE_
<android.webkit.WebViewDatabaseClassic: android.webkit.WebViewDatabaseClassic getInstance(android.content.Context)> ->_NONE_
<net.oauth.client.URLConnectionResponse: void dump(java.util.Map)> ->_NONE_
<org.apache.xml.serializer.ToHTMLStream: void writeAttrURI(java.io.Writer,java.lang.String,boolean)> ->_NONE_
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void closeIdleConnections(long,java.util.concurrent.TimeUnit)> ->_NONE_
<android.widget.PopupWindow: void update(int,int,int,int)> ->_NONE_
<java.io.ObjectInputStream: java.lang.Object readObjectOverride()> ->_NONE_
<android.text.style.EasyEditSpan: int getSpanTypeId()> ->_NONE_
<android.content.pm.Signature: java.security.PublicKey getPublicKey()> ->_NONE_
<org.jivesoftware.smack.packet.Message: java.lang.String getThread()> ->_NONE_
<android.graphics.PointF: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.xalan.templates.ElemNumber: void setFrom(org.apache.xpath.XPath)> ->_NONE_
<android.net.wifi.WifiConfigStore: void log(java.lang.String)> ->_NONE_
<android.webkit.WebSettings: boolean getDisplayZoomControls()> ->_NONE_
<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.ClassLoader getContextClassLoader()> ->_NONE_
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getEffectiveValueSanitizer(java.lang.String)> ->_NONE_
<android.view.KeyEvent: android.view.KeyCharacterMap getKeyCharacterMap()> ->_NONE_
<android.content.Intent: android.os.Bundle getExtras()> ->_NONE_
<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)> ->_NONE_
<java.text.StringCharacterIterator: int getIndex()> ->_NONE_
<gov.nist.javax.sip.stack.IOHandler: java.net.Socket sendBytes(java.net.InetAddress,java.net.InetAddress,int,java.lang.String,byte[],boolean,gov.nist.javax.sip.stack.MessageChannel)> ->_NONE_
<android.view.ViewGroup: android.view.View getFocusedChild()> ->_NONE_
<java.text.Bidi: int getLength()> ->_NONE_
<android.content.SyncManager: void scheduleSyncOperation(android.content.SyncOperation)> ->_NONE_
<android.location.Address: void setLatitude(double)> ->_NONE_
<android.webkit.WebHistoryItemClassic: void setTouchIconUrl(java.lang.String,boolean)> ->_NONE_
<java.util.Date: void setTime(long)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: int getFromIndex()> ->_NONE_
<android.webkit.CallbackProxy: boolean shouldOverrideUrlLoading(java.lang.String)> ->_NONE_
<android.app.backup.BackupDataInput: int getDataSize()> ->_NONE_
<java.util.Date: int getHours()> ->_NONE_
<android.view.View: java.lang.CharSequence getIterableTextForAccessibility()> ->_NONE_
<org.apache.xpath.functions.Function3Args: void setArg(org.apache.xpath.Expression,int)> ->_NONE_
<android.view.LayoutInflater: void parseInclude(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet)> ->_NONE_
<android.accounts.ChooseTypeAndAccountActivity: java.util.ArrayList getAcceptableAccountChoices(android.accounts.AccountManager)> ->_NONE_
<javax.net.ssl.SSLParameters: java.lang.String[] getCipherSuites()> ->_NONE_
<java.util.Vector: void setElementAt(java.lang.Object,int)> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: org.xml.sax.ErrorHandler getErrorHandler()> ->_NONE_
<gov.nist.javax.sip.header.ims.PChargingFunctionAddresses: java.util.ListIterator getEventChargingFunctionAddresses()> ->_NONE_
<android.view.ViewGroup: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getLastChild(int)> ->_NONE_
<android.net.WebAddress: void setPort(int)> ->_NONE_
<android.renderscript.ScriptIntrinsicConvolve3x3: android.renderscript.Script$KernelID getKernelID()> ->_NONE_
<java.util.TimeZone: java.lang.String getDisplayName(boolean,int)> ->_NONE_
<jp.co.omronsoft.openwnn.JAJP.OpenWnnEngineJAJP: void setFilter(jp.co.omronsoft.openwnn.CandidateFilter)> ->_NONE_
<android.text.Layout: int getOffsetAtStartOf(int)> ->_NONE_
<org.apache.commons.io.IOUtils: void write(java.lang.String,java.io.Writer)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Collection getDialogs(javax.sip.DialogState)> ->_NONE_
<android.graphics.SurfaceTexture: void setOnFrameAvailableListener(android.graphics.SurfaceTexture$OnFrameAvailableListener)> ->_NONE_
<android.support.v4.content.ModernAsyncTask: void setDefaultExecutor(java.util.concurrent.Executor)> ->_NONE_
<java.net.PlainSocketImpl: java.lang.Object getOption(int)> ->_NONE_
<android.widget.AutoCompleteTextView: int getThreshold()> ->_NONE_
<android.widget.AbsListView: void setFriction(float)> ->_NONE_
<java.security.KeyPair: java.security.PrivateKey getPrivate()> ->_NONE_
<org.apache.harmony.xml.ExpatReader: void parse(java.io.InputStream,java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xalan.templates.ElemValueOf: boolean getDisableOutputEscaping()> ->_NONE_
<android.drm.DrmInfo: java.lang.Object get(java.lang.String)> ->_NONE_
<java.util.Calendar: void setLenient(boolean)> ->_NONE_
<android.view.View: android.view.ViewParent getParent()> ->_NONE_
<android.filterfw.format.ObjectFormat: java.lang.Class getBoxedClass(java.lang.Class)> ->_NONE_
<java.lang.Class: java.lang.Package getPackage()> ->_NONE_
<android.database.CursorWrapper: android.database.Cursor getWrappedCursor()> ->_NONE_
<android.net.wifi.p2p.WifiP2pGroup: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.support.v4.view.ViewPager: void setCurrentItem(int)> ->_NONE_
<android.net.wifi.WifiInfo: android.net.NetworkInfo$DetailedState getDetailedStateOf(android.net.wifi.SupplicantState)> ->_NONE_
<android.os.Build: java.lang.String getString(java.lang.String)> ->_NONE_
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback getCallback()> ->_NONE_
<android.preference.MultiCheckPreference: boolean getValue(int)> ->_NONE_
<android.telephony.CellSignalStrengthLte: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.text.style.TextAppearanceSpan: java.lang.String getFamily()> ->_NONE_
<android.widget.ListView: android.graphics.drawable.Drawable getDivider()> ->_NONE_
<gov.nist.javax.sip.stack.SIPClientTransaction: javax.sip.address.Hop getNextHop()> ->_NONE_
<org.apache.http.impl.cookie.RFC2965Spec: java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin)> ->_NONE_
<java.util.concurrent.ThreadPoolExecutor: void execute(java.lang.Runnable)> ->_NONE_
<org.xml.sax.helpers.XMLFilterImpl: void unparsedEntityDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.media.AudioManager: void setStreamSolo(int,boolean)> ->_NONE_
<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)> ->_NONE_
<net.oauth.OAuthMessage: void validateMessage(net.oauth.OAuthAccessor,net.oauth.OAuthValidator)> ->_NONE_
<android.widget.ShareActionProvider: void setShareHistoryFileName(java.lang.String)> ->_NONE_
<java.nio.MemoryBlock: long getSize()> ->_NONE_
<org.apache.james.mime4j.message.Multipart: void writeTo(java.io.OutputStream)> ->_NONE_
<android.widget.DialerFilter: void setLettersWatcher(android.text.TextWatcher)> ->_NONE_
<android.webkit.DeviceMotionService: void startSendingUpdates()> ->_NONE_
<android.content.SyncManager: java.lang.String getLastFailureMessage(int)> ->_NONE_
<org.apache.xalan.transformer.KeyIterator: java.util.Vector getKeyDeclarations()> ->_NONE_
<android.database.sqlite.SQLiteGlobal: java.lang.String getDefaultSyncMode()> ->_NONE_
<org.apache.xpath.patterns.StepPattern: double getMatchScore(org.apache.xpath.XPathContext,int)> ->_NONE_
<java.net.HttpURLConnection: java.lang.String getHeaderField(int)> ->_NONE_
<android.filterfw.core.FilterGraph: void connect(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.widget.CursorTreeAdapter: void setChildrenCursor(int,android.database.Cursor)> ->_NONE_
<org.apache.james.mime4j.field.address.Mailbox: java.lang.String getDomain()> ->_NONE_
<java.text.NumberFormat: java.util.Currency getCurrency()> ->_NONE_
<android.nfc.tech.MifareClassic: boolean authenticate(int,byte[],boolean)> ->_NONE_
<android.net.wifi.WifiMonitor: void notifyNetworkStateChange(android.net.NetworkInfo$DetailedState,java.lang.String,int)> ->_NONE_
<org.apache.harmony.xml.dom.ElementImpl: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.location.Address: void setPhone(java.lang.String)> ->_NONE_
<android.database.sqlite.SQLiteDatabase: long setMaximumSize(long)> ->_NONE_
<gov.nist.core.Host: java.net.InetAddress getInetAddress()> ->_NONE_
<android.content.AsyncTaskLoader: void dispatchOnLoadComplete(android.content.AsyncTaskLoader$LoadTask,java.lang.Object)> ->_NONE_
<android.media.AudioManager: java.lang.String getProperty(java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: java.security.SecureRandom getSecureRandom()> ->_NONE_
<android.net.VpnService: android.net.IConnectivityManager getService()> ->_NONE_
<org.apache.xml.serializer.SerializerBase: void setDocumentLocator(org.xml.sax.Locator)> ->_NONE_
<org.jivesoftware.smack.packet.Registration: void setInstructions(java.lang.String)> ->_NONE_
<org.apache.james.mime4j.field.address.Group: org.apache.james.mime4j.field.address.MailboxList getMailboxes()> ->_NONE_
<java.util.BitSet: boolean get(int)> ->_NONE_
<android.test.mock.MockContext: void sendOrderedBroadcast(android.content.Intent,java.lang.String)> ->_NONE_
<android.widget.ZoomControls: void setIsZoomOutEnabled(boolean)> ->_NONE_
<org.apache.commons.io.IOCase: java.lang.Object readResolve()> ->_NONE_
<android.security.AndroidKeyPairGeneratorSpec: javax.security.auth.x500.X500Principal getSubjectDN()> ->_NONE_
<org.apache.xalan.templates.ElemWithParam: void setName(org.apache.xml.utils.QName)> ->_NONE_
<javax.xml.transform.sax.SAXSource: void setInputSource(org.xml.sax.InputSource)> ->_NONE_
<android.webkit.WebResourceResponse: void setMimeType(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPRequest createBYERequest(boolean)> ->_NONE_
<android.media.audiofx.AudioEffect: void setControlStatusListener(android.media.audiofx.AudioEffect$OnControlStatusChangeListener)> ->_NONE_
<android.renderscript.Matrix4f: void loadFrustum(float,float,float,float,float,float)> ->_NONE_
<java.net.DatagramSocket: void setReuseAddress(boolean)> ->_NONE_
<android.widget.ToggleButton: void setTextOn(java.lang.CharSequence)> ->_NONE_
<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()> ->_NONE_
<android.hardware.SensorManager: float getInclination(float[])> ->_NONE_
<org.apache.xpath.functions.FuncNormalizeSpace: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<android.net.sip.SipProfile: java.lang.String getUserName()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: java.lang.String getDocumentVersion(int)> ->_NONE_
<android.filterpacks.imageproc.CropRectFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)> ->_NONE_
<org.apache.xml.serializer.ToStream: void setProp(java.lang.String,java.lang.String,boolean)> ->_NONE_
<android.app.admin.DevicePolicyManager: int getPasswordMinimumNumeric(android.content.ComponentName)> ->_NONE_
<libcore.icu.NativeDecimalFormat: void setDecimalSeparatorAlwaysShown(boolean)> ->_NONE_
<android.view.ScaleGestureDetector: long getTimeDelta()> ->_NONE_
<java.security.MessageDigest: void update(byte[])> ->_NONE_
<android.view.View: int getPaddingTop()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: javax.net.ssl.SSLSession getSession()> ->_NONE_
<android.widget.ViewAnimator: android.view.animation.Animation getOutAnimation()> ->_NONE_
<android.content.pm.LimitedLengthInputStream: int read(byte[],int,int)> ->_NONE_
<android.view.GLES20Canvas: boolean getClipBounds(android.graphics.Rect)> ->_NONE_
<java.security.spec.PSSParameterSpec: int getSaltLength()> ->_NONE_
<android.text.AutoText: android.text.AutoText getInstance(android.view.View)> ->_NONE_
<java.net.URLConnection: long getHeaderFieldDate(java.lang.String,long)> ->_NONE_
<android.os.Messenger: void writeMessengerOrNullToParcel(android.os.Messenger,android.os.Parcel)> ->_NONE_
<libcore.net.url.JarURLConnectionImpl: java.io.InputStream getInputStream()> ->_NONE_
<android.test.mock.MockContext: java.io.File getExternalFilesDir(java.lang.String)> ->_NONE_
<android.webkit.WebViewClassic: float getScale()> ->_NONE_
<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.lang.String)> ->_NONE_
<org.jivesoftware.smack.packet.LoginResponse: void setServerTimestamp(long)> ->_NONE_
<android.net.NetworkPolicyManager: android.net.NetworkPolicy[] getNetworkPolicies()> ->_NONE_
<android.graphics.Matrix: void setSinCos(float,float)> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: void setParentElem(org.apache.xalan.templates.ElemTemplateElement)> ->_NONE_
<android.net.wifi.WifiConfigStore: int addOrUpdateNetwork(android.net.wifi.WifiConfiguration)> ->_NONE_
<libcore.net.http.HttpURLConnectionImpl: libcore.net.http.HttpEngine getResponse()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol: int getDataSize(int)> ->_NONE_
<android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()> ->_NONE_
<org.xml.sax.helpers.AttributesImpl: void setAttributes(org.xml.sax.Attributes)> ->_NONE_
<android.app.Fragment: boolean getRetainInstance()> ->_NONE_
<android.filterfw.core.ShaderProgram: java.lang.Object getHostValue(java.lang.String)> ->_NONE_
<org.apache.http.entity.EntityTemplate: void writeTo(java.io.OutputStream)> ->_NONE_
<android.content.pm.PackageParser: android.content.pm.PackageParser$Package parsePackage(android.content.res.Resources,android.content.res.XmlResourceParser,int,java.lang.String[])> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationInfo: void setQop(java.lang.String)> ->_NONE_
<android.app.ListFragment: void setListAdapter(android.widget.ListAdapter)> ->_NONE_
<libcore.io.Posix: int pwrite(java.io.FileDescriptor,java.nio.ByteBuffer,long)> ->_NONE_
<android.widget.ListPopupWindow: void setPromptPosition(int)> ->_NONE_
<android.support.v4.widget.CursorAdapter: void setFilterQueryProvider(android.widget.FilterQueryProvider)> ->_NONE_
<java.util.FormatFlagsConversionMismatchException: char getConversion()> ->_NONE_
<dalvik.system.profiler.PortableThreadSampler: java.lang.StackTraceElement[] getStackTrace(java.lang.Thread)> ->_NONE_
<android.webkit.HTML5VideoView: int getVideoLayerId()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.ServerHelloDone: int getType()> ->_NONE_
<gov.nist.javax.sip.header.MediaRange: java.lang.StringBuffer encode(java.lang.StringBuffer)> ->_NONE_
<org.jivesoftware.smackx.packet.MUCUser: org.jivesoftware.smackx.packet.MUCUser$Destroy getDestroy()> ->_NONE_
<gov.nist.javax.sip.parser.RSeqParser: gov.nist.javax.sip.header.SIPHeader parse()> ->_NONE_
<android.app.ActivityManagerProxy: boolean getPackageAskScreenCompat(java.lang.String)> ->_NONE_
<android.widget.ListPopupWindow: int getWidth()> ->_NONE_
<java.nio.SocketChannelImpl: void setBound(boolean)> ->_NONE_
<java.security.cert.X509CertSelector: void setIssuer(byte[])> ->_NONE_
<junit.extensions.TestDecorator: void run(junit.framework.TestResult)> ->_NONE_
<javax.net.ssl.SSLContext: java.security.Provider getProvider()> ->_NONE_
<org.apache.commons.io.CopyUtils: int copy(java.io.Reader,java.io.Writer)> ->_NONE_
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: int getWaitQueueLength(java.util.concurrent.locks.AbstractQueuedLongSynchronizer$ConditionObject)> ->_NONE_
<android.view.GLES20Canvas: int getDisplayList(int)> ->_NONE_
<java.security.cert.X509CertSelector: void setSubjectPublicKey(byte[])> ->_NONE_
<javax.xml.validation.ValidatorHandler: java.lang.Object getProperty(java.lang.String)> ->_NONE_
<android.net.LinkAddress: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<gov.nist.javax.sip.stack.TLSMessageChannel: java.net.InetAddress getPeerPacketSourceAddress()> ->_NONE_
<android.webkit.WebSettingsClassic: java.lang.String getCurrentAcceptLanguage()> ->_NONE_
<android.text.style.BulletSpan: int getSpanTypeId()> ->_NONE_
<java.util.concurrent.ForkJoinPool: boolean getAsyncMode()> ->_NONE_
<java.net.PlainSocketImpl: void connect(java.net.InetAddress,int)> ->_NONE_
<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getURI(int)> ->_NONE_
<org.jivesoftware.smack.packet.DefaultPacketExtension: void setValue(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xalan.templates.ElemNumber: org.apache.xalan.templates.AVT getGroupingSeparator()> ->_NONE_
<android.widget.Scroller: int getStartX()> ->_NONE_
<android.widget.Scroller: int getStartY()> ->_NONE_
<java.util.concurrent.locks.ReentrantLock: int getQueueLength()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.CipherSuite: java.lang.String getClientKeyType(byte)> ->_NONE_
<android.filterfw.core.ProgramVariable: void setValue(java.lang.Object)> ->_NONE_
<org.apache.commons.codec.binary.Base64: byte[] encodeBase64(byte[],boolean)> ->_NONE_
<android.widget.ViewAnimator: void setAnimateFirstView(boolean)> ->_NONE_
<android.media.Metadata: long getLong(int)> ->_NONE_
<dalvik.system.VMRuntime: float setTargetHeapUtilization(float)> ->_NONE_
<java.util.MissingFormatWidthException: java.lang.String getMessage()> ->_NONE_
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()> ->_NONE_
<android.database.sqlite.SqliteWrapper: int update(android.content.Context,android.content.ContentResolver,android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ->_NONE_
<org.xml.sax.helpers.NamespaceSupport: java.util.Enumeration getPrefixes()> ->_NONE_
<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(java.lang.String,android.content.res.CompatibilityInfo,int)> ->_NONE_
<jp.co.omronsoft.openwnn.TextCandidatesViewManager: int getCandidateMinimumHeight()> ->_NONE_
<javax.obex.ClientOperation: java.lang.String getType()> ->_NONE_
<android.test.ActivityUnitTestCase: int getStartedActivityRequest()> ->_NONE_
<android.graphics.Camera: void getMatrix(android.graphics.Matrix)> ->_NONE_
<android.inputmethodservice.Keyboard: int getHeight()> ->_NONE_
<android.test.mock.MockResources: android.content.res.XmlResourceParser getLayout(int)> ->_NONE_
<android.webkit.WebViewCore: void key(android.view.KeyEvent,int,boolean)> ->_NONE_
<org.apache.xalan.templates.ElemText: boolean getDisableOutputEscaping()> ->_NONE_
<java.nio.MappedByteBufferAdapter: int getInt()> ->_NONE_
<android.view.View: int getTextAlignment()> ->_NONE_
<java.sql.SQLException: int getErrorCode()> ->_NONE_
<android.net.LinkProperties: void setInterfaceName(java.lang.String)> ->_NONE_
<org.apache.xml.serializer.SerializerBase: void setTransformer(javax.xml.transform.Transformer)> ->_NONE_
<jp.co.omronsoft.openwnn.CandidateTextView: jp.co.omronsoft.openwnn.CandidateTextView setCandidateTextView(jp.co.omronsoft.openwnn.WnnWord,int,android.view.View$OnClickListener,android.view.View$OnLongClickListener)> ->_NONE_
<org.xml.sax.helpers.AttributesImpl: java.lang.String getValue(java.lang.String)> ->_NONE_
<android.content.pm.PathPermission: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.widget.TextView: int getMaxLines()> ->_NONE_
<android.support.v4.app.FragmentActivity: java.lang.Object getLastCustomNonConfigurationInstance()> ->_NONE_
<java.security.cert.X509CertSelector: void setSubjectKeyIdentifier(byte[])> ->_NONE_
<android.webkit.BrowserFrame: void autoLogin(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<libcore.net.http.HttpEngine: java.lang.String getDefaultUserAgent()> ->_NONE_
<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.axes.LocPathIterator getLocPathIterator()> ->_NONE_
<org.jivesoftware.smack.util.Base64: byte[] encode3to4(byte[],byte[],int)> ->_NONE_
<android.accounts.AccountManagerService: void setPassword(android.accounts.Account,java.lang.String)> ->_NONE_
<org.apache.harmony.xml.dom.NodeImpl: void setPrefix(java.lang.String)> ->_NONE_
<android.app.BackStackRecord: java.lang.String getName()> ->_NONE_
<org.apache.commons.codec.language.Soundex: char[] getSoundexMapping()> ->_NONE_
<android.test.ActivityInstrumentationTestCase: android.app.Activity getActivity()> ->_NONE_
<android.text.method.Touch: int getInitialScrollX(android.widget.TextView,android.text.Spannable)> ->_NONE_
<android.os.CommonTimeUtils: java.lang.String transactGetString(int,java.lang.String)> ->_NONE_
<android.text.method.Touch: int getInitialScrollY(android.widget.TextView,android.text.Spannable)> ->_NONE_
<android.widget.ImageView: android.graphics.ColorFilter getColorFilter()> ->_NONE_
<org.apache.xalan.templates.OutputProperties: java.util.Vector getQNameProperties(org.apache.xml.utils.QName)> ->_NONE_
<org.jivesoftware.smack.Chat: java.lang.String getThreadID()> ->_NONE_
<org.apache.harmony.security.asn1.BerInputStream: int getOffset()> ->_NONE_
<android.content.ContentService: int getIsSyncable(android.accounts.Account,java.lang.String)> ->_NONE_
<org.apache.xml.serializer.CharInfo: void setASCIIattrDirty(int)> ->_NONE_
<android.filterpacks.imageproc.StraightenFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: void setIDAttribute(java.lang.String,int)> ->_NONE_
<java.io.ObjectOutputStream: void write(byte[],int,int)> ->_NONE_
<android.widget.TabWidget: int getTabCount()> ->_NONE_
<javax.xml.transform.sax.SAXSource: org.xml.sax.XMLReader getXMLReader()> ->_NONE_
<org.xmlpull.v1.sax2.Driver: java.lang.String getPublicId()> ->_NONE_
<org.apache.xpath.functions.SecuritySupport12: java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader)> ->_NONE_
<android.graphics.drawable.InsetDrawable: int getOpacity()> ->_NONE_
<android.app.TabActivity: void setDefaultTab(int)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.WhiteSpaceInfo getStripSpace(int)> ->_NONE_
<org.jivesoftware.smackx.packet.MUCUser: void setDestroy(org.jivesoftware.smackx.packet.MUCUser$Destroy)> ->_NONE_
<org.apache.xalan.processor.XSLTElementDef: void setRequiredFound(java.lang.String,boolean)> ->_NONE_
<android.content.ContentResolver: java.util.List getCurrentSyncs()> ->_NONE_
<android.webkit.WebSettingsClassic: void setJavaScriptEnabled(boolean)> ->_NONE_
<android.widget.PopupWindow: int getSoftInputMode()> ->_NONE_
<org.apache.harmony.security.asn1.ASN1GeneralizedTime: org.apache.harmony.security.asn1.ASN1GeneralizedTime getInstance()> ->_NONE_
<libcore.io.ForwardingOs: java.lang.String getenv(java.lang.String)> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertImpl: java.lang.String getSigAlgName()> ->_NONE_
<android.content.SyncStats: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<java.nio.charset.ModifiedUtf8: byte[] encode(java.lang.String)> ->_NONE_
<org.apache.http.impl.conn.AbstractClientConnAdapter: int getSocketTimeout()> ->_NONE_
<java.security.cert.CertStore: java.security.cert.CertStoreParameters getCertStoreParameters()> ->_NONE_
<android.webkit.WebView: void loadUrl(java.lang.String)> ->_NONE_
<org.apache.xml.utils.SecuritySupport12: java.lang.ClassLoader getSystemClassLoader()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.CertificateVerify: void send(org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream)> ->_NONE_
<android.preference.PreferenceManager: android.content.Context getContext()> ->_NONE_
<android.net.MobileDataStateTracker: void log(java.lang.String)> ->_NONE_
<android.app.ActivityManagerProxy: void setProcessForeground(android.os.IBinder,int,boolean)> ->_NONE_
<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ->_NONE_
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit)> ->_NONE_
<org.apache.xml.serializer.dom3.DOMOutputImpl: java.lang.String getEncoding()> ->_NONE_
<android.test.mock.MockPackageManager: java.util.List getAllPermissionGroups(int)> ->_NONE_
<java.io.RandomAccessFile: int readInt()> ->_NONE_
<android.test.mock.MockPackageManager: int getApplicationEnabledSetting(java.lang.String)> ->_NONE_
<android.text.SpannedString: int getSpanStart(java.lang.Object)> ->_NONE_
<libcore.io.ForwardingOs: void setsockoptGroupReq(java.io.FileDescriptor,int,int,libcore.io.StructGroupReq)> ->_NONE_
<android.widget.CursorAdapter: long getItemId(int)> ->_NONE_
<android.animation.Animator: java.util.ArrayList getListeners()> ->_NONE_
<android.net.sip.SipProfile: java.lang.String getProxyAddress()> ->_NONE_
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)> ->_NONE_
<android.view.HardwareLayer: void setLayerPaint(android.graphics.Paint)> ->_NONE_
<java.net.MulticastSocket: int getTimeToLive()> ->_NONE_
<org.kxml2.io.KXmlParser: java.lang.String readComment(boolean)> ->_NONE_
<org.apache.http.impl.conn.AbstractClientConnAdapter: int getRemotePort()> ->_NONE_
<android.accounts.AccountManagerService: boolean hasAuthenticatorUid(java.lang.String,int)> ->_NONE_
<org.apache.xpath.patterns.NodeTest: int getWhatToShow()> ->_NONE_
<org.apache.xml.serializer.dom3.DOM3SerializerImpl: org.w3c.dom.ls.LSSerializerFilter getNodeFilter()> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.CallIdHeader getCallId()> ->_NONE_
<org.apache.http.params.DefaultedHttpParams: java.util.Set getNames(org.apache.http.params.HttpParams)> ->_NONE_
<java.util.logging.Logger: java.util.logging.Logger getParent()> ->_NONE_
<android.opengl.GLSurfaceView: void setEGLContextClientVersion(int)> ->_NONE_
<android.test.AndroidTestCase: android.content.Context getContext()> ->_NONE_
<android.preference.MultiSelectListPreference: void setEntryValues(java.lang.CharSequence[])> ->_NONE_
<android.test.mock.MockPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)> ->_NONE_
<gov.nist.javax.sip.message.SIPRequest: void setRequestLine(gov.nist.javax.sip.header.RequestLine)> ->_NONE_
<android.widget.AutoCompleteTextView: android.graphics.drawable.Drawable getDropDownBackground()> ->_NONE_
<android.telephony.gsm.SmsMessage: int getIndexOnSim()> ->_NONE_
<android.net.http.Headers: java.lang.String getExpires()> ->_NONE_
<org.apache.harmony.xml.ExpatParser: void parseFragment(java.io.InputStream)> ->_NONE_
<java.security.cert.X509CRLSelector: void setCertificateChecking(java.security.cert.X509Certificate)> ->_NONE_
<java.beans.PropertyChangeEvent: java.lang.Object getPropagationId()> ->_NONE_
<java.lang.reflect.Field: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)> ->_NONE_
<org.apache.xml.utils.AttList: java.lang.String getValue(java.lang.String,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.message.SIPResponse: void setSIPVersion(java.lang.String)> ->_NONE_
<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo getContextMenuInfo()> ->_NONE_
<android.view.KeyCharacterMap: android.view.KeyCharacterMap$FallbackAction getFallbackAction(int,int)> ->_NONE_
<android.app.ActivityManagerProxy: boolean startInstrumentation(android.content.ComponentName,java.lang.String,int,android.os.Bundle,android.app.IInstrumentationWatcher,int)> ->_NONE_
<gov.nist.javax.sip.header.Challenge: java.lang.String getDomain()> ->_NONE_
<org.apache.harmony.xml.ExpatReader: org.xml.sax.ErrorHandler getErrorHandler()> ->_NONE_
<android.view.KeyEvent: int getDeviceId()> ->_NONE_
<android.net.wifi.p2p.WifiP2pManager: void setDialogListener(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$DialogListener)> ->_NONE_
<org.xml.sax.helpers.NamespaceSupport: java.util.Enumeration getPrefixes(java.lang.String)> ->_NONE_
<libcore.net.http.RawHeaders: int getHttpMinorVersion()> ->_NONE_
<android.content.res.ObbInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.media.videoeditor.MediaVideoItem: void setExtractBoundaries(long,long)> ->_NONE_
<junit.extensions.ActiveTestSuite: void run(junit.framework.TestResult)> ->_NONE_
<org.apache.james.mime4j.message.AbstractBody: void setParent(org.apache.james.mime4j.message.Entity)> ->_NONE_
<org.kxml2.io.KXmlParser: void readElementDeclaration()> ->_NONE_
<gov.nist.javax.sip.header.ParametersHeader: void setParameter(java.lang.String,boolean)> ->_NONE_
<android.bluetooth.BluetoothHealth: boolean connectChannelToSink(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)> ->_NONE_
<android.graphics.drawable.DrawableContainer: void setAlpha(int)> ->_NONE_
<gov.nist.javax.sip.header.ims.PPreferredService: void setApplicationIdentifiers(java.lang.String)> ->_NONE_
<android.view.View: int getLeft()> ->_NONE_
<android.view.LayoutInflater: void setFilter(android.view.LayoutInflater$Filter)> ->_NONE_
<org.apache.commons.io.output.DeferredFileOutputStream: java.io.OutputStream getStream()> ->_NONE_
<gov.nist.javax.sip.stack.MessageChannel: gov.nist.javax.sip.stack.MessageProcessor getMessageProcessor()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: java.lang.String getDocumentTypeDeclarationPublicIdentifier()> ->_NONE_
<android.graphics.drawable.ColorDrawable: void setColorFilter(android.graphics.ColorFilter)> ->_NONE_
<jp.co.omronsoft.openwnn.Keyboard: int getHeight()> ->_NONE_
<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)> ->_NONE_
<gov.nist.javax.sip.parser.extensions.MinSEParser: gov.nist.javax.sip.header.SIPHeader parse()> ->_NONE_
<java.lang.reflect.Field: java.lang.Class getType()> ->_NONE_
<gov.nist.javax.sip.SipStackImpl: java.util.Iterator getSipProviders()> ->_NONE_
<android.filterpacks.imageproc.CrossProcessFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<org.ccil.cowan.tagsoup.XMLWriter: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)> ->_NONE_
<libcore.net.url.UrlUtils: java.lang.String getSchemePrefix(java.lang.String)> ->_NONE_
<java.security.UnresolvedPermission: java.lang.String getActions()> ->_NONE_
<gov.nist.javax.sip.header.Expires: void setExpires(int)> ->_NONE_
<android.database.CursorWrapper: int getColumnIndex(java.lang.String)> ->_NONE_
<android.graphics.Paint: void getTextBounds(java.lang.String,int,int,android.graphics.Rect)> ->_NONE_
<android.app.WallpaperManager: void setWallpaper(java.io.InputStream,java.io.FileOutputStream)> ->_NONE_
<org.jivesoftware.smack.provider.ProviderManager: java.lang.String getProviderKey(java.lang.String,java.lang.String)> ->_NONE_
<android.text.method.ArrowKeyMovementMethod: int getPageHeight(android.widget.TextView)> ->_NONE_
<org.apache.xpath.axes.NodeSequence: org.apache.xml.dtm.DTMManager getDTMManager()> ->_NONE_
<org.apache.http.impl.client.RequestWrapper: org.apache.http.HttpRequest getOriginal()> ->_NONE_
<android.location.LocationManager: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)> ->_NONE_
<android.view.VelocityTracker: float getXVelocity(int)> ->_NONE_
<android.preference.RingtonePreference: int getRingtoneType()> ->_NONE_
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String getTables()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: int getRemovedCount()> ->_NONE_
<android.view.Window: void setUiOptions(int,int)> ->_NONE_
<org.apache.xalan.templates.ElemTemplate: void setMode(org.apache.xml.utils.QName)> ->_NONE_
<java.security.cert.PKIXParameters: boolean getPolicyQualifiersRejected()> ->_NONE_
<android.support.v4.view.ViewPager: void setScrollingCacheEnabled(boolean)> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: void setEarlyDialogId(java.lang.String)> ->_NONE_
<android.view.View: int[] getDrawableState()> ->_NONE_
<libcore.icu.NativeDecimalFormat: int getMaximumIntegerDigits()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setFocusable(boolean)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: void setEnabledCipherSuites(java.lang.String[])> ->_NONE_
<org.json.JSONObject: boolean getBoolean(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: java.lang.String getNodeName(int)> ->_NONE_
<android.view.inputmethod.InputMethodSubtype: java.lang.String getMode()> ->_NONE_
<org.apache.xalan.templates.AVT: java.lang.String getRawName()> ->_NONE_
<android.app.BackStackState: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getAmpAndSpaceLegal()> ->_NONE_
<android.widget.CalendarView: void setWeekSeparatorLineColor(int)> ->_NONE_
<android.gesture.GestureOverlayView: int getUncertainGestureColor()> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address getLocalParty()> ->_NONE_
<android.preference.Preference: void setIcon(android.graphics.drawable.Drawable)> ->_NONE_
<android.speech.srec.Recognizer: java.lang.String getConfigDir(java.util.Locale)> ->_NONE_
<android.telephony.CellSignalStrengthCdma: int getCdmaDbm()> ->_NONE_
<org.apache.harmony.security.utils.ObjectIdentifier: java.lang.Object getGroup()> ->_NONE_
<android.app.Fragment: android.app.FragmentManager getChildFragmentManager()> ->_NONE_
<android.support.v4.app.NavUtils: android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class)> ->_NONE_
<android.filterpacks.imageproc.RedEyeFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)> ->_NONE_
<org.apache.xalan.templates.ElemExtensionCall: org.apache.xalan.templates.ElemExtensionDecl getElemExtensionDecl(org.apache.xalan.templates.StylesheetRoot,java.lang.String)> ->_NONE_
<java.util.logging.LogRecord: long getMillis()> ->_NONE_
<java.security.cert.CertStore: java.lang.String getType()> ->_NONE_
<org.apache.harmony.security.x509.TBSCertList: void dumpValue(java.lang.StringBuilder)> ->_NONE_
<android.webkit.JWebCoreJavaBridge: java.lang.String[] getKeyStrengthList()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketFactoryImpl: java.lang.String[] getDefaultCipherSuites()> ->_NONE_
<android.content.Context: java.lang.String getString(int)> ->_NONE_
<android.telephony.SmsMessage: int getTPLayerLengthForPDU(java.lang.String)> ->_NONE_
<android.support.v4.view.ViewCompatJellybeanMr1: int getLabelFor(android.view.View)> ->_NONE_
<org.ccil.cowan.tagsoup.HTMLScanner: int getColumnNumber()> ->_NONE_
<gov.nist.javax.sip.header.ParametersHeader: gov.nist.core.NameValue getNameValue(java.lang.String)> ->_NONE_
<android.inputmethodservice.ExtractEditText: void setSpan_internal(java.lang.Object,int,int,int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: java.lang.String[] getSupportedCipherSuites()> ->_NONE_
<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getTextAfterCursor(int,int)> ->_NONE_
<android.media.AudioService: android.media.AudioService$ScoClient getScoClient(android.os.IBinder,boolean)> ->_NONE_
<org.xmlpull.v1.sax2.Driver: java.lang.String getSystemId()> ->_NONE_
<org.apache.commons.io.output.FileWriterWithEncoding: void write(java.lang.String)> ->_NONE_
<java.lang.ref.SoftReference: java.lang.Object get()> ->_NONE_
<java.util.logging.LogManager: java.util.Enumeration getLoggerNames()> ->_NONE_
<java.util.logging.Handler: java.util.logging.Filter getFilter()> ->_NONE_
<android.view.textservice.SpellCheckerSession: com.android.internal.textservice.ITextServicesSessionListener getTextServicesSessionListener()> ->_NONE_
<java.nio.LongToByteBufferAdapter: java.nio.LongBuffer get(long[],int,int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: boolean isConnected()> ->_NONE_
<org.apache.xalan.templates.AVTPart: void setXPathSupport(org.apache.xpath.XPathContext)> ->_NONE_
<android.app.ActivityManagerProxy: int getTaskForActivity(android.os.IBinder,boolean)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: void setMessageContent(java.lang.String,boolean,boolean,int)> ->_NONE_
<android.view.Surface: void setPosition(int,int)> ->_NONE_
<org.apache.xalan.extensions.ObjectFactory: java.lang.ClassLoader findClassLoader()> ->_NONE_
<org.apache.harmony.security.x509.AlternativeName: void dumpValue(java.lang.StringBuilder,java.lang.String)> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: void setPhoneWork(java.lang.String,java.lang.String)> ->_NONE_
<android.app.Activity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> ->_NONE_
<org.jivesoftware.smack.packet.Message: java.lang.String getSubject()> ->_NONE_
<org.apache.xml.serializer.ToStream: boolean setEscaping(boolean)> ->_NONE_
<android.media.AudioManager: void setWiredDeviceConnectionState(int,int,java.lang.String)> ->_NONE_
<org.apache.xalan.processor.ProcessorOutputElem: void setEncoding(java.lang.String)> ->_NONE_
<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)> ->_NONE_
<java.util.concurrent.RecursiveTask: java.lang.Object getRawResult()> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.dtm.DTMIterator getContextNodeList()> ->_NONE_
<android.util.DayOfMonthCursor: int getSelectedDayOfMonth()> ->_NONE_
<android.net.sip.SipAudioCall: void setSpeakerMode(boolean)> ->_NONE_
<android.widget.ImageView: int getImageAlpha()> ->_NONE_
<android.app.UiModeManager: void setNightMode(int)> ->_NONE_
<android.view.View: int getWindowVisibility()> ->_NONE_
<org.apache.harmony.security.x509.CertificateList: byte[] getSignatureValue()> ->_NONE_
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.conn.routing.HttpRoute getRoute()> ->_NONE_
<org.apache.xml.serializer.ToStream: void comment(char[],int,int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: void setWantClientAuth(boolean)> ->_NONE_
<android.os.WorkSource: void set(int)> ->_NONE_
<android.os.UserHandle: int getUserId(int)> ->_NONE_
<android.app.Activity: void setFinishOnTouchOutside(boolean)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: int getPort()> ->_NONE_
<android.telephony.SignalStrength: int getEvdoSnr()> ->_NONE_
<org.apache.xml.serializer.SerializerBase: void setVersion(java.lang.String)> ->_NONE_
<android.net.SSLCertificateSocketFactory: javax.net.ssl.SSLSocketFactory getDefault(int,android.net.SSLSessionCache)> ->_NONE_
<org.apache.commons.codec.language.DoubleMetaphone: void setMaxCodeLen(int)> ->_NONE_
<android.content.SyncManager: android.content.SyncStorageEngine getSyncStorageEngine()> ->_NONE_
<android.graphics.Paint: android.graphics.Paint$FontMetrics getFontMetrics()> ->_NONE_
<android.content.res.Resources: android.content.res.AssetManager getAssets()> ->_NONE_
<android.renderscript.Matrix4f: float[] getArray()> ->_NONE_
<android.view.ViewGroup: void setClipToPadding(boolean)> ->_NONE_
<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)> ->_NONE_
<android.media.videoeditor.MediaItem: boolean getRegenerateClip()> ->_NONE_
<android.app.BackStackRecord: int getBreadCrumbShortTitleRes()> ->_NONE_
<android.widget.PopupWindow: void setSplitTouchEnabled(boolean)> ->_NONE_
<org.apache.harmony.xml.dom.ElementImpl: void setIdAttributeNS(java.lang.String,java.lang.String,boolean)> ->_NONE_
<gov.nist.javax.sip.header.ParametersHeader: void setParameter(java.lang.String,java.lang.Object)> ->_NONE_
<org.apache.xml.utils.UnImplNode: java.lang.Object setUserData(java.lang.String,java.lang.Object,org.w3c.dom.UserDataHandler)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()> ->_NONE_
<org.apache.commons.io.IOUtils: void write(char[],java.io.Writer)> ->_NONE_
<org.jivesoftware.smack.provider.RawXmlIQProvider: int getTag()> ->_NONE_
<java.util.concurrent.atomic.AtomicLong: void set(long)> ->_NONE_
<android.bluetooth.BluetoothTetheringDataTracker: void setTeardownRequested(boolean)> ->_NONE_
<android.os.Parcel: void writeStringArray(java.lang.String[])> ->_NONE_
<jp.co.omronsoft.openwnn.OpenWnnDictionaryImpl: void setInUseState(boolean)> ->_NONE_
<android.app.ActivityManagerProxy: boolean targetTaskAffinityMatchesActivity(android.os.IBinder,java.lang.String)> ->_NONE_
<org.apache.http.impl.cookie.RFC2965Spec: org.apache.http.Header getVersionHeader()> ->_NONE_
<org.jivesoftware.smackx.provider.DiscoverInfoProvider: org.jivesoftware.smack.packet.IQ parseIQ(com.google.common.io.protocol.ProtoBuf)> ->_NONE_
<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()> ->_NONE_
<javax.crypto.KeyGenerator: java.security.Provider getProvider()> ->_NONE_
<android.net.wifi.WifiNative: boolean reconnect()> ->_NONE_
<org.apache.xalan.processor.StylesheetHandler: void setStylesheetType(int)> ->_NONE_
<android.test.DatabaseTestUtils: java.util.Set getSchemaSet(android.database.sqlite.SQLiteDatabase)> ->_NONE_
<org.apache.xalan.xslt.SecuritySupport: java.lang.String getSystemProperty(java.lang.String)> ->_NONE_
<android.test.mock.MockContext: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)> ->_NONE_
<org.apache.harmony.xml.parsers.DocumentBuilderFactoryImpl: java.lang.Object getAttribute(java.lang.String)> ->_NONE_
<android.media.TimedText: android.graphics.Rect getBounds()> ->_NONE_
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawableForDensity(int,int)> ->_NONE_
<gov.nist.javax.sip.header.Contact: java.lang.String getSipInstanceParam()> ->_NONE_
<gov.nist.javax.sip.header.SIPDate: int getSecond()> ->_NONE_
<android.util.IntProperty: void set(java.lang.Object,java.lang.Object)> ->_NONE_
<android.app.ContextImpl: android.content.Context getApplicationContext()> ->_NONE_
<android.text.Layout: int getParagraphRight(int)> ->_NONE_
<org.apache.harmony.xml.dom.DocumentImpl: void setStrictErrorChecking(boolean)> ->_NONE_
<android.view.animation.Animation: void setZAdjustment(int)> ->_NONE_
<android.net.wifi.WifiManager: int updateNetwork(android.net.wifi.WifiConfiguration)> ->_NONE_
<jp.co.omronsoft.openwnn.TextCandidatesViewManager: void setHardKeyboardHidden(boolean)> ->_NONE_
<android.telephony.CellInfoCdma: void setCellIdentity(android.telephony.CellIdentityCdma)> ->_NONE_
<org.apache.harmony.security.asn1.BerInputStream: int getEndOffset()> ->_NONE_
<android.net.ThrottleManager: int getCliffLevel(java.lang.String,int)> ->_NONE_
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: int getDefaultMaxPerRoute()> ->_NONE_
<org.apache.xpath.NodeSet: void setCurrentPos(int)> ->_NONE_
<java.io.ObjectInputStream: float readFloat()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: java.lang.CharSequence getClassName(java.lang.Object)> ->_NONE_
<android.webkit.WebStorageClassic: void setAppCacheMaximumSize(long)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.HelloRequest: void send(org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream)> ->_NONE_
<android.widget.Gallery: void setUnselectedAlpha(float)> ->_NONE_
<android.graphics.drawable.BitmapDrawable: int getGravity()> ->_NONE_
<org.apache.commons.codec.binary.Hex: char[] encodeHex(byte[])> ->_NONE_
<android.animation.Keyframe: java.lang.Class getType()> ->_NONE_
<android.graphics.Paint: android.graphics.MaskFilter getMaskFilter()> ->_NONE_
<org.apache.harmony.security.x509.tsp.TSTInfo: java.math.BigInteger getNonce()> ->_NONE_
<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)> ->_NONE_
<android.nfc.tech.NdefFormatable: void reconnect()> ->_NONE_
<org.ccil.cowan.tagsoup.HTMLScanner: int getLineNumber()> ->_NONE_
<android.net.nsd.NsdServiceInfo: void setPort(int)> ->_NONE_
<android.database.sqlite.SQLiteConnection: android.database.sqlite.SQLiteDebug$DbStats getMainDbStatsUnsafe(int,long,long)> ->_NONE_
<android.media.AudioManager: void setMasterMute(boolean)> ->_NONE_
<android.media.ExifInterface: long getDateTime()> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: void setMessageContent(byte[],boolean,int)> ->_NONE_
<android.filterpacks.imageproc.FillLightFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)> ->_NONE_
<android.widget.ToggleButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.routing.HttpRoutePlanner getRoutePlanner()> ->_NONE_
<java.text.FieldPosition: int getBeginIndex()> ->_NONE_
<java.security.AlgorithmParameters: byte[] getEncoded(java.lang.String)> ->_NONE_
<android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)> ->_NONE_
<org.apache.xpath.Arg: void setIsVisible(boolean)> ->_NONE_
<org.apache.http.params.AbstractHttpParams: org.apache.http.params.HttpParams setDoubleParameter(java.lang.String,double)> ->_NONE_
<org.apache.harmony.security.x509.Extension: java.lang.String getExtnID()> ->_NONE_
<gov.nist.javax.sip.parser.ContentLengthParser: gov.nist.javax.sip.header.SIPHeader parse()> ->_NONE_
<javax.xml.transform.sax.SAXResult: org.xml.sax.ext.LexicalHandler getLexicalHandler()> ->_NONE_
<android.filterfw.core.GLFrame: void setData(java.nio.ByteBuffer,int,int)> ->_NONE_
<android.media.MediaFormat: void setLong(java.lang.String,long)> ->_NONE_
<libcore.util.BasicLruCache: java.lang.Object get(java.lang.Object)> ->_NONE_
<java.lang.reflect.Constructor: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)> ->_NONE_
<org.apache.http.impl.conn.AbstractPooledConnAdapter: java.lang.Object getState()> ->_NONE_
<android.widget.TextView: int getCompoundPaddingTop()> ->_NONE_
<org.apache.xml.serializer.ToXMLStream: void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getNamespaceURI()> ->_NONE_
<org.apache.xalan.templates.Stylesheet: int getExtensionElementPrefixCount()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: void setXmlEncoding(java.lang.String)> ->_NONE_
<java.util.Calendar: void setFirstDayOfWeek(int)> ->_NONE_
<android.service.dreams.DreamService: void setFullscreen(boolean)> ->_NONE_
<android.telephony.gsm.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)> ->_NONE_
<android.filterfw.core.SerializedFrame: int[] getInts()> ->_NONE_
<android.view.Window: void setSoftInputMode(int)> ->_NONE_
<android.widget.Scroller: int getFinalY()> ->_NONE_
<android.widget.Scroller: int getFinalX()> ->_NONE_
<android.webkit.WebSettings: boolean getDomStorageEnabled()> ->_NONE_
<android.widget.TextView: void setLinkTextColor(int)> ->_NONE_
<android.text.StaticLayout: boolean getLineContainsTab(int)> ->_NONE_
<org.apache.xpath.XPathContext: int getContextNode()> ->_NONE_
<android.media.AudioTrack: int reloadStaticData()> ->_NONE_
<org.apache.http.impl.auth.DigestScheme: java.lang.String getSchemeName()> ->_NONE_
<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x501.Name getSubject()> ->_NONE_
<android.view.View: void setScrollContainer(boolean)> ->_NONE_
<android.support.v4.content.Loader: void onStartLoading()> ->_NONE_
<org.apache.james.mime4j.field.DateTimeField: org.apache.james.mime4j.field.datetime.parser.ParseException getParseException()> ->_NONE_
<org.apache.james.mime4j.field.address.Mailbox: java.lang.String getAddressString(boolean)> ->_NONE_
<android.view.accessibility.AccessibilityRecord: int getRemovedCount()> ->_NONE_
<android.animation.TimeAnimator: void setTimeListener(android.animation.TimeAnimator$TimeListener)> ->_NONE_
<java.security.AlgorithmParameters: byte[] getEncoded()> ->_NONE_
<org.apache.xalan.templates.OutputProperties: void setQNameProperties(org.apache.xml.utils.QName,java.util.Vector)> ->_NONE_
<java.lang.ref.Reference: java.lang.Object get()> ->_NONE_
<android.util.EventLogTags: android.util.EventLogTags$Description get(java.lang.String)> ->_NONE_
<android.widget.TimePicker: java.lang.Integer getCurrentHour()> ->_NONE_
<android.media.AudioTrack: int write(byte[],int,int)> ->_NONE_
<android.widget.HeaderViewListAdapter: int getViewTypeCount()> ->_NONE_
<android.view.inputmethod.InputMethodManager: void updateCursor(android.view.View,int,int,int,int)> ->_NONE_
<android.net.wifi.WifiInfo: void setSupplicantState(java.lang.String)> ->_NONE_
<android.app.ActivityManagerProxy: void startRunning(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getInterface()> ->_NONE_
<android.os.storage.StorageVolume: java.lang.String getPath()> ->_NONE_
<org.jivesoftware.smack.packet.LoginResponse: void setHeartbeatConfig(org.jivesoftware.smack.packet.HeartbeatConfig)> ->_NONE_
<gov.nist.javax.sip.stack.ServerLog: void setSipStack(javax.sip.SipStack)> ->_NONE_
<libcore.io.Posix: int recvfrom(java.io.FileDescriptor,java.nio.ByteBuffer,int,java.net.InetSocketAddress)> ->_NONE_
<android.widget.ListView: boolean getItemsCanFocus()> ->_NONE_
<gov.nist.javax.sip.stack.SIPClientTransaction: void setNotifyOnRetransmit(boolean)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.TransformSnapshot getSnapshot()> ->_NONE_
<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()> ->_NONE_
<libcore.net.url.FtpURLConnection: java.security.Permission getPermission()> ->_NONE_
<android.preference.MultiSelectListPreference: void setEntries(java.lang.CharSequence[])> ->_NONE_
<android.location.Address: void setAddressLine(int,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.stack.MessageChannel getMessageChannel()> ->_NONE_
<org.apache.xpath.functions.FuncExtFunction: void setArg(org.apache.xpath.Expression,int)> ->_NONE_
<android.app.Dialog: void setOnDismissListener(android.content.DialogInterface$OnDismissListener)> ->_NONE_
<android.widget.ImageView: void setColorFilter(int)> ->_NONE_
<org.apache.xpath.XPathException: java.lang.Object getStylesheetNode()> ->_NONE_
<org.apache.commons.logging.impl.LogFactoryImpl: org.apache.commons.logging.Log getInstance(java.lang.String)> ->_NONE_
<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()> ->_NONE_
<org.apache.http.impl.cookie.CookieSpecBase: java.util.List parse(org.apache.http.HeaderElement[],org.apache.http.cookie.CookieOrigin)> ->_NONE_
<java.security.Security: java.lang.String getProperty(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.DecimalFormatProperties: void setInfinity(java.lang.String)> ->_NONE_
<java.io.SequenceInputStream: int read(byte[],int,int)> ->_NONE_
<android.view.accessibility.AccessibilityRecord: boolean getBooleanProperty(int)> ->_NONE_
<android.widget.ImageSwitcher: void setImageResource(int)> ->_NONE_
<org.apache.xml.utils.DOMHelper: org.w3c.dom.Node getRoot(org.w3c.dom.Node)> ->_NONE_
<gov.nist.core.DuplicateNameValueList: java.lang.StringBuffer encode(java.lang.StringBuffer)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.lang.String[] getValueNames()> ->_NONE_
<org.apache.harmony.luni.lang.reflect.ImplForVariable: java.lang.String getName()> ->_NONE_
<org.apache.harmony.security.x509.tsp.TSTInfo: java.lang.String getPolicy()> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: void setConnectionId(int)> ->_NONE_
<android.hardware.GeomagneticField: float getHorizontalStrength()> ->_NONE_
<org.apache.xalan.templates.ElemTemplate: org.apache.xalan.templates.Stylesheet getStylesheet()> ->_NONE_
<java.text.BreakIterator: short getShort(byte[],int)> ->_NONE_
<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)> ->_NONE_
<android.app.admin.DevicePolicyManager: void setPasswordMinimumUpperCase(android.content.ComponentName,int)> ->_NONE_
<libcore.icu.NativeDecimalFormat: void setNegativeSuffix(java.lang.String)> ->_NONE_
<java.net.InetAddress: java.lang.String getCanonicalHostName()> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: void setURIResolver(javax.xml.transform.URIResolver)> ->_NONE_
<android.content.IntentSender: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<java.io.Reader: int read()> ->_NONE_
<android.widget.ScrollBarDrawable: void setHorizontalThumbDrawable(android.graphics.drawable.Drawable)> ->_NONE_
<org.apache.xpath.NodeSet: void setLast(int)> ->_NONE_
<org.apache.xpath.axes.LocPathIterator: void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)> ->_NONE_
<org.apache.harmony.security.x509.ReasonCode: byte[] getEncoded()> ->_NONE_
<android.widget.Scroller: int getDuration()> ->_NONE_
<android.test.InstrumentationTestRunner: com.android.internal.util.Predicate getSizePredicateFromArg(java.lang.String)> ->_NONE_
<android.gesture.GestureOverlayView: float getGestureStrokeAngleThreshold()> ->_NONE_
<android.webkit.WebSettings: void setBlockNetworkImage(boolean)> ->_NONE_
<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.Collection getQueuedWriterThreads()> ->_NONE_
<android.app.ActivityManagerProxy: int getRequestedOrientation(android.os.IBinder)> ->_NONE_
<org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream: int getEndLine()> ->_NONE_
<org.xml.sax.ext.Attributes2Impl: void setSpecified(int,boolean)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNamedNodeMap: int getLength()> ->_NONE_
<java.io.StringWriter: void write(char[],int,int)> ->_NONE_
<android.view.ViewPropertyAnimator: long getDuration()> ->_NONE_
<android.telephony.CellSignalStrengthCdma: void setCdmaEcio(int)> ->_NONE_
<android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)> ->_NONE_
<java.text.DecimalFormat: void setDecimalSeparatorAlwaysShown(boolean)> ->_NONE_
<android.hardware.usb.UsbEndpoint: int getAttributes()> ->_NONE_
<android.app.SearchableInfo: java.lang.String getSuggestPackage()> ->_NONE_
<android.inputmethodservice.Keyboard: int getKeyHeight()> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: void setLastName(java.lang.String)> ->_NONE_
<android.text.DynamicLayout: int getLineTop(int)> ->_NONE_
<android.preference.PreferenceScreen: android.app.Dialog getDialog()> ->_NONE_
<java.util.concurrent.ThreadPoolExecutor: void afterExecute(java.lang.Runnable,java.lang.Throwable)> ->_NONE_
<java.net.ContentHandler: java.lang.Object getContent(java.net.URLConnection,java.lang.Class[])> ->_NONE_
<android.webkit.WebSettings: void setUseWideViewPort(boolean)> ->_NONE_
<android.graphics.drawable.AnimationDrawable: int getDuration(int)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: java.lang.String getNodeNameX(int)> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: int getIdForNamespace(java.lang.String)> ->_NONE_
<android.net.sip.SimpleSessionDescription: java.lang.String getEncryptionMethod()> ->_NONE_
<android.app.Instrumentation: void setInTouchMode(boolean)> ->_NONE_
<android.net.LocalSocket: boolean isConnected()> ->_NONE_
<org.apache.xalan.xslt.EnvironmentCheck: java.lang.String getApparentVersion(java.lang.String,long)> ->_NONE_
<javax.net.ssl.TrustManagerFactory: java.lang.String getAlgorithm()> ->_NONE_
<gov.nist.javax.sip.header.ContentType: java.lang.String getCharset()> ->_NONE_
<android.graphics.drawable.Drawable: int getMinimumWidth()> ->_NONE_
<android.media.audiofx.Visualizer: int getSamplingRate()> ->_NONE_
<libcore.icu.NativeDecimalFormat: int getMultiplier()> ->_NONE_
<android.filterfw.core.Filter: void setWaitsOnOutputPort(java.lang.String,boolean)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.DOMImplementation getImplementation()> ->_NONE_
<android.support.v4.app.FragmentPagerAdapter: void finishUpdate(android.view.ViewGroup)> ->_NONE_
<android.webkit.WebView: void setLayoutParams(android.view.ViewGroup$LayoutParams)> ->_NONE_
<android.gesture.Gesture: android.graphics.RectF getBoundingBox()> ->_NONE_
<android.hardware.Sensor: void setRange(float,float)> ->_NONE_
<gov.nist.javax.sip.header.ParametersHeader: void setParameters(gov.nist.core.NameValueList)> ->_NONE_
<android.widget.TextView: void setMinWidth(int)> ->_NONE_
<android.net.nsd.NsdServiceInfo: int getPort()> ->_NONE_
<android.webkit.WebSettings: void setSansSerifFontFamily(java.lang.String)> ->_NONE_
<org.apache.xpath.axes.LocPathIterator: void setItem(int,int)> ->_NONE_
<android.webkit.WebSettingsClassic: void setJavaScriptCanOpenWindowsAutomatically(boolean)> ->_NONE_
<android.preference.ListPreference: java.lang.CharSequence[] getEntries()> ->_NONE_
<junit.textui.ResultPrinter: void printDefect(junit.framework.TestFailure,int)> ->_NONE_
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()> ->_NONE_
<android.widget.TextView: int getOffsetAtCoordinate(int,float)> ->_NONE_
<android.webkit.WebStorage: void setQuotaForOrigin(java.lang.String,long)> ->_NONE_
<org.apache.xalan.templates.ElemCallTemplate: void setParamElem(org.apache.xalan.templates.ElemWithParam)> ->_NONE_
<org.apache.harmony.xml.parsers.SAXParserFactoryImpl: void setNamespaceAware(boolean)> ->_NONE_
<gov.nist.core.Host: java.lang.String getHostname()> ->_NONE_
<android.media.AudioService: android.media.IRingtonePlayer getRingtonePlayer()> ->_NONE_
<libcore.io.ForwardingOs: int recvfrom(java.io.FileDescriptor,byte[],int,int,int,java.net.InetSocketAddress)> ->_NONE_
<org.apache.http.params.HttpProtocolParams: void setUseExpectContinue(org.apache.http.params.HttpParams,boolean)> ->_NONE_
<java.security.spec.ECFieldFp: int getFieldSize()> ->_NONE_
<android.location.LocationManager: android.location.GpsStatus getGpsStatus(android.location.GpsStatus)> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertImpl: int getBasicConstraints()> ->_NONE_
<org.apache.http.entity.HttpEntityWrapper: java.io.InputStream getContent()> ->_NONE_
<android.webkit.WebViewClassic: void setSelection(int,int)> ->_NONE_
<java.security.cert.X509CertSelector: void setCertificate(java.security.cert.X509Certificate)> ->_NONE_
<android.net.LinkCapabilities: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: javax.net.ssl.SSLEngineResult$HandshakeStatus getHandshakeStatus()> ->_NONE_
<java.security.KeyRep: java.lang.Object readResolve()> ->_NONE_
<android.media.videoeditor.MediaVideoItem: int getVideoType()> ->_NONE_
<gov.nist.javax.sip.header.ims.PChargingVector: void setTerminatingIOI(java.lang.String)> ->_NONE_
<android.widget.TextView: int getTotalPaddingStart()> ->_NONE_
<android.widget.ProgressBar: void setMax(int)> ->_NONE_
<android.graphics.drawable.DrawableContainer: int getMinimumHeight()> ->_NONE_
<android.webkit.CallbackProxy: void onReceivedTouchIconUrl(java.lang.String,boolean)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: int getTrafficClass()> ->_NONE_
<android.database.sqlite.SQLiteOpenHelper: void setWriteAheadLoggingEnabled(boolean)> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)> ->_NONE_
<android.media.Ringtone: int getStreamType()> ->_NONE_
<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.ElemTemplate getDefaultRule()> ->_NONE_
<gov.nist.javax.sip.header.Expires: int getExpires()> ->_NONE_
<android.media.AudioService: void setWiredDeviceConnectionState(int,int,java.lang.String)> ->_NONE_
<javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)> ->_NONE_
<org.apache.xpath.VariableStack: org.apache.xpath.objects.XObject getVariableOrParam(org.apache.xpath.XPathContext,org.apache.xml.utils.QName)> ->_NONE_
<org.apache.harmony.security.PublicKeyImpl: java.lang.String getAlgorithm()> ->_NONE_
<android.widget.TextSwitcher: void setText(java.lang.CharSequence)> ->_NONE_
<android.support.v4.app.Fragment: void setInitialSavedState(android.support.v4.app.Fragment$SavedState)> ->_NONE_
<java.net.CookieHandler: java.net.CookieHandler getDefault()> ->_NONE_
<android.location.GpsSatellite: float getSnr()> ->_NONE_
<java.text.NumberFormat: java.util.Locale[] getAvailableLocales()> ->_NONE_
<android.net.wifi.WifiNative: boolean setScanResultHandling(int)> ->_NONE_
<android.text.style.SubscriptSpan: int getSpanTypeId()> ->_NONE_
<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)> ->_NONE_
<org.xml.sax.HandlerBase: void setDocumentLocator(org.xml.sax.Locator)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNamedNodeMap: org.w3c.dom.Node setNamedItemNS(org.w3c.dom.Node)> ->_NONE_
<jp.co.omronsoft.openwnn.OpenWnnDictionaryImpl: jp.co.omronsoft.openwnn.WnnWord[] getUserDictionaryWords()> ->_NONE_
<org.apache.xml.utils.UnImplNode: org.w3c.dom.Node getParentNode()> ->_NONE_
<java.util.logging.Logger: void setParent(java.util.logging.Logger)> ->_NONE_
<java.security.KeyPair: java.security.PublicKey getPublic()> ->_NONE_
<android.widget.NumberPicker: void setDisplayedValues(java.lang.String[])> ->_NONE_
<org.apache.http.impl.cookie.BasicClientCookie: void setPath(java.lang.String)> ->_NONE_
<java.util.GregorianCalendar: int getMinimum(int)> ->_NONE_
<android.net.NetworkUtils: java.net.InetAddress getNetworkPart(java.net.InetAddress,int)> ->_NONE_
<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: void setProperty(java.lang.String,java.lang.Object)> ->_NONE_
<android.net.SSLCertificateSocketFactory: void setUseSessionTickets(java.net.Socket,boolean)> ->_NONE_
<android.speech.srec.Recognizer: int getResultCount()> ->_NONE_
<android.net.EthernetDataTracker: android.net.NetworkInfo getNetworkInfo()> ->_NONE_
<android.webkit.WebSettings: void setDisplayZoomControls(boolean)> ->_NONE_
<android.telephony.SignalStrength: int getLteDbm()> ->_NONE_
<android.widget.TextView: void setTextIsSelectable(boolean)> ->_NONE_
<gov.nist.javax.sip.header.Subject: void setSubject(java.lang.String)> ->_NONE_
<android.widget.AbsListView: void getFocusedRect(android.graphics.Rect)> ->_NONE_
<android.content.res.StringBlock: java.lang.CharSequence get(int)> ->_NONE_
<java.security.Provider: java.lang.String getInfo()> ->_NONE_
<android.hardware.SensorManager: float getAltitude(float,float)> ->_NONE_
<android.media.videoeditor.MediaVideoItem: int getVolume()> ->_NONE_
<android.text.TextLine: float handleRun(int,int,int,boolean,android.graphics.Canvas,float,int,int,int,android.graphics.Paint$FontMetricsInt,boolean)> ->_NONE_
<gov.nist.javax.sip.address.SipUri: java.lang.String getUserAtHostPort()> ->_NONE_
<android.app.LocalActivityManager: java.lang.String getCurrentId()> ->_NONE_
<org.jivesoftware.smackx.packet.MUCInitialPresence: java.lang.String getElementName()> ->_NONE_
<java.net.URLEncoder: java.lang.String encode(java.lang.String)> ->_NONE_
<android.renderscript.ProgramStore: android.renderscript.ProgramStore$BlendDstFunc getBlendDstFunc()> ->_NONE_
<org.apache.xpath.operations.Variable: void setIsGlobal(boolean)> ->_NONE_
<org.kxml2.io.KXmlParser: java.lang.String getRootElementName()> ->_NONE_
<android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)> ->_NONE_
<android.content.ClipDescription: java.lang.String getMimeType(int)> ->_NONE_
<net.oauth.OAuthMessage: void addParameter(java.util.Map$Entry)> ->_NONE_
<android.media.AudioRecord: int getAudioSessionId()> ->_NONE_
<android.view.View: int getScrollX()> ->_NONE_
<android.net.sip.SipAudioCall: void setAudioGroup(android.net.rtp.AudioGroup)> ->_NONE_
<org.apache.xml.serializer.utils.AttList: java.lang.String getType(java.lang.String)> ->_NONE_
<javax.crypto.ExemptionMechanism: javax.crypto.ExemptionMechanism getInstance(java.lang.String,java.security.Provider)> ->_NONE_
<android.view.View: int getScrollY()> ->_NONE_
<android.view.animation.Animation: void setDetachWallpaper(boolean)> ->_NONE_
<java.util.UnsafeArrayList: java.lang.Object get(int)> ->_NONE_
<org.apache.xml.dtm.ref.DTMManagerDefault: int getDTMIdentity(org.apache.xml.dtm.DTM)> ->_NONE_
<gov.nist.javax.sip.header.ReplyTo: java.lang.String encode()> ->_NONE_
<android.view.ViewGroup: boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ToHeader getToHeader()> ->_NONE_
<android.location.LocationManager: void requestSingleUpdate(java.lang.String,android.location.LocationListener,android.os.Looper)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: void setPeer(java.lang.String,int)> ->_NONE_
<org.jivesoftware.smack.packet.Authentication: void setDigest(java.lang.String)> ->_NONE_
<gov.nist.core.NameValue: java.lang.Object getValue()> ->_NONE_
<android.bluetooth.BluetoothPan: java.util.List getDevicesMatchingConnectionStates(int[])> ->_NONE_
<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList getLinkTextColor()> ->_NONE_
<android.net.LinkProperties: void setHttpProxy(android.net.ProxyProperties)> ->_NONE_
<org.apache.http.conn.params.ConnPerRouteBean: void setDefaultMaxPerRoute(int)> ->_NONE_
<android.app.ActivityThread: void handleDumpProvider(android.app.ActivityThread$DumpComponentInfo)> ->_NONE_
<libcore.io.Posix: int sendto(java.io.FileDescriptor,java.nio.ByteBuffer,int,java.net.InetAddress,int)> ->_NONE_
<android.widget.AdapterView: void setOnClickListener(android.view.View$OnClickListener)> ->_NONE_
<java.io.ObjectOutputStream: void write(byte[])> ->_NONE_
<android.widget.SearchView: void setMaxWidth(int)> ->_NONE_
<org.apache.xpath.axes.IteratorPool: org.apache.xml.dtm.DTMIterator getInstanceOrThrow()> ->_NONE_
<android.net.TrafficStats: long getMobileTxPackets()> ->_NONE_
<org.apache.xalan.processor.StylesheetHandler: void unparsedEntityDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<org.jivesoftware.smack.packet.BindAccountRequest: java.lang.String getAuthToken()> ->_NONE_
<android.appwidget.AppWidgetManager: android.os.Bundle getAppWidgetOptions(int)> ->_NONE_
<android.app.ApplicationThreadProxy: void dispatchPackageBroadcast(int,java.lang.String[])> ->_NONE_
<android.webkit.CallbackProxy: void addMessageToConsole(java.lang.String,int,java.lang.String,int)> ->_NONE_
<android.preference.VolumePreference: void setStreamType(int)> ->_NONE_
<android.filterfw.core.Frame: long getBindingId()> ->_NONE_
<java.util.prefs.XMLParser: void writeXmlPreferences(java.io.File,java.util.Properties)> ->_NONE_
<java.io.PipedReader: void connect(java.io.PipedWriter)> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Integer: void encodeContent(org.apache.harmony.security.asn1.BerOutputStream)> ->_NONE_
<android.view.accessibility.AccessibilityRecord: void setSealed(boolean)> ->_NONE_
<gov.nist.javax.sip.address.Authority: java.lang.StringBuffer encode(java.lang.StringBuffer)> ->_NONE_
<org.apache.xalan.templates.NamespaceAlias: void setResultNamespace(java.lang.String)> ->_NONE_
<java.security.Identity: java.security.PublicKey getPublicKey()> ->_NONE_
<android.database.CursorWindow: void setStartPosition(int)> ->_NONE_
<android.widget.GridLayout: android.widget.GridLayout$Alignment getAlignment(int,boolean)> ->_NONE_
<android.webkit.BrowserFrame: int getFile(java.lang.String,byte[],int,int)> ->_NONE_
<org.apache.harmony.xml.dom.ProcessingInstructionImpl: void setData(java.lang.String)> ->_NONE_
<android.support.v4.content.AsyncTaskLoader: java.lang.Object onLoadInBackground()> ->_NONE_
<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: void setEntity(org.apache.http.HttpEntity)> ->_NONE_
<android.widget.Switch: void setTextOff(java.lang.CharSequence)> ->_NONE_
<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()> ->_NONE_
<org.apache.commons.codec.binary.Hex: byte[] encode(byte[])> ->_NONE_
<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.Node getPreviousSibling()> ->_NONE_
<java.io.CharArrayReader: int read(char[],int,int)> ->_NONE_
<libcore.icu.NativeConverter: void setCallbackDecode(long,java.nio.charset.CharsetDecoder)> ->_NONE_
<android.os.CommonTimeConfig: int getPanicThreshold()> ->_NONE_
<org.apache.harmony.security.x509.DNParser: int getByte(int)> ->_NONE_
<org.apache.xpath.SourceTreeManager: javax.xml.transform.URIResolver getURIResolver()> ->_NONE_
<java.util.prefs.AbstractPreferences: byte[] getByteArray(java.lang.String,byte[])> ->_NONE_
<jp.co.omronsoft.openwnn.ComposingText: void replaceStrSegment(int,jp.co.omronsoft.openwnn.StrSegment[])> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Any: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: void setNeedClientAuth(boolean)> ->_NONE_
<android.widget.SimpleAdapter: int getCount()> ->_NONE_
<org.apache.http.conn.params.ConnRouteParamBean: void setDefaultProxy(org.apache.http.HttpHost)> ->_NONE_
<java.text.MessageFormat: java.text.Format[] getFormatsByArgumentIndex()> ->_NONE_
<android.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getDrawable(android.net.Uri)> ->_NONE_
<javax.xml.parsers.SAXParser: void parse(java.io.InputStream,org.xml.sax.HandlerBase)> ->_NONE_
<android.media.RingtoneManager: boolean getIncludeDrm()> ->_NONE_
<android.telephony.cdma.CdmaSmsCbProgramData: java.lang.String getCategoryName()> ->_NONE_
<android.text.util.Rfc822Token: void setName(java.lang.String)> ->_NONE_
<android.app.SearchableInfo: int getVoiceMaxResults()> ->_NONE_
<libcore.io.ForwardingOs: void setgid(int)> ->_NONE_
<java.nio.FileChannelImpl: long transferTo(long,long,java.nio.channels.WritableByteChannel)> ->_NONE_
<org.apache.http.impl.cookie.BasicClientCookie: int[] getPorts()> ->_NONE_
<gov.nist.javax.sip.address.Authority: void setPort(int)> ->_NONE_
<org.apache.http.message.BufferedHeader: org.apache.http.HeaderElement[] getElements()> ->_NONE_
<android.filterfw.geometry.Rectangle: float getHeight()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: java.security.cert.Certificate[] getPeerCertificates()> ->_NONE_
<android.view.SurfaceView: android.view.SurfaceHolder getHolder()> ->_NONE_
<android.content.IntentSender: void sendIntent(android.content.Context,int,android.content.Intent,android.content.IntentSender$OnFinished,android.os.Handler,java.lang.String)> ->_NONE_
<org.apache.xpath.functions.FuncExtFunction: org.apache.xpath.Expression getArg(int)> ->_NONE_
<android.hardware.SensorManager: boolean getRotationMatrix(float[],float[],float[],float[])> ->_NONE_
<android.media.audiofx.Virtualizer: boolean getStrengthSupported()> ->_NONE_
<android.nfc.tech.MifareClassic: int getType()> ->_NONE_
<android.text.Layout: float getDesiredWidth(java.lang.CharSequence,int,int,android.text.TextPaint)> ->_NONE_
<android.app.DownloadManager: java.lang.String getWhereClauseForIds(long[])> ->_NONE_
<android.accounts.AccountManagerService: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)> ->_NONE_
<org.apache.harmony.security.asn1.ASN1StringType: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)> ->_NONE_
<org.apache.james.mime4j.codec.EncoderUtil: java.lang.String encodeEncodedWord(java.lang.String,org.apache.james.mime4j.codec.EncoderUtil$Usage,int)> ->_NONE_
<android.view.View: void setSystemUiVisibility(int)> ->_NONE_
<android.location.Address: android.os.Bundle getExtras()> ->_NONE_
<android.app.LoadedApk: android.app.IServiceConnection getServiceDispatcher(android.content.ServiceConnection,android.content.Context,android.os.Handler,int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: java.lang.String[] getSupportedCipherSuites()> ->_NONE_
<android.text.Layout: char getEllipsisChar(android.text.TextUtils$TruncateAt)> ->_NONE_
<android.util.NtpTrustedTime: android.util.NtpTrustedTime getInstance(android.content.Context)> ->_NONE_
<android.graphics.drawable.InsetDrawable: int getIntrinsicHeight()> ->_NONE_
<java.util.prefs.AbstractPreferences: int getInt(java.lang.String,int)> ->_NONE_
<android.view.textservice.SpellCheckerSubtype: int getNameResId()> ->_NONE_
<org.apache.http.impl.client.DefaultTargetAuthenticationHandler: boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)> ->_NONE_
<android.renderscript.Matrix2f: void loadMultiply(android.renderscript.Matrix2f,android.renderscript.Matrix2f)> ->_NONE_
<android.graphics.drawable.GradientDrawable: void setShape(int)> ->_NONE_
<java.nio.HeapByteBuffer: java.nio.ByteBuffer get(byte[],int,int)> ->_NONE_
<org.apache.commons.io.FileCleaner: int getTrackCount()> ->_NONE_
<android.media.AudioRecord: int getChannelConfiguration()> ->_NONE_
<org.apache.xpath.compiler.OpMap: int getStepTestType(int)> ->_NONE_
<android.widget.ListPopupWindow: void setInputMethodMode(int)> ->_NONE_
<org.apache.xml.dtm.ref.SecuritySupport: boolean getFileExists(java.io.File)> ->_NONE_
<android.net.MobileDataStateTracker: android.net.LinkCapabilities getLinkCapabilities()> ->_NONE_
<javax.xml.parsers.DocumentBuilderFactory: void setIgnoringElementContentWhitespace(boolean)> ->_NONE_
<java.beans.PropertyChangeSupport: java.beans.PropertyChangeListener[] getPropertyChangeListeners(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: void setReInviteFlag(boolean)> ->_NONE_
<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo getFindAccessibilityNodeInfoResultAndClear(int)> ->_NONE_
<android.app.ActivityManagerProxy: int startActivityAsUser(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.os.Bundle,int)> ->_NONE_
<android.graphics.Bitmap: int getWidth()> ->_NONE_
<android.media.MediaPlayer: void setDataSource(java.lang.String,java.util.Map)> ->_NONE_
<android.webkit.WebViewCore: void showFullScreenPlugin(android.webkit.ViewManager$ChildView,int,int)> ->_NONE_
<android.filterfw.core.GLFrame: int getFboId()> ->_NONE_
<libcore.net.http.HeaderParser: int parseSeconds(java.lang.String)> ->_NONE_
<android.widget.TextView: void setTextColor(int)> ->_NONE_
<android.view.ViewRootImpl: android.view.ViewParent getParentForAccessibility()> ->_NONE_
<android.widget.ArrayAdapter: android.content.Context getContext()> ->_NONE_
<android.widget.Scroller: int getSplineFlingDuration(float)> ->_NONE_
<android.database.sqlite.SQLiteCursor: int getCount()> ->_NONE_
<org.apache.james.mime4j.field.address.parser.SimpleNode: void dump(java.lang.String)> ->_NONE_
<android.location.GpsStatus: java.lang.Iterable getSatellites()> ->_NONE_
<android.webkit.WebSettings: void setCursiveFontFamily(java.lang.String)> ->_NONE_
<android.app.admin.DevicePolicyManager: boolean getCameraDisabled(android.content.ComponentName)> ->_NONE_
<org.apache.xpath.axes.PredicatedNodeTest: int getProximityPosition(int)> ->_NONE_
<android.view.inputmethod.InputBinding: android.os.IBinder getConnectionToken()> ->_NONE_
<org.apache.xml.utils.StringBufferPool: org.apache.xml.utils.FastStringBuffer get()> ->_NONE_
<org.apache.xpath.functions.FuncExtElementAvailable: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<android.net.DummyDataStateTracker: android.net.LinkCapabilities getLinkCapabilities()> ->_NONE_
<java.util.concurrent.ThreadPoolExecutor: long getCompletedTaskCount()> ->_NONE_
<android.os.Debug: int getGlobalExternalFreedSize()> ->_NONE_
<org.apache.xalan.templates.XMLNSDecl: java.lang.String getURI()> ->_NONE_
<org.apache.james.mime4j.codec.EncoderUtil: int bEncodedLength(byte[])> ->_NONE_
<android.view.textservice.TextInfo: int getCookie()> ->_NONE_
<android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence)> ->_NONE_
<android.webkit.WebView: void stopLoading()> ->_NONE_
<java.security.cert.PKIXParameters: java.util.Set getTrustAnchors()> ->_NONE_
<android.app.backup.FileBackupHelper: void restoreEntity(android.app.backup.BackupDataInputStream)> ->_NONE_
<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine getStatusLine()> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getDialogId()> ->_NONE_
<org.apache.xml.dtm.SecuritySupport12: java.lang.ClassLoader getSystemClassLoader()> ->_NONE_
<java.net.Socket: int getSoTimeout()> ->_NONE_
<libcore.net.http.RawHeaders: java.lang.String getFieldName(int)> ->_NONE_
<org.apache.harmony.security.x509.tsp.PKIStatusInfo: org.apache.harmony.security.x509.tsp.PKIFailureInfo getFailInfo()> ->_NONE_
<org.apache.harmony.xml.dom.ElementImpl: void setIdAttribute(java.lang.String,boolean)> ->_NONE_
<org.apache.xpath.axes.UnionPathIterator: int getAnalysisBits()> ->_NONE_
<java.util.jar.Manifest: java.util.jar.Attributes getAttributes(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.CallIdentifier: java.lang.String encode()> ->_NONE_
<android.bluetooth.BluetoothHealth: int getConnectionState(android.bluetooth.BluetoothDevice)> ->_NONE_
<java.lang.Package: java.lang.String getImplementationTitle()> ->_NONE_
<android.webkit.WebSettings: android.webkit.WebSettings$PluginState getPluginState()> ->_NONE_
<android.test.suitebuilder.TestMethod: java.lang.String getEnclosingClassname()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()> ->_NONE_
<android.location.LocationRequest: int getNumUpdates()> ->_NONE_
<gov.nist.javax.sip.header.Accept: float getQValue()> ->_NONE_
<libcore.net.http.ChunkedOutputStream: void writeHex(int)> ->_NONE_
<android.widget.AbsListView: int getSolidColor()> ->_NONE_
<org.apache.james.mime4j.field.datetime.DateTime: int getTimeZone()> ->_NONE_
<org.apache.xalan.templates.ElemForEach: java.lang.String getNodeName()> ->_NONE_
<net.oauth.signature.OAuthSignatureMethod: java.lang.String base64Encode(byte[])> ->_NONE_
<org.apache.harmony.security.x509.TBSCertificate: boolean[] getSubjectUniqueID()> ->_NONE_
<java.io.ByteArrayOutputStream: void write(byte[],int,int)> ->_NONE_
<java.io.PipedInputStream: void connect(java.io.PipedOutputStream)> ->_NONE_
<android.webkit.WebViewClient: void doUpdateVisitedHistory(android.webkit.WebView,java.lang.String,boolean)> ->_NONE_
<android.media.AudioService: boolean getBluetoothHeadset()> ->_NONE_
<org.apache.xalan.templates.ElemVariable: void setParentElem(org.apache.xalan.templates.ElemTemplateElement)> ->_NONE_
<android.widget.ListPopupWindow: int getHorizontalOffset()> ->_NONE_
<android.text.method.HideReturnsTransformationMethod: char[] getOriginal()> ->_NONE_
<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpRequest createConnectRequest(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext)> ->_NONE_
<android.media.MediaPlayer: void setDataSource(java.lang.String,java.lang.String[],java.lang.String[])> ->_NONE_
<android.test.mock.MockPackageManager: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)> ->_NONE_
<org.apache.xml.serializer.utils.StringToIntTable: int getIgnoreCase(java.lang.String)> ->_NONE_
<android.test.mock.MockCursor: android.os.Bundle getExtras()> ->_NONE_
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShaderFactory getShaderFactory()> ->_NONE_
<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getState()> ->_NONE_
<javax.xml.validation.SchemaFactory: java.lang.Object getProperty(java.lang.String)> ->_NONE_
<android.media.AudioManager: int getRouting(int)> ->_NONE_
<android.mtp.MtpDatabase: int[] getSupportedDeviceProperties()> ->_NONE_
<android.service.dreams.DreamService: void setContentView(int)> ->_NONE_
<gov.nist.core.DuplicateNameValueList: java.lang.String getParameter(java.lang.String)> ->_NONE_
<android.widget.ListPopupWindow: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)> ->_NONE_
<android.app.LocalActivityManager: android.app.Activity getCurrentActivity()> ->_NONE_
<android.net.sip.SipSession: void setListener(android.net.sip.SipSession$Listener)> ->_NONE_
<libcore.icu.NativeNormalizer: java.lang.String normalize(java.lang.CharSequence,java.text.Normalizer$Form)> ->_NONE_
<android.widget.ListPopupWindow: void setAnimationStyle(int)> ->_NONE_
<android.content.ContextWrapper: java.io.File getExternalFilesDir(java.lang.String)> ->_NONE_
<android.hardware.usb.UsbEndpoint: int getMaxPacketSize()> ->_NONE_
<android.nfc.TransceiveResult: byte[] getResponseOrThrow()> ->_NONE_
<android.view.View: int getRawLayoutDirection()> ->_NONE_
<org.apache.http.impl.cookie.NetscapeDraftSpec: org.apache.http.Header getVersionHeader()> ->_NONE_
<java.util.concurrent.ThreadPoolExecutor: void setMaximumPoolSize(int)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: boolean getStrictErrorChecking()> ->_NONE_
<org.apache.harmony.security.pkcs7.SignedData: java.util.List getCRLs()> ->_NONE_
<libcore.icu.NativeDecimalFormat: int getMaximumFractionDigits()> ->_NONE_
<android.graphics.Region: boolean set(android.graphics.Rect)> ->_NONE_
<android.widget.AbsSeekBar: void setThumbOffset(int)> ->_NONE_
<org.apache.xpath.SourceTreeManager: int getSourceTree(javax.xml.transform.Source,javax.xml.transform.SourceLocator,org.apache.xpath.XPathContext)> ->_NONE_
<gov.nist.javax.sip.address.TelephoneNumber: void setIsdnSubaddress(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.CallIdentifier: void setLocalId(java.lang.String)> ->_NONE_
<java.util.logging.LogRecord: void setResourceBundleName(java.lang.String)> ->_NONE_
<org.apache.http.auth.params.AuthParamBean: void setCredentialCharset(java.lang.String)> ->_NONE_
<org.apache.commons.io.FileUtils: java.io.File getTempDirectory()> ->_NONE_
<android.renderscript.AllocationAdapter: void setLOD(int)> ->_NONE_
<java.text.DateFormatSymbols: void setAmPmStrings(java.lang.String[])> ->_NONE_
<android.net.http.HttpResponseCache: void update(java.net.CacheResponse,java.net.HttpURLConnection)> ->_NONE_
<android.database.CursorWrapper: void setNotificationUri(android.content.ContentResolver,android.net.Uri)> ->_NONE_
<java.text.Collator: int getDecomposition()> ->_NONE_
<android.app.ActivityThread: java.lang.String getProfileFilePath()> ->_NONE_
<javax.sql.StatementEvent: java.sql.SQLException getSQLException()> ->_NONE_
<org.jivesoftware.smack.RosterEntry: java.util.Iterator getGroups()> ->_NONE_
<java.text.NumberFormat: int getMaximumIntegerDigits()> ->_NONE_
<javax.crypto.spec.DHGenParameterSpec: int getPrimeSize()> ->_NONE_
<android.graphics.Bitmap: byte[] getNinePatchChunk()> ->_NONE_
<android.filterpacks.performance.ThroughputFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<org.apache.harmony.security.x509.DistributionPointName: void dumpValue(java.lang.StringBuilder,java.lang.String)> ->_NONE_
<org.apache.xml.serializer.ToXMLSAXHandler: java.io.OutputStream getOutputStream()> ->_NONE_
<android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()> ->_NONE_
<gov.nist.javax.sip.header.InReplyTo: java.lang.String getCallId()> ->_NONE_
<gov.nist.core.HostPort: void setHost(gov.nist.core.Host)> ->_NONE_
<android.widget.VideoView: void setVideoURI(android.net.Uri)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: void setSize(int)> ->_NONE_
<java.text.DateFormat: java.lang.Object parseObject(java.lang.String,java.text.ParsePosition)> ->_NONE_
<android.media.MediaRecorder: int getAudioSourceMax()> ->_NONE_
<android.accounts.AbstractAccountAuthenticator: android.os.IBinder getIBinder()> ->_NONE_
<libcore.util.ZoneInfo: int getRawOffset()> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: long getHeaderFieldDate(java.lang.String,long)> ->_NONE_
<android.text.method.DateTimeKeyListener: char[] getAcceptedChars()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: java.net.SocketAddress getLocalSocketAddress()> ->_NONE_
<org.jivesoftware.smack.packet.BindAccountResponse: java.lang.String getJid()> ->_NONE_
<org.ccil.cowan.tagsoup.Schema: int getEntity(java.lang.String)> ->_NONE_
<android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()> ->_NONE_
<android.os.BatteryStats: long getRadioDataUptimeMs()> ->_NONE_
<org.ccil.cowan.tagsoup.Parser: void setEntityResolver(org.xml.sax.EntityResolver)> ->_NONE_
<android.graphics.drawable.NinePatchDrawable: int getOpacity()> ->_NONE_
<javax.net.ssl.KeyStoreBuilderParameters: java.util.List getParameters()> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.MsgMgr getMsgMgr()> ->_NONE_
<org.apache.commons.io.input.SwappedDataInputStream: byte readByte()> ->_NONE_
<android.webkit.WebSettings: void setNavDump(boolean)> ->_NONE_
<android.view.MotionEvent: void getHistoricalPointerCoords(int,int,android.view.MotionEvent$PointerCoords)> ->_NONE_
<org.apache.xpath.jaxp.XPathImpl: void setXPathVariableResolver(javax.xml.xpath.XPathVariableResolver)> ->_NONE_
<android.view.ViewRootImpl: void setLocalDragState(java.lang.Object)> ->_NONE_
<android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int)> ->_NONE_
<java.security.cert.CertPathValidator: java.security.cert.CertPathValidator getInstance(java.lang.String)> ->_NONE_
<org.xml.sax.helpers.XMLFilterImpl: void setEntityResolver(org.xml.sax.EntityResolver)> ->_NONE_
<org.apache.xpath.functions.FuncUnparsedEntityURI: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<android.webkit.WebViewClassic: void setHTML5VideoViewProxy(android.webkit.HTML5VideoViewProxy)> ->_NONE_
<android.view.accessibility.AccessibilityRecord: android.view.accessibility.AccessibilityNodeInfo getSource()> ->_NONE_
<android.app.ActivityManagerProxy: int getProcessLimit()> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: long getRemoteSeqNumber()> ->_NONE_
<org.apache.http.params.HttpConnectionParamBean: void setStaleCheckingEnabled(boolean)> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: void setLongClickable(boolean)> ->_NONE_
<android.test.mock.MockPackageManager: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)> ->_NONE_
<org.apache.xalan.templates.ElemNumber: int getTargetNode(org.apache.xpath.XPathContext,int)> ->_NONE_
<org.apache.http.entity.SerializableEntity: void writeTo(java.io.OutputStream)> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: java.lang.String getLocalName(int)> ->_NONE_
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: void setSrcDevice(android.net.wifi.p2p.WifiP2pDevice)> ->_NONE_
<android.widget.TextView: int getMinEms()> ->_NONE_
<org.jivesoftware.smack.RosterEntry: void setQuickContact(boolean)> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: void setFirstName(java.lang.String)> ->_NONE_
<android.widget.SimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ->_NONE_
<gov.nist.core.DuplicateNameValueList: java.lang.String encode()> ->_NONE_
<android.app.AppGlobals: int getIntCoreSetting(java.lang.String,int)> ->_NONE_
<android.content.pm.ApplicationInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)> ->_NONE_
<android.app.ApplicationThreadProxy: void profilerControl(boolean,java.lang.String,android.os.ParcelFileDescriptor,int)> ->_NONE_
<org.apache.james.mime4j.field.datetime.DateTime: int getSecond()> ->_NONE_
<android.support.v4.content.LocalBroadcastManager: void sendBroadcastSync(android.content.Intent)> ->_NONE_
<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.lang.String)> ->_NONE_
<android.widget.RemoteViews: void setIsWidgetCollectionChild(boolean)> ->_NONE_
<android.webkit.WebViewClient: void onReceivedLoginRequest(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.location.Address: void setCountryName(java.lang.String)> ->_NONE_
<android.test.mock.MockPackageManager: android.content.Intent getLaunchIntentForPackage(java.lang.String)> ->_NONE_
<android.view.View: int getMeasuredHeight()> ->_NONE_
<android.database.CursorWrapper: double getDouble(int)> ->_NONE_
<org.apache.http.impl.conn.AbstractClientConnAdapter: org.apache.http.conn.OperatedClientConnection getWrappedConnection()> ->_NONE_
<java.text.ParsePosition: void setErrorIndex(int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: void setEnabledCipherSuites(java.lang.String[])> ->_NONE_
<android.text.style.URLSpan: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<java.text.DecimalFormatSymbols: java.lang.String getInternationalCurrencySymbol()> ->_NONE_
<android.bluetooth.BluetoothHeadset: boolean connectAudio()> ->_NONE_
<android.graphics.Canvas: void getMatrix(android.graphics.Matrix)> ->_NONE_
<org.apache.xalan.templates.ElemApplyImport: void execute(org.apache.xalan.transformer.TransformerImpl)> ->_NONE_
<org.apache.xalan.templates.ElemTemplate: java.lang.String getSystemId()> ->_NONE_
<android.graphics.drawable.StateListDrawable: android.graphics.drawable.StateListDrawable$StateListState getStateListState()> ->_NONE_
<android.net.wifi.WifiManager: android.os.Messenger getWifiServiceMessenger()> ->_NONE_
<android.support.v4.content.Loader: void onForceLoad()> ->_NONE_
<gov.nist.javax.sip.header.Challenge: java.lang.String getQOP()> ->_NONE_
<javax.xml.transform.TransformerException: java.lang.Throwable getException()> ->_NONE_
<android.net.NetworkQuotaInfo: long getEstimatedBytes()> ->_NONE_
<android.content.SyncStorageEngine: android.content.SyncStorageEngine$AuthorityInfo getOrCreateAuthority(android.accounts.Account,int,java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: int getLocalPort()> ->_NONE_
<android.location.Location: float getBearing()> ->_NONE_
<org.apache.xalan.templates.XUnresolvedVariableSimple: java.lang.String getTypeString()> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: void setUid(int)> ->_NONE_
<android.location.LocationManager: android.location.Location getLastLocation()> ->_NONE_
<android.widget.AdapterView: boolean performItemClick(android.view.View,int,long)> ->_NONE_
<java.security.cert.CertPathBuilder: java.security.cert.CertPathBuilder getInstance(java.lang.String,java.security.Provider)> ->_NONE_
<android.media.videoeditor.WaveformData: int getFrameDuration()> ->_NONE_
<android.os.Handler: boolean sendEmptyMessage(int)> ->_NONE_
<android.app.ActivityManager: int getCurrentUser()> ->_NONE_
<org.apache.xml.utils.Context2: org.apache.xml.utils.Context2 getParent()> ->_NONE_
<org.xml.sax.helpers.ParserAdapter: org.xml.sax.EntityResolver getEntityResolver()> ->_NONE_
<org.apache.xpath.axes.AxesWalker: int getLastPos(org.apache.xpath.XPathContext)> ->_NONE_
<android.graphics.Matrix: void setValues(float[])> ->_NONE_
<android.widget.TextView: int getCurrentHintTextColor()> ->_NONE_
<android.filterfw.core.FilterGraph: java.util.HashSet getSourceFilters()> ->_NONE_
<android.view.FocusFinder: android.view.View getNextFocusable(android.view.View,java.util.ArrayList,int)> ->_NONE_
<android.telephony.TelephonyManager: java.lang.String getMsisdn()> ->_NONE_
<org.xml.sax.helpers.XMLFilterImpl: void setDTDHandler(org.xml.sax.DTDHandler)> ->_NONE_
<org.apache.xml.serializer.SerializerBase: java.lang.String getElementURI()> ->_NONE_
<android.webkit.GeolocationPermissionsClassic: void getAllowed(java.lang.String,android.webkit.ValueCallback)> ->_NONE_
<android.view.KeyEvent: char getDisplayLabel()> ->_NONE_
<android.webkit.WebSettings: boolean getUseWideViewPort()> ->_NONE_
<android.os.Parcel: void writeLongArray(long[])> ->_NONE_
<org.apache.http.util.ExceptionUtils: java.lang.reflect.Method getInitCauseMethod()> ->_NONE_
<android.preference.PreferenceManager: int getDefaultSharedPreferencesMode()> ->_NONE_
<android.accounts.AccountManagerService: void getAccountsByFeatures(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[])> ->_NONE_
<gov.nist.javax.sip.header.ims.PAssertedService: void setSubserviceIdentifiers(java.lang.String)> ->_NONE_
<android.net.http.Request: java.lang.String getHostPort()> ->_NONE_
<org.apache.james.mime4j.util.PartialInputStream: int read()> ->_NONE_
<android.text.MeasuredText: float addStyleRun(android.text.TextPaint,android.text.style.MetricAffectingSpan[],int,android.graphics.Paint$FontMetricsInt)> ->_NONE_
<javax.crypto.spec.SecretKeySpec: java.lang.String getAlgorithm()> ->_NONE_
<org.xml.sax.helpers.ParserAdapter: org.xml.sax.ErrorHandler getErrorHandler()> ->_NONE_
<java.text.Collator: java.util.Locale[] getAvailableLocales()> ->_NONE_
<android.support.v4.view.PagerTitleStrip: void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter)> ->_NONE_
<android.database.CursorWindow: int getStartPosition()> ->_NONE_
<junit.framework.TestSuite: void setName(java.lang.String)> ->_NONE_
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.app.PendingIntent)> ->_NONE_
<org.apache.xpath.axes.OneStepIterator: void setRoot(int,java.lang.Object)> ->_NONE_
<android.app.ApplicationPackageManager: android.content.Intent getLaunchIntentForPackage(java.lang.String)> ->_NONE_
<android.app.AlertDialog: void setView(android.view.View,int,int,int,int)> ->_NONE_
<android.test.InstrumentationTestRunner: junit.framework.TestSuite getTestSuite()> ->_NONE_
<org.apache.xml.serializer.ToStream: void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<org.apache.james.mime4j.message.Multipart: java.lang.String getCharset()> ->_NONE_
<java.net.Socks4Message: int getPort()> ->_NONE_
<org.apache.harmony.security.provider.crypto.DSAPublicKeyImpl: java.security.interfaces.DSAParams getParams()> ->_NONE_
<android.view.textservice.SpellCheckerSubtype: java.lang.String getExtraValue()> ->_NONE_
<java.net.InetAddress: byte[] getAddress()> ->_NONE_
<android.appwidget.AppWidgetHostView: int getAppWidgetId()> ->_NONE_
<android.nfc.NfcAdapter: android.nfc.INfcAdapter getService()> ->_NONE_
<android.widget.AppSecurityPermissions: android.view.View getPermissionsView()> ->_NONE_
<android.content.pm.UserInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.jivesoftware.smackx.GroupChatInvitation: java.lang.String getNamespace()> ->_NONE_
<libcore.io.ForwardingOs: void setsockoptInt(java.io.FileDescriptor,int,int,int)> ->_NONE_
<java.net.URLConnection: void setDoOutput(boolean)> ->_NONE_
<android.filterfw.core.NativeProgram: void setHostValue(java.lang.String,java.lang.Object)> ->_NONE_
<java.text.DecimalFormatSymbols: char getGroupingSeparator()> ->_NONE_
<org.xml.sax.helpers.AttributeListImpl: java.lang.String getName(int)> ->_NONE_
<android.widget.TextView: int getMaxHeight()> ->_NONE_
<jp.co.omronsoft.openwnn.Keyboard: void loadKeyboard(android.content.Context,android.content.res.XmlResourceParser)> ->_NONE_
<android.filterfw.core.GLFrame: int getTextureId()> ->_NONE_
<java.security.SignedObject: java.lang.Object getObject()> ->_NONE_
<java.io.EmulatedFields: float get(java.lang.String,float)> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Any: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> ->_NONE_
<org.apache.xpath.axes.FilterExprIterator: org.apache.xpath.Expression getInnerExpression()> ->_NONE_
<gov.nist.javax.sip.header.Contact: void setParameter(java.lang.String,java.lang.String)> ->_NONE_
<android.media.AudioService: void sendStickyBroadcastToAll(android.content.Intent)> ->_NONE_
<android.net.TrafficStats: android.net.NetworkStats getDataLayerSnapshotForUid(android.content.Context)> ->_NONE_
<jp.co.omronsoft.openwnn.OpenWnnJAJP: jp.co.omronsoft.openwnn.OpenWnnJAJP getInstance()> ->_NONE_
<android.os.ServiceManagerProxy: void addService(java.lang.String,android.os.IBinder,boolean)> ->_NONE_
<dalvik.system.profiler.HprofData: int getDepth()> ->_NONE_
<android.content.pm.ConfigurationInfo: java.lang.String getGlEsVersion()> ->_NONE_
<libcore.net.http.RawHeaders: void setStatusLine(java.lang.String)> ->_NONE_
<org.jivesoftware.smack.sasl.SASLAnonymous: java.lang.String getAuthenticationText(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.widget.CompoundButton: int getCompoundPaddingLeft()> ->_NONE_
<android.content.res.TypedArray: boolean getValueAt(int,android.util.TypedValue)> ->_NONE_
<gov.nist.javax.sip.address.TelURLImpl: void setIsdnSubAddress(java.lang.String)> ->_NONE_
<android.preference.PreferenceManager: void setDefaultValues(android.content.Context,int,boolean)> ->_NONE_
<android.opengl.Matrix: void setRotateM(float[],int,float,float,float,float)> ->_NONE_
<android.webkit.OverScrollGlow: void setOverScrollDeltas(int,int)> ->_NONE_
<java.net.HttpURLConnection: void setChunkedStreamingMode(int)> ->_NONE_
<org.apache.xml.serializer.ToXMLSAXHandler: boolean setEscaping(boolean)> ->_NONE_
<android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean)> ->_NONE_
<java.net.Authenticator: java.lang.String getRequestingProtocol()> ->_NONE_
<android.filterfw.core.MutableFrameFormat: void setBaseType(int)> ->_NONE_
<org.apache.xalan.templates.ElemValueOf: int getXSLToken()> ->_NONE_
<android.webkit.WebViewClassic: void setScrollXRaw(int)> ->_NONE_
<android.accounts.GrantCredentialsPermissionActivity: java.lang.String getAccountLabel(android.accounts.Account)> ->_NONE_
<gov.nist.core.NameValue: void setName(java.lang.String)> ->_NONE_
<libcore.icu.RuleBasedCollatorICU: libcore.icu.CollationElementIteratorICU getCollationElementIterator(java.text.CharacterIterator)> ->_NONE_
<android.webkit.WebViewClassic: int getViewHeightWithTitle()> ->_NONE_
<android.icu.text.ArabicShaping: int getLink(char)> ->_NONE_
<org.kxml2.io.KXmlParser: void parseStartTag(boolean,boolean)> ->_NONE_
<java.text.DateFormatSymbols: void setWeekdays(java.lang.String[])> ->_NONE_
<android.gesture.GestureOverlayView: android.graphics.Path getGesturePath(android.graphics.Path)> ->_NONE_
<android.text.style.SuggestionRangeSpan: void updateDrawState(android.text.TextPaint)> ->_NONE_
<org.apache.xml.serializer.ToStream: void writeNormalizedChars(char[],int,int,boolean,boolean)> ->_NONE_
<org.jivesoftware.smack.packet.RosterPacket: com.google.common.io.protocol.ProtoBuf getExtensionProtoBuf()> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: void setLocalAvatarHash(java.lang.String)> ->_NONE_
<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.media.AudioManager: int getDevicesForStream(int)> ->_NONE_
<gov.nist.core.DuplicateNameValueList: java.util.Iterator getNames()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int)> ->_NONE_
<android.database.AbstractWindowedCursor: short getShort(int)> ->_NONE_
<android.os.Parcel: void writeSparseArray(android.util.SparseArray)> ->_NONE_
<android.view.textservice.SpellCheckerInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)> ->_NONE_
<android.webkit.WebHistoryItemClassic: byte[] getFlattenedData()> ->_NONE_
<java.security.KeyStore: void setKeyEntry(java.lang.String,byte[],java.security.cert.Certificate[])> ->_NONE_
<android.widget.RemoteViews: void setPendingIntentTemplate(int,android.app.PendingIntent)> ->_NONE_
<android.test.TestRunner: void run(java.lang.String[])> ->_NONE_
<org.apache.xml.utils.UnImplNode: short getNodeType()> ->_NONE_
<android.webkit.ClientCertRequestHandler: void setSslClientCertFromPKCS8(byte[],byte[][])> ->_NONE_
<org.apache.harmony.security.x509.tsp.TimeStampReq: org.apache.harmony.security.x509.tsp.MessageImprint getMessageImprint()> ->_NONE_
<gov.nist.javax.sip.address.UserInfo: java.lang.String getUser()> ->_NONE_
<android.support.v4.view.ViewCompat: void setHasTransientState(android.view.View,boolean)> ->_NONE_
<android.content.pm.VerifierInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.webkit.WebViewClassic: android.webkit.WebViewClient getWebViewClient()> ->_NONE_
<org.apache.http.protocol.HttpRequestExecutor: org.apache.http.HttpResponse doSendRequest(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext)> ->_NONE_
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script$KernelID getKernelIDSrcIn()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: boolean getEnableSessionCreation()> ->_NONE_
<android.widget.EditText: android.text.Editable getText()> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertPathImpl: org.apache.harmony.security.provider.cert.X509CertPathImpl getInstance(byte[],java.lang.String)> ->_NONE_
<android.bluetooth.BluetoothDevice: int getServiceChannel(android.os.ParcelUuid)> ->_NONE_
<javax.net.ssl.HttpsURLConnection: void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)> ->_NONE_
<android.util.SparseIntArray: int get(int)> ->_NONE_
<android.telephony.ServiceState: void setCssIndicator(int)> ->_NONE_
<org.jivesoftware.smack.SASLAuthentication: void send(java.lang.String)> ->_NONE_
<android.opengl.ETC1Util: void writeTexture(android.opengl.ETC1Util$ETC1Texture,java.io.OutputStream)> ->_NONE_
<org.apache.james.mime4j.field.datetime.parser.DateTimeParser: int getMilitaryZoneOffset(char)> ->_NONE_
<android.database.CursorToBulkCursorAdaptor: android.database.BulkCursorDescriptor getBulkCursorDescriptor()> ->_NONE_
<org.apache.harmony.security.x509.tsp.TSTInfo: java.math.BigInteger getSerialNumber()> ->_NONE_
<android.test.suitebuilder.TestGrouping: java.lang.String getFirstIncludedPackage()> ->_NONE_
<gov.nist.javax.sip.stack.UDPMessageProcessor: int getPort()> ->_NONE_
<android.preference.ListPreference: void setSummary(java.lang.CharSequence)> ->_NONE_
<android.view.MotionEvent: int getButtonState()> ->_NONE_
<org.apache.http.impl.io.ContentLengthInputStream: int read(byte[],int,int)> ->_NONE_
<android.widget.DialerFilter: java.lang.CharSequence getDigits()> ->_NONE_
<android.app.PendingIntent: android.content.IIntentSender getTarget()> ->_NONE_
<java.util.zip.Inflater: int getRemaining()> ->_NONE_
<android.webkit.WebViewCore: void setMockGeolocationPosition(double,double,double)> ->_NONE_
<android.content.ContentProviderClient: android.content.ContentProvider getLocalContentProvider()> ->_NONE_
<gov.nist.javax.sip.address.SipUri: void setQheaders(gov.nist.core.NameValueList)> ->_NONE_
<android.support.v4.app.FragmentState: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<gov.nist.javax.sip.header.extensions.References: void setParameter(java.lang.String,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: void setHeader(gov.nist.javax.sip.header.SIPHeaderList)> ->_NONE_
<java.util.jar.JarEntry: java.util.jar.Attributes getAttributes()> ->_NONE_
<org.apache.commons.io.IOUtils: void writeLines(java.util.Collection,java.lang.String,java.io.Writer)> ->_NONE_
<net.oauth.signature.OAuthSignatureMethod: void validate(net.oauth.OAuthMessage)> ->_NONE_
<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression[] getCompiledPredicates(int)> ->_NONE_
<android.location.LocationRequest: int getQuality()> ->_NONE_
<android.mtp.MtpStorage: java.lang.String getPath()> ->_NONE_
<org.apache.harmony.security.pkcs7.AuthenticatedAttributes: byte[] getEncoded()> ->_NONE_
<android.widget.Spinner: int getDropDownHorizontalOffset()> ->_NONE_
<android.webkit.WebViewClassic: void setHitTestResult(android.webkit.WebViewCore$WebKitHitTest)> ->_NONE_
<gov.nist.javax.sip.header.Via: java.lang.String getComment()> ->_NONE_
<android.media.videoeditor.MediaItem: java.lang.String getGeneratedImageClip()> ->_NONE_
<org.apache.http.impl.cookie.AbstractCookieSpec: java.util.Collection getAttribHandlers()> ->_NONE_
<javax.xml.transform.TransformerException: java.lang.String getLocationAsString()> ->_NONE_
<android.telephony.TelephonyManager: int getCdmaEriIconMode()> ->_NONE_
<android.webkit.WebSettingsClassic: boolean getShowVisualIndicator()> ->_NONE_
<org.jivesoftware.smack.ConnectionConfiguration: java.lang.String getTruststoreType()> ->_NONE_
<org.ccil.cowan.tagsoup.PYXWriter: void pcdata(char[],int,int)> ->_NONE_
<android.net.LocalSocketImpl: android.net.LocalSocketAddress getSockAddress()> ->_NONE_
<android.app.DialogFragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)> ->_NONE_
<java.net.PlainSocketImpl: void sendUrgentData(int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPublicKey: java.lang.String getFormat()> ->_NONE_
<java.nio.HeapByteBuffer: long getLong()> ->_NONE_
<java.net.SocketImpl: void setPerformancePreferences(int,int,int)> ->_NONE_
<org.apache.http.impl.HttpConnectionMetricsImpl: long getRequestCount()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLEngineDataStream: void setSourceBuffers(java.nio.ByteBuffer[],int,int)> ->_NONE_
<android.preference.Preference: void setKey(java.lang.String)> ->_NONE_
<android.app.ApplicationThreadProxy: void dumpProvider(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])> ->_NONE_
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: int getMaxTotal()> ->_NONE_
<org.apache.harmony.security.utils.ObjectIdentifier: int[] getOid()> ->_NONE_
<android.support.v4.widget.CursorAdapter: android.database.Cursor getCursor()> ->_NONE_
<libcore.net.url.FtpURLConnection: void getFile()> ->_NONE_
<java.net.URI: int getPort()> ->_NONE_
<gov.nist.javax.sip.header.SIPHeader: java.lang.String encode()> ->_NONE_
<org.apache.harmony.security.x501.Name: javax.security.auth.x500.X500Principal getX500Principal()> ->_NONE_
<java.nio.charset.ModifiedUtf8: java.lang.String decode(byte[],char[],int,int)> ->_NONE_
<android.content.BroadcastReceiver: void setPendingResult(android.content.BroadcastReceiver$PendingResult)> ->_NONE_
<gov.nist.javax.sip.header.Route: java.lang.String encodeBody()> ->_NONE_
<java.net.URLConnection: void setUseCaches(boolean)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setRemovedCount(java.lang.Object,int)> ->_NONE_
<org.apache.http.ProtocolVersion: int getMajor()> ->_NONE_
<android.text.style.RasterizerSpan: android.graphics.Rasterizer getRasterizer()> ->_NONE_
<android.mtp.MtpDatabase: int setObjectProperty(int,int,long,java.lang.String)> ->_NONE_
<java.net.URL: int getPort()> ->_NONE_
<org.apache.commons.logging.impl.Jdk14Logger: java.util.logging.Logger getLogger()> ->_NONE_
<gov.nist.javax.sip.address.TelURLImpl: java.lang.String getIsdnSubAddress()> ->_NONE_
<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()> ->_NONE_
<android.test.ClassPathPackageInfoSource: void setClassLoader(java.lang.ClassLoader)> ->_NONE_
<android.security.KeyStore: java.util.ArrayList execute(int,byte[][])> ->_NONE_
<android.os.PerformanceCollector: android.os.Bundle getBinderCounts()> ->_NONE_
<android.app.ListFragment: void setSelection(int)> ->_NONE_
<android.view.animation.GridLayoutAnimationController: int getTransformedRowIndex(android.view.animation.GridLayoutAnimationController$AnimationParameters)> ->_NONE_
<android.opengl.GLLogWrapper: int getLightModelParamCount(int)> ->_NONE_
<android.widget.TextView: int getMinLines()> ->_NONE_
<org.apache.http.params.HttpConnectionParams: void setTcpNoDelay(org.apache.http.params.HttpParams,boolean)> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.HttpRequestRetryHandler createHttpRequestRetryHandler()> ->_NONE_
<org.apache.http.protocol.SyncBasicHttpContext: java.lang.Object getAttribute(java.lang.String)> ->_NONE_
<java.security.cert.X509CRLSelector: java.math.BigInteger getMinCRL()> ->_NONE_
<android.app.ActivityManagerProxy: boolean removeSubTask(int,int)> ->_NONE_
<org.apache.xpath.compiler.OpMap: int getNextOpPos(int[],int)> ->_NONE_
<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.header.RequestLine parseSIPRequestLine(java.lang.String)> ->_NONE_
<android.view.animation.Animation: android.view.animation.Interpolator getInterpolator()> ->_NONE_
<org.apache.xalan.templates.ElemNumber: java.lang.String getNodeName()> ->_NONE_
<javax.net.ssl.DefaultHostnameVerifier: java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int)> ->_NONE_
<android.app.ContextImpl: int getDisplayId()> ->_NONE_
<android.app.BackStackRecord: android.app.FragmentTransaction setBreadCrumbTitle(int)> ->_NONE_
<org.xmlpull.v1.XmlPullParserFactory: void setFeature(java.lang.String,boolean)> ->_NONE_
<android.view.KeyEvent: int getMetaState()> ->_NONE_
<android.nfc.tech.BasicTagTechnology: android.nfc.Tag getTag()> ->_NONE_
<android.renderscript.RenderScriptGL: int getHeight()> ->_NONE_
<android.content.ContentValues: java.util.ArrayList getStringArrayList(java.lang.String)> ->_NONE_
<org.apache.http.impl.client.DefaultProxyAuthenticationHandler: boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)> ->_NONE_
<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)> ->_NONE_
<android.view.ActionProvider: void setVisibilityListener(android.view.ActionProvider$VisibilityListener)> ->_NONE_
<org.apache.http.conn.params.ConnRouteParamBean: void setLocalAddress(java.net.InetAddress)> ->_NONE_
<android.media.AudioService: int getDeviceForStream(int)> ->_NONE_
<org.apache.http.client.methods.HttpPost: java.lang.String getMethod()> ->_NONE_
<org.apache.http.message.BasicHttpResponse: java.util.Locale getLocale()> ->_NONE_
<libcore.net.http.HttpEngine: int getResponseCode()> ->_NONE_
<android.app.ActivityManagerProxy: void setImmersive(android.os.IBinder,boolean)> ->_NONE_
<android.widget.ShareActionProvider: void setShareIntent(android.content.Intent)> ->_NONE_
<android.widget.ArrayAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)> ->_NONE_
<java.text.DateFormatSymbols: void setLocalPatternChars(java.lang.String)> ->_NONE_
<android.hardware.SensorManager: int getSensors()> ->_NONE_
<android.webkit.WebViewClassic: void setOverScrollMode(int)> ->_NONE_
<org.apache.xpath.Arg: void setExpression(java.lang.String)> ->_NONE_
<java.util.concurrent.atomic.AtomicLongFieldUpdater: java.util.concurrent.atomic.AtomicLongFieldUpdater newUpdater(java.lang.Class,java.lang.String)> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CRLImpl: javax.security.auth.x500.X500Principal getIssuerX500Principal()> ->_NONE_
<android.view.ViewConfiguration: int getScrollBarSize()> ->_NONE_
<android.os.LatencyTimer: long[] getArray(java.lang.String)> ->_NONE_
<android.content.pm.Signature: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<java.security.AlgorithmParameters: java.security.spec.AlgorithmParameterSpec getParameterSpec(java.lang.Class)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.WhiteSpaceInfo getPreserveSpace(int)> ->_NONE_
<junit.framework.TestCase: void setName(java.lang.String)> ->_NONE_
<android.widget.DatePicker: boolean getSpinnersShown()> ->_NONE_
<java.util.Date: void setMonth(int)> ->_NONE_
<android.graphics.drawable.DrawableContainer: boolean setVisible(boolean,boolean)> ->_NONE_
<gov.nist.javax.sip.message.SIPDuplicateHeaderException: gov.nist.javax.sip.message.SIPMessage getSIPMessage()> ->_NONE_
<android.net.NetworkInfo: int getType()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.lang.String getPeerHostName()> ->_NONE_
<android.text.method.TimeKeyListener: android.text.method.TimeKeyListener getInstance()> ->_NONE_
<android.widget.AutoCompleteTextView: void setDropDownWidth(int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.Finished: void send(org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream)> ->_NONE_
<java.security.cert.CertPathValidator: java.security.Provider getProvider()> ->_NONE_
<java.text.Bidi: int getRunStart(int)> ->_NONE_
<org.apache.xalan.templates.StylesheetRoot: boolean getIncremental()> ->_NONE_
<org.jivesoftware.smack.GroupChat: int getParticipantCount()> ->_NONE_
<android.test.InstrumentationTestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)> ->_NONE_
<android.database.sqlite.SQLiteConnection: int executeForChangedRowCount(java.lang.String,java.lang.Object[],android.os.CancellationSignal)> ->_NONE_
<java.security.SecureRandom: java.security.Provider getProvider()> ->_NONE_
<org.apache.xml.serializer.ToStream: java.io.Writer getWriter()> ->_NONE_
<android.net.sip.SipManager: android.net.sip.SipProfile[] getListOfProfiles()> ->_NONE_
<org.apache.xalan.Version: java.lang.String getVersion()> ->_NONE_
<org.apache.xml.utils.SAXSourceLocator: java.lang.String getSystemId()> ->_NONE_
<org.apache.http.conn.params.ConnRouteParams: org.apache.http.conn.routing.HttpRoute getForcedRoute(org.apache.http.params.HttpParams)> ->_NONE_
<android.webkit.WebSettings: boolean getBlockNetworkImage()> ->_NONE_
<android.text.format.DateUtils: java.lang.String getAMPMString(int)> ->_NONE_
<org.apache.james.mime4j.field.address.parser.SimpleCharStream: int getLine()> ->_NONE_
<android.os.UserHandle: int getUid(int,int)> ->_NONE_
<android.content.SyncStorageEngine: java.util.List getPeriodicSyncs(android.accounts.Account,int,java.lang.String)> ->_NONE_
<android.net.LocalSocketImpl: void setOption(int,java.lang.Object)> ->_NONE_
<javax.xml.parsers.DocumentBuilderFactory: void setExpandEntityReferences(boolean)> ->_NONE_
<org.apache.harmony.security.x509.X509PublicKey: byte[] getEncoded()> ->_NONE_
<android.nfc.Tag: android.os.Bundle getTechExtras(int)> ->_NONE_
<android.app.Dialog: void setDismissMessage(android.os.Message)> ->_NONE_
<org.apache.xpath.axes.LocPathIterator: org.apache.xpath.XPathContext getXPathContext()> ->_NONE_
<org.apache.xalan.templates.ElemMessage: boolean getTerminate()> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: void setLastAckReceived(gov.nist.javax.sip.message.SIPRequest)> ->_NONE_
<org.apache.xml.serializer.utils.SystemIDResolver: java.lang.String getAbsolutePathFromRelativePath(java.lang.String)> ->_NONE_
<jp.co.omronsoft.openwnn.TextCandidates1LineViewManager: void setAutoHide(boolean)> ->_NONE_
<java.util.concurrent.atomic.AtomicLongArray: void set(int,long)> ->_NONE_
<gov.nist.javax.sip.header.extensions.MinSE: void setExpires(int)> ->_NONE_
<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)> ->_NONE_
<android.view.View: void setLayoutInsets(android.graphics.Insets)> ->_NONE_
<android.telephony.SmsCbEtwsInfo: int getWarningType()> ->_NONE_
<android.graphics.drawable.InsetDrawable: void setColorFilter(android.graphics.ColorFilter)> ->_NONE_
<android.webkit.Plugin: void setFileName(java.lang.String)> ->_NONE_
<org.apache.xml.serializer.utils.AttList: int getLength()> ->_NONE_
<android.test.mock.MockCursor: int getInt(int)> ->_NONE_
<java.lang.Character: int getType(int)> ->_NONE_
<android.media.videoeditor.VideoEditorImpl: java.util.List getAllTransitions()> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertImpl: boolean[] getKeyUsage()> ->_NONE_
<libcore.net.http.ResponseHeaders: java.lang.String getContentEncoding()> ->_NONE_
<android.test.AndroidTestRunner: void setTest(junit.framework.Test)> ->_NONE_
<android.app.admin.DevicePolicyManager: void setPasswordMinimumNonLetter(android.content.ComponentName,int)> ->_NONE_
<android.text.SpannableStringInternal: int getSpanFlags(java.lang.Object)> ->_NONE_
<android.view.TextureView: void setOpaque(boolean)> ->_NONE_
<org.apache.xalan.templates.ElemVariable: org.apache.xpath.XPath getSelect()> ->_NONE_
<android.webkit.FindActionModeCallback: void setWebView(android.webkit.WebViewClassic)> ->_NONE_
<android.view.GLES20RenderLayer: android.view.HardwareCanvas getCanvas()> ->_NONE_
<android.speech.srec.WaveHeader: int readInt(java.io.InputStream)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: java.lang.String[] getEnabledCipherSuites()> ->_NONE_
<android.content.pm.FeatureInfo: java.lang.String getGlEsVersion()> ->_NONE_
<android.database.sqlite.SQLiteDatabase: void setLockingEnabled(boolean)> ->_NONE_
<org.apache.xml.serializer.utils.URI: void setQueryString(java.lang.String)> ->_NONE_
<org.ccil.cowan.tagsoup.XMLWriter: void ignorableWhitespace(char[],int,int)> ->_NONE_
<android.widget.TextView: int getTotalPaddingBottom()> ->_NONE_
<android.location.Address: void setPostalCode(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.Event: void setEventType(java.lang.String)> ->_NONE_
<android.content.pm.ActivityInfo: int getRealConfigChanged()> ->_NONE_
<android.app.BackStackRecord: android.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence)> ->_NONE_
<gov.nist.javax.sip.header.AlertInfo: java.lang.String encodeBody()> ->_NONE_
<android.accounts.ChooseAccountActivity: void getAuthDescriptions()> ->_NONE_
<org.apache.xml.utils.DOMBuilder: void setDocumentLocator(org.xml.sax.Locator)> ->_NONE_
<org.apache.xml.serializer.ToStream: int accumDefaultEntity(java.io.Writer,char,int,char[],int,boolean,boolean)> ->_NONE_
<android.sax.Element: void setEndElementListener(android.sax.EndElementListener)> ->_NONE_
<java.net.InetAddress: java.lang.String getHostName()> ->_NONE_
<org.apache.xpath.axes.LocPathIterator: int getLastPos(org.apache.xpath.XPathContext)> ->_NONE_
<android.widget.ScrollBarDrawable: void setAlpha(int)> ->_NONE_
<java.lang.reflect.Field: boolean getBoolean(java.lang.Object)> ->_NONE_
<android.webkit.WebSettings: int getMinimumLogicalFontSize()> ->_NONE_
<android.emoji.EmojiFactory: int getMaximumAndroidPua()> ->_NONE_
<java.net.URLConnection: java.lang.String getHeaderField(int)> ->_NONE_
<java.util.concurrent.ThreadPoolExecutor: void setThreadFactory(java.util.concurrent.ThreadFactory)> ->_NONE_
<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object get(java.lang.Object)> ->_NONE_
<gov.nist.core.LogWriter: void logInfo(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.KeyDeclaration: org.apache.xpath.XPath getUse()> ->_NONE_
<android.webkit.WebStorageClassic: android.webkit.WebStorageClassic getInstance()> ->_NONE_
<android.widget.RatingBar: void setNumStars(int)> ->_NONE_
<org.apache.xpath.NodeSet: int getCurrentPos()> ->_NONE_
<gov.nist.javax.sip.stack.TCPMessageChannel: java.lang.String getPeerAddress()> ->_NONE_
<android.widget.TextView: android.text.method.KeyListener getKeyListener()> ->_NONE_
<org.apache.xpath.operations.VariableSafeAbsRef: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)> ->_NONE_
<java.net.URLStreamHandler: void setURL(java.net.URL,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: java.lang.String dumpNode(int)> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList getRouteList()> ->_NONE_
<jp.co.omronsoft.openwnn.SymbolList: jp.co.omronsoft.openwnn.WnnWord[] getUserDictionaryWords()> ->_NONE_
<android.view.VelocityTracker: void setNextPoolable(android.view.VelocityTracker)> ->_NONE_
<android.text.style.QuoteSpan: int getSpanTypeId()> ->_NONE_
<android.webkit.WebSettingsClassic: boolean getBlockNetworkLoads()> ->_NONE_
<android.animation.AnimatorSet: long getDuration()> ->_NONE_
<android.view.ViewConfiguration: int getScrollDefaultDelay()> ->_NONE_
<android.webkit.WebSettingsClassic: boolean getUseFixedViewport()> ->_NONE_
<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream,java.lang.String)> ->_NONE_
<org.apache.xalan.templates.DecimalFormatProperties: void setZeroDigit(char)> ->_NONE_
<dalvik.system.CloseGuard: dalvik.system.CloseGuard get()> ->_NONE_
<gov.nist.javax.sip.stack.TLSMessageChannel: int getViaPort()> ->_NONE_
<android.media.AudioRecord: int getPositionNotificationPeriod()> ->_NONE_
<android.view.ViewConfiguration: int getHoverTapSlop()> ->_NONE_
<android.telephony.SmsMessage: long getTimestampMillis()> ->_NONE_
<java.io.RandomAccessFile: java.io.FileDescriptor getFD()> ->_NONE_
<java.util.BitSet: void set(int,boolean)> ->_NONE_
<android.telephony.SmsMessage: android.telephony.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,short,byte[],boolean)> ->_NONE_
<libcore.icu.NativeBreakIterator: void setText(java.lang.String,java.text.CharacterIterator)> ->_NONE_
<android.hardware.display.DisplayManagerGlobal: void handleDisplayEvent(int,int)> ->_NONE_
<android.widget.GridView: void setRemoteViewsAdapter(android.content.Intent)> ->_NONE_
<android.media.RemoteControlClient: void setPlaybackState(int)> ->_NONE_
<android.widget.AbsListView: int getLeftPaddingOffset()> ->_NONE_
<org.apache.xalan.processor.XSLTElementDef: java.lang.Class getClassObject()> ->_NONE_
<android.webkit.WebViewClassic: void setVerticalScrollbarOverlay(boolean)> ->_NONE_
<android.webkit.WebViewDatabaseClassic: void setUsernamePassword(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.preference.DialogPreference: java.lang.CharSequence getDialogTitle()> ->_NONE_
<android.widget.Toast: android.view.View getView()> ->_NONE_
<android.opengl.GLLogWrapper: int getFogParamCount(int)> ->_NONE_
<android.widget.Toast: int getGravity()> ->_NONE_
<android.widget.LinearLayout: void setBaselineAlignedChildIndex(int)> ->_NONE_
<android.webkit.WebView: void setHorizontalScrollbarOverlay(boolean)> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getOpaque()> ->_NONE_
<java.net.URLConnection: java.security.Permission getPermission()> ->_NONE_
<android.media.AudioTrack: float getMinVolume()> ->_NONE_
<android.graphics.drawable.BitmapDrawable: android.graphics.Shader$TileMode getTileModeX()> ->_NONE_
<android.graphics.drawable.BitmapDrawable: android.graphics.Shader$TileMode getTileModeY()> ->_NONE_
<android.content.pm.ContainerEncryptionParams: byte[] getMacTag()> ->_NONE_
<android.util.XmlPullAttributes: int getAttributeUnsignedIntValue(java.lang.String,java.lang.String,int)> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: void setEmailWork(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: int getStringValueChunkCount(int)> ->_NONE_
<gov.nist.javax.sip.header.MaxForwards: java.lang.String encodeBody()> ->_NONE_
<libcore.icu.NativeDecimalFormat: void setPositivePrefix(java.lang.String)> ->_NONE_
<android.database.MergeCursor: long getLong(int)> ->_NONE_
<org.apache.xalan.processor.ProcessorImport: int getStylesheetType()> ->_NONE_
<org.apache.xml.serializer.dom3.NamespaceSupport: java.lang.String getURI(java.lang.String)> ->_NONE_
<android.widget.TextView: void setShadowLayer(float,float,float,int)> ->_NONE_
<android.telephony.cdma.CdmaCellLocation: int getBaseStationLatitude()> ->_NONE_
<android.telephony.TelephonyManager: int getVoiceMessageCount()> ->_NONE_
<org.apache.xalan.transformer.MsgMgr: void warn(javax.xml.transform.SourceLocator,org.w3c.dom.Node,org.w3c.dom.Node,java.lang.String,java.lang.Object[])> ->_NONE_
<java.io.EmulatedFields: double get(java.lang.String,double)> ->_NONE_
<android.util.XmlPullAttributes: float getAttributeFloatValue(int,float)> ->_NONE_
<javax.obex.ClientOperation: int getMaxPacketSize()> ->_NONE_
<org.xml.sax.SAXParseException: java.lang.String getSystemId()> ->_NONE_
<android.bluetooth.BluetoothTetheringDataTracker: boolean readLinkProperty(java.lang.String)> ->_NONE_
<java.security.KeyStore: java.security.cert.Certificate[] getCertificateChain(java.lang.String)> ->_NONE_
<android.preference.TwoStatePreference: java.lang.CharSequence getSummaryOn()> ->_NONE_
<org.apache.harmony.security.x509.tsp.PKIStatus: org.apache.harmony.security.x509.tsp.PKIStatus getInstance(int)> ->_NONE_
<android.renderscript.ScriptIntrinsicLUT: void setAlpha(int,int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: boolean getWantClientAuth()> ->_NONE_
<android.content.pm.FeatureInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.widget.HorizontalScrollView: void setSmoothScrollingEnabled(boolean)> ->_NONE_
<android.filterpacks.imageproc.AlphaBlendFilter: android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)> ->_NONE_
<android.view.GLES20Canvas: int setupColorFilter(android.graphics.Paint)> ->_NONE_
<java.text.RuleBasedCollator: java.lang.String getRules()> ->_NONE_
<android.inputmethodservice.KeyboardView: void setPopupOffset(int,int)> ->_NONE_
<android.os.Environment: java.io.File getExternalStorageAppObbDirectory(java.lang.String)> ->_NONE_
<org.apache.http.params.HttpConnectionParams: int getSocketBufferSize(org.apache.http.params.HttpParams)> ->_NONE_
<android.widget.AbsSpinner: android.widget.Adapter getAdapter()> ->_NONE_
<net.oauth.signature.HMAC_SHA1: void setTokenSecret(java.lang.String)> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: byte[] getAvatar()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityManagerCompatIcs: java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager)> ->_NONE_
<android.os.storage.StorageManager: boolean isUsbMassStorageConnected()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.ServerKeyExchange: int getType()> ->_NONE_
<android.app.ListActivity: android.widget.ListView getListView()> ->_NONE_
<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)> ->_NONE_
<libcore.io.ErrnoException: java.lang.String getMessage()> ->_NONE_
<org.apache.harmony.xml.dom.AttrImpl: java.lang.String getNamespaceURI()> ->_NONE_
<org.ccil.cowan.tagsoup.ElementType: void setFlags(int)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setToIndex(java.lang.Object,int)> ->_NONE_
<javax.xml.parsers.DocumentBuilderFactory: javax.xml.validation.Schema getSchema()> ->_NONE_
<org.apache.xml.utils.Context2: java.util.Enumeration getPrefixes()> ->_NONE_
<org.apache.xalan.templates.ElemCallTemplate: org.apache.xml.utils.QName getName()> ->_NONE_
<android.graphics.drawable.BitmapDrawable: android.graphics.Paint getPaint()> ->_NONE_
<android.net.wifi.WifiStateMachine: void sendRssiChangeBroadcast(int)> ->_NONE_
<android.view.inputmethod.ExtractedText: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.support.v4.content.CursorLoader: void setSelection(java.lang.String)> ->_NONE_
<android.text.method.BaseMovementMethod: int getTopLine(android.widget.TextView)> ->_NONE_
<android.view.KeyEvent: int getModifierMetaStateMask()> ->_NONE_
<gov.nist.javax.sip.header.ims.SecurityAgree: void setParameter(java.lang.String,java.lang.String)> ->_NONE_
<android.preference.GenericInflater: void setDefaultPackage(java.lang.String)> ->_NONE_
<java.util.concurrent.ForkJoinWorkerThread: int getEstimatedSurplusTaskCount()> ->_NONE_
<org.xml.sax.helpers.XMLFilterImpl: boolean getFeature(java.lang.String)> ->_NONE_
<java.security.cert.PKIXParameters: java.util.List getCertStores()> ->_NONE_
<java.nio.MappedByteBufferAdapter: long getLong(int)> ->_NONE_
<android.media.AudioTrack: int getStreamType()> ->_NONE_
<java.net.Socks4Message: void setCommandOrResult(int)> ->_NONE_
<gov.nist.core.Host: java.lang.StringBuffer encode(java.lang.StringBuffer)> ->_NONE_
<javax.net.ssl.HandshakeCompletedEvent: java.security.Principal getPeerPrincipal()> ->_NONE_
<java.security.cert.X509CRLEntry: javax.security.auth.x500.X500Principal getCertificateIssuer()> ->_NONE_
<android.content.ContentService: android.content.SyncAdapterType[] getSyncAdapterTypes()> ->_NONE_
<android.content.pm.ComponentInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)> ->_NONE_
<gov.nist.javax.sip.address.Authority: void setUser(java.lang.String)> ->_NONE_
<org.apache.http.message.BasicHeader: java.lang.String getName()> ->_NONE_
<org.jivesoftware.smackx.packet.DiscoverInfo: java.util.Iterator getIdentities()> ->_NONE_
<gov.nist.javax.sip.header.Via: int getRPort()> ->_NONE_
<org.ccil.cowan.tagsoup.jaxp.SAXParserImpl: boolean getFeature(java.lang.String)> ->_NONE_
<android.graphics.drawable.ScaleDrawable: int getIntrinsicHeight()> ->_NONE_
<org.apache.xalan.xslt.SecuritySupport: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)> ->_NONE_
<org.apache.commons.io.IOUtils: void write(java.lang.StringBuffer,java.io.OutputStream,java.lang.String)> ->_NONE_
<android.media.RingtoneManager: int getDefaultType(android.net.Uri)> ->_NONE_
<android.opengl.GLLogWrapper: java.lang.String getHex(int)> ->_NONE_
<android.app.ActivityManagerProxy: int startActivities(android.app.IApplicationThread,android.content.Intent[],java.lang.String[],android.os.IBinder,android.os.Bundle,int)> ->_NONE_
<android.view.View: float getRightFadingEdgeStrength()> ->_NONE_
<android.preference.PreferenceManager: void setNoCommit(boolean)> ->_NONE_
<android.filterfw.core.FilterFunction: android.filterfw.core.FilterContext getContext()> ->_NONE_
<android.mtp.MtpObjectInfo: int getAssociationDesc()> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: void unexecuteNSDecls(org.apache.xalan.transformer.TransformerImpl)> ->_NONE_
<org.apache.http.impl.io.ContentLengthInputStream: int read()> ->_NONE_
<android.content.ContextWrapper: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)> ->_NONE_
<android.view.MotionEvent: float getTouchMinor()> ->_NONE_
<android.util.Singleton: java.lang.Object get()> ->_NONE_
<org.apache.xpath.functions.SecuritySupport12: java.lang.ClassLoader getContextClassLoader()> ->_NONE_
<org.apache.harmony.luni.lang.reflect.ImplForType: java.lang.Class getRawType()> ->_NONE_
<android.hardware.usb.UsbDevice: int getDeviceId(java.lang.String)> ->_NONE_
<android.graphics.drawable.Drawable: void setFilterBitmap(boolean)> ->_NONE_
<android.os.BinderProxy: void dump(java.io.FileDescriptor,java.lang.String[])> ->_NONE_
<android.graphics.Paint: android.graphics.Rasterizer getRasterizer()> ->_NONE_
<java.net.Authenticator: java.net.PasswordAuthentication requestPasswordAuthentication(java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.view.inputmethod.InputMethodManager: void doDump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> ->_NONE_
<org.apache.xpath.Arg: void setQName(org.apache.xml.utils.QName)> ->_NONE_
<android.widget.CalendarView: int getWeekSeparatorLineColor()> ->_NONE_
<android.os.PowerManager: void setBacklightBrightness(int)> ->_NONE_
<android.app.ApplicationPackageManager: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int)> ->_NONE_
<android.webkit.CallbackProxy: boolean onJsBeforeUnload(java.lang.String,java.lang.String)> ->_NONE_
<android.accounts.AccountManager: android.accounts.Account[] getAccounts()> ->_NONE_
<android.net.http.AndroidHttpClient: long getMinGzipSize(android.content.ContentResolver)> ->_NONE_
<gov.nist.javax.sip.header.RequestLine: java.lang.String getSipVersion()> ->_NONE_
<android.preference.DialogPreference: void setDialogIcon(int)> ->_NONE_
<gov.nist.javax.sip.header.From: java.lang.String getTag()> ->_NONE_
<org.apache.xpath.operations.Or: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<org.apache.james.mime4j.field.address.parser.AddressListParserTokenManager: org.apache.james.mime4j.field.address.parser.Token getNextToken()> ->_NONE_
<android.widget.TextView: void setLineSpacing(float,float)> ->_NONE_
<libcore.net.http.HttpURLConnectionImpl: int getDefaultPort()> ->_NONE_
<android.app.ActivityManagerProxy: java.util.List getRunningAppProcesses()> ->_NONE_
<gov.nist.javax.sip.header.Challenge: void setParameter(gov.nist.core.NameValue)> ->_NONE_
<android.webkit.HTML5VideoView: boolean getPlayerBuffering()> ->_NONE_
<dalvik.system.profiler.BinaryHprofWriter: void writeHeader(long)> ->_NONE_
<android.location.LocationManager: java.util.List getAllProviders()> ->_NONE_
<android.view.Surface: void setAlpha(float)> ->_NONE_
<java.lang.Package: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)> ->_NONE_
<android.webkit.WebViewCore: void setMockGeolocationError(int,java.lang.String)> ->_NONE_
<android.speech.srec.WaveHeader: short getFormat()> ->_NONE_
<android.text.StaticLayout: int getEllipsisCount(int)> ->_NONE_
<org.jivesoftware.smack.sasl.SASLMechanism: void authenticate(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.net.wifi.p2p.WifiP2pManager: void cancelConnect(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ActionListener)> ->_NONE_
<android.test.AndroidTestCase: android.content.Context getTestContext()> ->_NONE_
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> ->_NONE_
<android.net.sip.SipProfile: boolean getSendKeepAlive()> ->_NONE_
<gov.nist.javax.sip.stack.TCPMessageProcessor: int getMaximumMessageSize()> ->_NONE_
<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.ElemTemplate getDefaultRootRule()> ->_NONE_
<android.widget.ToggleButton: void setTextOff(java.lang.CharSequence)> ->_NONE_
<android.renderscript.RenderScript: void setupDiskCache(java.io.File)> ->_NONE_
<android.view.Window: void setType(int)> ->_NONE_
<gov.nist.core.Host: void setAddress(java.lang.String)> ->_NONE_
<android.net.wifi.WifiManager: android.os.Messenger getWifiStateMachineMessenger()> ->_NONE_
<android.view.textservice.SpellCheckerInfo: android.view.textservice.SpellCheckerSubtype getSubtypeAt(int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLMessageDigestJDK: void engineUpdate(byte[],int,int)> ->_NONE_
<android.os.Parcel: void writeCharArray(char[])> ->_NONE_
<android.filterfw.core.NativeFrame: void setFloats(float[])> ->_NONE_
<gov.nist.core.GenericObjectList: java.lang.String debugDump(int)> ->_NONE_
<android.media.MediaSyncEvent: int getAudioSessionId()> ->_NONE_
<android.preference.SeekBarDialogPreference: android.widget.SeekBar getSeekBar(android.view.View)> ->_NONE_
<android.view.InputFilter: void sendInputEvent(android.view.InputEvent,int)> ->_NONE_
<org.jivesoftware.smack.packet.Presence: int getPriority()> ->_NONE_
<android.widget.ExpandableListConnector: java.util.ArrayList getExpandedGroupMetadataList()> ->_NONE_
<android.widget.TextView: int getInputType()> ->_NONE_
<org.apache.harmony.security.x509.AlgorithmIdentifier: java.lang.String getAlgorithm()> ->_NONE_
<javax.crypto.spec.RC2ParameterSpec: int getEffectiveKeyBits()> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: void setSourceLocator(javax.xml.transform.SourceLocator)> ->_NONE_
<android.content.res.Configuration: void setLayoutDirection(java.util.Locale)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.header.Via getViaHeader()> ->_NONE_
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()> ->_NONE_
<org.apache.xml.serializer.dom3.LSSerializerImpl: java.lang.String getXMLEncoding(org.w3c.dom.Node)> ->_NONE_
<android.webkit.WebSettingsClassic: boolean getJavaScriptEnabled()> ->_NONE_
<android.app.ActivityManagerProxy: void publishContentProviders(android.app.IApplicationThread,java.util.List)> ->_NONE_
<android.telephony.SignalStrength: void setGsm(boolean)> ->_NONE_
<android.app.ActivityManagerProxy: void moveTaskToFront(int,int,android.os.Bundle)> ->_NONE_
<android.test.IsolatedContext: android.content.ContentResolver getContentResolver()> ->_NONE_
<android.net.wifi.WifiConfiguration: java.lang.String getPrintableSsid()> ->_NONE_
<android.view.MotionEvent: float getRawX()> ->_NONE_
<org.apache.xalan.xslt.SecuritySupport12: java.lang.ClassLoader getContextClassLoader()> ->_NONE_
<java.util.SimpleTimeZone: void setEndRule(int,int,int,int,boolean)> ->_NONE_
<android.graphics.drawable.GradientDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> ->_NONE_
<android.view.MotionEvent: float getRawY()> ->_NONE_
<java.nio.CharArrayBuffer: char get()> ->_NONE_
<gov.nist.javax.sip.header.Via: void setSentProtocol(gov.nist.javax.sip.header.Protocol)> ->_NONE_
<android.gesture.GestureStore: int getOrientationStyle()> ->_NONE_
<android.view.InputEvent: int getSequenceNumber()> ->_NONE_
<android.database.CursorWindow: int getInt(int,int)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: android.os.Parcelable getParcelableData()> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: void setIsTransformDone(boolean)> ->_NONE_
<android.view.View: int getNextFocusRightId()> ->_NONE_
<android.net.Credentials: int getUid()> ->_NONE_
<android.widget.ListPopupWindow: void setSelection(int)> ->_NONE_
<android.widget.ZoomControls: void setOnZoomOutClickListener(android.view.View$OnClickListener)> ->_NONE_
<android.content.ContentQueryMap: java.util.Map getRows()> ->_NONE_
<android.net.ConnectivityManager: java.lang.String[] getTetherableWifiRegexs()> ->_NONE_
<android.widget.ListPopupWindow: void setForceIgnoreOutsideTouch(boolean)> ->_NONE_
<android.app.LoadedApk: java.lang.String[] getLibrariesFor(java.lang.String)> ->_NONE_
<android.net.wifi.p2p.WifiP2pManager: void clearLocalServices(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ActionListener)> ->_NONE_
<org.apache.commons.codec.net.QCodec: byte[] doDecoding(byte[])> ->_NONE_
<android.view.ViewRootImpl: android.view.View getView()> ->_NONE_
<gov.nist.core.HostPort: java.lang.String encode()> ->_NONE_
<android.test.InstrumentationTestRunner: java.util.List getBuilderRequirements()> ->_NONE_
<javax.xml.datatype.FactoryFinder: java.lang.Object find(java.lang.String,java.lang.String)> ->_NONE_
<android.webkit.DateSorter: int getIndex(long)> ->_NONE_
<android.util.SparseBooleanArray: boolean get(int,boolean)> ->_NONE_
<android.net.nsd.DnsSdTxtRecord: java.lang.String get(java.lang.String)> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: java.lang.String getCipherSuite()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getDocumentRoot(int)> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: java.lang.String getEmailHome()> ->_NONE_
<org.ccil.cowan.tagsoup.jaxp.SAX1ParserAdapter: void parse(org.xml.sax.InputSource)> ->_NONE_
<libcore.net.url.FileHandler: java.net.URLConnection openConnection(java.net.URL,java.net.Proxy)> ->_NONE_
<android.media.videoeditor.MediaItem: void setEndTransition(android.media.videoeditor.Transition)> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: void setSelected(boolean)> ->_NONE_
<org.apache.http.params.DefaultedHttpParams: org.apache.http.params.HttpParams getDefaults()> ->_NONE_
<android.view.GLES20TextureLayer: android.graphics.SurfaceTexture getSurfaceTexture()> ->_NONE_
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: java.util.Collection getWaitingThreads(java.util.concurrent.locks.AbstractQueuedLongSynchronizer$ConditionObject)> ->_NONE_
<android.webkit.WebSettingsClassic: boolean getBuiltInZoomControls()> ->_NONE_
<android.database.sqlite.SQLiteGlobal: int getDefaultPageSize()> ->_NONE_
<org.apache.xalan.templates.FuncDocument: void warn(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])> ->_NONE_
<android.media.videoeditor.Overlay: void setUserAttribute(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xpath.compiler.Keywords: java.lang.Object getNodeType(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.ElemValueOf: void execute(org.apache.xalan.transformer.TransformerImpl)> ->_NONE_
<javax.xml.transform.sax.SAXResult: org.xml.sax.ContentHandler getHandler()> ->_NONE_
<java.lang.reflect.Field: void setDouble(java.lang.Object,double)> ->_NONE_
<org.apache.http.impl.conn.LoggingSessionOutputBuffer: org.apache.http.io.HttpTransportMetrics getMetrics()> ->_NONE_
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.shapes.Shape getShape()> ->_NONE_
<android.preference.PreferenceActivity: void setPreferenceScreen(android.preference.PreferenceScreen)> ->_NONE_
<org.apache.xalan.templates.ElemTemplate: org.apache.xml.utils.QName getName()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.io.OutputStream getOutputStream()> ->_NONE_
<android.graphics.drawable.BitmapDrawable: void setBitmap(android.graphics.Bitmap)> ->_NONE_
<java.security.cert.X509CertSelector: void setSubject(javax.security.auth.x500.X500Principal)> ->_NONE_
<android.filterpacks.imageproc.ResizeFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<android.webkit.WebViewCore: void <init>(android.content.Context,android.webkit.WebViewClassic,android.webkit.CallbackProxy,java.util.Map)> ->_NONE_
<android.webkit.ZoomManager: float getMinZoomScale()> ->_NONE_
<android.location.Address: java.lang.String getUrl()> ->_NONE_
<android.webkit.WebViewClientClassicExt: void onReceivedClientCertRequest(android.webkit.WebView,android.webkit.ClientCertRequestHandler,java.lang.String)> ->_NONE_
<javax.xml.validation.SchemaFactoryFinder: javax.xml.validation.SchemaFactory createInstance(java.lang.String)> ->_NONE_
<junit.runner.Version: void main(java.lang.String[])> ->_NONE_
<java.net.DatagramPacket: void setData(byte[],int,int)> ->_NONE_
<android.graphics.drawable.AnimationDrawable: void setOneShot(boolean)> ->_NONE_
<android.media.RingtoneManager: boolean getStopPreviousRingtone()> ->_NONE_
<android.widget.RemoteViews: void setBitmap(int,java.lang.String,android.graphics.Bitmap)> ->_NONE_
<org.xmlpull.v1.sax2.Driver: java.lang.String getType(java.lang.String)> ->_NONE_
<android.media.AudioService: void unloadSoundEffects()> ->_NONE_
<android.net.wifi.WifiInfo: boolean getMeteredHint()> ->_NONE_
<android.webkit.BrowserFrame: void loadUrl(java.lang.String,java.util.Map)> ->_NONE_
<org.apache.xalan.templates.ElemLiteralResult: void setIsLiteralResultAsStylesheet(boolean)> ->_NONE_
<org.jivesoftware.smack.sasl.SASLPlainMechanism: java.lang.String getAuthenticationText(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.RAck: int getRSeqNumber()> ->_NONE_
<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase getDatabase()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: void setReceiveBufferSize(int)> ->_NONE_
<android.media.effect.effects.BackDropperEffect: void setParameter(java.lang.String,java.lang.Object)> ->_NONE_
<android.webkit.WebSettingsClassic: boolean getSaveFormData()> ->_NONE_
<android.app.Activity: void setContentView(int)> ->_NONE_
<org.apache.xml.serializer.ToTextSAXHandler: void setWriter(java.io.Writer)> ->_NONE_
<org.apache.xml.serializer.ToTextSAXHandler: java.util.Properties getOutputFormat()> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: void setAddressFieldHome(java.lang.String,java.lang.String)> ->_NONE_
<org.jivesoftware.smack.SASLAuthentication: java.util.List getRegisterSASLMechanisms()> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: void setBaseURLOfSource(java.lang.String)> ->_NONE_
<android.view.View: int getVisibility()> ->_NONE_
<android.net.ConnectivityManager: boolean getBackgroundDataSetting()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: boolean getWantClientAuth()> ->_NONE_
<org.jivesoftware.smack.util.StringUtils: java.lang.String encodeBase64(byte[],int,int,boolean)> ->_NONE_
<android.webkit.ZoomManager: void setDefaultZoomScale(float)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int getMovementGranularities()> ->_NONE_
<android.util.SparseArray: java.lang.Object get(int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: javax.security.cert.X509Certificate[] getPeerCertificateChain()> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: boolean setEscaping(boolean)> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Boolean: org.apache.harmony.security.asn1.ASN1Boolean getInstance()> ->_NONE_
<android.webkit.WebSettingsClassic: java.lang.String getStandardFontFamily()> ->_NONE_
<org.apache.xml.dtm.ref.ExpandedNameTable: int getExpandedTypeID(java.lang.String,java.lang.String,int,boolean)> ->_NONE_
<android.media.videoeditor.MediaArtistNativeHelper: void getPixelsList(java.lang.String,int,int,long,long,int,int[],android.media.videoeditor.MediaItem$GetThumbnailListCallback,int)> ->_NONE_
<android.widget.RatingBar: float getProgressPerStar()> ->_NONE_
<android.renderscript.BaseObj: java.lang.String getName()> ->_NONE_
<java.security.spec.RSAPublicKeySpec: java.math.BigInteger getPublicExponent()> ->_NONE_
<android.os.PerformanceCollector: void beginSnapshot(java.lang.String)> ->_NONE_
<android.widget.ZoomButtonsController: void setZoomOutEnabled(boolean)> ->_NONE_
<android.view.animation.Transformation: float getAlpha()> ->_NONE_
<java.security.cert.PKIXCertPathValidatorResult: java.security.PublicKey getPublicKey()> ->_NONE_
<org.apache.xml.dtm.DTMException: void printStackTrace(java.io.PrintWriter)> ->_NONE_
<java.sql.Date: int getMinutes()> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Integer: org.apache.harmony.security.asn1.ASN1Integer getInstance()> ->_NONE_
<android.telephony.SignalStrength: int getLteCqi()> ->_NONE_
<libcore.net.url.FtpURLConnection: void setDoOutput(boolean)> ->_NONE_
<org.apache.http.impl.cookie.BasicClientCookie2: java.lang.String getCommentURL()> ->_NONE_
<android.support.v4.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: java.lang.String getStringValue()> ->_NONE_
<android.webkit.WebViewClassic: void reload()> ->_NONE_
<java.util.Calendar: java.util.Date getTime()> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: javax.sip.message.Request createAck(long)> ->_NONE_
<android.location.LocationProvider: int getPowerRequirement()> ->_NONE_
<android.media.audiofx.Visualizer: boolean getEnabled()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setScrollable(java.lang.Object,boolean)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: java.util.ListIterator getUnrecognizedHeaders()> ->_NONE_
<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)> ->_NONE_
<gov.nist.javax.sip.header.TimeStamp: int getTimeDelay()> ->_NONE_
<android.graphics.drawable.BitmapDrawable: void setTileModeXY(android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)> ->_NONE_
<org.kxml2.io.KXmlParser: java.lang.String getAttributeNamespace(int)> ->_NONE_
<android.content.ClipData: android.content.ClipDescription getDescription()> ->_NONE_
<android.text.Annotation: java.lang.String getKey()> ->_NONE_
<android.view.animation.LinearInterpolator: float getInterpolation(float)> ->_NONE_
<org.apache.http.protocol.HttpRequestExecutor: org.apache.http.HttpResponse execute(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext)> ->_NONE_
<android.inputmethodservice.IInputMethodWrapper: void setSessionEnabled(com.android.internal.view.IInputMethodSession,boolean)> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: java.security.Permission getPermission()> ->_NONE_
<java.text.CollationElementIterator: int getOffset()> ->_NONE_
<org.apache.http.impl.conn.AbstractClientConnAdapter: javax.net.ssl.SSLSession getSSLSession()> ->_NONE_
<android.webkit.ZoomManager: float getZoomOverviewScale()> ->_NONE_
<org.apache.harmony.lang.annotation.AnnotationMember: org.apache.harmony.lang.'annotation'.AnnotationMember setDefinition(org.apache.harmony.lang.'annotation'.AnnotationMember)> ->_NONE_
<java.util.jar.Attributes: java.lang.Object get(java.lang.Object)> ->_NONE_
<org.jivesoftware.smack.packet.Packet: void setTo(java.lang.String)> ->_NONE_
<net.oauth.client.httpclient4.HttpClient4: net.oauth.http.HttpResponseMessage execute(net.oauth.http.HttpMessage)> ->_NONE_
<android.support.v4.view.MenuItemCompat: boolean setShowAsAction(android.view.MenuItem,int)> ->_NONE_
<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator(java.text.AttributedCharacterIterator$Attribute[])> ->_NONE_
<libcore.icu.NativeConverter: void setCallbackEncode(long,java.nio.charset.CharsetEncoder)> ->_NONE_
<org.apache.james.mime4j.codec.EncoderUtil: java.lang.String encodeEncodedWord(java.lang.String,org.apache.james.mime4j.codec.EncoderUtil$Usage)> ->_NONE_
<org.apache.james.mime4j.field.address.AddressList: org.apache.james.mime4j.field.address.Address get(int)> ->_NONE_
<android.webkit.SslCertLookupTable: android.webkit.SslCertLookupTable getInstance()> ->_NONE_
<android.view.Display: boolean getDisplayInfo(android.view.DisplayInfo)> ->_NONE_
<android.content.ContentResolver: void setIsSyncable(android.accounts.Account,java.lang.String,int)> ->_NONE_
<android.view.LayoutInflater: android.view.LayoutInflater$Factory getFactory()> ->_NONE_
<org.jivesoftware.smackx.packet.DiscoverInfo: java.lang.String getChildElementXML()> ->_NONE_
<android.net.NetworkStats: int[] getUniqueUids()> ->_NONE_
<java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)> ->_NONE_
<android.widget.EditText: void setEllipsize(android.text.TextUtils$TruncateAt)> ->_NONE_
<org.apache.http.impl.client.RequestWrapper: void setURI(java.net.URI)> ->_NONE_
<net.oauth.client.OAuthClient: void getRequestToken(net.oauth.OAuthAccessor,java.lang.String)> ->_NONE_
<android.app.LoaderManagerImpl: android.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks)> ->_NONE_
<org.apache.http.impl.io.ContentLengthOutputStream: void write(byte[])> ->_NONE_
<gov.nist.javax.sip.header.AllowEventsList: java.util.ListIterator getMethods()> ->_NONE_
<android.net.DnsPinger: android.net.LinkProperties getCurrentLinkProperties()> ->_NONE_
<android.net.NetworkInfo: void setDetailedState(android.net.NetworkInfo$DetailedState,java.lang.String,java.lang.String)> ->_NONE_
<java.nio.SocketChannelImpl: boolean isConnected()> ->_NONE_
<android.webkit.ZoomManager: android.view.ScaleGestureDetector getScaleGestureDetector()> ->_NONE_
<android.webkit.CallbackProxy: void onPageFinished(java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: int getPeerPort()> ->_NONE_
<android.widget.TextView: android.text.method.WordIterator getWordIterator()> ->_NONE_
<java.util.LinkedList: java.lang.Object getLast()> ->_NONE_
<org.apache.harmony.security.asn1.BerOutputStream: void getSetOfLength(org.apache.harmony.security.asn1.ASN1SetOf)> ->_NONE_
<android.webkit.WebViewCore: void updateSurface(android.webkit.ViewManager$ChildView,int,int,int,int)> ->_NONE_
<android.widget.CursorAdapter: int getCount()> ->_NONE_
<android.telephony.NeighboringCellInfo: int getPsc()> ->_NONE_
<org.apache.commons.codec.language.Soundex: char getMappingCode(java.lang.String,int)> ->_NONE_
<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)> ->_NONE_
<javax.net.ssl.DefaultSSLSocketFactory: java.lang.String[] getSupportedCipherSuites()> ->_NONE_
<android.app.StatusBarManager: com.android.internal.statusbar.IStatusBarService getService()> ->_NONE_
<android.media.videoeditor.MediaArtistNativeHelper: int getFileType(int)> ->_NONE_
<android.webkit.WebViewClassic: java.lang.String getUrl()> ->_NONE_
<android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence,int)> ->_NONE_
<java.util.IllegalFormatCodePointException: java.lang.String getMessage()> ->_NONE_
<android.media.MediaPlayer: android.os.Parcel getParcelParameter(int)> ->_NONE_
<android.os.MemoryFile: java.io.FileDescriptor getFileDescriptor()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: short getNodeType(int)> ->_NONE_
<org.apache.xpath.patterns.FunctionPattern: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)> ->_NONE_
<android.webkit.WebViewClassic: android.webkit.WebViewClassic fromWebView(android.webkit.WebView)> ->_NONE_
<org.apache.xml.serializer.WriterToUTF8Buffered: void write(char[],int,int)> ->_NONE_
<java.net.MulticastSocket: java.net.InetAddress getInterface()> ->_NONE_
<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()> ->_NONE_
<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol: int getMinRecordSize()> ->_NONE_
<android.view.MotionEvent: float getYPrecision()> ->_NONE_
<gov.nist.javax.sip.header.ContentLanguage: java.lang.String getLanguageTag()> ->_NONE_
<android.os.UserManager: int getUserHandle(int)> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: void setUseSourceLocation(boolean)> ->_NONE_
<org.jivesoftware.smackx.GroupChatInvitation: java.lang.String getRoomAddress()> ->_NONE_
<gov.nist.javax.sip.header.ims.PChargingFunctionAddresses: java.util.ListIterator getChargingCollectionFunctionAddresses()> ->_NONE_
<org.jivesoftware.smack.provider.ProviderManager: java.lang.Object getExtensionProvider(int)> ->_NONE_
<android.webkit.WebSettingsClassic: android.webkit.WebSettings$LayoutAlgorithm getLayoutAlgorithm()> ->_NONE_
<org.apache.xalan.templates.ElemTemplate: org.apache.xalan.templates.StylesheetRoot getStylesheetRoot()> ->_NONE_
<android.view.View: float getLeftFadingEdgeStrength()> ->_NONE_
<android.media.EncoderCapabilities: java.util.List getVideoEncoders()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: int getNamespaceType(int)> ->_NONE_
<org.apache.harmony.xml.dom.EntityImpl: java.lang.String getPublicId()> ->_NONE_
<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)> ->_NONE_
<android.widget.Toast: float getVerticalMargin()> ->_NONE_
<android.net.http.SslCertificate: java.lang.String getDigest(java.security.cert.X509Certificate,java.lang.String)> ->_NONE_
<android.database.sqlite.SQLiteConnectionPool: void close()> ->_NONE_
<android.widget.RemoteViews: void setDouble(int,java.lang.String,double)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: boolean getEnableSessionCreation()> ->_NONE_
<android.widget.GridLayout: int getDefaultMargin(android.view.View,boolean,boolean,boolean)> ->_NONE_
<gov.nist.core.NameValueList: void set(java.lang.String,java.lang.Object)> ->_NONE_
<android.support.v4.content.CursorLoader: android.net.Uri getUri()> ->_NONE_
<android.opengl.GLLogWrapper: java.lang.String getBeginMode(int)> ->_NONE_
<android.accounts.AccountManagerService: void sendAccountsChangedBroadcast(int)> ->_NONE_
<java.util.jar.Attributes: java.lang.String getValue(java.lang.String)> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertPathImpl: java.util.List getCertificates()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketFactoryImpl: java.lang.String[] getSupportedCipherSuites()> ->_NONE_
<gov.nist.javax.sip.header.ims.PChargingVector: java.lang.String getICIDGeneratedAt()> ->_NONE_
<libcore.net.http.HttpURLConnectionImpl: java.io.InputStream getErrorStream()> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: java.lang.String getNodeName()> ->_NONE_
<org.apache.http.util.EncodingUtils: java.lang.String getAsciiString(byte[],int,int)> ->_NONE_
<android.test.RenamingDelegatingContext: java.io.File getFileStreamPath(java.lang.String)> ->_NONE_
<java.text.DecimalFormatSymbols: java.util.Currency getCurrency()> ->_NONE_
<org.kxml2.io.KXmlSerializer: void processingInstruction(java.lang.String)> ->_NONE_
<android.widget.ImageView: void setSelected(boolean)> ->_NONE_
<android.support.v4.content.Loader: android.content.Context getContext()> ->_NONE_
<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()> ->_NONE_
<android.widget.CursorTreeAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)> ->_NONE_
<android.app.WallpaperManager: android.app.IWallpaperManager getIWallpaperManager()> ->_NONE_
<android.app.BackStackRecord: android.app.FragmentTransaction setBreadCrumbShortTitle(int)> ->_NONE_
<org.apache.http.message.HeaderGroup: void updateHeader(org.apache.http.Header)> ->_NONE_
<android.view.Display: int getFlags()> ->_NONE_
<org.apache.xml.serializer.SerializerTraceWriter: java.io.Writer getWriter()> ->_NONE_
<java.text.StringCharacterIterator: int getEndIndex()> ->_NONE_
<android.app.Activity: void startActivityFromFragment(android.app.Fragment,android.content.Intent,int,android.os.Bundle)> ->_NONE_
<android.bluetooth.BluetoothA2dp: int getPriority(android.bluetooth.BluetoothDevice)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: void setFeature(java.lang.String,boolean)> ->_NONE_
<org.apache.xpath.axes.FilterExprWalker: int getNextNode()> ->_NONE_
<android.view.View: int getLayoutDirection()> ->_NONE_
<android.filterpacks.imageproc.TintFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<android.view.Choreographer: long getFrameTimeNanos()> ->_NONE_
<libcore.io.ForwardingOs: void setsockoptByte(java.io.FileDescriptor,int,int,int)> ->_NONE_
<android.view.HardwareLayer: int getHeight()> ->_NONE_
<java.security.cert.X509CertSelector: void setSubjectPublicKey(java.security.PublicKey)> ->_NONE_
<android.webkit.WebViewClassic: android.webkit.WebBackForwardListClient getWebBackForwardListClient()> ->_NONE_
<gov.nist.javax.sip.stack.TCPMessageProcessor: java.lang.String getTransport()> ->_NONE_
<gov.nist.javax.sip.header.ims.PUserDatabase: void setDatabaseName(java.lang.String)> ->_NONE_
<android.hardware.GeomagneticField: float getX()> ->_NONE_
<libcore.net.http.HttpHandler: int getDefaultPort()> ->_NONE_
<android.hardware.GeomagneticField: float getY()> ->_NONE_
<android.hardware.GeomagneticField: float getZ()> ->_NONE_
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntryBlocking(org.apache.http.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit,org.apache.http.impl.conn.tsccm.WaitingThreadAborter)> ->_NONE_
<android.speech.tts.EventLogger: java.lang.String getLocaleString()> ->_NONE_
<android.graphics.drawable.ScaleDrawable: void setColorFilter(android.graphics.ColorFilter)> ->_NONE_
<java.util.concurrent.Phaser: int getPhase()> ->_NONE_
<junit.runner.TestCaseClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)> ->_NONE_
<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.routing.HttpRoute getPlannedRoute()> ->_NONE_
<android.content.ContextWrapper: android.content.Context getApplicationContext()> ->_NONE_
<gov.nist.javax.sip.header.RetryAfter: void setDuration(int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.ClientSessionContext: void setPersistentCache(org.apache.harmony.xnet.provider.jsse.SSLClientSessionCache)> ->_NONE_
<android.accounts.AccountManagerService: java.lang.String getDatabaseName(int)> ->_NONE_
<java.util.Calendar: int getActualMaximum(int)> ->_NONE_
<java.security.Provider: java.lang.String getProperty(java.lang.String)> ->_NONE_
<junit.framework.TestSuite: java.lang.reflect.Constructor getTestConstructor(java.lang.Class)> ->_NONE_
<android.net.wifi.WifiManager: int getWifiApState()> ->_NONE_
<gov.nist.javax.sip.header.ParametersHeader: void setParameter(gov.nist.core.NameValue)> ->_NONE_
<libcore.net.http.ResponseHeaders: java.util.Date getLastModified()> ->_NONE_
<android.inputmethodservice.SoftInputWindow: void setSize(int)> ->_NONE_
<android.app.ContextImpl: android.graphics.drawable.Drawable getWallpaper()> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: void setJabberId(java.lang.String)> ->_NONE_
<org.apache.xpath.functions.FuncCeiling: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<android.filterpacks.imageproc.NegativeFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<android.widget.TabHost: android.view.View getCurrentTabView()> ->_NONE_
<org.apache.james.mime4j.field.datetime.parser.DateTimeParser: org.apache.james.mime4j.field.datetime.parser.Token getToken(int)> ->_NONE_
<android.telephony.CellSignalStrengthCdma: int getLevel()> ->_NONE_
<android.net.UrlQuerySanitizer: boolean getAllowUnregisteredParamaters()> ->_NONE_
<org.apache.harmony.security.x501.AttributeValue: int getTag()> ->_NONE_
<android.webkit.WebSettingsClassic: void setPluginsPath(java.lang.String)> ->_NONE_
<org.apache.harmony.xml.dom.ElementImpl: java.lang.String getAttributeNS(java.lang.String,java.lang.String)> ->_NONE_
<android.view.MotionEvent: float getAxisValue(int,int)> ->_NONE_
<net.oauth.OAuthMessage: java.lang.String getBodyEncoding()> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: void setClickable(boolean)> ->_NONE_
<android.content.ContentProviderProxy: android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle)> ->_NONE_
<org.apache.xalan.templates.OutputProperties: java.lang.String getProperty(java.lang.String)> ->_NONE_
<org.apache.http.impl.conn.AbstractPooledConnAdapter: void setState(java.lang.Object)> ->_NONE_
<android.util.Base64OutputStream: void internalWrite(byte[],int,int,boolean)> ->_NONE_
<android.app.ExpandableListActivity: long getSelectedPosition()> ->_NONE_
<org.apache.xalan.templates.StylesheetRoot: java.util.Vector getKeysComposed()> ->_NONE_
<android.test.TestRunner: void runInPerformanceMode(java.lang.Object,java.lang.String,boolean,java.lang.String)> ->_NONE_
<org.apache.james.mime4j.field.ContentTransferEncodingField: java.lang.String getEncoding(org.apache.james.mime4j.field.ContentTransferEncodingField)> ->_NONE_
<java.security.AlgorithmParameterGenerator: java.lang.String getAlgorithm()> ->_NONE_
<android.app.ActivityManager: void setPackageAskScreenCompat(java.lang.String,boolean)> ->_NONE_
<libcore.net.url.FtpURLConnection: void login()> ->_NONE_
<android.media.MediaFile: java.lang.String getMimeTypeForFormatCode(int)> ->_NONE_
<android.media.videoeditor.MediaItem: android.media.videoeditor.Overlay getOverlay(java.lang.String)> ->_NONE_
<android.telephony.CellInfoGsm: void log(java.lang.String)> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: void setRedirectHandler(org.apache.http.client.RedirectHandler)> ->_NONE_
<java.net.Socks4Message: int getIP()> ->_NONE_
<org.kxml2.io.KXmlParser: java.lang.Object getProperty(java.lang.String)> ->_NONE_
<org.ccil.cowan.tagsoup.PYXWriter: void gi(char[],int,int)> ->_NONE_
<android.database.sqlite.SQLiteDatabase: java.util.List getAttachedDbs()> ->_NONE_
<android.net.http.Headers: java.lang.String getCacheControl()> ->_NONE_
<android.telephony.CellSignalStrengthCdma: void setCdmaDbm(int)> ->_NONE_
<android.os.Debug: int getGlobalFreedSize()> ->_NONE_
<android.nfc.tech.IsoDep: void connect()> ->_NONE_
<java.text.NumberFormat: void setGroupingUsed(boolean)> ->_NONE_
<android.webkit.WebViewClassic: int getPageBackgroundColor()> ->_NONE_
<org.apache.xalan.processor.StylesheetHandler: int getStylesheetType()> ->_NONE_
<java.sql.DriverManager: java.sql.Connection getConnection(java.lang.String)> ->_NONE_
<android.net.DhcpInfoInternal: void updateFromDhcpRequest(android.net.DhcpInfoInternal)> ->_NONE_
<java.net.URISyntaxException: java.lang.String getMessage()> ->_NONE_
<org.apache.harmony.security.asn1.BerInputStream: int read()> ->_NONE_
<android.media.AudioRecord: int getNotificationMarkerPosition()> ->_NONE_
<android.widget.CheckedTextView: android.graphics.drawable.Drawable getCheckMarkDrawable()> ->_NONE_
<android.service.dreams.DreamService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> ->_NONE_
<java.util.Calendar: int get(int)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: void setStackLogger(gov.nist.core.StackLogger)> ->_NONE_
<android.util.XmlPullAttributes: int getAttributeResourceValue(java.lang.String,java.lang.String,int)> ->_NONE_
<android.widget.AutoCompleteTextView: void setForceIgnoreOutsideTouch(boolean)> ->_NONE_
<org.jivesoftware.smackx.packet.MUCInitialPresence: org.jivesoftware.smackx.packet.MUCInitialPresence$History getHistory()> ->_NONE_
<org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties getDefaultMethodProperties(java.lang.String)> ->_NONE_
<java.net.Authenticator: java.net.InetAddress getRequestingSite()> ->_NONE_
<java.nio.DirectByteBuffer: int getInt()> ->_NONE_
<org.apache.xml.utils.FastStringBuffer: void setLength(int)> ->_NONE_
<android.text.SpannableStringBuilder: int getTextWidths(int,int,float[],android.graphics.Paint)> ->_NONE_
<org.apache.harmony.xml.dom.NodeImpl: void setName(org.apache.harmony.xml.dom.NodeImpl,java.lang.String)> ->_NONE_
<org.jivesoftware.smack.Chat: void sendMessage(org.jivesoftware.smack.packet.Message)> ->_NONE_
<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)> ->_NONE_
<android.view.ViewConfiguration: int getHoverTapTimeout()> ->_NONE_
<android.net.NetworkInfo: android.net.NetworkInfo$DetailedState getDetailedState()> ->_NONE_
<org.apache.xpath.jaxp.XPathExpressionImpl: java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)> ->_NONE_
<android.content.BroadcastReceiver: void setOrderedHint(boolean)> ->_NONE_
<android.location.LocationManager: void setTestProviderEnabled(java.lang.String,boolean)> ->_NONE_
<android.emoji.EmojiFactory: java.lang.String getVendorSpecificPuaFromAndroidPua(java.lang.String)> ->_NONE_
<android.widget.EditText: void setSelection(int,int)> ->_NONE_
<android.webkit.WebSettingsClassic: void setAppCacheEnabled(boolean)> ->_NONE_
<android.widget.LinearLayout: float getWeightSum()> ->_NONE_
<android.appwidget.AppWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])> ->_NONE_
<org.kxml2.io.KXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean)> ->_NONE_
<android.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)> ->_NONE_
<javax.net.ssl.DefaultSSLServerSocketFactory: java.lang.String[] getSupportedCipherSuites()> ->_NONE_
<org.apache.http.conn.MultihomePlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)> ->_NONE_
<android.text.format.DateFormat: java.text.DateFormat getDateFormat(android.content.Context)> ->_NONE_
<android.graphics.Paint: android.graphics.Paint$Join getStrokeJoin()> ->_NONE_
<org.apache.xml.utils.UnImplNode: org.w3c.dom.DOMImplementation getImplementation()> ->_NONE_
<java.lang.HexStringParser: int getOffset(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xalan.templates.OutputProperties: void setProperty(java.lang.String,java.lang.String)> ->_NONE_
<org.javia.arity.Symbols: org.javia.arity.Symbol[] getAllSymbols()> ->_NONE_
<org.apache.commons.io.output.ByteArrayOutputStream: java.io.InputStream toBufferedInputStream(java.io.InputStream)> ->_NONE_
<android.util.JsonWriter: android.util.JsonWriter open(android.util.JsonScope,java.lang.String)> ->_NONE_
<libcore.io.ForwardingOs: int write(java.io.FileDescriptor,java.nio.ByteBuffer)> ->_NONE_
<android.webkit.WebSettings: void setMinimumFontSize(int)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: void replaceTemplate(org.apache.xalan.templates.ElemTemplate,int)> ->_NONE_
<android.media.effect.effects.BackDropperEffect: void setUpdateListener(android.media.effect.EffectUpdateListener)> ->_NONE_
<android.net.wifi.p2p.WifiP2pWfdInfo: void setMaxThroughput(int)> ->_NONE_
<android.test.mock.MockPackageManager: int[] getPackageGids(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: org.apache.xml.dtm.DTMAxisIterator getAxisIterator(int)> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertImpl: byte[] getSigAlgParams()> ->_NONE_
<javax.xml.transform.stream.StreamSource: java.lang.String getSystemId()> ->_NONE_
<org.apache.xpath.functions.FuncExtFunction: java.lang.String getFunctionName()> ->_NONE_
<gov.nist.javax.sip.header.StatusLine: java.lang.String getSipVersion()> ->_NONE_
<android.app.Fragment: int getTargetRequestCode()> ->_NONE_
<android.telephony.TelephonyManager: int getPhoneType()> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: java.lang.String getActionSymbolicName(int)> ->_NONE_
<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)> ->_NONE_
<gov.nist.javax.sip.header.RetryAfter: int getDuration()> ->_NONE_
<android.app.ActivityManagerProxy: boolean isImmersive(android.os.IBinder)> ->_NONE_
<android.webkit.BrowserFrame: boolean handleUrl(java.lang.String)> ->_NONE_
<android.graphics.Rect: void printShortString(java.io.PrintWriter)> ->_NONE_
<android.app.ActivityManagerProxy: android.content.res.Configuration getConfiguration()> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationHeader: void setOpaque(java.lang.String)> ->_NONE_
<org.jivesoftware.smackx.packet.MUCUser: java.lang.String getElementName()> ->_NONE_
<android.widget.CursorTreeAdapter: long getGroupId(int)> ->_NONE_
<org.apache.harmony.security.asn1.ASN1OctetString: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)> ->_NONE_
<android.appwidget.AppWidgetManager: void setBindAppWidgetPermission(java.lang.String,boolean)> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: java.util.Map getHeaderFields()> ->_NONE_
<org.apache.harmony.security.PublicKeyImpl: java.lang.String getFormat()> ->_NONE_
<java.security.KeyStore: void setCertificateEntry(java.lang.String,java.security.cert.Certificate)> ->_NONE_
<java.util.concurrent.ScheduledThreadPoolExecutor: void setContinueExistingPeriodicTasksAfterShutdownPolicy(boolean)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNamedNodeMap: org.w3c.dom.Node setNamedItem(org.w3c.dom.Node)> ->_NONE_
<gov.nist.javax.sip.header.From: void setAddress(javax.sip.address.Address)> ->_NONE_
<org.apache.xml.serializer.WriterToASCI: void write(java.lang.String)> ->_NONE_
<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)> ->_NONE_
<android.media.AudioTrack: int getAudioFormat()> ->_NONE_
<org.jivesoftware.smackx.packet.MUCInitialPresence: java.lang.String getNamespace()> ->_NONE_
<android.widget.TextView: int getDesiredHeight(android.text.Layout,boolean)> ->_NONE_
<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)> ->_NONE_
<android.widget.CursorTreeAdapter: android.database.Cursor getChild(int,int)> ->_NONE_
<android.app.ApplicationPackageManager: java.lang.String[] getSystemSharedLibraryNames()> ->_NONE_
<java.awt.font.NumericShaper: java.awt.font.NumericShaper getContextualShaper(int,int)> ->_NONE_
<android.speech.tts.SynthesisRequest: java.lang.String getText()> ->_NONE_
<org.apache.http.impl.conn.SingleClientConnManager: void closeExpiredConnections()> ->_NONE_
<android.support.v4.app.Fragment: void setArguments(android.os.Bundle)> ->_NONE_
<org.apache.xml.utils.AttList: java.lang.String getQName(int)> ->_NONE_
<jp.co.omronsoft.openwnn.ComposingText: int setCursor(int,int)> ->_NONE_
<libcore.net.http.HttpURLConnectionImpl: void setProxy(java.net.Proxy)> ->_NONE_
<android.filterfw.core.ShaderProgram: android.filterfw.core.GLEnvironment getGLEnvironment()> ->_NONE_
<android.app.AlertDialog: void setCustomTitle(android.view.View)> ->_NONE_
<org.apache.xalan.templates.ElemExtensionCall: void executeFallbacks(org.apache.xalan.transformer.TransformerImpl)> ->_NONE_
<org.apache.xalan.templates.ElemForEach: org.apache.xalan.templates.ElemTemplateElement getTemplateMatch()> ->_NONE_
<android.widget.Scroller: double getSplineDeceleration(float)> ->_NONE_
<java.nio.DatagramChannelImpl: int readImpl(java.nio.ByteBuffer)> ->_NONE_
<android.net.nsd.NsdManager: android.os.Messenger getMessenger()> ->_NONE_
<android.widget.Toast: void setDuration(int)> ->_NONE_
<android.widget.PopupWindow: void setOutsideTouchable(boolean)> ->_NONE_
<android.app.FragmentManagerImpl: void setBackStackIndex(int,android.app.BackStackRecord)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.FromHeader getFromHeader()> ->_NONE_
<android.widget.AdapterView: android.widget.AdapterView$OnItemLongClickListener getOnItemLongClickListener()> ->_NONE_
<gov.nist.javax.sip.address.AddressImpl: gov.nist.core.HostPort getHostPort()> ->_NONE_
<android.widget.RadioGroup: void setCheckedId(int)> ->_NONE_
<org.jivesoftware.smack.packet.DataMessage: java.lang.String getRegId()> ->_NONE_
<org.jivesoftware.smack.XMPPConnection: boolean getServerClockSkewKnown()> ->_NONE_
<dalvik.system.DexFile: java.lang.String getName()> ->_NONE_
<android.view.View: void setOnTouchListener(android.view.View$OnTouchListener)> ->_NONE_
<android.os.Handler: android.os.Looper getLooper()> ->_NONE_
<android.view.View: void setId(int)> ->_NONE_
<dalvik.system.profiler.SamplingProfiler: dalvik.system.profiler.HprofData getHprofData()> ->_NONE_
<android.content.Intent: android.content.Intent setFlags(int)> ->_NONE_
<gov.nist.javax.sip.header.ims.Path: java.lang.String encodeBody()> ->_NONE_
<android.bluetooth.BluetoothDevice: int getBondState()> ->_NONE_
<android.widget.DateTimeView: void setTime(long)> ->_NONE_
<org.apache.xpath.compiler.FunctionTable: org.apache.xpath.functions.Function getFunction(int)> ->_NONE_
<org.xmlpull.v1.sax2.Driver: int getLineNumber()> ->_NONE_
<android.media.audiofx.AudioEffect: int getParameter(int,byte[])> ->_NONE_
<android.text.TextUtils: int getCapsMode(java.lang.CharSequence,int,int)> ->_NONE_
<android.filterpacks.imageproc.ToGrayFilter: android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)> ->_NONE_
<org.apache.xml.serializer.SecuritySupport: org.apache.xml.serializer.SecuritySupport getInstance()> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationInfo: gov.nist.core.NameValue getAuthInfo(java.lang.String)> ->_NONE_
<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)> ->_NONE_
<android.view.View: android.graphics.Matrix getMatrix()> ->_NONE_
<android.app.ActivityManagerProxy: void setActivityController(android.app.IActivityController)> ->_NONE_
<org.apache.xalan.transformer.TransformerHandlerImpl: void startDTD(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.app.ApplicationPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)> ->_NONE_
<android.net.wifi.WifiStateTracker: void setDependencyMet(boolean)> ->_NONE_
<android.widget.AutoCompleteTextView: android.widget.AdapterView$OnItemSelectedListener getOnItemSelectedListener()> ->_NONE_
<java.security.cert.X509CertSelector: void setExtendedKeyUsage(java.util.Set)> ->_NONE_
<gov.nist.javax.sip.header.CallID: java.lang.String getCallId()> ->_NONE_
<gov.nist.javax.sip.header.ims.PPreferredService: void setSubserviceIdentifiers(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.message.SIPMessage parseSIPMessage(byte[])> ->_NONE_
<org.apache.xml.serializer.dom3.DOMLocatorImpl: int getColumnNumber()> ->_NONE_
<org.apache.harmony.xml.dom.EntityImpl: java.lang.String getNodeName()> ->_NONE_
<android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat: android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo)> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl getSipProvider()> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: java.lang.String getNodeNameX(int)> ->_NONE_
<android.net.ConnectivityManager: boolean getMobileDataEnabled()> ->_NONE_
<org.jivesoftware.smack.sasl.SASLMechanism: void challengeReceived(java.lang.String)> ->_NONE_
<android.opengl.GLSurfaceView: void setPreserveEGLContextOnPause(boolean)> ->_NONE_
<java.nio.charset.CharsetEncoderICU: int getArray(java.nio.CharBuffer)> ->_NONE_
<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)> ->_NONE_
<java.net.HttpURLConnection: java.lang.String getResponseMessage()> ->_NONE_
<org.apache.harmony.security.x501.Name: java.lang.String getName(java.lang.String)> ->_NONE_
<android.app.WallpaperManager: void setWallpaperOffsetSteps(float,float)> ->_NONE_
<android.widget.Gallery: void setCallbackOnUnselectedItemClick(boolean)> ->_NONE_
<java.net.URLConnection: java.lang.Object getContent()> ->_NONE_
<org.apache.xml.utils.URI: java.lang.String getFragment()> ->_NONE_
<gov.nist.javax.sip.message.ContentImpl: void setContent(java.lang.Object)> ->_NONE_
<android.app.Dialog: void setCanceledOnTouchOutside(boolean)> ->_NONE_
<android.content.ContentProvider: android.content.pm.PathPermission[] getPathPermissions()> ->_NONE_
<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams getOverrideParams()> ->_NONE_
<android.webkit.WebSettingsClassic: void setDoubleTapZoom(int)> ->_NONE_
<org.apache.harmony.security.x509.TBSCertificate: java.math.BigInteger getSerialNumber()> ->_NONE_
<android.content.Intent: float[] getFloatArrayExtra(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.Via: void setTransport(java.lang.String)> ->_NONE_
<android.view.textservice.SpellCheckerSubtype: java.lang.String getLocale()> ->_NONE_
<android.view.accessibility.AccessibilityRecord: void setMaxScrollX(int)> ->_NONE_
<android.view.accessibility.AccessibilityRecord: void setMaxScrollY(int)> ->_NONE_
<android.text.MeasuredText: void setPara(java.lang.CharSequence,int,int,android.text.TextDirectionHeuristic)> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: void setDoInput(boolean)> ->_NONE_
<android.net.NetworkStatsHistory: void dump(com.android.internal.util.IndentingPrintWriter,boolean)> ->_NONE_
<android.net.nsd.DnsSdTxtRecord: byte[] getRawData()> ->_NONE_
<org.apache.harmony.xml.dom.AttrImpl: java.lang.String getNodeName()> ->_NONE_
<android.telephony.SignalStrength: int getCdmaDbm()> ->_NONE_
<android.view.ViewDebug: long getViewInstanceCount()> ->_NONE_
<gov.nist.javax.sip.header.CallIdentifier: java.lang.String getHost()> ->_NONE_
<android.net.wifi.NetworkUpdateResult: void setIpChanged(boolean)> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertImpl: java.math.BigInteger getSerialNumber()> ->_NONE_
<org.apache.harmony.xml.dom.DocumentImpl: void setXmlVersion(java.lang.String)> ->_NONE_
<javax.obex.HeaderSet: java.lang.Object getHeader(int)> ->_NONE_
<jp.co.omronsoft.openwnn.Keyboard: void setVerticalGap(int)> ->_NONE_
<org.apache.xpath.objects.XRTreeFragSelectWrapper: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<org.jivesoftware.smack.SmackConfiguration: void setPacketReplyTimeout(int)> ->_NONE_
<android.os.Message: android.os.Bundle getData()> ->_NONE_
<android.widget.SimpleCursorAdapter: void setViewBinder(android.widget.SimpleCursorAdapter$ViewBinder)> ->_NONE_
<java.text.NumberFormat: int getMinimumIntegerDigits()> ->_NONE_
<org.apache.xpath.axes.ReverseAxesWalker: int getLastPos(org.apache.xpath.XPathContext)> ->_NONE_
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: int getMaxForRoute(org.apache.http.conn.routing.HttpRoute)> ->_NONE_
<android.view.ViewGroup: android.graphics.Bitmap createSnapshot(android.graphics.Bitmap$Config,int,boolean)> ->_NONE_
<gov.nist.javax.sip.stack.UDPMessageChannel: int getPeerPort()> ->_NONE_
<android.mtp.MtpServer: void sendObjectRemoved(int)> ->_NONE_
<android.content.res.Resources: android.content.res.ColorStateList getCachedColorStateList(long)> ->_NONE_
<android.widget.AbsSeekBar: int getKeyProgressIncrement()> ->_NONE_
<org.jivesoftware.smack.util.PacketParserUtils: org.jivesoftware.smack.packet.Packet parseBatchPresence(com.google.common.io.protocol.ProtoBuf,long)> ->_NONE_
<android.widget.CalendarView: long getMinDate()> ->_NONE_
<android.os.Bundle: double[] getDoubleArray(java.lang.String)> ->_NONE_
<org.jivesoftware.smack.packet.BindAccountRequest: java.lang.String getResource()> ->_NONE_
<org.apache.http.impl.io.AbstractSessionInputBuffer: int read()> ->_NONE_
<org.apache.xalan.extensions.ExtensionNamespacesManager: java.util.Vector getExtensions()> ->_NONE_
<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String getProjectAudioTrackPCMFilePath()> ->_NONE_
<java.io.FilePermission: java.lang.String getActions()> ->_NONE_
<android.widget.ZoomButtonsController: void setFocusable(boolean)> ->_NONE_
<android.app.SearchableInfo: java.lang.String getSuggestPath()> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: org.w3c.dom.Document getOwnerDocument()> ->_NONE_
<gov.nist.javax.sip.header.Indentation: void setIndentation(int)> ->_NONE_
<android.widget.RemoteViews: void setCharSequence(int,java.lang.String,java.lang.CharSequence)> ->_NONE_
<org.apache.xml.utils.URI: java.lang.String getUserinfo()> ->_NONE_
<org.jivesoftware.smack.packet.LoginRequest: java.util.Map getSettings()> ->_NONE_
<gov.nist.javax.sip.address.SipUri: java.lang.String getUser()> ->_NONE_
<android.view.GLES20Layer: void setLayerPaint(android.graphics.Paint)> ->_NONE_
<org.apache.xalan.templates.XUnresolvedVariable: java.lang.String getTypeString()> ->_NONE_
<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)> ->_NONE_
<android.app.ApplicationPackageManager: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.Contact getMyContactHeader()> ->_NONE_
<javax.crypto.spec.PSource: java.lang.String getAlgorithm()> ->_NONE_
<android.net.SSLCertificateSocketFactory: void setSoWriteTimeout(java.net.Socket,int)> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: void setProperty(java.lang.String,java.lang.Object)> ->_NONE_
<junit.textui.ResultPrinter: void addError(junit.framework.Test,java.lang.Throwable)> ->_NONE_
<org.apache.james.mime4j.codec.EncoderUtil: java.lang.String encodeQ(byte[],org.apache.james.mime4j.codec.EncoderUtil$Usage)> ->_NONE_
<org.apache.xpath.Arg: java.lang.String getExpression()> ->_NONE_
<android.content.pm.ResolveInfo: void dump(android.util.Printer,java.lang.String)> ->_NONE_
<android.webkit.CacheManager: android.webkit.CacheManager$CacheResult getCacheFile(java.lang.String,long,java.util.Map)> ->_NONE_
<android.filterfw.core.MutableFrameFormat: void setDimensions(int,int)> ->_NONE_
<android.graphics.drawable.GradientDrawable: void setColors(int[])> ->_NONE_
<android.telephony.ServiceState: int getRilRadioTechnology()> ->_NONE_
<android.webkit.BrowserFrame: void loadFinished(java.lang.String,int,boolean)> ->_NONE_
<android.animation.LayoutTransition: void setStagger(int,long)> ->_NONE_
<java.io.EmulatedFieldsForLoading: int get(java.lang.String,int)> ->_NONE_
<android.gesture.GestureLibrary: java.util.ArrayList getGestures(java.lang.String)> ->_NONE_
<java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.security.Provider)> ->_NONE_
<android.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)> ->_NONE_
<java.text.DecimalFormatSymbols: void setMinusSign(char)> ->_NONE_
<org.xml.sax.SAXParseException: int getLineNumber()> ->_NONE_
<android.view.KeyEvent: int getScanCode()> ->_NONE_
<org.apache.xalan.templates.ElemSort: org.apache.xpath.XPath getSelect()> ->_NONE_
<org.apache.xml.utils.ThreadControllerWrapper: java.lang.Thread runThread(java.lang.Runnable,int)> ->_NONE_
<android.test.SingleLaunchActivityTestCase: android.app.Activity getActivity()> ->_NONE_
<android.database.sqlite.SQLiteQuery: int fillWindow(android.database.CursorWindow,int,int,boolean)> ->_NONE_
<org.apache.xml.serializer.ToSAXHandler: boolean getShouldOutputNSAttr()> ->_NONE_
<android.inputmethodservice.Keyboard: int[] getShiftKeyIndices()> ->_NONE_
<android.content.res.Resources: int[] getIntArray(int)> ->_NONE_
<org.jivesoftware.smack.util.StringUtils: java.lang.String hash(java.lang.String)> ->_NONE_
<android.filterfw.core.VertexFrame: int[] getInts()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.DefaultSSLContextImpl: javax.net.ssl.TrustManager[] getTrustManagers()> ->_NONE_
<org.apache.commons.io.FileCleaningTracker: java.util.List getDeleteFailures()> ->_NONE_
<android.test.ClassPathPackageInfoSource: java.lang.String getClassName(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: int getElementById(java.lang.String)> ->_NONE_
<android.os.Debug: void dumpHprofData(java.lang.String)> ->_NONE_
<android.widget.TextView: void setTextKeepState(java.lang.CharSequence,android.widget.TextView$BufferType)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: void setCurrentElement(org.apache.xalan.templates.ElemTemplateElement)> ->_NONE_
<android.webkit.WebSettings: void setDefaultTextEncodingName(java.lang.String)> ->_NONE_
<android.webkit.WebViewClassic: boolean onKeyMultiple(int,int,android.view.KeyEvent)> ->_NONE_
<android.util.EventLog: java.lang.String getTagName(int)> ->_NONE_
<java.net.URL: void setURLStreamHandlerFactory(java.net.URLStreamHandlerFactory)> ->_NONE_
<android.graphics.drawable.PictureDrawable: void setColorFilter(android.graphics.ColorFilter)> ->_NONE_
<org.ccil.cowan.tagsoup.PYXWriter: void adup(char[],int,int)> ->_NONE_
<android.test.mock.MockContext: android.graphics.drawable.Drawable getWallpaper()> ->_NONE_
<org.apache.harmony.security.pkcs8.PrivateKeyInfo: java.util.List getAttributes()> ->_NONE_
<org.apache.commons.logging.impl.SimpleLog: boolean getBooleanProperty(java.lang.String,boolean)> ->_NONE_
<jp.co.omronsoft.openwnn.KeyboardView: void setVerticalCorrection(int)> ->_NONE_
<org.apache.http.impl.conn.DefaultClientConnection: void update(java.net.Socket,org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams)> ->_NONE_
<android.telephony.CellSignalStrengthLte: void log(java.lang.String)> ->_NONE_
<junit.textui.ResultPrinter: void printHeader(long)> ->_NONE_
<java.io.ObjectInputStream: boolean readBoolean()> ->_NONE_
<android.media.effect.EffectContext: android.media.effect.EffectFactory getFactory()> ->_NONE_
<android.net.DummyDataStateTracker: android.net.LinkProperties getLinkProperties()> ->_NONE_
<org.apache.harmony.security.x509.PrivateKeyUsagePeriod: java.util.Date getNotAfter()> ->_NONE_
<android.location.LocationRequest: float getSmallestDisplacement()> ->_NONE_
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(java.lang.String)> ->_NONE_
<android.widget.RatingBar: float getStepSize()> ->_NONE_
<jp.co.omronsoft.openwnn.TextCandidatesViewManager: jp.co.omronsoft.openwnn.WnnWord getWnnWord(int)> ->_NONE_
<org.apache.xalan.xslt.SecuritySupport12: java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader)> ->_NONE_
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> ->_NONE_
<android.app.ActivityManagerProxy: void activityResumed(android.os.IBinder)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setPackageName(java.lang.CharSequence)> ->_NONE_
<android.speech.RecognizerIntent: android.content.Intent getVoiceDetailsIntent(android.content.Context)> ->_NONE_
<android.webkit.HTML5VideoView: void setStartWhenPrepared(boolean)> ->_NONE_
<android.webkit.WebViewCore: void resumeUpdatePicture(android.webkit.WebViewCore)> ->_NONE_
<org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)> ->_NONE_
<java.lang.Class: java.lang.Object[] getEnumConstants()> ->_NONE_
<android.preference.Preference: boolean getPersistedBoolean(boolean)> ->_NONE_
<java.io.ObjectInputStream: java.lang.String readUTF()> ->_NONE_
<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)> ->_NONE_
<android.widget.AbsListView: int getDistance(android.graphics.Rect,android.graphics.Rect,int)> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPackageName()> ->_NONE_
<gov.nist.javax.sip.header.RAck: long getCSequenceNumber()> ->_NONE_
<android.app.ApplicationThreadProxy: void setHttpProxy(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.net.sip.SimpleSessionDescription: void setBandwidth(java.lang.String,int)> ->_NONE_
<org.apache.http.impl.SocketHttpClientConnection: java.net.InetAddress getLocalAddress()> ->_NONE_
<android.net.wifi.WifiNative: boolean setSuspendOptimizations(boolean)> ->_NONE_
<org.jivesoftware.smack.packet.Packet: int getStreamId()> ->_NONE_
<dalvik.system.VMDebug: int setGlobalAllocationLimit(int)> ->_NONE_
<android.widget.AutoCompleteTextView: android.widget.AdapterView$OnItemClickListener getOnItemClickListener()> ->_NONE_
<libcore.io.ForwardingOs: void setsockoptLinger(java.io.FileDescriptor,int,int,libcore.io.StructLinger)> ->_NONE_
<javax.obex.ServerSession: void run()> ->_NONE_
<android.widget.Switch: void setThumbDrawable(android.graphics.drawable.Drawable)> ->_NONE_
<android.app.FragmentManagerImpl: android.app.FragmentManager$BackStackEntry getBackStackEntryAt(int)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setFullScreen(boolean)> ->_NONE_
<android.view.DragEvent: boolean getResult()> ->_NONE_
<android.provider.Browser: void updateVisitedHistory(android.content.ContentResolver,java.lang.String,boolean)> ->_NONE_
<org.apache.xpath.objects.XString: void getChars(int,int,char[],int)> ->_NONE_
<org.apache.harmony.xml.ExpatAttributes: int getIndex(java.lang.String)> ->_NONE_
<android.speech.tts.TextToSpeech: java.lang.String getDefaultEngine()> ->_NONE_
<android.media.MediaPlayer: void addTimedTextSource(java.io.FileDescriptor,long,long,java.lang.String)> ->_NONE_
<android.widget.ScrollBarDrawable: void setVerticalTrackDrawable(android.graphics.drawable.Drawable)> ->_NONE_
<android.widget.Switch: java.lang.CharSequence getTextOn()> ->_NONE_
<android.location.Criteria: void setHorizontalAccuracy(int)> ->_NONE_
<javax.net.ssl.HandshakeCompletedEvent: javax.net.ssl.SSLSession getSession()> ->_NONE_
<android.preference.ListPreference: java.lang.CharSequence getEntry()> ->_NONE_
<android.widget.ImageView: boolean getBaselineAlignBottom()> ->_NONE_
<java.util.concurrent.CyclicBarrier: int getNumberWaiting()> ->_NONE_
<javax.crypto.spec.SecretKeySpec: java.lang.String getFormat()> ->_NONE_
<android.text.style.URLSpan: java.lang.String getURL()> ->_NONE_
<org.javia.arity.DoubleStack: double[] getIm()> ->_NONE_
<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String,java.lang.CharSequence)> ->_NONE_
<android.content.ContextWrapper: java.io.File getDatabasePath(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.SecuritySupport: java.lang.ClassLoader getSystemClassLoader()> ->_NONE_
<java.util.logging.Logger: java.util.logging.Level getLevel()> ->_NONE_
<android.view.MotionEvent: float getXPrecision()> ->_NONE_
<java.nio.FileChannelImpl: int writeImpl(java.nio.ByteBuffer,long)> ->_NONE_
<org.apache.xalan.templates.ElemExtensionCall: int getXSLToken()> ->_NONE_
<java.text.Normalizer: java.lang.String normalize(java.lang.CharSequence,java.text.Normalizer$Form)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: boolean getEnableSessionCreation()> ->_NONE_
<android.content.Intent: void setClipData(android.content.ClipData)> ->_NONE_
<android.content.ContentResolver: android.content.SyncAdapterType[] getSyncAdapterTypes()> ->_NONE_
<gov.nist.core.GenericObjectList: boolean match(java.lang.Object)> ->_NONE_
<java.util.TimeZone: void setDefault(java.util.TimeZone)> ->_NONE_
<android.webkit.WebViewCore: void access$3900(android.webkit.WebViewCore,int,int,int)> ->_NONE_
<android.webkit.WebSettingsClassic: void setStandardFontFamily(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: java.lang.String getLocalNameFromExpandedNameID(int)> ->_NONE_
<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.ref.ExpandedNameTable getExpandedNameTable(org.apache.xml.dtm.DTM)> ->_NONE_
<java.security.cert.PKIXCertPathValidatorResult: java.security.cert.PolicyNode getPolicyTree()> ->_NONE_
<android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getFragmentManager()> ->_NONE_
<java.security.cert.PolicyQualifierInfo: byte[] getPolicyQualifier()> ->_NONE_
<android.content.Intent: char getCharExtra(java.lang.String,char)> ->_NONE_
<gov.nist.javax.sip.header.MaxForwards: int getMaxForwards()> ->_NONE_
<java.util.prefs.NodeChangeEvent: java.util.prefs.Preferences getParent()> ->_NONE_
<org.apache.xalan.transformer.TransformerIdentityImpl: java.lang.String getOutputProperty(java.lang.String)> ->_NONE_
<android.graphics.Rect: void set(android.graphics.Rect)> ->_NONE_
<android.webkit.CallbackProxy: void onJsAlert(java.lang.String,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.stack.HopImpl: java.lang.String getHost()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore: java.util.List getCertificateChain(java.security.cert.X509Certificate)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setEnabled(boolean)> ->_NONE_
<android.animation.AnimatorSet: java.util.ArrayList getChildAnimations()> ->_NONE_
<android.text.SpannableStringInternal: java.lang.Object[] getSpans(int,int,java.lang.Class)> ->_NONE_
<android.widget.TextView: int getFadeHeight(boolean)> ->_NONE_
<java.security.DigestOutputStream: java.security.MessageDigest getMessageDigest()> ->_NONE_
<org.apache.xml.serializer.dom3.LSSerializerImpl: org.w3c.dom.DOMErrorHandler getErrorHandler()> ->_NONE_
<org.apache.http.client.methods.HttpOptions: java.lang.String getMethod()> ->_NONE_
<android.webkit.WebSettingsClassic: boolean getNavDump()> ->_NONE_
<org.apache.http.conn.params.ConnManagerParamBean: void setMaxTotalConnections(int)> ->_NONE_
<org.jivesoftware.smack.util.PacketParserUtils: java.lang.String getStringOrDefault(com.google.common.io.protocol.ProtoBuf,int,java.lang.String)> ->_NONE_
<android.content.Intent: android.content.Intent setData(android.net.Uri)> ->_NONE_
<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair getParameter(int)> ->_NONE_
<android.test.ClassPathPackageInfo: java.util.Set getSubpackages()> ->_NONE_
<android.preference.DialogPreference: void setNegativeButtonText(java.lang.CharSequence)> ->_NONE_
<android.net.http.Headers: void parseHeader(org.apache.http.util.CharArrayBuffer)> ->_NONE_
<android.widget.Editor: int getLastTapPosition()> ->_NONE_
<org.jivesoftware.smack.packet.DataMessage: java.lang.String getCategory()> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: java.lang.String encodeSIPHeaders()> ->_NONE_
<org.apache.harmony.xml.ExpatReader: org.xml.sax.ext.LexicalHandler getLexicalHandler()> ->_NONE_
<android.widget.CalendarView: int getWeekDayTextAppearance()> ->_NONE_
<android.net.wifi.WifiInfo: boolean getHiddenSSID()> ->_NONE_
<java.util.zip.ZipEntry: void setCrc(long)> ->_NONE_
<org.apache.xml.serializer.utils.URI: int getPort()> ->_NONE_
<gov.nist.javax.sip.header.ims.PChargingVector: void setValue(java.lang.String)> ->_NONE_
<android.webkit.WebView: void setMapTrackballToArrowKeys(boolean)> ->_NONE_
<org.apache.xpath.axes.NodeSequence: int getWhatToShow()> ->_NONE_
<android.app.ProgressDialog: int getProgress()> ->_NONE_
<android.media.RingtoneManager: android.net.Uri getValidRingtoneUriFromCursorAndClose(android.content.Context,android.database.Cursor)> ->_NONE_
<java.security.KeyPairGenerator: java.security.Provider getProvider()> ->_NONE_
<org.jivesoftware.smack.packet.Message: void setNoSave(boolean)> ->_NONE_
<android.app.Activity: void setIntent(android.content.Intent)> ->_NONE_
<android.media.videoeditor.MediaVideoItem: long getBoundaryBeginTime()> ->_NONE_
<net.oauth.OAuthMessage: java.util.List getParameters()> ->_NONE_
<org.apache.xpath.compiler.Lexer: int getTokenQueuePosFromMap(int)> ->_NONE_
<android.view.GLES20DisplayList: void setTop(int)> ->_NONE_
<org.apache.xml.utils.DOMBuilder: void setNextSibling(org.w3c.dom.Node)> ->_NONE_
<android.hardware.usb.UsbDevice: int getVendorId()> ->_NONE_
<android.animation.AnimatorSet: void setTarget(java.lang.Object)> ->_NONE_
<org.apache.harmony.xml.dom.DOMErrorImpl: java.lang.Object getRelatedException()> ->_NONE_
<android.renderscript.Allocation: void setFromFieldPacker(int,int,android.renderscript.FieldPacker)> ->_NONE_
<android.app.admin.DeviceAdminInfo: android.content.ComponentName getComponent()> ->_NONE_
<org.apache.xpath.functions.Function2Args: void setArg(org.apache.xpath.Expression,int)> ->_NONE_
<android.view.GLES20TextureLayer: android.view.HardwareCanvas getCanvas()> ->_NONE_
<android.support.v4.app.FragmentTabHost: void setup(android.content.Context,android.support.v4.app.FragmentManager,int)> ->_NONE_
<android.preference.Preference: int getTitleRes()> ->_NONE_
<java.net.JarURLConnection: java.util.jar.Manifest getManifest()> ->_NONE_
<android.preference.Preference: java.lang.CharSequence getSummary()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setClassName(java.lang.Object,java.lang.CharSequence)> ->_NONE_
<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.io.HttpMessageParser createResponseParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams)> ->_NONE_
<android.app.PendingIntent: android.app.PendingIntent getActivityAsUser(android.content.Context,int,android.content.Intent,int,android.os.Bundle,android.os.UserHandle)> ->_NONE_
<gov.nist.javax.sip.header.Event: void setEventId(java.lang.String)> ->_NONE_
<net.oauth.OAuthMessage: java.lang.String getAuthorizationHeader(java.lang.String)> ->_NONE_
<java.io.Reader: boolean ready()> ->_NONE_
<org.apache.http.cookie.params.CookieSpecParamBean: void setSingleHeader(boolean)> ->_NONE_
<java.lang.SecurityManager: void checkConnect(java.lang.String,int,java.lang.Object)> ->_NONE_
<java.security.ProtectionDomain: java.security.Principal[] getPrincipals()> ->_NONE_
<android.inputmethodservice.Keyboard: void setHorizontalGap(int)> ->_NONE_
<java.util.concurrent.ForkJoinPool: int getParallelism()> ->_NONE_
<android.opengl.GLLogWrapper: java.lang.String getLightPName(int)> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertPathImpl: org.apache.harmony.security.provider.cert.X509CertPathImpl getInstance(java.io.InputStream)> ->_NONE_
<android.webkit.CallbackProxy: void sendMessageToUiThreadSync(android.os.Message)> ->_NONE_
<android.content.res.ColorStateList: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: void setFromTag(java.lang.String)> ->_NONE_
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getUrlAndSpaceLegal()> ->_NONE_
<android.os.Parcel: void writeByte(byte)> ->_NONE_
<gov.nist.javax.sip.header.To: java.lang.String getTag()> ->_NONE_
<android.webkit.WebViewClient: void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError)> ->_NONE_
<gov.nist.javax.sip.stack.TLSMessageChannel: int getPeerPort()> ->_NONE_
<android.net.http.HttpAuthHeader: void parseHeader(java.lang.String)> ->_NONE_
<org.apache.james.mime4j.message.Header: org.apache.james.mime4j.field.Field getField(java.lang.String)> ->_NONE_
<jp.co.omronsoft.openwnn.EN.OpenWnnEngineEN: jp.co.omronsoft.openwnn.WnnWord getCandidate(int)> ->_NONE_
<java.security.UnresolvedPermission: java.security.cert.Certificate[] getUnresolvedCerts()> ->_NONE_
<android.renderscript.ScriptIntrinsicConvolve3x3: android.renderscript.Script$FieldID getFieldID_Input()> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getNamespaceForPrefix(java.lang.String)> ->_NONE_
<android.net.TrafficStats: int getThreadStatsTag()> ->_NONE_
<sun.misc.Unsafe: sun.misc.Unsafe getUnsafe()> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertImpl: java.lang.String getSigAlgOID()> ->_NONE_
<android.util.XmlPullAttributes: java.lang.String getAttributeValue(java.lang.String,java.lang.String)> ->_NONE_
<android.view.GLES20DisplayList: void setRight(int)> ->_NONE_
<android.gesture.GestureOverlayView: void setGestureStrokeType(int)> ->_NONE_
<jp.co.omronsoft.openwnn.TextCandidatesViewManager: int getViewType()> ->_NONE_
<android.os.Debug: void setFieldsOn(java.lang.Class,boolean)> ->_NONE_
<org.jivesoftware.smack.PacketWriter: void setOutputStream(java.io.OutputStream)> ->_NONE_
<android.telephony.ServiceState: void setEmergencyOnly(boolean)> ->_NONE_
<org.apache.xpath.axes.PredicatedNodeTest: int getProximityPosition(org.apache.xpath.XPathContext)> ->_NONE_
<gov.nist.javax.sip.header.ProxyAuthenticate: javax.sip.address.URI getURI()> ->_NONE_
<android.animation.Animator: void setTarget(java.lang.Object)> ->_NONE_
<org.ccil.cowan.tagsoup.AttributesImpl: int getIndex(java.lang.String,java.lang.String)> ->_NONE_
<android.media.videoeditor.MediaImageItem: int getWidthByAspectRatioAndHeight(int,int)> ->_NONE_
<android.app.AlertDialog: void setButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)> ->_NONE_
<gov.nist.core.LexerCore: java.text.ParseException createParseException()> ->_NONE_
<android.hardware.input.InputManager: android.view.InputDevice getInputDevice(int)> ->_NONE_
<android.drm.mobile1.DrmRightsManager: android.drm.mobile1.DrmRightsManager getInstance()> ->_NONE_
<android.view.GLES20DisplayList: void setCameraDistance(float)> ->_NONE_
<org.apache.xml.utils.URI: java.lang.String getSchemeSpecificPart()> ->_NONE_
<org.apache.xml.utils.NodeVector: void setTailSub1(int)> ->_NONE_
<android.widget.LinearLayout: void setHorizontalGravity(int)> ->_NONE_
<android.view.MotionEvent: int getActionIndex()> ->_NONE_
<org.apache.james.mime4j.field.address.parser.TokenMgrError: java.lang.String getMessage()> ->_NONE_
<org.apache.xalan.templates.ElemAttributeSet: org.apache.xml.utils.QName getName()> ->_NONE_
<java.io.SequenceInputStream: int read()> ->_NONE_
<java.security.cert.PKIXParameters: void setRevocationEnabled(boolean)> ->_NONE_
<org.apache.xalan.transformer.TransformerIdentityImpl: void unparsedEntityDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.parser.RouteParser: gov.nist.javax.sip.header.SIPHeader parse()> ->_NONE_
<gov.nist.javax.sip.stack.SIPClientTransaction: javax.sip.message.Request createCancel()> ->_NONE_
<android.widget.TextView: java.lang.CharSequence getText()> ->_NONE_
<android.view.ViewRootImpl: void dispatchFinishInputConnection(android.view.inputmethod.InputConnection)> ->_NONE_
<android.net.wifi.WifiInfo: void setMacAddress(java.lang.String)> ->_NONE_
<org.apache.http.auth.NTUserPrincipal: java.lang.String getDomain()> ->_NONE_
<android.widget.ScrollView: void setOverScrollMode(int)> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertImpl: long getNotBeforeInternal()> ->_NONE_
<android.os.MemoryFile: void writeBytes(byte[],int,int,int)> ->_NONE_
<android.graphics.BitmapRegionDecoder: int getWidth()> ->_NONE_
<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: void setUtranCellID3GPP(java.lang.String)> ->_NONE_
<org.xmlpull.v1.XmlPullParserException: java.lang.Throwable getDetail()> ->_NONE_
<android.media.AudioTrack: int setNotificationMarkerPosition(int)> ->_NONE_
<android.database.CursorWindow: boolean setNumColumns(int)> ->_NONE_
<gov.nist.javax.sip.header.ims.PAssociatedURI: void setValue(java.lang.String)> ->_NONE_
<java.net.URLConnection: java.lang.String getContentType()> ->_NONE_
<android.content.pm.VerifierDeviceIdentity: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.support.v4.app.BackStackRecord: int getId()> ->_NONE_
<org.apache.xpath.jaxp.XPathImpl: javax.xml.namespace.NamespaceContext getNamespaceContext()> ->_NONE_
<jp.co.omronsoft.openwnn.KeyboardView: boolean setShifted(boolean)> ->_NONE_
<android.bluetooth.BluetoothHeadset: java.util.List getDevicesMatchingConnectionStates(int[])> ->_NONE_
<android.app.ActivityManagerProxy: void closeSystemDialogs(java.lang.String)> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: javax.xml.transform.Transformer getTransformer()> ->_NONE_
<gov.nist.core.GenericObjectList: java.lang.String getIndentation()> ->_NONE_
<gov.nist.javax.sip.header.Challenge: java.lang.String getAlgorithm()> ->_NONE_
<android.graphics.Canvas: void setScreenDensity(int)> ->_NONE_
<android.accounts.ChooseTypeAndAccountActivity: java.lang.String[] getListOfDisplayableOptions(java.util.ArrayList)> ->_NONE_
<android.gesture.GestureOverlayView: void setGestureStrokeWidth(float)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: java.lang.String getNamespaceURI()> ->_NONE_
<android.content.res.Resources: boolean getBoolean(int)> ->_NONE_
<android.webkit.WebViewClassic: int getHistoryPictureWidth()> ->_NONE_
<android.location.Geofence: double getLongitude()> ->_NONE_
<android.net.http.SslCertificate: java.lang.String getValidNotBefore()> ->_NONE_
<org.apache.xml.serializer.SerializerBase: java.lang.String getMediaType()> ->_NONE_
<gov.nist.javax.sip.header.Credentials: void setScheme(java.lang.String)> ->_NONE_
<android.widget.TextView: boolean getHorizontallyScrolling()> ->_NONE_
<android.widget.RemoteViewsAdapter: android.content.Intent getRemoteViewsServiceIntent()> ->_NONE_
<org.jivesoftware.smack.ProtoBufAuthentication: java.lang.String authenticateAnonymously()> ->_NONE_
<android.media.JetPlayer: void setEventListener(android.media.JetPlayer$OnJetEventListener,android.os.Handler)> ->_NONE_
<org.apache.xalan.templates.ElemForEach: void setExpression(org.apache.xpath.Expression)> ->_NONE_
<org.apache.xml.dtm.ref.IncrementalSAXSource_Filter: void setDocumentLocator(org.xml.sax.Locator)> ->_NONE_
<android.database.AbstractCursor: int getType(int)> ->_NONE_
<libcore.io.OsConstants: boolean WCOREDUMP(int)> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: javax.sip.message.Request createPrack(javax.sip.message.Response)> ->_NONE_
<android.webkit.WebViewCore: void stopLoading()> ->_NONE_
<android.widget.ActivityChooserModel: int getActivityIndex(android.content.pm.ResolveInfo)> ->_NONE_
<org.apache.xalan.templates.ElemExtensionScript: int getXSLToken()> ->_NONE_
<android.net.ThrottleManager: long getPeriodStartTime(java.lang.String)> ->_NONE_
<org.apache.http.impl.conn.tsccm.BasicPoolEntry: void updateExpiry(long,java.util.concurrent.TimeUnit)> ->_NONE_
<android.util.Base64: java.lang.String encodeToString(byte[],int)> ->_NONE_
<android.view.inputmethod.InputMethodInfo: java.lang.String getPackageName()> ->_NONE_
<android.app.ProgressDialog: void setMessage(java.lang.CharSequence)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: java.util.Iterator getHeaders()> ->_NONE_
<org.apache.harmony.security.x501.AttributeTypeAndValue: org.apache.harmony.security.utils.ObjectIdentifier getType()> ->_NONE_
<javax.crypto.spec.PBEKeySpec: char[] getPassword()> ->_NONE_
<android.accounts.AccountManagerService: android.accounts.Account[] getAccounts(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.SIPDate: void setWkday(java.lang.String)> ->_NONE_
<android.preference.PreferenceScreen: android.widget.ListAdapter getRootAdapter()> ->_NONE_
<android.content.res.CompatibilityInfo: android.content.res.CompatibilityInfo$Translator getTranslator()> ->_NONE_
<android.widget.GridLayout: void setUseDefaultMargins(boolean)> ->_NONE_
<net.oauth.client.httpclient4.HttpMethodResponse: int getStatusCode()> ->_NONE_
<gov.nist.javax.sip.address.SipUri: void setIsdnSubAddress(java.lang.String)> ->_NONE_
<android.os.Bundle: void setClassLoader(java.lang.ClassLoader)> ->_NONE_
<java.net.ResponseCache: java.net.ResponseCache getDefault()> ->_NONE_
<org.apache.harmony.xml.dom.InnerNodeImpl: org.w3c.dom.NodeList getChildNodes()> ->_NONE_
<android.net.WebAddress: java.lang.String getHost()> ->_NONE_
<java.io.File: java.lang.String getParent()> ->_NONE_
<android.filterfw.core.OutputPort: void connectTo(android.filterfw.core.InputPort)> ->_NONE_
<java.util.UUID: long getLeastSignificantBits()> ->_NONE_
<org.apache.xalan.xslt.ObjectFactory: java.lang.ClassLoader findClassLoader()> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Oid: org.apache.harmony.security.asn1.ASN1Oid getInstanceForString()> ->_NONE_
<org.apache.harmony.security.x509.IssuingDistributionPoint: void dumpValue(java.lang.StringBuilder,java.lang.String)> ->_NONE_
<android.support.v4.app.ListFragment: void setListShown(boolean)> ->_NONE_
<android.preference.Preference: long getId()> ->_NONE_
<org.apache.http.message.HeaderGroup: org.apache.http.Header getFirstHeader(java.lang.String)> ->_NONE_
<android.test.InstrumentationTestRunner: android.os.Bundle getBundle()> ->_NONE_
<android.widget.TabHost: android.widget.TabWidget getTabWidget()> ->_NONE_
<android.media.videoeditor.MediaVideoItem: void getThumbnailList(int,int,long,long,int,int[],android.media.videoeditor.MediaItem$GetThumbnailListCallback)> ->_NONE_
<org.apache.http.protocol.BasicHttpContext: java.lang.Object getAttribute(java.lang.String)> ->_NONE_
<android.app.Activity: void setContentView(android.view.View)> ->_NONE_
<android.os.Handler: android.os.Message getPostMessage(java.lang.Runnable,java.lang.Object)> ->_NONE_
<android.widget.GridView: int getRequestedHorizontalSpacing()> ->_NONE_
<android.support.v4.widget.SimpleCursorAdapter: void setViewImage(android.widget.ImageView,java.lang.String)> ->_NONE_
<java.net.DatagramPacket: int getOffset()> ->_NONE_
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(android.content.Context,long,boolean)> ->_NONE_
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getSpaceLegal()> ->_NONE_
<android.speech.tts.BlockingAudioTrack: int write(byte[])> ->_NONE_
<java.security.KeyStore: java.lang.String getDefaultType()> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: void setMiddleName(java.lang.String)> ->_NONE_
<java.lang.Package: java.lang.String getName()> ->_NONE_
<org.apache.harmony.security.x509.DNParser: char getUTF8()> ->_NONE_
<android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs: android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo)> ->_NONE_
<android.media.AudioManager: void setMasterMute(boolean,int)> ->_NONE_
<android.view.accessibility.AccessibilityEvent: void setPackageName(java.lang.CharSequence)> ->_NONE_
<android.view.HardwareLayer: void setDisplayList(android.view.DisplayList)> ->_NONE_
<android.app.Fragment: android.os.Bundle getArguments()> ->_NONE_
<gov.nist.javax.sip.header.extensions.SessionExpires: int getExpires()> ->_NONE_
<java.io.LineNumberInputStream: void setLineNumber(int)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: int getActiveClientTransactionCount()> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertImpl: long getNotAfterInternal()> ->_NONE_
<org.apache.xpath.operations.UnaryOperation: org.apache.xpath.Expression getOperand()> ->_NONE_
<org.jivesoftware.smack.XMPPConnection: com.google.android.gsf.gtalkservice.rmq.Rmq2Manager getRmq2Manager()> ->_NONE_
<android.widget.ZoomControls: void setOnZoomInClickListener(android.view.View$OnClickListener)> ->_NONE_
<android.app.ActivityManagerProxy: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()> ->_NONE_
<java.net.PlainDatagramSocketImpl: java.lang.Object getOption(int)> ->_NONE_
<gov.nist.javax.sip.message.SIPRequest: void setMessageChannel(java.lang.Object)> ->_NONE_
<org.apache.xpath.functions.Function2Args: org.apache.xpath.Expression getArg1()> ->_NONE_
<org.apache.xalan.templates.ElemLiteralResult: java.lang.String getLocalName()> ->_NONE_
<android.widget.ViewAnimator: android.view.View getCurrentView()> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getNonce()> ->_NONE_
<android.os.MemoryFile: java.io.OutputStream getOutputStream()> ->_NONE_
<android.app.backup.SharedPreferencesBackupHelper: void writeNewStateDescription(android.os.ParcelFileDescriptor)> ->_NONE_
<android.database.CursorWrapper: int getPosition()> ->_NONE_
<android.animation.ValueAnimator: java.lang.Object getAnimatedValue(java.lang.String)> ->_NONE_
<org.apache.xml.serializer.WriterToASCI: void write(char[],int,int)> ->_NONE_
<android.graphics.Region: boolean getBounds(android.graphics.Rect)> ->_NONE_
<libcore.net.url.JarURLConnectionImpl: java.util.jar.JarFile getJarFile()> ->_NONE_
<org.javia.arity.DoubleStack: double[] getRe()> ->_NONE_
<android.view.animation.LayoutAnimationController: void setInterpolator(android.view.animation.Interpolator)> ->_NONE_
<android.widget.Editor: long getLastTouchOffsets()> ->_NONE_
<org.apache.xml.serializer.dom3.DOMLocatorImpl: int getUtf16Offset()> ->_NONE_
<java.net.URLConnection: long getDate()> ->_NONE_
<org.apache.commons.io.output.ProxyWriter: void write(char[])> ->_NONE_
<android.app.ActivityManagerProxy: int checkUriPermission(android.net.Uri,int,int,int)> ->_NONE_
<android.speech.tts.FileSynthesisCallback: int getMaxBufferSize()> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationHeader: void setCNonce(java.lang.String)> ->_NONE_
<jp.co.omronsoft.openwnn.EN.OpenWnnEngineEN: jp.co.omronsoft.openwnn.WnnWord getNextCandidate()> ->_NONE_
<android.filterfw.core.FrameFormat: int getNumberOfDimensions()> ->_NONE_
<android.media.RingtoneManager: android.net.Uri getValidRingtoneUri(android.content.Context)> ->_NONE_
<android.media.MediaPlayer: void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)> ->_NONE_
<org.apache.harmony.xml.parsers.DocumentBuilderImpl: void setEntityResolver(org.xml.sax.EntityResolver)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.NativeCrypto: java.lang.String[] getSupportedCipherSuites()> ->_NONE_
<gov.nist.javax.sip.header.Contact: boolean getWildCardFlag()> ->_NONE_
<org.apache.xalan.templates.ElemLiteralResult: void execute(org.apache.xalan.transformer.TransformerImpl)> ->_NONE_
<libcore.net.http.HttpConnection: java.net.Socket getSocket()> ->_NONE_
<android.os.UserManager: android.graphics.Bitmap getUserIcon(int)> ->_NONE_
<android.test.ActivityUnitTestCase: android.app.Activity getActivity()> ->_NONE_
<java.net.Socket: void connect(java.net.SocketAddress)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: org.xml.sax.EntityResolver getEntityResolver()> ->_NONE_
<org.apache.commons.io.FilenameUtils: java.lang.String getFullPath(java.lang.String)> ->_NONE_
<org.apache.xml.serializer.dom3.LSSerializerImpl: void setParameter(java.lang.String,java.lang.Object)> ->_NONE_
<android.telephony.CellSignalStrengthCdma: int getEvdoSnr()> ->_NONE_
<org.apache.harmony.security.asn1.DerOutputStream: void encodeSetOf(org.apache.harmony.security.asn1.ASN1SetOf)> ->_NONE_
<android.widget.ActivityChooserView: void setActivityChooserModel(android.widget.ActivityChooserModel)> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.ConnectionReuseStrategy getConnectionReuseStrategy()> ->_NONE_
<android.net.wifi.WifiStateMachine: int getMaxDhcpRetries()> ->_NONE_
<android.bluetooth.BluetoothHealth: java.util.List getConnectedDevices()> ->_NONE_
<gov.nist.javax.sip.address.GenericURI: java.lang.StringBuffer encode(java.lang.StringBuffer)> ->_NONE_
<android.test.AndroidTestRunner: void setInstrumentation(android.app.Instrumentation)> ->_NONE_
<org.apache.http.impl.client.AbstractAuthenticationHandler: java.util.Map parseChallenges(org.apache.http.Header[])> ->_NONE_
<javax.xml.parsers.SAXParser: void parse(java.lang.String,org.xml.sax.HandlerBase)> ->_NONE_
<org.apache.xpath.operations.Variable: org.apache.xml.utils.QName getQName()> ->_NONE_
<org.apache.xalan.templates.ElemForEach: org.apache.xpath.Expression getExpression()> ->_NONE_
<android.widget.RemoteViews: void setScrollPosition(int,int)> ->_NONE_
<android.support.v4.view.PagerAdapter: void startUpdate(android.view.ViewGroup)> ->_NONE_
<org.xmlpull.v1.sax2.Driver: java.lang.String getValue(int)> ->_NONE_
<org.jivesoftware.smack.util.ObservableWriter: void write(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.DTMException: java.lang.String getLocationAsString()> ->_NONE_
<org.apache.http.impl.io.ChunkedOutputStream: void flushCacheWithAppend(byte[],int,int)> ->_NONE_
<android.widget.TextView: void replaceText_internal(int,int,java.lang.CharSequence)> ->_NONE_
<java.net.Socks4Message: java.lang.String getUserId()> ->_NONE_
<org.apache.xml.dtm.ref.DTMTreeWalker: org.xml.sax.ContentHandler getcontentHandler()> ->_NONE_
<android.os.CommonTimeConfig: void setServerDiedListener(android.os.CommonTimeConfig$OnServerDiedListener)> ->_NONE_
<javax.xml.transform.dom.DOMSource: void setSystemId(java.lang.String)> ->_NONE_
<java.text.MessageFormat: void setFormats(java.text.Format[])> ->_NONE_
<gov.nist.javax.sip.stack.TLSMessageChannel: void run()> ->_NONE_
<android.app.SearchableInfo: android.content.Context getProviderContext(android.content.Context,android.content.Context)> ->_NONE_
<android.bluetooth.BluetoothInputDevice: boolean sendData(android.bluetooth.BluetoothDevice,java.lang.String)> ->_NONE_
<android.text.style.QuoteSpan: int getColor()> ->_NONE_
<android.webkit.CallbackProxy: void doUpdateVisitedHistory(java.lang.String,boolean)> ->_NONE_
<android.widget.GridView: android.widget.Adapter getAdapter()> ->_NONE_
<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.javax.sip.header.SIPHeader parse()> ->_NONE_
<libcore.io.Posix: int pwrite(java.io.FileDescriptor,byte[],int,int,long)> ->_NONE_
<android.media.AudioService: void setMasterMute(boolean,int,android.os.IBinder)> ->_NONE_
<android.animation.ValueAnimator: int getRepeatMode()> ->_NONE_
<android.content.Intent: android.content.Intent setPackage(java.lang.String)> ->_NONE_
<android.util.SparseLongArray: long get(int)> ->_NONE_
<jp.co.omronsoft.openwnn.DefaultSoftKeyboard: int getKeyboardType()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: int getClientTransactionTableSize()> ->_NONE_
<java.security.Provider: java.security.Provider$Service getService(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.http.entity.BasicHttpEntity: void writeTo(java.io.OutputStream)> ->_NONE_
<android.net.ProxyProperties: java.net.InetSocketAddress getSocketAddress()> ->_NONE_
<org.apache.http.entity.HttpEntityWrapper: org.apache.http.Header getContentEncoding()> ->_NONE_
<jp.co.omronsoft.openwnn.EN.DefaultSoftKeyboardEN: int getShiftKeyState(android.view.inputmethod.EditorInfo)> ->_NONE_
<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)> ->_NONE_
<org.apache.harmony.security.asn1.ASN1UTCTime: org.apache.harmony.security.asn1.ASN1UTCTime getInstance()> ->_NONE_
<android.media.MediaFormat: void setFloat(java.lang.String,float)> ->_NONE_
<org.apache.xalan.templates.ElemTextLiteral: void setChars(char[])> ->_NONE_
<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)> ->_NONE_
<android.net.SntpClient: long read32(byte[],int)> ->_NONE_
<android.view.View: int getRawTextDirection()> ->_NONE_
<android.widget.ListPopupWindow: void setSoftInputMode(int)> ->_NONE_
<java.security.AlgorithmParameters: java.lang.String getAlgorithm()> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CRLImpl: byte[] getSignature()> ->_NONE_
<android.net.http.ErrorStrings: java.lang.String getString(int,android.content.Context)> ->_NONE_
<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()> ->_NONE_
<org.apache.harmony.xml.dom.DocumentImpl: void setDocumentURI(java.lang.String)> ->_NONE_
<org.apache.xpath.functions.FuncBoolean: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<org.apache.commons.codec.binary.BinaryCodec: byte[] encode(byte[])> ->_NONE_
<android.widget.QuickContactBadge: void setMode(int)> ->_NONE_
<android.view.GLES20Canvas: void getMatrix(android.graphics.Matrix)> ->_NONE_
<org.apache.http.impl.io.HttpResponseWriter: void writeHeadLine(org.apache.http.HttpMessage)> ->_NONE_
<android.bluetooth.BluetoothInputDevice: boolean setPriority(android.bluetooth.BluetoothDevice,int)> ->_NONE_
<android.preference.MultiSelectListPreference: boolean[] getSelectedItems()> ->_NONE_
<android.text.style.SubscriptSpan: void updateDrawState(android.text.TextPaint)> ->_NONE_
<org.apache.http.impl.client.RoutedRequest: org.apache.http.conn.routing.HttpRoute getRoute()> ->_NONE_
<org.apache.xpath.axes.OneStepIterator: int getNextNode()> ->_NONE_
<android.opengl.GLLogWrapper: java.lang.String getShadeModel(int)> ->_NONE_
<android.view.KeyEvent: long getDownTime()> ->_NONE_
<org.apache.xpath.axes.NodeSequence: int getRoot()> ->_NONE_
<java.nio.DirectByteBuffer: void get(float[],int,int)> ->_NONE_
<android.opengl.GLLogWrapper: java.lang.String getHintTarget(int)> ->_NONE_
<javax.xml.parsers.SAXParserFactory: void setValidating(boolean)> ->_NONE_
<android.bluetooth.BluetoothAdapter: java.lang.String getName()> ->_NONE_
<android.graphics.drawable.AnimatedRotateDrawable: boolean setVisible(boolean,boolean)> ->_NONE_
<android.content.SyncManager: void cancelActiveSync(android.accounts.Account,int,java.lang.String)> ->_NONE_
<org.jivesoftware.smack.provider.ProviderManager: java.util.Iterator getExtensionProviders()> ->_NONE_
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getCapacity()> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: org.xml.sax.ext.LexicalHandler getLexicalHandler()> ->_NONE_
<android.net.nsd.NsdServiceInfo: android.net.nsd.DnsSdTxtRecord getTxtRecord()> ->_NONE_
<android.graphics.drawable.BitmapDrawable: void setDither(boolean)> ->_NONE_
<org.apache.http.params.DefaultedHttpParams: java.util.Set getLocalNames()> ->_NONE_
<gov.nist.javax.sip.parser.ParserFactory: gov.nist.javax.sip.parser.HeaderParser createParser(java.lang.String)> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: void setCdataSectionElements(java.util.Vector)> ->_NONE_
<android.telephony.CellBroadcastMessage: java.lang.String getSpokenDateString(android.content.Context)> ->_NONE_
<java.nio.charset.CharsetDecoderICU: int getArray(java.nio.CharBuffer)> ->_NONE_
<org.jivesoftware.smack.ProtoBufAuthentication: java.util.Map getServerSettings()> ->_NONE_
<android.preference.PreferenceManager: java.lang.String getDefaultSharedPreferencesName(android.content.Context)> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: int getIndentAmount()> ->_NONE_
<android.content.Intent: android.content.Intent getIntentOld(java.lang.String)> ->_NONE_
<android.drm.mobile1.DrmConstraintInfo: java.util.Date getEndDate()> ->_NONE_
<java.lang.ref.FinalizerReference: java.lang.Object get()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.DigitalSignature: void setSHA(byte[])> ->_NONE_
<android.animation.ValueAnimator: void setEvaluator(android.animation.TypeEvaluator)> ->_NONE_
<org.apache.xpath.axes.SelfIteratorNoPredicate: int getLastPos(org.apache.xpath.XPathContext)> ->_NONE_
<android.content.ContentProvider: void setWritePermission(java.lang.String)> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: void doLoad(org.jivesoftware.smack.XMPPConnection,java.lang.String)> ->_NONE_
<org.apache.xpath.Expression: java.lang.String getPublicId()> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: org.apache.xml.serializer.NamespaceMappings getNamespaceMappings()> ->_NONE_
<org.apache.xalan.processor.StylesheetHandler: org.w3c.dom.Node getOriginatingNode()> ->_NONE_
<org.apache.xalan.templates.Stylesheet: int getIncludeCount()> ->_NONE_
<android.view.KeyEvent: int getModifiers()> ->_NONE_
<android.app.ApplicationPackageManager: java.lang.CharSequence getCachedString(android.app.ApplicationPackageManager$ResourceName)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: void setEnableSessionCreation(boolean)> ->_NONE_
<android.view.inputmethod.EditorInfo: void dump(android.util.Printer,java.lang.String)> ->_NONE_
<javax.xml.transform.stream.StreamSource: void setInputStream(java.io.InputStream)> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String encodeBody()> ->_NONE_
<org.apache.xpath.objects.XString: int getType()> ->_NONE_
<libcore.net.http.HttpDate: java.util.Date parse(java.lang.String)> ->_NONE_
<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String getOutputProperty(java.lang.String)> ->_NONE_
<android.app.ApplicationPackageManager: java.util.List getAllPermissionGroups(int)> ->_NONE_
<org.jivesoftware.smack.util.Base64: java.lang.String encodeBytes(byte[],int,int)> ->_NONE_
<gov.nist.javax.sip.header.ims.PServedUser: void setValue(java.lang.String)> ->_NONE_
<java.nio.SelectionKeyImpl: void setReadyOps(int)> ->_NONE_
<android.preference.SeekBarPreference: void setMax(int)> ->_NONE_
<android.bluetooth.BluetoothTetheringDataTracker: android.net.NetworkInfo getNetworkInfo()> ->_NONE_
<org.apache.xml.utils.SecuritySupport: org.apache.xml.utils.SecuritySupport getInstance()> ->_NONE_
<android.app.Dialog: android.app.Activity getOwnerActivity()> ->_NONE_
<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme getScheme(org.apache.http.HttpHost)> ->_NONE_
<android.support.v4.view.ViewConfigurationCompatFroyo: int getScaledPagingTouchSlop(android.view.ViewConfiguration)> ->_NONE_
<java.security.cert.CertStore: java.security.Provider getProvider()> ->_NONE_
<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)> ->_NONE_
<gov.nist.javax.sip.header.ims.PAssertedIdentity: void setValue(java.lang.String)> ->_NONE_
<android.bluetooth.BluetoothHeadset: int getPriority(android.bluetooth.BluetoothDevice)> ->_NONE_
<org.apache.http.params.HttpConnectionParams: void setLinger(org.apache.http.params.HttpParams,int)> ->_NONE_
<org.apache.xpath.axes.UnionPathIterator: void setRoot(int,java.lang.Object)> ->_NONE_
<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)> ->_NONE_
<gov.nist.core.Token: int getTokenType()> ->_NONE_
<java.text.StringCharacterIterator: int getBeginIndex()> ->_NONE_
<android.renderscript.Type: int getCount()> ->_NONE_
<org.apache.xalan.transformer.KeyTable: java.util.Hashtable getRefsTable()> ->_NONE_
<junit.runner.BaseTestRunner: boolean useReloadingTestSuiteLoader()> ->_NONE_
<android.renderscript.Type: int getZ()> ->_NONE_
<android.view.ActionMode: boolean getTitleOptionalHint()> ->_NONE_
<javax.net.ssl.SSLEngine: java.lang.String getPeerHost()> ->_NONE_
<android.renderscript.Type: int getY()> ->_NONE_
<android.renderscript.Type: int getX()> ->_NONE_
<android.support.v4.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)> ->_NONE_
<org.apache.xalan.templates.XUnresolvedVariableSimple: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry createEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,org.apache.http.conn.ClientConnectionOperator)> ->_NONE_
<android.mtp.MtpDatabase: android.mtp.MtpPropertyList getObjectPropertyList(long,int,long,int,int)> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.UserTokenHandler getUserTokenHandler()> ->_NONE_
<android.webkit.MockGeolocation: void setPosition(double,double,double)> ->_NONE_
<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)> ->_NONE_
<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)> ->_NONE_
<android.widget.AutoCompleteTextView: java.lang.CharSequence getCompletionHint()> ->_NONE_
<android.view.inputmethod.InputConnectionWrapper: boolean setComposingText(java.lang.CharSequence,int)> ->_NONE_
<gov.nist.javax.sip.header.extensions.Join: gov.nist.javax.sip.header.CallIdentifier getCallIdentifer()> ->_NONE_
<android.widget.ViewAnimator: int getBaseline()> ->_NONE_
<android.app.admin.DevicePolicyManager: int getPasswordMaximumLength(int)> ->_NONE_
<java.net.Socket: boolean getKeepAlive()> ->_NONE_
<org.apache.xpath.functions.SecuritySupport12: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)> ->_NONE_
<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader)> ->_NONE_
<org.jivesoftware.smack.XMPPConnection: org.jivesoftware.smack.SASLAuthentication getSASLAuthentication()> ->_NONE_
<android.webkit.WebViewCore: void setMockGeolocationPermission(boolean)> ->_NONE_
<net.oauth.OAuth: java.lang.String formEncode(java.lang.Iterable)> ->_NONE_
<android.test.mock.MockResources: java.lang.CharSequence[] getTextArray(int)> ->_NONE_
<android.os.CommonTimeConfig: boolean getAutoDisable()> ->_NONE_
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothDevice getRemoteDevice(byte[])> ->_NONE_
<gov.nist.javax.sip.header.Via: gov.nist.core.NameValueList getViaParms()> ->_NONE_
<android.preference.PreferenceManager: android.content.SharedPreferences$Editor getEditor()> ->_NONE_
<android.widget.TabWidget: android.view.View getChildTabViewAt(int)> ->_NONE_
<gov.nist.javax.sip.header.RSeq: int getSequenceNumber()> ->_NONE_
<android.view.View: void setHorizontalScrollBarEnabled(boolean)> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPResponse getLastResponse()> ->_NONE_
<android.support.v4.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int)> ->_NONE_
<android.telephony.TelephonyManager: java.lang.String getCdmaEriText()> ->_NONE_
<android.content.AsyncQueryHandler: void startDelete(int,java.lang.Object,android.net.Uri,java.lang.String,java.lang.String[])> ->_NONE_
<android.app.ActivityManagerProxy: int startActivityIntentSender(android.app.IApplicationThread,android.content.IntentSender,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)> ->_NONE_
<jp.co.omronsoft.openwnn.TextCandidatesViewManager: int getCandidateMinimumWidth()> ->_NONE_
<android.webkit.WebSettingsClassic: boolean getAllowUniversalAccessFromFileURLs()> ->_NONE_
<android.view.View: android.content.Context getContext()> ->_NONE_
<android.view.View: android.view.Display getDisplay()> ->_NONE_
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByType(java.lang.String)> ->_NONE_
<android.graphics.Paint: int getTextWidths(char[],int,int,float[])> ->_NONE_
<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: void setCI3GPP2(java.lang.String)> ->_NONE_
<android.support.v4.view.PagerAdapter: void startUpdate(android.view.View)> ->_NONE_
<org.apache.xpath.jaxp.XPathFactoryImpl: void setXPathFunctionResolver(javax.xml.xpath.XPathFunctionResolver)> ->_NONE_
<org.apache.http.message.AbstractHttpMessage: void setParams(org.apache.http.params.HttpParams)> ->_NONE_
<android.content.ContentResolver: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)> ->_NONE_
<android.accounts.AccountManagerService: long getExtrasIdLocked(android.database.sqlite.SQLiteDatabase,long,java.lang.String)> ->_NONE_
<android.hardware.input.KeyboardLayout: java.lang.String getCollection()> ->_NONE_
<android.widget.OverScroller: int getCurrY()> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: void setField(java.lang.String,java.lang.String,boolean)> ->_NONE_
<android.widget.OverScroller: int getCurrX()> ->_NONE_
<org.kxml2.io.KXmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.service.wallpaper.WallpaperService: void setCallbackLooper(android.os.Looper)> ->_NONE_
<android.text.SpannableStringBuilder: int getSpanFlags(java.lang.Object)> ->_NONE_
<android.telephony.cdma.CdmaSmsCbProgramData: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.net.http.HttpAuthHeader: void parseParameters(java.lang.String)> ->_NONE_
<android.net.wifi.WifiNative: boolean setDeviceName(java.lang.String)> ->_NONE_
<org.jivesoftware.smack.util.PacketParserUtils: org.jivesoftware.smack.packet.PacketExtension parsePacketExtension(com.google.common.io.protocol.ProtoBuf)> ->_NONE_
<android.widget.Spinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getLocalName()> ->_NONE_
<android.net.http.Headers: java.lang.String getWwwAuthenticate()> ->_NONE_
<javax.crypto.ExemptionMechanism: java.lang.String getName()> ->_NONE_
<java.security.cert.X509Certificate: java.util.Collection getSubjectAlternativeNames()> ->_NONE_
<android.webkit.CallbackProxy: java.lang.String getJsDialogTitle(java.lang.String)> ->_NONE_
<java.util.logging.LogRecord: java.lang.String getResourceBundleName()> ->_NONE_
<android.webkit.AccessibilityInjectorFallback: int getAxisForGranularity(int)> ->_NONE_
<org.apache.http.util.EntityUtils: void updateEntity(org.apache.http.HttpResponse,org.apache.http.HttpEntity)> ->_NONE_
<javax.sql.StatementEvent: java.sql.PreparedStatement getStatement()> ->_NONE_
<org.jivesoftware.smackx.provider.MUCUserProvider: org.jivesoftware.smackx.packet.MUCUser$Destroy parseDestroy(org.xmlpull.v1.XmlPullParser)> ->_NONE_
<android.mtp.MtpDatabase: int getNumObjects(int,int,int)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: int getExpandedTypeID(int)> ->_NONE_
<libcore.io.BlockGuardOs: int pwrite(java.io.FileDescriptor,byte[],int,int,long)> ->_NONE_
<org.jivesoftware.smack.RosterEntry: org.jivesoftware.smack.packet.RosterPacket$ItemStatus getStatus()> ->_NONE_
<gov.nist.core.LexerCore: int getPtr()> ->_NONE_
<org.apache.harmony.xml.dom.EntityImpl: java.lang.String getNotationName()> ->_NONE_
<org.apache.harmony.security.asn1.ASN1GeneralizedTime: void encodeContent(org.apache.harmony.security.asn1.BerOutputStream)> ->_NONE_
<java.io.EmulatedFieldsForLoading: double get(java.lang.String,double)> ->_NONE_
<org.jivesoftware.smack.Chat: void sendMessage(java.lang.String)> ->_NONE_
<org.apache.http.params.AbstractHttpParams: boolean getBooleanParameter(java.lang.String,boolean)> ->_NONE_
<android.bluetooth.BluetoothInputDevice: int getConnectionState(android.bluetooth.BluetoothDevice)> ->_NONE_
<org.apache.xpath.operations.Variable: void setIndex(int)> ->_NONE_
<java.sql.BatchUpdateException: int[] getUpdateCounts()> ->_NONE_
<android.net.wifi.ScanResult: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<gov.nist.javax.sip.stack.HandshakeCompletedListenerImpl: javax.net.ssl.HandshakeCompletedEvent getHandshakeCompletedEvent()> ->_NONE_
<org.apache.harmony.security.pkcs7.ContentInfo: org.apache.harmony.security.pkcs7.SignedData getSignedData()> ->_NONE_
<android.text.format.Time: void set(android.text.format.Time)> ->_NONE_
<android.widget.TextView: boolean setFrame(int,int,int,int)> ->_NONE_
<org.xml.sax.InputSource: void setEncoding(java.lang.String)> ->_NONE_
<android.renderscript.Allocation: int getIDSafe()> ->_NONE_
<android.filterfw.core.Frame: void setData(java.nio.ByteBuffer)> ->_NONE_
<android.widget.CompoundButton: void setChecked(boolean)> ->_NONE_
<android.inputmethodservice.Keyboard: int getShiftKeyIndex()> ->_NONE_
<java.text.NumberFormat: java.lang.Object parseObject(java.lang.String,java.text.ParsePosition)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void getBoundsInScreen(java.lang.Object,android.graphics.Rect)> ->_NONE_
<android.widget.RemoteViews: int getLayoutId()> ->_NONE_
<android.telephony.SmsMessage: int getIndexOnSim()> ->_NONE_
<gov.nist.javax.sip.header.MimeVersion: int getMinorVersion()> ->_NONE_
<android.widget.GridView: void setVerticalSpacing(int)> ->_NONE_
<java.nio.LongArrayBuffer: long get(int)> ->_NONE_
<android.renderscript.RSSurfaceView: void setRenderScriptGL(android.renderscript.RenderScriptGL)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: java.lang.String getName()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: java.lang.String getNodeNameX(int)> ->_NONE_
<android.graphics.drawable.GradientDrawable: void setDither(boolean)> ->_NONE_
<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()> ->_NONE_
<javax.xml.datatype.XMLGregorianCalendar: void setTime(int,int,int)> ->_NONE_
<org.xml.sax.helpers.LocatorImpl: void setColumnNumber(int)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setCurrentItemIndex(int)> ->_NONE_
<android.hardware.Camera: android.hardware.Camera$Parameters getParameters()> ->_NONE_
<org.apache.xalan.templates.RedundentExprEliminator: org.apache.xalan.templates.ElemTemplateElement getPrevElementWithinContext(org.apache.xalan.templates.ElemTemplateElement)> ->_NONE_
<android.app.SearchableInfo: int getVoiceLanguageId()> ->_NONE_
<android.preference.PreferenceActivity: java.util.List getHeaders()> ->_NONE_
<android.app.ContextImpl: void setFilePermissionsFromMode(java.lang.String,int,int)> ->_NONE_
<android.support.v4.view.ViewCompat: void setLayerType(android.view.View,int,android.graphics.Paint)> ->_NONE_
<java.lang.StackTraceElement: java.lang.String getMethodName()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setLongClickable(java.lang.Object,boolean)> ->_NONE_
<android.media.videoeditor.Transition: java.lang.String getFilename()> ->_NONE_
<android.net.nsd.NsdServiceInfo: void setTxtRecord(android.net.nsd.DnsSdTxtRecord)> ->_NONE_
<android.app.ActivityManagerProxy: int checkGrantUriPermission(int,java.lang.String,android.net.Uri,int)> ->_NONE_
<android.widget.CompoundButton: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)> ->_NONE_
<org.apache.commons.io.output.LockableFileWriter: void write(int)> ->_NONE_
<org.apache.xpath.compiler.Compiler: int getWhatToShow(int)> ->_NONE_
<android.os.Looper: android.os.Looper getMainLooper()> ->_NONE_
<org.apache.http.params.BasicHttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialogErrorEvent: int getErrorID()> ->_NONE_
<org.apache.xml.utils.SecuritySupport12: boolean getFileExists(java.io.File)> ->_NONE_
<org.jivesoftware.smack.packet.Presence: void setMode(org.jivesoftware.smack.packet.Presence$Mode)> ->_NONE_
<android.content.res.TypedArray: java.lang.String getNonResourceString(int)> ->_NONE_
<org.apache.james.mime4j.field.datetime.parser.ParseException: java.lang.String getMessage()> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: void setAvatar(byte[])> ->_NONE_
<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.Effect parseEffect(org.xmlpull.v1.XmlPullParser,android.media.videoeditor.MediaItem)> ->_NONE_
<gov.nist.javax.sip.header.SIPDateHeader: void setDate(java.util.Calendar)> ->_NONE_
<javax.xml.parsers.SAXParser: void parse(java.lang.String,org.xml.sax.helpers.DefaultHandler)> ->_NONE_
<org.apache.xpath.functions.FunctionDef1Arg: int getArg0AsNode(org.apache.xpath.XPathContext)> ->_NONE_
<android.widget.DatePicker: long getMaxDate()> ->_NONE_
<net.oauth.OAuthMessage: java.lang.String getSignatureMethod()> ->_NONE_
<android.text.TextLine: void set(android.text.TextPaint,java.lang.CharSequence,int,int,int,android.text.Layout$Directions,boolean,android.text.Layout$TabStops)> ->_NONE_
<org.jivesoftware.smack.PacketReader: long getLastActive()> ->_NONE_
<android.view.Window: void setWindowAnimations(int)> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: java.lang.String getTypeNamespace()> ->_NONE_
<android.net.NetworkTemplate: int getMatchRule()> ->_NONE_
<android.net.http.AndroidHttpClient: org.apache.http.params.HttpParams getParams()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: void setLogStackTraceOnMessageSend(boolean)> ->_NONE_
<java.lang.Package: java.lang.String getImplementationVersion()> ->_NONE_
<android.test.InstrumentationUtils: int getMenuIdentifier(java.lang.Class,java.lang.String)> ->_NONE_
<android.view.ViewDebug: void writeEntry(java.io.BufferedWriter,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)> ->_NONE_
<android.support.v4.widget.ScrollerCompat: float getCurrVelocity()> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ToHeader getTo()> ->_NONE_
<android.widget.GridLayout: int getMeasurementIncludingMargin(android.view.View,boolean)> ->_NONE_
<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler getContentHandler()> ->_NONE_
<org.apache.james.mime4j.field.address.parser.SimpleCharStream: int getEndColumn()> ->_NONE_
<java.util.regex.PatternSyntaxException: java.lang.String getMessage()> ->_NONE_
<org.apache.xpath.functions.SecuritySupport: java.lang.ClassLoader getSystemClassLoader()> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: java.io.Writer getWriter()> ->_NONE_
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor)> ->_NONE_
<android.widget.RatingBar: int getNumStars()> ->_NONE_
<android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)> ->_NONE_
<java.lang.StackTraceElement: java.lang.String getFileName()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: int getRetransmitTimer()> ->_NONE_
<android.media.AudioService: int setBluetoothA2dpDeviceConnectionState(android.bluetooth.BluetoothDevice,int)> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationHeader: void setIntegrityProtected(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.WWWAuthenticate: javax.sip.address.URI getURI()> ->_NONE_
<android.mtp.MtpObjectInfo: int getProtectionStatus()> ->_NONE_
<android.widget.ProgressBar: void setInterpolator(android.view.animation.Interpolator)> ->_NONE_
<org.jivesoftware.smack.packet.Session: java.lang.String getChildElementXML()> ->_NONE_
<gov.nist.javax.sip.header.ParametersHeader: void setMultiParameter(gov.nist.core.NameValue)> ->_NONE_
<android.content.Intent: long[] getLongArrayExtra(java.lang.String)> ->_NONE_
<android.content.res.Resources: void finishPreloading()> ->_NONE_
<java.math.MathContext: java.math.RoundingMode getRoundingMode()> ->_NONE_
<android.net.wifi.WifiInfo: void setHiddenSSID(boolean)> ->_NONE_
<android.app.backup.BackupDataOutput: int writeEntityData(byte[],int)> ->_NONE_
<android.net.wifi.WifiStateMachine: void setWifiApState(int)> ->_NONE_
<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()> ->_NONE_
<android.support.v4.app.ListFragment: android.widget.ListView getListView()> ->_NONE_
<android.hardware.Sensor: int getVersion()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: java.lang.String getDocumentTypeDeclarationSystemIdentifier()> ->_NONE_
<javax.crypto.SecretKeyFactory: java.security.spec.KeySpec getKeySpec(javax.crypto.SecretKey,java.lang.Class)> ->_NONE_
<org.apache.http.message.AbstractHttpMessage: void setHeader(java.lang.String,java.lang.String)> ->_NONE_
<android.location.LocationManager: void requestSingleUpdate(java.lang.String,android.app.PendingIntent)> ->_NONE_
<android.webkit.WebIconDatabase: android.webkit.WebIconDatabase getInstance()> ->_NONE_
<android.preference.ListPreference: java.lang.CharSequence getSummary()> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Explicit: void encodeContent(org.apache.harmony.security.asn1.BerOutputStream)> ->_NONE_
<android.test.mock.MockContext: int getWallpaperDesiredMinimumWidth()> ->_NONE_
<android.accounts.GrantCredentialsPermissionActivity: void setAccountAuthenticatorResult(android.os.Bundle)> ->_NONE_
<android.media.videoeditor.MediaImageItem: void setGeneratedImageClip(java.lang.String)> ->_NONE_
<android.support.v4.app.BackStackRecord: int getTransitionStyle()> ->_NONE_
<java.net.HttpCookie: java.lang.String getPath()> ->_NONE_
<android.support.v4.view.AccessibilityDelegateCompat: java.lang.Object getBridge()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore: java.security.cert.Certificate getCertificate(java.lang.String)> ->_NONE_
<org.apache.http.util.VersionInfo: java.lang.String getUserAgent(java.lang.String,java.lang.String,java.lang.Class)> ->_NONE_
<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String,java.security.Provider)> ->_NONE_
<java.io.OutputStream: void write(byte[],int,int)> ->_NONE_
<android.graphics.drawable.ShapeDrawable: boolean getPadding(android.graphics.Rect)> ->_NONE_
<android.test.mock.MockContext: java.lang.Object getSystemService(java.lang.String)> ->_NONE_
<javax.xml.datatype.FactoryFinder: java.lang.ClassLoader findClassLoader()> ->_NONE_
<android.renderscript.Matrix2f: float get(int,int)> ->_NONE_
<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)> ->_NONE_
<android.media.MediaPlayer: void setOnBufferingUpdateListener(android.media.MediaPlayer$OnBufferingUpdateListener)> ->_NONE_
<android.widget.SearchView: java.lang.CharSequence getDecoratedHint(java.lang.CharSequence)> ->_NONE_
<org.apache.xpath.XPathContext: int getDTMIdentity(org.apache.xml.dtm.DTM)> ->_NONE_
<android.view.View: int getOverScrollMode()> ->_NONE_
<android.content.ContentService: java.util.List getCurrentSyncs()> ->_NONE_
<javax.xml.transform.stream.StreamSource: java.lang.String getPublicId()> ->_NONE_
<android.app.ActivityManagerProxy: void activityStopped(android.os.IBinder,android.os.Bundle,android.graphics.Bitmap,java.lang.CharSequence)> ->_NONE_
<android.support.v4.app.BackStackRecord: android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment)> ->_NONE_
<android.app.Activity: android.view.Window getWindow()> ->_NONE_
<java.security.ProtectionDomain: java.lang.ClassLoader getClassLoader()> ->_NONE_
<android.widget.AutoCompleteTextView: void setDropDownDismissedOnCompletion(boolean)> ->_NONE_
<org.apache.james.mime4j.field.DelegatingFieldParser: void setFieldParser(java.lang.String,org.apache.james.mime4j.field.FieldParser)> ->_NONE_
<org.apache.xalan.templates.ElemAttributeSet: java.lang.String getNodeName()> ->_NONE_
<android.graphics.drawable.ClipDrawable: int getOpacity()> ->_NONE_
<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)> ->_NONE_
<java.net.ServerSocket: int getLocalPort()> ->_NONE_
<android.location.LocationManager: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)> ->_NONE_
<android.widget.Scroller: int getCurrY()> ->_NONE_
<android.widget.Scroller: int getCurrX()> ->_NONE_
<android.support.v4.view.PagerTabStrip: boolean getDrawFullUnderline()> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: java.security.Principal getLocalPrincipal()> ->_NONE_
<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)> ->_NONE_
<android.content.ContextWrapper: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)> ->_NONE_
<android.net.http.SslError: java.lang.String getUrl()> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: int getCurrentTemplateElementsCount()> ->_NONE_
<android.text.DynamicLayout: int getEllipsisCount(int)> ->_NONE_
<android.telephony.CellInfoCdma: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.telephony.ServiceState: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.content.pm.ParceledListSlice: void setLastSlice(boolean)> ->_NONE_
<android.widget.TextView: float getTextSize()> ->_NONE_
<java.lang.RealToString: java.lang.RealToString getInstance()> ->_NONE_
<android.accounts.AccountManager: void setPassword(android.accounts.Account,java.lang.String)> ->_NONE_
<android.view.View: float getScaleY()> ->_NONE_
<android.view.View: float getScaleX()> ->_NONE_
<android.webkit.WebViewCore: void access$4700(android.webkit.WebViewCore,int,java.lang.String)> ->_NONE_
<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.TemplateList getTemplateListComposed()> ->_NONE_
<android.net.http.SslCertificate: java.util.Date getValidNotBeforeDate()> ->_NONE_
<android.widget.ViewAnimator: void setInAnimation(android.view.animation.Animation)> ->_NONE_
<java.io.EmulatedFieldsForLoading: byte get(java.lang.String,byte)> ->_NONE_
<gov.nist.javax.sip.header.Challenge: void setScheme(java.lang.String)> ->_NONE_
<android.animation.PropertyValuesHolder: java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class)> ->_NONE_
<android.text.Selection: void setSelection(android.text.Spannable,int)> ->_NONE_
<android.telephony.ServiceState: java.lang.String getOperatorAlphaShort()> ->_NONE_
<java.util.logging.Logger: void setLevel(java.util.logging.Level)> ->_NONE_
<java.net.URLConnection: java.net.FileNameMap getFileNameMap()> ->_NONE_
<org.apache.http.impl.io.AbstractSessionInputBuffer: int readLine(org.apache.http.util.CharArrayBuffer)> ->_NONE_
<java.net.URLConnection: void setAllowUserInteraction(boolean)> ->_NONE_
<android.text.StaticLayout: int getLineDescent(int)> ->_NONE_
<android.widget.ExpandableListView: void setChildIndicatorBounds(int,int)> ->_NONE_
<android.media.AudioService: void setStreamMute(int,boolean,android.os.IBinder)> ->_NONE_
<org.apache.harmony.xml.dom.InnerNodeImpl: org.w3c.dom.Node getFirstChild()> ->_NONE_
<android.renderscript.Matrix3f: float get(int,int)> ->_NONE_
<org.apache.http.conn.routing.RouteTracker: int getHopCount()> ->_NONE_
<android.support.v4.view.ViewCompat: int getOverScrollMode(android.view.View)> ->_NONE_
<org.apache.harmony.xml.dom.DocumentImpl: java.lang.String getDocumentURI()> ->_NONE_
<org.apache.xalan.transformer.KeyManager: org.apache.xpath.objects.XNodeSet getNodeSetDTMByKey(org.apache.xpath.XPathContext,int,org.apache.xml.utils.QName,org.apache.xml.utils.XMLString,org.apache.xml.utils.PrefixResolver)> ->_NONE_
<android.filterfw.core.NativeFrame: java.lang.Object getObjectValue()> ->_NONE_
<javax.crypto.ExemptionMechanism: javax.crypto.ExemptionMechanism getInstance(java.lang.String)> ->_NONE_
<android.content.SyncStatusInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.webkit.WebViewClassic: void setJsFlags(java.lang.String)> ->_NONE_
<libcore.internal.StringPool: java.lang.String get(char[],int,int)> ->_NONE_
<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMIterator getContextNodeList()> ->_NONE_
<android.view.animation.LayoutAnimationController: android.view.animation.Animation getAnimation()> ->_NONE_
<net.oauth.client.OAuthClient: void getRequestToken(net.oauth.OAuthAccessor,java.lang.String,java.util.Collection)> ->_NONE_
<android.mtp.MtpDevice: byte[] getThumbnail(int)> ->_NONE_
<java.lang.Class: java.lang.annotation.Annotation[] getDeclaredAnnotations()> ->_NONE_
<android.graphics.YuvImage: int[] getStrides()> ->_NONE_
<gov.nist.javax.sip.header.StatusLine: int getStatusCode()> ->_NONE_
<android.webkit.ByteArrayBuilder: int getByteSize()> ->_NONE_
<org.apache.xalan.templates.StylesheetRoot: void setIncremental(boolean)> ->_NONE_
<gov.nist.javax.sip.header.MediaRange: void setSubtype(java.lang.String)> ->_NONE_
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()> ->_NONE_
<android.location.Criteria: void setVerticalAccuracy(int)> ->_NONE_
<java.security.cert.PKIXParameters: void setTrustAnchors(java.util.Set)> ->_NONE_
<android.widget.Gallery: void setCallbackDuringFling(boolean)> ->_NONE_
<org.apache.commons.io.input.CharSequenceReader: int read(char[],int,int)> ->_NONE_
<java.net.URI: java.lang.String getRawFragment()> ->_NONE_
<android.widget.TextView: int getRightPaddingOffset()> ->_NONE_
<android.app.SearchableInfo: android.app.SearchableInfo getActivityMetaData(android.content.Context,android.content.pm.ActivityInfo,int)> ->_NONE_
<java.nio.CharToByteBufferAdapter: char get()> ->_NONE_
<libcore.net.http.RequestHeaders: java.lang.String getIfModifiedSince()> ->_NONE_
<android.graphics.drawable.PictureDrawable: int getIntrinsicHeight()> ->_NONE_
<java.net.Socket: void setOOBInline(boolean)> ->_NONE_
<libcore.net.http.HttpEngine: libcore.net.http.RequestHeaders getRequestHeaders()> ->_NONE_
<android.webkit.WebViewCore: long getUsedQuota()> ->_NONE_
<android.appwidget.AppWidgetManager: void updateAppWidget(int,android.widget.RemoteViews)> ->_NONE_
<java.text.MessageFormat: java.text.Format[] getFormats()> ->_NONE_
<java.util.concurrent.RecursiveAction: java.lang.Object getRawResult()> ->_NONE_
<android.media.MediaCrypto: byte[] getByteArrayFromUUID(java.util.UUID)> ->_NONE_
<android.os.AsyncTask: void setDefaultExecutor(java.util.concurrent.Executor)> ->_NONE_
<org.apache.xpath.axes.LocPathIterator: int getAxis()> ->_NONE_
<java.nio.HeapByteBuffer: short getShort()> ->_NONE_
<android.bluetooth.BluetoothHeadset: int getBatteryUsageHint(android.bluetooth.BluetoothDevice)> ->_NONE_
<java.security.spec.PSSParameterSpec: java.lang.String getMGFAlgorithm()> ->_NONE_
<net.oauth.signature.PLAINTEXT: void setConsumerSecret(java.lang.String)> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: java.lang.String getNickName()> ->_NONE_
<android.widget.NumberPicker: float getBottomFadingEdgeStrength()> ->_NONE_
<java.util.zip.ZipFile: java.lang.String getName()> ->_NONE_
<android.animation.ValueAnimator: int getCurrentAnimationsCount()> ->_NONE_
<org.jivesoftware.smack.packet.Presence: org.jivesoftware.smack.packet.Presence$ClientType getClientType()> ->_NONE_
<android.telephony.SmsCbMessage: java.lang.String getLanguageCode()> ->_NONE_
<org.apache.http.impl.conn.LoggingSessionOutputBuffer: void write(byte[],int,int)> ->_NONE_
<libcore.icu.NativeDecimalFormat: java.lang.String getNegativeSuffix()> ->_NONE_
<jp.co.omronsoft.openwnn.SymbolList: java.util.ArrayList getXmlfile(int)> ->_NONE_
<gov.nist.javax.sip.header.ParametersHeader: java.lang.Object getParameterValue(java.lang.String)> ->_NONE_
<android.renderscript.Matrix4f: float get(int,int)> ->_NONE_
<android.widget.TextView: int getTotalPaddingRight()> ->_NONE_
<org.apache.xpath.XPathContext: void setVarStack(org.apache.xpath.VariableStack)> ->_NONE_
<android.webkit.CookieManagerClassic: void setAcceptFileSchemeCookiesImpl(boolean)> ->_NONE_
<android.net.NetworkStats: long getElapsedRealtimeAge()> ->_NONE_
<android.test.mock.MockCursor: int getColumnIndexOrThrow(java.lang.String)> ->_NONE_
<android.renderscript.Mesh: android.renderscript.Allocation getVertexAllocation(int)> ->_NONE_
<org.apache.xpath.functions.FuncSubstringBefore: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<android.database.MatrixCursor: int getInt(int)> ->_NONE_
<android.support.v4.net.TrafficStatsCompatIcs: void setThreadStatsTag(int)> ->_NONE_
<libcore.icu.NativeDecimalFormat: void setGroupingSize(int)> ->_NONE_
<libcore.net.url.FtpURLConnection: java.lang.String getContentType()> ->_NONE_
<android.webkit.BrowserFrame: int loadType()> ->_NONE_
<gov.nist.core.StringTokenizer: java.util.Vector getLines()> ->_NONE_
<org.apache.xalan.templates.ElemUse: void setUseAttributeSets(org.apache.xml.utils.QName[])> ->_NONE_
<android.media.MediaFormat: void setString(java.lang.String,java.lang.String)> ->_NONE_
<android.nfc.NfcAdapter: void setNdefPushMessage(android.nfc.NdefMessage,android.app.Activity,android.app.Activity[])> ->_NONE_
<android.media.videoeditor.AudioTrack: long getTimelineDuration()> ->_NONE_
<android.database.MergeCursor: double getDouble(int)> ->_NONE_
<android.widget.AutoCompleteTextView: void setDropDownAlwaysVisible(boolean)> ->_NONE_
<java.text.DecimalFormat: int getMaximumIntegerDigits()> ->_NONE_
<android.app.ActivityManager: int getMemoryClass()> ->_NONE_
<org.apache.xpath.compiler.Compiler: org.apache.xml.utils.PrefixResolver getNamespaceContext()> ->_NONE_
<java.text.DateFormat: java.util.Locale[] getAvailableLocales()> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: int getHandleOfNode(org.w3c.dom.Node)> ->_NONE_
<android.nfc.tech.MifareUltralight: int getTimeout()> ->_NONE_
<android.text.TextUtils: java.lang.CharSequence replace(java.lang.CharSequence,java.lang.String[],java.lang.CharSequence[])> ->_NONE_
<org.kxml2.io.KXmlSerializer: void setPrefix(java.lang.String,java.lang.String)> ->_NONE_
<android.content.Intent: java.util.Set getCategories()> ->_NONE_
<android.widget.RemoteViews: void setRemoteAdapter(int,android.content.Intent)> ->_NONE_
<org.apache.xalan.templates.ElemApplyTemplates: int getXSLToken()> ->_NONE_
<gov.nist.javax.sip.header.SIPObjectList: java.lang.String debugDump(int)> ->_NONE_
<org.jivesoftware.smack.packet.DefaultPacketExtension: java.lang.String getValue(java.lang.String)> ->_NONE_
<org.apache.http.client.params.ClientParamBean: void setDefaultHeaders(java.util.Collection)> ->_NONE_
<android.app.admin.DevicePolicyManager: int getPasswordMinimumUpperCase(android.content.ComponentName)> ->_NONE_
<android.view.textservice.SentenceSuggestionsInfo: int getOffsetAt(int)> ->_NONE_
<java.net.URLConnection: java.lang.String getContentEncoding()> ->_NONE_
<android.widget.TimePicker: void setEnabled(boolean)> ->_NONE_
<android.app.AliasActivity: android.content.Intent parseAlias(org.xmlpull.v1.XmlPullParser)> ->_NONE_
<android.support.v13.app.FragmentStatePagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)> ->_NONE_
<android.webkit.WebSettings: void setLightTouchEnabled(boolean)> ->_NONE_
<org.jivesoftware.smack.packet.Bind: java.lang.String getJid()> ->_NONE_
<android.renderscript.Matrix4f: void loadPerspective(float,float,float,float)> ->_NONE_
<org.apache.xpath.functions.FuncStartsWith: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: void setTo(javax.sip.header.ToHeader)> ->_NONE_
<android.text.TextUtils: java.lang.CharSequence getReverse(java.lang.CharSequence,int,int)> ->_NONE_
<android.view.animation.AnimationSet: void setRepeatMode(int)> ->_NONE_
<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String getAttribute(java.lang.String)> ->_NONE_
<android.widget.TextView: int getSelectionEnd()> ->_NONE_
<org.apache.xpath.axes.LocPathIterator: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<org.apache.xalan.templates.ElemWhen: void setTest(org.apache.xpath.XPath)> ->_NONE_
<android.net.ConnectivityManager: android.net.LinkProperties getLinkProperties(int)> ->_NONE_
<dalvik.system.VMRuntime: long setMinimumHeapSize(long)> ->_NONE_
<android.filterpacks.imageproc.BrightnessFilter: android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)> ->_NONE_
<android.view.ViewConfiguration: int getDoubleTapTimeout()> ->_NONE_
<android.service.dreams.DreamService: android.view.Window getWindow()> ->_NONE_
<android.view.View: void setBackground(android.graphics.drawable.Drawable)> ->_NONE_
<org.apache.harmony.security.utils.Array: java.lang.String getBytesAsString(byte[])> ->_NONE_
<android.view.ViewRootImpl: android.view.ViewRootImpl$RunQueue getRunQueue()> ->_NONE_
<org.apache.commons.io.output.ProxyOutputStream: void write(int)> ->_NONE_
<org.apache.xalan.templates.OutputProperties: java.lang.String getProperty(org.apache.xml.utils.QName)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.PRF: void computePRF(byte[],byte[],byte[],byte[])> ->_NONE_
<android.content.res.Resources: int getInteger(int)> ->_NONE_
<org.apache.xalan.templates.ElemIf: int getXSLToken()> ->_NONE_
<android.view.TextureView: android.graphics.Bitmap getBitmap(android.graphics.Bitmap)> ->_NONE_
<android.speech.tts.TextToSpeech: java.util.List getEngines()> ->_NONE_
<org.apache.xml.serializer.SerializerTraceWriter: void setBufferSize(int)> ->_NONE_
<org.apache.http.util.EncodingUtils: byte[] getAsciiBytes(java.lang.String)> ->_NONE_
<android.net.TrafficStats: long getTotalRxBytes()> ->_NONE_
<android.telephony.gsm.SmsMessage: int getTPLayerLengthForPDU(java.lang.String)> ->_NONE_
<org.apache.xalan.transformer.MsgMgr: void message(javax.xml.transform.SourceLocator,java.lang.String,boolean)> ->_NONE_
<android.net.Proxy: java.lang.String getDefaultHost()> ->_NONE_
<android.net.wifi.WifiStateTracker: boolean setRadio(boolean)> ->_NONE_
<android.app.admin.DevicePolicyManager: void setPasswordMinimumLowerCase(android.content.ComponentName,int)> ->_NONE_
<android.database.AbstractWindowedCursor: byte[] getBlob(int)> ->_NONE_
<java.util.concurrent.ForkJoinTask: java.lang.Throwable getException()> ->_NONE_
<libcore.net.http.RequestHeaders: java.lang.String getIfNoneMatch()> ->_NONE_
<android.inputmethodservice.KeyboardView: void sendAccessibilityEventForUnicodeCharacter(int,int)> ->_NONE_
<android.filterfw.core.FilterGraph: void connect(android.filterfw.core.Filter,java.lang.String,android.filterfw.core.Filter,java.lang.String)> ->_NONE_
<org.ccil.cowan.tagsoup.XMLWriter: void setOutput(java.io.Writer)> ->_NONE_
<dalvik.system.profiler.BinaryHprofWriter: int writeStackFrame(java.lang.StackTraceElement)> ->_NONE_
<org.apache.http.entity.InputStreamEntity: java.io.InputStream getContent()> ->_NONE_
<android.media.videoeditor.MediaVideoItem: long getBoundaryEndTime()> ->_NONE_
<org.apache.xml.utils.DOM2Helper: void setDocument(org.w3c.dom.Document)> ->_NONE_
<android.renderscript.ScriptIntrinsicBlur: android.renderscript.Script$FieldID getFieldID_Input()> ->_NONE_
<libcore.net.http.RequestHeaders: java.net.URI getUri()> ->_NONE_
<java.security.spec.ECFieldF2m: java.math.BigInteger getReductionPolynomial()> ->_NONE_
<java.security.spec.DSAPrivateKeySpec: java.math.BigInteger getX()> ->_NONE_
<android.content.ContentProviderProxy: java.lang.String getType(android.net.Uri)> ->_NONE_
<android.text.method.DialerKeyListener: android.text.method.DialerKeyListener getInstance()> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement replaceChild(org.apache.xalan.templates.ElemTemplateElement,org.apache.xalan.templates.ElemTemplateElement)> ->_NONE_
<java.util.MiniEnumSet: void setRange(java.lang.Enum,java.lang.Enum)> ->_NONE_
<android.test.TouchUtils: void clickView(android.test.InstrumentationTestCase,android.view.View)> ->_NONE_
<android.net.NetworkStats: android.net.NetworkStats$Entry getTotal(android.net.NetworkStats$Entry,int)> ->_NONE_
<org.jivesoftware.smack.PacketWriter: void dump(java.io.PrintWriter)> ->_NONE_
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)> ->_NONE_
<android.widget.DateTimeView: java.text.DateFormat getTimeFormat()> ->_NONE_
<android.net.LocalSocketImpl: void connect(android.net.LocalSocketAddress,int)> ->_NONE_
<android.view.View: int getDrawingCacheQuality()> ->_NONE_
<android.webkit.WebSettings: void setDatabasePath(java.lang.String)> ->_NONE_
<java.nio.DirectByteBuffer: char getChar()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setCheckable(java.lang.Object,boolean)> ->_NONE_
<org.apache.xalan.templates.ElemApplyImport: int getXSLToken()> ->_NONE_
<android.database.CursorWindow: int getType(int,int)> ->_NONE_
<org.apache.harmony.security.x509.AccessDescription: byte[] getEncoded()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: int getScrollX()> ->_NONE_
<java.net.Socks4Message: int getCommandOrResult()> ->_NONE_
<android.widget.Switch: void setTextOn(java.lang.CharSequence)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: int getScrollY()> ->_NONE_
<android.widget.SearchView: android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String)> ->_NONE_
<android.telephony.CellIdentityCdma: int getSystemId()> ->_NONE_
<org.apache.xml.utils.QName: java.lang.String getPrefix()> ->_NONE_
<java.nio.charset.CharsetEncoderICU: java.nio.charset.CoderResult encodeLoop(java.nio.CharBuffer,java.nio.ByteBuffer)> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: java.lang.String getNodeName(int)> ->_NONE_
<android.webkit.WebSettings: void setLoadsImagesAutomatically(boolean)> ->_NONE_
<gov.nist.javax.sip.DialogFilter: void sendLoopDetectedResponse(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.SIPServerTransaction)> ->_NONE_
<android.gesture.Gesture: void setID(long)> ->_NONE_
<java.security.spec.DSAPrivateKeySpec: java.math.BigInteger getQ()> ->_NONE_
<android.webkit.WebViewInputDispatcher: void updateStateTrackersLocked(android.webkit.WebViewInputDispatcher$DispatchEvent,android.view.MotionEvent)> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int getExpandedTypeID2(int)> ->_NONE_
<java.security.spec.DSAPrivateKeySpec: java.math.BigInteger getP()> ->_NONE_
<org.jivesoftware.smack.packet.XMPPError: void setType(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.address.TelURLImpl: void setTelephoneNumber(gov.nist.javax.sip.address.TelephoneNumber)> ->_NONE_
<java.lang.ClassLoader: java.lang.Package getPackage(java.lang.String)> ->_NONE_
<android.net.wifi.WifiNative: boolean setWfdEnable(boolean)> ->_NONE_
<android.database.sqlite.SQLiteCursor: int getColumnIndex(java.lang.String)> ->_NONE_
<java.security.spec.DSAPrivateKeySpec: java.math.BigInteger getG()> ->_NONE_
<android.content.Intent: android.content.ComponentName getComponent()> ->_NONE_
<gov.nist.javax.sip.header.extensions.Join: java.lang.String getFromTag()> ->_NONE_
<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler getContentHandler()> ->_NONE_
<junit.framework.TestResult: void runProtected(junit.framework.Test,junit.framework.Protectable)> ->_NONE_
<android.widget.CalendarView: boolean getShowWeekNumber()> ->_NONE_
<libcore.net.http.HttpEngine: libcore.net.http.RawHeaders getNetworkRequestHeaders()> ->_NONE_
<gov.nist.javax.sip.header.ims.SecurityAgree: java.lang.String encodeBody()> ->_NONE_
<java.util.concurrent.ThreadPoolExecutor: int getPoolSize()> ->_NONE_
<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()> ->_NONE_
<android.webkit.WebViewClassic: void sendKeyEvent(android.view.KeyEvent)> ->_NONE_
<org.jivesoftware.smack.packet.RosterPacket: java.lang.String getEtag()> ->_NONE_
<android.webkit.BrowserFrame: void updateVisitedHistory(java.lang.String,boolean)> ->_NONE_
<android.view.KeyCharacterMap: int getDeadChar(int,int)> ->_NONE_
<java.text.DateFormat: java.text.DateFormat getTimeInstance(int,java.util.Locale)> ->_NONE_
<gov.nist.javax.sip.header.Accept: java.lang.String getContentSubType()> ->_NONE_
<java.net.MulticastSocket: void setLoopbackMode(boolean)> ->_NONE_
<org.json.JSONTokener: org.json.JSONObject readObject()> ->_NONE_
<android.view.inputmethod.CompletionInfo: int getPosition()> ->_NONE_
<java.lang.Package: java.lang.String getSpecificationVendor()> ->_NONE_
<android.media.RingtoneManager: android.media.Ringtone getRingtone(int)> ->_NONE_
<android.util.TypedValue: float getFloat()> ->_NONE_
<javax.crypto.spec.SecretKeySpec: byte[] getEncoded()> ->_NONE_
<org.apache.xpath.patterns.StepPattern: void setRelativePathPattern(org.apache.xpath.patterns.StepPattern)> ->_NONE_
<android.widget.PopupWindow: void setHeight(int)> ->_NONE_
<android.telephony.CellInfoCdma: android.telephony.CellIdentityCdma getCellIdentity()> ->_NONE_
<android.widget.ZoomButton: void setZoomSpeed(long)> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: boolean getOmitXMLDeclaration()> ->_NONE_
<java.lang.Throwable: java.lang.String getLocalizedMessage()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getHost()> ->_NONE_
<gov.nist.javax.sip.header.RAck: long getCSeqNumberLong()> ->_NONE_
<org.jivesoftware.smack.PacketCollector: void setPacketFilter(org.jivesoftware.smack.filter.PacketFilter)> ->_NONE_
<android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri)> ->_NONE_
<android.widget.TabWidget: void setStripEnabled(boolean)> ->_NONE_
<gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.message.Request createRequest(javax.sip.address.URI,java.lang.String,javax.sip.header.CallIdHeader,javax.sip.header.CSeqHeader,javax.sip.header.FromHeader,javax.sip.header.ToHeader,java.util.List,javax.sip.header.MaxForwardsHeader,javax.sip.header.ContentTypeHeader,byte[])> ->_NONE_
<android.graphics.YuvImage: byte[] getYuvData()> ->_NONE_
<org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream: void setTabSize(int)> ->_NONE_
<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String getDomain()> ->_NONE_
<android.telephony.CellInfoLte: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.location.Criteria: void setSpeedAccuracy(int)> ->_NONE_
<android.view.View: int getWindowAttachCount()> ->_NONE_
<org.apache.xpath.axes.AxesWalker: org.apache.xpath.axes.AxesWalker getPrevWalker()> ->_NONE_
<org.apache.james.mime4j.MimeStreamParser: void setRaw(boolean)> ->_NONE_
<android.os.Parcel: void writeByteArray(byte[],int,int)> ->_NONE_
<android.net.ProxyProperties: boolean isExcluded(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: int getUid()> ->_NONE_
<gov.nist.javax.sip.header.UserAgent: void setProduct(java.util.List)> ->_NONE_
<org.apache.xml.serializer.utils.URI: void setPath(java.lang.String)> ->_NONE_
<java.security.spec.PSSParameterSpec: java.security.spec.AlgorithmParameterSpec getMGFParameters()> ->_NONE_
<android.test.InstrumentationTestCase: android.app.Instrumentation getInstrumentation()> ->_NONE_
<java.io.ObjectInputStream: java.io.ObjectStreamClass readClassDescriptor()> ->_NONE_
<gov.nist.javax.sip.stack.ServerLog: int getTraceLevel()> ->_NONE_
<javax.obex.ApplicationParameter: byte[] getAPPparam()> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.Via getTopmostVia()> ->_NONE_
<android.widget.NumberPicker: java.lang.String[] getDisplayedValues()> ->_NONE_
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)> ->_NONE_
<gov.nist.javax.sip.header.SIPObject: java.lang.StringBuffer encode(java.lang.StringBuffer)> ->_NONE_
<java.net.URI: java.lang.String getRawPath()> ->_NONE_
<android.app.SharedPreferencesImpl: java.util.Map getAll()> ->_NONE_
<android.webkit.HTML5VideoFullScreen: void setMediaController(android.widget.MediaController)> ->_NONE_
<org.jivesoftware.smack.XMPPConnection: java.lang.String getHostIpAddress()> ->_NONE_
<org.apache.http.entity.BufferedHttpEntity: java.io.InputStream getContent()> ->_NONE_
<gov.nist.javax.sip.SipProviderImpl: void setListeningPoint(javax.sip.ListeningPoint)> ->_NONE_
<android.webkit.WebSettingsClassic: void setGeolocationDatabasePath(java.lang.String)> ->_NONE_
<android.app.Fragment: void setTargetFragment(android.app.Fragment,int)> ->_NONE_
<android.widget.RemoteViewsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> ->_NONE_
<android.content.pm.PackageParser: java.lang.String parsePackageName(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,int,java.lang.String[])> ->_NONE_
<android.text.StaticLayout: int getLineTop(int)> ->_NONE_
<javax.net.ssl.SSLServerSocketFactory: javax.net.ServerSocketFactory getDefault()> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: void sendReliableProvisionalResponse(javax.sip.message.Response)> ->_NONE_
<jp.co.omronsoft.openwnn.ComposingText: int getCursor(int)> ->_NONE_
<android.app.ContextImpl: int getWallpaperDesiredMinimumHeight()> ->_NONE_
<org.apache.harmony.security.x509.PolicyConstraints: byte[] getEncoded()> ->_NONE_
<android.content.Loader: boolean onCancelLoad()> ->_NONE_
<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.util.concurrent.atomic.AtomicReferenceFieldUpdater newUpdater(java.lang.Class,java.lang.Class,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.Via: int getTTL()> ->_NONE_
<android.filterfw.core.Filter: java.util.Collection getOutputPorts()> ->_NONE_
<gov.nist.javax.sip.address.AddressImpl: javax.sip.address.URI getURI()> ->_NONE_
<android.util.JsonWriter: void replaceTop(android.util.JsonScope)> ->_NONE_
<gov.nist.core.HostPort: gov.nist.core.Host getHost()> ->_NONE_
<java.util.prefs.NodeSet: int getLength()> ->_NONE_
<android.text.TextUtils: int getLayoutDirectionFromFirstChar(java.util.Locale)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.Element getElementById(java.lang.String)> ->_NONE_
<org.jivesoftware.smack.util.StringUtils: java.lang.String encodeHex(byte[])> ->_NONE_
<gov.nist.javax.sip.header.ErrorInfo: void setErrorMessage(java.lang.String)> ->_NONE_
<android.content.res.AssetFileDescriptor: long getStartOffset()> ->_NONE_
<android.widget.TextView: android.text.Editable getEditableText()> ->_NONE_
<gov.nist.javax.sip.header.AcceptLanguage: java.util.Locale getAcceptLanguage()> ->_NONE_
<java.net.URL: int getDefaultPort()> ->_NONE_
<android.support.v4.util.AtomicFile: java.io.File getBaseFile()> ->_NONE_
<android.database.MergeCursor: java.lang.String getString(int)> ->_NONE_
<android.app.Activity: void setTitleColor(int)> ->_NONE_
<android.net.sip.SimpleSessionDescription: java.lang.String[] getBandwidthTypes()> ->_NONE_
<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String,java.lang.String)> ->_NONE_
<android.support.v4.widget.SearchViewCompat: void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat)> ->_NONE_
<android.webkit.WebSettingsClassic: int getDefaultFixedFontSize()> ->_NONE_
<java.util.TimeZone: java.lang.String getID()> ->_NONE_
<android.test.ActivityTestCase: android.app.Activity getActivity()> ->_NONE_
<android.webkit.WebView: android.graphics.Bitmap getFavicon()> ->_NONE_
<android.content.pm.ContainerEncryptionParams: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.http.conn.params.ConnRouteParams: void setLocalAddress(org.apache.http.params.HttpParams,java.net.InetAddress)> ->_NONE_
<android.app.backup.RestoreObserver: void onUpdate(int,java.lang.String)> ->_NONE_
<org.apache.harmony.security.x509.tsp.TSTInfo: int[] getAccuracy()> ->_NONE_
<android.webkit.WebSettings: boolean getAllowFileAccess()> ->_NONE_
<android.database.sqlite.SQLiteConnection: void setSyncMode(java.lang.String)> ->_NONE_
<android.widget.TabWidget: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)> ->_NONE_
<jp.co.omronsoft.openwnn.KeyboardView: void setProximityCorrectionEnabled(boolean)> ->_NONE_
<android.os.Looper: java.lang.Thread getThread()> ->_NONE_
<android.widget.TextView: void setHorizontallyScrolling(boolean)> ->_NONE_
<android.gesture.GestureOverlayView: int getGestureColor()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol: void setVersion(byte[])> ->_NONE_
<android.database.MatrixCursor: java.lang.String[] getColumnNames()> ->_NONE_
<android.telephony.SmsCbMessage: java.lang.String getMessageBody()> ->_NONE_
<gov.nist.javax.sip.header.extensions.Replaces: java.lang.String getCallId()> ->_NONE_
<org.apache.http.conn.ssl.SSLSocketFactory: void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)> ->_NONE_
<android.support.v4.util.LongSparseArray: java.lang.Object get(long,java.lang.Object)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.Object getParent(java.lang.Object)> ->_NONE_
<org.xml.sax.InputSource: void setByteStream(java.io.InputStream)> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: void warning(org.xml.sax.SAXParseException)> ->_NONE_
<junit.textui.TestRunner: void main(java.lang.String[])> ->_NONE_
<android.widget.TextView: int getSelectionStart()> ->_NONE_
<android.app.ActivityGroup: android.app.LocalActivityManager getLocalActivityManager()> ->_NONE_
<org.apache.http.impl.conn.SingleClientConnManager: void closeIdleConnections(long,java.util.concurrent.TimeUnit)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: void setEnabledProtocols(java.lang.String[])> ->_NONE_
<android.widget.ExpandableListView: android.widget.Adapter getAdapter()> ->_NONE_
<android.graphics.drawable.ShapeDrawable: void setDither(boolean)> ->_NONE_
<org.jivesoftware.smack.packet.Presence: org.jivesoftware.smack.packet.Presence$Type getType()> ->_NONE_
<org.apache.commons.codec.net.BCodec: java.lang.String getDefaultCharset()> ->_NONE_
<android.view.animation.AnimationSet: void setFillBefore(boolean)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setSource(java.lang.Object,android.view.View)> ->_NONE_
<java.util.BitSet: void set(int,int)> ->_NONE_
<android.database.CursorWindow: int getNumRows()> ->_NONE_
<java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone,java.util.Locale)> ->_NONE_
<android.webkit.WebChromeClient: android.graphics.Bitmap getDefaultVideoPoster()> ->_NONE_
<android.content.ContextWrapper: java.lang.String getPackageName()> ->_NONE_
<android.graphics.drawable.Drawable: int getIntrinsicWidth()> ->_NONE_
<org.apache.xml.utils.UnImplNode: java.lang.String getXmlEncoding()> ->_NONE_
<android.bluetooth.BluetoothHealthAppConfiguration: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompat: void setSource(android.view.View,int)> ->_NONE_
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLength(android.content.ComponentName)> ->_NONE_
<android.app.WallpaperManager: android.app.WallpaperManager getInstance(android.content.Context)> ->_NONE_
<android.text.TextUtils: int getLayoutDirectionFromLocale(java.util.Locale)> ->_NONE_
<android.test.mock.MockResources: java.lang.CharSequence getText(int,java.lang.CharSequence)> ->_NONE_
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void setMaxTotal(int)> ->_NONE_
<android.app.ActivityManagerProxy: void unbroadcastIntent(android.app.IApplicationThread,android.content.Intent,int)> ->_NONE_
<android.preference.Preference: android.view.View getView(android.view.View,android.view.ViewGroup)> ->_NONE_
<javax.xml.transform.TransformerFactoryConfigurationError: java.lang.Exception getException()> ->_NONE_
<org.apache.harmony.security.x509.GeneralNames: byte[] getEncoded()> ->_NONE_
<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint getPaint()> ->_NONE_
<android.nfc.tech.MifareClassic: int getTimeout()> ->_NONE_
<android.widget.ExpandableListConnector: void setExpandableListAdapter(android.widget.ExpandableListAdapter)> ->_NONE_
<java.util.DuplicateFormatFlagsException: java.lang.String getFlags()> ->_NONE_
<gov.nist.javax.sip.address.Authority: int getPort()> ->_NONE_
<android.widget.AbsListView: void setVelocityScale(float)> ->_NONE_
<gov.nist.javax.sip.header.StatusLine: java.lang.String getVersionMajor()> ->_NONE_
<org.apache.harmony.xml.dom.NodeImpl: org.apache.harmony.xml.dom.NodeImpl getNamespacingElement()> ->_NONE_
<gov.nist.javax.sip.header.MaxForwards: java.lang.StringBuffer encodeBody(java.lang.StringBuffer)> ->_NONE_
<android.filterfw.core.Filter: int getSleepDelay()> ->_NONE_
<gov.nist.javax.sip.header.extensions.References: void setRel(java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.AlertException: byte getDescriptionCode()> ->_NONE_
<android.renderscript.RenderScriptGL: int getWidth()> ->_NONE_
<java.util.SimpleTimeZone: int getRawOffset()> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: int getContentLength()> ->_NONE_
<android.support.v4.app.Fragment: void setHasOptionsMenu(boolean)> ->_NONE_
<org.apache.harmony.xml.ExpatReader: void setProperty(java.lang.String,java.lang.Object)> ->_NONE_
<gov.nist.javax.sip.header.ParametersHeader: void setParameter(java.lang.String,java.lang.String)> ->_NONE_
<android.webkit.WebView: void setPictureListener(android.webkit.WebView$PictureListener)> ->_NONE_
<android.media.AudioService: int getMasterVolume()> ->_NONE_
<android.media.AudioManager: int getStreamMaxVolume(int)> ->_NONE_
<org.apache.xml.utils.DOMHelper: org.w3c.dom.Node getParentOfNode(org.w3c.dom.Node)> ->_NONE_
<java.io.RandomAccessFile: short readShort()> ->_NONE_
<org.apache.xalan.templates.Stylesheet: void setDecimalFormat(org.apache.xalan.templates.DecimalFormatProperties)> ->_NONE_
<android.view.accessibility.AccessibilityRecord: int getFromIndex()> ->_NONE_
<android.view.View: void setPressed(boolean)> ->_NONE_
<android.graphics.ImageFormat: int getBitsPerPixel(int)> ->_NONE_
<java.net.Socket: int getPort()> ->_NONE_
<android.graphics.Paint: android.graphics.MaskFilter setMaskFilter(android.graphics.MaskFilter)> ->_NONE_
<org.apache.xml.serializer.ToTextStream: void characters(char[],int,int)> ->_NONE_
<android.view.ViewConfiguration: int getScrollBarFadeDuration()> ->_NONE_
<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)> ->_NONE_
<org.apache.http.cookie.params.CookieSpecParamBean: void setDatePatterns(java.util.Collection)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: javax.sip.address.Hop getNextHop(gov.nist.javax.sip.message.SIPRequest)> ->_NONE_
<android.filterfw.core.FilterSurfaceView: android.filterfw.core.GLEnvironment getGLEnv()> ->_NONE_
<android.webkit.BrowserFrame: void setProgress(int)> ->_NONE_
<org.apache.commons.codec.language.Soundex: void setMaxLength(int)> ->_NONE_
<android.text.SpannableStringBuilder: android.text.InputFilter[] getFilters()> ->_NONE_
<gov.nist.javax.sip.Utils: void main(java.lang.String[])> ->_NONE_
<android.telephony.SmsCbCmasInfo: int getCategory()> ->_NONE_
<android.telephony.ServiceState: java.lang.String getOperatorAlphaLong()> ->_NONE_
<org.apache.http.impl.conn.tsccm.WaitingThread: java.util.concurrent.locks.Condition getCondition()> ->_NONE_
<org.apache.http.params.HttpProtocolParams: org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams)> ->_NONE_
<android.renderscript.Script: void setVar(int,android.renderscript.FieldPacker)> ->_NONE_
<android.util.XmlPullAttributes: int getAttributeNameResource(int)> ->_NONE_
<android.nfc.NdefRecord: int getByteLength()> ->_NONE_
<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getTextBeforeCursor(int,int)> ->_NONE_
<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadDefaultLogo(android.content.pm.PackageManager)> ->_NONE_
<android.media.RingtoneManager: void setType(int)> ->_NONE_
<android.net.ConnectivityManager: void setGlobalProxy(android.net.ProxyProperties)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getContentDescription()> ->_NONE_
<org.apache.http.conn.params.ConnManagerParams: void setMaxTotalConnections(org.apache.http.params.HttpParams,int)> ->_NONE_
<android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)> ->_NONE_
<android.animation.ValueAnimator: java.lang.Object getAnimatedValue()> ->_NONE_
<org.apache.harmony.security.x509.tsp.TimeStampReq: java.lang.Boolean getCertReq()> ->_NONE_
<android.view.View: void setActivated(boolean)> ->_NONE_
<org.xml.sax.helpers.XMLFilterImpl: void setFeature(java.lang.String,boolean)> ->_NONE_
<android.accessibilityservice.AccessibilityServiceInfo: void updateDynamicallyConfigurableProperties(android.accessibilityservice.AccessibilityServiceInfo)> ->_NONE_
<android.accounts.AccountManagerService: void updateAppPermission(android.accounts.Account,java.lang.String,int,boolean)> ->_NONE_
<gov.nist.javax.sip.message.SIPRequest: int getViaPort()> ->_NONE_
<android.preference.PreferenceFragment: android.preference.PreferenceManager getPreferenceManager()> ->_NONE_
<org.jivesoftware.smack.ConnectionConfiguration: void setTruststorePath(java.lang.String)> ->_NONE_
<org.apache.commons.codec.net.QCodec: void setEncodeBlanks(boolean)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.ServerHello: byte[] getRandom()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: short getLevel(int)> ->_NONE_
<org.apache.xalan.templates.ElemCallTemplate: java.lang.String getNodeName()> ->_NONE_
<android.graphics.drawable.DrawableContainer: int getChangingConfigurations()> ->_NONE_
<android.widget.TextView: boolean getShowSoftInputOnFocus()> ->_NONE_
<java.net.PlainSocketImpl: java.net.Socks4Message socksReadReply()> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int getIdForNamespace(java.lang.String)> ->_NONE_
<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ErrorHandler getErrorHandler()> ->_NONE_
<gov.nist.javax.sip.header.Contact: void setPubGruuParam(java.lang.String)> ->_NONE_
<android.text.style.LocaleSpan: java.util.Locale getLocale()> ->_NONE_
<android.content.res.Resources: java.lang.String getResourcePackageName(int)> ->_NONE_
<org.apache.xml.dtm.ref.DTMManagerDefault: int getDTMHandleFromNode(org.w3c.dom.Node)> ->_NONE_
<android.mtp.MtpStorageInfo: long getFreeSpace()> ->_NONE_
<android.widget.TextView: void setHighlightColor(int)> ->_NONE_
<gov.nist.javax.sip.header.AcceptLanguage: float getQValue()> ->_NONE_
<android.media.videoeditor.Effect: long getDuration()> ->_NONE_
<android.net.wifi.SupplicantState: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.os.ParcelFileDescriptor: int getFd()> ->_NONE_
<org.apache.xalan.templates.ElemNumber: int getPreviousNode(org.apache.xpath.XPathContext,int)> ->_NONE_
<android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat: java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo)> ->_NONE_
<gov.nist.javax.sip.address.Authority: java.lang.String encode()> ->_NONE_
<android.webkit.WebSettingsClassic: boolean getJavaScriptCanOpenWindowsAutomatically()> ->_NONE_
<android.widget.RemoteViewsAdapter: int getViewTypeCount()> ->_NONE_
<android.media.audiofx.Virtualizer: void setStrength(short)> ->_NONE_
<gov.nist.javax.sip.stack.MessageChannel: java.lang.String getKey(gov.nist.core.HostPort,java.lang.String)> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: java.lang.String getMiddleName()> ->_NONE_
<org.xmlpull.v1.sax2.Driver: java.lang.String getURI(int)> ->_NONE_
<android.net.wifi.WifiNative: boolean connectToSupplicant()> ->_NONE_
<android.filterfw.core.FilterPort: android.filterfw.core.Filter getFilter()> ->_NONE_
<net.oauth.http.HttpMessage: java.lang.String getContentCharset()> ->_NONE_
<org.xmlpull.v1.sax2.Driver: java.lang.Object getProperty(java.lang.String)> ->_NONE_
<java.text.DecimalFormatSymbols: char getZeroDigit()> ->_NONE_
<android.content.ContextWrapper: java.io.File getExternalCacheDir()> ->_NONE_
<java.net.URLConnection: void setDefaultAllowUserInteraction(boolean)> ->_NONE_
<gov.nist.javax.sip.header.extensions.Replaces: void setFromTag(java.lang.String)> ->_NONE_
<android.widget.ZoomButtonsController: void setTouchTargetView(android.view.View)> ->_NONE_
<android.support.v4.app.BackStackRecord: int getBreadCrumbTitleRes()> ->_NONE_
<android.opengl.GLSurfaceView: void setGLWrapper(android.opengl.GLSurfaceView$GLWrapper)> ->_NONE_
<org.jivesoftware.smack.PacketReader: org.jivesoftware.smack.packet.StreamError parseStreamError(org.xmlpull.v1.XmlPullParser)> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.protocol.HttpProcessor getProtocolProcessor()> ->_NONE_
<org.apache.xml.serializer.Encodings: java.io.Writer getWriter(java.io.OutputStream,java.lang.String)> ->_NONE_
<jp.co.omronsoft.openwnn.TextCandidates1LineViewManager: android.view.View getCurrentView()> ->_NONE_
<android.text.DynamicLayout: int getParagraphDirection(int)> ->_NONE_
<android.hardware.input.InputManager: android.os.Vibrator getInputDeviceVibrator(int)> ->_NONE_
<android.os.Handler: void dump(android.util.Printer,java.lang.String)> ->_NONE_
<android.support.v4.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> ->_NONE_
<android.webkit.WebViewClassic: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore: void deleteCertificateEntry(java.lang.String)> ->_NONE_
<android.os.Parcel: java.util.ArrayList readArrayList(java.lang.ClassLoader)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.Finished: byte[] getData()> ->_NONE_
<org.apache.xalan.processor.XSLTElementDef: java.lang.String getNameAlias()> ->_NONE_
<java.security.Security: void setProperty(java.lang.String,java.lang.String)> ->_NONE_
<jp.co.omronsoft.openwnn.Keyboard: void setKeyHeight(int)> ->_NONE_
<java.io.DataInputStream: int readUnsignedByte()> ->_NONE_
<android.os.Parcel: void setDataPosition(int)> ->_NONE_
<java.security.spec.ECPrivateKeySpec: java.math.BigInteger getS()> ->_NONE_
<org.apache.http.params.HttpConnectionParams: boolean getTcpNoDelay(org.apache.http.params.HttpParams)> ->_NONE_
<org.apache.xml.serializer.ToXMLSAXHandler: void setWriter(java.io.Writer)> ->_NONE_
<org.apache.commons.io.IOUtils: void write(byte[],java.io.Writer,java.lang.String)> ->_NONE_
<org.jivesoftware.smack.GoogleExtensions: void setSupportExtendedContactAttribute(boolean)> ->_NONE_
<org.apache.http.conn.routing.HttpRoute: org.apache.http.conn.routing.RouteInfo$TunnelType getTunnelType()> ->_NONE_
<android.view.ViewConfiguration: int getTapTimeout()> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertImpl: byte[] getTBSCertificate()> ->_NONE_
<android.webkit.WebViewClassic: void removeJavascriptInterface(java.lang.String)> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: java.io.OutputStream getOutputStream()> ->_NONE_
<android.text.style.LocaleSpan: void updateDrawState(android.text.TextPaint)> ->_NONE_
<android.net.http.Headers: int getConnectionType()> ->_NONE_
<android.filterfw.core.AsyncRunner: void setGraph(android.filterfw.core.FilterGraph)> ->_NONE_
<gov.nist.javax.sip.header.ims.Privacy: java.lang.String encodeBody()> ->_NONE_
<org.apache.xalan.templates.ElemIf: void setTest(org.apache.xpath.XPath)> ->_NONE_
<libcore.net.http.HttpHandler: java.net.URLConnection openConnection(java.net.URL)> ->_NONE_
<gov.nist.javax.sip.header.CallInfo: javax.sip.address.URI getInfo()> ->_NONE_
<android.test.mock.MockResources: int getDimensionPixelOffset(int)> ->_NONE_
<gov.nist.javax.sip.Utils: java.lang.String getSignature()> ->_NONE_
<javax.sip.IOExceptionEvent: java.lang.String getTransport()> ->_NONE_
<org.apache.xml.serializer.ToStream: int writeUTF16Surrogate(char,char[],int,int)> ->_NONE_
<android.content.SyncManager: void updateRunningAccounts()> ->_NONE_
<android.nfc.tech.NfcBarcode: android.nfc.Tag getTag()> ->_NONE_
<android.hardware.SensorManager: android.hardware.LegacySensorManager getLegacySensorManager()> ->_NONE_
<java.nio.HeapByteBuffer: byte get()> ->_NONE_
<android.view.inputmethod.InputMethodSubtype: java.lang.CharSequence getDisplayName(android.content.Context,java.lang.String,android.content.pm.ApplicationInfo)> ->_NONE_
<android.text.format.DateUtils: java.lang.CharSequence getRelativeDateTimeString(android.content.Context,long,long,long,int)> ->_NONE_
<libcore.io.ForwardingOs: java.net.InetAddress[] getaddrinfo(java.lang.String,libcore.io.StructAddrinfo)> ->_NONE_
<java.io.EmulatedFields: int get(java.lang.String,int)> ->_NONE_
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()> ->_NONE_
<libcore.net.http.HttpEngine: java.net.CacheResponse getCacheResponse()> ->_NONE_
<android.app.ContextImpl: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)> ->_NONE_
<android.net.wifi.p2p.WifiP2pInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.media.videoeditor.MediaProperties: int getSupportedMaxVolume()> ->_NONE_
<java.io.WriteAbortedException: java.lang.Throwable getCause()> ->_NONE_
<android.view.TextureView: android.view.HardwareLayer getHardwareLayer()> ->_NONE_
<android.renderscript.Element: int getSubElementCount()> ->_NONE_
<org.jivesoftware.smack.util.Cache: long getCacheHits()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.ServerSessionContext: void setPersistentCache(org.apache.harmony.xnet.provider.jsse.SSLServerSessionCache)> ->_NONE_
<java.util.Locale: java.lang.String[] getISOCountries()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.lang.String[] getEnabledCipherSuites()> ->_NONE_
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: org.xml.sax.DTDHandler getDTDHandler()> ->_NONE_
<java.lang.CaseMapper: java.lang.String toUpperCase(java.util.Locale,java.lang.String,char[],int,int)> ->_NONE_
<android.view.ViewGroup: void setClipChildren(boolean)> ->_NONE_
<java.security.Signature: java.security.AlgorithmParameters getParameters()> ->_NONE_
<org.apache.http.message.BasicLineParser: org.apache.http.RequestLine parseRequestLine(java.lang.String,org.apache.http.message.LineParser)> ->_NONE_
<android.media.audiofx.Equalizer: short[] getBandLevelRange()> ->_NONE_
<org.jivesoftware.smack.packet.Message: org.jivesoftware.smack.packet.Message$Type getType()> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: org.w3c.dom.Node getPreviousSibling()> ->_NONE_
<android.database.CursorWrapper: int getCount()> ->_NONE_
<org.jivesoftware.smack.packet.Message: void setThread(java.lang.String)> ->_NONE_
<android.media.AudioTrack: void setPlaybackPositionUpdateListener(android.media.AudioTrack$OnPlaybackPositionUpdateListener,android.os.Handler)> ->_NONE_
<org.apache.http.impl.cookie.NetscapeDraftHeaderParser: org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)> ->_NONE_
<java.lang.Package: java.lang.String getSpecificationTitle()> ->_NONE_
<android.view.MotionEvent: float getHistoricalAxisValue(int,int)> ->_NONE_
<org.javia.arity.SimpleCodeGen: org.javia.arity.Symbol getSymbol(org.javia.arity.Token)> ->_NONE_
<android.app.admin.DeviceAdminReceiver: android.content.ComponentName getWho(android.content.Context)> ->_NONE_
<android.database.AbstractCursor: android.os.Bundle getExtras()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: void setReuseAddress(boolean)> ->_NONE_
<android.net.wifi.WifiStateTracker: java.lang.String getTcpBufferSizesPropName()> ->_NONE_
<android.content.Intent: float getFloatExtra(java.lang.String,float)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionErrorEvent: int getErrorID()> ->_NONE_
<android.database.sqlite.SQLiteDatabase: int updateWithOnConflict(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[],int)> ->_NONE_
<android.content.res.Resources: libcore.icu.NativePluralRules getPluralRule()> ->_NONE_
<android.widget.AutoCompleteTextView: void setOnClickListener(android.view.View$OnClickListener)> ->_NONE_
<android.location.LocationManager: void setTestProviderLocation(java.lang.String,android.location.Location)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CallIdHeader getCallId()> ->_NONE_
<android.os.Environment: java.io.File getExternalStorageAppDataDirectory(java.lang.String)> ->_NONE_
<android.app.WallpaperInfo: android.content.ComponentName getComponent()> ->_NONE_
<org.jivesoftware.smackx.packet.MUCInitialPresence: void setPassword(java.lang.String)> ->_NONE_
<android.app.ApplicationPackageManager: java.lang.String getNameForUid(int)> ->_NONE_
<java.io.ObjectInputStream: byte readByte()> ->_NONE_
<android.widget.Switch: int getSwitchPadding()> ->_NONE_
<android.view.inputmethod.InputMethodInfo: android.content.pm.ServiceInfo getServiceInfo()> ->_NONE_
<android.app.LoadedApk: android.app.Application getApplication()> ->_NONE_
<android.view.accessibility.AccessibilityManager: java.util.List getInstalledAccessibilityServiceList()> ->_NONE_
<org.apache.harmony.xml.ExpatReader: org.xml.sax.ContentHandler getContentHandler()> ->_NONE_
<android.util.XmlPullAttributes: int getAttributeIntValue(int,int)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: byte[] getRawContent()> ->_NONE_
<android.net.SSLCertificateSocketFactory: javax.net.ssl.SSLSocketFactory getInsecure(int,android.net.SSLSessionCache)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: byte[] getData(int)> ->_NONE_
<android.filterfw.core.ShaderProgram: void setDrawMode(int)> ->_NONE_
<javax.crypto.Cipher: int getBlockSize()> ->_NONE_
<android.bluetooth.BluetoothSocket: void setServiceName(java.lang.String)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: void executeFromSnapshot(org.apache.xalan.transformer.TransformSnapshot)> ->_NONE_
<android.media.audiofx.Virtualizer: short getRoundedStrength()> ->_NONE_
<libcore.net.http.FixedLengthInputStream: int read(byte[],int,int)> ->_NONE_
<java.nio.SocketChannelImpl: int write(java.nio.ByteBuffer)> ->_NONE_
<android.webkit.CallbackProxy: void onFormResubmission(android.os.Message,android.os.Message)> ->_NONE_
<android.appwidget.AppWidgetHostView: android.view.View getDefaultView()> ->_NONE_
<java.text.DecimalFormat: java.lang.String getNegativeSuffix()> ->_NONE_
<android.bluetooth.BluetoothAdapter: java.lang.String getAddress()> ->_NONE_
<android.view.textservice.SpellCheckerInfo: java.lang.String getPackageName()> ->_NONE_
<android.app.ActivityManagerProxy: java.util.List getRecentTasks(int,int,int)> ->_NONE_
<android.net.http.HttpAuthHeader: void setPassword(java.lang.String)> ->_NONE_
<java.io.DataInputStream: int read(byte[])> ->_NONE_
<libcore.net.http.ResponseHeaders: java.lang.String getConnection()> ->_NONE_
<gov.nist.javax.sip.header.To: gov.nist.core.HostPort getHostPort()> ->_NONE_
<net.oauth.signature.OAuthSignatureMethod: void sign(net.oauth.OAuthMessage)> ->_NONE_
<org.apache.xpath.Expression: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)> ->_NONE_
<javax.net.ssl.HandshakeCompletedEvent: javax.net.ssl.SSLSocket getSocket()> ->_NONE_
<android.content.ContentService: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: java.lang.String getNamespaceURI(java.lang.String,boolean)> ->_NONE_
<android.widget.ScrollView: void setFillViewport(boolean)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPublicKey: byte[] getEncoded()> ->_NONE_
<org.jivesoftware.smack.packet.Authentication: void setDigest(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xalan.templates.ElemParam: int getXSLToken()> ->_NONE_
<android.renderscript.Allocation: int getUsage()> ->_NONE_
<org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.ServerSessionContext: void setSessionTimeout(int)> ->_NONE_
<java.util.zip.Adler32: void update(byte[])> ->_NONE_
<java.util.concurrent.CyclicBarrier: int getParties()> ->_NONE_
<java.util.Locale: java.lang.String getLanguage()> ->_NONE_
<org.apache.xml.serializer.ToTextSAXHandler: void setDocumentLocator(org.xml.sax.Locator)> ->_NONE_
<org.apache.commons.codec.net.QCodec: java.lang.String decode(java.lang.String)> ->_NONE_
<android.view.ViewConfiguration: int getLongPressTimeout()> ->_NONE_
<android.app.ActivityManagerProxy: void revokeUriPermissionFromOwner(android.os.IBinder,android.net.Uri,int)> ->_NONE_
<java.net.Authenticator: java.lang.String getRequestingScheme()> ->_NONE_
<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: org.apache.harmony.luni.lang.reflect.ImplForVariable parseTypeVariableSignature()> ->_NONE_
<java.io.File: java.lang.String getName()> ->_NONE_
<android.view.inputmethod.InputConnectionWrapper: boolean setComposingRegion(int,int)> ->_NONE_
<android.view.accessibility.AccessibilityRecord: int getItemCount()> ->_NONE_
<java.io.ObjectStreamField: char getTypeCode()> ->_NONE_
<org.apache.xml.serializer.ToXMLStream: void processingInstruction(java.lang.String,java.lang.String)> ->_NONE_
<android.net.wifi.WifiNative: boolean setManufacturer(java.lang.String)> ->_NONE_
<org.apache.xml.serializer.ToTextSAXHandler: java.io.OutputStream getOutputStream()> ->_NONE_
<android.webkit.WebSettings: java.lang.String getDefaultTextEncodingName()> ->_NONE_
<android.test.InstrumentationTestRunner: junit.framework.TestSuite getAllTests()> ->_NONE_
<android.media.MediaMetadataRetriever: void setDataSource(java.io.FileDescriptor)> ->_NONE_
<android.graphics.ColorMatrix: void set(float[])> ->_NONE_
<android.webkit.WebViewClassic: boolean setFrame(int,int,int,int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: int getSoTimeout()> ->_NONE_
<android.net.wifi.p2p.WifiP2pManager: void requestPersistentGroupInfo(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$PersistentGroupInfoListener)> ->_NONE_
<android.telephony.gsm.SmsMessage: android.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,short,byte[],boolean)> ->_NONE_
<android.filterfw.core.Frame: int getBindingType()> ->_NONE_
<org.apache.xalan.templates.ElemCallTemplate: void execute(org.apache.xalan.transformer.TransformerImpl)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: int getCurrentItemIndex(java.lang.Object)> ->_NONE_
<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.javax.sip.header.SIPHeader parse()> ->_NONE_
<libcore.net.http.HttpURLConnectionImpl: java.security.Permission getPermission()> ->_NONE_
<gov.nist.javax.sip.address.SipUri: gov.nist.javax.sip.address.Authority getAuthority()> ->_NONE_
<gov.nist.javax.sip.parser.extensions.SessionExpiresParser: gov.nist.javax.sip.header.SIPHeader parse()> ->_NONE_
<android.net.http.Headers: java.lang.String getContentEncoding()> ->_NONE_
<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)> ->_NONE_
<android.media.videoeditor.AudioTrack: int getDuckingThreshhold()> ->_NONE_
<android.graphics.drawable.PictureDrawable: int getIntrinsicWidth()> ->_NONE_
<gov.nist.javax.sip.header.ParametersHeader: void setMultiParameter(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xalan.res.XSLTErrorResources: java.lang.Object[][] getContents()> ->_NONE_
<java.lang.System: void setOut(java.io.PrintStream)> ->_NONE_
<android.net.LocalSocketImpl: java.lang.Object getOption(int)> ->_NONE_
<android.hardware.Sensor: float getPower()> ->_NONE_
<android.graphics.BitmapRegionDecoder: int getHeight()> ->_NONE_
<android.text.method.WordIterator: int getBeginning(int)> ->_NONE_
<android.text.PackedIntVector: void setValueInternal(int,int,int)> ->_NONE_
<org.xml.sax.helpers.AttributeListImpl: java.lang.String getValue(java.lang.String)> ->_NONE_
<android.preference.Preference: int getOrder()> ->_NONE_
<org.apache.http.util.ByteArrayBuffer: void setLength(int)> ->_NONE_
<android.filterfw.core.GLFrame: int[] getInts()> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CRLImpl: java.util.Date getNextUpdate()> ->_NONE_
<android.content.pm.InstrumentationInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.xalan.templates.ElemText: void setDisableOutputEscaping(boolean)> ->_NONE_
<libcore.io.ForwardingOs: int read(java.io.FileDescriptor,java.nio.ByteBuffer)> ->_NONE_
<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: org.apache.harmony.luni.lang.reflect.ImplForVariable parseFormalTypeParameter()> ->_NONE_
<android.app.ActivityManagerProxy: android.app.ActivityManager$TaskThumbnails getTaskThumbnails(int)> ->_NONE_
<android.widget.TimePicker: java.lang.Integer getCurrentMinute()> ->_NONE_
<android.view.GLES20DisplayList: void setStaticMatrix(android.graphics.Matrix)> ->_NONE_
<android.util.XmlPullAttributes: int getIdAttributeResourceValue(int)> ->_NONE_
<android.widget.SimpleExpandableListAdapter: int getChildrenCount(int)> ->_NONE_
<android.widget.TextView: int getLineBounds(int,android.graphics.Rect)> ->_NONE_
<android.widget.MultiAutoCompleteTextView: void replaceText(java.lang.CharSequence)> ->_NONE_
<java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)> ->_NONE_
<android.text.StaticLayout: int getEllipsisStart(int)> ->_NONE_
<java.net.Inet6Address: java.net.Inet6Address getByAddress(java.lang.String,byte[],int)> ->_NONE_
<org.apache.xml.dtm.DTMException: java.lang.String getMessageAndLocation()> ->_NONE_
<java.nio.NioUtils: java.io.FileDescriptor getFD(java.nio.channels.FileChannel)> ->_NONE_
<android.content.ClipData: int getItemCount()> ->_NONE_
<android.telephony.CellInfoLte: android.telephony.CellIdentityLte getCellIdentity()> ->_NONE_
<junit.textui.TestRunner: junit.framework.TestResult run(junit.framework.Test)> ->_NONE_
<java.util.zip.Inflater: void setInput(byte[])> ->_NONE_
<android.filterfw.core.FrameFormat: int getDepth()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: void setLogRecordFactory(gov.nist.javax.sip.LogRecordFactory)> ->_NONE_
<android.view.View: void setAccessibilityCursorPosition(int)> ->_NONE_
<org.apache.xml.utils.UnImplNode: void setAttribute(java.lang.String,java.lang.String)> ->_NONE_
<android.telephony.SignalStrength: int getCdmaEcio()> ->_NONE_
<javax.xml.xpath.XPathException: java.lang.Throwable getCause()> ->_NONE_
<android.inputmethodservice.SoftInputWindow: void setToken(android.os.IBinder)> ->_NONE_
<android.view.KeyEvent: boolean getKeyData(android.view.KeyCharacterMap$KeyData)> ->_NONE_
<android.app.ActivityManager: java.util.List getRunningExternalApplications()> ->_NONE_
<android.app.ActivityManagerProxy: void setPackageAskScreenCompat(java.lang.String,boolean)> ->_NONE_
<org.apache.xpath.functions.FuncExtFunction: java.lang.String getNamespace()> ->_NONE_
<android.graphics.Paint: java.util.Locale getTextLocale()> ->_NONE_
<javax.crypto.Cipher: java.lang.String getAlgorithm()> ->_NONE_
<android.gesture.GestureStore: java.util.Set getGestureEntries()> ->_NONE_
<android.widget.TextView: void setText(java.lang.CharSequence)> ->_NONE_
<android.util.LruCache: java.lang.Object get(java.lang.Object)> ->_NONE_
<gov.nist.javax.sip.header.RequestLine: void setSipVersion(java.lang.String)> ->_NONE_
<android.widget.TextView: int getTotalPaddingEnd()> ->_NONE_
<android.net.NetworkInfo: java.lang.String getReason()> ->_NONE_
<android.media.audiofx.EnvironmentalReverb: short getDecayHFRatio()> ->_NONE_
<android.renderscript.ScriptIntrinsicBlur: android.renderscript.Script$KernelID getKernelID()> ->_NONE_
<android.test.mock.MockContext: java.lang.String getPackageResourcePath()> ->_NONE_
<org.ccil.cowan.tagsoup.XMLWriter: void writeName(java.lang.String,java.lang.String,java.lang.String,boolean)> ->_NONE_
<android.widget.ImageView: void setAlpha(int)> ->_NONE_
<android.content.pm.PackageItemInfo: void dumpFront(android.util.Printer,java.lang.String)> ->_NONE_
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLowerCase(android.content.ComponentName,int)> ->_NONE_
<android.support.v13.app.FragmentCompat: void setMenuVisibility(android.app.Fragment,boolean)> ->_NONE_
<org.apache.commons.logging.impl.WeakHashtable: java.lang.Object get(java.lang.Object)> ->_NONE_
<android.app.Activity: android.content.ComponentName getCallingActivity()> ->_NONE_
<android.os.Binder: void dump(java.io.FileDescriptor,java.lang.String[])> ->_NONE_
<android.app.ActivityThread: android.os.Looper getLooper()> ->_NONE_
<org.apache.http.protocol.HttpService: void setHttpProcessor(org.apache.http.protocol.HttpProcessor)> ->_NONE_
<android.animation.ValueAnimator: void removeUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)> ->_NONE_
<org.apache.http.protocol.UriPatternMatcher: void setObjects(java.util.Map)> ->_NONE_
<java.text.MessageFormat: java.util.Locale getLocale()> ->_NONE_
<android.database.sqlite.SQLiteCursor: void setWindow(android.database.CursorWindow)> ->_NONE_
<java.net.Socket: void connect(java.net.SocketAddress,int)> ->_NONE_
<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread getApplicationThread()> ->_NONE_
<java.util.concurrent.locks.AbstractOwnableSynchronizer: java.lang.Thread getExclusiveOwnerThread()> ->_NONE_
<org.apache.xalan.processor.ProcessorInclude: void setHref(java.lang.String)> ->_NONE_
<android.app.ActivityThread: android.app.Application getApplication()> ->_NONE_
<android.media.AudioTrack: int getPlaybackHeadPosition()> ->_NONE_
<android.hardware.input.InputManager: android.view.InputDevice getInputDeviceByDescriptor(java.lang.String)> ->_NONE_
<android.filterpacks.imageproc.PosterizeFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> ->_NONE_
<org.kxml2.io.KXmlParser: void setProperty(java.lang.String,java.lang.Object)> ->_NONE_
<android.net.wifi.p2p.WifiP2pManager: android.os.Messenger getMessenger()> ->_NONE_
<android.view.PointerIcon: int getStyle()> ->_NONE_
<android.widget.RemoteViews: void setViewVisibility(int,int)> ->_NONE_
<android.net.BaseNetworkStateTracker: void setPolicyDataEnable(boolean)> ->_NONE_
<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertFactoryImpl: java.security.cert.Certificate getCertificate(byte[])> ->_NONE_
<android.graphics.drawable.GradientDrawable: void setStroke(int,int)> ->_NONE_
<jp.co.omronsoft.openwnn.Keyboard: void parseKeyboardAttributes(android.content.res.Resources,android.content.res.XmlResourceParser)> ->_NONE_
<android.support.v4.app.HCSparseArray: java.lang.Object get(int)> ->_NONE_
<org.ccil.cowan.tagsoup.jaxp.SAXFactoryImpl: org.ccil.cowan.tagsoup.jaxp.SAXParserImpl getPrototype()> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getTarget()> ->_NONE_
<org.apache.james.mime4j.message.Multipart: java.lang.String getEpilogue()> ->_NONE_
<java.security.cert.X509CRLSelector: void setIssuers(java.util.Collection)> ->_NONE_
<org.apache.xml.serializer.dom3.DOMErrorImpl: java.lang.String getType()> ->_NONE_
<java.lang.Class: java.lang.reflect.Method[] getMethods()> ->_NONE_
<org.apache.xpath.objects.XRTreeFrag: java.lang.String getTypeString()> ->_NONE_
<org.jivesoftware.smack.PacketReader: org.jivesoftware.smack.packet.RosterPacket parseRoster(org.xmlpull.v1.XmlPullParser)> ->_NONE_
<android.content.pm.VerificationParams: int getOriginatingUid()> ->_NONE_
<org.apache.xml.utils.UnImplNode: java.lang.Object getFeature(java.lang.String,java.lang.String)> ->_NONE_
<android.view.MotionEvent: int getEdgeFlags()> ->_NONE_
<android.animation.ObjectAnimator: java.lang.Object getTarget()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl: java.lang.String[] getDefaultCipherSuites()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.net.NetworkLayer getNetworkLayer()> ->_NONE_
<dalvik.system.DexPathList: dalvik.system.DexFile loadDexFile(java.io.File,java.io.File)> ->_NONE_
<android.test.mock.MockPackageManager: java.lang.String getNameForUid(int)> ->_NONE_
<org.apache.xalan.processor.TransformerFactoryImpl: boolean getFeature(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.IncrementalSAXSource_Filter: void setLexicalHandler(org.xml.sax.ext.LexicalHandler)> ->_NONE_
<org.apache.xpath.res.XPATHErrorResources: java.lang.Object[][] getContents()> ->_NONE_
<java.util.concurrent.atomic.AtomicIntegerArray: int getAndDecrement(int)> ->_NONE_
<android.app.StatusBarManager: void setIconVisibility(java.lang.String,boolean)> ->_NONE_
<android.app.ContextImpl: java.io.File getExternalFilesDir(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.ElemTemplate: void setStylesheet(org.apache.xalan.templates.Stylesheet)> ->_NONE_
<java.util.MissingFormatArgumentException: java.lang.String getFormatSpecifier()> ->_NONE_
<org.jivesoftware.smack.packet.Authentication: void setPassword(java.lang.String)> ->_NONE_
<android.view.MotionEvent: float getToolMinor()> ->_NONE_
<android.net.NetworkStatsHistory: int getIndexBefore(long)> ->_NONE_
<libcore.icu.RuleBasedCollatorICU: void setAttribute(int,int)> ->_NONE_
<android.webkit.WebSettingsClassic: void setMediaPlaybackRequiresUserGesture(boolean)> ->_NONE_
<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<gov.nist.javax.sip.header.SIPHeaderList: java.lang.StringBuffer encodeBody(java.lang.StringBuffer)> ->_NONE_
<android.os.Debug: int getGlobalClassInitCount()> ->_NONE_
<android.app.ActivityThread: android.app.ContextImpl getSystemContext()> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: void runTransformThread(java.lang.Runnable)> ->_NONE_
<org.apache.harmony.security.asn1.BerInputStream: int getLength(byte[])> ->_NONE_
<java.util.Currency: java.util.Currency getInstance(java.util.Locale)> ->_NONE_
<jp.co.omronsoft.openwnn.TextCandidates1LineViewManager: android.widget.TextView getFocusedView()> ->_NONE_
<android.net.rtp.AudioGroup: void sendDtmf(int)> ->_NONE_
<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.Collection getQueuedThreads()> ->_NONE_
<libcore.io.DiskLruCache: libcore.io.DiskLruCache$Editor edit(java.lang.String,long)> ->_NONE_
<android.app.admin.DevicePolicyManager: int getPasswordHistoryLength(android.content.ComponentName)> ->_NONE_
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void closeExpiredConnections()> ->_NONE_
<org.apache.xalan.templates.ElemPI: int getXSLToken()> ->_NONE_
<junit.runner.StandardTestSuiteLoader: java.lang.Class load(java.lang.String)> ->_NONE_
<android.hardware.LegacySensorManager: int getRotation()> ->_NONE_
<org.apache.http.impl.client.DefaultUserTokenHandler: java.lang.Object getUserToken(org.apache.http.protocol.HttpContext)> ->_NONE_
<javax.xml.transform.sax.SAXSource: java.lang.String getSystemId()> ->_NONE_
<android.app.LoadedApk: java.lang.String getAppDir()> ->_NONE_
<android.widget.CalendarView: void setWeekNumberColor(int)> ->_NONE_
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()> ->_NONE_
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getContentDescription()> ->_NONE_
<gov.nist.javax.sip.parser.SubscriptionStateParser: gov.nist.javax.sip.header.SIPHeader parse()> ->_NONE_
<android.view.View: android.graphics.Matrix getInverseMatrix()> ->_NONE_
<java.util.Date: int getDay()> ->_NONE_
<android.graphics.Region: android.graphics.Rect getBounds()> ->_NONE_
<org.apache.xalan.transformer.TrAXFilter: org.apache.xalan.transformer.TransformerImpl getTransformer()> ->_NONE_
<org.xmlpull.v1.sax2.Driver: int getIndex(java.lang.String,java.lang.String)> ->_NONE_
<android.webkit.WebIconDatabaseClassic: void requestIconForPageUrl(java.lang.String,android.webkit.WebIconDatabase$IconListener)> ->_NONE_
<android.os.UserHandle: void writeToParcel(android.os.UserHandle,android.os.Parcel)> ->_NONE_
<gov.nist.javax.sip.header.MediaRange: java.lang.String getType()> ->_NONE_
<android.widget.Spinner: void setDropDownVerticalOffset(int)> ->_NONE_
<android.media.AudioManager: int getLastAudibleMasterVolume()> ->_NONE_
<android.filterfw.core.VertexFrame: java.nio.ByteBuffer getData()> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler getResultTreeHandler()> ->_NONE_
<android.os.Handler: boolean sendEmptyMessageAtTime(int,long)> ->_NONE_
<android.location.Address: java.lang.String getSubLocality()> ->_NONE_
<org.apache.xalan.templates.ElemCopyOf: org.apache.xpath.XPath getSelect()> ->_NONE_
<android.webkit.WebViewClassic: void updateTextSelectionFromMessage(int,int,android.webkit.WebViewCore$TextSelectionData)> ->_NONE_
<org.apache.xml.serializer.OutputPropertyUtils: int getIntProperty(java.lang.String,java.util.Properties)> ->_NONE_
<java.io.PrintWriter: void write(char[],int,int)> ->_NONE_
<javax.xml.parsers.DocumentBuilderFactory: void setXIncludeAware(boolean)> ->_NONE_
<gov.nist.javax.sip.stack.TCPMessageChannel: int getPeerPacketSourcePort()> ->_NONE_
<android.telephony.CellBroadcastMessage: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.http.util.EncodingUtils: java.lang.String getString(byte[],java.lang.String)> ->_NONE_
<android.content.Intent: android.graphics.Rect getSourceBounds()> ->_NONE_
<java.security.cert.PKIXParameters: java.util.List getCertPathCheckers()> ->_NONE_
<android.widget.CursorAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)> ->_NONE_
<gov.nist.javax.sip.header.ims.SecurityAgree: void setMode(java.lang.String)> ->_NONE_
<org.apache.http.message.AbstractHttpMessage: org.apache.http.params.HttpParams getParams()> ->_NONE_
<android.app.Dialog: void setVolumeControlStream(int)> ->_NONE_
<android.database.sqlite.SQLiteDebug: android.database.sqlite.SQLiteDebug$PagerStats getDatabaseInfo()> ->_NONE_
<javax.crypto.Mac: void update(byte[])> ->_NONE_
<java.sql.SQLException: java.sql.SQLException getNextException()> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM: int getDocumentRoot(int)> ->_NONE_
<org.jivesoftware.smack.XMPPConnection: java.lang.String getServiceName()> ->_NONE_
<net.oauth.signature.RSA_SHA1: java.security.PublicKey getPublicKeyFromDerCert(byte[])> ->_NONE_
<android.graphics.drawable.AnimatedRotateDrawable: void setAlpha(int)> ->_NONE_
<org.jivesoftware.smack.XMPPConnection: boolean isAuthenticated()> ->_NONE_
<android.webkit.WebSettingsClassic: void setFantasyFontFamily(java.lang.String)> ->_NONE_
<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.DOMConfiguration getDomConfig()> ->_NONE_
<java.net.Socket: int getTrafficClass()> ->_NONE_
<jp.co.omronsoft.openwnn.TextCandidatesViewManager: int getCandidateViewDivison()> ->_NONE_
<android.filterfw.core.OutputPort: boolean isConnected()> ->_NONE_
<android.graphics.Path: void set(android.graphics.Path)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.KeyManagerImpl: java.lang.String[] getClientAliases(java.lang.String,java.security.Principal[])> ->_NONE_
<android.view.ViewGroup: void setAddStatesFromChildren(boolean)> ->_NONE_
<android.net.wifi.p2p.WifiP2pGroup: void setInterface(java.lang.String)> ->_NONE_
<android.preference.Preference: android.os.Bundle getExtras()> ->_NONE_
<android.telephony.SmsCbMessage: android.telephony.SmsCbLocation getLocation()> ->_NONE_
<net.oauth.signature.RSA_SHA1: java.security.PublicKey getPublicKeyFromDer(byte[])> ->_NONE_
<android.media.audiofx.PresetReverb: short getPreset()> ->_NONE_
<org.apache.xml.dtm.DTMException: void setLocator(javax.xml.transform.SourceLocator)> ->_NONE_
<android.media.videoeditor.OverlayFrame: void setOverlayFrameHeight(int)> ->_NONE_
<org.apache.xml.utils.res.StringArrayWrapper: int getLength()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)> ->_NONE_
<android.telephony.cdma.CdmaSmsCbProgramResults: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<gov.nist.javax.sip.parser.ParametersParser: void parseNameValueList(gov.nist.javax.sip.header.ParametersHeader)> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: void setApplicationData(java.lang.Object)> ->_NONE_
<android.app.backup.AbsoluteFileBackupHelper: void restoreEntity(android.app.backup.BackupDataInputStream)> ->_NONE_
<android.net.InterfaceConfiguration: void setLinkAddress(android.net.LinkAddress)> ->_NONE_
<android.text.TextLine: void drawTextRun(android.graphics.Canvas,android.text.TextPaint,int,int,int,int,boolean,float,int)> ->_NONE_
<android.graphics.drawable.ColorDrawable: int getOpacity()> ->_NONE_
<android.view.animation.LayoutAnimationController: void setOrder(int)> ->_NONE_
<gov.nist.javax.sip.header.Via: java.lang.String getProtocolVersion()> ->_NONE_
<android.widget.AbsListView: int getCheckedItemCount()> ->_NONE_
<java.io.OutputStreamWriter: java.lang.String getEncoding()> ->_NONE_
<gov.nist.javax.sip.stack.SIPServerTransaction: void setRequestInterface(gov.nist.javax.sip.stack.ServerRequestInterface)> ->_NONE_
<android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.Context,int)> ->_NONE_
<gov.nist.javax.sip.parser.ContactParser: gov.nist.javax.sip.header.SIPHeader parse()> ->_NONE_
<org.apache.xml.utils.res.LongArrayWrapper: long getLong(int)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.KeyDeclaration getKey(int)> ->_NONE_
<android.media.AudioManager: void setRemoteSubmixOn(boolean,int)> ->_NONE_
<org.apache.xalan.processor.ProcessorCharacters: void setXslTextElement(org.apache.xalan.templates.ElemText)> ->_NONE_
<android.filterfw.GraphEnvironment: android.filterfw.core.FilterGraph getGraph(int)> ->_NONE_
<android.net.DnsPinger: java.net.InetAddress getDefaultDns()> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object decode(byte[])> ->_NONE_
<android.widget.Switch: void setSwitchTypeface(android.graphics.Typeface)> ->_NONE_
<android.widget.SimpleAdapter: void setViewBinder(android.widget.SimpleAdapter$ViewBinder)> ->_NONE_
<android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs: java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo)> ->_NONE_
<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)> ->_NONE_
<android.app.Activity: void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)> ->_NONE_
<org.ccil.cowan.tagsoup.Schema: java.lang.String getPrefix()> ->_NONE_
<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader)> ->_NONE_
<org.apache.commons.io.filefilter.AndFileFilter: boolean accept(java.io.File,java.lang.String)> ->_NONE_
<android.text.style.StyleSpan: void updateDrawState(android.text.TextPaint)> ->_NONE_
<org.apache.xalan.templates.ElemComment: int getXSLToken()> ->_NONE_
<android.app.ActivityManager: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: java.io.InputStream getErrorStream()> ->_NONE_
<org.apache.xml.serializer.utils.SystemIDResolver: java.lang.String getAbsoluteURI(java.lang.String)> ->_NONE_
<android.webkit.ZoomManager: void updateDefaultZoomDensity(float)> ->_NONE_
<junit.runner.ReloadingTestSuiteLoader: java.lang.Class reload(java.lang.Class)> ->_NONE_
<android.support.v4.app.Fragment: android.content.res.Resources getResources()> ->_NONE_
<android.app.PendingIntent: android.content.IntentSender getIntentSender()> ->_NONE_
<org.apache.xpath.VariableStack: void setStackFrame(int)> ->_NONE_
<org.apache.http.impl.client.ClientParamsStack: java.lang.Object getParameter(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT getNamespace()> ->_NONE_
<android.renderscript.ScriptIntrinsicYuvToRGB: void setInput(android.renderscript.Allocation)> ->_NONE_
<android.net.http.Connection: void setCanPersist(org.apache.http.HttpEntity,org.apache.http.ProtocolVersion,int)> ->_NONE_
<java.util.concurrent.ThreadPoolExecutor: int getMaximumPoolSize()> ->_NONE_
<android.view.FocusFinder: android.view.View getForwardFocusable(android.view.ViewGroup,android.view.View,java.util.ArrayList,int)> ->_NONE_
<gov.nist.javax.sip.message.MessageObject: java.lang.String debugDump()> ->_NONE_
<android.net.wifi.WifiManager: void setCountryCode(java.lang.String,boolean)> ->_NONE_
<android.telephony.CellInfoCdma: void log(java.lang.String)> ->_NONE_
<android.text.BoringLayout: int getBottomPadding()> ->_NONE_
<org.apache.harmony.xml.dom.AttrImpl: boolean getSpecified()> ->_NONE_
<org.apache.xml.serializer.dom3.DOM3SerializerImpl: void setSerializationHandler(org.apache.xml.serializer.SerializationHandler)> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getIntegrityProtected()> ->_NONE_
<android.bluetooth.BluetoothHeadset: boolean setPriority(android.bluetooth.BluetoothDevice,int)> ->_NONE_
<gov.nist.javax.sip.message.SIPRequest: void setSIPVersion(java.lang.String)> ->_NONE_
<android.widget.SuggestionsAdapter: void setViewText(android.widget.TextView,java.lang.CharSequence)> ->_NONE_
<java.io.EmulatedFields: byte get(java.lang.String,byte)> ->_NONE_
<org.apache.xalan.templates.ElemNumber: void setLevel(int)> ->_NONE_
<android.webkit.WebSettings: android.webkit.WebSettings$TextSize getTextSize()> ->_NONE_
<org.apache.http.message.AbstractHttpMessage: org.apache.http.Header[] getAllHeaders()> ->_NONE_
<android.support.v4.view.PagerTitleStrip: void setTextSpacing(int)> ->_NONE_
<android.preference.Preference: android.graphics.drawable.Drawable getIcon()> ->_NONE_
<org.apache.xalan.templates.StylesheetComposed: int getEndImportCountComposed()> ->_NONE_
<java.util.logging.LogRecord: void setSourceMethodName(java.lang.String)> ->_NONE_
<libcore.io.BlockGuardOs: void connect(java.io.FileDescriptor,java.net.InetAddress,int)> ->_NONE_
<android.util.DisplayMetrics: int getDeviceDensity()> ->_NONE_
<android.preference.DialogPreference: void setDialogMessage(java.lang.CharSequence)> ->_NONE_
<android.app.WallpaperInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)> ->_NONE_
<android.media.AudioTrack: int getState()> ->_NONE_
<android.media.videoeditor.AudioTrack: long getStartTime()> ->_NONE_
<android.webkit.WebSettingsClassic: void setSupportZoom(boolean)> ->_NONE_
<org.apache.xml.serializer.dom3.DOMErrorImpl: java.lang.Object getRelatedException()> ->_NONE_
<java.net.MulticastSocket: void setTTL(byte)> ->_NONE_
<org.apache.xpath.objects.XObject: java.lang.String getTypeString()> ->_NONE_
<android.widget.PopupWindow: void update(int,int)> ->_NONE_
<java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)> ->_NONE_
<android.animation.LayoutTransition: void setInterpolator(int,android.animation.TimeInterpolator)> ->_NONE_
<android.support.v4.view.ViewCompatJB: int getImportantForAccessibility(android.view.View)> ->_NONE_
<org.apache.xpath.axes.AxesWalker: void setDefaultDTM(org.apache.xml.dtm.DTM)> ->_NONE_
<android.view.ViewConfiguration: int getScaledPagingTouchSlop()> ->_NONE_
<android.location.Location: long getElapsedRealtimeNanos()> ->_NONE_
<android.webkit.WebSettings: void setLoadWithOverviewMode(boolean)> ->_NONE_
<org.apache.http.impl.conn.DefaultClientConnection: java.lang.Object getAttribute(java.lang.String)> ->_NONE_
<android.app.WallpaperManager: android.graphics.Bitmap getBitmap()> ->_NONE_
<android.content.pm.ProviderInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.webkit.AccessibilityInjector: boolean performAccessibilityAction(int,android.os.Bundle)> ->_NONE_
<android.view.Window: android.view.Window$Callback getCallback()> ->_NONE_
<org.apache.xpath.compiler.OpMap: int getNextOpPos(int)> ->_NONE_
<android.view.MotionEvent: int getPointerId(int)> ->_NONE_
<android.database.MatrixCursor: int getType(int)> ->_NONE_
<android.media.videoeditor.MediaArtistNativeHelper: int getTotalEffects(java.util.List)> ->_NONE_
<java.io.StringBufferInputStream: int read()> ->_NONE_
<android.nfc.tech.IsoDep: android.nfc.Tag getTag()> ->_NONE_
<android.media.ExifInterface: double getAltitude(double)> ->_NONE_
<java.lang.SecurityManager: java.lang.Class currentLoadedClass()> ->_NONE_
<android.view.ActionMode: java.lang.Object getTag()> ->_NONE_
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: org.xml.sax.ContentHandler getContentHandler()> ->_NONE_
<org.apache.http.params.BasicHttpParams: void setParameters(java.lang.String[],java.lang.Object)> ->_NONE_
<android.graphics.drawable.Drawable: boolean setState(int[])> ->_NONE_
<android.view.View: boolean checkInputConnectionProxy(android.view.View)> ->_NONE_
<android.app.ListActivity: int getSelectedItemPosition()> ->_NONE_
<libcore.net.http.AbstractHttpOutputStream: void write(int)> ->_NONE_
<android.widget.VideoView: int getDuration()> ->_NONE_
<java.security.Security: java.lang.String getAlgorithmProperty(java.lang.String,java.lang.String)> ->_NONE_
<android.nfc.tech.MifareUltralight: android.nfc.tech.MifareUltralight get(android.nfc.Tag)> ->_NONE_
<android.widget.SearchView: int getInputType()> ->_NONE_
<android.graphics.Paint: int getTextWidths(java.lang.CharSequence,int,int,float[])> ->_NONE_
<org.apache.xalan.templates.Stylesheet: int getOutputCount()> ->_NONE_
<android.widget.AlphabetIndexer: int getPositionForSection(int)> ->_NONE_
<org.apache.http.protocol.BasicHttpProcessor: int getRequestInterceptorCount()> ->_NONE_
<android.telephony.gsm.GsmCellLocation: int getLac()> ->_NONE_
<android.media.audiofx.Visualizer: int setScalingMode(int)> ->_NONE_
<android.text.method.BaseMovementMethod: int getScrollBoundsRight(android.widget.TextView)> ->_NONE_
<android.support.v4.view.PagerTabStrip: void setBackgroundResource(int)> ->_NONE_
<org.xml.sax.helpers.XMLFilterImpl: void setContentHandler(org.xml.sax.ContentHandler)> ->_NONE_
<org.apache.commons.io.output.ThresholdingOutputStream: int getThreshold()> ->_NONE_
<android.preference.SwitchPreference: void setSwitchTextOff(java.lang.CharSequence)> ->_NONE_
<org.apache.harmony.security.asn1.BerInputStream: int getTagOffset()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: void setSoTimeout(int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.ProtocolVersion: org.apache.harmony.xnet.provider.jsse.ProtocolVersion getByName(java.lang.String)> ->_NONE_
<android.widget.NumberPicker: android.widget.NumberPicker$Formatter getTwoDigitFormatter()> ->_NONE_
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: java.lang.String getInstanceName()> ->_NONE_
<android.webkit.WebBackForwardListClassic: android.webkit.WebHistoryItem getCurrentItem()> ->_NONE_
<android.media.videoeditor.MediaVideoItem: int getAudioSamplingFrequency()> ->_NONE_
<android.widget.ListView: void setOverscrollFooter(android.graphics.drawable.Drawable)> ->_NONE_
<org.jivesoftware.smack.packet.Packet: java.lang.String getTo()> ->_NONE_
<java.io.InputStreamReader: int read()> ->_NONE_
<org.apache.http.entity.AbstractHttpEntity: org.apache.http.Header getContentEncoding()> ->_NONE_
<android.net.LinkSocket: android.net.LinkCapabilities getCapabilities()> ->_NONE_
<android.renderscript.AllocationAdapter: void setZ(int)> ->_NONE_
<android.renderscript.AllocationAdapter: void setY(int)> ->_NONE_
<dalvik.system.profiler.BinaryHprofWriter: int writeString(java.lang.String)> ->_NONE_
<android.mtp.MtpDeviceInfo: java.lang.String getVersion()> ->_NONE_
<libcore.io.DiskLruCache: libcore.io.DiskLruCache$Snapshot get(java.lang.String)> ->_NONE_
<org.jivesoftware.smack.util.Cache: int getMaxCacheSize()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getPeerAddress()> ->_NONE_
<org.apache.http.impl.cookie.BasicClientCookie2: void setCommentURL(java.lang.String)> ->_NONE_
<android.net.ConnectivityManager: void setMobileDataEnabled(boolean)> ->_NONE_
<org.apache.xpath.functions.SecuritySupport12: long getLastModified(java.io.File)> ->_NONE_
<android.widget.OverScroller: int getFinalX()> ->_NONE_
<android.widget.OverScroller: int getFinalY()> ->_NONE_
<org.apache.xalan.processor.StylesheetHandler: void setOriginatingNode(org.w3c.dom.Node)> ->_NONE_
<org.apache.harmony.security.provider.crypto.RandomBitsSupplier: byte[] getUnixDeviceRandom(int)> ->_NONE_
<android.widget.Spinner: int getDropDownVerticalOffset()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.security.Principal getLocalPrincipal()> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: void setCookieSpecs(org.apache.http.cookie.CookieSpecRegistry)> ->_NONE_
<android.filterpacks.imageproc.AlphaBlendFilter: android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)> ->_NONE_
<org.apache.xalan.templates.DecimalFormatProperties: void setDigit(char)> ->_NONE_
<android.widget.TextView: void setLinksClickable(boolean)> ->_NONE_
<android.webkit.URLUtil: java.lang.String guessFileName(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.os.Parcel: void writeParcelableArray(android.os.Parcelable[],int)> ->_NONE_
<android.accounts.AccountManagerService: android.accounts.Account[] getAccountsFromCacheLocked(android.accounts.AccountManagerService$UserAccounts,java.lang.String)> ->_NONE_
<org.apache.http.impl.cookie.BasicClientCookie2: int[] getPorts()> ->_NONE_
<java.util.UnknownFormatConversionException: java.lang.String getMessage()> ->_NONE_
<org.apache.harmony.xml.dom.EntityImpl: java.lang.String getXmlEncoding()> ->_NONE_
<android.text.PackedObjectVector: void setValue(int,int,java.lang.Object)> ->_NONE_
<android.test.mock.MockContext: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)> ->_NONE_
<java.net.CookieStoreImpl: java.util.List getURIs()> ->_NONE_
<android.media.videoeditor.MediaImageItem: android.graphics.Bitmap getThumbnail(int,int,long)> ->_NONE_
<org.apache.http.impl.cookie.BestMatchSpec: org.apache.http.impl.cookie.RFC2109Spec getObsoleteStrict()> ->_NONE_
<org.apache.james.mime4j.message.Header: java.util.List getFields(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.RequestLine: void setUri(javax.sip.address.URI)> ->_NONE_
<org.apache.xpath.compiler.XPathParser: int getFunctionToken(java.lang.String)> ->_NONE_
<org.apache.harmony.xml.ExpatAttributes: java.lang.String getValue(java.lang.String,java.lang.String)> ->_NONE_
<android.telephony.cdma.CdmaCellLocation: int getNetworkId()> ->_NONE_
<android.text.format.DateUtils: java.lang.String getMonthString(int,int)> ->_NONE_
<android.app.SearchableInfo: java.lang.String getSuggestAuthority()> ->_NONE_
<java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String,java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.extensions.Join: void setCallIdentifier(gov.nist.javax.sip.header.CallIdentifier)> ->_NONE_
<org.apache.xalan.templates.ElemExtensionDecl: java.lang.String getElement(int)> ->_NONE_
<android.renderscript.RenderScript: android.renderscript.RenderScript$RSMessageHandler getMessageHandler()> ->_NONE_
<org.apache.http.message.BasicStatusLine: int getStatusCode()> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: void setCheckable(boolean)> ->_NONE_
<android.preference.ListPreference: java.lang.String getValue()> ->_NONE_
<java.util.concurrent.atomic.AtomicLong: long getAndIncrement()> ->_NONE_
<android.net.wifi.p2p.WifiP2pWfdInfo: java.lang.String getDeviceInfoHex()> ->_NONE_
<android.mtp.MtpObjectInfo: int getThumbCompressedSize()> ->_NONE_
<android.content.ContextWrapper: android.os.Looper getMainLooper()> ->_NONE_
<org.apache.xpath.axes.FilterExprIteratorSimple: void setRoot(int,java.lang.Object)> ->_NONE_
<android.nfc.tech.MifareClassic: android.nfc.tech.MifareClassic get(android.nfc.Tag)> ->_NONE_
<org.apache.xml.serializer.SerializerBase: void setDoctypePublic(java.lang.String)> ->_NONE_
<android.location.Criteria: void setCostAllowed(boolean)> ->_NONE_
<android.graphics.Paint: int getTextRunCursor(java.lang.CharSequence,int,int,int,int,int)> ->_NONE_
<android.text.PackedObjectVector: java.lang.Object getValue(int,int)> ->_NONE_
<org.apache.harmony.security.provider.cert.Cache: long getHash(byte[])> ->_NONE_
<android.content.ContentValues: java.lang.Short getAsShort(java.lang.String)> ->_NONE_
<java.security.cert.CertPathValidator: java.security.cert.CertPathValidator getInstance(java.lang.String,java.lang.String)> ->_NONE_
<android.app.ActivityOptions: android.graphics.Bitmap getThumbnail()> ->_NONE_
<gov.nist.core.NameValueList: java.lang.String encode()> ->_NONE_
<java.security.cert.CertPathBuilder: java.security.cert.CertPathBuilder getInstance(java.lang.String)> ->_NONE_
<java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int)> ->_NONE_
<java.security.cert.X509CertSelector: java.security.PublicKey getSubjectPublicKey()> ->_NONE_
<android.speech.tts.BlockingAudioTrack: int getChannelConfig(int)> ->_NONE_
<android.widget.AbsListView: int getListPaddingRight()> ->_NONE_
<gov.nist.javax.sip.header.extensions.SessionExpires: java.lang.String encodeBody()> ->_NONE_
<gov.nist.javax.sip.header.RAck: long getRSequenceNumber()> ->_NONE_
<android.app.ActivityManagerProxy: int broadcastIntent(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,boolean,boolean,int)> ->_NONE_
<org.apache.xml.dtm.ref.IncrementalSAXSource_Filter: void setErrHandler(org.xml.sax.ErrorHandler)> ->_NONE_
<android.widget.GridLayout: int getMargin1(android.view.View,boolean,boolean)> ->_NONE_
<android.location.LocationManager: void requestLocationUpdates(long,float,android.location.Criteria,android.app.PendingIntent)> ->_NONE_
<android.widget.AdapterView: java.lang.Object getItemAtPosition(int)> ->_NONE_
<android.app.SearchableInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<org.apache.http.impl.conn.SingleClientConnManager: void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit)> ->_NONE_
<android.widget.ToggleButton: java.lang.CharSequence getTextOff()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setPassword(java.lang.Object,boolean)> ->_NONE_
<android.media.videoeditor.EffectKenBurns: void getKenBurnsSettings(android.graphics.Rect,android.graphics.Rect)> ->_NONE_
<android.media.videoeditor.MediaImageItem: java.lang.String getScaledImageFileName()> ->_NONE_
<android.media.JetPlayer: android.media.JetPlayer getJetPlayer()> ->_NONE_
<android.filterfw.core.AsyncRunner: java.lang.Exception getError()> ->_NONE_
<android.media.AudioManager: int getMasterStreamType()> ->_NONE_
<android.test.mock.MockContext: java.io.File getObbDir()> ->_NONE_
<android.widget.ArrayAdapter: long getItemId(int)> ->_NONE_
<android.app.SearchableInfo: boolean getVoiceSearchLaunchWebSearch()> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getLastChildElem()> ->_NONE_
<android.util.XmlPullAttributes: java.lang.String getClassAttribute()> ->_NONE_
<org.apache.http.auth.NTCredentials: java.lang.String getWorkstation()> ->_NONE_
<java.util.concurrent.ThreadPoolExecutor: long getTaskCount()> ->_NONE_
<android.app.DialogFragment: void setCancelable(boolean)> ->_NONE_
<libcore.icu.RuleBasedCollatorICU: int getAttribute(int)> ->_NONE_
<javax.obex.ClientOperation: javax.obex.HeaderSet getReceivedHeader()> ->_NONE_
<org.apache.xpath.functions.Function3Args: org.apache.xpath.Expression getArg2()> ->_NONE_
<org.apache.xpath.objects.XNodeSet: double getNumberFromNode(int)> ->_NONE_
<android.net.EthernetDataTracker: android.net.LinkProperties getLinkProperties()> ->_NONE_
<android.content.Intent: java.lang.String getAction()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: void setPrefixNameTable(org.apache.xml.dtm.ref.DTMStringPool)> ->_NONE_
<org.apache.xml.serializer.CharInfo: void setASCIItextDirty(int)> ->_NONE_
<jp.co.omronsoft.openwnn.TextCandidatesViewManager: void setEnableEmoticon(boolean)> ->_NONE_
<android.view.animation.GridLayoutAnimationController: void setDirection(int)> ->_NONE_
<android.view.View: int getSolidColor()> ->_NONE_
<android.os.Bundle: int getInt(java.lang.String)> ->_NONE_
<android.app.SearchableInfo: int getSettingsDescriptionId()> ->_NONE_
<org.apache.xml.serializer.dom3.DOMLocatorImpl: org.w3c.dom.Node getRelatedNode()> ->_NONE_
<org.apache.xalan.transformer.TransformerIdentityImpl: void setSystemId(java.lang.String)> ->_NONE_
<org.apache.xpath.NodeSetDTM: org.apache.xml.dtm.DTM getDTM(int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: void setEnableSessionCreation(boolean)> ->_NONE_
<java.util.concurrent.ForkJoinTask: java.lang.Object get()> ->_NONE_
<android.webkit.WebViewClassic: android.webkit.AccessibilityInjector getAccessibilityInjector()> ->_NONE_
<android.app.backup.WallpaperBackupHelper: void writeNewStateDescription(android.os.ParcelFileDescriptor)> ->_NONE_
<android.widget.TabWidget: void setLeftStripDrawable(android.graphics.drawable.Drawable)> ->_NONE_
<android.view.MotionEvent: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<java.net.PlainDatagramSocketImpl: int getTimeToLive()> ->_NONE_
<java.text.DecimalFormat: java.lang.String getPositivePrefix()> ->_NONE_
<android.test.LoaderTestCase: java.lang.Object getLoaderResultSynchronously(android.content.Loader)> ->_NONE_
<org.xmlpull.v1.sax2.Driver: org.xml.sax.DTDHandler getDTDHandler()> ->_NONE_
<android.webkit.WebSettings: void setFixedFontFamily(java.lang.String)> ->_NONE_
<java.lang.Thread: java.util.Map getAllStackTraces()> ->_NONE_
<org.apache.xml.serializer.dom3.DOMOutputImpl: void setCharacterStream(java.io.Writer)> ->_NONE_
<android.os.Bundle: float getFloat(java.lang.String,float)> ->_NONE_
<org.ccil.cowan.tagsoup.Schema: org.ccil.cowan.tagsoup.ElementType getElementType(java.lang.String)> ->_NONE_
<android.appwidget.AppWidgetManager: void partiallyUpdateAppWidget(int[],android.widget.RemoteViews)> ->_NONE_
<android.os.CommonTimeConfig: java.net.InetSocketAddress getMasterElectionEndpoint()> ->_NONE_
<android.graphics.drawable.BitmapDrawable: void setTargetDensity(int)> ->_NONE_
<android.app.ProgressDialog: void setSecondaryProgress(int)> ->_NONE_
<android.media.videoeditor.VideoEditorFactory: android.media.videoeditor.VideoEditor load(java.lang.String,boolean)> ->_NONE_
<android.net.DhcpInfoInternal: java.util.Collection getRoutes()> ->_NONE_
<java.sql.Date: int getHours()> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: void getBoundsInScreen(android.graphics.Rect)> ->_NONE_
<android.webkit.WebViewClassic: java.lang.String getTitle()> ->_NONE_
<android.util.MonthDisplayHelper: int getYear()> ->_NONE_
<java.net.SocketImpl: java.net.InetAddress getInetAddress()> ->_NONE_
<android.os.UserHandle: int getAppId(int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getOpenSSLKey()> ->_NONE_
<org.apache.xml.serializer.utils.AttList: java.lang.String getLocalName(int)> ->_NONE_
<org.apache.http.impl.io.AbstractSessionOutputBuffer: void writeLine(java.lang.String)> ->_NONE_
<android.view.View: void getBoundsOnScreen(android.graphics.Rect)> ->_NONE_
<gov.nist.javax.sip.SipStackImpl: java.lang.String[] getEnabledCipherSuites()> ->_NONE_
<gov.nist.javax.sip.ResponseEventExt: void setOriginalTransaction(gov.nist.javax.sip.ClientTransactionExt)> ->_NONE_
<android.media.MediaPlayer: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)> ->_NONE_
<android.app.Activity: void setFeatureDrawableAlpha(int,int)> ->_NONE_
<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int getStartNode()> ->_NONE_
<jp.co.omronsoft.openwnn.TextCandidatesViewManager: void setViewType(int)> ->_NONE_
<org.apache.xpath.patterns.StepPattern: void setPredicates(org.apache.xpath.Expression[])> ->_NONE_
<java.security.cert.X509CRLSelector: void setMaxCRLNumber(java.math.BigInteger)> ->_NONE_
<java.sql.Date: void setTime(long)> ->_NONE_
<android.os.CommonTimeConfig: int setMasterElectionEndpoint(java.net.InetSocketAddress)> ->_NONE_
<android.app.SearchManager: android.content.ComponentName getWebSearchActivity()> ->_NONE_
<jp.co.omronsoft.openwnn.TextCandidatesViewManager: int getViewTopOnScreen(android.view.View)> ->_NONE_
<org.jivesoftware.smackx.ServiceDiscoveryManager: void setIdentityName(java.lang.String)> ->_NONE_
<android.widget.Gallery: void setGravity(int)> ->_NONE_
<android.app.SearchableInfo: int getHintId()> ->_NONE_
<gov.nist.javax.sip.stack.MessageChannel: gov.nist.core.HostPort getPeerHostPort()> ->_NONE_
<org.apache.xalan.templates.ElemTemplate: void execute(org.apache.xalan.transformer.TransformerImpl)> ->_NONE_
<android.app.AlertDialog: void setTitle(java.lang.CharSequence)> ->_NONE_
<android.content.Entity: java.util.ArrayList getSubValues()> ->_NONE_
<android.widget.ActivityChooserView: void setInitialActivityCount(int)> ->_NONE_
<android.hardware.usb.UsbEndpoint: int getEndpointNumber()> ->_NONE_
<android.graphics.drawable.Drawable: int getLevel()> ->_NONE_
<android.net.wifi.WifiConfigStore: android.net.DhcpInfoInternal getIpConfiguration(int)> ->_NONE_
<android.app.Instrumentation: android.os.Bundle getBinderCounts()> ->_NONE_
<android.mtp.MtpDevice: java.lang.String getDeviceName()> ->_NONE_
<android.location.Country: long getTimestamp()> ->_NONE_
<android.text.SpannableStringBuilder: void setFilters(android.text.InputFilter[])> ->_NONE_
<android.webkit.WebViewClassic: int getVisibleTitleHeightImpl()> ->_NONE_
<android.media.audiofx.Visualizer: int getCaptureSize()> ->_NONE_
<android.content.pm.PermissionInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.graphics.drawable.LayerDrawable: boolean getPadding(android.graphics.Rect)> ->_NONE_
<android.support.v4.app.HCSparseArray: void setValueAt(int,java.lang.Object)> ->_NONE_
<android.graphics.Canvas: javax.microedition.khronos.opengles.GL getGL()> ->_NONE_
<org.apache.xalan.transformer.KeyTable: org.apache.xml.utils.QName getKeyTableName()> ->_NONE_
<org.apache.james.mime4j.field.contenttype.parser.TokenMgrError: java.lang.String getMessage()> ->_NONE_
<android.os.Broadcaster: void dumpRegistrations()> ->_NONE_
<android.test.AndroidTestRunner: java.lang.Class loadTestClass(java.lang.String)> ->_NONE_
<org.apache.http.impl.client.AbstractHttpClient: void setKeepAliveStrategy(org.apache.http.conn.ConnectionKeepAliveStrategy)> ->_NONE_
<android.widget.SimpleExpandableListAdapter: long getChildId(int,int)> ->_NONE_
<org.apache.http.entity.HttpEntityWrapper: void writeTo(java.io.OutputStream)> ->_NONE_
<org.apache.xml.dtm.SecuritySupport: boolean getFileExists(java.io.File)> ->_NONE_
<dalvik.system.profiler.BinaryHprofReader: void setStrict(boolean)> ->_NONE_
<java.text.DateFormat: java.text.DateFormat getTimeInstance()> ->_NONE_
<android.net.http.RequestQueue: android.net.http.RequestHandle queueSynchronousRequest(java.lang.String,android.net.WebAddress,java.lang.String,java.util.Map,android.net.http.EventHandler,java.io.InputStream,int)> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: void setRemoteSequenceNumber(long)> ->_NONE_
<org.apache.xml.serializer.Version: int getReleaseVersionNum()> ->_NONE_
<gov.nist.javax.sip.header.SIPHeaderList: java.lang.String encode()> ->_NONE_
<org.apache.xalan.transformer.TransformerHandlerImpl: void startEntity(java.lang.String)> ->_NONE_
<android.view.GLES20RecordingCanvas: void drawTextRun(java.lang.CharSequence,int,int,int,int,float,float,int,android.graphics.Paint)> ->_NONE_
<jp.co.omronsoft.openwnn.TextCandidatesViewManager: java.lang.String getCategoriesText(java.lang.String)> ->_NONE_
<org.apache.harmony.security.asn1.ASN1BitString: void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream)> ->_NONE_
<android.content.ContentResolver: int getIsSyncable(android.accounts.Account,java.lang.String)> ->_NONE_
<org.apache.harmony.xml.dom.CharacterDataImpl: void replaceData(int,int,java.lang.String)> ->_NONE_
<android.webkit.WebViewClassic: void updateDoubleTapZoom(int)> ->_NONE_
<java.security.cert.CertificateFactory: java.lang.String getType()> ->_NONE_
<android.widget.FastScroller: void getSectionsFromIndexer()> ->_NONE_
<android.media.MediaActionSound: void load(int)> ->_NONE_
<org.apache.http.impl.cookie.NetscapeDraftSpec: java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin)> ->_NONE_
<android.net.wifi.WifiInfo: void setRssi(int)> ->_NONE_
<java.io.ObjectOutputStream: boolean enableReplaceObject(boolean)> ->_NONE_
<android.net.LinkCapabilities: java.lang.String get(int)> ->_NONE_
<libcore.icu.NativeDecimalFormat: void setGroupingUsed(boolean)> ->_NONE_
<android.view.PointerIcon: int getSystemIconStyleIndex(int)> ->_NONE_
<android.support.v4.content.ModernAsyncTask: android.support.v4.content.ModernAsyncTask execute(java.lang.Object[])> ->_NONE_
<org.apache.xalan.transformer.TransformerHandlerImpl: void internalEntityDecl(java.lang.String,java.lang.String)> ->_NONE_
<android.view.ViewGroup: void setChildrenDrawingCacheEnabled(boolean)> ->_NONE_
<org.kxml2.io.KXmlParser: char[] getTextCharacters(int[])> ->_NONE_
<java.math.BigInteger: int getLowestSetBit()> ->_NONE_
<android.content.ContentValues: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)> ->_NONE_
<android.view.GLES20DisplayList: void setClipChildren(boolean)> ->_NONE_
<gov.nist.javax.sip.header.SIPObject: java.lang.String debugDump(int)> ->_NONE_
<org.xml.sax.SAXException: java.lang.Exception getException()> ->_NONE_
<libcore.net.url.FileURLConnection: java.io.InputStream getDirectoryListing(java.io.File)> ->_NONE_
<org.apache.xalan.templates.ElemNumber: void execute(org.apache.xalan.transformer.TransformerImpl)> ->_NONE_
<javax.xml.transform.stream.StreamResult: java.io.Writer getWriter()> ->_NONE_
<java.net.NetworkInterface: java.net.NetworkInterface getByName(java.lang.String)> ->_NONE_
<android.net.wifi.WifiStateMachine: int syncAddOrUpdateNetwork(com.android.internal.util.AsyncChannel,android.net.wifi.WifiConfiguration)> ->_NONE_
<android.telephony.CellInfo: void setTimeStampType(int)> ->_NONE_
<java.net.JarURLConnection: java.util.jar.Attributes getAttributes()> ->_NONE_
<android.animation.ValueAnimator: long getFrameDelay()> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: byte[] getBytes(java.net.URL)> ->_NONE_
<org.apache.commons.io.IOUtils: void write(char[],java.io.OutputStream,java.lang.String)> ->_NONE_
<android.os.Bundle: byte[] getByteArray(java.lang.String)> ->_NONE_
<java.net.URLConnection: int getReadTimeout()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setBeforeText(java.lang.Object,java.lang.CharSequence)> ->_NONE_
<android.app.ActivityThread: void setupGraphicsSupport(android.app.LoadedApk,java.io.File)> ->_NONE_
<android.view.inputmethod.InputMethodManager: void setImeWindowStatus(android.os.IBinder,int,int)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: void setEnabledProtocols(java.lang.String[])> ->_NONE_
<android.app.ActivityOptions: int getStartHeight()> ->_NONE_
<android.net.rtp.RtpStream: void setMode(int)> ->_NONE_
<android.webkit.WebViewClassic: void loadUrlImpl(java.lang.String)> ->_NONE_
<org.apache.http.message.BasicHttpResponse: org.apache.http.StatusLine getStatusLine()> ->_NONE_
<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMergeId()> ->_NONE_
<android.widget.ListPopupWindow: int getHeight()> ->_NONE_
<android.media.TimedText: java.lang.Object getObject(int)> ->_NONE_
<gov.nist.javax.sip.header.extensions.Join: void setToTag(java.lang.String)> ->_NONE_
<net.oauth.ConsumerProperties: java.net.URL getResource(java.lang.String,java.lang.ClassLoader)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: int getTrafficClass()> ->_NONE_
<android.webkit.WebViewClassic: void setScrollYRaw(int)> ->_NONE_
<gov.nist.core.NameValue: void setValueAsObject(java.lang.Object)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: void setEnableSessionCreation(boolean)> ->_NONE_
<android.bluetooth.BluetoothAdapter: int getConnectionState()> ->_NONE_
<java.nio.MappedByteBufferAdapter: float getFloat(int)> ->_NONE_
<libcore.icu.ICU: java.lang.String[] getISOLanguages()> ->_NONE_
<org.jivesoftware.smack.XMPPConnection: void setAvailableCompressionMethods(java.util.Collection)> ->_NONE_
<org.apache.xalan.templates.NamespaceAlias: java.lang.String getStylesheetPrefix()> ->_NONE_
<org.apache.xml.utils.AttList: java.lang.String getType(int)> ->_NONE_
<android.widget.Spinner: android.graphics.drawable.Drawable getPopupBackground()> ->_NONE_
<org.apache.commons.codec.net.QuotedPrintableCodec: java.lang.Object decode(java.lang.Object)> ->_NONE_
<org.apache.http.impl.io.AbstractMessageWriter: void write(org.apache.http.HttpMessage)> ->_NONE_
<android.app.ApplicationErrorReport: android.content.ComponentName getErrorReportReceiver(android.content.pm.PackageManager,java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xpath.XPathContext: java.util.Stack getAxesIteratorStackStacks()> ->_NONE_
<android.speech.tts.SynthesisPlaybackQueueItem: void run()> ->_NONE_
<android.view.inputmethod.BaseInputConnection: void setComposingSpans(android.text.Spannable,int,int)> ->_NONE_
<android.net.wifi.WifiStateTracker: void setUserDataEnable(boolean)> ->_NONE_
<org.apache.xml.dtm.SecuritySupport: java.lang.ClassLoader getSystemClassLoader()> ->_NONE_
<org.apache.xml.utils.UnImplNode: org.w3c.dom.Element getElementById(java.lang.String)> ->_NONE_
<android.webkit.WebViewClassic: void setDownloadListener(android.webkit.DownloadListener)> ->_NONE_
<gov.nist.javax.sip.header.Challenge: java.lang.String getURI()> ->_NONE_
<android.inputmethodservice.KeyboardView: void setOnKeyboardActionListener(android.inputmethodservice.KeyboardView$OnKeyboardActionListener)> ->_NONE_
<org.apache.xalan.templates.StylesheetRoot: boolean getOptimizer()> ->_NONE_
<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()> ->_NONE_
<dalvik.system.CloseGuard: dalvik.system.CloseGuard$Reporter getReporter()> ->_NONE_
<android.accessibilityservice.AccessibilityServiceInfo: android.content.pm.ResolveInfo getResolveInfo()> ->_NONE_
<org.apache.xml.serializer.ToStream: void setCdataSectionElements(java.util.Vector)> ->_NONE_
<org.jivesoftware.smack.packet.StreamError: java.lang.String getText()> ->_NONE_
<org.jivesoftware.smack.ConnectionConfiguration: void setVerifyRootCAEnabled(boolean)> ->_NONE_
<org.apache.harmony.xml.dom.DOMErrorImpl: java.lang.String getType()> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.CharSequence getContentDescription(java.lang.Object)> ->_NONE_
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script$KernelID getKernelIDDstAtop()> ->_NONE_
<android.view.View: void getFocusedRect(android.graphics.Rect)> ->_NONE_
<javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.security.Provider)> ->_NONE_
<android.view.View: void setLeft(int)> ->_NONE_
<android.widget.AbsSpinner: android.view.View getSelectedView()> ->_NONE_
<org.apache.xml.utils.AttList: java.lang.String getValue(java.lang.String)> ->_NONE_
<java.io.File: java.lang.String getCanonicalPath()> ->_NONE_
<android.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle)> ->_NONE_
<android.content.IntentFilter: void dump(android.util.Printer,java.lang.String)> ->_NONE_
<android.webkit.WebViewClassic: void loadData(java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.text.style.IconMarginSpan: int getLeadingMargin(boolean)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: char[] getStringValueChunk(int,int,int[])> ->_NONE_
<android.webkit.WebSettingsClassic: void setWorkersEnabled(boolean)> ->_NONE_
<android.support.v4.app.DialogFragment: void setShowsDialog(boolean)> ->_NONE_
<android.widget.TabWidget: void setRightStripDrawable(android.graphics.drawable.Drawable)> ->_NONE_
<gov.nist.javax.sip.clientauthutils.CredentialsCache: void removeAuthenticationHeader(java.lang.String)> ->_NONE_
<android.widget.RemoteViews: void setProgressBar(int,int,int,boolean)> ->_NONE_
<android.content.pm.LabeledIntent: int getLabelResource()> ->_NONE_
<android.media.audiofx.BassBoost: android.media.audiofx.BassBoost$Settings getProperties()> ->_NONE_
<android.widget.TextView: int getDesiredHeight()> ->_NONE_
<gov.nist.javax.sip.header.ErrorInfo: java.lang.String encodeBody()> ->_NONE_
<libcore.net.http.RequestHeaders: int getMinFreshSeconds()> ->_NONE_
<android.content.pm.RegisteredServicesCache: void setListener(android.content.pm.RegisteredServicesCacheListener,android.os.Handler)> ->_NONE_
<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: javax.security.cert.X509Certificate[] getPeerCertificateChain()> ->_NONE_
<android.animation.ValueAnimator: long getDuration()> ->_NONE_
<java.net.URL: java.lang.Object getContent()> ->_NONE_
<org.apache.xalan.templates.DecimalFormatProperties: java.lang.String getNaN()> ->_NONE_
<java.sql.DriverManager: java.util.Enumeration getDrivers()> ->_NONE_
<libcore.net.http.FixedLengthOutputStream: void write(byte[],int,int)> ->_NONE_
<java.nio.NIOAccess: int getBaseArrayOffset(java.nio.Buffer)> ->_NONE_
<android.app.ActivityManagerProxy: void showBootMessage(java.lang.CharSequence,boolean)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: void setExcludeResultPrefixes(org.apache.xml.utils.StringVector)> ->_NONE_
<org.kxml2.io.KXmlParser: java.lang.String readName()> ->_NONE_
<org.kxml2.io.KXmlParser: java.lang.String getName()> ->_NONE_
<org.kxml2.io.KXmlParser: java.lang.String getSystemId()> ->_NONE_
<android.speech.tts.TextToSpeech: java.lang.Object runActionNoReconnect(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String)> ->_NONE_
<android.hardware.usb.UsbDevice: java.lang.String getDeviceName()> ->_NONE_
<android.net.NetworkInfo: java.lang.String getTypeName()> ->_NONE_
<org.xml.sax.ext.DefaultHandler2: org.xml.sax.InputSource getExternalSubset(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.james.mime4j.MimeStreamParser: void parseBodyPart(java.io.InputStream)> ->_NONE_
<org.apache.xml.utils.UnImplNode: java.lang.String getLocalName()> ->_NONE_
<android.graphics.drawable.Drawable: int getIntrinsicHeight()> ->_NONE_
<org.apache.xalan.processor.TransformerFactoryImpl: void setFeature(java.lang.String,boolean)> ->_NONE_
<android.widget.AdapterView: int getFirstVisiblePosition()> ->_NONE_
<android.view.ViewRootImpl: void dispatchResized(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean,android.content.res.Configuration)> ->_NONE_
<java.io.DataInputStream: boolean readBoolean()> ->_NONE_
<android.view.View: void setMinimumHeight(int)> ->_NONE_
<org.apache.xalan.templates.ElemWithParam: int getXSLToken()> ->_NONE_
<android.widget.Gallery: int getCenterOfView(android.view.View)> ->_NONE_
<android.webkit.WebView: int getContentHeight()> ->_NONE_
<android.webkit.WebSettings: boolean getLightTouchEnabled()> ->_NONE_
<org.jivesoftware.smack.packet.Packet: void setStreamId(int)> ->_NONE_
<android.app.ActivityManagerProxy: java.lang.String getCallingPackage(android.os.IBinder)> ->_NONE_
<org.apache.xalan.processor.StylesheetHandler: void setDocumentLocator(org.xml.sax.Locator)> ->_NONE_
<org.apache.xml.utils.BoolStack: void setTop(boolean)> ->_NONE_
<android.widget.ListView: void setDivider(android.graphics.drawable.Drawable)> ->_NONE_
<android.view.WindowInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<java.security.cert.X509CertSelector: void setSubject(java.lang.String)> ->_NONE_
<android.content.ContentProvider: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])> ->_NONE_
<gov.nist.javax.sip.header.ims.PCalledPartyID: java.lang.String encodeBody()> ->_NONE_
<android.webkit.WebSettings: void setRenderPriority(android.webkit.WebSettings$RenderPriority)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getXmlEncoding()> ->_NONE_
<android.accounts.AccountManagerService: android.accounts.AccountAndUser[] getAccounts(int[])> ->_NONE_
<android.test.mock.MockPackageManager: java.lang.String[] getSystemSharedLibraryNames()> ->_NONE_
<android.content.res.TypedArray: float getFloat(int,float)> ->_NONE_
<android.widget.TextView: void setMaxWidth(int)> ->_NONE_
<java.nio.charset.CharsetDecoder: java.nio.CharBuffer decode(java.nio.ByteBuffer)> ->_NONE_
<android.test.mock.MockResources: java.lang.CharSequence getText(int)> ->_NONE_
<android.preference.PreferenceActivity: void setListFooter(android.view.View)> ->_NONE_
<java.net.InetAddress: java.lang.String getHostAddress()> ->_NONE_
<libcore.net.http.ChunkedInputStream: int read(byte[],int,int)> ->_NONE_
<org.jivesoftware.smack.sasl.SASLMechanism: org.jivesoftware.smack.SASLAuthentication getSASLAuthentication()> ->_NONE_
<android.webkit.WebViewClassic: int getVisibleTitleHeight()> ->_NONE_
<org.apache.xalan.templates.DecimalFormatProperties: char getDigit()> ->_NONE_
<android.graphics.drawable.PictureDrawable: android.graphics.Picture getPicture()> ->_NONE_
<android.graphics.Paint: float getTextRunAdvances(java.lang.String,int,int,int,int,int,float[],int)> ->_NONE_
<android.media.AudioManager: void setBluetoothA2dpOn(boolean)> ->_NONE_
<org.apache.harmony.xml.dom.NodeImpl: java.lang.Object setUserData(java.lang.String,java.lang.Object,org.w3c.dom.UserDataHandler)> ->_NONE_
<org.apache.xalan.templates.ElemTemplate: java.lang.String getPublicId()> ->_NONE_
<org.apache.xalan.templates.ElemTemplateElement: void addOrReplaceDecls(org.apache.xalan.templates.XMLNSDecl)> ->_NONE_
<android.widget.RelativeLayout: int getRelatedViewBaseline(int[],int)> ->_NONE_
<android.media.Metadata: java.lang.String getString(int)> ->_NONE_
<javax.security.auth.PrivateCredentialPermission: java.lang.String getActions()> ->_NONE_
<android.text.style.SuggestionSpan: int getFlags()> ->_NONE_
<gov.nist.javax.sip.header.Event: java.lang.String getEventType()> ->_NONE_
<org.javia.arity.Symbol: int getArity()> ->_NONE_
<java.util.GregorianCalendar: java.util.Date getGregorianChange()> ->_NONE_
<org.apache.commons.codec.net.URLCodec: java.lang.String decode(java.lang.String)> ->_NONE_
<org.apache.harmony.security.provider.cert.Cache: void put(long,byte[],java.lang.Object)> ->_NONE_
<android.net.wifi.WifiStateMachine: void enableBackgroundScanCommand(boolean)> ->_NONE_
<android.media.AudioManager: void setWiredHeadsetOn(boolean)> ->_NONE_
<android.os.Parcel: android.util.SparseBooleanArray readSparseBooleanArray()> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)> ->_NONE_
<android.opengl.GLLogWrapper: java.lang.String getTextureEnvPName(int)> ->_NONE_
<java.util.logging.LogRecord: void setThrown(java.lang.Throwable)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getOpenSSLKey()> ->_NONE_
<android.view.DragEvent: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<java.lang.Package: java.lang.String getImplementationVendor()> ->_NONE_
<javax.obex.ServerOperation: int getHeaderLength()> ->_NONE_
<android.test.mock.MockContentProvider: java.lang.String getType(android.net.Uri)> ->_NONE_
<org.apache.commons.io.filefilter.NotFileFilter: boolean accept(java.io.File,java.lang.String)> ->_NONE_
<org.apache.xml.utils.FastStringBuffer: void sendNormalizedSAXcharacters(char[],int,int,org.xml.sax.ContentHandler)> ->_NONE_
<java.nio.FileChannelImpl: int write(java.nio.ByteBuffer,long)> ->_NONE_
<android.app.AlertDialog: void setView(android.view.View)> ->_NONE_
<android.util.JsonReader: int getColumnNumber()> ->_NONE_
<java.io.StringBufferInputStream: int read(byte[],int,int)> ->_NONE_
<org.apache.http.params.DefaultedHttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)> ->_NONE_
<android.webkit.WebViewClassic: int getTextScrollDelta(float,long)> ->_NONE_
<java.io.InputStreamReader: boolean ready()> ->_NONE_
<android.widget.Switch: android.graphics.drawable.Drawable getTrackDrawable()> ->_NONE_
<org.apache.xalan.templates.Stylesheet: void setId(java.lang.String)> ->_NONE_
<android.view.textservice.SuggestionsInfo: int getSuggestionsAttributes()> ->_NONE_
<android.preference.TwoStatePreference: java.lang.CharSequence getSummaryOff()> ->_NONE_
<jp.co.omronsoft.openwnn.TextCandidates1LineViewManager: int getViewLeftOnScreen(android.view.View)> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertPathImpl: byte[] getEncoded(java.lang.String)> ->_NONE_
<android.mtp.MtpStorage: long getReserveSpace()> ->_NONE_
<org.apache.xml.dtm.DTMManager: void setSource_location(boolean)> ->_NONE_
<org.apache.harmony.security.x509.KeyUsage: boolean[] getKeyUsage()> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: java.lang.String getFirstName()> ->_NONE_
<org.jivesoftware.smack.packet.PresenceCapability: void setVersion(java.lang.String)> ->_NONE_
<android.media.videoeditor.MediaItem: android.media.videoeditor.MediaArtistNativeHelper getNativeContext()> ->_NONE_
<java.util.regex.Matcher: java.lang.String replaceFirst(java.lang.String)> ->_NONE_
<android.hardware.display.WifiDisplayStatus: android.hardware.display.WifiDisplay[] getAvailableDisplays()> ->_NONE_
<android.view.Display: int getPixelFormat()> ->_NONE_
<org.apache.xml.dtm.ref.DTMDocumentImpl: org.apache.xml.utils.XMLString getStringValue(int)> ->_NONE_
<org.apache.xml.dtm.ref.DTMDefaultBase: java.lang.String getNamespaceFromExpandedNameID(int)> ->_NONE_
<org.apache.harmony.xml.dom.DocumentTypeImpl: short getNodeType()> ->_NONE_
<org.apache.xml.serializer.ToUnknownStream: void setOutputFormat(java.util.Properties)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: void setEnabledCipherSuites(java.lang.String[])> ->_NONE_
<android.text.Layout: int getLineBaseline(int)> ->_NONE_
<android.text.Html: java.lang.String getOpenParaTagWithDirection(android.text.Spanned,int,int)> ->_NONE_
<android.opengl.GLUtils: int getType(android.graphics.Bitmap)> ->_NONE_
<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)> ->_NONE_
<java.util.concurrent.Phaser: int getUnarrivedParties()> ->_NONE_
<android.filterpacks.imageproc.ToGrayFilter: android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)> ->_NONE_
<android.webkit.WebChromeClient: void openFileChooser(android.webkit.ValueCallback,java.lang.String,java.lang.String)> ->_NONE_
<android.app.ActivityManagerProxy: void unbindFinished(android.os.IBinder,android.content.Intent,boolean)> ->_NONE_
<android.media.videoeditor.MediaArtistNativeHelper: void setGeneratePreview(boolean)> ->_NONE_
<android.widget.GridView: int getVerticalSpacing()> ->_NONE_
<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetRoot$ComposeState getComposeState()> ->_NONE_
<android.graphics.drawable.StateListDrawable: int getStateCount()> ->_NONE_
<org.jivesoftware.smack.ConnectionConfiguration: void setSASLAuthenticationEnabled(boolean)> ->_NONE_
<org.javia.arity.Symbols: org.javia.arity.Symbol[] getTopFrame()> ->_NONE_
<android.widget.TextView: void setSingleLine(boolean)> ->_NONE_
<org.apache.http.impl.io.IdentityOutputStream: void write(byte[])> ->_NONE_
<android.support.v4.view.PagerTitleStrip: void setTextColor(int)> ->_NONE_
<gov.nist.javax.sip.header.SIPETag: void setETag(java.lang.String)> ->_NONE_
<jp.co.omronsoft.openwnn.JAJP.Romkan: void setPreferences(android.content.SharedPreferences)> ->_NONE_
<android.widget.RelativeLayout: int getBaseline()> ->_NONE_
<android.test.mock.MockContext: java.lang.String getPackageCodePath()> ->_NONE_
<org.apache.james.mime4j.CloseShieldInputStream: java.io.InputStream getUnderlyingStream()> ->_NONE_
<android.view.Choreographer: float getRefreshRate()> ->_NONE_
<org.apache.xpath.objects.XObject: org.apache.xpath.objects.XObject getFresh()> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: void setMessageFactory(gov.nist.javax.sip.stack.StackMessageFactory)> ->_NONE_
<android.view.textservice.SuggestionsInfo: int getCookie()> ->_NONE_
<org.xml.sax.helpers.ParserAdapter: void setErrorHandler(org.xml.sax.ErrorHandler)> ->_NONE_
<java.util.zip.Deflater: void setDictionary(byte[])> ->_NONE_
<android.media.RingtoneManager: android.net.Uri getRingtoneUri(int)> ->_NONE_
<gov.nist.javax.sip.header.MediaRange: java.lang.String encode()> ->_NONE_
<org.apache.xml.serializer.dom3.LSSerializerImpl: org.w3c.dom.DOMConfiguration getDomConfig()> ->_NONE_
<android.view.WindowManagerImpl: void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams)> ->_NONE_
<java.nio.IntBuffer: java.nio.IntBuffer get(int[],int,int)> ->_NONE_
<org.xml.sax.ext.Locator2Impl: java.lang.String getXMLVersion()> ->_NONE_
<android.view.Display: void getCurrentSizeRange(android.graphics.Point,android.graphics.Point)> ->_NONE_
<android.drm.DrmRights: java.lang.String getMimeType()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.CipherSuite: java.lang.String getHashName()> ->_NONE_
<android.app.Activity: int getVolumeControlStream()> ->_NONE_
<org.apache.commons.io.output.DemuxOutputStream: void write(int)> ->_NONE_
<android.telephony.SmsManager: boolean updateMessageOnIcc(int,int,byte[])> ->_NONE_
<android.app.LoadedApk: android.content.res.AssetManager getAssets(android.app.ActivityThread)> ->_NONE_
<org.apache.xalan.templates.ElemForEach: void execute(org.apache.xalan.transformer.TransformerImpl)> ->_NONE_
<android.bluetooth.BluetoothSocket: int getPort()> ->_NONE_
<java.text.DateFormat: void setNumberFormat(java.text.NumberFormat)> ->_NONE_
<gov.nist.javax.sip.address.TelURLImpl: java.lang.String getPhoneContext()> ->_NONE_
<android.net.sip.SipProfile: java.lang.String getPassword()> ->_NONE_
<android.content.res.TypedArray: android.content.res.Resources getResources()> ->_NONE_
<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])> ->_NONE_
<java.io.LineNumberReader: int read(char[],int,int)> ->_NONE_
<android.database.MergeCursor: float getFloat(int)> ->_NONE_
<android.app.FragmentManagerImpl: android.app.Fragment getFragment(android.os.Bundle,java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: void setAttribute(java.lang.String,java.lang.String)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: void setContentDescription(java.lang.Object,java.lang.CharSequence)> ->_NONE_
<android.net.wifi.WifiInfo: int getLinkSpeed()> ->_NONE_
<libcore.net.http.RequestHeaders: int getContentLength()> ->_NONE_
<gov.nist.javax.sip.header.ims.PUserDatabase: java.lang.String encodeBody()> ->_NONE_
<android.text.TextPaint: void set(android.text.TextPaint)> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: void sendAck(javax.sip.message.Request)> ->_NONE_
<org.apache.harmony.security.pkcs10.CertificationRequest: byte[] getSignature()> ->_NONE_
<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.templates.StylesheetRoot getStylesheetRoot()> ->_NONE_
<org.apache.xpath.axes.LocPathIterator: int getCurrentPos()> ->_NONE_
<android.preference.Preference: void setIntent(android.content.Intent)> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: void connect(java.net.SocketAddress,int)> ->_NONE_
<android.widget.ActivityChooserModel: int getHistorySize()> ->_NONE_
<java.io.RandomAccessFile: java.lang.String readLine()> ->_NONE_
<android.support.v4.app.BackStackRecord: java.lang.CharSequence getBreadCrumbShortTitle()> ->_NONE_
<org.apache.commons.io.output.LockableFileWriter: void write(char[])> ->_NONE_
<android.test.TestRunner: java.lang.String[] getTestChildren(android.content.Context,java.lang.String)> ->_NONE_
<android.webkit.HTML5VideoView: void prepareDataCommon(android.webkit.HTML5VideoViewProxy)> ->_NONE_
<java.util.IllegalFormatFlagsException: java.lang.String getFlags()> ->_NONE_
<android.location.Location: void setLongitude(double)> ->_NONE_
<android.app.ContextImpl: java.lang.String getPackageName()> ->_NONE_
<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)> ->_NONE_
<org.apache.harmony.security.pkcs10.CertificationRequestInfo: org.apache.harmony.security.x501.Name getSubject()> ->_NONE_
<org.xml.sax.helpers.LocatorImpl: void setLineNumber(int)> ->_NONE_
<gov.nist.javax.sip.address.SipUri: void setHost(gov.nist.core.Host)> ->_NONE_
<gov.nist.javax.sip.header.extensions.References: java.lang.String encodeBody()> ->_NONE_
<org.apache.xpath.axes.NodeSequence: void setCurrentPos(int)> ->_NONE_
<gov.nist.javax.sip.header.SIPHeaderList: javax.sip.header.Header getFirst()> ->_NONE_
<android.app.admin.DeviceAdminInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)> ->_NONE_
<android.location.Address: void setSubLocality(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.header.SIPIfMatch: void setValue(java.lang.String)> ->_NONE_
<java.util.concurrent.atomic.AtomicLongArray: long getAndDecrement(int)> ->_NONE_
<android.content.ContextWrapper: int getWallpaperDesiredMinimumHeight()> ->_NONE_
<org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)> ->_NONE_
<android.sax.Element: void setStartElementListener(android.sax.StartElementListener)> ->_NONE_
<android.graphics.drawable.DrawableContainer: void setEnterFadeDuration(int)> ->_NONE_
<android.widget.AbsListView: int getTranscriptMode()> ->_NONE_
<gov.nist.javax.sip.address.TelURLImpl: void setParameter(java.lang.String,java.lang.String)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: java.lang.String getVersion()> ->_NONE_
<java.net.URLConnection: boolean getDoInput()> ->_NONE_
<android.filterfw.core.Frame: void setGenericObjectValue(java.lang.Object)> ->_NONE_
<org.jivesoftware.smack.XMPPConnection: int getPort()> ->_NONE_
<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)> ->_NONE_
<android.net.MailTo: java.lang.String getSubject()> ->_NONE_
<org.jivesoftware.smackx.packet.VCard: java.lang.String getPhoneHome(java.lang.String)> ->_NONE_
<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address getRemoteParty()> ->_NONE_
<android.app.DownloadManager: long getActiveNetworkWarningBytes(android.content.Context)> ->_NONE_
<java.net.DatagramSocket: int getLocalPort()> ->_NONE_
<java.util.IllegalFormatConversionException: java.lang.String getMessage()> ->_NONE_
<android.graphics.Point: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<java.util.TimeZone: java.lang.String[] getAvailableIDs()> ->_NONE_
<android.app.ApplicationErrorReport: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.view.View: void getLocationOnScreen(int[])> ->_NONE_
<gov.nist.javax.sip.header.Warning: void setAgent(java.lang.String)> ->_NONE_
<org.apache.harmony.security.pkcs10.CertificationRequest: org.apache.harmony.security.pkcs10.CertificationRequestInfo getInfo()> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CertFactoryImpl: byte[] readBytes(java.io.InputStream,int)> ->_NONE_
<android.renderscript.ScriptIntrinsicConvolve5x5: void setInput(android.renderscript.Allocation)> ->_NONE_
<android.webkit.WebViewClassic: boolean selectText(int,int)> ->_NONE_
<android.view.View: void setScrollBarStyle(int)> ->_NONE_
<android.view.accessibility.AccessibilityRecord: void setScrollX(int)> ->_NONE_
<android.view.accessibility.AccessibilityRecord: void setScrollY(int)> ->_NONE_
<android.webkit.WebStorageClassic: java.util.Collection getOriginsSync()> ->_NONE_
<gov.nist.javax.sip.message.MessageFactoryImpl: void setStrict(boolean)> ->_NONE_
<android.app.Activity: void setResult(int,android.content.Intent)> ->_NONE_
<android.app.PendingIntent: void send()> ->_NONE_
<android.renderscript.ScriptIntrinsicLUT: void setBlue(int,int)> ->_NONE_
<org.apache.commons.logging.impl.SimpleLog: int getLevel()> ->_NONE_
<android.bluetooth.BluetoothHeadset: void log(java.lang.String)> ->_NONE_
<gov.nist.core.GenericObjectList: java.lang.String encode()> ->_NONE_
<java.security.cert.X509CertSelector: void setMatchAllSubjectAltNames(boolean)> ->_NONE_
<android.widget.ListPopupWindow: void setBackgroundDrawable(android.graphics.drawable.Drawable)> ->_NONE_
<android.view.animation.Animation: boolean getFillAfter()> ->_NONE_
<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: java.util.ArrayList getParamValues()> ->_NONE_
<android.filterfw.core.SerializedFrame: java.nio.ByteBuffer getData()> ->_NONE_
<libcore.io.Streams: java.lang.String readFully(java.io.Reader)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: java.lang.Object getParameter(java.lang.String)> ->_NONE_
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.Object getFeature(java.lang.String,java.lang.String)> ->_NONE_
<android.hardware.usb.UsbRequest: void setClientData(java.lang.Object)> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: long getExpiration()> ->_NONE_
<android.database.sqlite.SQLiteProgram: java.lang.String getSql()> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: java.lang.String getOutputPropertyNoDefault(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: void setNamespaceAlias(org.apache.xalan.templates.NamespaceAlias)> ->_NONE_
<android.webkit.WebViewCore: android.webkit.WebViewCore$TextSelectionData createTextSelection(int,int,int)> ->_NONE_
<android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)> ->_NONE_
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void setEnabled(java.lang.Object,boolean)> ->_NONE_
<org.jivesoftware.smack.packet.LoginResponse: void setJid(java.lang.String)> ->_NONE_
<org.apache.xpath.functions.FuncPosition: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<java.text.DecimalFormat: int getMinimumIntegerDigits()> ->_NONE_
<android.os.StatFs: int getBlockCount()> ->_NONE_
<android.view.ViewRootImpl: void dumpGfxInfo(int[])> ->_NONE_
<java.io.InvalidClassException: java.lang.String getMessage()> ->_NONE_
<android.test.ClassPathPackageInfo: java.util.Set getTopLevelClassesRecursive()> ->_NONE_
<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.templates.ElemTemplateElement getElemTemplateElement()> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.ElemTemplateElement getCurrentElement()> ->_NONE_
<android.net.NetworkStats: android.net.NetworkStats$Entry getValues(int,android.net.NetworkStats$Entry)> ->_NONE_
<android.media.videoeditor.MediaArtistNativeHelper: int getMediaItemFileType(int)> ->_NONE_
<android.nfc.Tag: android.nfc.INfcTag getTagService()> ->_NONE_
<android.graphics.Canvas: int getMaximumBitmapWidth()> ->_NONE_
<jp.co.omronsoft.openwnn.DefaultSoftKeyboard: jp.co.omronsoft.openwnn.Keyboard getTypeChangeKeyboard(int)> ->_NONE_
<org.apache.harmony.security.PrivateKeyImpl: void setAlgorithm(java.lang.String)> ->_NONE_
<android.content.pm.VerificationParams: android.net.Uri getOriginatingURI()> ->_NONE_
<android.nfc.tech.NfcB: android.nfc.tech.NfcB get(android.nfc.Tag)> ->_NONE_
<android.nfc.tech.IsoDep: int getMaxTransceiveLength()> ->_NONE_
<android.app.ActivityManagerProxy: void serviceDoneExecuting(android.os.IBinder,int,int,int)> ->_NONE_
<android.media.audiofx.AudioEffect: int setParameter(byte[],byte[])> ->_NONE_
<android.nfc.tech.NfcA: android.nfc.tech.NfcA get(android.nfc.Tag)> ->_NONE_
<org.apache.xalan.transformer.KeyTable: int getDocKey()> ->_NONE_
<android.view.ViewRootImpl: void setAccessibilityFocus(android.view.View,android.view.accessibility.AccessibilityNodeInfo)> ->_NONE_
<net.oauth.client.URLConnectionResponse: int getStatusCode()> ->_NONE_
<org.apache.harmony.security.x509.Extension: byte[] getEncoded()> ->_NONE_
<android.app.admin.DevicePolicyManager: long getMaximumTimeToLock(android.content.ComponentName,int)> ->_NONE_
<android.os.AsyncTask: void execute(java.lang.Runnable)> ->_NONE_
<android.inputmethodservice.InputMethodService: void setExtractViewShown(boolean)> ->_NONE_
<android.media.Metadata: double getDouble(int)> ->_NONE_
<android.opengl.GLLogWrapper: int getMaterialParamCount(int)> ->_NONE_
<org.apache.xml.utils.StylesheetPIHandler: void setBaseId(java.lang.String)> ->_NONE_
<android.webkit.WebSettingsClassic: void setCacheMode(int)> ->_NONE_
<org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream: int getBeginLine()> ->_NONE_
<android.widget.TextView: void setError(java.lang.CharSequence)> ->_NONE_
<org.apache.xpath.axes.FilterExprWalker: void setInnerExpression(org.apache.xpath.Expression)> ->_NONE_
<org.apache.harmony.xml.dom.InnerNodeImpl: java.lang.String getTextContent()> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: void setLabelFor(android.view.View,int)> ->_NONE_
<java.util.logging.LogRecord: void setMillis(long)> ->_NONE_
<org.apache.xalan.templates.TemplateSubPatternAssociation: void setTargetString(java.lang.String)> ->_NONE_
<android.text.SpannableStringBuilder: int getTextRunCursor(int,int,int,int,int,android.graphics.Paint)> ->_NONE_
<android.opengl.GLLogWrapper: void log(java.lang.String)> ->_NONE_
<java.security.UnresolvedPermission: java.lang.String getUnresolvedActions()> ->_NONE_
<android.text.Layout: int getWidth()> ->_NONE_
<org.apache.xml.serializer.ToStream: int getIndentAmount()> ->_NONE_
<org.apache.xml.utils.FastStringBuffer: java.lang.String getString(int,int)> ->_NONE_
<android.app.ApplicationPackageManager: java.util.List getPreferredPackages(int)> ->_NONE_
<android.preference.PreferenceManager: java.lang.String getSharedPreferencesName()> ->_NONE_
<android.content.res.AssetManager: boolean getResourceValue(int,int,android.util.TypedValue,boolean)> ->_NONE_
<org.apache.xpath.axes.AxesWalker: void setPrevWalker(org.apache.xpath.axes.AxesWalker)> ->_NONE_
<org.apache.harmony.crypto.internal.NullCipherSpi: int engineUpdate(java.nio.ByteBuffer,java.nio.ByteBuffer)> ->_NONE_
<android.net.http.Headers: java.lang.String getLastModified()> ->_NONE_
<gov.nist.javax.sip.parser.ims.SecurityAgreeParser: gov.nist.javax.sip.header.SIPHeaderList parse(gov.nist.javax.sip.header.ims.SecurityAgree)> ->_NONE_
<android.view.Display: int getDisplayId()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: java.lang.String[] getSupportedProtocols()> ->_NONE_
<gov.nist.javax.sip.parser.Parser: gov.nist.javax.sip.parser.Lexer getLexer()> ->_NONE_
<android.graphics.Rect: void set(int,int,int,int)> ->_NONE_
<android.nfc.tech.NfcF: android.nfc.tech.NfcF get(android.nfc.Tag)> ->_NONE_
<android.bluetooth.BluetoothSocket: int readAll(java.io.InputStream,byte[])> ->_NONE_
<java.util.Currency: int getDefaultFractionDigits()> ->_NONE_
<android.speech.tts.TextToSpeechService: int getDefaultSpeechRate()> ->_NONE_
<android.widget.TextView: void setImeOptions(int)> ->_NONE_
<libcore.net.http.HttpsURLConnectionImpl: void setDefaultUseCaches(boolean)> ->_NONE_
<android.view.accessibility.AccessibilityNodeInfo: void setSource(android.view.View,int)> ->_NONE_
<android.webkit.WebSettings: void setDomStorageEnabled(boolean)> ->_NONE_
<android.media.videoeditor.Transition: android.media.videoeditor.MediaItem getBeforeMediaItem()> ->_NONE_
<android.security.AndroidKeyStore: java.util.Set getUniqueAliases()> ->_NONE_
<android.net.LinkProperties: java.lang.String getInterfaceName()> ->_NONE_
<libcore.io.IoBridge: boolean isConnected(java.io.FileDescriptor,java.net.InetAddress,int,int,int)> ->_NONE_
<android.hardware.usb.UsbDevice: int getInterfaceCount()> ->_NONE_
<android.accounts.Account: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()> ->_NONE_
<android.app.ActivityThread: android.app.Instrumentation getInstrumentation()> ->_NONE_
<android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)> ->_NONE_
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: java.lang.String getSupplicantQuery()> ->_NONE_
<org.jivesoftware.smackx.packet.MUCUser: org.jivesoftware.smackx.packet.MUCUser$Invite getInvite()> ->_NONE_
<android.location.Country: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.location.Geofence: double getLatitude()> ->_NONE_
<java.nio.FloatToByteBufferAdapter: float get(int)> ->_NONE_
<android.media.videoeditor.MediaImageItem: long getDuration()> ->_NONE_
<gov.nist.javax.sip.header.ExtensionHeaderList: java.lang.String encode()> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.ErrorListener getErrorListener()> ->_NONE_
<android.nfc.tech.NfcV: android.nfc.tech.NfcV get(android.nfc.Tag)> ->_NONE_
<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)> ->_NONE_
<android.widget.TextView: void setTextSize(float)> ->_NONE_
<gov.nist.javax.sip.header.RAck: int getCSeqNumber()> ->_NONE_
<org.apache.harmony.security.PublicKeyImpl: void setAlgorithm(java.lang.String)> ->_NONE_
<android.bluetooth.BluetoothUuid: int getServiceIdentifierFromParcelUuid(android.os.ParcelUuid)> ->_NONE_
<libcore.icu.ICU: java.util.Locale[] getAvailableDateFormatLocales()> ->_NONE_
<java.util.prefs.XMLParser: void flushStartTag(java.lang.String,java.lang.String[],java.lang.String[],java.io.BufferedWriter)> ->_NONE_
<org.apache.http.entity.EntityTemplate: java.io.InputStream getContent()> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: boolean getOptimize()> ->_NONE_
<org.apache.xalan.xslt.SecuritySupport: java.io.FileInputStream getFileInputStream(java.io.File)> ->_NONE_
<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)> ->_NONE_
<android.view.VelocityTracker: boolean getEstimator(int,android.view.VelocityTracker$Estimator)> ->_NONE_
<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.extensions.ExtensionsTable getExtensionsTable()> ->_NONE_
<android.widget.ActivityChooserModel: void setHistoryMaxSize(int)> ->_NONE_
<java.util.Grego: int getDayOfWeekInMonth(int,int,int)> ->_NONE_
<net.oauth.client.httpclient4.HttpMethodResponse: void dump(java.util.Map)> ->_NONE_
<gov.nist.javax.sip.header.AuthenticationHeader: void setRealm(java.lang.String)> ->_NONE_
<android.hardware.display.DisplayManagerGlobal: void connectWifiDisplay(java.lang.String)> ->_NONE_
<android.webkit.WebViewClassic: android.webkit.WebChromeClient getWebChromeClient()> ->_NONE_
<android.graphics.YuvImage: int getYuvFormat()> ->_NONE_
<android.graphics.drawable.LayerDrawable: void setDither(boolean)> ->_NONE_
<android.webkit.AccessibilityInjectorFallback: boolean traverseGivenAxis(int,int,boolean,java.lang.String)> ->_NONE_
<android.sax.Element: void setTextElementListener(android.sax.TextElementListener)> ->_NONE_
<org.apache.xml.dtm.ref.IncrementalSAXSource_Filter: void unparsedEntityDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_NONE_
<android.graphics.drawable.InsetDrawable: int getIntrinsicWidth()> ->_NONE_
<org.xml.sax.SAXParseException: java.lang.String getPublicId()> ->_NONE_
<android.text.util.Rfc822Token: void setAddress(java.lang.String)> ->_NONE_
<java.lang.Thread: long getId()> ->_NONE_
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: void ensureReadParams()> ->_NONE_
<android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)> ->_NONE_
<gov.nist.javax.sip.header.Via: java.lang.String getMAddr()> ->_NONE_
<android.widget.AbsListView: int getListPaddingLeft()> ->_NONE_
<java.util.prefs.XMLParser: void flushEmptyElement(java.lang.String,java.io.BufferedWriter)> ->_NONE_
<javax.xml.parsers.SAXParser: void parse(java.io.InputStream,org.xml.sax.HandlerBase,java.lang.String)> ->_NONE_
<org.json.JSONArray: int getInt(int)> ->_NONE_
<org.apache.harmony.security.provider.cert.X509CRLImpl: java.util.Set getCriticalExtensionOIDs()> ->_NONE_
<android.view.View: int getHorizontalFadingEdgeLength()> ->_NONE_
<android.speech.tts.TextToSpeech: int setPitch(float)> ->_NONE_
<android.accessibilityservice.AccessibilityServiceInfo: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.ServerLogger getServerLogger()> ->_NONE_
<android.net.RouteInfo: android.net.LinkAddress getDestination()> ->_NONE_
<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)> ->_NONE_
<android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()> ->_NONE_
<org.apache.harmony.security.asn1.BerInputStream: byte[] getBuffer()> ->_NONE_
<java.nio.DirectByteBuffer: void get(char[],int,int)> ->_NONE_
<android.os.CancellationSignal: void setOnCancelListener(android.os.CancellationSignal$OnCancelListener)> ->_NONE_
<android.database.AbstractWindowedCursor: android.database.CursorWindow getWindow()> ->_NONE_
<java.net.HttpCookie: void setComment(java.lang.String)> ->_NONE_
<org.apache.xalan.templates.Stylesheet: void setPreserveSpaces(org.apache.xalan.templates.WhiteSpaceInfo)> ->_NONE_
<gov.nist.javax.sip.header.StatusLine: void setMatchStatusClass(boolean)> ->_NONE_
<android.webkit.HTML5VideoView: boolean getPauseDuringPreparing()> ->_NONE_
<android.widget.CheckedTextView: void setChecked(boolean)> ->_NONE_
<android.filterfw.core.Filter: java.lang.String getName()> ->_NONE_
<org.apache.harmony.xml.dom.DocumentTypeImpl: java.lang.String getName()> ->_NONE_
<java.security.CodeSource: java.net.URL getLocation()> ->_NONE_
<java.io.StringReader: int read()> ->_NONE_
<org.apache.http.impl.cookie.BasicClientCookie: java.util.Date getExpiryDate()> ->_NONE_
<android.app.ActivityManagerProxy: void backupAgentCreated(java.lang.String,android.os.IBinder)> ->_NONE_
<java.io.ObjectInputStream: java.lang.Object readObject()> ->_NONE_
<java.util.logging.Level: java.lang.String getLocalizedName()> ->_NONE_
<org.xml.sax.helpers.AttributeListImpl: java.lang.String getType(int)> ->_NONE_
<android.widget.LinearLayout: void setBaselineAligned(boolean)> ->_NONE_
<android.test.AndroidTestRunner: java.util.List getTestCases()> ->_NONE_
<org.apache.xml.utils.UnImplNode: java.lang.String getNodeName()> ->_NONE_
<android.text.style.SpellCheckSpan: void writeToParcel(android.os.Parcel,int)> ->_NONE_
<android.widget.CalendarView: void setShownWeekCount(int)> ->_NONE_
<java.net.PasswordAuthentication: char[] getPassword()> ->_NONE_
<android.service.dreams.DreamService: void setContentView(android.view.View)> ->_NONE_
<java.net.HttpCookie: void setPortlist(java.lang.String)> ->_NONE_
<java.text.ChoiceFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)> ->_NONE_
<java.security.IdentityScope: java.security.Identity getIdentity(java.security.Principal)> ->_NONE_
<org.apache.xpath.functions.FuncFloor: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)> ->_NONE_
<android.net.http.Headers: java.lang.String getXPermittedCrossDomainPolicies()> ->_NONE_
<org.jivesoftware.smack.PacketReader: org.jivesoftware.smack.packet.Registration parseRegistration(org.xmlpull.v1.XmlPullParser)> ->_NONE_
<android.preference.PreferenceManager: void setDefaultValues(android.content.Context,java.lang.String,int,int,boolean)> ->_NONE_
<android.net.NetworkIdentity: int getType()> ->_NONE_
<org.apache.http.message.BasicHttpResponse: void setStatusLine(org.apache.http.ProtocolVersion,int)> ->_NONE_
<android.webkit.WebViewCore: void sendMessage(android.os.Message)> ->_NONE_
<org.apache.harmony.security.asn1.ASN1Implicit: void encodeContent(org.apache.harmony.security.asn1.BerOutputStream)> ->_NONE_
<gov.nist.javax.sip.message.SIPMessage: void setContentEncoding(javax.sip.header.ContentEncodingHeader)> ->_NONE_
<android.database.sqlite.SQLiteDatabase: long insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,int)> ->_NONE_
<org.apache.xml.utils.SystemIDResolver: java.lang.String getAbsoluteURI(java.lang.String)> ->_NONE_
<jp.co.omronsoft.openwnn.UserDictionaryToolsList: java.util.ArrayList getWords()> ->_NONE_
<org.apache.xml.utils.UnImplNode: void error(java.lang.String)> ->_NONE_
<android.webkit.CallbackProxy: void handleMessage(android.os.Message)> ->_NONE_
<java.nio.DoubleBuffer: java.nio.DoubleBuffer get(double[],int,int)> ->_NONE_
<org.apache.xalan.templates.ElemAttributeSet: void execute(org.apache.xalan.transformer.TransformerImpl)> ->_NONE_
<android.media.videoeditor.MediaImageItem: java.lang.String getGeneratedImageClip()> ->_NONE_
<android.content.pm.PackageManager: void getPackageSizeInfo(java.lang.String,android.content.pm.IPackageStatsObserver)> ->_NONE_
