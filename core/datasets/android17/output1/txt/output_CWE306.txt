<java.nio.DatagramChannelImpl: java.nio.channels.DatagramChannel connect(java.net.SocketAddress)> ->_CWE306_
<org.apache.http.client.params.ClientParamBean: void setHandleAuthentication(boolean)> ->_CWE306_
<org.apache.http.impl.auth.BasicScheme: boolean isConnectionBased()> ->_CWE306_
<org.jivesoftware.smack.XMPPConnection: java.lang.String getConnectionID()> ->_CWE306_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.AuthenticationHandler createProxyAuthenticationHandler()> ->_CWE306_
<javax.obex.ServerRequestHandler: int onConnect(javax.obex.HeaderSet,javax.obex.HeaderSet)> ->_CWE306_
<libcore.net.http.HttpEngine: libcore.net.http.HttpConnection getConnection()> ->_CWE306_
<org.jivesoftware.smack.XMPPConnection: void connectUsingConfiguration(org.jivesoftware.smack.ConnectionConfiguration,javax.net.SocketFactory)> ->_CWE306_
<android.net.http.HttpConnection: void restartConnection(boolean)> ->_CWE306_
<android.database.sqlite.SQLiteConnectionPool: void onConnectionLeaked()> ->_CWE306_
<android.nfc.tech.NdefFormatable: void connect()> ->_CWE306_
<gov.nist.javax.sip.header.AuthenticationInfo: java.lang.String getAuthenticationInfo()> ->_CWE306_
<org.apache.http.impl.conn.tsccm.AbstractConnPool: void closeConnection(org.apache.http.conn.OperatedClientConnection)> ->_CWE306_
<jp.co.omronsoft.openwnn.JAJP.OpenWnnClauseConverterJAJP: boolean connectible(int,int)> ->_CWE306_
<android.database.sqlite.SQLiteDatabase: int getThreadDefaultConnectionFlags(boolean)> ->_CWE306_
<org.apache.http.impl.conn.SingleClientConnManager: org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry)> ->_CWE306_
<android.database.sqlite.SQLiteConnectionPool: void wakeConnectionWaitersLocked()> ->_CWE306_
<android.nfc.tech.NfcBarcode: void connect()> ->_CWE306_
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.AbstractConnPool createConnectionPool(org.apache.http.params.HttpParams)> ->_CWE306_
<android.net.wifi.WifiManager: void connect(int,android.net.wifi.WifiManager$ActionListener)> ->_CWE306_
<android.nfc.tech.MifareClassic: void reconnect()> ->_CWE306_
<android.bluetooth.BluetoothSocket: void connect()> ->_CWE306_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.AuthenticationHandler getTargetAuthenticationHandler()> ->_CWE306_
<android.bluetooth.BluetoothInputDevice: java.util.List getConnectedDevices()> ->_CWE306_
<java.net.URL: java.net.URLConnection openConnection(java.net.Proxy)> ->_CWE306_
<javax.obex.ServerRequestHandler: long getConnectionId()> ->_CWE306_
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int getMaxTotalConnections()> ->_CWE306_
<javax.obex.HeaderSet: void createAuthenticationChallenge(java.lang.String,boolean,boolean)> ->_CWE306_
<android.net.LinkSocket: void connect(int)> ->_CWE306_
<android.widget.TextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)> ->_CWE306_
<android.view.accessibility.AccessibilityInteractionClient: void removeConnection(int)> ->_CWE306_
<javax.obex.ServerSession: void handleDisconnectRequest()> ->_CWE306_
<org.jivesoftware.smack.PacketReader: org.jivesoftware.smack.packet.LoginResponse parseLoginResponse(com.google.common.io.protocol.ProtoBuf)> ->_CWE306_
<android.database.sqlite.SQLiteConnection: int getConnectionId()> ->_CWE306_
<android.bluetooth.BluetoothPbap: boolean isConnected(android.bluetooth.BluetoothDevice)> ->_CWE306_
<java.nio.channels.SelectionKey: boolean isConnectable()> ->_CWE306_
<android.database.sqlite.SQLiteConnectionPool: boolean recycleConnectionLocked(android.database.sqlite.SQLiteConnection,android.database.sqlite.SQLiteConnectionPool$AcquiredConnectionStatus)> ->_CWE306_
<android.database.sqlite.SQLiteConnectionPool: android.database.sqlite.SQLiteConnection openConnectionLocked(android.database.sqlite.SQLiteDatabaseConfiguration,boolean)> ->_CWE306_
<android.media.AudioService: void broadcastScoConnectionState(int)> ->_CWE306_
<libcore.net.url.FtpURLConnection: void connect()> ->_CWE306_
<org.jivesoftware.smack.SASLAuthentication: void authenticated()> ->_CWE306_
<android.filterfw.core.Filter: int getNumberOfConnectedInputs()> ->_CWE306_
<android.opengl.GLLogWrapper: void startLogIndices()> ->_CWE306_
<android.nfc.tech.MifareUltralight: void connect()> ->_CWE306_
<org.apache.http.conn.params.ConnManagerParams: int getMaxTotalConnections(org.apache.http.params.HttpParams)> ->_CWE306_
<android.media.MediaScannerConnection: void connect()> ->_CWE306_
<org.jivesoftware.smack.XMPPConnection: boolean isSecureConnection()> ->_CWE306_
<java.lang.SecurityManager: void checkConnect(java.lang.String,int)> ->_CWE306_
<java.net.DatagramSocket: boolean isConnected()> ->_CWE306_
<android.nfc.tech.Ndef: void connect()> ->_CWE306_
<net.oauth.client.URLConnectionClient: net.oauth.http.HttpResponseMessage execute(net.oauth.http.HttpMessage)> ->_CWE306_
<android.media.RemoteDisplay: void notifyDisplayConnected(android.view.Surface,int,int,int)> ->_CWE306_
<org.jivesoftware.smack.XMPPConnection: org.jivesoftware.smack.ConnectionConfiguration getConnectionConfiguration()> ->_CWE306_
<android.net.wifi.SupplicantStateTracker: void handleNetworkConnectionFailure(int)> ->_CWE306_
<java.sql.DriverManager: java.sql.Connection getConnection(java.lang.String,java.lang.String,java.lang.String)> ->_CWE306_
<android.view.accessibility.AccessibilityNodeInfo: boolean canPerformRequestOverConnection(long)> ->_CWE306_
<android.os.storage.MountServiceListener: void onUsbMassStorageConnectionChanged(boolean)> ->_CWE306_
<android.nfc.Tag: void setConnectedTechnology(int)> ->_CWE306_
<android.net.MobileDataStateTracker: boolean reconnect()> ->_CWE306_
<libcore.net.http.HttpURLConnectionImpl: java.net.InetAddress getConnectToInetAddress()> ->_CWE306_
<android.net.wifi.SupplicantState: boolean isConnecting(android.net.wifi.SupplicantState)> ->_CWE306_
<libcore.net.http.HttpsHandler: java.net.URLConnection openConnection(java.net.URL)> ->_CWE306_
<java.net.Authenticator: java.net.PasswordAuthentication getPasswordAuthentication()> ->_CWE306_
<android.widget.AbsListView: boolean checkInputConnectionProxy(android.view.View)> ->_CWE306_
<org.apache.http.client.params.ClientParamBean: void setConnectionManagerFactoryClassName(java.lang.String)> ->_CWE306_
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: boolean isConnected()> ->_CWE306_
<android.net.http.HttpsConnection: android.net.http.AndroidHttpClientConnection openConnection(android.net.http.Request)> ->_CWE306_
<android.bluetooth.BluetoothA2dp: int getConnectionState(android.bluetooth.BluetoothDevice)> ->_CWE306_
<android.telephony.PhoneStateListener: void onDataConnectionStateChanged(int)> ->_CWE306_
<org.apache.http.impl.auth.DigestScheme: boolean isConnectionBased()> ->_CWE306_
<android.os.StrictMode: void onServiceConnectionLeaked(java.lang.Throwable)> ->_CWE306_
<android.view.accessibility.AccessibilityInteractionClient: android.accessibilityservice.IAccessibilityServiceConnection getConnection(int)> ->_CWE306_
<org.jivesoftware.smack.SASLAuthentication: boolean hasNonAnonymousAuthentication()> ->_CWE306_
<java.net.Authenticator: java.net.PasswordAuthentication requestPasswordAuthentication(java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String,java.net.URL,java.net.Authenticator$RequestorType)> ->_CWE306_
<org.jivesoftware.smack.SSLXMPPConnection: boolean isSecureConnection()> ->_CWE306_
<android.database.sqlite.SQLiteConnectionPool: boolean isSessionBlockingImportantConnectionWaitersLocked(boolean,int)> ->_CWE306_
<net.oauth.client.URLConnectionResponse: void <init>(net.oauth.http.HttpMessage,java.lang.String,byte[],java.net.URLConnection)> ->_CWE306_
<org.apache.harmony.security.pkcs7.SignerInfo: byte[] getEncodedAuthenticatedAttributes()> ->_CWE306_
<android.database.sqlite.SQLiteConnectionPool: android.database.sqlite.SQLiteConnection tryAcquireNonPrimaryConnectionLocked(java.lang.String,int)> ->_CWE306_
<android.net.http.HttpsConnection: void closeConnection()> ->_CWE306_
<org.jivesoftware.smack.XMPPConnection: void setAuthenticated(boolean)> ->_CWE306_
<android.media.MediaScannerConnection: void disconnect()> ->_CWE306_
<android.filterfw.core.FilterGraph: void setDiscardUnconnectedOutputs(boolean)> ->_CWE306_
<android.database.sqlite.SQLiteSession: void acquireConnection(java.lang.String,int,android.os.CancellationSignal)> ->_CWE306_
<java.net.ProxySelectorImpl: void connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException)> ->_CWE306_
<org.jivesoftware.smack.XMPPConnection: void setLocalConnectionId(int)> ->_CWE306_
<org.apache.http.impl.conn.SingleClientConnManager: org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object)> ->_CWE306_
<android.media.AudioService: void onSetRsxConnectionState(int,int)> ->_CWE306_
<android.media.AudioService: void sendDeviceConnectionIntent(int,int,java.lang.String)> ->_CWE306_
<org.jivesoftware.smack.NonSASLAuthentication: java.lang.String authenticate(java.lang.String,java.lang.String,java.lang.String)> ->_CWE306_
<android.nfc.tech.BasicTagTechnology: void connect()> ->_CWE306_
<android.media.AudioService: void onSetWiredDeviceConnectionState(int,int,java.lang.String)> ->_CWE306_
<java.net.DatagramSocket: void connect(java.net.InetAddress,int)> ->_CWE306_
<gov.nist.javax.sip.SipStackImpl: gov.nist.javax.sip.clientauthutils.AuthenticationHelper getAuthenticationHelper(gov.nist.javax.sip.clientauthutils.AccountManager,javax.sip.header.HeaderFactory)> ->_CWE306_
<android.nfc.tech.NfcV: boolean isConnected()> ->_CWE306_
<android.nfc.tech.NfcF: boolean isConnected()> ->_CWE306_
<org.jivesoftware.smack.ProtoBufAuthentication: java.lang.String authenticate(java.lang.String,java.lang.String,java.lang.String)> ->_CWE306_
<android.bluetooth.BluetoothHeadset: boolean isAudioConnected(android.bluetooth.BluetoothDevice)> ->_CWE306_
<android.nfc.tech.NfcB: boolean isConnected()> ->_CWE306_
<android.nfc.tech.NfcA: boolean isConnected()> ->_CWE306_
<java.net.Socket: boolean isConnected()> ->_CWE306_
<libcore.net.url.FileHandler: java.net.URLConnection openConnection(java.net.URL)> ->_CWE306_
<org.jivesoftware.smack.XMPPConnection: boolean isConnected()> ->_CWE306_
<android.view.accessibility.AccessibilityManager: void removeAccessibilityInteractionConnection(android.view.IWindow)> ->_CWE306_
<libcore.io.IoBridge: boolean connect(java.io.FileDescriptor,java.net.InetAddress,int)> ->_CWE306_
<android.database.sqlite.SQLiteConnectionPool: android.database.sqlite.SQLiteConnection waitForConnection(java.lang.String,int,android.os.CancellationSignal)> ->_CWE306_
<libcore.net.http.HttpsURLConnectionImpl: void checkConnected()> ->_CWE306_
<org.apache.http.impl.AbstractHttpServerConnection: org.apache.http.impl.HttpConnectionMetricsImpl createConnectionMetrics(org.apache.http.io.HttpTransportMetrics,org.apache.http.io.HttpTransportMetrics)> ->_CWE306_
<net.oauth.client.URLConnectionResponse: java.io.InputStream openBody()> ->_CWE306_
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry)> ->_CWE306_
<android.database.sqlite.SQLiteConnectionPool: boolean shouldYieldConnection(android.database.sqlite.SQLiteConnection,int)> ->_CWE306_
<java.net.PlainSocketImpl: void connect(java.net.InetAddress,int,int)> ->_CWE306_
<android.net.http.HttpConnection: void closeConnection()> ->_CWE306_
<android.bluetooth.BluetoothHeadset: boolean rejectIncomingConnect(android.bluetooth.BluetoothDevice)> ->_CWE306_
<android.speech.tts.TextToSpeech: boolean connectToEngine(java.lang.String)> ->_CWE306_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager createClientConnectionManager()> ->_CWE306_
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object)> ->_CWE306_
<android.bluetooth.BluetoothHeadset: java.util.List getConnectedDevices()> ->_CWE306_
<org.apache.http.impl.client.AbstractHttpClient: void setProxyAuthenticationHandler(org.apache.http.client.AuthenticationHandler)> ->_CWE306_
<android.media.AudioManager: int setBluetoothA2dpDeviceConnectionState(android.bluetooth.BluetoothDevice,int)> ->_CWE306_
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void closeConnection(org.apache.http.impl.conn.tsccm.BasicPoolEntry)> ->_CWE306_
<java.nio.SocketChannelImpl: boolean connect(java.net.SocketAddress)> ->_CWE306_
<android.content.SyncManager: boolean readDataConnectionState()> ->_CWE306_
<libcore.io.IoBridge: boolean connectErrno(java.io.FileDescriptor,java.net.InetAddress,int,int)> ->_CWE306_
<android.bluetooth.BluetoothTetheringDataTracker: boolean reconnect()> ->_CWE306_
<org.jivesoftware.smack.SASLAuthentication: void authenticationFailed()> ->_CWE306_
<org.apache.http.protocol.HttpRequestExecutor: void closeConnection(org.apache.http.HttpClientConnection)> ->_CWE306_
<org.jivesoftware.smack.XMPPConnection: java.net.Socket getSocketConnection()> ->_CWE306_
<android.net.LinkSocket: void connect(java.net.SocketAddress,int)> ->_CWE306_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.ConnectionReuseStrategy createConnectionReuseStrategy()> ->_CWE306_
<android.filterfw.core.FilterGraph: void discardUnconnectedOutputs()> ->_CWE306_
<org.apache.http.impl.conn.SingleClientConnManager: org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object)> ->_CWE306_
<org.jivesoftware.smack.SASLAuthentication: boolean isAuthenticated()> ->_CWE306_
<android.nfc.tech.NfcBarcode: void reconnect()> ->_CWE306_
<org.apache.http.conn.params.ConnManagerParams: org.apache.http.conn.params.ConnPerRoute getMaxConnectionsPerRoute(org.apache.http.params.HttpParams)> ->_CWE306_
<android.bluetooth.BluetoothA2dp: boolean connect(android.bluetooth.BluetoothDevice)> ->_CWE306_
<android.accounts.AccountManagerService: void checkCallingUidAgainstAuthenticator(android.accounts.Account)> ->_CWE306_
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.ConnPoolByRoute createConnectionPool(long,java.util.concurrent.TimeUnit)> ->_CWE306_
<android.nfc.tech.Ndef: void reconnect()> ->_CWE306_
<android.nfc.tech.MifareUltralight: void reconnect()> ->_CWE306_
<android.database.sqlite.SQLiteProgram: int getConnectionFlags()> ->_CWE306_
<java.io.PipedOutputStream: void connect(java.io.PipedInputStream)> ->_CWE306_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ConnectionKeepAliveStrategy createConnectionKeepAliveStrategy()> ->_CWE306_
<org.jivesoftware.smack.NonSASLAuthentication: java.lang.String authenticateAnonymously()> ->_CWE306_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ConnectionKeepAliveStrategy getConnectionKeepAliveStrategy()> ->_CWE306_
<android.net.wifi.WifiManager: boolean disconnect()> ->_CWE306_
<org.jivesoftware.smack.XMPPConnection: int getLocalConnectionId()> ->_CWE306_
<java.net.URLConnection: int getConnectTimeout()> ->_CWE306_
<android.widget.AbsListView: boolean onRemoteAdapterConnected()> ->_CWE306_
<org.jivesoftware.smack.PacketReader: void addConnectionListener(org.jivesoftware.smack.ConnectionListener)> ->_CWE306_
<android.net.http.AndroidHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()> ->_CWE306_
<java.nio.SocketChannelImpl: boolean finishConnect()> ->_CWE306_
<android.database.sqlite.SQLiteConnectionPool: android.database.sqlite.SQLiteConnection acquireConnection(java.lang.String,int,android.os.CancellationSignal)> ->_CWE306_
<android.accounts.AccountManager: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes()> ->_CWE306_
<android.bluetooth.BluetoothPan: int getConnectionState(android.bluetooth.BluetoothDevice)> ->_CWE306_
<org.jivesoftware.smack.PacketReader: void notifyConnectionError(java.lang.Exception)> ->_CWE306_
<libcore.net.url.FtpHandler: java.net.URLConnection openConnection(java.net.URL)> ->_CWE306_
<android.bluetooth.BluetoothHealth: java.util.List getDevicesMatchingConnectionStates(int[])> ->_CWE306_
<android.net.LocalSocket: void connect(android.net.LocalSocketAddress)> ->_CWE306_
<android.net.http.HttpConnection: android.net.http.AndroidHttpClientConnection openConnection(android.net.http.Request)> ->_CWE306_
<org.apache.http.conn.routing.RouteTracker: void connectProxy(org.apache.http.HttpHost,boolean)> ->_CWE306_
<android.view.View: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)> ->_CWE306_
<org.apache.http.impl.conn.tsccm.AbstractConnPool: void closeIdleConnections(long,java.util.concurrent.TimeUnit)> ->_CWE306_
<org.apache.http.impl.client.AbstractHttpClient: void setTargetAuthenticationHandler(org.apache.http.client.AuthenticationHandler)> ->_CWE306_
<android.nfc.tech.NfcV: void connect()> ->_CWE306_
<android.net.wifi.WifiStateMachine: void sendSupplicantConnectionChangedBroadcast(boolean)> ->_CWE306_
<android.nfc.tech.NfcF: void connect()> ->_CWE306_
<android.nfc.tech.NfcB: void connect()> ->_CWE306_
<android.nfc.tech.NfcA: void connect()> ->_CWE306_
<android.net.EthernetDataTracker: boolean reconnect()> ->_CWE306_
<libcore.net.http.RequestHeaders: void setConnection(java.lang.String)> ->_CWE306_
<android.nfc.tech.MifareClassic: void connect()> ->_CWE306_
<android.net.http.Request: void setConnection(android.net.http.Connection)> ->_CWE306_
<libcore.net.http.HttpsURLConnectionImpl: void setConnectTimeout(int)> ->_CWE306_
<org.jivesoftware.smack.XMPPConnection: void removeConnectionListener(org.jivesoftware.smack.ConnectionEstablishedListener)> ->_CWE306_
<android.database.sqlite.SQLiteConnectionPool: void closeAvailableConnectionsAndLogExceptionsLocked()> ->_CWE306_
<org.apache.http.client.params.HttpClientParams: void setAuthenticating(org.apache.http.params.HttpParams,boolean)> ->_CWE306_
<android.net.wifi.WifiNative: boolean setPersistentReconnect(boolean)> ->_CWE306_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.AuthenticationInfoHeader createAuthenticationInfoHeader(java.lang.String)> ->_CWE306_
<android.accounts.AccountAuthenticatorActivity: void setAccountAuthenticatorResult(android.os.Bundle)> ->_CWE306_
<org.jivesoftware.smack.XMPPConnection: java.util.Map getLoginSettings()> ->_CWE306_
<org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)> ->_CWE306_
<android.net.http.IdleCache: android.net.http.Connection getConnection(org.apache.http.HttpHost)> ->_CWE306_
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int getConnectionsInPool()> ->_CWE306_
<android.filterfw.core.FilterGraph: void connectPorts()> ->_CWE306_
<org.jivesoftware.smack.ConnectionConfiguration: boolean isSASLAuthenticationEnabled()> ->_CWE306_
<android.widget.ExpandableListView: int getFlatPositionForConnector(int)> ->_CWE306_
<libcore.net.url.JarHandler: java.net.URLConnection openConnection(java.net.URL)> ->_CWE306_
<javax.obex.ClientSession: void setConnectionID(long)> ->_CWE306_
<org.jivesoftware.smackx.packet.VCard: void checkAuthenticated(org.jivesoftware.smack.XMPPConnection)> ->_CWE306_
<net.oauth.client.URLConnectionResponse: java.util.List getHeaders()> ->_CWE306_
<android.filterfw.core.FilterFunction: void connectFilterOutputs()> ->_CWE306_
<gov.nist.javax.sip.SipStackImpl: gov.nist.javax.sip.clientauthutils.AuthenticationHelper getSecureAuthenticationHelper(gov.nist.javax.sip.clientauthutils.SecureAccountManager,javax.sip.header.HeaderFactory)> ->_CWE306_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()> ->_CWE306_
<org.apache.commons.logging.LogSource: org.apache.commons.logging.Log makeNewLogInstance(java.lang.String)> ->_CWE306_
<android.nfc.tech.IsoDep: boolean isConnected()> ->_CWE306_
<java.sql.DriverManager: int getLoginTimeout()> ->_CWE306_
<libcore.net.http.HttpURLConnectionImpl: java.lang.String getConnectToHost()> ->_CWE306_
<libcore.net.url.FtpURLConnection: void connectInternal()> ->_CWE306_
<android.net.http.IdleCache: boolean cacheConnection(org.apache.http.HttpHost,android.net.http.Connection)> ->_CWE306_
<android.net.http.Connection: android.net.http.Connection getConnection(android.content.Context,org.apache.http.HttpHost,org.apache.http.HttpHost,android.net.http.RequestFeeder)> ->_CWE306_
<android.bluetooth.BluetoothPan: boolean connect(android.bluetooth.BluetoothDevice)> ->_CWE306_
<libcore.net.http.HttpEngine: java.net.HttpURLConnection getHttpConnectionToCache()> ->_CWE306_
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: int getConnectionsInPool()> ->_CWE306_
<android.net.NetworkInfo: boolean isConnectedOrConnecting()> ->_CWE306_
<android.nfc.tech.Ndef: boolean isConnected()> ->_CWE306_
<android.telephony.PhoneStateListener: void onDataConnectionStateChanged(int,int)> ->_CWE306_
<java.nio.DatagramChannelImpl: java.nio.channels.DatagramChannel disconnect()> ->_CWE306_
<org.apache.http.impl.auth.NTLMScheme: boolean isConnectionBased()> ->_CWE306_
<javax.obex.ServerRequestHandler: void setConnectionId(long)> ->_CWE306_
<android.bluetooth.BluetoothPan: java.util.List getConnectedDevices()> ->_CWE306_
<android.database.sqlite.SQLiteConnectionPool: void setMaxConnectionPoolSizeLocked()> ->_CWE306_
<android.net.http.Headers: java.lang.String getProxyAuthenticate()> ->_CWE306_
<org.apache.http.impl.conn.tsccm.AbstractConnPool: void closeExpiredConnections()> ->_CWE306_
<android.net.http.HttpsConnection: void restartConnection(boolean)> ->_CWE306_
<libcore.net.http.RequestHeaders: java.lang.String getConnection()> ->_CWE306_
<org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)> ->_CWE306_
<libcore.net.http.HttpsURLConnectionImpl: void disconnect()> ->_CWE306_
<android.view.inputmethod.InputBinding: android.view.inputmethod.InputConnection getConnection()> ->_CWE306_
<android.bluetooth.BluetoothA2dp: java.util.List getConnectedDevices()> ->_CWE306_
<android.media.AudioService: boolean handleDeviceConnection(boolean,int,java.lang.String)> ->_CWE306_
<android.nfc.tech.BasicTagTechnology: void reconnect()> ->_CWE306_
<android.nfc.tech.BasicTagTechnology: boolean isConnected()> ->_CWE306_
<android.net.http.Headers: void setWwwAuthenticate(java.lang.String)> ->_CWE306_
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute)> ->_CWE306_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.AuthenticationHandler createTargetAuthenticationHandler()> ->_CWE306_
<java.net.PlainDatagramSocketImpl: void connect(java.net.InetAddress,int)> ->_CWE306_
<libcore.net.url.FtpHandler: java.net.URLConnection openConnection(java.net.URL,java.net.Proxy)> ->_CWE306_
<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)> ->_CWE306_
<android.widget.AbsListView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)> ->_CWE306_
<android.net.wifi.WifiNative: boolean p2pCancelConnect()> ->_CWE306_
<org.jivesoftware.smack.SASLAuthentication: java.lang.String authenticate(java.lang.String,java.lang.String,java.lang.String)> ->_CWE306_
<org.apache.http.impl.conn.IdleConnectionHandler: void closeIdleConnections(long)> ->_CWE306_
<org.apache.http.client.methods.HttpRequestBase: void setConnectionRequest(org.apache.http.conn.ClientConnectionRequest)> ->_CWE306_
<org.jivesoftware.smack.PacketReader: void removeConnectionListener(org.jivesoftware.smack.ConnectionListener)> ->_CWE306_
<android.bluetooth.BluetoothAdapter: boolean enableNoAutoConnect()> ->_CWE306_
<android.content.SyncManager: android.net.ConnectivityManager getConnectivityManager()> ->_CWE306_
<android.view.accessibility.AccessibilityRecord: void setConnectionId(int)> ->_CWE306_
<android.widget.AdapterViewAnimator: boolean onRemoteAdapterConnected()> ->_CWE306_
<java.sql.DriverManager: java.sql.Connection getConnection(java.lang.String,java.util.Properties)> ->_CWE306_
<android.os.Debug: boolean isDebuggerConnected()> ->_CWE306_
<android.filterfw.core.InputPort: boolean isConnected()> ->_CWE306_
<android.view.accessibility.AccessibilityManager: int addAccessibilityInteractionConnection(android.view.IWindow,android.view.accessibility.IAccessibilityInteractionConnection)> ->_CWE306_
<java.net.PlainSocketImpl: void socksConnect(java.net.InetAddress,int,int)> ->_CWE306_
<android.bluetooth.BluetoothA2dp: java.util.List getDevicesMatchingConnectionStates(int[])> ->_CWE306_
<jp.co.omronsoft.openwnn.OpenWnnDictionaryImpl: byte[][] getConnectMatrix()> ->_CWE306_
<android.bluetooth.BluetoothHeadset: int getConnectionState(android.bluetooth.BluetoothDevice)> ->_CWE306_
<android.hardware.display.DisplayManager: void disconnectWifiDisplay()> ->_CWE306_
<android.bluetooth.BluetoothInputDevice: boolean connect(android.bluetooth.BluetoothDevice)> ->_CWE306_
<javax.obex.ClientSession: long getConnectionID()> ->_CWE306_
<java.nio.SelectionKeyImpl: boolean isConnected()> ->_CWE306_
<android.net.NetworkInfo: boolean isConnected()> ->_CWE306_
<org.jivesoftware.smack.SASLAuthentication: java.lang.String authenticateAnonymously()> ->_CWE306_
<java.net.DatagramSocket: void connect(java.net.SocketAddress)> ->_CWE306_
<android.net.wifi.WifiNative: void closeSupplicantConnection()> ->_CWE306_
<android.media.MediaScannerConnection: boolean isConnected()> ->_CWE306_
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void closeExpiredConnections()> ->_CWE306_
<android.bluetooth.BluetoothPbap: boolean disconnect()> ->_CWE306_
<org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)> ->_CWE306_
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute)> ->_CWE306_
<android.net.wifi.WifiNative: java.lang.String p2pConnect(android.net.wifi.p2p.WifiP2pConfig,boolean)> ->_CWE306_
<org.jivesoftware.smack.PacketReader: org.jivesoftware.smack.packet.Authentication parseAuthentication(org.xmlpull.v1.XmlPullParser)> ->_CWE306_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: void connect(java.net.SocketAddress)> ->_CWE306_
<android.database.sqlite.SQLiteConnectionPool: android.database.sqlite.SQLiteConnection tryAcquirePrimaryConnectionLocked(int)> ->_CWE306_
<java.net.PlainSocketImpl: void connect(java.net.SocketAddress,int)> ->_CWE306_
<android.accessibilityservice.UiTestAutomationBridge: boolean isConnected()> ->_CWE306_
<android.accounts.ChooseTypeAndAccountActivity: void runAddAccountForAuthenticator(java.lang.String)> ->_CWE306_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.ProxyAuthenticateHeader createProxyAuthenticateHeader(java.lang.String)> ->_CWE306_
<android.os.storage.StorageEventListener: void onUsbMassStorageConnectionChanged(boolean)> ->_CWE306_
<android.content.pm.ContainerEncryptionParams: long getAuthenticatedDataStart()> ->_CWE306_
<android.database.sqlite.SQLiteConnectionPool: void logConnectionPoolBusyLocked(long,int)> ->_CWE306_
<gov.nist.javax.sip.stack.SIPTransactionStack: void setMaxConnections(int)> ->_CWE306_
<android.filterfw.core.FilterGraph: void preconnect(android.filterfw.core.OutputPort,android.filterfw.core.InputPort)> ->_CWE306_
<android.opengl.GLLogWrapper: void endLogIndices()> ->_CWE306_
<android.nfc.tech.IsoDep: void reconnect()> ->_CWE306_
<android.speech.SpeechRecognizer: boolean checkOpenConnection()> ->_CWE306_
<android.database.sqlite.SQLiteConnectionPool: void markAcquiredConnectionsLocked(android.database.sqlite.SQLiteConnectionPool$AcquiredConnectionStatus)> ->_CWE306_
<android.bluetooth.BluetoothHeadset: boolean acceptIncomingConnect(android.bluetooth.BluetoothDevice)> ->_CWE306_
<android.net.LinkSocket: void connect(java.lang.String,int)> ->_CWE306_
<android.bluetooth.BluetoothHeadset: boolean disconnect(android.bluetooth.BluetoothDevice)> ->_CWE306_
<libcore.net.http.HttpHandler: java.net.URLConnection openConnection(java.net.URL,java.net.Proxy)> ->_CWE306_
<java.net.PlainSocketImpl: void connect(java.lang.String,int)> ->_CWE306_
<android.bluetooth.BluetoothHeadset: boolean connect(android.bluetooth.BluetoothDevice)> ->_CWE306_
<org.apache.http.conn.params.ConnManagerParamBean: void setConnectionsPerRoute(org.apache.http.conn.params.ConnPerRouteBean)> ->_CWE306_
<org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)> ->_CWE306_
<org.apache.http.conn.routing.RouteTracker: void connectTarget(boolean)> ->_CWE306_
<org.jivesoftware.smack.XMPPConnection: void setConnected(boolean)> ->_CWE306_
<android.webkit.BrowserFrame: void didReceiveAuthenticationChallenge(int,java.lang.String,java.lang.String,boolean,boolean)> ->_CWE306_
<org.jivesoftware.smack.XMPPConnection: void connectionEstablished(org.jivesoftware.smack.XMPPConnection)> ->_CWE306_
<android.accounts.AccountManagerService: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes()> ->_CWE306_
<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.impl.HttpConnectionMetricsImpl createConnectionMetrics(org.apache.http.io.HttpTransportMetrics,org.apache.http.io.HttpTransportMetrics)> ->_CWE306_
<java.net.ResponseSource: boolean requiresConnection()> ->_CWE306_
<org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)> ->_CWE306_
<android.net.DummyDataStateTracker: boolean reconnect()> ->_CWE306_
<org.jivesoftware.smack.XMPPConnection: void addConnectionListener(org.jivesoftware.smack.ConnectionEstablishedListener)> ->_CWE306_
<android.database.sqlite.SQLiteConnectionPool: void closeExcessConnectionsAndLogExceptionsLocked()> ->_CWE306_
<android.net.http.Headers: void setConnectionType(org.apache.http.util.CharArrayBuffer,int)> ->_CWE306_
<org.apache.http.client.params.HttpClientParams: boolean isAuthenticating(org.apache.http.params.HttpParams)> ->_CWE306_
<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: void removeCachedAuthenticationHeaders(java.lang.String)> ->_CWE306_
<java.nio.SocketChannelImpl: boolean isConnectionPending()> ->_CWE306_
<android.nfc.tech.NfcBarcode: boolean isConnected()> ->_CWE306_
<java.net.DatagramSocketImpl: void connect(java.net.InetAddress,int)> ->_CWE306_
<android.bluetooth.BluetoothSocket: boolean isConnected()> ->_CWE306_
<org.apache.http.client.params.ClientParamBean: void setConnectionManagerFactory(org.apache.http.conn.ClientConnectionManagerFactory)> ->_CWE306_
<android.bluetooth.BluetoothHealth: boolean connectChannelToSource(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)> ->_CWE306_
<gov.nist.javax.sip.header.HeaderFactoryImpl: javax.sip.header.WWWAuthenticateHeader createWWWAuthenticateHeader(java.lang.String)> ->_CWE306_
<android.webkit.WebViewClassic: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)> ->_CWE306_
<android.webkit.CallbackProxy: void onReceivedLoginRequest(java.lang.String,java.lang.String,java.lang.String)> ->_CWE306_
<libcore.net.http.HttpURLConnectionImpl: void disconnect()> ->_CWE306_
<javax.obex.ServerRequestHandler: void onAuthenticationFailure(byte[])> ->_CWE306_
<android.nfc.tech.NdefFormatable: boolean isConnected()> ->_CWE306_
<android.net.wifi.WifiManager: boolean reconnect()> ->_CWE306_
<libcore.net.http.HttpsURLConnectionImpl: int getConnectTimeout()> ->_CWE306_
<android.database.sqlite.SQLiteConnectionPool: void recycleConnectionWaiterLocked(android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter)> ->_CWE306_
<libcore.net.http.HttpConnection: libcore.net.http.HttpConnection connect(java.net.URI,javax.net.ssl.SSLSocketFactory,java.net.Proxy,boolean,int)> ->_CWE306_
<android.net.wifi.WifiStateTracker: boolean reconnect()> ->_CWE306_
<javax.obex.ObexHelper: byte[] computeAuthenticationChallenge(byte[],java.lang.String,boolean,boolean)> ->_CWE306_
<java.net.Authenticator: java.net.PasswordAuthentication requestPasswordAuthentication(java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String)> ->_CWE306_
<android.filterfw.core.Filter: int getNumberOfConnectedOutputs()> ->_CWE306_
<libcore.net.url.JarURLConnectionImpl: void connect()> ->_CWE306_
<android.nfc.tech.MifareUltralight: boolean isConnected()> ->_CWE306_
<android.nfc.Tag: int getConnectedTechnology()> ->_CWE306_
<android.net.LocalSocket: void connect(android.net.LocalSocketAddress,int)> ->_CWE306_
<java.nio.DatagramChannelImpl: boolean isConnected()> ->_CWE306_
<android.database.sqlite.SQLiteConnectionPool: void finishAcquireConnectionLocked(android.database.sqlite.SQLiteConnection,int)> ->_CWE306_
<android.net.http.Headers: void setProxyAuthenticate(java.lang.String)> ->_CWE306_
<libcore.net.http.HttpURLConnectionImpl: int getConnectToPort()> ->_CWE306_
<android.media.AudioService: void onSetA2dpConnectionState(android.bluetooth.BluetoothDevice,int)> ->_CWE306_
<android.nfc.tech.MifareClassic: boolean isConnected()> ->_CWE306_
<android.net.LinkSocket: void connect(java.lang.String,int,int)> ->_CWE306_
<android.bluetooth.BluetoothAdapter: int getProfileConnectionState(int)> ->_CWE306_
<android.nfc.tech.NfcB: void reconnect()> ->_CWE306_
<android.nfc.tech.NfcA: void reconnect()> ->_CWE306_
<android.nfc.tech.NfcF: void reconnect()> ->_CWE306_
<android.nfc.tech.NfcV: void reconnect()> ->_CWE306_
<android.database.sqlite.SQLiteConnectionPool: void closeConnectionAndLogExceptionsLocked(android.database.sqlite.SQLiteConnection)> ->_CWE306_
<android.net.LinkSocket: void connect(java.net.SocketAddress)> ->_CWE306_
<libcore.net.http.HttpConnection: javax.net.ssl.SSLSocket getSecureSocketIfConnected()> ->_CWE306_
<org.apache.http.conn.routing.RouteTracker: boolean isConnected()> ->_CWE306_
<android.net.wifi.WifiManager: void connect(android.net.wifi.WifiConfiguration,android.net.wifi.WifiManager$ActionListener)> ->_CWE306_
<android.bluetooth.BluetoothInputDevice: boolean disconnect(android.bluetooth.BluetoothDevice)> ->_CWE306_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.AuthenticationHandler getProxyAuthenticationHandler()> ->_CWE306_
<org.jivesoftware.smack.SASLAuthentication: boolean hasAnonymousAuthentication()> ->_CWE306_
<android.net.wifi.p2p.WifiP2pManager: void connect(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pConfig,android.net.wifi.p2p.WifiP2pManager$ActionListener)> ->_CWE306_
<android.database.sqlite.SQLiteConnectionPool: void closeAvailableNonPrimaryConnectionsAndLogExceptionsLocked()> ->_CWE306_
<android.view.textservice.SpellCheckerSession: boolean isSessionDisconnected()> ->_CWE306_
<android.net.wifi.p2p.WifiP2pManager: void requestConnectionInfo(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ConnectionInfoListener)> ->_CWE306_
<android.accounts.AccountManagerService: void checkAuthenticateAccountsPermission(android.accounts.Account)> ->_CWE306_
<libcore.io.IoBridge: boolean connect(java.io.FileDescriptor,java.net.InetAddress,int,int)> ->_CWE306_
<javax.obex.ClientSession: void setAuthenticator(javax.obex.Authenticator)> ->_CWE306_
<android.view.inputmethod.InputMethodManager: void reportFinishInputConnection(android.view.inputmethod.InputConnection)> ->_CWE306_
<libcore.net.http.HttpURLConnectionImpl: void connect()> ->_CWE306_
<android.net.http.Connection: boolean openHttpConnection(android.net.http.Request)> ->_CWE306_
<libcore.net.http.HttpsHandler: java.net.URLConnection openConnection(java.net.URL,java.net.Proxy)> ->_CWE306_
<android.accessibilityservice.UiTestAutomationBridge: void ensureValidConnection(int)> ->_CWE306_
<android.hardware.display.DisplayManagerGlobal: void disconnectWifiDisplay()> ->_CWE306_
<org.apache.harmony.security.pkcs7.SignerInfo: java.util.List getAuthenticatedAttributes()> ->_CWE306_
<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: void setAuthenticationHeaders(javax.sip.message.Request)> ->_CWE306_
<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)> ->_CWE306_
<org.apache.http.impl.conn.DefaultClientConnectionOperator: org.apache.http.conn.OperatedClientConnection createConnection()> ->_CWE306_
<jp.co.omronsoft.openwnn.OpenWnnJAJP: int commitTextThroughInputConnection(java.lang.String)> ->_CWE306_
<android.database.sqlite.SQLiteGlobal: int getWALConnectionPoolSize()> ->_CWE306_
<libcore.io.ForwardingOs: void connect(java.io.FileDescriptor,java.net.InetAddress,int)> ->_CWE306_
<org.apache.http.conn.params.ConnManagerParams: void setMaxConnectionsPerRoute(org.apache.http.params.HttpParams,org.apache.http.conn.params.ConnPerRoute)> ->_CWE306_
<android.hardware.display.DisplayManager: void connectWifiDisplay(java.lang.String)> ->_CWE306_
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void setMaxTotalConnections(int)> ->_CWE306_
<java.sql.DriverManager: void setLoginTimeout(int)> ->_CWE306_
<android.webkit.WebView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)> ->_CWE306_
<android.bluetooth.BluetoothHeadset: boolean disconnectAudio()> ->_CWE306_
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void closeIdleConnections(long,java.util.concurrent.TimeUnit)> ->_CWE306_
<java.net.URLStreamHandler: java.net.URLConnection openConnection(java.net.URL,java.net.Proxy)> ->_CWE306_
<android.database.sqlite.SQLiteConnectionPool: void releaseConnection(android.database.sqlite.SQLiteConnection)> ->_CWE306_
<android.view.accessibility.AccessibilityInteractionClient: void addConnection(int,android.accessibilityservice.IAccessibilityServiceConnection)> ->_CWE306_
<android.bluetooth.BluetoothInputDevice: java.util.List getDevicesMatchingConnectionStates(int[])> ->_CWE306_
<java.io.PipedWriter: void connect(java.io.PipedReader)> ->_CWE306_
<net.oauth.client.URLConnectionResponse: void dump(java.util.Map)> ->_CWE306_
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void closeIdleConnections(long,java.util.concurrent.TimeUnit)> ->_CWE306_
<android.filterfw.core.FilterGraph: void connect(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_CWE306_
<android.nfc.tech.MifareClassic: boolean authenticate(int,byte[],boolean)> ->_CWE306_
<java.net.PlainSocketImpl: void connect(java.net.InetAddress,int)> ->_CWE306_
<android.webkit.BrowserFrame: void autoLogin(java.lang.String,java.lang.String,java.lang.String)> ->_CWE306_
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit)> ->_CWE306_
<android.accounts.AccountManagerService: boolean hasAuthenticatorUid(java.lang.String,int)> ->_CWE306_
<android.bluetooth.BluetoothHealth: boolean connectChannelToSink(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)> ->_CWE306_
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: boolean isConnected()> ->_CWE306_
<org.apache.http.impl.auth.AuthSchemeBase: org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)> ->_CWE306_
<android.media.AudioManager: void setWiredDeviceConnectionState(int,int,java.lang.String)> ->_CWE306_
<org.apache.http.impl.conn.DefaultClientConnectionOperator: void updateSecureConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)> ->_CWE306_
<android.net.wifi.WifiNative: boolean reconnect()> ->_CWE306_
<android.nfc.tech.NdefFormatable: void reconnect()> ->_CWE306_
<android.database.sqlite.SQLiteConnectionPool: void discardAcquiredConnectionsLocked()> ->_CWE306_
<android.view.accessibility.AccessibilityNodeInfo: void setConnectionId(int)> ->_CWE306_
<android.net.LocalSocket: boolean isConnected()> ->_CWE306_
<android.media.AudioService: void setWiredDeviceConnectionState(int,int,java.lang.String)> ->_CWE306_
<org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)> ->_CWE306_
<android.bluetooth.BluetoothPan: java.util.List getDevicesMatchingConnectionStates(int[])> ->_CWE306_
<java.io.PipedReader: void connect(java.io.PipedWriter)> ->_CWE306_
<android.bluetooth.BluetoothHealth: boolean disconnectChannel(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)> ->_CWE306_
<org.apache.http.impl.client.DefaultTargetAuthenticationHandler: boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)> ->_CWE306_
<android.view.inputmethod.InputBinding: android.os.IBinder getConnectionToken()> ->_CWE306_
<android.bluetooth.BluetoothHealth: int getConnectionState(android.bluetooth.BluetoothDevice)> ->_CWE306_
<java.io.PipedInputStream: void connect(java.io.PipedOutputStream)> ->_CWE306_
<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpRequest createConnectRequest(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext)> ->_CWE306_
<android.webkit.WebViewClient: void onReceivedLoginRequest(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String)> ->_CWE306_
<org.apache.http.impl.conn.AbstractClientConnAdapter: org.apache.http.conn.OperatedClientConnection getWrappedConnection()> ->_CWE306_
<android.bluetooth.BluetoothHeadset: boolean connectAudio()> ->_CWE306_
<org.jivesoftware.smack.sasl.SASLAnonymous: java.lang.String getAuthenticationText(java.lang.String,java.lang.String,java.lang.String)> ->_CWE306_
<org.apache.http.impl.client.DefaultProxyAuthenticationHandler: boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)> ->_CWE306_
<gov.nist.core.LogWriter: void logInfo(java.lang.String)> ->_CWE306_
<java.net.PlainDatagramSocketImpl: void disconnect()> ->_CWE306_
<android.os.storage.StorageManager: boolean isUsbMassStorageConnected()> ->_CWE306_
<org.apache.http.params.HttpConnectionParamBean: void setConnectionTimeout(int)> ->_CWE306_
<java.net.Authenticator: java.net.PasswordAuthentication requestPasswordAuthentication(java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String)> ->_CWE306_
<org.jivesoftware.smack.sasl.SASLMechanism: void authenticate(java.lang.String,java.lang.String,java.lang.String)> ->_CWE306_
<android.net.wifi.p2p.WifiP2pManager: void cancelConnect(android.net.wifi.p2p.WifiP2pManager$Channel,android.net.wifi.p2p.WifiP2pManager$ActionListener)> ->_CWE306_
<org.apache.http.impl.conn.IdleConnectionHandler: void closeExpiredConnections()> ->_CWE306_
<libcore.net.url.FileHandler: java.net.URLConnection openConnection(java.net.URL,java.net.Proxy)> ->_CWE306_
<org.jivesoftware.smack.sasl.SASLPlainMechanism: java.lang.String getAuthenticationText(java.lang.String,java.lang.String,java.lang.String)> ->_CWE306_
<java.nio.SocketChannelImpl: boolean isConnected()> ->_CWE306_
<java.net.URLConnection: void setConnectTimeout(int)> ->_CWE306_
<libcore.net.url.FtpURLConnection: void login()> ->_CWE306_
<android.nfc.tech.IsoDep: void connect()> ->_CWE306_
<java.sql.DriverManager: java.sql.Connection getConnection(java.lang.String)> ->_CWE306_
<org.apache.http.conn.MultihomePlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)> ->_CWE306_
<org.jivesoftware.smack.XMPPConnection: void resetConnection(java.lang.Exception)> ->_CWE306_
<org.apache.http.impl.conn.SingleClientConnManager: void closeExpiredConnections()> ->_CWE306_
<libcore.net.http.HttpsURLConnectionImpl: void connect()> ->_CWE306_
<org.jivesoftware.smack.XMPPConnection: void addConnectionListener(org.jivesoftware.smack.ConnectionListener)> ->_CWE306_
<org.jivesoftware.smack.XMPPConnection: void removeConnectionListener(org.jivesoftware.smack.ConnectionListener)> ->_CWE306_
<org.apache.http.conn.params.ConnManagerParamBean: void setMaxTotalConnections(int)> ->_CWE306_
<android.bluetooth.BluetoothPan: boolean disconnect(android.bluetooth.BluetoothDevice)> ->_CWE306_
<android.database.sqlite.SQLiteConnection: boolean isPrimaryConnection()> ->_CWE306_
<java.lang.SecurityManager: void checkConnect(java.lang.String,int,java.lang.Object)> ->_CWE306_
<android.view.ViewRootImpl: void dispatchFinishInputConnection(android.view.inputmethod.InputConnection)> ->_CWE306_
<android.bluetooth.BluetoothHeadset: java.util.List getDevicesMatchingConnectionStates(int[])> ->_CWE306_
<org.jivesoftware.smack.ProtoBufAuthentication: java.lang.String authenticateAnonymously()> ->_CWE306_
<android.filterfw.core.OutputPort: void connectTo(android.filterfw.core.InputPort)> ->_CWE306_
<java.net.Socket: void connect(java.net.SocketAddress)> ->_CWE306_
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.ConnectionReuseStrategy getConnectionReuseStrategy()> ->_CWE306_
<android.bluetooth.BluetoothHealth: java.util.List getConnectedDevices()> ->_CWE306_
<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()> ->_CWE306_
<org.jivesoftware.smack.XMPPConnection: org.jivesoftware.smack.SASLAuthentication getSASLAuthentication()> ->_CWE306_
<android.net.http.Headers: java.lang.String getWwwAuthenticate()> ->_CWE306_
<android.bluetooth.BluetoothInputDevice: int getConnectionState(android.bluetooth.BluetoothDevice)> ->_CWE306_
<android.media.AudioService: int setBluetoothA2dpDeviceConnectionState(android.bluetooth.BluetoothDevice,int)> ->_CWE306_
<android.accounts.GrantCredentialsPermissionActivity: void setAccountAuthenticatorResult(android.os.Bundle)> ->_CWE306_
<android.bluetooth.BluetoothA2dp: boolean disconnect(android.bluetooth.BluetoothDevice)> ->_CWE306_
<android.filterfw.core.FilterGraph: void connect(android.filterfw.core.Filter,java.lang.String,android.filterfw.core.Filter,java.lang.String)> ->_CWE306_
<android.net.LocalSocketImpl: void connect(android.net.LocalSocketAddress,int)> ->_CWE306_
<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()> ->_CWE306_
<org.apache.http.impl.conn.SingleClientConnManager: void closeIdleConnections(long,java.util.concurrent.TimeUnit)> ->_CWE306_
<org.apache.http.conn.params.ConnManagerParams: void setMaxTotalConnections(org.apache.http.params.HttpParams,int)> ->_CWE306_
<android.net.wifi.WifiNative: boolean connectToSupplicant()> ->_CWE306_
<android.net.http.Headers: int getConnectionType()> ->_CWE306_
<libcore.net.http.HttpHandler: java.net.URLConnection openConnection(java.net.URL)> ->_CWE306_
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()> ->_CWE306_
<android.database.sqlite.SQLiteConnectionPool: android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter obtainConnectionWaiterLocked(java.lang.Thread,long,int,boolean,java.lang.String,int)> ->_CWE306_
<libcore.net.http.ResponseHeaders: java.lang.String getConnection()> ->_CWE306_
<java.net.Socket: void connect(java.net.SocketAddress,int)> ->_CWE306_
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void closeExpiredConnections()> ->_CWE306_
<org.jivesoftware.smack.XMPPConnection: boolean isAuthenticated()> ->_CWE306_
<android.filterfw.core.OutputPort: boolean isConnected()> ->_CWE306_
<libcore.io.BlockGuardOs: void connect(java.io.FileDescriptor,java.net.InetAddress,int)> ->_CWE306_
<android.view.View: boolean checkInputConnectionProxy(android.view.View)> ->_CWE306_
<org.apache.http.impl.conn.SingleClientConnManager: void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit)> ->_CWE306_
<android.database.sqlite.SQLiteConnectionPool: void reconfigureAllConnectionsLocked()> ->_CWE306_
<android.bluetooth.BluetoothAdapter: int getConnectionState()> ->_CWE306_
<gov.nist.javax.sip.clientauthutils.CredentialsCache: void removeAuthenticationHeader(java.lang.String)> ->_CWE306_
<android.speech.tts.TextToSpeech: java.lang.Object runActionNoReconnect(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String)> ->_CWE306_
<org.jivesoftware.smack.sasl.SASLMechanism: org.jivesoftware.smack.SASLAuthentication getSASLAuthentication()> ->_CWE306_
<org.jivesoftware.smack.XMPPConnection: void login(java.lang.String,java.lang.String,java.lang.String)> ->_CWE306_
<org.jivesoftware.smack.ConnectionConfiguration: void setSASLAuthenticationEnabled(boolean)> ->_CWE306_
<android.media.MediaScannerConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ->_CWE306_
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: void connect(java.net.SocketAddress,int)> ->_CWE306_
<org.jivesoftware.smack.XMPPConnection: void login(java.lang.String,java.lang.String)> ->_CWE306_
<android.nfc.tech.MifareClassic: boolean authenticateSectorWithKeyA(int,byte[])> ->_CWE306_
<android.nfc.tech.MifareClassic: boolean authenticateSectorWithKeyB(int,byte[])> ->_CWE306_
<net.oauth.client.URLConnectionResponse: int getStatusCode()> ->_CWE306_
<libcore.io.IoBridge: boolean isConnected(java.io.FileDescriptor,java.net.InetAddress,int,int,int)> ->_CWE306_
<android.hardware.display.DisplayManagerGlobal: void connectWifiDisplay(java.lang.String)> ->_CWE306_
<android.database.sqlite.SQLiteConnectionPool: void cancelConnectionWaiterLocked(android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter)> ->_CWE306_
<org.jivesoftware.smack.XMPPConnection: void login(boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,long,boolean,java.util.List,boolean,long,int,boolean,org.jivesoftware.smack.packet.HeartbeatStat,java.util.Map,int)> ->_CWE306_
