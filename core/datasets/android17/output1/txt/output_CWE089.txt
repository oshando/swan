<android.database.sqlite.SQLiteSession: int executeForCursorWindow(java.lang.String,java.lang.Object[],android.database.CursorWindow,int,int,boolean,int,android.os.CancellationSignal)> ->_CWE089_
<android.database.sqlite.SQLiteConnectionPool: void onConnectionLeaked()> ->_CWE089_
<android.database.sqlite.SQLiteDatabase: int getThreadDefaultConnectionFlags(boolean)> ->_CWE089_
<android.database.sqlite.SQLiteConnectionPool: void wakeConnectionWaitersLocked()> ->_CWE089_
<android.database.sqlite.SQLiteOpenHelper: java.lang.String getDatabaseName()> ->_CWE089_
<android.database.CursorWrapper: java.lang.String getColumnName(int)> ->_CWE089_
<android.mtp.MtpDatabase: int[] getObjectList(int,int,int)> ->_CWE089_
<android.database.sqlite.SQLiteConnection: void setJournalSizeLimit()> ->_CWE089_
<android.database.MergeCursor: byte[] getBlob(int)> ->_CWE089_
<android.database.sqlite.SQLiteProgram: int getUniqueId()> ->_CWE089_
<android.database.AbstractCursor: int getColumnIndexOrThrow(java.lang.String)> ->_CWE089_
<android.database.CursorWrapper: int getType(int)> ->_CWE089_
<android.database.sqlite.SQLiteConnection: int getConnectionId()> ->_CWE089_
<android.webkit.WebViewDatabaseClassic: void setHttpAuthUsernamePassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_CWE089_
<android.database.sqlite.SQLiteConnection: android.os.ParcelFileDescriptor executeForBlobFileDescriptor(java.lang.String,java.lang.Object[],android.os.CancellationSignal)> ->_CWE089_
<android.database.sqlite.SQLiteConnectionPool: boolean recycleConnectionLocked(android.database.sqlite.SQLiteConnection,android.database.sqlite.SQLiteConnectionPool$AcquiredConnectionStatus)> ->_CWE089_
<android.database.sqlite.SQLiteConnectionPool: android.database.sqlite.SQLiteConnection openConnectionLocked(android.database.sqlite.SQLiteDatabaseConfiguration,boolean)> ->_CWE089_
<android.database.sqlite.SQLiteSession: long executeForLong(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)> ->_CWE089_
<android.mtp.MtpDatabase: int setDeviceProperty(int,long,java.lang.String)> ->_CWE089_
<android.database.AbstractWindowedCursor: float getFloat(int)> ->_CWE089_
<android.database.AbstractCursor: java.lang.String getColumnName(int)> ->_CWE089_
<android.database.AbstractCursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri,int)> ->_CWE089_
<android.database.sqlite.SQLiteDatabase: long replace(java.lang.String,java.lang.String,android.content.ContentValues)> ->_CWE089_
<android.database.DatabaseUtils: java.lang.String getHexCollationKey(java.lang.String)> ->_CWE089_
<android.database.sqlite.SQLiteGlobal: int getJournalSizeLimit()> ->_CWE089_
<android.database.sqlite.SQLiteConnection: java.lang.String executeForString(java.lang.String,java.lang.Object[],android.os.CancellationSignal)> ->_CWE089_
<android.database.CursorWrapper: int getColumnIndexOrThrow(java.lang.String)> ->_CWE089_
<android.database.sqlite.SQLiteDatabase: void setForeignKeyConstraintsEnabled(boolean)> ->_CWE089_
<android.database.sqlite.SQLiteCursor: void setSelectionArguments(java.lang.String[])> ->_CWE089_
<android.database.CursorWindow: void writeToParcel(android.os.Parcel,int)> ->_CWE089_
<android.database.sqlite.SQLiteDatabase: long getPageSize()> ->_CWE089_
<android.database.sqlite.SQLiteConnectionPool: boolean isSessionBlockingImportantConnectionWaitersLocked(boolean,int)> ->_CWE089_
<android.database.CursorToBulkCursorAdaptor: android.database.CursorWindow getWindow(int)> ->_CWE089_
<android.mtp.MtpDatabase: int getDeviceProperty(int,long[],char[])> ->_CWE089_
<android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor,java.io.PrintStream)> ->_CWE089_
<android.database.BulkCursorProxy: void onMove(int)> ->_CWE089_
<android.database.sqlite.SQLiteConnectionPool: android.database.sqlite.SQLiteConnection tryAcquireNonPrimaryConnectionLocked(java.lang.String,int)> ->_CWE089_
<android.database.sqlite.SQLiteSession: void acquireConnection(java.lang.String,int,android.os.CancellationSignal)> ->_CWE089_
<android.database.CursorWindow: byte[] getBlob(int,int)> ->_CWE089_
<android.database.sqlite.SQLiteDatabaseConfiguration: void updateParametersFrom(android.database.sqlite.SQLiteDatabaseConfiguration)> ->_CWE089_
<android.database.AbstractWindowedCursor: java.lang.String getString(int)> ->_CWE089_
<android.database.sqlite.SQLiteDirectCursorDriver: void setBindArguments(java.lang.String[])> ->_CWE089_
<android.mtp.MtpDatabase: int getObjectFilePath(int,char[],long[])> ->_CWE089_
<android.webkit.WebIconDatabaseClassic: void bulkRequestIconForPageUrl(android.content.ContentResolver,java.lang.String,android.webkit.WebIconDatabase$IconListener)> ->_CWE089_
<android.webkit.WebViewDatabaseClassic: void setFormData(java.lang.String,java.util.HashMap)> ->_CWE089_
<android.database.AbstractWindowedCursor: long getLong(int)> ->_CWE089_
<android.database.MergeCursor: short getShort(int)> ->_CWE089_
<java.sql.SQLException: void setNextException(java.sql.SQLException)> ->_CWE089_
<android.database.DatabaseUtils: byte[] getCollationKeyInBytes(java.lang.String)> ->_CWE089_
<android.database.sqlite.SQLiteSession: long executeForLastInsertedRowId(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)> ->_CWE089_
<android.database.sqlite.SQLiteConnectionPool: android.database.sqlite.SQLiteConnection waitForConnection(java.lang.String,int,android.os.CancellationSignal)> ->_CWE089_
<android.mtp.MtpDatabase: boolean getObjectInfo(int,int[],char[],long[])> ->_CWE089_
<android.database.sqlite.SQLiteGlobal: java.lang.String getDefaultJournalMode()> ->_CWE089_
<android.database.AbstractCursor: java.lang.Object getUpdatedField(int)> ->_CWE089_
<android.database.sqlite.SQLiteConnectionPool: boolean shouldYieldConnection(android.database.sqlite.SQLiteConnection,int)> ->_CWE089_
<android.database.sqlite.SQLiteDatabase: long getMaximumSize()> ->_CWE089_
<android.database.BulkCursorDescriptor: void writeToParcel(android.os.Parcel,int)> ->_CWE089_
<android.database.DatabaseUtils: int getSqlStatementType(java.lang.String)> ->_CWE089_
<android.database.CursorWrapper: int getInt(int)> ->_CWE089_
<android.database.BulkCursorProxy: android.os.Bundle respond(android.os.Bundle)> ->_CWE089_
<android.database.AbstractCursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)> ->_CWE089_
<android.database.DatabaseUtils: int getKeyLen(byte[])> ->_CWE089_
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])> ->_CWE089_
<android.database.sqlite.SQLiteDatabase: void dump(android.util.Printer,boolean)> ->_CWE089_
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteSession getThreadSession()> ->_CWE089_
<android.database.sqlite.SQLiteDatabase: java.util.ArrayList getDbStats()> ->_CWE089_
<android.database.BulkCursorNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)> ->_CWE089_
<android.database.sqlite.SQLiteProgram: int getConnectionFlags()> ->_CWE089_
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)> ->_CWE089_
<android.database.sqlite.SQLiteConnection: long executeForLastInsertedRowId(java.lang.String,java.lang.Object[],android.os.CancellationSignal)> ->_CWE089_
<android.database.CursorWindow: double getDouble(int,int)> ->_CWE089_
<java.sql.SQLWarning: void setNextWarning(java.sql.SQLWarning)> ->_CWE089_
<android.database.sqlite.SQLiteSession: java.lang.String executeForString(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)> ->_CWE089_
<android.database.MergeCursor: int getType(int)> ->_CWE089_
<android.database.sqlite.SQLiteConnectionPool: android.database.sqlite.SQLiteConnection acquireConnection(java.lang.String,int,android.os.CancellationSignal)> ->_CWE089_
<android.database.sqlite.SQLiteSession: void execute(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)> ->_CWE089_
<android.database.sqlite.SQLiteSession: void setTransactionSuccessful()> ->_CWE089_
<gov.nist.javax.sip.header.ims.PUserDatabase: java.lang.String getDatabaseName()> ->_CWE089_
<android.database.sqlite.SQLiteStatement: int executeUpdateDelete()> ->_CWE089_
<android.database.sqlite.SQLiteDatabase: void setVersion(int)> ->_CWE089_
<android.database.sqlite.SQLiteDatabase: int getVersion()> ->_CWE089_
<android.database.CursorWindow: float getFloat(int,int)> ->_CWE089_
<android.database.sqlite.SQLiteConnectionPool: void closeAvailableConnectionsAndLogExceptionsLocked()> ->_CWE089_
<android.database.sqlite.SQLiteProgram: java.lang.Object[] getBindArgs()> ->_CWE089_
<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteSession getSession()> ->_CWE089_
<android.database.CursorWindow: short getShort(int,int)> ->_CWE089_
<android.database.MatrixCursor: float getFloat(int)> ->_CWE089_
<android.database.AbstractWindowedCursor: void setWindow(android.database.CursorWindow)> ->_CWE089_
<android.database.MatrixCursor: long getLong(int)> ->_CWE089_
<android.database.sqlite.SQLiteQueryBuilder: void setDistinct(boolean)> ->_CWE089_
<android.database.MatrixCursor: java.lang.String getString(int)> ->_CWE089_
<android.database.sqlite.SQLiteCursor: java.lang.String[] getColumnNames()> ->_CWE089_
<android.database.sqlite.SQLiteConnection: void setAutoCheckpointInterval()> ->_CWE089_
<android.database.sqlite.SQLiteDebug: void dump(android.util.Printer,java.lang.String[])> ->_CWE089_
<android.webkit.WebViewDatabaseClassic: java.lang.String[] getHttpAuthUsernamePassword(java.lang.String,java.lang.String)> ->_CWE089_
<android.database.sqlite.SQLiteStatement: long executeInsert()> ->_CWE089_
<android.database.sqlite.SQLiteConnection: void collectDbStats(java.util.ArrayList)> ->_CWE089_
<android.database.sqlite.SQLiteConnectionPool: void dump(android.util.Printer,boolean)> ->_CWE089_
<android.database.DatabaseUtils: int getTypeOfObject(java.lang.Object)> ->_CWE089_
<android.database.DatabaseUtils: java.lang.String getCollationKey(java.lang.String)> ->_CWE089_
<android.database.sqlite.SQLiteConnection: long executeForLong(java.lang.String,java.lang.Object[],android.os.CancellationSignal)> ->_CWE089_
<android.database.sqlite.SQLiteQueryBuilder: void setProjectionMap(java.util.Map)> ->_CWE089_
<android.database.sqlite.SQLiteSession: boolean executeSpecial(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)> ->_CWE089_
<android.database.CursorWrapper: byte[] getBlob(int)> ->_CWE089_
<android.database.CursorWindow: java.lang.String getString(int,int)> ->_CWE089_
<android.database.DatabaseUtils: java.lang.String sqlEscapeString(java.lang.String)> ->_CWE089_
<android.database.sqlite.SQLiteConnectionPool: void setMaxConnectionPoolSizeLocked()> ->_CWE089_
<android.database.sqlite.SQLiteDatabase: int executeSql(java.lang.String,java.lang.Object[])> ->_CWE089_
<gov.nist.javax.sip.header.ims.PUserDatabase: void setValue(java.lang.String)> ->_CWE089_
<android.database.sqlite.SQLiteConnection: void dumpUnsafe(android.util.Printer,boolean)> ->_CWE089_
<android.database.sqlite.SQLiteDatabase: java.util.Map getSyncedTables()> ->_CWE089_
<android.database.sqlite.SQLiteSession: android.os.ParcelFileDescriptor executeForBlobFileDescriptor(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)> ->_CWE089_
<android.database.AbstractCursor: int getColumnIndex(java.lang.String)> ->_CWE089_
<android.database.MergeCursor: int getInt(int)> ->_CWE089_
<android.database.sqlite.SQLiteConnectionPool: int getPriority(int)> ->_CWE089_
<android.database.MatrixCursor: double getDouble(int)> ->_CWE089_
<android.database.CursorWindow: long getLong(int,int)> ->_CWE089_
<android.database.sqlite.SQLiteQueryBuilder: void setStrict(boolean)> ->_CWE089_
<android.database.sqlite.SQLiteDatabaseConfiguration: java.lang.String stripPathForLogs(java.lang.String)> ->_CWE089_
<android.database.BulkCursorProxy: android.database.CursorWindow getWindow(int)> ->_CWE089_
<android.database.CursorWrapper: long getLong(int)> ->_CWE089_
<android.database.sqlite.SQLiteConnection: void setJournalMode(java.lang.String)> ->_CWE089_
<android.database.DatabaseUtils: void dumpCursor(android.database.Cursor,java.io.PrintStream)> ->_CWE089_
<android.database.sqlite.SQLiteDatabase: java.lang.String getLabel()> ->_CWE089_
<android.database.sqlite.SQLiteConnection: int executeForCursorWindow(java.lang.String,java.lang.Object[],android.database.CursorWindow,int,int,boolean,android.os.CancellationSignal)> ->_CWE089_
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getDatabaseLocked(boolean)> ->_CWE089_
<android.database.sqlite.SQLiteDatabase: void dumpAll(android.util.Printer,boolean)> ->_CWE089_
<android.database.sqlite.SQLiteCursor: android.database.sqlite.SQLiteDatabase getDatabase()> ->_CWE089_
<android.webkit.WebIconDatabase: void requestIconForPageUrl(java.lang.String,android.webkit.WebIconDatabase$IconListener)> ->_CWE089_
<android.database.CursorWrapper: short getShort(int)> ->_CWE089_
<android.database.AbstractWindowedCursor: double getDouble(int)> ->_CWE089_
<android.database.sqlite.SQLiteConnectionPool: android.database.sqlite.SQLiteConnection tryAcquirePrimaryConnectionLocked(int)> ->_CWE089_
<android.webkit.WebIconDatabase: void bulkRequestIconForPageUrl(android.content.ContentResolver,java.lang.String,android.webkit.WebIconDatabase$IconListener)> ->_CWE089_
<android.database.sqlite.SQLiteDatabase: long replaceOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)> ->_CWE089_
<android.database.AbstractWindowedCursor: int getInt(int)> ->_CWE089_
<android.database.sqlite.SQLiteConnectionPool: void logConnectionPoolBusyLocked(long,int)> ->_CWE089_
<android.database.sqlite.SQLiteConnectionPool: void markAcquiredConnectionsLocked(android.database.sqlite.SQLiteConnectionPool$AcquiredConnectionStatus)> ->_CWE089_
<android.database.sqlite.SQLiteQueryBuilder: void setCursorFactory(android.database.sqlite.SQLiteDatabase$CursorFactory)> ->_CWE089_
<android.database.sqlite.SQLiteDatabase: void setMaxSqlCacheSize(int)> ->_CWE089_
<android.webkit.WebViewDatabase: android.webkit.WebViewDatabase getInstance(android.content.Context)> ->_CWE089_
<android.database.sqlite.SQLiteDatabase: void setPageSize(long)> ->_CWE089_
<android.database.sqlite.SQLiteStatement: void execute()> ->_CWE089_
<android.database.sqlite.SQLiteDatabase: void setLocale(java.util.Locale)> ->_CWE089_
<android.database.MatrixCursor: short getShort(int)> ->_CWE089_
<android.database.AbstractWindowedCursor: int getType(int)> ->_CWE089_
<android.database.sqlite.SQLiteConnectionPool: void closeExcessConnectionsAndLogExceptionsLocked()> ->_CWE089_
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()> ->_CWE089_
<android.database.sqlite.SQLiteConnection: void setLocaleFromConfiguration()> ->_CWE089_
<android.database.sqlite.SQLiteGlobal: java.lang.String getWALSyncMode()> ->_CWE089_
<android.database.AbstractCursor: byte[] getBlob(int)> ->_CWE089_
<android.mtp.MtpDatabase: int[] getObjectReferences(int)> ->_CWE089_
<android.database.sqlite.SQLiteConnectionPool: void recycleConnectionWaiterLocked(android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter)> ->_CWE089_
<android.database.MatrixCursor: java.lang.Object get(int)> ->_CWE089_
<android.webkit.WebViewDatabaseClassic: java.util.ArrayList getFormData(java.lang.String,java.lang.String)> ->_CWE089_
<android.database.sqlite.SQLiteConnectionPool: void finishAcquireConnectionLocked(android.database.sqlite.SQLiteConnection,int)> ->_CWE089_
<android.mtp.MtpDatabase: int[] getSupportedObjectProperties(int)> ->_CWE089_
<android.database.sqlite.SQLiteConnection: void close()> ->_CWE089_
<android.database.sqlite.SQLiteConnection: void execute(java.lang.String,java.lang.Object[],android.os.CancellationSignal)> ->_CWE089_
<android.database.CursorWindow: java.lang.String getName()> ->_CWE089_
<android.database.MatrixCursor: byte[] getBlob(int)> ->_CWE089_
<android.database.sqlite.SQLiteConnectionPool: void closeConnectionAndLogExceptionsLocked(android.database.sqlite.SQLiteConnection)> ->_CWE089_
<android.database.sqlite.SQLiteSession: void endTransactionUnchecked(android.os.CancellationSignal,boolean)> ->_CWE089_
<android.webkit.WebViewDatabaseClassic: java.lang.String[] getUsernamePassword(java.lang.String)> ->_CWE089_
<android.database.sqlite.SQLiteConnectionPool: void closeAvailableNonPrimaryConnectionsAndLogExceptionsLocked()> ->_CWE089_
<android.database.AbstractCursor: void setExtras(android.os.Bundle)> ->_CWE089_
<android.database.sqlite.SQLiteConnection: void setOnlyAllowReadOnlyOperations(boolean)> ->_CWE089_
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])> ->_CWE089_
<android.database.sqlite.SQLiteGlobal: int getWALAutoCheckpoint()> ->_CWE089_
<android.database.sqlite.SQLiteSession: int executeForChangedRowCount(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)> ->_CWE089_
<android.database.sqlite.SQLiteConnection: void setPageSize()> ->_CWE089_
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])> ->_CWE089_
<android.database.sqlite.SQLiteDatabase: java.util.ArrayList getActiveDatabases()> ->_CWE089_
<android.database.sqlite.SQLiteConnection: void dump(android.util.Printer,boolean)> ->_CWE089_
<android.database.sqlite.SQLiteGlobal: int getWALConnectionPoolSize()> ->_CWE089_
<android.database.CursorWrapper: java.lang.String getString(int)> ->_CWE089_
<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()> ->_CWE089_
<android.database.sqlite.SQLiteProgram: java.lang.String[] getColumnNames()> ->_CWE089_
<android.database.CursorWrapper: float getFloat(int)> ->_CWE089_
<android.database.sqlite.SQLiteConnection: void setForeignKeyModeFromConfiguration()> ->_CWE089_
<android.database.sqlite.SQLiteConnectionPool: void releaseConnection(android.database.sqlite.SQLiteConnection)> ->_CWE089_
<org.apache.harmony.xml.dom.NodeImpl: java.lang.String sanitizeUri(java.lang.String)> ->_CWE089_
<android.webkit.WebViewDatabaseClassic: android.webkit.WebViewDatabaseClassic getInstance(android.content.Context)> ->_CWE089_
<android.database.sqlite.SQLiteGlobal: java.lang.String getDefaultSyncMode()> ->_CWE089_
<android.database.sqlite.SQLiteDatabase: long setMaximumSize(long)> ->_CWE089_
<android.database.sqlite.SqliteWrapper: int update(android.content.Context,android.content.ContentResolver,android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])> ->_CWE089_
<android.database.CursorWrapper: int getColumnIndex(java.lang.String)> ->_CWE089_
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String getTables()> ->_CWE089_
<android.test.DatabaseTestUtils: java.util.Set getSchemaSet(android.database.sqlite.SQLiteDatabase)> ->_CWE089_
<android.database.sqlite.SQLiteConnection: android.database.sqlite.SQLiteDebug$DbStats getMainDbStatsUnsafe(int,long,long)> ->_CWE089_
<android.database.sqlite.SQLiteConnectionPool: void discardAcquiredConnectionsLocked()> ->_CWE089_
<android.database.sqlite.SQLiteOpenHelper: void setWriteAheadLoggingEnabled(boolean)> ->_CWE089_
<android.database.CursorWindow: void setStartPosition(int)> ->_CWE089_
<android.database.sqlite.SQLiteCursor: int getCount()> ->_CWE089_
<android.database.CursorWrapper: void setNotificationUri(android.content.ContentResolver,android.net.Uri)> ->_CWE089_
<android.database.CursorWrapper: double getDouble(int)> ->_CWE089_
<android.database.AbstractWindowedCursor: short getShort(int)> ->_CWE089_
<android.mtp.MtpDatabase: int setObjectProperty(int,int,long,java.lang.String)> ->_CWE089_
<android.database.sqlite.SQLiteConnection: int executeForChangedRowCount(java.lang.String,java.lang.Object[],android.os.CancellationSignal)> ->_CWE089_
<android.database.sqlite.SQLiteDatabase: void setLockingEnabled(boolean)> ->_CWE089_
<android.webkit.WebViewDatabaseClassic: void setUsernamePassword(java.lang.String,java.lang.String,java.lang.String)> ->_CWE089_
<android.database.MergeCursor: long getLong(int)> ->_CWE089_
<android.database.CursorWindow: int getInt(int,int)> ->_CWE089_
<android.database.sqlite.SQLiteGlobal: int getDefaultPageSize()> ->_CWE089_
<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase getDatabase()> ->_CWE089_
<android.database.sqlite.SQLiteConnectionPool: void close()> ->_CWE089_
<gov.nist.javax.sip.header.ims.PUserDatabase: void setDatabaseName(java.lang.String)> ->_CWE089_
<android.database.sqlite.SQLiteDatabase: java.util.List getAttachedDbs()> ->_CWE089_
<android.database.sqlite.SQLiteQuery: int fillWindow(android.database.CursorWindow,int,int,boolean)> ->_CWE089_
<android.database.sqlite.SQLiteConnection: boolean isPrimaryConnection()> ->_CWE089_
<android.database.CursorWindow: boolean setNumColumns(int)> ->_CWE089_
<android.database.AbstractCursor: int getType(int)> ->_CWE089_
<android.mtp.MtpDatabase: android.mtp.MtpPropertyList getObjectPropertyList(long,int,long,int,int)> ->_CWE089_
<android.mtp.MtpDatabase: int getNumObjects(int,int,int)> ->_CWE089_
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()> ->_CWE089_
<android.database.MatrixCursor: int getInt(int)> ->_CWE089_
<android.database.MergeCursor: double getDouble(int)> ->_CWE089_
<android.database.AbstractWindowedCursor: byte[] getBlob(int)> ->_CWE089_
<android.database.CursorWindow: int getType(int,int)> ->_CWE089_
<android.database.sqlite.SQLiteCursor: int getColumnIndex(java.lang.String)> ->_CWE089_
<android.database.MergeCursor: java.lang.String getString(int)> ->_CWE089_
<android.database.sqlite.SQLiteConnection: void setSyncMode(java.lang.String)> ->_CWE089_
<android.database.sqlite.SQLiteDatabase: int updateWithOnConflict(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[],int)> ->_CWE089_
<android.database.sqlite.SQLiteConnectionPool: android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter obtainConnectionWaiterLocked(java.lang.Thread,long,int,boolean,java.lang.String,int)> ->_CWE089_
<android.database.sqlite.SQLiteCursor: void setWindow(android.database.CursorWindow)> ->_CWE089_
<android.webkit.WebIconDatabaseClassic: void requestIconForPageUrl(java.lang.String,android.webkit.WebIconDatabase$IconListener)> ->_CWE089_
<android.database.sqlite.SQLiteDebug: android.database.sqlite.SQLiteDebug$PagerStats getDatabaseInfo()> ->_CWE089_
<android.database.MatrixCursor: int getType(int)> ->_CWE089_
<android.database.sqlite.SQLiteConnectionPool: void reconfigureAllConnectionsLocked()> ->_CWE089_
<android.database.MergeCursor: float getFloat(int)> ->_CWE089_
<gov.nist.javax.sip.header.ims.PUserDatabase: java.lang.String encodeBody()> ->_CWE089_
<android.database.sqlite.SQLiteProgram: java.lang.String getSql()> ->_CWE089_
<android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)> ->_CWE089_
<android.database.sqlite.SQLiteConnectionPool: void cancelConnectionWaiterLocked(android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter)> ->_CWE089_
<android.database.sqlite.SQLiteDatabase: long insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,int)> ->_CWE089_
