<android.widget.TableRow: int getNextLocationOffset(android.view.View)> 
<android.webkit.UrlInterceptRegistry: java.util.LinkedList getHandlers()> 
<android.net.wifi.p2p.WifiP2pWfdInfo: int getControlPort()> 
<android.speech.tts.TtsEngines: android.speech.tts.TextToSpeech$EngineInfo getEngineInfo(android.content.pm.ResolveInfo,android.content.pm.PackageManager)> 
<android.opengl.GLLogWrapper: java.lang.String getIntegerStateName(int)> 
<org.apache.james.mime4j.message.Entity: java.lang.String getContentTransferEncoding()> 
<org.apache.harmony.security.provider.cert.X509CRLImpl: byte[] getTBSCertList()> 
<android.app.admin.DeviceAdminInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)> 
<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageArchiveInfo(java.lang.String,int)> 
<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost getProxyHost()> 
<org.apache.james.mime4j.field.ContentTypeField: java.lang.String getCharset()> 
<org.apache.xml.serializer.utils.AttList: java.lang.String getValue(java.lang.String,java.lang.String)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: boolean getEnableSessionCreation()> 
<android.view.KeyEvent: int getMaxKeyCode()> 
<org.apache.xpath.axes.WalkerFactory: int getStepCount(int)> 
<android.emoji.EmojiFactory: android.graphics.Bitmap getBitmapFromVendorSpecificPua(int)> 
<android.widget.CursorTreeAdapter: int getGroupCount()> 
<android.app.SearchableInfo: int getImeOptions()> 
<org.apache.xalan.templates.ElemMessage: java.lang.String getNodeName()> 
<android.app.ApplicationLoaders: java.lang.ClassLoader getClassLoader(java.lang.String,java.lang.String,java.lang.ClassLoader)> 
<java.io.InputStream: int read(byte[],int,int)> 
<org.apache.http.params.DefaultedHttpParams: java.lang.Object getParameter(java.lang.String)> 
<gov.nist.javax.sip.parser.ims.PMediaAuthorizationParser: gov.nist.javax.sip.header.SIPHeader parse()> 
<dalvik.system.DexFile: java.lang.Class loadClassBinaryName(java.lang.String,java.lang.ClassLoader)> 
<gov.nist.javax.sip.header.ContentLength: int getContentLength()> 
<android.view.animation.Transformation: int getTransformationType()> 
<android.widget.EditText: android.text.method.MovementMethod getDefaultMovementMethod()> 
<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()> 
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script$KernelID getKernelIDDst()> 
<libcore.net.http.HttpConnectionPool: libcore.net.http.HttpConnection get(libcore.net.http.HttpConnection$Address,int)> 
<android.view.View: android.graphics.Bitmap getDrawingCache(boolean)> 
<android.media.videoeditor.AudioTrack: java.lang.String getId()> 
<libcore.net.http.HttpsHandler: int getDefaultPort()> 
<android.gesture.GestureOverlayView: float getGestureStrokeWidth()> 
<android.media.audiofx.Equalizer: int getCenterFreq(short)> 
<android.telephony.gsm.SmsMessage: java.lang.String getOriginatingAddress()> 
<android.graphics.LargeBitmap: int getWidth()> 
<android.filterpacks.imageproc.ImageCombineFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<org.apache.xalan.templates.Stylesheet: int getPreserveSpaceCount()> 
<org.apache.xalan.templates.ElemTemplateElement: java.util.Vector getDeclaredPrefixes()> 
<java.security.cert.TrustAnchor: javax.security.auth.x500.X500Principal getCA()> 
<android.renderscript.Matrix4f: void loadProjectionNormalized(int,int)> 
<android.view.View: int getPaddingLeft()> 
<android.widget.NumberPicker: int getMaxValue()> 
<android.os.Environment: java.io.File getMediaStorageDirectory()> 
<android.content.ContentProvider: java.lang.String getWritePermission()> 
<org.apache.james.mime4j.util.TempStorage: org.apache.james.mime4j.util.TempStorage getInstance()> 
<android.view.ViewConfiguration: int getMaximumDrawingCacheSize()> 
<android.app.SharedPreferencesImpl: java.util.Set getStringSet(java.lang.String,java.util.Set)> 
<org.apache.xml.utils.AttList: int getIndex(java.lang.String,java.lang.String)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPublicKey: java.lang.String getAlgorithm()> 
<android.os.Environment: java.io.File getExternalStorageDirectory()> 
<android.text.style.ForegroundColorSpan: int getForegroundColor()> 
<org.apache.xalan.templates.StylesheetComposed: org.apache.xalan.templates.Stylesheet getIncludeComposed(int)> 
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: int getWindowId(java.lang.Object)> 
<java.security.cert.X509CertSelector: java.util.Set getExtendedKeyUsage()> 
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()> 
<gov.nist.javax.sip.header.RetryAfter: java.lang.String getComment()> 
<java.io.EmulatedFieldsForLoading: java.lang.Object get(java.lang.String,java.lang.Object)> 
<android.widget.SearchView: android.widget.CursorAdapter getSuggestionsAdapter()> 
<java.security.cert.CertStore: java.lang.String getDefaultType()> 
<android.widget.AdapterView: android.widget.AdapterView$OnItemSelectedListener getOnItemSelectedListener()> 
<java.lang.reflect.Field: char getChar(java.lang.Object)> 
<org.apache.harmony.xml.dom.NodeImpl: org.apache.harmony.xml.dom.NodeImpl getContainingElement()> 
<android.widget.CalendarView: int getDateTextAppearance()> 
<android.renderscript.Element: android.renderscript.Element getSubElement(int)> 
<android.os.Looper: android.os.MessageQueue getQueue()> 
<org.apache.harmony.security.pkcs10.CertificationRequest: byte[] getEncoded()> 
<android.content.ContentValues: java.lang.Byte getAsByte(java.lang.String)> 
<android.graphics.drawable.BitmapDrawable: int getChangingConfigurations()> 
<gov.nist.javax.sip.header.Challenge: java.lang.String getSignature()> 
<android.test.mock.MockCursor: short getShort(int)> 
<jp.co.omronsoft.openwnn.TextCandidatesViewManager: android.widget.TextView getFocusedView()> 
<android.app.ActivityManager: int getLargeMemoryClass()> 
<android.webkit.L10nUtils: java.lang.String getLocalisedString(int)> 
<android.filterfw.core.GraphRunner: android.filterfw.core.FilterContext getContext()> 
<android.webkit.HTML5VideoViewProxy: android.webkit.HTML5VideoViewProxy getInstance(android.webkit.WebViewCore,int)> 
<android.widget.HeaderViewListAdapter: int getHeadersCount()> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: java.lang.String getNamespaceURI(int)> 
<android.webkit.WebViewCore: android.webkit.BrowserFrame getBrowserFrame()> 
<gov.nist.javax.sip.parser.Lexer: java.lang.String getHeaderName(java.lang.String)> 
<android.os.Build: long getLong(java.lang.String)> 
<org.apache.xml.utils.SecuritySupport12: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)> 
<android.view.View: android.content.res.Resources getResources()> 
<android.net.sip.SimpleSessionDescription: int getBandwidth(java.lang.String)> 
<android.graphics.drawable.ClipDrawable: int getIntrinsicWidth()> 
<android.content.ContentProviderOperation: int getType()> 
<libcore.net.http.RawHeaders: java.lang.String getValue(int)> 
<android.nfc.TechListParcel: java.lang.String[][] getTechLists()> 
<android.util.XmlPullAttributes: int getAttributeListValue(java.lang.String,java.lang.String,java.lang.String[],int)> 
<android.app.TaskStackBuilder: int getIntentCount()> 
<org.apache.harmony.security.x509.tsp.TimeStampReq: byte[] getEncoded()> 
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.HttpRequestRetryHandler getHttpRequestRetryHandler()> 
<android.util.XmlPullAttributes: boolean getAttributeBooleanValue(java.lang.String,java.lang.String,boolean)> 
<java.util.jar.JarFile: java.util.jar.JarEntry getJarEntry(java.lang.String)> 
<android.webkit.WebView: java.lang.String getTouchIconUrl()> 
<android.graphics.drawable.LayerDrawable: int getChangingConfigurations()> 
<org.apache.harmony.xml.dom.DocumentImpl: short getNodeType()> 
<org.apache.http.protocol.HttpService: org.apache.http.params.HttpParams getParams()> 
<java.security.KeyPairGenerator: java.lang.String getAlgorithm()> 
<android.media.videoeditor.MediaProperties: int[] getSupportedAudioCodecs()> 
<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.Object getAttribute(java.lang.String)> 
<android.location.Country: java.lang.String getCountryIso()> 
<android.content.pm.PackageParser: android.content.pm.PackageParser$Service parseService(android.content.pm.PackageParser$Package,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,int,java.lang.String[])> 
<android.graphics.Paint: android.graphics.Paint$Align getTextAlign()> 
<android.app.ActivityManager: java.util.List getRunningServices(int)> 
<android.support.v4.app.LoaderManagerImpl: android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)> 
<org.apache.xalan.templates.ElemNumber: int getXSLToken()> 
<android.app.AlertDialog: android.widget.Button getButton(int)> 
<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String getProjectPath()> 
<org.kxml2.io.KXmlParser: java.lang.String getNamespace(java.lang.String)> 
<android.media.MediaRouter: android.media.MediaRouter$RouteInfo getRouteAt(int)> 
<java.lang.ThreadLocal: java.lang.Object get()> 
<android.os.Debug: int getGlobalExternalAllocCount()> 
<android.app.ApplicationPackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)> 
<android.webkit.UrlInterceptRegistry: android.webkit.PluginData getPluginData(java.lang.String,java.util.Map)> 
<org.apache.xalan.templates.ElemNumber: java.util.Locale getLocale(org.apache.xalan.transformer.TransformerImpl,int)> 
<android.content.ComponentName: java.lang.String getPackageName()> 
<android.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor)> 
<android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative()> 
<android.filterpacks.imageproc.FixedRotationFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<java.lang.StackTraceElement: int getLineNumber()> 
<java.nio.NIOAccess: long getBasePointer(java.nio.Buffer)> 
<android.net.wifi.p2p.WifiP2pGroup: android.net.wifi.p2p.WifiP2pDevice getOwner()> 
<android.accounts.ChooseAccountActivity: android.graphics.drawable.Drawable getDrawableForType(java.lang.String)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPublicKey: java.lang.String getFormat()> 
<java.io.ObjectStreamClass: java.lang.String getName()> 
<android.media.AudioTrack: int getChannelCount()> 
<android.os.storage.StorageManager: android.os.storage.StorageVolume getPrimaryVolume()> 
<org.apache.http.impl.conn.tsccm.BasicPoolEntry: long getExpiry()> 
<gov.nist.javax.sip.message.ContentImpl: javax.sip.header.ContentDispositionHeader getContentDispositionHeader()> 
<android.media.Metadata: int getInt(int)> 
<android.content.res.Resources: android.content.res.XmlResourceParser getLayout(int)> 
<android.test.TestRunner: java.lang.String[] getTestChildren(java.lang.Class)> 
<android.mtp.MtpDatabase: int[] getObjectList(int,int,int)> 
<android.net.http.HttpResponseCache: android.net.http.HttpResponseCache getInstalled()> 
<android.widget.TextView: int getMaxEms()> 
<android.media.MediaFormat: java.lang.String getString(java.lang.String)> 
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.AuthenticationHandler getTargetAuthenticationHandler()> 
<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getBranch()> 
<android.view.VelocityTracker: float getYVelocity(int)> 
<java.lang.BootClassLoader: java.lang.Package getPackage(java.lang.String)> 
<android.renderscript.Matrix4f: void loadOrtho(float,float,float,float,float,float)> 
<android.test.TestRunner: java.lang.String[] getChildren(android.content.Context,java.lang.String)> 
<org.apache.http.auth.NTCredentials: java.lang.String getUserName()> 
<android.content.ContentValues: java.lang.Object get(java.lang.String)> 
<android.text.Layout: float getLineLeft(int)> 
<android.app.DownloadManager: android.net.Uri getDownloadUri(long)> 
<org.apache.xalan.templates.Stylesheet: java.lang.String getId()> 
<org.apache.xalan.templates.ElemTemplate: org.apache.xpath.XPath getMatch()> 
<android.app.ActivityManagerProxy: int getPackageScreenCompatMode(java.lang.String)> 
<android.webkit.BrowserFrame: void stopLoading()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: int getLocalPort()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: boolean getNeedClientAuth()> 
<android.view.inputmethod.CorrectionInfo: java.lang.CharSequence getNewText()> 
<android.content.Intent: short[] getShortArrayExtra(java.lang.String)> 
<org.apache.harmony.security.utils.AlgNameMapper: java.lang.String getStandardName(java.lang.String)> 
<android.test.mock.MockContext: android.os.Looper getMainLooper()> 
<org.xml.sax.InputSource: java.io.InputStream getByteStream()> 
<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine getRequestLine()> 
<java.util.prefs.AbstractPreferences: long getLong(java.lang.String,long)> 
<android.test.mock.MockPackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)> 
<java.io.BufferedReader: int read(char[],int,int)> 
<android.widget.StackView: android.widget.FrameLayout getFrameForChild()> 
<java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()> 
<org.apache.xml.serializer.utils.AttList: java.lang.String getType(int)> 
<android.net.SntpClient: long readTimeStamp(byte[],int)> 
<org.apache.harmony.security.provider.cert.X509CRLImpl: java.util.Set getNonCriticalExtensionOIDs()> 
<android.bluetooth.BluetoothInputDevice: java.util.List getConnectedDevices()> 
<org.apache.xpath.axes.FilterExprWalker: int getLastPos(org.apache.xpath.XPathContext)> 
<org.apache.harmony.security.x509.tsp.PKIStatus: int getStatus()> 
<android.os.Debug: int getThreadExternalAllocSize()> 
<org.apache.xml.utils.UnImplNode: int getLength()> 
<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)> 
<libcore.net.http.HttpsURLConnectionImpl: int getResponseCode()> 
<android.nfc.tech.NdefFormatable: android.nfc.Tag getTag()> 
<java.nio.DoubleBuffer: java.nio.DoubleBuffer get(double[])> 
<org.apache.xml.serializer.SerializerBase: java.lang.String getEncoding()> 
<android.view.animation.GridLayoutAnimationController: int getTransformedColumnIndex(android.view.animation.GridLayoutAnimationController$AnimationParameters)> 
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo)> 
<org.xml.sax.helpers.AttributesImpl: java.lang.String getType(int)> 
<android.webkit.L10nUtils: java.lang.String loadString(int)> 
<org.apache.xalan.templates.ElemChoose: java.lang.String getNodeName()> 
<org.apache.xpath.axes.NodeSequence: int getLength()> 
<javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.lang.String)> 
<org.apache.harmony.security.asn1.ASN1ValueCollection: java.util.Collection getValues(java.lang.Object)> 
<org.apache.http.impl.HttpConnectionMetricsImpl: long getSentBytesCount()> 
<junit.runner.StandardTestSuiteLoader: java.lang.Class reload(java.lang.Class)> 
<org.jivesoftware.smack.util.PacketParserUtils: org.jivesoftware.smack.packet.Packet parseMessage(com.google.common.io.protocol.ProtoBuf,long)> 
<org.apache.http.impl.auth.NTLMScheme: java.lang.String getParameter(java.lang.String)> 
<java.security.spec.EllipticCurve: java.math.BigInteger getA()> 
<android.content.Context: java.lang.String getString(int,java.lang.Object[])> 
<java.security.spec.EllipticCurve: java.math.BigInteger getB()> 
<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()> 
<gov.nist.javax.sip.header.ContentType: java.lang.String getMediaType()> 
<android.opengl.GLLogWrapper: java.lang.String getTextureEnvParamName(float)> 
<android.widget.PopupMenu: android.view.MenuInflater getMenuInflater()> 
<gov.nist.javax.sip.stack.TCPMessageChannel: java.net.InetAddress getPeerInetAddress()> 
<android.app.LoadedApk: android.content.IIntentReceiver getReceiverDispatcher(android.content.BroadcastReceiver,android.content.Context,android.os.Handler,android.app.Instrumentation,boolean)> 
<android.animation.LayoutTransition: long getDuration(int)> 
<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getUncaughtExceptionHandler()> 
<junit.framework.ComparisonFailure: java.lang.String getMessage()> 
<android.webkit.WebView: android.webkit.PluginList getPluginList()> 
<org.xml.sax.SAXException: java.lang.Throwable getCause()> 
<android.view.inputmethod.InputMethodSubtype: java.util.HashMap getExtraValueHashMap()> 
<android.media.TimedText: java.lang.String getText()> 
<java.util.jar.JarVerifier: java.util.Vector getSignerCertificates(java.lang.String,java.util.Map)> 
<org.apache.http.protocol.DefaultedHttpContext: java.lang.Object getAttribute(java.lang.String)> 
<gov.nist.javax.sip.header.SIPHeaderList: javax.sip.header.Header getLast()> 
<android.widget.TextView: java.lang.String getPrivateImeOptions()> 
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ExpiresHeader getExpires()> 
<java.security.Signer: java.security.PrivateKey getPrivateKey()> 
<java.sql.Time: int getYear()> 
<org.apache.http.entity.BasicHttpEntity: java.io.InputStream getContent()> 
<java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)> 
<org.kxml2.io.KXmlParser: int getDepth()> 
<android.util.SparseLongArray: long get(int,long)> 
<android.telephony.SmsCbCmasInfo: int getUrgency()> 
<android.content.ComponentName: java.lang.String getShortClassName()> 
<android.opengl.EGLLogWrapper: java.lang.String getErrorString(int)> 
<libcore.io.DropBox: libcore.io.DropBox$Reporter getReporter()> 
<org.apache.xml.serializer.Version: java.lang.String getImplementationLanguage()> 
<java.util.logging.Logger: java.util.logging.Handler[] getHandlers()> 
<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()> 
<gov.nist.javax.sip.parser.ContentDispositionParser: gov.nist.javax.sip.header.SIPHeader parse()> 
<android.widget.CursorAdapter: android.widget.FilterQueryProvider getFilterQueryProvider()> 
<android.graphics.drawable.AnimatedRotateDrawable: int getIntrinsicHeight()> 
<android.app.PendingIntent: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int)> 
<android.security.AndroidKeyPairGeneratorSpec: android.content.Context getContext()> 
<java.text.BreakIterator: java.text.BreakIterator getCharacterInstance()> 
<android.filterfw.core.Filter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<gov.nist.javax.sip.header.AuthenticationInfo: java.lang.String getQop()> 
<org.apache.http.impl.client.AbstractHttpClient: int getRequestInterceptorCount()> 
<android.app.PendingIntent: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int,android.os.Bundle)> 
<android.widget.AdapterViewAnimator: android.view.View getSelectedView()> 
<android.content.Intent: boolean[] getBooleanArrayExtra(java.lang.String)> 
<java.net.JarURLConnection: java.net.URL getJarFileURL()> 
<org.apache.harmony.security.provider.cert.X509CertImpl: byte[] getTbsCertificateInternal()> 
<android.app.AppGlobals: java.lang.String getInitialPackage()> 
<android.webkit.WebHistoryItemClassic: java.lang.String getOriginalUrl()> 
<org.apache.xml.dtm.ref.DTMDefaultBaseTraversers: org.apache.xml.dtm.DTMAxisTraverser getAxisTraverser(int)> 
<android.net.NetworkStats: android.net.NetworkStats$Entry getTotalIncludingTags(android.net.NetworkStats$Entry)> 
<android.view.accessibility.AccessibilityEvent: long getEventTime()> 
<java.net.Socket: java.net.SocketAddress getLocalSocketAddress()> 
<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String getDefault()> 
<java.net.DatagramPacket: java.net.SocketAddress getSocketAddress()> 
<android.app.ActivityManagerProxy: android.app.IActivityManager$ContentProviderHolder getContentProviderExternal(java.lang.String,int,android.os.IBinder)> 
<android.net.NetworkIdentity: boolean getRoaming()> 
<org.jivesoftware.smack.packet.DataMessage: java.lang.String getPkgSignature()> 
<org.apache.xpath.objects.XNull: int getType()> 
<android.widget.RemoteViewsAdapter: void loadNextIndexInBackground()> 
<android.widget.TabHost: int getTabWidgetLocation()> 
<android.telephony.TelephonyManager: java.lang.String getNetworkTypeName()> 
<android.webkit.WebSettingsClassic: boolean getAutoFillEnabled()> 
<android.content.res.TypedArray: int getResourceId(int,int)> 
<android.drm.DrmManagerClient: java.lang.String[] getAvailableDrmEngines()> 
<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: byte[] getDigestMD5()> 
<android.webkit.HTML5VideoView: int getTextureName()> 
<org.apache.xml.utils.res.XResources_ja_JP_HA: java.lang.Object[][] getContents()> 
<org.apache.xalan.templates.TemplateList: org.apache.xalan.templates.ElemTemplate getTemplate(org.apache.xml.utils.QName)> 
<org.apache.http.impl.client.DefaultHttpRequestRetryHandler: int getRetryCount()> 
<org.apache.xml.utils.res.XResources_ja_JP_HI: java.lang.Object[][] getContents()> 
<android.bluetooth.BluetoothTetheringDataTracker: int getDefaultGatewayAddr()> 
<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getTransport()> 
<android.util.MonthDisplayHelper: int getRowOf(int)> 
<android.graphics.Paint: float getFontSpacing()> 
<android.app.AlertDialog: android.widget.ListView getListView()> 
<android.media.videoeditor.Overlay: java.lang.String getId()> 
<android.inputmethodservice.Keyboard: int[] getNearestKeys(int,int)> 
<android.telephony.SmsMessage: java.lang.String getEmailBody()> 
<org.apache.harmony.security.asn1.BitString: boolean getBit(int)> 
<android.webkit.DeviceMotionService: android.hardware.SensorManager getSensorManager()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: int getApplicationBufferSize()> 
<org.apache.http.impl.client.RequestWrapper: int getExecCount()> 
<jp.co.omronsoft.openwnn.SymbolList: jp.co.omronsoft.openwnn.WnnWord getNextCandidate()> 
<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack getCurrentNodeStack()> 
<org.apache.xml.dtm.ref.DTMDefaultBaseIterators: org.apache.xml.dtm.DTMAxisIterator getTypedAxisIterator(int,int)> 
<android.view.WindowManagerGlobal: java.lang.String getWindowName(android.view.ViewRootImpl)> 
<org.apache.xml.serializer.SecuritySupport12: java.io.FileInputStream getFileInputStream(java.io.File)> 
<org.apache.http.auth.UsernamePasswordCredentials: java.lang.String getPassword()> 
<android.hardware.input.InputManager: java.lang.String getCurrentKeyboardLayoutForInputDevice(java.lang.String)> 
<android.app.BackStackRecord: java.lang.CharSequence getBreadCrumbTitle()> 
<android.content.SyncStorageEngine: int getIsSyncable(android.accounts.Account,int,java.lang.String)> 
<java.util.ResourceBundle: java.lang.String getString(java.lang.String)> 
<org.apache.xml.serializer.WriterToASCI: java.io.Writer getWriter()> 
<android.app.PendingIntent: int getCreatorUid()> 
<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)> 
<android.graphics.drawable.InsetDrawable: boolean getPadding(android.graphics.Rect)> 
<android.media.effect.EffectFactory: java.lang.Class getEffectClassByName(java.lang.String)> 
<java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)> 
<org.apache.xalan.templates.StylesheetComposed: org.apache.xalan.templates.StylesheetComposed getImportComposed(int)> 
<org.apache.xalan.templates.StylesheetComposed: int getIncludeCountComposed()> 
<android.os.Bundle: android.os.IBinder getIBinder(java.lang.String)> 
<javax.obex.HeaderSet: int getResponseCode()> 
<android.location.Address: int getMaxAddressLineIndex()> 
<org.apache.xpath.functions.ObjectFactory: java.lang.ClassLoader findClassLoader()> 
<android.filterfw.core.Filter: int getNumberOfConnectedInputs()> 
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: java.lang.String[] getEnabledCipherSuites()> 
<org.jivesoftware.smack.sasl.SASLPlainMechanism: java.lang.String getName()> 
<java.util.concurrent.ForkJoinWorkerThread: int getQueueSize()> 
<org.apache.james.mime4j.field.address.DomainList: java.lang.String get(int)> 
<android.webkit.WebViewClassic: java.lang.String getOriginalUrl()> 
<org.ccil.cowan.tagsoup.jaxp.SAXParserImpl: java.lang.Object getProperty(java.lang.String)> 
<android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)> 
<org.kxml2.io.KXmlSerializer: boolean getFeature(java.lang.String)> 
<java.util.Locale: java.lang.String[] getISOLanguages()> 
<android.location.LocationRequest: long getInterval()> 
<java.security.Provider: double getVersion()> 
<android.test.mock.MockCursor: int getColumnCount()> 
<org.apache.harmony.security.asn1.ASN1Choice: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)> 
<org.apache.xml.dtm.SecuritySupport12: java.lang.String getSystemProperty(java.lang.String)> 
<java.net.HttpCookie: java.lang.String getName()> 
<org.apache.harmony.xnet.provider.jsse.PinListEntry: boolean getEnforcing()> 
<java.lang.reflect.AccessibleObject: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)> 
<android.filterfw.core.FrameFormat: int getHeight()> 
<java.nio.DirectByteBuffer: double getDouble(int)> 
<android.speech.tts.PlaybackSynthesisCallback: int getMaxBufferSize()> 
<javax.net.ssl.SSLEngineResult: javax.net.ssl.SSLEngineResult$HandshakeStatus getHandshakeStatus()> 
<android.content.pm.ContainerEncryptionParams: javax.crypto.SecretKey getMacKey()> 
<java.io.FilterReader: int read(char[],int,int)> 
<gov.nist.javax.sip.stack.TCPMessageChannel: int getViaPort()> 
<android.widget.BaseExpandableListAdapter: int getChildType(int,int)> 
<org.jivesoftware.smack.packet.IQ: com.google.common.io.protocol.ProtoBuf getExtensionProtoBuf()> 
<java.util.concurrent.atomic.AtomicLongArray: long getAndAdd(int,long)> 
<android.server.search.SearchManagerService: android.server.search.Searchables getSearchables(int)> 
<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.Transformer getTransformer()> 
<org.apache.harmony.xml.dom.ElementImpl: org.apache.harmony.xml.dom.AttrImpl getAttributeNode(java.lang.String)> 
<java.util.IllegalFormatCodePointException: int getCodePoint()> 
<org.apache.xalan.templates.ElemWhen: int getXSLToken()> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: java.lang.String getNodeValue(int)> 
<android.test.InstrumentationTestRunner: com.android.internal.util.Predicate getAnnotationPredicate(java.lang.String)> 
<org.apache.xml.dtm.ref.IncrementalSAXSource_Filter: int getControllerCoroutineID()> 
<org.apache.harmony.security.x509.PrivateKeyUsagePeriod: java.util.Date getNotBefore()> 
<org.apache.http.impl.SocketHttpClientConnection: int getSocketTimeout()> 
<org.apache.xml.dtm.ObjectFactory: java.lang.ClassLoader findClassLoader()> 
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int getChildCount()> 
<libcore.net.http.ResponseHeaders: java.util.Set getVaryFields()> 
<java.nio.IntToByteBufferAdapter: java.nio.IntBuffer get(int[],int,int)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: java.math.BigInteger getX()> 
<android.widget.LinearLayout: int getVirtualChildCount()> 
<org.apache.xalan.templates.ElemExtensionDecl: java.lang.String getFunction(int)> 
<org.apache.james.mime4j.util.PartialInputStream: int read(byte[],int,int)> 
<android.widget.Editor: android.view.View$DragShadowBuilder getTextThumbnailBuilder(java.lang.CharSequence)> 
<android.view.MotionEvent: long getEventTime()> 
<android.widget.AbsListView: int getListPaddingTop()> 
<org.apache.harmony.security.x509.tsp.PKIFailureInfo: org.apache.harmony.security.x509.tsp.PKIFailureInfo getInstance(int)> 
<android.nfc.NfcAdapter: android.nfc.INfcAdapterExtras getNfcAdapterExtrasInterface()> 
<android.content.SyncStorageEngine: boolean getSyncAutomatically(android.accounts.Account,int,java.lang.String)> 
<android.view.VelocityTracker: float getXVelocity()> 
<org.apache.harmony.security.x509.tsp.TimeStampResp: org.apache.harmony.security.pkcs7.ContentInfo getTimeStampToken()> 
<android.webkit.WebSettingsClassic: java.lang.String getCursiveFontFamily()> 
<org.apache.xpath.compiler.OpMap: java.lang.String getStepLocalName(int)> 
<android.telephony.ServiceState: boolean getRoaming()> 
<org.apache.harmony.security.provider.cert.X509CRLEntryImpl: java.util.Set getCriticalExtensionOIDs()> 
<org.apache.xpath.XPathException: org.apache.xpath.ExpressionNode getExpressionOwner(org.apache.xpath.ExpressionNode)> 
<android.webkit.GeolocationPermissions: android.webkit.GeolocationPermissions getInstance()> 
<org.apache.http.auth.NTCredentials: java.lang.String getDomain()> 
<android.media.AudioTrack: int getNativeFrameCount()> 
<java.lang.reflect.Proxy: java.lang.Class getProxyClass(java.lang.ClassLoader,java.lang.Class[])> 
<libcore.net.http.HttpsURLConnectionImpl: libcore.net.http.HttpEngine getHttpEngine()> 
<org.apache.harmony.security.x509.InhibitAnyPolicy: byte[] getEncoded()> 
<android.view.Display: int getLayerStack()> 
<java.lang.ThreadGroup: int getMaxPriority()> 
<android.net.http.AndroidHttpClientConnection: java.net.InetAddress getLocalAddress()> 
<java.lang.StackTraceElement: java.lang.String getClassName()> 
<android.bluetooth.BluetoothInputDevice: int getPriority(android.bluetooth.BluetoothDevice)> 
<org.jivesoftware.smack.provider.ProviderManager: org.jivesoftware.smack.provider.ProviderManager getDefault()> 
<android.webkit.Plugin: java.lang.String getDescription()> 
<java.nio.HeapByteBuffer: void get(long[],int,int)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: java.net.InetAddress getLocalAddress()> 
<libcore.icu.NativeDecimalFormat: java.lang.String getPositivePrefix()> 
<android.widget.CursorTreeAdapter: android.database.Cursor getCursor()> 
<java.util.Properties: void load(java.io.InputStream)> 
<android.widget.HorizontalScrollView: int getScrollRange()> 
<org.apache.xml.dtm.ref.DTMDefaultBase: int getNodeIdent(int)> 
<gov.nist.javax.sip.header.Reason: int getCause()> 
<android.widget.SuggestionsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> 
<android.graphics.Movie: android.graphics.Movie decodeTempStream(java.io.InputStream)> 
<android.test.mock.MockPackageManager: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int)> 
<gov.nist.javax.sip.address.TelURLImpl: java.lang.String getPostDial()> 
<android.media.videoeditor.TransitionAlpha: int getBlendingPercent()> 
<android.animation.ObjectAnimator: java.lang.String getPropertyName()> 
<org.apache.xalan.templates.ElemIf: org.apache.xpath.XPath getTest()> 
<java.io.ObjectInputStream: int readUnsignedByte()> 
<android.webkit.WebViewClassic: android.webkit.WebSettings getSettings()> 
<org.apache.harmony.xml.dom.AttrImpl: short getNodeType()> 
<android.filterpacks.performance.Throughput: int getPeriodFrameCount()> 
<android.net.rtp.RtpStream: java.net.InetAddress getRemoteAddress()> 
<android.os.PerformanceCollector: android.os.Bundle getAllocCounts()> 
<android.content.pm.PackageParser: android.content.pm.PackageParser$PermissionGroup parsePermissionGroup(android.content.pm.PackageParser$Package,int,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,java.lang.String[])> 
<android.app.ActivityManager: java.util.List getRunningTasks(int)> 
<android.webkit.WebSettings: boolean getPluginsEnabled()> 
<gov.nist.javax.sip.parser.DateParser: gov.nist.javax.sip.header.SIPHeader parse()> 
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.Intent)> 
<android.support.v4.widget.CursorAdapter: android.widget.FilterQueryProvider getFilterQueryProvider()> 
<android.content.pm.VerifierDeviceIdentity: long decodeBase32(byte[])> 
<android.content.SyncStorageEngine: int getIntColumn(android.database.Cursor,java.lang.String)> 
<android.widget.TextView: int getImeActionId()> 
<java.sql.DriverManager: java.sql.Connection getConnection(java.lang.String,java.lang.String,java.lang.String)> 
<android.text.style.AbsoluteSizeSpan: int getSize()> 
<android.net.WebAddress: int getPort()> 
<android.telephony.SignalStrength: int getCdmaLevel()> 
<android.widget.ActivityChooserView: android.widget.ListPopupWindow getListPopupWindow()> 
<android.view.InputDevice: int getKeyboardType()> 
<org.apache.xalan.templates.Stylesheet: int getStripSpaceCount()> 
<android.bluetooth.BluetoothDevice: boolean getTrustState()> 
<android.support.v4.app.Fragment: java.lang.String getString(int)> 
<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.AudioTrack getAudioTrack(java.lang.String)> 
<org.apache.harmony.xml.dom.EntityReferenceImpl: java.lang.String getNodeName()> 
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.Node getParentNode()> 
<junit.framework.TestSuite: java.lang.String getName()> 
<java.util.concurrent.ForkJoinPool: long getQueuedTaskCount()> 
<org.apache.harmony.xml.dom.ElementImpl: org.w3c.dom.TypeInfo getSchemaTypeInfo()> 
<android.content.SyncStorageEngine: java.util.ArrayList getSyncHistory()> 
<org.apache.xalan.templates.TemplateSubPatternAssociation: org.apache.xalan.templates.TemplateSubPatternAssociation getNext()> 
<org.apache.xalan.templates.XUnresolvedVariableSimple: int getType()> 
<org.apache.xalan.templates.OutputProperties: java.util.Vector getQNameProperties(java.lang.String)> 
<org.apache.harmony.security.provider.cert.X509CRLImpl: java.lang.String getSigAlgOID()> 
<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()> 
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)> 
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: java.net.SocketAddress getRemoteSocketAddress()> 
<android.content.ContextWrapper: java.lang.String getPackageCodePath()> 
<org.apache.harmony.security.asn1.ASN1BitString: org.apache.harmony.security.asn1.ASN1BitString getInstance()> 
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long,long,long)> 
<javax.net.ssl.HttpsURLConnection: javax.net.ssl.HostnameVerifier getHostnameVerifier()> 
<org.apache.xpath.VariableStack: int getStackFrame()> 
<org.jivesoftware.smack.packet.BatchPresence: java.util.ArrayList getPresenceStanzaList()> 
<android.text.StaticLayout: int getParagraphDirection(int)> 
<org.apache.xalan.transformer.TransformerImpl: boolean getSource_location()> 
<android.widget.AdapterView: int getLastVisiblePosition()> 
<android.database.sqlite.SQLiteGlobal: int getJournalSizeLimit()> 
<android.view.View: android.view.ContextMenu$ContextMenuInfo getContextMenuInfo()> 
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.SIPClientTransaction getForkedTransaction(java.lang.String)> 
<org.apache.xml.serializer.SecuritySupport: java.lang.ClassLoader getSystemClassLoader()> 
<org.apache.xml.dtm.ref.SecuritySupport: org.apache.xml.dtm.ref.SecuritySupport getInstance()> 
<javax.security.auth.Subject: java.util.Set getPrivateCredentials(java.lang.Class)> 
<org.xml.sax.helpers.AttributesImpl: int getLength()> 
<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 getFactory2()> 
<org.apache.harmony.security.asn1.ASN1Enumerated: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> 
<org.apache.xml.dtm.ref.DTMNodeProxy: org.apache.xml.dtm.DTM getDTM()> 
<javax.crypto.spec.RC5ParameterSpec: byte[] getIV()> 
<android.telephony.TelephonyManager: java.lang.String getVoiceMailAlphaTag()> 
<org.apache.xml.dtm.SecuritySupport12: boolean getFileExists(java.io.File)> 
<android.filterpacks.imageproc.ToRGBAFilter: android.filterfw.core.FrameFormat getConvertedFormat(android.filterfw.core.FrameFormat)> 
<android.database.CursorWrapper: int getColumnIndexOrThrow(java.lang.String)> 
<gov.nist.javax.sip.header.extensions.Replaces: java.lang.String getToTag()> 
<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getTextBeforeCursor(int,int)> 
<android.preference.Preference: java.lang.String getPersistedString(java.lang.String)> 
<java.util.concurrent.atomic.AtomicStampedReference: java.lang.Object getReference()> 
<libcore.net.http.HttpConnection: java.io.InputStream getInputStream()> 
<android.location.Address: double getLatitude()> 
<android.filterfw.GraphEnvironment: android.filterfw.io.GraphReader getGraphReader()> 
<android.app.LoadedApk: android.content.res.Resources getResources(android.app.ActivityThread)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl: java.lang.String[] getSupportedCipherSuites()> 
<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Collection getDialogs()> 
<android.webkit.WebSettingsClassic: boolean getPluginsEnabled()> 
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentDispositionHeader getContentDisposition()> 
<gov.nist.javax.sip.header.CSeq: java.lang.String getMethod()> 
<org.apache.harmony.security.pkcs7.AuthenticatedAttributes: java.util.List getAttributes()> 
<org.jivesoftware.smack.packet.Packet: org.jivesoftware.smack.packet.PacketExtension getExtension(java.lang.String,java.lang.String)> 
<android.view.ViewStub: android.view.LayoutInflater getLayoutInflater()> 
<android.net.NetworkStatsHistory: android.net.NetworkStatsHistory$Entry getValues(long,long,android.net.NetworkStatsHistory$Entry)> 
<org.apache.harmony.security.fortress.Engine: org.apache.harmony.security.fortress.Engine$SpiAndProvider getInstance(java.lang.String,java.lang.Object)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: int getPort()> 
<android.content.pm.PackageItemInfo: android.content.pm.ApplicationInfo getApplicationInfo()> 
<gov.nist.core.LexerCore: java.lang.String getRest()> 
<android.text.Layout: int getEllipsizedWidth()> 
<android.view.Window: int getLocalFeatures()> 
<org.apache.xml.serializer.Encodings: char getHighChar(java.lang.String)> 
<android.app.admin.DevicePolicyManager: int getPasswordMinimumSymbols(android.content.ComponentName)> 
<javax.net.ssl.KeyManagerFactory: java.security.Provider getProvider()> 
<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.impl.client.RequestWrapper wrapRequest(org.apache.http.HttpRequest)> 
<org.apache.xml.dtm.DTMException: java.lang.Throwable getException()> 
<org.apache.harmony.xnet.provider.jsse.ServerSessionContext: javax.net.ssl.SSLSession getSession(byte[])> 
<gov.nist.javax.sip.header.StatusLine: java.lang.String getReasonPhrase()> 
<org.apache.xalan.templates.Stylesheet: java.lang.String getXmlnsXsl()> 
<android.content.AbstractThreadedSyncAdapter: android.content.Context getContext()> 
<java.util.logging.Handler: java.lang.String getEncoding()> 
<javax.crypto.EncryptedPrivateKeyInfo: java.lang.String getAlgName()> 
<android.graphics.drawable.GradientDrawable: int getOpacity()> 
<javax.xml.parsers.FactoryConfigurationError: java.lang.String getMessage()> 
<gov.nist.javax.sip.address.AddressImpl: int getPort()> 
<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.StylesheetRoot getStylesheetRoot()> 
<android.app.ContextImpl: java.lang.String getPackageResourcePath()> 
<gov.nist.javax.sip.parser.MimeVersionParser: gov.nist.javax.sip.header.SIPHeader parse()> 
<org.apache.xpath.VariableStack: org.apache.xpath.objects.XObject getGlobalVariable(org.apache.xpath.XPathContext,int)> 
<android.app.ActivityManagerProxy: java.util.List getRunningExternalApplications()> 
<android.view.View: int getHeight()> 
<org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol: byte[] getChangeCipherSpecMesage(org.apache.harmony.xnet.provider.jsse.SSLSessionImpl)> 
<org.apache.xml.serializer.SerializerBase: java.lang.String getPrefixPart(java.lang.String)> 
<android.net.wifi.WifiNative: java.lang.String getMacAddress()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPublicKey: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getOpenSSLKey()> 
<java.security.Policy: java.security.Policy getPolicy()> 
<android.util.DayOfMonthCursor: int getSelectedMonthOffset()> 
<android.widget.ListPopupWindow: long getSelectedItemId()> 
<javax.crypto.spec.DESedeKeySpec: byte[] getKey()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: byte[] getEncoded()> 
<org.apache.http.client.methods.HttpRequestBase: java.net.URI getURI()> 
<android.net.WebAddress: java.lang.String getScheme()> 
<net.oauth.OAuthConsumer: java.lang.Object getProperty(java.lang.String)> 
<java.lang.reflect.Proxy: java.lang.reflect.InvocationHandler getInvocationHandler(java.lang.Object)> 
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: javax.net.ssl.SSLEngineResult$Status getEngineStatus()> 
<java.net.DatagramSocket: int getReceiveBufferSize()> 
<java.util.jar.JarInputStream: java.util.jar.JarEntry getNextJarEntry()> 
<android.database.BulkCursorToCursorAdaptor: android.database.IContentObserver getObserver()> 
<android.app.WallpaperInfo: android.graphics.drawable.Drawable loadThumbnail(android.content.pm.PackageManager)> 
<org.apache.xpath.Arg: org.apache.xpath.objects.XObject getVal()> 
<android.test.mock.MockContext: android.content.res.AssetManager getAssets()> 
<android.widget.LinearLayout: int getNextLocationOffset(android.view.View)> 
<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getBeginTransition()> 
<android.net.sip.SipProfile: boolean getAutoRegistration()> 
<gov.nist.javax.sip.message.SIPMessage: java.util.List getHeaderList(java.lang.String)> 
<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()> 
<android.hardware.usb.UsbDevice: java.lang.String getDeviceName(int)> 
<android.graphics.drawable.Drawable: int getLayoutDirection()> 
<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: org.apache.http.conn.ClientConnectionManager getManager()> 
<org.apache.xalan.templates.ElemFallback: java.lang.String getNodeName()> 
<libcore.net.http.ResponseHeaders: java.util.Date getExpires()> 
<gov.nist.javax.sip.header.AuthenticationHeader: int getNonceCount()> 
<org.apache.http.conn.HttpHostConnectException: org.apache.http.HttpHost getHost()> 
<org.apache.xml.utils.SAXSourceLocator: int getColumnNumber()> 
<gov.nist.javax.sip.stack.SIPDialog: java.lang.Object getApplicationData()> 
<org.apache.xpath.XPathContext: org.apache.xpath.axes.SubContextList getSubContextList()> 
<org.apache.james.mime4j.field.ContentTypeField: java.lang.String getBoundary()> 
<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.Transition parseTransition(org.xmlpull.v1.XmlPullParser,java.util.List)> 
<org.apache.xml.utils.UnImplNode: org.w3c.dom.DocumentType getDoctype()> 
<org.apache.harmony.xml.dom.ElementImpl: org.w3c.dom.Element getElementById(java.lang.String)> 
<org.apache.http.impl.AbstractHttpServerConnection: org.apache.http.HttpRequestFactory createHttpRequestFactory()> 
<android.app.WallpaperInfo: java.lang.String getPackageName()> 
<android.widget.GridLayout: int getDefaultMargin(android.view.View,android.widget.GridLayout$LayoutParams,boolean,boolean)> 
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)> 
<android.webkit.DeviceOrientationService: android.hardware.SensorManager getSensorManager()> 
<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String getNamespace()> 
<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.stack.SIPDialog getDefaultDialog()> 
<javax.security.auth.Subject: java.util.Set getPrincipals(java.lang.Class)> 
<android.net.TrafficStats: android.net.INetworkStatsService getStatsService()> 
<org.apache.xml.dtm.ref.ExtendedType: int getNodeType()> 
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)> 
<org.apache.http.params.BasicHttpParams: java.util.Set getNames()> 
<org.apache.xalan.transformer.TransformerIdentityImpl: java.util.Properties getOutputProperties()> 
<android.renderscript.Path: android.renderscript.Allocation getVertexAllocation()> 
<android.test.mock.MockResources: java.lang.CharSequence getQuantityText(int,int)> 
<java.util.concurrent.atomic.AtomicBoolean: boolean get()> 
<gov.nist.javax.sip.header.Contact: float getQValue()> 
<android.os.storage.StorageManager: android.os.storage.StorageVolume getPrimaryVolume(android.os.storage.StorageVolume[])> 
<org.apache.xml.utils.StringToIntTable: int get(java.lang.String)> 
<android.media.videoeditor.Effect: long getStartTime()> 
<android.app.ApplicationLoaders: android.app.ApplicationLoaders getDefault()> 
<java.util.logging.XMLFormatter: java.lang.String getTail(java.util.logging.Handler)> 
<org.apache.harmony.xml.dom.InnerNodeImpl: org.w3c.dom.Node getLastChild()> 
<android.net.TrafficStats: long getTxPackets(java.lang.String)> 
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: boolean getWantClientAuth()> 
<org.jivesoftware.smack.PacketReader: org.jivesoftware.smack.packet.IQ parseIQ(com.google.common.io.protocol.ProtoBuf)> 
<org.jivesoftware.smack.packet.StreamError: java.lang.String getCode()> 
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.MessageProcessor[] getMessageProcessors()> 
<libcore.icu.NativeBreakIterator: libcore.icu.NativeBreakIterator getWordInstance(java.util.Locale)> 
<org.apache.xml.serializer.TreeWalker: org.xml.sax.ContentHandler getContentHandler()> 
<org.apache.xpath.XPathContext: org.xml.sax.XMLReader getPrimaryReader()> 
<android.graphics.drawable.ColorDrawable: int getColor()> 
<java.net.Authenticator: java.lang.String getRequestingHost()> 
<java.net.HttpRetryException: java.lang.String getReason()> 
<org.apache.harmony.security.asn1.BerOutputStream: void getSetLength(org.apache.harmony.security.asn1.ASN1Set)> 
<android.view.accessibility.AccessibilityEvent: java.lang.CharSequence getPackageName()> 
<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$ConstantState getConstantState()> 
<org.apache.james.mime4j.BodyDescriptor: java.lang.String getBoundary()> 
<java.net.URI: java.lang.String getAuthority()> 
<android.view.View: int getLayerType()> 
<java.util.EnumMap: java.lang.Object get(java.lang.Object)> 
<org.apache.xml.dtm.DTMManager: int getDTMIdentityMask()> 
<gov.nist.javax.sip.DialogFilter: java.lang.String getProcessingInfo()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getNextAttribute(int)> 
<org.apache.http.impl.AbstractHttpServerConnection: org.apache.http.HttpConnectionMetrics getMetrics()> 
<org.jivesoftware.smack.packet.BatchPresence: org.jivesoftware.smack.packet.BatchPresence$Type getType()> 
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getBaseURI()> 
<org.apache.harmony.xnet.provider.jsse.PinListEntry: java.lang.String getFingerprint(java.security.cert.X509Certificate)> 
<java.nio.MappedByteBufferAdapter: java.nio.ByteBuffer get(byte[],int,int)> 
<android.view.ViewGroup: int getChildDrawingOrder(int,int)> 
<android.view.textservice.SpellCheckerInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)> 
<android.hardware.display.DisplayManager: android.hardware.display.WifiDisplayStatus getWifiDisplayStatus()> 
<java.net.URL: java.lang.String getAuthority()> 
<org.apache.harmony.luni.lang.reflect.ImplForWildcard: java.lang.reflect.Type[] getUpperBounds()> 
<org.apache.xml.serializer.dom3.LSSerializerImpl: java.lang.Object getParameter(java.lang.String)> 
<android.filterfw.core.Filter: android.filterfw.core.InputPort getInputPort(java.lang.String)> 
<android.app.Activity: android.app.Application getApplication()> 
<java.security.MessageDigest: java.security.Provider getProvider()> 
<android.media.AudioService: int getRemoteStreamMaxVolume()> 
<android.content.ContextWrapper: android.graphics.drawable.Drawable getWallpaper()> 
<java.nio.FloatToByteBufferAdapter: float get()> 
<libcore.net.http.RequestHeaders: java.lang.String getContentType()> 
<libcore.net.http.HttpURLConnectionImpl: java.lang.String getResponseMessage()> 
<org.apache.harmony.security.provider.crypto.DSAPrivateKeyImpl: java.math.BigInteger getX()> 
<android.media.videoeditor.VideoEditorImpl: int getAspectRatio()> 
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()> 
<android.widget.Scroller: double getSplineFlingDistance(float)> 
<android.view.accessibility.AccessibilityRecord: int getScrollY()> 
<android.view.accessibility.AccessibilityRecord: int getScrollX()> 
<java.security.KeyStore: java.security.Provider getProvider()> 
<libcore.io.ForwardingOs: int getegid()> 
<java.io.RandomAccessFile: long readLong()> 
<android.drm.DrmEvent: java.lang.String getMessage()> 
<android.sax.RootElement: org.xml.sax.ContentHandler getContentHandler()> 
<android.nfc.tech.NfcV: byte getDsfId()> 
<org.apache.harmony.security.provider.cert.X509CertImpl: byte[] getEncoded()> 
<libcore.io.IoBridge: java.lang.Object getSocketOptionErrno(java.io.FileDescriptor,int)> 
<android.widget.ZoomButtonsController: android.view.ViewGroup getContainer()> 
<android.test.AndroidTestRunner: junit.framework.TestResult getTestResult()> 
<org.apache.http.impl.conn.DefaultClientConnection: org.apache.http.HttpHost getTargetHost()> 
<android.app.LoadedApk: java.io.File getDataDirFile()> 
<android.service.dreams.DreamService: android.view.WindowManager getWindowManager()> 
<org.apache.xalan.templates.ElemCallTemplate: int getXSLToken()> 
<org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate)> 
<org.apache.http.impl.client.DefaultProxyAuthenticationHandler: java.util.List getAuthPreferences(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)> 
<android.nfc.tech.IsoDep: byte[] getHistoricalBytes()> 
<org.jivesoftware.smack.packet.RosterPacket: java.lang.Boolean getNotModified()> 
<android.app.Fragment: java.lang.String getString(int)> 
<gov.nist.javax.sip.header.Contact: java.lang.String getPubGruuParam()> 
<android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs: java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo)> 
<android.net.rtp.RtpStream: int getMode()> 
<android.app.LoadedApk: java.lang.String getPackageName()> 
<android.database.AbstractWindowedCursor: java.lang.String getString(int)> 
<org.apache.harmony.xml.dom.TextImpl: short getNodeType()> 
<android.widget.AbsListView: long[] getCheckedItemIds()> 
<org.apache.xml.serializer.ToHTMLStream: boolean getSpecialEscapeURLs()> 
<android.support.v4.view.MotionEventCompatEclair: int getPointerId(android.view.MotionEvent,int)> 
<org.apache.harmony.security.provider.crypto.RandomBitsSupplier: byte[] getRandomBits(int)> 
<org.apache.commons.io.input.ProxyInputStream: int read()> 
<android.telephony.SignalStrength: int getEvdoLevel()> 
<android.graphics.Interpolator: int getValueCount()> 
<android.support.v4.view.accessibility.AccessibilityEventCompatIcs: java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int)> 
<android.test.mock.MockContext: java.lang.ClassLoader getClassLoader()> 
<java.util.concurrent.LinkedBlockingDeque: java.lang.Object getLast()> 
<android.filterfw.core.NativeFrame: android.graphics.Bitmap getBitmap()> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: int getElementById(java.lang.String)> 
<javax.net.ssl.SSLParameters: boolean getWantClientAuth()> 
<jp.co.omronsoft.openwnn.TextCandidates1LineViewManager: jp.co.omronsoft.openwnn.WnnWord getWnnWord(int)> 
<javax.net.ssl.KeyManagerFactory: java.lang.String getAlgorithm()> 
<java.util.zip.Inflater: long getBytesWritten()> 
<android.app.LoaderManagerImpl: android.content.Loader initLoader(int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks)> 
<java.util.Currency: java.lang.String getSymbol(java.util.Locale)> 
<org.apache.xalan.templates.ElemNumber: int getLevel()> 
<android.test.mock.MockResources: java.lang.String getQuantityString(int,int,java.lang.Object[])> 
<android.media.AudioService: int getStreamMaxVolume(int)> 
<org.apache.http.impl.cookie.BrowserCompatSpec: org.apache.http.Header getVersionHeader()> 
<org.jivesoftware.smack.util.Cache: long getMaxLifetime()> 
<org.apache.harmony.security.x509.Validity: java.util.Date getNotAfter()> 
<android.widget.SimpleAdapter: android.widget.Filter getFilter()> 
<android.view.textservice.SpellCheckerSession: com.android.internal.textservice.ISpellCheckerSessionListener getSpellCheckerSessionListener()> 
<java.text.ParsePosition: int getIndex()> 
<android.net.http.Headers: java.lang.String getEtag()> 
<org.apache.harmony.security.x509.AuthorityKeyIdentifier: java.math.BigInteger getAuthorityCertSerialNumber()> 
<java.lang.SecurityManager: int classLoaderDepth()> 
<org.apache.xpath.jaxp.JAXPPrefixResolver: java.lang.String getBaseIdentifier()> 
<android.media.videoeditor.MediaVideoItem: long getDuration()> 
<org.xmlpull.v1.sax2.Driver: int getIndex(java.lang.String)> 
<org.apache.harmony.security.asn1.ASN1Enumerated: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)> 
<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseTypeArgument()> 
<android.app.SearchManager: android.content.ComponentName getGlobalSearchActivity()> 
<android.app.FragmentBreadCrumbs: android.app.FragmentManager$BackStackEntry getPreEntry(int)> 
<android.widget.AppSecurityPermissions: android.widget.AppSecurityPermissions$PermissionItemView getPermissionItemView(android.content.Context,android.view.LayoutInflater,android.widget.AppSecurityPermissions$MyPermissionGroupInfo,android.widget.AppSecurityPermissions$MyPermissionInfo,boolean,java.lang.CharSequence)> 
<android.os.Environment: java.io.File getDirectory(java.lang.String,java.lang.String)> 
<android.os.WorkSource: int get(int)> 
<org.apache.xalan.templates.DecimalFormatProperties: char getGroupingSeparator()> 
<android.net.LocalSocket: android.net.LocalSocketAddress getRemoteSocketAddress()> 
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)> 
<android.view.ViewConfiguration: long getZoomControlsTimeout()> 
<android.support.v4.view.AccessibilityDelegateCompat: android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)> 
<android.app.WallpaperInfo: java.lang.CharSequence loadAuthor(android.content.pm.PackageManager)> 
<android.view.View: float getRotationX()> 
<android.view.View: float getRotationY()> 
<org.apache.james.mime4j.MimeBoundaryInputStream: int read()> 
<org.apache.http.message.BasicHeaderValueParser: org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor,char[])> 
<org.apache.xalan.processor.StylesheetHandler: boolean getIncremental()> 
<gov.nist.javax.sip.SipStackImpl: gov.nist.javax.sip.clientauthutils.AuthenticationHelper getAuthenticationHelper(gov.nist.javax.sip.clientauthutils.AccountManager,javax.sip.header.HeaderFactory)> 
<org.apache.harmony.xml.ExpatAttributes: java.lang.String getValue(java.lang.String)> 
<android.view.MotionEvent: float getTouchMajor(int)> 
<org.apache.xpath.axes.WalkingIterator: org.apache.xpath.Expression getExpression()> 
<java.security.BasicPermission: java.lang.String getActions()> 
<android.preference.TwoStatePreference: boolean getDisableDependentsState()> 
<android.text.style.CharacterStyle: android.text.style.CharacterStyle getUnderlying()> 
<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: org.apache.james.mime4j.field.contenttype.parser.Token getToken(int)> 
<org.apache.xalan.processor.WhitespaceInfoPaths: java.util.Vector getElements()> 
<org.apache.xml.serializer.ElemDesc: int getFlags()> 
<org.apache.xml.dtm.ref.ExpandedNameTable: org.apache.xml.dtm.ref.ExtendedType[] getExtendedTypes()> 
<android.widget.ExpandableListConnector: java.lang.Object getItem(int)> 
<java.nio.ShortArrayBuffer: java.nio.ShortBuffer get(short[],int,int)> 
<android.media.videoeditor.Transition: android.media.videoeditor.MediaArtistNativeHelper$TransitionSettings getTransitionSettings()> 
<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getNextSiblingElem()> 
<gov.nist.javax.sip.header.RequestLine: java.lang.String getVersionMajor()> 
<gov.nist.javax.sip.stack.SIPServerTransaction: int getViaPort()> 
<android.media.audiofx.Equalizer: int[] getBandFreqRange(short)> 
<org.apache.http.impl.cookie.CookieSpecBase: java.lang.String getDefaultDomain(org.apache.http.cookie.CookieOrigin)> 
<android.preference.GenericInflater: android.content.Context getContext()> 
<android.view.ViewGroup: android.view.animation.LayoutAnimationController getLayoutAnimation()> 
<java.net.Socket: java.net.InetAddress getLocalAddress()> 
<org.apache.http.impl.cookie.BestMatchSpec: org.apache.http.impl.cookie.BrowserCompatSpec getCompat()> 
<java.io.ObjectInputStream: int read(byte[],int,int)> 
<android.preference.PreferenceManager: long getNextId()> 
<android.widget.TextView: int getImeOptions()> 
<android.widget.Switch: int getCompoundPaddingRight()> 
<android.app.backup.BackupAgentHelper: android.app.backup.BackupHelperDispatcher getDispatcher()> 
<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.Document getOwnerDocument()> 
<java.io.ObjectStreamField: java.lang.Class getType()> 
<org.apache.xml.utils.DOMHelper: org.w3c.dom.Node getRootNode(org.w3c.dom.Node)> 
<android.view.Window: android.content.Context getContext()> 
<android.telephony.gsm.GsmCellLocation: int getCid()> 
<android.app.SearchManager: android.database.Cursor getSuggestions(android.app.SearchableInfo,java.lang.String,int)> 
<android.telephony.PhoneNumberUtils: java.lang.String getStrippedReversed(java.lang.String)> 
<java.net.URI: java.lang.String getRawAuthority()> 
<javax.xml.validation.ValidatorHandler: boolean getFeature(java.lang.String)> 
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getClassName()> 
<android.app.Activity: int getTitleColor()> 
<android.widget.AbsListView: int getListPaddingBottom()> 
<android.view.ViewRootImpl: android.graphics.drawable.Drawable getAccessibilityFocusedDrawable()> 
<gov.nist.core.StringTokenizer: java.lang.String getSDPFieldName(java.lang.String)> 
<gov.nist.javax.sip.header.ContentType: java.lang.String getContentType()> 
<libcore.net.http.HttpURLConnectionImpl: java.lang.String getHeaderField(java.lang.String)> 
<gov.nist.javax.sip.parser.RecordRouteParser: gov.nist.javax.sip.header.SIPHeader parse()> 
<gov.nist.javax.sip.header.Warning: java.lang.String getText()> 
<android.app.LoadedApk: void initializeJavaContextClassLoader()> 
<org.apache.xalan.xslt.SecuritySupport: java.lang.ClassLoader getSystemClassLoader()> 
<org.jivesoftware.smackx.provider.MUCUserProvider: org.jivesoftware.smackx.packet.MUCUser$Item parseItem(org.xmlpull.v1.XmlPullParser)> 
<org.apache.xml.serializer.ToUnknownStream: java.lang.String getNamespaceURIFromPrefix(java.lang.String)> 
<java.beans.PropertyChangeEvent: java.lang.Object getOldValue()> 
<android.media.ExifInterface: int getAttributeInt(java.lang.String,int)> 
<android.media.RingtoneManager: android.database.Cursor getMediaRingtones()> 
<org.apache.james.mime4j.field.address.parser.SimpleCharStream: int getTabSize(int)> 
<org.apache.xml.utils.SecuritySupport12: java.lang.String getSystemProperty(java.lang.String)> 
<java.lang.Enum: java.lang.Class getDeclaringClass()> 
<android.net.NetworkStats: android.net.NetworkStats$Entry getTotal(android.net.NetworkStats$Entry)> 
<java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)> 
<android.view.View: float getHorizontalScrollFactor()> 
<android.renderscript.Matrix3f: void loadTranslate(float,float)> 
<org.apache.xml.dtm.ref.ExpandedNameTable: java.lang.String getLocalName(int)> 
<org.apache.harmony.xnet.provider.jsse.AbstractSessionContext: java.util.Enumeration getIds()> 
<org.apache.harmony.security.x509.GeneralSubtrees: java.util.List getSubtrees()> 
<android.media.videoeditor.MediaArtistNativeHelper: android.graphics.Bitmap getPixels(java.lang.String,int,int,long,int)> 
<android.location.LocationRequest: long getFastestInterval()> 
<gov.nist.javax.sip.stack.TLSMessageChannel: java.lang.String getPeerProtocol()> 
<android.media.MediaCodecInfo: java.lang.String[] getSupportedTypes()> 
<android.animation.KeyframeSet: java.lang.Object getValue(float)> 
<org.apache.xpath.objects.XObject: int getType()> 
<org.apache.xml.utils.DOMHelper: org.w3c.dom.Element getElementByID(java.lang.String,org.w3c.dom.Document)> 
<org.apache.harmony.security.provider.cert.X509CRLImpl: java.lang.String getSigAlgName()> 
<java.security.spec.ECFieldFp: java.math.BigInteger getP()> 
<android.os.Environment: java.lang.String getExternalStorageState()> 
<org.apache.xpath.axes.NodeSequence: int getAxis()> 
<android.telephony.TelephonyManager: java.lang.String getSimCountryIso()> 
<org.apache.harmony.security.x509.Validity: java.util.Date getNotBefore()> 
<android.media.videoeditor.AudioTrack: java.lang.String getAudioWaveformFilename()> 
<android.app.BackStackRecord: int getBreadCrumbTitleRes()> 
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()> 
<android.preference.PreferenceGroupAdapter: int getViewTypeCount()> 
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: java.lang.CharSequence getBeforeText(java.lang.Object)> 
<gov.nist.javax.sip.parser.AcceptEncodingParser: gov.nist.javax.sip.header.SIPHeader parse()> 
<android.database.AbstractCursor: java.lang.Object getUpdatedField(int)> 
<android.view.View: float getTopFadingEdgeStrength()> 
<android.text.SpannableStringBuilder: float getTextRunAdvances(int,int,int,int,int,float[],int,android.graphics.Paint)> 
<java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)> 
<android.nfc.tech.MifareClassic: int getMaxTransceiveLength()> 
<org.apache.harmony.xml.ExpatAttributes: java.lang.String getType(int)> 
<org.apache.harmony.security.provider.cert.X509CertImpl: java.util.Collection getIssuerAlternativeNames()> 
<java.util.Locale: java.lang.String getISO3Country()> 
<android.graphics.Bitmap: int[] getLayoutBounds()> 
<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: org.apache.http.HttpEntity getEntity()> 
<org.apache.harmony.xnet.provider.jsse.NativeCrypto: java.lang.String[] getDefaultCipherSuites()> 
<android.renderscript.Allocation: android.renderscript.Element getElement()> 
<android.os.StatFs: int getAvailableBlocks()> 
<org.apache.xml.utils.URI: java.lang.String getPath()> 
<android.net.wifi.WifiApConfigStore: void loadApConfiguration()> 
<android.support.v4.content.CursorLoader: java.lang.String[] getProjection()> 
<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.BlockingQueue getQueue()> 
<org.apache.xalan.templates.ElemTemplateElement: int getLength()> 
<java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String)> 
<android.content.BroadcastReceiver: int getResultCode()> 
<android.os.Environment: java.io.File getDataDirectory()> 
<android.bluetooth.BluetoothSocket: int getSecurityFlags()> 
<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.ErrorListener getErrorListener()> 
<android.media.ExifInterface: boolean getLatLong(float[])> 
<android.view.View: int getWindowSystemUiVisibility()> 
<android.text.util.Rfc822Token: java.lang.String getComment()> 
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getDescription()> 
<java.security.cert.X509CRLSelector: java.util.Collection getIssuers()> 
<android.preference.PreferenceGroupAdapter: int getItemViewType(int)> 
<android.filterpacks.imageproc.SharpenFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<gov.nist.javax.sip.parser.EventParser: gov.nist.javax.sip.header.SIPHeader parse()> 
<org.jivesoftware.smack.GoogleExtensions: boolean getSupportExtendedContactAttribute()> 
<android.telephony.CellBroadcastMessage: int getSerialNumber()> 
<android.content.res.Resources: java.lang.String getResourceTypeName(int)> 
<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()> 
<android.view.FocusFinder: android.view.View getPreviousFocusable(android.view.View,java.util.ArrayList,int)> 
<android.webkit.WebViewClassic: float getTextScrollSpeed(int,int,int)> 
<org.apache.xalan.templates.ElemTextLiteral: boolean getPreserveSpace()> 
<java.util.concurrent.ForkJoinPool: int getActiveThreadCount()> 
<jp.co.omronsoft.openwnn.EN.OpenWnnEngineEN: jp.co.omronsoft.openwnn.WnnWord[] getUserDictionaryWords()> 
<org.apache.xalan.templates.OutputProperties: org.apache.xml.utils.QName getQNameProperty(org.apache.xml.utils.QName)> 
<android.media.audiofx.AudioEffect: boolean getEnabled()> 
<org.apache.http.impl.client.DefaultRequestDirector: boolean createTunnelToTarget(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext)> 
<android.database.sqlite.SQLiteDatabase: long getMaximumSize()> 
<java.text.DateFormat: java.text.DateFormat getDateInstance(int)> 
<android.gesture.GestureLibrary: int getOrientationStyle()> 
<gov.nist.javax.sip.header.ims.SecurityAgree: int getPortServer()> 
<org.jivesoftware.smack.util.Cache: java.lang.Object get(java.lang.Object)> 
<android.bluetooth.BluetoothHeadset: java.util.List getConnectedDevices()> 
<org.apache.xalan.xslt.SecuritySupport: java.lang.ClassLoader getContextClassLoader()> 
<android.hardware.usb.UsbInterface: int getInterfaceProtocol()> 
<javax.microedition.khronos.egl.EGLContext: javax.microedition.khronos.egl.EGL getEGL()> 
<org.apache.xalan.templates.ElemExtensionCall: java.lang.String getAttribute(java.lang.String,org.w3c.dom.Node,org.apache.xalan.transformer.TransformerImpl)> 
<java.nio.LongArrayBuffer: long get()> 
<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.impl.client.RoutedRequest handleResponse(org.apache.http.impl.client.RoutedRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)> 
<org.apache.xalan.xslt.SecuritySupport: boolean getFileExists(java.io.File)> 
<android.telephony.SmsMessage: java.lang.String getDisplayOriginatingAddress()> 
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: java.lang.String[] getSupportedCipherSuites()> 
<javax.net.ssl.SSLParameters: boolean getNeedClientAuth()> 
<java.security.cert.PKIXBuilderParameters: int getMaxPathLength()> 
<java.nio.ShortArrayBuffer: short get()> 
<org.ccil.cowan.tagsoup.Parser: org.xml.sax.DTDHandler getDTDHandler()> 
<android.view.ViewGroup: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)> 
<android.view.animation.AnimationSet: java.util.List getAnimations()> 
<android.test.mock.MockContext: java.io.File getDir(java.lang.String,int)> 
<java.net.InetAddress: java.net.InetAddress getLocalHost()> 
<java.lang.SecurityManager: boolean inClassLoader()> 
<org.apache.harmony.xml.dom.EntityImpl: short getNodeType()> 
<java.io.RandomAccessFile: boolean readBoolean()> 
<android.widget.SimpleAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)> 
<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerInfo[] getEnabledSpellCheckers()> 
<android.net.Proxy: org.apache.http.conn.routing.HttpRoutePlanner getAndroidProxySelectorRoutePlanner(android.content.Context)> 
<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTElementProcessor getElementProcessor()> 
<java.text.DateFormatSymbols: java.lang.String[] getEras()> 
<android.support.v4.app.LoaderManagerImpl: android.support.v4.content.Loader getLoader(int)> 
<android.content.BroadcastReceiver: android.os.Bundle getResultExtras(boolean)> 
<android.content.SyncStorageEngine: long getLongColumn(android.database.Cursor,java.lang.String)> 
<android.filterfw.core.VertexFrame: android.graphics.Bitmap getBitmap()> 
<android.content.ClipboardManager: android.content.IClipboard getService()> 
<org.jivesoftware.smackx.provider.MUCUserProvider: org.jivesoftware.smack.packet.PacketExtension parseExtension(com.google.common.io.protocol.ProtoBuf)> 
<android.speech.tts.TextToSpeech: java.util.Set getFeatures(java.util.Locale)> 
<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()> 
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: java.lang.String readDnsName(java.io.DataInputStream)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLKey: int getPkeyContext()> 
<java.text.Collator: java.text.Collator getInstance(java.util.Locale)> 
<jp.co.omronsoft.openwnn.OpenWnnDictionaryImpl: jp.co.omronsoft.openwnn.WnnPOS getPOS(int)> 
<android.webkit.WebViewClassic: android.graphics.Bitmap getFavicon()> 
<org.apache.harmony.security.fortress.Services: java.security.Provider[] getProviders()> 
<org.apache.http.message.BufferedHeader: int getValuePos()> 
<org.apache.xalan.templates.ElemTemplateElement: java.util.Vector getPrefixes()> 
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()> 
<android.text.method.MetaKeyKeyListener: int getActive(java.lang.CharSequence,java.lang.Object,int,int)> 
<android.net.Proxy: java.lang.String getHost(android.content.Context)> 
<android.content.res.Resources: android.content.res.Configuration getConfiguration()> 
<android.webkit.DeviceOrientationService: void getOrientationUsingGetRotationMatrix()> 
<org.apache.xml.dtm.ref.DTMDefaultBase: int getTypedAttribute(int,int)> 
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.CharSequence getClassName(java.lang.Object)> 
<android.speech.srec.Recognizer: java.lang.String getResult(int,java.lang.String)> 
<android.renderscript.AllocationAdapter: int getID(android.renderscript.RenderScript)> 
<android.graphics.Paint: android.graphics.Shader getShader()> 
<android.speech.srec.Recognizer: java.lang.String[] getResultKeys(int)> 
<org.jivesoftware.smack.PacketWriter: long getLastActive()> 
<org.jivesoftware.smack.packet.DataMessage: java.util.Iterator getAppDataIterator()> 
<android.text.SpannableString: int getSpanFlags(java.lang.Object)> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: org.xml.sax.EntityResolver getEntityResolver()> 
<android.net.wifi.WifiStateMachine: int getFrequencyBand()> 
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: int getRemovedCount(java.lang.Object)> 
<android.filterfw.core.NativeFrame: int getCapacity()> 
<org.apache.harmony.xml.ExpatAttributes: java.lang.String getType(java.lang.String,java.lang.String)> 
<org.apache.http.impl.client.DefaultUserTokenHandler: java.security.Principal getAuthPrincipal(org.apache.http.auth.AuthState)> 
<org.apache.james.mime4j.field.address.parser.SimpleCharStream: int getBeginLine()> 
<android.hardware.LegacySensorManager: int getSensors()> 
<android.test.ComparisonFailure: java.lang.String getMessage()> 
<android.content.ContextWrapper: android.view.CompatibilityInfoHolder getCompatibilityInfo(int)> 
<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getProxyHost()> 
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(android.content.Context,long)> 
<android.telephony.TelephonyManager: int getNetworkType()> 
<android.drm.DrmManagerClient: int getDrmObjectType(java.lang.String,java.lang.String)> 
<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getBranchId()> 
<android.webkit.PluginManager: android.webkit.PluginManager getInstance(android.content.Context)> 
<android.text.BoringLayout: int getLineStart(int)> 
<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.Collection getQueuedReaderThreads()> 
<org.apache.james.mime4j.BodyDescriptor: java.lang.String getCharset()> 
<java.security.Security: java.security.Provider[] getProviders(java.util.Map)> 
<org.apache.xpath.CachedXPathAPI: org.apache.xpath.XPathContext getXPathContext()> 
<java.text.BreakIterator: long getLong(byte[],int)> 
<android.app.DownloadManager: java.lang.String getMimeTypeForDownloadedFile(long)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: int getPkeyContext()> 
<android.support.v4.view.accessibility.AccessibilityRecordCompat: java.lang.CharSequence getClassName()> 
<gov.nist.javax.sip.header.ExtensionHeaderImpl: java.lang.String getHeaderValue()> 
<org.apache.http.impl.conn.AbstractClientConnAdapter: org.apache.http.HttpConnectionMetrics getMetrics()> 
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: javax.net.ssl.X509TrustManager getDefaultTrustManager()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: boolean getUseClientMode()> 
<android.net.ConnectivityManager: java.lang.String[] getTetherableBluetoothRegexs()> 
<android.telephony.CellInfoGsm: android.telephony.CellSignalStrengthGsm getCellSignalStrength()> 
<org.apache.james.mime4j.field.ContentTypeField: java.lang.String getCharset(org.apache.james.mime4j.field.ContentTypeField)> 
<android.nfc.NfcManager: android.nfc.NfcAdapter getDefaultAdapter()> 
<android.media.videoeditor.MediaVideoItem: int getVideoBitrate()> 
<android.hardware.input.KeyboardLayout: java.lang.String getDescriptor()> 
<android.view.View: float getVerticalScrollFactor()> 
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int getTransactionId()> 
<org.apache.xml.serializer.ToXMLSAXHandler: java.io.Writer getWriter()> 
<android.preference.MultiSelectListPreference: java.util.Set getValues()> 
<android.net.Uri: java.util.List getQueryParameters(java.lang.String)> 
<java.io.DataInputStream: int read(byte[],int,int)> 
<org.apache.http.conn.params.ConnManagerParams: org.apache.http.conn.params.ConnPerRoute getMaxConnectionsPerRoute(org.apache.http.params.HttpParams)> 
<android.webkit.AccessibilityInjectorFallback: int getDirectionForAction(int)> 
<org.apache.xml.utils.UnImplNode: java.lang.String getAttributeNS(java.lang.String,java.lang.String)> 
<java.lang.Class: java.lang.String getName()> 
<android.view.View: int getBottomPaddingOffset()> 
<javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)> 
<android.content.ContentResolver: android.content.SyncInfo getCurrentSync()> 
<dalvik.system.profiler.BinaryHprofReader: boolean parseRecord()> 
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: int getItemCount(java.lang.Object)> 
<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ContactList getContactHeaders()> 
<android.view.View: int getMinimumHeight()> 
<android.filterpacks.imageproc.RedEyeFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<net.oauth.signature.RSA_SHA1: java.security.PrivateKey getPrivateKeyFromDer(byte[])> 
<org.jivesoftware.smackx.packet.VCard: com.google.common.io.protocol.ProtoBuf getExtensionProtoBuf()> 
<org.apache.xalan.transformer.TransformerIdentityImpl: java.lang.String getSystemId()> 
<android.net.LocalSocket: java.io.OutputStream getOutputStream()> 
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getTagName()> 
<org.jivesoftware.smackx.GroupChatInvitation: java.lang.String getElementName()> 
<android.telephony.CellIdentityLte: int getTac()> 
<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node getNextSibling()> 
<gov.nist.javax.sip.stack.SIPClientTransaction: java.lang.String getViaHost()> 
<org.apache.xpath.compiler.OpMap: int getFirstPredicateOpPos(int)> 
<org.apache.xalan.processor.XSLTElementProcessor: org.apache.xalan.processor.XSLTElementDef getElemDef()> 
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: org.apache.harmony.xnet.provider.jsse.CipherSuite[] getEnabledCipherSuitesMember()> 
<android.webkit.WebViewClassic: void loadViewState(java.io.InputStream)> 
<android.text.method.MetaKeyKeyListener: int getMetaState(long)> 
<android.media.videoeditor.MediaArtistNativeHelper: int getSlideSettingsDirection(int)> 
<android.app.ApplicationThreadProxy: void getMemoryInfo(android.os.Debug$MemoryInfo)> 
<android.accounts.AccountManagerService: android.accounts.Account[] getAccountsAsUser(java.lang.String,int)> 
<android.view.View: android.graphics.Bitmap getDrawingCache()> 
<org.kxml2.io.KXmlParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)> 
<org.apache.xpath.functions.SecuritySupport: java.lang.ClassLoader getContextClassLoader()> 
<android.view.ScaleGestureDetector: float getPreviousSpanY()> 
<android.view.ScaleGestureDetector: float getPreviousSpanX()> 
<javax.sip.IOExceptionEvent: int getPort()> 
<java.util.IllegalFormatPrecisionException: int getPrecision()> 
<java.security.spec.ECParameterSpec: int getCofactor()> 
<android.app.Activity: android.app.Activity getParent()> 
<android.test.mock.MockResources: int getDimensionPixelSize(int)> 
<java.text.NumberFormat: java.text.NumberFormat getIntegerInstance()> 
<org.apache.xalan.templates.ElemTemplateElement: org.w3c.dom.Node getFirstChild()> 
<gov.nist.javax.sip.parser.ims.ServiceRouteParser: gov.nist.javax.sip.header.SIPHeader parse()> 
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getDrawable(java.lang.String,int,android.content.pm.ApplicationInfo)> 
<android.webkit.CallbackProxy: android.webkit.WebBackForwardListClient getWebBackForwardListClient()> 
<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.StackGuard getStackGuard()> 
<java.util.concurrent.atomic.AtomicLong: long getAndSet(long)> 
<android.webkit.WebViewClassic: void stopLoading()> 
<android.graphics.drawable.shapes.Shape: float getWidth()> 
<android.net.wifi.WifiManager: java.util.List getConfiguredNetworks()> 
<org.apache.xpath.NodeSetDTM: int getAxis()> 
<android.widget.TextView: float getLineSpacingExtra()> 
<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)> 
<java.util.concurrent.atomic.AtomicStampedReference: int getStamp()> 
<android.app.ActivityManager: com.android.internal.os.PkgUsageStats[] getAllPackageUsageStats()> 
<gov.nist.javax.sip.header.ErrorInfo: java.lang.String getErrorMessage()> 
<android.view.KeyEvent: char getMatch(char[])> 
<org.apache.xpath.axes.AxesWalker: org.apache.xpath.Expression getExpression()> 
<android.content.ContentResolver: android.content.IContentService getContentService()> 
<android.telephony.SignalStrength: int getLteSignalStrenght()> 
<org.apache.harmony.xml.dom.TextImpl: java.lang.String getWholeText()> 
<android.net.wifi.p2p.WifiP2pGroupList: java.lang.String getOwnerAddr(int)> 
<android.util.SparseArray: java.lang.Object get(int,java.lang.Object)> 
<android.util.TimeUtils: java.lang.String getTimeZoneDatabaseVersion()> 
<android.webkit.CookieManager: java.lang.String getCookie(java.lang.String,boolean)> 
<android.filterfw.core.SimpleFrame: java.lang.Object getObjectValue()> 
<android.widget.AutoCompleteTextView: android.widget.AdapterView$OnItemClickListener getItemClickListener()> 
<android.view.ViewConfiguration: int getScaledEdgeSlop()> 
<android.hardware.usb.UsbAccessory: java.lang.String getManufacturer()> 
<android.graphics.BitmapFactory: android.graphics.Bitmap finishDecode(android.graphics.Bitmap,android.graphics.Rect,android.graphics.BitmapFactory$Options)> 
<org.apache.xml.utils.StylesheetPIHandler: javax.xml.transform.Source getAssociatedStylesheet()> 
<gov.nist.javax.sip.header.ProxyRequire: java.lang.String getOptionTag()> 
<android.app.admin.DevicePolicyManager: boolean getCameraDisabled(android.content.ComponentName,int)> 
<android.support.v4.widget.ScrollerCompat: int getDuration()> 
<java.util.GregorianCalendar: int getMaximum(int)> 
<org.jivesoftware.smack.packet.BatchPresence: java.util.Iterator getPresenceStanzaIterator()> 
<org.apache.xml.serializer.utils.URI: java.lang.String getPath()> 
<libcore.net.http.HttpsURLConnectionImpl: boolean getDoOutput()> 
<android.net.BaseNetworkStateTracker: android.net.NetworkInfo getNetworkInfo()> 
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.protocol.HttpRequestExecutor getRequestExecutor()> 
<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)> 
<android.app.admin.DeviceAdminInfo: java.util.ArrayList getUsedPolicies()> 
<android.location.GeocoderParams: java.util.Locale getLocale()> 
<javax.crypto.KeyAgreement: java.security.Provider getProvider()> 
<dalvik.system.VMRuntime: long getMinimumHeapSize()> 
<android.preference.Preference: java.lang.StringBuilder getFilterableStringBuilder()> 
<android.media.effect.FilterEffect: android.filterfw.core.FilterContext getFilterContext()> 
<android.graphics.drawable.NinePatchDrawable: android.graphics.Insets getLayoutInsets()> 
<org.apache.harmony.security.x509.X509PublicKey: java.lang.String getAlgorithm()> 
<android.view.ScaleGestureDetector: float getCurrentSpanX()> 
<android.view.ScaleGestureDetector: float getCurrentSpanY()> 
<android.net.SSLCertificateSocketFactory: javax.net.SocketFactory getDefault(int)> 
<android.widget.RemoteViewsAdapter: long getItemId(int)> 
<android.test.mock.MockPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)> 
<org.apache.xml.utils.UnImplNode: org.w3c.dom.Element getDocumentElement()> 
<android.bluetooth.BluetoothAdapter: android.bluetooth.IBluetooth getBluetoothService(android.bluetooth.IBluetoothManagerCallback)> 
<org.apache.http.conn.params.ConnPerRouteBean: int getMaxForRoute(org.apache.http.conn.routing.HttpRoute)> 
<gov.nist.javax.sip.header.AlertInfo: javax.sip.address.URI getAlertInfo()> 
<org.apache.xml.dtm.ref.DTMNamedNodeMap: org.w3c.dom.Node getNamedItem(java.lang.String)> 
<java.text.DecimalFormat: int getMinimumFractionDigits()> 
<android.view.ViewStub: int getLayoutResource()> 
<gov.nist.javax.sip.ListeningPointImpl: java.lang.String getKey()> 
<android.database.CursorWrapper: android.os.Bundle getExtras()> 
<android.widget.ScrollView: float getBottomFadingEdgeStrength()> 
<org.apache.commons.io.FilenameUtils: java.lang.String getName(java.lang.String)> 
<android.filterfw.io.GraphReader: android.filterfw.core.FilterGraph readGraphResource(android.content.Context,int)> 
<android.mtp.MtpObjectInfo: int getThumbFormat()> 
<android.app.SearchManager: android.content.Intent getAssistIntent(android.content.Context)> 
<android.view.View: int getTextDirection()> 
<java.lang.System: java.lang.SecurityManager getSecurityManager()> 
<android.app.BackStackRecord: int getTransition()> 
<android.filterpacks.videoproc.BackDropperFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize)> 
<android.database.CursorWindow: double getDouble(int,int)> 
<junit.runner.ReloadingTestSuiteLoader: java.lang.Class load(java.lang.String)> 
<org.jivesoftware.smackx.ServiceDiscoveryManager: org.jivesoftware.smackx.ServiceDiscoveryManager getInstanceFor(org.jivesoftware.smack.XMPPConnection)> 
<java.util.concurrent.atomic.AtomicInteger: int get()> 
<android.net.http.AndroidHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()> 
<android.graphics.drawable.AnimationDrawable: int getNumberOfFrames()> 
<org.jivesoftware.smack.packet.Authentication: java.lang.String getPassword()> 
<android.renderscript.Path: android.renderscript.Path$Primitive getPrimitive()> 
<android.widget.ListView: int getBottomSelectionPixel(int,int,int)> 
<java.net.JarURLConnection: java.lang.String getEntryName()> 
<android.media.videoeditor.AudioTrack: android.media.videoeditor.WaveformData getWaveformData()> 
<org.apache.xalan.templates.DecimalFormatProperties: char getPerMille()> 
<android.net.http.SslCertificate: java.util.Date getValidNotAfterDate()> 
<android.widget.TwoLineListItem: android.widget.TextView getText2()> 
<org.apache.harmony.xnet.provider.jsse.ClientSessionContext: javax.net.ssl.SSLSession getSession(java.lang.String,int)> 
<android.widget.TwoLineListItem: android.widget.TextView getText1()> 
<java.net.URLConnection: boolean getDoOutput()> 
<android.text.Layout: float getDesiredWidth(java.lang.CharSequence,android.text.TextPaint)> 
<android.test.mock.MockCursor: byte[] getBlob(int)> 
<org.apache.xalan.templates.ElemTemplateElement: org.w3c.dom.Node getNextSibling()> 
<org.apache.harmony.security.x509.TBSCertList: java.util.Date getNextUpdate()> 
<android.net.ConnectivityManager: android.net.ProxyProperties getGlobalProxy()> 
<libcore.icu.ICU: java.util.Locale[] getAvailableCollatorLocales()> 
<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getQName(int)> 
<android.accounts.AccountAuthenticatorCache: android.content.pm.RegisteredServicesCache$ServiceInfo getServiceInfo(android.accounts.AuthenticatorDescription,int)> 
<gov.nist.javax.sip.address.TelURLImpl: java.lang.String getParameter(java.lang.String)> 
<org.apache.harmony.security.x509.DNParser: char getEscaped()> 
<javax.net.ssl.HttpsURLConnection: java.security.Principal getPeerPrincipal()> 
<org.apache.xml.utils.SecuritySupport12: java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader)> 
<android.app.DownloadManager: java.lang.Long getRecommendedMaxBytesOverMobile(android.content.Context)> 
<android.content.pm.ApplicationInfo: android.graphics.drawable.Drawable loadDefaultIcon(android.content.pm.PackageManager)> 
<org.apache.http.impl.conn.tsccm.BasicPoolEntry: long getUpdated()> 
<android.preference.SeekBarPreference: int getProgress()> 
<android.webkit.ZoomManager: float getMaxZoomScale()> 
<org.xml.sax.helpers.AttributesImpl: java.lang.String getLocalName(int)> 
<android.net.LocalSocketAddress: android.net.LocalSocketAddress$Namespace getNamespace()> 
<android.net.http.AndroidHttpClient: org.apache.http.entity.AbstractHttpEntity getCompressedEntity(byte[],android.content.ContentResolver)> 
<android.graphics.drawable.DrawableContainer: boolean getPadding(android.graphics.Rect)> 
<android.telephony.SmsCbCmasInfo: int getSeverity()> 
<org.apache.http.HttpHost: java.net.InetAddress getAddress()> 
<gov.nist.javax.sip.header.Via: java.lang.String getHost()> 
<java.net.URI: java.lang.String getFragment()> 
<android.bluetooth.BluetoothDevice: java.lang.String getAliasName()> 
<android.app.Activity: int getChangingConfigurations()> 
<org.apache.xalan.templates.ElemTemplateElement: org.w3c.dom.NodeList getChildNodes()> 
<org.apache.xalan.extensions.ExtensionHandler: java.lang.Class getClassForName(java.lang.String)> 
<java.net.HttpCookie: java.lang.String getComment()> 
<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getOutAnimation()> 
<android.webkit.JniUtil: java.lang.String getDatabaseDirectory()> 
<android.telephony.ServiceState: int getState()> 
<org.apache.xml.utils.UnImplNode: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)> 
<org.apache.http.message.BasicRequestLine: java.lang.String getUri()> 
<java.io.CharArrayReader: int read()> 
<android.media.MediaFile: int getFileTypeForMimeType(java.lang.String)> 
<android.content.res.Resources: float getDimension(int)> 
<java.text.BreakIterator: java.text.BreakIterator getCharacterInstance(java.util.Locale)> 
<gov.nist.core.DuplicateNameValueList: java.util.Collection getNameValue(java.lang.String)> 
<android.test.TestRunner: java.lang.String[] getChildren(java.lang.reflect.Method)> 
<org.ccil.cowan.tagsoup.Parser: boolean getFeature(java.lang.String)> 
<java.util.Currency: java.lang.String getSymbol()> 
<android.drm.mobile1.DrmRawContent: java.lang.String getRightsAddress()> 
<gov.nist.javax.sip.message.ListMap: gov.nist.javax.sip.header.SIPHeaderList getList(gov.nist.javax.sip.header.SIPHeader)> 
<android.net.sip.SipProfile: javax.sip.address.Address getSipAddress()> 
<android.telephony.SmsMessage: byte[] getPdu()> 
<android.view.View: int getDrawingCacheBackgroundColor()> 
<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getPublicId()> 
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getAttribute(java.lang.String)> 
<android.mtp.MtpObjectInfo: int getThumbPixHeight()> 
<android.widget.AutoCompleteTextView: int getDropDownWidth()> 
<gov.nist.javax.sip.parser.URLParser: gov.nist.javax.sip.address.TelephoneNumber parseTelephoneNumber(boolean)> 
<android.view.textservice.SpellCheckerSubtype: java.lang.String getExtraValueOf(java.lang.String)> 
<gov.nist.javax.sip.header.ims.PAssociatedURI: javax.sip.address.URI getAssociatedURI()> 
<gov.nist.javax.sip.header.extensions.MinSE: int getExpires()> 
<android.telephony.PhoneNumberUtils: java.lang.String getUsernameFromUriNumber(java.lang.String)> 
<org.apache.xml.dtm.ref.DTMNodeIterator: int getWhatToShow()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: org.xml.sax.ext.DeclHandler getDeclHandler()> 
<org.apache.harmony.security.provider.cert.X509CertImpl: byte[] getEncodedInternal()> 
<android.os.CommonTimeConfig: long getMasterElectionGroupId()> 
<java.text.NumberFormat: java.text.NumberFormat getCurrencyInstance(java.util.Locale)> 
<android.test.ServiceTestCase: android.content.Context getSystemContext()> 
<org.apache.xpath.patterns.StepPattern: java.lang.String getTargetString()> 
<android.media.Metadata: boolean getBoolean(int)> 
<android.filterpacks.imageproc.ToPackedGrayFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<android.support.v4.net.ConnectivityManagerCompat: android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent)> 
<android.media.AudioRecord: int getSampleRate()> 
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean)> 
<java.text.DateFormatSymbols: java.lang.String[][] getZoneStrings()> 
<android.test.suitebuilder.TestMethod: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)> 
<org.apache.xml.dtm.ref.NodeLocator: int getColumnNumber()> 
<org.apache.james.mime4j.util.CharsetUtil: java.nio.charset.Charset getCharset(java.lang.String)> 
<android.media.MediaRouter: int getCategoryCount()> 
<android.text.Layout: float getLineWidth(int)> 
<org.apache.xml.dtm.ref.DTMDefaultBase: int getFirstNamespaceNode(int,boolean)> 
<android.telephony.SmsMessage: java.lang.String getEmailFrom()> 
<org.apache.http.cookie.CookieSpecRegistry: java.util.List getSpecNames()> 
<org.apache.xalan.templates.TemplateSubPatternAssociation: org.apache.xalan.templates.ElemTemplate getTemplate()> 
<android.app.ContextImpl: android.content.res.Resources$Theme getTheme()> 
<android.webkit.CookieManagerClassic: java.lang.String getCookie(java.lang.String)> 
<java.io.ObjectInputStream: java.lang.String readLine()> 
<android.renderscript.Mesh: android.renderscript.Allocation getIndexSetAllocation(int)> 
<android.view.View: int getPaddingStart()> 
<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.TransformerFactoryImpl getStylesheetProcessor()> 
<android.view.ViewGroup: android.animation.LayoutTransition getLayoutTransition()> 
<android.os.UserManager: android.content.pm.UserInfo getUserInfo(int)> 
<android.view.DragEvent: android.content.ClipData getClipData()> 
<java.io.File: java.io.File getParentFile()> 
<android.os.storage.StorageManager: int getNextNonce()> 
<org.apache.xml.serializer.utils.Messages: java.lang.String getResourceSuffix(java.util.Locale)> 
<android.webkit.GeolocationPermissionsClassic: android.webkit.GeolocationPermissionsClassic getInstance()> 
<org.apache.xalan.templates.StylesheetRoot: boolean getSource_location()> 
<android.gesture.Learner: java.util.ArrayList getInstances()> 
<java.net.HttpCookie: java.lang.String getPortlist()> 
<java.util.IllegalFormatWidthException: java.lang.String getMessage()> 
<org.kxml2.io.KXmlParser: java.lang.String readUntil(char[],boolean)> 
<gov.nist.javax.sip.header.CallID: gov.nist.javax.sip.header.CallIdentifier getCallIdentifer()> 
<java.lang.Class: java.lang.reflect.Method getEnclosingMethod()> 
<android.mtp.MtpDevice: android.mtp.MtpStorageInfo getStorageInfo(int)> 
<android.view.MotionEvent: long getHistoricalEventTime(int)> 
<org.apache.xml.utils.NamespaceSupport2: java.util.Enumeration getPrefixes(java.lang.String)> 
<org.apache.xalan.templates.ElemTemplateElement: org.w3c.dom.Document getOwnerDocument()> 
<libcore.net.http.HttpEngine: java.lang.String getOriginAddress(java.net.URL)> 
<android.bluetooth.BluetoothHeadset: int getAudioState(android.bluetooth.BluetoothDevice)> 
<android.hardware.usb.UsbManager: java.util.HashMap getDeviceList()> 
<android.media.MediaFormat: long getLong(java.lang.String)> 
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])> 
<android.filterfw.core.FilterFactory: android.filterfw.core.Filter createFilterByClassName(java.lang.String,java.lang.String)> 
<android.net.SSLCertificateSocketFactory: javax.net.ssl.SSLSocketFactory getDelegate()> 
<org.xml.sax.helpers.XMLFilterImpl: org.xml.sax.ErrorHandler getErrorHandler()> 
<org.jivesoftware.smackx.packet.VCard: java.lang.String getPhoneWork(java.lang.String)> 
<android.view.HardwareLayer: android.view.DisplayList getDisplayList()> 
<java.lang.VMClassLoader: java.util.List getResources(java.lang.String)> 
<gov.nist.javax.sip.header.Via: java.lang.String getBranch()> 
<android.os.Bundle: long getLong(java.lang.String)> 
<org.apache.harmony.security.x509.tsp.TimeStampReq: int getVersion()> 
<java.util.concurrent.Phaser: java.util.concurrent.Phaser getRoot()> 
<android.net.ConnectivityManager: java.lang.String getNetworkTypeName(int)> 
<android.widget.SearchView: java.lang.String getActionKeyMessage(android.database.Cursor,android.app.SearchableInfo$ActionKeyInfo)> 
<org.apache.xalan.templates.OutputProperties: int getIntProperty(java.lang.String)> 
<android.renderscript.FileA3D: android.renderscript.FileA3D$IndexEntry getIndexEntry(int)> 
<java.text.Annotation: java.lang.Object getValue()> 
<android.webkit.WebViewClassic: android.content.Context getContext()> 
<android.server.search.Searchables: java.util.ArrayList getSearchablesList()> 
<android.app.ApplicationPackageManager: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int)> 
<android.hardware.usb.UsbRequest: android.hardware.usb.UsbEndpoint getEndpoint()> 
<android.drm.mobile1.DrmRightsManager: java.util.List getRightsList()> 
<org.apache.http.impl.cookie.CookieSpecBase: java.lang.String getDefaultPath(org.apache.http.cookie.CookieOrigin)> 
<gov.nist.javax.sip.parser.ims.PathParser: gov.nist.javax.sip.header.SIPHeader parse()> 
<android.app.Activity: android.content.Intent getIntent()> 
<org.jivesoftware.smack.packet.Packet: org.jivesoftware.smack.packet.XMPPError getError()> 
<android.os.Bundle: int getInt(java.lang.String,int)> 
<gov.nist.javax.sip.SipProviderImpl: javax.sip.Dialog getNewDialog(javax.sip.Transaction)> 
<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()> 
<java.util.jar.JarFile: java.util.jar.Manifest getManifest()> 
<android.os.Debug: java.lang.String getCallers(int)> 
<org.apache.harmony.xml.dom.DOMConfigurationImpl: org.w3c.dom.DOMStringList getParameterNames()> 
<org.apache.harmony.xml.dom.DOMErrorImpl: short getSeverity()> 
<android.net.InterfaceConfiguration: java.lang.Iterable getFlags()> 
<android.text.style.BackgroundColorSpan: int getBackgroundColor()> 
<android.filterfw.core.InputPort: java.lang.Object getTarget()> 
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.ServerRequestInterface newSIPServerRequest(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.MessageChannel)> 
<org.apache.harmony.luni.lang.reflect.Types: java.lang.reflect.Type getType(java.lang.reflect.Type)> 
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getNodeValue()> 
<android.media.videoeditor.MediaImageItem: void getThumbnailList(int,int,long,long,int,int[],android.media.videoeditor.MediaItem$GetThumbnailListCallback)> 
<org.apache.xml.dtm.ref.DTMDefaultBase: int getFirstAttributeIdentity(int)> 
<android.view.View: int getPaddingEnd()> 
<java.util.concurrent.ForkJoinTask: int getQueuedTaskCount()> 
<org.apache.xpath.axes.ReverseAxesWalker: int getProximityPosition(int)> 
<java.net.NetworkInterface: java.net.NetworkInterface getByInetAddress(java.net.InetAddress)> 
<org.apache.harmony.security.x509.SubjectKeyIdentifier: byte[] getKeyIdentifier()> 
<android.widget.EditText: boolean getDefaultEditable()> 
<android.widget.Editor: android.text.method.WordIterator getWordIterator()> 
<org.apache.http.impl.io.AbstractSessionInputBuffer: int read(byte[])> 
<java.util.concurrent.ThreadPoolExecutor: int getLargestPoolSize()> 
<gov.nist.javax.sip.header.ParametersHeader: float getParameterAsFloat(java.lang.String)> 
<org.apache.harmony.dalvik.ddmc.ChunkHandler: java.lang.String getString(java.nio.ByteBuffer,int)> 
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: int getVersion()> 
<java.nio.IntToByteBufferAdapter: int get(int)> 
<org.apache.http.entity.EntityTemplate: long getContentLength()> 
<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()> 
<org.apache.james.mime4j.field.datetime.parser.DateTimeParserTokenManager: org.apache.james.mime4j.field.datetime.parser.Token getNextToken()> 
<android.inputmethodservice.Keyboard: int getKeyWidth()> 
<java.lang.ClassLoader: java.net.URL getSystemResource(java.lang.String)> 
<java.net.SocketImpl: java.io.FileDescriptor getFileDescriptor()> 
<android.bluetooth.BluetoothInputDevice: boolean getProtocolMode(android.bluetooth.BluetoothDevice)> 
<android.media.AudioManager: int getMasterMaxVolume()> 
<android.support.v4.net.TrafficStatsCompatIcs: int getThreadStatsTag()> 
<android.app.ApplicationPackageManager: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity()> 
<org.apache.http.auth.NTUserPrincipal: java.lang.String getUsername()> 
<android.view.accessibility.AccessibilityNodeInfo: int getWindowId()> 
<android.test.mock.MockContext: java.io.File getDatabasePath(java.lang.String)> 
<org.apache.xml.dtm.ref.SecuritySupport12: boolean getFileExists(java.io.File)> 
<org.apache.xalan.processor.XSLTAttributeDef: int getEnum(java.lang.String)> 
<org.apache.harmony.security.provider.cert.X509CertImpl: int getVersion()> 
<android.view.Display: int getWidth()> 
<javax.xml.parsers.SAXParser: javax.xml.validation.Schema getSchema()> 
<org.apache.xml.utils.res.XResources_zh_CN: java.lang.Object[][] getContents()> 
<android.opengl.GLSurfaceView: boolean getPreserveEGLContextOnPause()> 
<org.jivesoftware.smack.provider.ProviderManager: java.lang.Object getExtensionProvider(java.lang.String,java.lang.String)> 
<android.webkit.WebViewCore: boolean jsUnload(java.lang.String,java.lang.String)> 
<java.net.DatagramPacket: byte[] getData()> 
<org.apache.xpath.axes.FilterExprIterator: int getNextNode()> 
<android.telephony.TelephonyManager: java.lang.String getDeviceId()> 
<jp.co.omronsoft.openwnn.Keyboard: int getKeyWidth()> 
<android.graphics.Bitmap: int getDensity()> 
<android.filterfw.core.FilterContext: android.filterfw.core.GLEnvironment getGLEnvironment()> 
<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)> 
<org.kxml2.io.KXmlParser: java.lang.String getPositionDescription()> 
<org.apache.xpath.functions.SecuritySupport: java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader)> 
<android.app.LoadedApk: java.lang.String getDataDir()> 
<android.widget.GridView: int getGravity()> 
<android.net.NetworkTemplate: java.lang.String getMatchRuleName(int)> 
<android.media.videoeditor.AudioTrack: int getAudioSamplingFrequency()> 
<libcore.io.ForwardingOs: int pread(java.io.FileDescriptor,byte[],int,int,long)> 
<java.util.Date: int getTimezoneOffset()> 
<java.util.prefs.PreferenceChangeEvent: java.lang.String getKey()> 
<android.nfc.tech.NfcV: byte getResponseFlags()> 
<java.security.cert.CertPathValidatorException: int getIndex()> 
<gov.nist.javax.sip.stack.MessageProcessor: java.net.InetAddress getIpAddress()> 
<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter()> 
<android.content.pm.LabeledIntent: int getIconResource()> 
<android.speech.tts.TtsEngines: java.lang.String getV1Locale()> 
<java.util.concurrent.atomic.AtomicBoolean: boolean getAndSet(boolean)> 
<android.database.CursorWindow: short getShort(int,int)> 
<android.net.NetworkIdentity: int getSubType()> 
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()> 
<android.support.v4.view.PagerTitleStrip: int getTextSpacing()> 
<android.app.ContextImpl: java.io.File getCacheDir()> 
<android.renderscript.Element: int getSubElementArraySize(int)> 
<android.location.Criteria: int getBearingAccuracy()> 
<android.support.v4.app.TaskStackBuilder: android.content.Intent getIntent(int)> 
<gov.nist.javax.sip.message.SIPResponse: java.lang.String getDialogId(boolean)> 
<android.support.v4.widget.CursorAdapter: long getItemId(int)> 
<org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)> 
<java.net.Socket: java.io.OutputStream getOutputStream()> 
<android.widget.CalendarView: int getFocusedMonthDateColor()> 
<android.server.search.SearchManagerService: android.content.ComponentName getGlobalSearchActivity()> 
<org.apache.xalan.transformer.CountersTable: java.util.Vector getCounters(org.apache.xalan.templates.ElemNumber)> 
<android.media.audiofx.AudioEffect: int getParameter(int,short[])> 
<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: java.lang.String getCI3GPP2()> 
<java.io.ObjectStreamField: java.lang.String getTypeString()> 
<android.content.Intent: android.content.Intent getIntent(java.lang.String)> 
<android.view.accessibility.AccessibilityNodeInfo: long getParentNodeId()> 
<android.widget.PopupWindow: int getWidth()> 
<android.view.VolumePanel: int getStreamMaxVolume(int)> 
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])> 
<android.net.http.AndroidHttpClientConnection: int getSocketTimeout()> 
<java.util.concurrent.ForkJoinTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)> 
<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.ClassLoader getLowestClassLoader(java.lang.ClassLoader,java.lang.ClassLoader)> 
<java.io.PipedInputStream: int read()> 
<android.telephony.CellSignalStrengthGsm: int getLevel()> 
<java.io.DataInputStream: char readChar()> 
<jp.co.omronsoft.openwnn.JAJP.OpenWnnEngineJAJP: jp.co.omronsoft.openwnn.WnnWord getNextCandidate()> 
<org.apache.harmony.xnet.provider.jsse.DefaultSSLContextImpl: javax.net.ssl.KeyManager[] getKeyManagers()> 
<android.view.ViewRootImpl: android.view.accessibility.AccessibilityNodeInfo getAccessibilityFocusedVirtualView()> 
<android.hardware.Camera: android.hardware.Camera$Parameters getEmptyParameters()> 
<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.message.MultipartMimeContent getMultipartMimeContent()> 
<android.media.AudioManager: java.lang.String getParameters(java.lang.String)> 
<android.os.StatFs: int getFreeBlocks()> 
<android.animation.AnimatorSet: long getStartDelay()> 
<org.apache.xalan.templates.ElemAttribute: int getXSLToken()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.lang.Object getValue(java.lang.String)> 
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: boolean getNeedClientAuth()> 
<android.os.UEventObserver: android.os.UEventObserver$UEventThread getThread()> 
<org.jivesoftware.smack.sasl.SASLAnonymous: java.lang.String getName()> 
<android.bluetooth.BluetoothInputDevice: boolean getReport(android.bluetooth.BluetoothDevice,byte,byte,int)> 
<android.webkit.WebResourceResponse: java.lang.String getEncoding()> 
<java.lang.reflect.Field: long getLong(java.lang.Object)> 
<android.text.SpannableString: java.lang.Object[] getSpans(int,int,java.lang.Class)> 
<android.telephony.SmsCbMessage: int getMessageFormat()> 
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getAllButWhitespaceLegal()> 
<android.filterfw.GraphEnvironment: int loadGraph(android.content.Context,int)> 
<android.view.View: float getBottomFadingEdgeStrength()> 
<android.test.IsolatedContext: java.lang.Object getSystemService(java.lang.String)> 
<org.apache.xpath.jaxp.XPathImpl: javax.xml.xpath.XPathFunctionResolver getXPathFunctionResolver()> 
<java.io.FilterInputStream: int read(byte[],int,int)> 
<android.support.v4.app.ShareCompat: android.content.ComponentName getCallingActivity(android.app.Activity)> 
<android.os.Debug: java.lang.String[] getVmFeatureList()> 
<android.webkit.WebSettings: java.lang.String getCursiveFontFamily()> 
<android.security.KeyChain: java.security.cert.X509Certificate[] getCertificateChain(android.content.Context,java.lang.String)> 
<android.widget.ExpandableListView: int getFlatPositionForConnector(int)> 
<org.apache.xalan.templates.ElemLiteralResult: java.lang.String getNamespace()> 
<android.widget.TextView: int getTotalPaddingTop()> 
<org.jivesoftware.smack.packet.Message: boolean getNoSave()> 
<org.apache.xml.dtm.ref.DTMNodeIterator: org.w3c.dom.traversal.NodeFilter getFilter()> 
<java.util.jar.JarVerifier: java.security.cert.Certificate[] getCertificates(java.lang.String)> 
<gov.nist.javax.sip.stack.TCPMessageChannel: java.lang.String getTransport()> 
<org.apache.xpath.XPathContext: int getCurrentExpressionNode()> 
<java.security.Security: java.security.Provider[] getProviders(java.lang.String)> 
<org.jivesoftware.smackx.packet.DiscoverItems: java.lang.String getChildElementXML()> 
<org.apache.xalan.templates.ElemTemplateElement: short getNodeType()> 
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.Node getLastChild()> 
<android.animation.LayoutTransition: long getStartDelay(int)> 
<android.view.MotionEvent: float getHistoricalTouchMajor(int,int)> 
<android.test.mock.MockContext: android.content.res.Resources$Theme getTheme()> 
<android.media.videoeditor.MediaArtistNativeHelper: int getAudioCodecType(int)> 
<org.apache.harmony.security.x509.AlgorithmIdentifier: java.lang.String getAlgorithmName()> 
<gov.nist.javax.sip.header.ims.PPreferredService: java.lang.String getApplicationIdentifiers()> 
<android.media.AudioSystem: int getNumStreamTypes()> 
<android.widget.Gallery: int getChildDrawingOrder(int,int)> 
<android.support.v4.view.MotionEventCompatEclair: int getPointerCount(android.view.MotionEvent)> 
<android.support.v4.widget.ScrollerCompatIcs: float getCurrVelocity(android.widget.Scroller)> 
<org.jivesoftware.smack.ConnectionConfiguration: boolean getUseProtoBuf()> 
<java.util.concurrent.atomic.AtomicLong: long get()> 
<android.view.animation.Animation: int getRepeatMode()> 
<android.support.v4.util.LruCache: java.lang.Object get(java.lang.Object)> 
<java.lang.reflect.UndeclaredThrowableException: java.lang.Throwable getUndeclaredThrowable()> 
<org.apache.xalan.res.XSLTErrorResources: java.lang.String getResourceSuffix(java.util.Locale)> 
<android.app.ContextImpl: android.content.pm.ApplicationInfo getApplicationInfo()> 
<org.apache.xml.serializer.dom3.DOMErrorImpl: java.lang.String getMessage()> 
<android.filterfw.core.InputPort: android.filterfw.core.FrameFormat getSourceFormat()> 
<android.os.Environment: java.io.File getExternalStorageAppFilesDirectory(java.lang.String)> 
<android.widget.ExpandableListConnector: long getItemId(int)> 
<android.net.wifi.p2p.WifiP2pDeviceList: java.util.Collection getDeviceList()> 
<android.hardware.display.WifiDisplay: java.lang.String getDeviceAlias()> 
<android.view.ViewConfiguration: int getScaledFadingEdgeLength()> 
<org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl: void readObject(java.io.ObjectInputStream)> 
<android.net.NetworkStatsHistory: long getLong(long[],int,long)> 
<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.Validity getValidity()> 
<android.graphics.drawable.NinePatchDrawable: int getChangingConfigurations()> 
<org.xml.sax.helpers.NewInstance: java.lang.ClassLoader getClassLoader()> 
<android.app.Fragment: android.content.res.Resources getResources()> 
<android.view.ViewRootImpl: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)> 
<android.widget.NumberPicker: int getMinValue()> 
<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)> 
<android.widget.ListView: int getDividerHeight()> 
<android.filterfw.core.Filter: int getStatus()> 
<org.apache.xalan.templates.ElemLiteralResult: int getExtensionElementPrefixCount()> 
<android.media.AudioService: int getRemoteStreamVolume()> 
<android.widget.TextView: android.text.InputFilter[] getFilters()> 
<android.content.SyncStatusInfo: int getLastFailureMesgAsInt(int)> 
<android.net.http.SslCertificate: android.net.http.SslCertificate$DName getIssuedTo()> 
<org.apache.http.params.HttpProtocolParams: java.nio.charset.CodingErrorAction getMalformedInputAction(org.apache.http.params.HttpParams)> 
<android.os.Bundle: java.lang.String getString(java.lang.String)> 
<gov.nist.javax.sip.stack.TCPMessageProcessor: int getDefaultTargetPort()> 
<android.view.View: int getImportantForAccessibility()> 
<android.webkit.WebView: int getProgress()> 
<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.message.SIPRequest createRequest(gov.nist.javax.sip.address.SipUri,gov.nist.javax.sip.header.Via,gov.nist.javax.sip.header.CSeq,gov.nist.javax.sip.header.From,gov.nist.javax.sip.header.To)> 
<org.apache.xml.serializer.utils.DOM2Helper: java.lang.String getNamespaceOfNode(org.w3c.dom.Node)> 
<android.view.View: java.lang.Object getTag()> 
<android.widget.FrameLayout: int getPaddingLeftWithForeground()> 
<java.util.GregorianCalendar: int getActualMaximum(int)> 
<java.text.Bidi: int getRunLevel(int)> 
<org.apache.xalan.templates.AVTPartSimple: java.lang.String getSimpleString()> 
<gov.nist.javax.sip.stack.SIPTransactionStack: java.lang.String getHostAddress()> 
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: long getCreationTime()> 
<android.speech.srec.Recognizer: java.lang.String getAcousticState()> 
<android.text.TextLine: int getOffsetToLeftRightOf(int,boolean)> 
<android.widget.GridLayout: int getAlignmentMode()> 
<org.jivesoftware.smack.GroupChat: java.util.Iterator getParticipants()> 
<org.apache.xml.serializer.dom3.DOMOutputImpl: java.io.OutputStream getByteStream()> 
<android.speech.tts.SynthesisRequest: java.lang.String getLanguage()> 
<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator(java.text.AttributedCharacterIterator$Attribute[],int,int)> 
<android.net.wifi.p2p.WifiP2pGroupList: int getNetworkId(java.lang.String)> 
<android.net.http.AndroidHttpClientConnection: int getLocalPort()> 
<org.apache.harmony.security.provider.cert.X509CRLImpl: java.util.Date getThisUpdate()> 
<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPRequest createACKRequest()> 
<android.test.ClassPathPackageInfoSource: android.test.ClassPathPackageInfo getPackageInfo(java.lang.String)> 
<org.apache.xml.dtm.ref.DTMDefaultBase: java.lang.String getLocalNameFromExpandedNameID(int)> 
<android.text.DynamicLayout: android.text.Layout$Directions getLineDirections(int)> 
<org.apache.xalan.Version: java.lang.String getImplementationLanguage()> 
<org.apache.xalan.transformer.TransformerImpl: boolean getQuietConflictWarnings()> 
<org.apache.xml.utils.SecuritySupport12: java.lang.ClassLoader getContextClassLoader()> 
<android.media.RingtoneManager: android.database.Cursor getInternalRingtones()> 
<android.security.KeyStore: byte[] get(byte[])> 
<android.app.ActionBar: android.content.Context getThemedContext()> 
<dalvik.system.BlockGuard: dalvik.system.BlockGuard$Policy getThreadPolicy()> 
<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.ElemTemplate getCurrentTemplate()> 
<gov.nist.javax.sip.header.SubscriptionState: java.lang.String getReasonCode()> 
<android.media.audiofx.Visualizer: int getScalingMode()> 
<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,int)> 
<android.widget.TextView: android.content.res.ColorStateList getHintTextColors()> 
<org.apache.xml.dtm.ref.DTMChildIterNodeList: int getLength()> 
<javax.net.ServerSocketFactory: javax.net.ServerSocketFactory getDefault()> 
<android.app.ContextImpl: int getThemeResId()> 
<java.security.spec.RSAOtherPrimeInfo: java.math.BigInteger getCrtCoefficient()> 
<net.oauth.client.httpclient4.HttpMethodResponse: java.util.List getHeaders()> 
<java.nio.LongBuffer: java.nio.LongBuffer get(long[])> 
<android.text.Layout: float getSpacingMultiplier()> 
<gov.nist.javax.sip.header.extensions.Replaces: gov.nist.javax.sip.header.CallIdentifier getCallIdentifer()> 
<android.support.v4.view.ViewCompat: int getImportantForAccessibility(android.view.View)> 
<android.view.MotionEvent: float getOrientation(int)> 
<android.net.Proxy: java.net.Proxy getProxy(android.content.Context,java.lang.String)> 
<android.net.http.SslCertificate: android.net.http.SslCertificate$DName getIssuedBy()> 
<android.view.ScaleGestureDetector: float getFocusX()> 
<android.view.ScaleGestureDetector: float getFocusY()> 
<org.apache.xalan.xslt.SecuritySupport12: java.lang.String getSystemProperty(java.lang.String)> 
<android.webkit.WebSettingsClassic: int getMinimumLogicalFontSize()> 
<android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat: boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo)> 
<android.filterpacks.imageproc.LomoishFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<org.apache.harmony.xml.dom.ElementImpl: org.apache.harmony.xml.dom.AttrImpl getAttributeNodeNS(java.lang.String,java.lang.String)> 
<android.content.IntentFilter: java.lang.String getDataScheme(int)> 
<org.apache.http.impl.conn.ProxySelectorRoutePlanner: java.net.ProxySelector getProxySelector()> 
<gov.nist.javax.sip.stack.SIPTransactionStack: int getSendUdpBufferSize()> 
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.MessageProcessor createMessageProcessor(java.net.InetAddress,int,java.lang.String)> 
<java.lang.ClassNotFoundException: java.lang.Throwable getException()> 
<android.support.v4.view.accessibility.AccessibilityRecordCompat: int getToIndex()> 
<android.os.StrictMode: android.os.StrictMode$VmPolicy getVmPolicy()> 
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script$KernelID getKernelIDAdd()> 
<android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)> 
<android.test.suitebuilder.TestSuiteBuilder: java.lang.String getSuiteName()> 
<android.content.Intent: java.util.ArrayList getStringArrayListExtra(java.lang.String)> 
<java.io.RandomAccessFile: int read(byte[],int,int)> 
<android.util.CharsetUtils: java.lang.String getDefaultVendor()> 
<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseTypeSignature()> 
<org.ccil.cowan.tagsoup.Parser: java.io.InputStream getInputStream(java.lang.String,java.lang.String)> 
<org.apache.harmony.security.x509.SubjectKeyIdentifier: byte[] getEncoded()> 
<android.content.res.Resources: android.content.res.XmlResourceParser loadXmlResourceParser(java.lang.String,int,int,java.lang.String)> 
<org.apache.http.message.BasicHttpResponse: org.apache.http.ProtocolVersion getProtocolVersion()> 
<android.security.AndroidKeyStore: void engineLoad(java.io.InputStream,char[])> 
<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ext.DeclHandler getInputDeclHandler()> 
<android.hardware.display.DisplayManagerGlobal: android.view.DisplayInfo getDisplayInfo(int)> 
<java.util.concurrent.ForkJoinPool: int getQueuedSubmissionCount()> 
<android.media.videoeditor.AudioTrack: int getAudioType()> 
<java.io.ObjectInputStream: char readChar()> 
<android.net.sip.SipAudioCall: int getState()> 
<android.drm.mobile1.DrmRights: android.drm.mobile1.DrmConstraintInfo getConstraint(int)> 
<org.apache.xml.utils.AttList: java.lang.String getValue(int)> 
<android.text.StaticLayout: int getBottomPadding()> 
<android.net.EthernetDataTracker: int getDefaultGatewayAddr()> 
<android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)> 
<gov.nist.javax.sip.ListeningPointImpl: java.lang.String getSentBy()> 
<android.accounts.AccountManager: java.lang.String getPassword(android.accounts.Account)> 
<android.test.mock.MockPackageManager: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)> 
<javax.crypto.Cipher: javax.crypto.Cipher getCipher(java.lang.String,java.security.Provider)> 
<android.nfc.Tag: byte[] getId()> 
<gov.nist.javax.sip.message.SIPMessage: java.util.LinkedList getMessageAsEncodedStrings()> 
<gov.nist.javax.sip.stack.MessageProcessor: java.lang.String getTransport()> 
<org.jivesoftware.smack.ConnectionConfiguration: int getPort()> 
<android.opengl.ManagedEGLContext: javax.microedition.khronos.egl.EGLContext getContext()> 
<android.animation.PropertyValuesHolder: java.lang.Object getAnimatedValue()> 
<java.security.Timestamp: java.security.cert.CertPath getSignerCertPath()> 
<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.SipProviderImpl getSipProvider()> 
<android.net.LinkAddress: int getNetworkPrefixLength()> 
<java.security.cert.CertPathValidatorException: java.security.cert.CertPath getCertPath()> 
<android.os.storage.StorageManager: android.os.storage.StorageVolume[] getVolumeList()> 
<org.apache.xalan.templates.OutputProperties: int getIntProperty(org.apache.xml.utils.QName)> 
<android.bluetooth.BluetoothPan: java.util.List getConnectedDevices()> 
<org.jivesoftware.smackx.packet.VCard: java.lang.String getField(java.lang.String)> 
<android.appwidget.AppWidgetManager: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo(int)> 
<android.support.v4.content.CursorLoader: java.lang.String getSortOrder()> 
<android.webkit.WebSettingsClassic: boolean getUseWebViewBackgroundForOverscrollBackground()> 
<android.view.View: int getFadeHeight(boolean)> 
<android.content.res.AssetManager: java.lang.CharSequence[] getResourceTextArray(int)> 
<android.preference.SwitchPreference: java.lang.CharSequence getSwitchTextOff()> 
<junit.runner.BaseTestRunner: junit.framework.Test getTest(java.lang.String)> 
<android.nfc.tech.MifareClassic: int getSize()> 
<android.support.v4.view.VelocityTrackerCompat: float getYVelocity(android.view.VelocityTracker,int)> 
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int getActions()> 
<org.apache.http.message.BufferedHeader: org.apache.http.util.CharArrayBuffer getBuffer()> 
<org.javia.arity.Function: org.javia.arity.Function getDerivative()> 
<jp.co.omronsoft.openwnn.OpenWnnDictionaryImpl: jp.co.omronsoft.openwnn.WnnWord getNextWord(int)> 
<org.apache.xalan.transformer.Counter: int getPreviouslyCounted(org.apache.xpath.XPathContext,int)> 
<android.view.ViewRootImpl: int getRootMeasureSpec(int,int)> 
<android.ddm.DdmHandleAppName: java.lang.String getAppName()> 
<java.security.spec.ECParameterSpec: java.security.spec.ECPoint getGenerator()> 
<android.app.Fragment: android.app.FragmentManager getFragmentManager()> 
<android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)> 
<gov.nist.javax.sip.address.SipUri: gov.nist.core.HostPort getHostPort()> 
<java.util.logging.Level: java.lang.String getName()> 
<gov.nist.javax.sip.header.ims.SecurityAgree: java.lang.String getEncryptionAlgorithm()> 
<java.util.concurrent.Phaser: java.util.concurrent.Phaser getParent()> 
<android.os.Bundle: long getLong(java.lang.String,long)> 
<org.apache.harmony.security.x509.tsp.TSTInfo: org.apache.harmony.security.x509.GeneralName getTsa()> 
<android.preference.Preference: android.content.Context getContext()> 
<android.webkit.WebViewClassic: int getBaseLayer()> 
<dalvik.system.profiler.BinaryHprofReader: boolean getStrict()> 
<java.nio.MappedByteBufferAdapter: char getChar(int)> 
<android.app.PendingIntent: android.os.UserHandle getCreatorUserHandle()> 
<android.view.ViewDebug: java.lang.reflect.Method[] getExportedPropertyMethods(java.lang.Class)> 
<android.os.Build: java.lang.String getRadioVersion()> 
<android.media.AudioRecord: int getAudioFormat()> 
<android.support.v4.view.ViewConfigurationCompat: int getScaledPagingTouchSlop(android.view.ViewConfiguration)> 
<org.apache.harmony.xml.dom.CDATASectionImpl: short getNodeType()> 
<android.preference.DialogPreference: java.lang.CharSequence getDialogMessage()> 
<android.net.UrlQuerySanitizer: boolean getPreferFirstRepeatedParameter()> 
<android.os.Bundle: java.lang.ClassLoader getClassLoader()> 
<javax.crypto.spec.DHPrivateKeySpec: java.math.BigInteger getX()> 
<java.lang.Package: java.lang.annotation.Annotation[] getDeclaredAnnotations()> 
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.MaxForwardsHeader getMaxForwards()> 
<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTElementDef[] getElements()> 
<android.widget.AbsListView: android.util.SparseBooleanArray getCheckedItemPositions()> 
<java.net.URLConnection: java.io.InputStream getInputStream()> 
<android.content.ContentService: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String)> 
<android.media.AudioService: int getMode()> 
<android.net.ConnectivityManager: int getNetworkPreference()> 
<android.test.ApplicationTestCase: android.content.Context getSystemContext()> 
<android.mtp.MtpDevice: long getParent(int)> 
<org.apache.harmony.security.x509.tsp.PKIFailureInfo: int getMaxValue()> 
<android.content.SyncStorageEngine: void readPendingOperationsLocked()> 
<javax.crypto.spec.DHPrivateKeySpec: java.math.BigInteger getG()> 
<libcore.io.Posix: int pread(java.io.FileDescriptor,java.nio.ByteBuffer,long)> 
<javax.crypto.spec.DHPrivateKeySpec: java.math.BigInteger getP()> 
<android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)> 
<android.webkit.HTML5VideoInline: android.graphics.SurfaceTexture getSurfaceTexture(int)> 
<android.preference.MultiCheckPreference: java.lang.CharSequence getSummary()> 
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getApplicationLogo(java.lang.String)> 
<gov.nist.javax.sip.header.StatusLine: java.lang.String getVersionMinor()> 
<java.util.concurrent.locks.AbstractQueuedSynchronizer: int getState()> 
<android.content.SyncAdapterType: boolean supportsUploading()> 
<android.filterfw.core.Filter: android.filterfw.core.FrameFormat getInputFormat(java.lang.String)> 
<android.webkit.WebViewClassic: float getDefaultZoomScale()> 
<org.apache.harmony.security.x509.tsp.TSTInfo: java.lang.Boolean getOrdering()> 
<android.view.View: int getTop()> 
<org.jivesoftware.smack.packet.Packet: java.lang.String getExtensionsXML()> 
<org.apache.harmony.xml.dom.DOMErrorImpl: java.lang.String getMessage()> 
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.SIPServerTransaction getRetransmissionAlertTransaction(java.lang.String)> 
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: int getSoLinger()> 
<java.net.DatagramSocketImpl: int getLocalPort()> 
<org.apache.xalan.templates.OutputProperties: boolean getBooleanProperty(java.lang.String)> 
<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier getHostnameVerifier()> 
<android.opengl.GLLogWrapper: java.lang.String getFaceName(int)> 
<org.apache.xml.serializer.dom3.LSSerializerImpl: java.lang.String getXMLVersion(org.w3c.dom.Node)> 
<android.widget.AbsListView: int getBottomPaddingOffset()> 
<java.nio.IntArrayBuffer: java.nio.IntBuffer get(int[],int,int)> 
<jp.co.omronsoft.openwnn.JAJP.DefaultSoftKeyboardJAJP: int getShiftKeyState(android.view.inputmethod.EditorInfo)> 
<android.support.v4.app.NavUtilsJB: java.lang.String getParentActivityName(android.content.pm.ActivityInfo)> 
<android.content.res.Resources: void getValueForDensity(int,int,android.util.TypedValue,boolean)> 
<android.webkit.WebSettings: boolean getJavaScriptEnabled()> 
<gov.nist.javax.sip.header.SIPHeaderList: java.lang.Class getMyClass()> 
<android.mtp.MtpDevice: int[] getObjectHandles(int,int,int)> 
<org.apache.xml.utils.res.XResources_zh_TW: java.lang.Object[][] getContents()> 
<java.util.logging.LogRecord: java.util.logging.Level getLevel()> 
<libcore.net.url.FtpURLConnection: java.io.InputStream getInputStream()> 
<libcore.net.http.HttpsURLConnectionImpl: java.lang.String getResponseMessage()> 
<android.gesture.GestureStroke: android.graphics.Path getPath()> 
<android.net.NetworkPolicyManager: int getUidPolicy(int)> 
<gov.nist.javax.sip.stack.SIPTransactionStack: javax.sip.address.Router getRouter()> 
<android.hardware.Sensor: java.lang.String getName()> 
<android.webkit.WebSettingsClassic: boolean getBlockNetworkImage()> 
<org.apache.xml.utils.XMLStringDefault: void getChars(int,int,char[],int)> 
<android.os.Environment: java.io.File getExternalStorageAppMediaDirectory(java.lang.String)> 
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getClassName()> 
<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)> 
<net.oauth.ConsumerProperties: java.util.Properties getProperties(java.net.URL)> 
<java.net.HttpCookie: java.lang.String getDomain()> 
<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.lang.String)> 
<android.support.v4.app.Fragment: int getTargetRequestCode()> 
<org.apache.xalan.transformer.TransformerImpl: boolean getProperty(java.lang.String)> 
<org.apache.xpath.patterns.NodeTest: org.apache.xpath.objects.XNumber getStaticScore()> 
<org.apache.xalan.xslt.SecuritySupport: org.apache.xalan.xslt.SecuritySupport getInstance()> 
<java.nio.IntArrayBuffer: int get(int)> 
<gov.nist.javax.sip.address.SipUri: java.lang.String getHeader(java.lang.String)> 
<org.apache.xalan.templates.ElemCopyOf: java.lang.String getNodeName()> 
<org.apache.xalan.templates.ElemOtherwise: java.lang.String getNodeName()> 
<net.oauth.signature.OAuthSignatureMethod: java.util.List getParameters(java.util.Collection)> 
<org.apache.xml.utils.res.XResources_ja_JP_A: java.lang.Object[][] getContents()> 
<java.security.cert.X509CRLSelector: java.math.BigInteger getMaxCRL()> 
<android.view.MotionEvent: float getHistoricalPressure(int,int)> 
<java.lang.Thread: java.lang.String getName()> 
<org.apache.harmony.lang.annotation.AnnotationFactory: org.apache.harmony.lang.annotation.AnnotationMember[] getElementsDescription(java.lang.Class)> 
<java.text.DecimalFormat: int getGroupingSize()> 
<android.util.XmlPullAttributes: int getAttributeUnsignedIntValue(int,int)> 
<android.app.Activity: int getRequestedOrientation()> 
<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getDefaultOutAnimation()> 
<javax.obex.ServerOperation: java.lang.String getEncoding()> 
<java.io.PushbackInputStream: int read()> 
<java.security.cert.PKIXCertPathBuilderResult: java.security.cert.CertPath getCertPath()> 
<android.text.SpannedString: int getSpanFlags(java.lang.Object)> 
<gov.nist.javax.sip.address.AddressImpl: java.lang.String getDisplayName()> 
<org.apache.xml.utils.res.XResources_ja_JP_I: java.lang.Object[][] getContents()> 
<android.hardware.usb.UsbDeviceConnection: java.lang.String getSerial()> 
<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getValue(java.lang.String)> 
<android.graphics.Bitmap: void getPixels(int[],int,int,int,int,int,int)> 
<android.os.PatternMatcher: java.lang.String getPath()> 
<java.io.EmulatedFields: long get(java.lang.String,long)> 
<gov.nist.javax.sip.stack.TCPMessageChannel: java.net.InetAddress getPeerPacketSourceAddress()> 
<org.apache.harmony.security.x509.GeneralName: byte[] getEncodedName()> 
<android.content.ContextWrapper: java.io.File getDir(java.lang.String,int)> 
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getPrefix()> 
<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair[] getParameters()> 
<android.app.ContextImpl: android.content.res.AssetManager getAssets()> 
<android.support.v4.view.VelocityTrackerCompat: float getXVelocity(android.view.VelocityTracker,int)> 
<android.view.TextureView: android.graphics.Bitmap getBitmap(int,int)> 
<android.support.v4.view.accessibility.AccessibilityManagerCompatIcs: java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int)> 
<libcore.icu.LocaleData: java.lang.String getTimeFormat(int)> 
<org.apache.xpath.NodeSetDTM: org.apache.xml.dtm.DTMManager getDTMManager()> 
<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputContext getInputContext()> 
<android.content.res.Resources: float getFraction(int,int,int)> 
<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getViaHost()> 
<android.nfc.NfcActivityManager: android.nfc.NfcActivityManager$NfcActivityState getActivityState(android.app.Activity)> 
<javax.sip.DialogTerminatedEvent: javax.sip.Dialog getDialog()> 
<android.hardware.display.WifiDisplay: java.lang.String getDeviceName()> 
<android.hardware.input.InputManager: java.lang.String[] getKeyboardLayoutsForInputDevice(java.lang.String)> 
<org.apache.xalan.templates.ElemLiteralResult: java.lang.String getAttribute(java.lang.String)> 
<android.animation.PropertyValuesHolder: java.lang.String getPropertyName()> 
<android.webkit.WebSettingsClassic: boolean getLoadsImagesAutomatically()> 
<org.apache.xml.serializer.AttributesImplSerializer: int getIndex(java.lang.String)> 
<android.preference.PreferenceGroup: int getPreferenceCount()> 
<android.util.XmlPullAttributes: float getAttributeFloatValue(java.lang.String,java.lang.String,float)> 
<org.apache.xml.serializer.SerializerBase: java.util.Set getOutputPropDefaultKeys()> 
<org.apache.commons.io.FilenameUtils: java.lang.String getExtension(java.lang.String)> 
<android.widget.CursorTreeAdapter: long getChildId(int,int)> 
<org.apache.xml.serializer.utils.DOM2Helper: java.lang.String getLocalNameOfNodeFallback(org.w3c.dom.Node)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPublicKey: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getOpenSSLKey()> 
<android.preference.PreferenceManager: int getSharedPreferencesMode()> 
<android.widget.TableRow: int[] getColumnsWidths(int)> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: java.lang.String getPrefix(int)> 
<android.test.mock.MockResources: java.lang.String getResourcePackageName(int)> 
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.lang.String getProtocol()> 
<android.content.Intent: java.util.ArrayList getIntegerArrayListExtra(java.lang.String)> 
<android.graphics.Canvas: android.graphics.Matrix getMatrix()> 
<org.apache.harmony.xnet.provider.jsse.HandshakeProtocol: java.lang.Runnable getTask()> 
<android.test.mock.MockPackageManager: java.lang.String[] getPackagesForUid(int)> 
<android.filterfw.core.NativeProgram: java.lang.Object getHostValue(java.lang.String)> 
<android.net.SntpClient: long getNtpTimeReference()> 
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: java.util.Collection getQueuedThreads()> 
<android.view.View: int getRawTextAlignment()> 
<android.telephony.SmsMessage: java.lang.String getPseudoSubject()> 
<android.test.TestRunner: java.lang.reflect.Method[] getAllTestMethods(java.lang.Class)> 
<libcore.net.http.RawHeaders: libcore.net.http.RawHeaders getAll(java.util.Set)> 
<android.net.http.HttpAuthHeader: java.lang.String getOpaque()> 
<android.preference.Preference: long getPersistedLong(long)> 
<android.media.MediaSyncEvent: int getType()> 
<java.text.NumberFormat: int getMinimumFractionDigits()> 
<org.apache.xml.serializer.dom3.NamespaceSupport: java.lang.String getDeclaredPrefixAt(int)> 
<org.apache.harmony.xml.dom.DocumentImpl: boolean getXmlStandalone()> 
<org.apache.xalan.templates.OutputProperties: java.util.Properties getProperties()> 
<org.xmlpull.v1.sax2.Driver: java.lang.String getQName(int)> 
<libcore.net.http.HttpResponseCache: libcore.io.DiskLruCache getCache()> 
<android.os.Bundle: float getFloat(java.lang.String)> 
<org.apache.xalan.templates.ElemLiteralResult: java.lang.String getExtensionElementPrefix(int)> 
<org.apache.harmony.security.x509.TBSCertList: org.apache.harmony.security.x501.Name getIssuer()> 
<android.support.v4.view.accessibility.AccessibilityNodeProviderCompat: java.lang.Object getProvider()> 
<android.app.ApplicationPackageManager: java.lang.String[] getPackagesForUid(int)> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getNextNamespaceNode(int,int,boolean)> 
<android.provider.Browser: android.database.Cursor getAllBookmarks(android.content.ContentResolver)> 
<android.os.Handler: android.os.IMessenger getIMessenger()> 
<java.nio.BaseByteBuffer: char getChar(int)> 
<gov.nist.javax.sip.header.ParametersHeader: java.lang.Object getMultiParameterValue(java.lang.String)> 
<gov.nist.javax.sip.stack.SIPTransactionStack: javax.sip.address.Router getRouter(gov.nist.javax.sip.message.SIPRequest)> 
<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()> 
<java.net.URLConnection: boolean getAllowUserInteraction()> 
<android.support.v4.view.accessibility.AccessibilityEventCompat: android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int)> 
<org.apache.xml.serializer.ToStream: java.util.Properties getOutputFormat()> 
<android.os.CommonClock: long getTime()> 
<android.nfc.tech.NfcA: byte[] getAtqa()> 
<org.apache.http.message.BasicHeader: java.lang.String getValue()> 
<android.app.ActivityManagerProxy: int[] getRunningUserIds()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.lang.String getPeerHost()> 
<org.apache.xml.dtm.ref.DTMAxisIterNodeList: int getLength()> 
<android.telephony.CellInfoLte: android.telephony.CellSignalStrengthLte getCellSignalStrength()> 
<android.bluetooth.BluetoothHealthAppConfiguration: int getRole()> 
<org.apache.xpath.patterns.StepPattern: int getPredicateCount()> 
<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: int getAndAdd(java.lang.Object,int)> 
<android.net.wifi.WifiInfo: int getIpAddress()> 
<gov.nist.javax.sip.parser.MaxForwardsParser: gov.nist.javax.sip.header.SIPHeader parse()> 
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getUsername()> 
<java.lang.BootClassLoader: java.util.Enumeration getResources(java.lang.String)> 
<net.oauth.signature.RSA_SHA1: java.security.PublicKey getPublicKeyFromPemCert(java.lang.String)> 
<android.app.backup.BackupDataInput: java.lang.String getKey()> 
<android.support.v4.view.ViewPager: int getOffscreenPageLimit()> 
<java.util.logging.Formatter: java.lang.String getTail(java.util.logging.Handler)> 
<org.apache.commons.io.IOUtils: java.util.List readLines(java.io.Reader)> 
<android.inputmethodservice.InputMethodService: java.lang.CharSequence getTextForImeAction(int)> 
<gov.nist.javax.sip.address.TelephoneNumber: java.lang.String getIsdnSubaddress()> 
<org.apache.xalan.transformer.XalanTransformState: org.w3c.dom.Node getCurrentNode()> 
<android.app.ApplicationPackageManager: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)> 
<android.net.sip.SipProfile: java.lang.String getAuthUserName()> 
<org.apache.harmony.security.provider.cert.X509CertImpl: java.util.Set getNonCriticalExtensionOIDs()> 
<android.webkit.WebSettingsClassic: java.lang.String getDefaultTextEncodingName()> 
<javax.xml.datatype.Duration: int getHours()> 
<javax.crypto.EncryptedPrivateKeyInfo: java.security.spec.PKCS8EncodedKeySpec getKeySpec(java.security.Key,java.security.Provider)> 
<org.apache.harmony.luni.lang.reflect.ImplForVariable: java.lang.reflect.Type[] getBounds()> 
<android.webkit.AccessibilityInjector: java.lang.String getScreenReaderInjectionUrl()> 
<android.test.mock.MockPackageManager: java.util.List getPreferredPackages(int)> 
<android.speech.srec.WaveHeader: int getNumBytes()> 
<android.text.BoringLayout: int getEllipsisCount(int)> 
<java.security.cert.X509CertSelector: java.util.Date getCertificateValid()> 
<android.service.dreams.DreamService: boolean getWindowFlagValue(int,boolean)> 
<android.hardware.usb.UsbEndpoint: int getInterval()> 
<android.graphics.Paint: void getTextPath(char[],int,int,float,float,android.graphics.Path)> 
<java.io.EmulatedFieldsForLoading: boolean get(java.lang.String,boolean)> 
<android.opengl.GLException: int getError()> 
<java.nio.ServerSocketChannelImpl: java.io.FileDescriptor getFD()> 
<gov.nist.javax.sip.DialogTimeoutEvent: gov.nist.javax.sip.DialogTimeoutEvent$Reason getReason()> 
<android.webkit.PluginList: java.util.List getList()> 
<android.nfc.tech.MifareUltralight: int getMaxTransceiveLength()> 
<android.graphics.drawable.RotateDrawable: int getIntrinsicHeight()> 
<java.util.concurrent.atomic.AtomicLongArray: long get(int)> 
<org.apache.xpath.XPathContext: java.util.Stack getContextNodeListsStack()> 
<java.util.zip.ZipEntry: long getSize()> 
<gov.nist.javax.sip.SipProviderImpl: javax.sip.ListeningPoint getListeningPoint()> 
<org.apache.xml.utils.FastStringBuffer: java.lang.StringBuffer getString(java.lang.StringBuffer,int,int)> 
<gov.nist.javax.sip.header.CallInfo: java.lang.String getPurpose()> 
<org.apache.xml.dtm.ref.DTMAxisIterNodeList: org.apache.xml.dtm.DTMAxisIterator getDTMAxisIterator()> 
<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaItem parseMediaItem(org.xmlpull.v1.XmlPullParser)> 
<android.security.KeyStore: byte[] getKeyBytes(java.lang.String)> 
<org.jivesoftware.smack.packet.Message: java.lang.String getBody()> 
<org.apache.commons.logging.LogSource: java.lang.String[] getLogNames()> 
<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(java.lang.String)> 
<java.io.ObjectInputStream: long readLong()> 
<android.media.AudioRecord: int getState()> 
<java.util.Properties: java.lang.String getProperty(java.lang.String)> 
<android.content.BroadcastReceiver: boolean getDebugUnregister()> 
<android.webkit.WebView: int getContentWidth()> 
<java.text.ChoiceFormat: java.lang.Object[] getFormats()> 
<org.apache.http.entity.StringEntity: java.io.InputStream getContent()> 
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getId()> 
<org.apache.http.impl.client.RedirectLocations: java.util.List getAll()> 
<android.media.videoeditor.Transition: long getMaximumDuration()> 
<android.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int)> 
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long)> 
<android.renderscript.RSTextureView: android.renderscript.RenderScriptGL getRenderScriptGL()> 
<android.app.Dialog: android.content.ComponentName getAssociatedActivity()> 
<jp.co.omronsoft.openwnn.TextCandidatesViewManager: android.view.View getCurrentView()> 
<android.net.ConnectivityManager: android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: java.lang.String getNodeValue(int)> 
<android.webkit.WebSettingsClassic: boolean getAllowContentAccess()> 
<junit.runner.BaseTestRunner: java.util.Properties getPreferences()> 
<android.net.wifi.p2p.WifiP2pGroupList: int getNetworkId(java.lang.String,java.lang.String)> 
<android.content.res.Resources: java.lang.String getResourceEntryName(int)> 
<javax.net.ssl.SSLEngine: javax.net.ssl.SSLParameters getSSLParameters()> 
<org.apache.xalan.templates.AVT: java.lang.String getSimpleString()> 
<org.apache.http.impl.io.IdentityInputStream: int read(byte[],int,int)> 
<org.xmlpull.v1.sax2.Driver: java.lang.String getValue(java.lang.String,java.lang.String)> 
<org.apache.http.auth.BasicUserPrincipal: java.lang.String getName()> 
<org.apache.xml.utils.ObjectPool: java.lang.Object getInstance()> 
<android.widget.RelativeLayout: int getGravity()> 
<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.Drawable getFrame(int)> 
<org.apache.harmony.xml.dom.DocumentTypeImpl: java.lang.String getSystemId()> 
<android.net.LocalSocket: java.io.FileDescriptor[] getAncillaryFileDescriptors()> 
<android.telephony.CellInfo: long getTimeStamp()> 
<android.widget.FastScroller: int getThumbPositionForListPosition(int,int,int)> 
<org.apache.http.protocol.BasicHttpProcessor: org.apache.http.HttpRequestInterceptor getRequestInterceptor(int)> 
<java.util.Locale: java.util.Locale getDefault()> 
<android.content.res.Resources: android.content.res.ColorStateList loadColorStateList(android.util.TypedValue,int)> 
<android.test.mock.MockResources: java.lang.String getQuantityString(int,int)> 
<android.view.ViewGroup: android.view.ViewGroup$TouchTarget getTouchTarget(android.view.View)> 
<android.webkit.WebSettings: boolean getUseWebViewBackgroundForOverscrollBackground()> 
<android.view.ViewGroup: android.view.animation.Animation$AnimationListener getLayoutAnimationListener()> 
<android.view.accessibility.AccessibilityEvent: int getAction()> 
<android.app.ActivityThread: android.content.res.Resources getTopLevelResources(java.lang.String,int,android.content.res.Configuration,android.content.res.CompatibilityInfo)> 
<android.support.v4.view.PagerAdapter: int getItemPosition(java.lang.Object)> 
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.protocol.BasicHttpProcessor getHttpProcessor()> 
<android.database.AbstractCursor: android.net.Uri getNotificationUri()> 
<android.webkit.HTML5VideoView: boolean getStartWhenPrepared()> 
<android.os.StrictMode: android.os.StrictMode$ThreadPolicy getThreadPolicy()> 
<org.apache.xml.utils.SystemIDResolver: java.lang.String getAbsolutePathFromRelativePath(java.lang.String)> 
<android.webkit.WebViewClassic: float computeReadingLevelScale(float)> 
<java.nio.CharBuffer: java.nio.CharBuffer get(char[],int,int)> 
<android.widget.OverScroller: int getStartX()> 
<android.widget.OverScroller: int getStartY()> 
<java.io.ByteArrayInputStream: int read()> 
<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputBinding getCurrentInputBinding()> 
<android.inputmethodservice.Keyboard: int getDimensionOrFraction(android.content.res.TypedArray,int,int,int)> 
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.Element getOwnerElement()> 
<android.app.ContextImpl: android.content.Context getOuterContext()> 
<android.app.ActivityThread: android.util.DisplayMetrics getDisplayMetricsLocked(int,android.content.res.CompatibilityInfo)> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int getNextNamespaceNode2(int)> 
<android.content.res.Resources: android.graphics.drawable.Drawable getCachedDrawable(android.util.LongSparseArray,long)> 
<android.view.MotionEvent: float getHistoricalTouchMinor(int,int)> 
<android.widget.AbsListView: float getBottomFadingEdgeStrength()> 
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)> 
<java.security.SecureRandom: byte[] getSeed(int)> 
<android.media.videoeditor.WaveformData: int getFramesCount()> 
<org.apache.james.mime4j.field.address.parser.SimpleCharStream: int getBeginColumn()> 
<android.preference.PreferenceActivity: void loadHeadersFromResource(int,java.util.List)> 
<java.net.InterfaceAddress: java.net.InetAddress getBroadcast()> 
<android.database.CursorWrapper: short getShort(int)> 
<android.webkit.WebSettingsClassic: java.lang.String getDefaultUserAgentForLocale(android.content.Context,java.util.Locale)> 
<android.content.res.Resources: android.content.res.Resources getSystem()> 
<gov.nist.javax.sip.SipProviderImpl: javax.sip.header.CallIdHeader getNewCallId()> 
<android.widget.ActivityChooserModel: int getActivityCount()> 
<android.filterfw.core.Filter: java.lang.String getFilterClassName()> 
<org.apache.harmony.xml.dom.NodeImpl: java.lang.Object getUserData(java.lang.String)> 
<org.apache.commons.codec.net.QCodec: java.lang.Object decode(java.lang.Object)> 
<android.bluetooth.BluetoothHealthAppConfiguration: java.lang.String getName()> 
<java.lang.SecurityManager: java.lang.Object getSecurityContext()> 
<java.net.DefaultFileNameMap: java.lang.String getContentTypeFor(java.lang.String)> 
<android.app.ActivityManagerProxy: void getMemoryInfo(android.app.ActivityManager$MemoryInfo)> 
<org.apache.xalan.templates.StylesheetRoot: java.util.Vector getAttributeSetComposed(org.apache.xml.utils.QName)> 
<java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)> 
<android.text.style.AbsoluteSizeSpan: int getSpanTypeId()> 
<gov.nist.javax.sip.message.MultipartMimeContentImpl: gov.nist.javax.sip.message.Content getContentByType(java.lang.String,java.lang.String)> 
<android.widget.Spinner: int getDropDownWidth()> 
<org.apache.xml.serializer.AttributesImplSerializer: int getIndex(java.lang.String,java.lang.String)> 
<android.preference.MultiCheckPreference: boolean[] getValues()> 
<android.renderscript.Program: java.lang.String getTextureName(int)> 
<java.lang.Class: java.lang.reflect.Field[] getFields()> 
<android.content.pm.PackageParser: android.content.pm.PackageParser$PackageLite parsePackageLite(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,int,java.lang.String[])> 
<java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.security.Provider)> 
<org.apache.xml.dtm.ref.DTMDefaultBase: int getLastChild(int)> 
<org.apache.http.util.EncodingUtils: java.lang.String getString(byte[],int,int,java.lang.String)> 
<org.apache.james.mime4j.field.UnstructuredField: java.lang.String getValue()> 
<javax.crypto.spec.OAEPParameterSpec: java.security.spec.AlgorithmParameterSpec getMGFParameters()> 
<android.net.rtp.AudioStream: android.net.rtp.AudioGroup getGroup()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPublicKey: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getInstance(java.security.interfaces.RSAPublicKey)> 
<gov.nist.javax.sip.header.ims.PPreferredService: java.lang.String getSubserviceIdentifiers()> 
<org.apache.harmony.security.provider.cert.X509CertPathImpl: org.apache.harmony.security.provider.cert.X509CertPathImpl getInstance(java.io.InputStream,java.lang.String)> 
<android.net.SSLCertificateSocketFactory: byte[] getNpnSelectedProtocol(java.net.Socket)> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: java.lang.String getLocalName(int)> 
<org.apache.harmony.security.pkcs7.ContentInfo: int[] getContentType()> 
<org.apache.xml.utils.res.LongArrayWrapper: int getLength()> 
<android.hardware.usb.UsbEndpoint: int getType()> 
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: javax.net.ssl.SSLSessionContext getSessionContext()> 
<android.speech.tts.TextToSpeech: android.os.IBinder getCallerIdentity()> 
<android.widget.ImageView: android.widget.ImageView$ScaleType getScaleType()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.lang.String getCipherSuite()> 
<android.speech.tts.PlaybackQueueItem: android.speech.tts.TextToSpeechService$UtteranceProgressDispatcher getDispatcher()> 
<android.telephony.SmsCbCmasInfo: int getResponseType()> 
<java.lang.reflect.Field: java.lang.Class getDeclaringClass()> 
<javax.sip.IOExceptionEvent: java.lang.String getHost()> 
<android.graphics.drawable.StateListDrawable: int getStateDrawableIndex(int[])> 
<org.apache.xml.dtm.ref.DTMDefaultBase: int getNodeHandle(int)> 
<android.test.mock.MockPackageManager: android.content.res.XmlResourceParser getXml(java.lang.String,int,android.content.pm.ApplicationInfo)> 
<android.net.wifi.WifiManager: java.util.List getScanResults()> 
<android.util.AtomicFile: byte[] readFully()> 
<org.jivesoftware.smack.PacketReader: org.jivesoftware.smack.packet.Authentication parseAuthentication(org.xmlpull.v1.XmlPullParser)> 
<org.apache.xpath.functions.SecuritySupport: java.io.FileInputStream getFileInputStream(java.io.File)> 
<java.net.URI: java.lang.String getRawQuery()> 
<android.emoji.EmojiFactory: android.graphics.Bitmap getBitmapFromAndroidPua(int)> 
<java.nio.charset.IllegalCharsetNameException: java.lang.String getCharsetName()> 
<gov.nist.javax.sip.header.AcceptLanguageList: gov.nist.javax.sip.header.AcceptLanguage getFirst()> 
<android.graphics.drawable.ClipDrawable: boolean getPadding(android.graphics.Rect)> 
<org.apache.harmony.xml.dom.ProcessingInstructionImpl: java.lang.String getNodeName()> 
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: java.lang.String getDnsQueryName()> 
<android.os.Binder: java.lang.String getInterfaceDescriptor()> 
<java.util.zip.CheckedInputStream: java.util.zip.Checksum getChecksum()> 
<java.util.logging.LogManager: java.util.logging.LoggingMXBean getLoggingMXBean()> 
<org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)> 
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)> 
<android.nfc.tech.NfcBarcode: int getType()> 
<android.database.AbstractCursor: int getColumnCount()> 
<org.apache.james.mime4j.field.MailboxListField: org.apache.james.mime4j.field.address.parser.ParseException getParseException()> 
<org.apache.james.mime4j.field.Field: org.apache.james.mime4j.field.DefaultFieldParser getParser()> 
<gov.nist.javax.sip.header.Server: java.util.ListIterator getProduct()> 
<javax.net.ssl.SSLContext: javax.net.ssl.SSLSessionContext getServerSessionContext()> 
<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress getPeerInetAddress()> 
<android.widget.Chronometer: long getBase()> 
<java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)> 
<org.apache.xml.serializer.dom3.LSSerializerImpl: java.lang.String getPathWithoutEscapes(java.lang.String)> 
<java.util.jar.JarEntry: java.security.cert.Certificate[] getCertificates()> 
<android.view.ViewConfiguration: long getSendRecurringAccessibilityEventsInterval()> 
<android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)> 
<org.apache.xpath.patterns.UnionPattern: org.apache.xpath.patterns.StepPattern[] getPatterns()> 
<org.apache.http.impl.io.ChunkedInputStream: void parseTrailerHeaders()> 
<gov.nist.javax.sip.header.Protocol: java.lang.String getProtocol()> 
<org.apache.xalan.templates.Stylesheet: short getNodeType()> 
<org.apache.http.impl.conn.LoggingSessionInputBuffer: org.apache.http.io.HttpTransportMetrics getMetrics()> 
<android.util.MonthDisplayHelper: int getDayAt(int,int)> 
<org.apache.harmony.xnet.provider.jsse.CipherSuite: java.lang.String getAuthType(boolean)> 
<org.apache.harmony.xnet.provider.jsse.CipherSuite: org.apache.harmony.xnet.provider.jsse.CipherSuite getByCode(byte,byte)> 
<android.support.v4.view.ViewCompatJB: java.lang.Object getAccessibilityNodeProvider(android.view.View)> 
<org.jivesoftware.smack.packet.LoginResponse: org.jivesoftware.smack.packet.HeartbeatConfig getHeartbeatConfig()> 
<android.media.RemoteControlClient: android.media.IRemoteControlClient getIRemoteControlClient()> 
<java.security.cert.X509CertSelector: byte[] getIssuerAsBytes()> 
<android.view.View: int getVerticalScrollbarWidth()> 
<android.drm.DrmSupportInfo: java.util.Iterator getFileSuffixIterator()> 
<java.nio.CharArrayBuffer: java.nio.CharBuffer get(char[],int,int)> 
<gov.nist.javax.sip.header.ParametersHeader: long getParameterAsLong(java.lang.String)> 
<android.webkit.WebSettingsClassic: boolean getAllowFileAccessFromFileURLs()> 
<android.app.Fragment: java.lang.String getTag()> 
<android.view.View: android.view.HardwareLayer getHardwareLayer()> 
<android.nfc.tech.MifareUltralight: int getType()> 
<gov.nist.javax.sip.header.RequestLine: java.lang.String getVersionMinor()> 
<android.os.CommonClock: int getState()> 
<org.apache.http.impl.io.AbstractMessageParser: org.apache.http.Header[] parseHeaders(org.apache.http.io.SessionInputBuffer,int,int,org.apache.http.message.LineParser,java.util.List)> 
<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.ElemTemplate getStartRule()> 
<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getNodeName()> 
<android.telephony.SmsCbEtwsInfo: byte[] getPrimaryNotificationSignature()> 
<android.net.LinkProperties: java.util.Collection getAddresses()> 
<org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream: int getTabSize(int)> 
<org.apache.xml.utils.UnImplNode: org.w3c.dom.Attr getAttributeNode(java.lang.String)> 
<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)> 
<android.app.MediaRouteButton: int getRouteTypes()> 
<android.widget.FrameLayout: int getForegroundGravity()> 
<android.media.MediaCodec: android.media.MediaFormat getOutputFormat()> 
<gov.nist.javax.sip.header.Challenge: java.lang.String getOpaque()> 
<java.nio.ShortBuffer: java.nio.ShortBuffer get(short[])> 
<org.apache.xml.res.XMLErrorResources: java.lang.String getResourceSuffix(java.util.Locale)> 
<android.opengl.GLLogWrapper: java.lang.String getClientState(int)> 
<gov.nist.javax.sip.stack.TLSMessageChannel: gov.nist.javax.sip.stack.HandshakeCompletedListenerImpl getHandshakeCompletedListener()> 
<android.content.BroadcastReceiver: android.content.BroadcastReceiver$PendingResult getPendingResult()> 
<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.extensions.ExtensionNamespacesManager getExtensionNamespacesManager()> 
<android.media.audiofx.Visualizer: int getFft(byte[])> 
<android.view.ViewRootImpl: void getLastTouchPoint(android.graphics.Point)> 
<android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()> 
<android.database.CursorWrapper: int getColumnCount()> 
<android.net.LinkAddress: java.net.InetAddress getAddress()> 
<java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)> 
<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect,android.graphics.Point)> 
<android.os.storage.StorageVolume: android.os.UserHandle getOwner()> 
<android.text.TextUtils: int getOffsetAfter(java.lang.CharSequence,int)> 
<org.apache.xalan.xslt.SecuritySupport12: java.io.FileInputStream getFileInputStream(java.io.File)> 
<android.webkit.WebSettingsClassic: int getDoubleTapToastCount()> 
<android.test.ProviderTestCase2: android.content.ContentProvider getProvider()> 
<java.net.Authenticator: java.net.URL getRequestingURL()> 
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CSeqHeader getCSeq()> 
<android.view.View: int getMinimumWidth()> 
<java.nio.DoubleArrayBuffer: double get(int)> 
<android.support.v4.app.LoaderManager: boolean hasRunningLoaders()> 
<android.util.JsonReader: char readEscapeCharacter()> 
<android.view.animation.LayoutAnimationController: float getDelay()> 
<org.apache.xml.dtm.SecuritySupport12: java.lang.ClassLoader getContextClassLoader()> 
<android.webkit.WebSettingsClassic: java.lang.String getFixedFontFamily()> 
<org.xml.sax.helpers.AttributesImpl: java.lang.String getURI(int)> 
<android.view.textservice.SpellCheckerSession: void getSuggestions(android.view.textservice.TextInfo[],int,boolean)> 
<android.database.AbstractCursor: android.database.CursorWindow getWindow()> 
<android.widget.DigitalClock: boolean get24HourMode()> 
<gov.nist.javax.sip.header.ims.SecurityAgree: int getSPIClient()> 
<android.os.Environment: java.io.File getSecureDataDirectory()> 
<org.apache.xpath.axes.FilterExprIteratorSimple: int getAxis()> 
<android.telephony.cdma.CdmaSmsCbProgramData: int getLanguage()> 
<android.app.ContextImpl: android.os.Looper getMainLooper()> 
<android.net.NetworkInfo: int getSubtype()> 
<android.webkit.WebSettingsClassic: java.lang.String getCurrentUserAgent()> 
<org.apache.james.mime4j.message.TempFileBinaryBody: org.apache.james.mime4j.message.Entity getParent()> 
<org.apache.harmony.security.x509.GeneralSubtree: byte[] getEncoded()> 
<org.kxml2.io.KXmlSerializer: int getDepth()> 
<org.apache.xalan.templates.ElemExtensionScript: java.lang.String getLang()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: org.apache.xml.dtm.ref.DTMStringPool getNsNameTable()> 
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()> 
<gov.nist.javax.sip.header.ims.PServedUser: java.lang.String getRegistrationState()> 
<android.text.AutoText: int getSize()> 
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)> 
<android.text.style.RelativeSizeSpan: int getSpanTypeId()> 
<android.content.pm.PermissionGroupInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)> 
<org.apache.xml.serializer.SerializerFactory: org.apache.xml.serializer.Serializer getSerializer(java.util.Properties)> 
<android.app.ApplicationPackageManager: java.util.List getInstalledApplications(int)> 
<android.webkit.WebHistoryItem: android.graphics.Bitmap getFavicon()> 
<javax.net.ssl.SSLContext: javax.net.ssl.SSLParameters getDefaultSSLParameters()> 
<org.apache.xalan.templates.TemplateSubPatternAssociation: int getImportLevel()> 
<net.oauth.signature.RSA_SHA1: java.security.PublicKey getPublicKeyFromPem(java.lang.String)> 
<android.preference.MultiSelectListPreference: java.lang.CharSequence[] getEntryValues()> 
<android.webkit.WebViewClassic: android.webkit.WebViewProvider$ScrollDelegate getScrollDelegate()> 
<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.Element getDocumentElement()> 
<java.security.Provider: void load(java.io.InputStream)> 
<android.animation.ValueAnimator: float getAnimatedFraction()> 
<java.util.zip.ZipEntry: int getMethod()> 
<android.security.KeyStore: long getmtime(java.lang.String)> 
<android.emoji.EmojiFactory: int getVendorSpecificSjisFromAndroidPua(int)> 
<javax.crypto.Cipher: byte[] getIV()> 
<android.test.mock.MockContext: android.content.ContentResolver getContentResolver()> 
<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.String getSystemProperty(java.lang.String,java.lang.String)> 
<android.filterpacks.imageproc.Invert: android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)> 
<jp.co.omronsoft.openwnn.Keyboard: int[] getNearestKeys(int,int)> 
<org.apache.http.impl.SocketHttpClientConnection: int getRemotePort()> 
<java.nio.FloatBuffer: java.nio.FloatBuffer get(float[])> 
<gov.nist.javax.sip.header.Challenge: java.lang.String getRealm()> 
<android.webkit.WebView: java.lang.String[] getHttpAuthUsernamePassword(java.lang.String,java.lang.String)> 
<libcore.net.http.HttpURLConnectionImpl: java.util.Map getHeaderFields()> 
<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)> 
<java.text.DecimalFormatSymbols: java.lang.String getNaN()> 
<android.net.DummyDataStateTracker: android.net.NetworkInfo getNetworkInfo()> 
<android.media.RingtoneManager: android.net.Uri getActualDefaultRingtoneUri(android.content.Context,int)> 
<android.webkit.HTML5VideoViewProxy: void loadPoster(java.lang.String)> 
<javax.net.ssl.HttpsURLConnection: javax.net.ssl.HostnameVerifier getDefaultHostnameVerifier()> 
<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.CountersTable getCountersTable()> 
<android.speech.tts.TtsEngines: java.lang.String getDefaultEngine()> 
<android.media.MediaPlayer: android.media.Metadata getMetadata(boolean,boolean)> 
<org.jivesoftware.smack.packet.DataMessage: java.util.ArrayList getAppDataList()> 
<org.apache.http.message.BufferedHeader: java.lang.String getName()> 
<java.security.cert.X509Certificate: java.util.List getExtendedKeyUsage()> 
<android.sax.Element: android.sax.Element getChild(java.lang.String)> 
<android.speech.tts.TtsEngines: java.lang.String getDefaultLocale()> 
<org.apache.xalan.Version: int getMajorVersionNum()> 
<android.media.MediaFormat: int getInteger(java.lang.String)> 
<android.app.admin.DeviceAdminReceiver: android.app.admin.DevicePolicyManager getManager(android.content.Context)> 
<android.util.MonthDisplayHelper: int getMonth()> 
<org.apache.http.params.DefaultedHttpParams: java.util.Set getNames()> 
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationIcon(java.lang.String)> 
<java.util.MissingResourceException: java.lang.String getKey()> 
<org.apache.commons.codec.net.QCodec: java.lang.String getDefaultCharset()> 
<java.security.Policy: java.security.PermissionCollection getPermissions(java.security.ProtectionDomain)> 
<java.io.FilterReader: int read()> 
<org.jivesoftware.smack.packet.Authentication: java.lang.String getUsername()> 
<android.view.textservice.SpellCheckerInfo: android.content.ComponentName getComponent()> 
<android.filterpacks.imageproc.ContrastFilter: android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)> 
<android.view.Display: void getRealSize(android.graphics.Point)> 
<android.nfc.tech.NfcBarcode: android.nfc.tech.NfcBarcode get(android.nfc.Tag)> 
<org.apache.xpath.XPathContext: int getDTMHandleFromNode(org.w3c.dom.Node)> 
<android.telephony.gsm.GsmCellLocation: int getPsc()> 
<org.apache.http.impl.client.BasicCookieStore: java.util.List getCookies()> 
<android.nfc.NfcAdapter: int getSdkVersion()> 
<gov.nist.javax.sip.header.Via: javax.sip.address.Hop getHop()> 
<android.view.MotionEvent: int getAction()> 
<org.apache.harmony.security.PrivateKeyImpl: java.lang.String getAlgorithm()> 
<android.widget.ExpandableListConnector: android.widget.ExpandableListAdapter getAdapter()> 
<org.apache.http.util.VersionInfo: java.lang.String getRelease()> 
<android.filterpacks.performance.Throughput: float getNanosPerPixel()> 
<org.apache.http.entity.ByteArrayEntity: java.io.InputStream getContent()> 
<android.text.Layout: int getOffsetToRightOf(int)> 
<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()> 
<android.support.v4.view.ViewPager: int getPageMargin()> 
<org.apache.xpath.axes.AttributeIterator: int getAxis()> 
<android.text.method.MetaKeyKeyListener: int getMetaState(long,int)> 
<android.hardware.display.DisplayManagerGlobal: android.view.Display getRealDisplay(int)> 
<gov.nist.core.LogWriter: java.lang.String getLoggerName()> 
<android.os.Bundle: short[] getShortArray(java.lang.String)> 
<android.os.Debug: int getGlobalExternalFreedCount()> 
<libcore.net.http.HttpsURLConnectionImpl: int getHeaderFieldInt(java.lang.String,int)> 
<android.filterfw.core.SimpleFrame: android.graphics.Bitmap getBitmap()> 
<android.renderscript.Matrix2f: void loadScale(float,float)> 
<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.TransactionState getState()> 
<gov.nist.javax.sip.stack.TLSMessageChannel: java.lang.String getViaHost()> 
<org.apache.xalan.templates.ElemTemplateElement: int getColumnNumber()> 
<android.graphics.LargeBitmap: int getHeight()> 
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse: boolean parse()> 
<org.apache.harmony.security.asn1.ASN1Any: org.apache.harmony.security.asn1.ASN1Any getInstance()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: boolean getKeepAlive()> 
<org.apache.xalan.xslt.SecuritySupport12: java.lang.ClassLoader getSystemClassLoader()> 
<android.webkit.ZoomManager: float getReadingLevelScale()> 
<org.jivesoftware.smack.packet.Bind: java.lang.String getResource()> 
<org.apache.xml.serializer.utils.Messages: java.util.Locale getLocale()> 
<android.content.pm.LabeledIntent: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)> 
<android.app.ActivityManager: int getLauncherLargeIconDensity()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: java.lang.String getNamespaceURI(int)> 
<android.view.inputmethod.CorrectionInfo: int getOffset()> 
<android.view.ViewConfiguration: int getDoubleTapSlop()> 
<android.preference.DialogPreference: int getDialogLayoutResource()> 
<org.apache.james.mime4j.message.Multipart: java.lang.String getSubType()> 
<android.widget.AdapterViewAnimator: int getNumActiveViews()> 
<javax.crypto.SecretKeyFactory: java.security.Provider getProvider()> 
<org.jivesoftware.smackx.provider.DiscoverInfoProvider: int getTag()> 
<android.renderscript.Matrix3f: void loadScale(float,float)> 
<android.media.audiofx.BassBoost: boolean getStrengthSupported()> 
<org.jivesoftware.smackx.packet.VCard: java.lang.String getAvatarBase64Encoded()> 
<android.text.Layout: float getLineExtent(int,android.text.Layout$TabStops,boolean)> 
<android.net.NetworkStats: java.lang.String[] getUniqueIfaces()> 
<org.apache.xml.utils.Context2: org.apache.xml.utils.Context2 getChild()> 
<android.graphics.drawable.Drawable: int getMinimumHeight()> 
<gov.nist.javax.sip.Utils: java.lang.String getQuotedString(java.lang.String)> 
<android.app.ActivityManagerProxy: java.lang.String getPackageForToken(android.os.IBinder)> 
<java.security.cert.CertificateFactory: java.security.Provider getProvider()> 
<android.text.Layout: java.lang.Object[] getParagraphSpans(android.text.Spanned,int,int,java.lang.Class)> 
<org.apache.xpath.XPathContext: org.apache.xpath.SourceTreeManager getSourceTreeManager()> 
<android.filterfw.core.FilterPort: java.lang.String getName()> 
<gov.nist.javax.sip.header.Via: int getPort()> 
<android.media.audiofx.Equalizer: short getCurrentPreset()> 
<org.apache.xalan.templates.StylesheetRoot: int getGlobalImportCount()> 
<android.text.format.DateUtils: long getNumberOfDaysPassed(long,long)> 
<java.util.Date: int getMonth()> 
<android.view.animation.LayoutAnimationController: android.view.animation.Interpolator getInterpolator()> 
<gov.nist.javax.sip.header.Protocol: java.lang.String getProtocolName()> 
<android.app.SearchableInfo: java.lang.String getSuggestSelection()> 
<android.util.Property: java.lang.String getName()> 
<android.app.SearchableInfo: int getLabelId()> 
<android.webkit.WebViewClassic: android.webkit.ViewManager getViewManager()> 
<android.widget.SearchView: int getPreferredWidth()> 
<android.os.CommonTimeConfig: byte getMasterElectionPriority()> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: org.xml.sax.DTDHandler getDTDHandler()> 
<java.security.spec.PKCS8EncodedKeySpec: java.lang.String getFormat()> 
<libcore.net.http.HttpURLConnectionImpl: java.util.Map getRequestProperties()> 
<android.text.Layout: float getHorizontal(int,boolean,int)> 
<android.filterfw.core.SerializedFrame: android.graphics.Bitmap getBitmap()> 
<android.database.MatrixCursor: short getShort(int)> 
<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFirstLine()> 
<org.apache.http.conn.routing.HttpRoute: int getHopCount()> 
<java.security.UnresolvedPermission: java.lang.String getUnresolvedType()> 
<org.jivesoftware.smack.packet.BindAccountRequest: java.lang.String getUser()> 
<org.apache.xalan.templates.ElemLiteralResult: org.w3c.dom.NamedNodeMap getAttributes()> 
<android.view.InputEvent: android.view.InputDevice getDevice()> 
<org.apache.xalan.templates.ElemLiteralResult: int getXSLToken()> 
<android.webkit.WebViewClassic: void loadUrl(java.lang.String,java.util.Map)> 
<java.util.concurrent.atomic.AtomicLongArray: long getAndSet(int,long)> 
<android.filterfw.core.FilterGraph: android.filterfw.core.Filter getFilter(java.lang.String)> 
<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.templates.Stylesheet getLastPoppedStylesheet()> 
<android.widget.ListView: android.graphics.drawable.Drawable getOverscrollHeader()> 
<org.apache.xpath.objects.XNull: java.lang.String getTypeString()> 
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: long getLastAccessedTime()> 
<gov.nist.javax.sip.message.SIPRequest: java.lang.String getSIPVersion()> 
<java.net.DatagramSocket: boolean getBroadcast()> 
<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address getRemoteTarget()> 
<java.lang.reflect.AccessibleObject: java.lang.annotation.Annotation[] getAnnotations()> 
<android.test.mock.MockCursor: int getPosition()> 
<android.widget.DatePicker: boolean getCalendarViewShown()> 
<android.renderscript.Matrix4f: void loadTranslate(float,float,float)> 
<android.graphics.ColorMatrix: float[] getArray()> 
<android.webkit.WebSettingsClassic: java.lang.String getProperty(java.lang.String)> 
<java.nio.CharSequenceAdapter: char get()> 
<gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser: void parseQuotedString(gov.nist.javax.sip.header.ims.PVisitedNetworkID)> 
<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCache$ServiceInfo parseServiceInfo(android.content.pm.ResolveInfo)> 
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getData()> 
<java.util.IllegalFormatFlagsException: java.lang.String getMessage()> 
<android.view.View: int getLabelFor()> 
<android.util.TimeUtils: java.util.ArrayList getTimeZonesWithUniqueOffsets(java.lang.String)> 
<android.content.CursorLoader: void onStopLoading()> 
<java.util.logging.LogRecord: java.lang.String getSourceMethodName()> 
<android.bluetooth.BluetoothSocket: java.io.InputStream getInputStream()> 
<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()> 
<org.apache.xpath.jaxp.XPathImpl: javax.xml.parsers.DocumentBuilder getParser()> 
<android.drm.DrmEvent: int getType()> 
<org.apache.xml.serializer.ToXMLStream: java.lang.String getXMLVersion()> 
<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()> 
<android.telephony.SignalStrength: int getEvdoAsuLevel()> 
<android.filterfw.core.FrameFormat: int getTarget()> 
<org.apache.xml.utils.URI: java.lang.String getQueryString()> 
<android.widget.TextView: android.text.method.MovementMethod getMovementMethod()> 
<gov.nist.javax.sip.header.ErrorInfo: javax.sip.address.URI getErrorInfo()> 
<android.content.res.TypedArray: java.lang.String getString(int)> 
<android.widget.ExpandableListConnector: int getViewTypeCount()> 
<android.hardware.display.WifiDisplayStatus: int getActiveDisplayState()> 
<jp.co.omronsoft.openwnn.JAJP.OpenWnnClauseConverterJAJP: java.util.ArrayList getAncillaryPattern(java.lang.String)> 
<gov.nist.javax.sip.stack.UDPMessageProcessor: java.lang.String getTransport()> 
<android.media.EncoderCapabilities: java.util.List getAudioEncoders()> 
<org.apache.james.mime4j.field.AddressListField: org.apache.james.mime4j.field.address.AddressList getAddressList()> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: javax.xml.transform.SourceLocator getSourceLocatorFor(int)> 
<android.view.ScaleGestureDetector: long getEventTime()> 
<gov.nist.javax.sip.stack.MessageProcessor: int getDefaultPort(java.lang.String)> 
<android.widget.Editor: long getCharRange(int)> 
<android.app.ActivityOptions: android.os.IRemoteCallback getOnAnimationStartListener()> 
<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])> 
<android.text.method.BaseMovementMethod: int getInnerWidth(android.widget.TextView)> 
<org.apache.harmony.security.x509.GeneralName: java.util.List getAsList()> 
<org.apache.xml.dtm.DTMException: javax.xml.transform.SourceLocator getLocator()> 
<android.telephony.TelephonyManager: com.android.internal.telephony.ITelephony getITelephony()> 
<android.net.NetworkPolicyManager: int[] getUidsWithPolicy(int)> 
<android.net.http.SslError: android.net.http.SslCertificate getCertificate()> 
<android.telephony.TelephonyManager: java.util.List getAllCellInfo()> 
<org.apache.commons.codec.net.QuotedPrintableCodec: java.lang.String decode(java.lang.String)> 
<android.app.ActivityThread: android.content.Intent getIntentBeingBroadcast()> 
<org.apache.http.entity.ByteArrayEntity: long getContentLength()> 
<android.media.videoeditor.Effect: android.media.videoeditor.MediaItem getMediaItem()> 
<android.graphics.Paint: int getTextWidths(java.lang.String,float[])> 
<android.webkit.WebSettings: int getUserAgent()> 
<android.view.textservice.TextInfo: java.lang.String getText()> 
<android.os.Debug: int getGlobalGcInvocationCount()> 
<android.view.MotionEvent: float getToolMinor(int)> 
<org.apache.xalan.templates.ElemNumber: java.text.DecimalFormat getNumberFormatter(org.apache.xalan.transformer.TransformerImpl,int)> 
<org.apache.xalan.extensions.ExtensionsTable: org.apache.xalan.extensions.ExtensionHandler get(java.lang.String)> 
<net.oauth.signature.RSA_SHA1: java.security.PrivateKey getPrivateKeyFromPem(java.lang.String)> 
<android.widget.ListPopupWindow: int getInputMethodMode()> 
<android.media.AudioService: int getValueForVibrateSetting(int,int,int)> 
<gov.nist.javax.sip.stack.SIPClientTransaction: javax.sip.Dialog getDialog()> 
<android.widget.CursorTreeAdapter: android.widget.FilterQueryProvider getFilterQueryProvider()> 
<android.gesture.GestureStore: void load(java.io.InputStream)> 
<android.app.ActivityManagerProxy: android.content.pm.UserInfo getCurrentUser()> 
<gov.nist.javax.sip.header.ims.PChargingVector: java.lang.String getTerminatingIOI()> 
<android.content.res.ColorStateList: int getColorForState(int[],int)> 
<org.apache.http.impl.cookie.NetscapeDraftSpec: int getVersion()> 
<android.media.videoeditor.MediaArtistNativeHelper: int getFrameRate(int)> 
<java.nio.MappedByteBufferAdapter: short getShort(int)> 
<android.speech.srec.WaveHeader: short getBitsPerSample()> 
<android.app.ActivityThread: java.lang.String getProcessName()> 
<android.media.videoeditor.MediaImageItem: int getAspectRatio()> 
<java.util.concurrent.atomic.AtomicLongFieldUpdater: long getAndDecrement(java.lang.Object)> 
<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseFieldTypeSignature()> 
<org.apache.http.impl.SocketHttpServerConnection: int getLocalPort()> 
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.StylesheetRoot getStylesheetRoot()> 
<android.support.v4.app.LoaderManagerImpl: android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)> 
<org.apache.commons.codec.net.QCodec: java.lang.String getEncoding()> 
<java.util.concurrent.atomic.AtomicInteger: int getAndSet(int)> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: java.lang.String getPrefix(int)> 
<android.content.ContentProvider: android.content.IContentProvider getIContentProvider()> 
<android.inputmethodservice.InputMethodService: int getBackDisposition()> 
<android.telephony.TelephonyManager: int getLteOnCdmaModeStatic()> 
<org.apache.commons.codec.net.BCodec: java.lang.Object decode(java.lang.Object)> 
<org.apache.xpath.compiler.Compiler: long getNextMethodId()> 
<android.nfc.tech.NfcF: byte[] getManufacturer()> 
<android.app.ActivityThread: android.content.res.Configuration getConfiguration()> 
<org.apache.harmony.security.asn1.ASN1TypeCollection: void getValues(java.lang.Object,java.lang.Object[])> 
<android.os.NullVibrator: android.os.NullVibrator getInstance()> 
<org.apache.xalan.templates.DecimalFormatProperties: char getPercent()> 
<org.apache.xalan.templates.StylesheetRoot: java.util.Hashtable getAvailableElements()> 
<android.widget.TextView: android.text.Layout$Alignment getLayoutAlignment()> 
<android.hardware.input.InputManager: android.hardware.input.KeyboardLayout[] getKeyboardLayouts()> 
<java.io.SerializationHandleMap: int getModuloHash(java.lang.Object,int)> 
<org.apache.xalan.templates.ElemWithParam: org.apache.xpath.objects.XObject getValue(org.apache.xalan.transformer.TransformerImpl,int)> 
<org.kxml2.io.KXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean,boolean)> 
<org.apache.xml.utils.NamespaceSupport2: java.util.Enumeration getDeclaredPrefixes()> 
<android.media.AudioTrack: int getSampleRate()> 
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.Stylesheet getStylesheet()> 
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: int getWrappedPort()> 
<android.content.res.ColorStateList: int getDefaultColor()> 
<android.telephony.TelephonyManager: int getDataState()> 
<org.apache.xml.serializer.SerializerBase: java.lang.String getPrefix(java.lang.String)> 
<android.renderscript.ProgramStore: android.renderscript.ProgramStore$DepthFunc getDepthFunc()> 
<android.net.ThrottleManager: java.lang.String getHelpUri()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: java.lang.String getNodeName(int)> 
<android.net.Proxy: org.apache.http.HttpHost getPreferredHttpHost(android.content.Context,java.lang.String)> 
<libcore.net.http.HttpsURLConnectionImpl: long getDate()> 
<android.view.animation.Transformation: android.graphics.Matrix getMatrix()> 
<java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)> 
<android.app.Fragment: android.app.Fragment getParentFragment()> 
<android.app.SearchableInfo: int getIconId()> 
<android.widget.AppSecurityPermissions: java.util.List getPermissionList(android.widget.AppSecurityPermissions$MyPermissionGroupInfo,int)> 
<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTElementProcessor getProcessorForUnknown(java.lang.String,java.lang.String)> 
<android.telephony.TelephonyManager: int getCurrentPhoneType()> 
<android.support.v4.app.Fragment: android.support.v4.app.Fragment getParentFragment()> 
<gov.nist.javax.sip.header.Contact: gov.nist.core.NameValueList getContactParms()> 
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.lang.String getWrappedHostName()> 
<org.apache.harmony.xml.ExpatAttributes: java.lang.String getValue(int)> 
<org.apache.xpath.compiler.OpMap: int getTokenQueueSize()> 
<android.view.MotionEvent: float getTouchMinor(int)> 
<android.support.v4.app.Fragment: android.support.v4.app.Fragment getTargetFragment()> 
<android.media.AudioManager: java.lang.String getIdForAudioFocusListener(android.media.AudioManager$OnAudioFocusChangeListener)> 
<org.apache.harmony.security.x509.TBSCertList: java.util.Date getThisUpdate()> 
<android.content.ComponentName: java.lang.String getClassName()> 
<android.net.wifi.NetworkUpdateResult: int getNetworkId()> 
<android.webkit.WebViewFactory: android.webkit.WebViewFactoryProvider loadChromiumProvider()> 
<org.apache.xalan.processor.XSLTElementDef: int getOrder()> 
<org.apache.harmony.security.x509.TBSCertList: org.apache.harmony.security.x509.Extensions getCrlExtensions()> 
<java.net.PasswordAuthentication: java.lang.String getUserName()> 
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.NamedNodeMap getAttributes()> 
<android.widget.ScrollView: int getMaxScrollAmount()> 
<android.media.MediaPlayer: int getIntParameter(int)> 
<android.os.SystemProperties: java.lang.String get(java.lang.String)> 
<org.jivesoftware.smack.provider.ProviderManager: java.lang.Object getRawXmlIqProvider(java.lang.String,java.lang.String)> 
<android.speech.tts.PlaybackQueueItem: java.lang.Object getCallerIdentity()> 
<android.widget.SimpleAdapter: java.lang.Object getItem(int)> 
<android.filterfw.core.FrameFormat: int getDimension(int)> 
<org.apache.xalan.transformer.XalanTransformState: org.apache.xalan.templates.ElemTemplateElement getCurrentElement()> 
<android.util.LongSparseArray: java.lang.Object get(long)> 
<org.apache.xml.dtm.SecuritySupport: long getLastModified(java.io.File)> 
<java.util.AbstractMap: java.lang.Object get(java.lang.Object)> 
<gov.nist.javax.sip.address.SipUri: java.lang.Object getParm(java.lang.String)> 
<android.net.Proxy: int getDefaultPort()> 
<android.graphics.Paint: int getTextRunCursor(char[],int,int,int,int,int)> 
<android.preference.PreferenceGroup: android.preference.Preference getPreference(int)> 
<org.jivesoftware.smack.XMPPConnection: long getServerClockSkew()> 
<android.content.pm.LabeledIntent: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)> 
<android.database.MatrixCursor: java.lang.Object get(int)> 
<org.apache.harmony.luni.util.DeleteOnExit: org.apache.harmony.luni.util.DeleteOnExit getInstance()> 
<org.apache.harmony.security.provider.cert.X509CertImpl: boolean[] getIssuerUniqueID()> 
<org.apache.xalan.templates.TemplateList: org.apache.xalan.templates.TemplateList$TemplateWalker getWalker()> 
<libcore.net.http.HttpURLConnectionImpl: java.lang.String getRequestProperty(java.lang.String)> 
<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseClassTypeSignature()> 
<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: javax.sip.header.AuthorizationHeader getAuthorization(java.lang.String,java.lang.String,java.lang.String,javax.sip.header.WWWAuthenticateHeader,gov.nist.javax.sip.clientauthutils.UserCredentialHash)> 
<android.security.KeyStore: byte[] getPasswordBytes(java.lang.String)> 
<android.content.res.TypedArray: java.lang.CharSequence getText(int)> 
<android.telephony.TelephonyManager: java.util.List getNeighboringCellInfo()> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: org.apache.xml.utils.XMLString getStringValue(int)> 
<org.apache.james.mime4j.field.address.parser.SimpleCharStream: int getColumn()> 
<org.xml.sax.helpers.AttributesImpl: java.lang.String getType(java.lang.String,java.lang.String)> 
<android.net.LinkProperties: java.util.Collection getDnses()> 
<android.webkit.WebHistoryItem: int getId()> 
<android.media.videoeditor.Overlay: android.media.videoeditor.MediaItem getMediaItem()> 
<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.EventHeader getEventHeader()> 
<java.sql.Timestamp: int getNanos()> 
<java.net.Inet6Address: java.net.Inet6Address getByAddress(java.lang.String,byte[],java.net.NetworkInterface)> 
<android.preference.MultiCheckPreference: java.lang.String[] getEntryValues()> 
<android.media.videoeditor.AudioTrack: java.lang.String getFilename()> 
<android.telephony.SignalStrength: int getDbm()> 
<jp.co.omronsoft.openwnn.KeyboardView: jp.co.omronsoft.openwnn.KeyboardView$OnKeyboardActionListener getOnKeyboardActionListener()> 
<org.apache.xml.utils.StylesheetPIHandler: java.lang.String getBaseId()> 
<android.graphics.Bitmap: int getScaledHeight(android.util.DisplayMetrics)> 
<jp.co.omronsoft.openwnn.KeyboardView: jp.co.omronsoft.openwnn.Keyboard getKeyboard()> 
<android.widget.HeaderViewListAdapter: int getItemViewType(int)> 
<android.os.Bundle: short getShort(java.lang.String,short)> 
<android.app.ActivityManager: android.app.ActivityManager$TaskThumbnails getTaskThumbnails(int)> 
<gov.nist.javax.sip.ListeningPointImpl: gov.nist.javax.sip.header.Via getViaHeader()> 
<org.apache.http.message.BasicHttpResponse: java.lang.String getReason(int)> 
<android.test.mock.MockResources: void getValue(java.lang.String,android.util.TypedValue,boolean)> 
<java.nio.HeapByteBuffer: int getInt()> 
<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityRecord getRecord(int)> 
<android.os.SystemService: android.os.SystemService$State getState(java.lang.String)> 
<android.widget.HeaderViewListAdapter: java.lang.Object getItem(int)> 
<android.webkit.WebViewClassic: void getSelectionHandles(int[])> 
<android.app.ActivityManager: void getMemoryInfo(android.app.ActivityManager$MemoryInfo)> 
<android.app.DialogFragment: android.app.Dialog getDialog()> 
<org.xml.sax.helpers.XMLReaderFactory: org.xml.sax.XMLReader createXMLReader(java.lang.String)> 
<org.apache.xalan.transformer.KeyTable: org.apache.xalan.transformer.KeyIterator getKeyIterator()> 
<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()> 
<android.mtp.MtpDatabase: int[] getSupportedObjectProperties(int)> 
<java.io.FilterInputStream: int read(byte[])> 
<org.apache.harmony.xnet.provider.jsse.CertPinManager: java.lang.String getMatchingCN(java.lang.String)> 
<org.apache.http.impl.client.RequestWrapper: org.apache.http.RequestLine getRequestLine()> 
<android.graphics.drawable.LayerDrawable: int getOpacity()> 
<android.text.TextLine: int getOffsetBeforeAfter(int,int,int,boolean,int,boolean)> 
<android.inputmethodservice.IInputMethodWrapper: android.view.inputmethod.InputMethod getInternalInputMethod()> 
<android.bluetooth.BluetoothHealthAppConfiguration: int getDataType()> 
<org.apache.http.impl.SocketHttpServerConnection: int getRemotePort()> 
<android.preference.DialogPreference: android.app.Dialog getDialog()> 
<org.apache.xml.serializer.Version: java.lang.String getProduct()> 
<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.stack.MessageChannel getRequestChannel()> 
<java.nio.HeapByteBuffer: char getChar()> 
<org.apache.xml.dtm.DTMManager: boolean getSource_location()> 
<org.apache.xml.dtm.ref.DTMDefaultBase: int getOwnerDocument(int)> 
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.CharSequence getPackageName(java.lang.Object)> 
<android.database.MatrixCursor: byte[] getBlob(int)> 
<android.media.AudioService: int getRingerMode()> 
<javax.net.ssl.HandshakeCompletedEvent: java.security.Principal getLocalPrincipal()> 
<android.app.SearchableInfo: int getVoicePromptTextId()> 
<android.preference.PreferenceGroupAdapter: android.preference.Preference getItem(int)> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: org.xml.sax.ext.LexicalHandler getLexicalHandler()> 
<java.text.BreakIterator: java.text.BreakIterator getWordInstance(java.util.Locale)> 
<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String getName()> 
<android.text.method.SingleLineTransformationMethod: char[] getReplacement()> 
<org.json.JSONObject: int getInt(java.lang.String)> 
<libcore.net.http.HttpURLConnectionImpl: int getFixedContentLength()> 
<org.apache.http.impl.SocketHttpClientConnection: int getLocalPort()> 
<libcore.net.http.HttpURLConnectionImpl: java.lang.String getHeaderField(int)> 
<org.apache.james.mime4j.field.datetime.parser.SimpleCharStream: int getLine()> 
<android.location.LocationProvider: java.lang.String getName()> 
<android.sax.Children: android.sax.Element getOrCreate(android.sax.Element,java.lang.String,java.lang.String)> 
<org.apache.harmony.security.x509.AlgorithmIdentifier: byte[] getEncoded()> 
<org.apache.xml.serializer.SecuritySupport: boolean getFileExists(java.io.File)> 
<java.io.InputStreamReader: int read(char[],int,int)> 
<java.nio.DirectByteBuffer: short getShort(int)> 
<gov.nist.javax.sip.message.SIPRequest: java.lang.String getDialogId(boolean)> 
<java.text.DecimalFormatSymbols: char getMinusSign()> 
<android.content.Intent: java.lang.CharSequence getCharSequenceExtra(java.lang.String)> 
<android.view.InputDevice: android.view.InputDevice$MotionRange getMotionRange(int,int)> 
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.AuthenticationHandler getProxyAuthenticationHandler()> 
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,boolean,android.accounts.AccountManagerCallback,android.os.Handler)> 
<android.app.ActivityManagerProxy: java.util.List getTasks(int,int,android.app.IThumbnailReceiver)> 
<org.apache.xalan.transformer.TransformerImpl: java.lang.String getOutputProperty(java.lang.String)> 
<java.io.RandomAccessFile: int readUnsignedByte()> 
<libcore.icu.RuleBasedCollatorICU: java.lang.String getRules()> 
<android.webkit.WebViewCore: java.lang.Class getPluginClass(java.lang.String,java.lang.String)> 
<org.apache.http.message.BasicRequestLine: java.lang.String getMethod()> 
<org.apache.james.mime4j.message.Multipart: org.apache.james.mime4j.message.Entity getParent()> 
<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable getCurrent()> 
<org.apache.xalan.processor.XSLTElementDef: java.lang.String getRequiredElem()> 
<org.kxml2.io.KXmlSerializer: java.lang.String getName()> 
<android.webkit.WebViewClassic: int getScaledMaxYScroll()> 
<java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()> 
<android.content.res.Resources: java.lang.String[] getStringArray(int)> 
<android.bluetooth.BluetoothSocket: int read(byte[],int,int)> 
<org.apache.http.impl.auth.NTLMScheme: java.lang.String getRealm()> 
<android.test.mock.MockResources: int getColor(int)> 
<android.content.pm.PermissionInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)> 
<android.text.SpannableStringBuilder: float getTextRunAdvances(int,int,int,int,int,float[],int,android.graphics.Paint,int)> 
<android.test.mock.MockResources: java.lang.String[] getStringArray(int)> 
<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.File)> 
<android.net.UrlQuerySanitizer: int decodeHexDigit(char)> 
<java.lang.reflect.Constructor: int getModifiers()> 
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script$KernelID getKernelIDDstOut()> 
<org.apache.xalan.templates.ElemSort: org.apache.xalan.templates.AVT getDataType()> 
<gov.nist.core.MultiValueMapImpl: java.lang.Object get(java.lang.Object)> 
<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()> 
<gov.nist.javax.sip.stack.SIPTransaction: java.lang.Object getApplicationData()> 
<org.apache.xml.serializer.utils.AttList: java.lang.String getURI(int)> 
<android.view.PointerIcon: android.view.PointerIcon getNullIcon()> 
<org.apache.xalan.templates.Stylesheet: java.lang.String getExcludeResultPrefix(int)> 
<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()> 
<android.widget.TextView: android.content.res.ColorStateList getTextColors()> 
<android.view.MotionEvent: float getPressure()> 
<org.kxml2.io.KXmlParser: java.lang.String getPrefix()> 
<android.test.ProviderTestCase: android.test.IsolatedContext getMockContext()> 
<org.apache.xml.utils.DOMHelper: org.w3c.dom.Document getDOMFactory()> 
<javax.crypto.Cipher: javax.crypto.ExemptionMechanism getExemptionMechanism()> 
<org.apache.xml.utils.PrefixResolverDefault: java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Node)> 
<javax.sip.TimeoutEvent: javax.sip.Timeout getTimeout()> 
<java.nio.charset.UnsupportedCharsetException: java.lang.String getCharsetName()> 
<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()> 
<org.apache.xpath.axes.LocPathIterator: int getContext()> 
<android.content.Intent: android.content.ClipData getClipData()> 
<android.media.AudioService: int getActiveStreamType(int)> 
<android.test.mock.MockCursor: java.lang.String getColumnName(int)> 
<org.apache.xalan.templates.ElemSort: org.apache.xalan.templates.AVT getCaseOrder()> 
<android.view.accessibility.AccessibilityNodeInfo: long getSourceNodeId()> 
<android.view.Display: void getSize(android.graphics.Point)> 
<android.support.v4.content.CursorLoader: void onStopLoading()> 
<junit.runner.BaseTestRunner: java.lang.String getPreference(java.lang.String)> 
<android.net.wifi.p2p.WifiP2pDevice: int parseHex(java.lang.String)> 
<android.support.v4.view.MotionEventCompat: int getPointerCount(android.view.MotionEvent)> 
<org.apache.http.impl.cookie.AbstractCookieSpec: org.apache.http.cookie.CookieAttributeHandler getAttribHandler(java.lang.String)> 
<android.preference.Preference: android.preference.Preference$OnPreferenceChangeListener getOnPreferenceChangeListener()> 
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)> 
<android.filterfw.core.GLFrame: android.filterfw.core.GLEnvironment getGLEnvironment()> 
<org.json.JSONArray: org.json.JSONObject getJSONObject(int)> 
<android.drm.DrmInfo: java.lang.String getMimeType()> 
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.OutputProperties getOutput(int)> 
<java.util.DuplicateFormatFlagsException: java.lang.String getMessage()> 
<android.net.ConnectivityManager: java.lang.String[] getTetheringErroredIfaces()> 
<android.text.method.ArrowKeyMovementMethod: int getCurrentLineTop(android.text.Spannable,android.text.Layout)> 
<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScope getAuthScope()> 
<android.telephony.gsm.SmsMessage: java.lang.String getEmailFrom()> 
<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.header.Via getOutgoingViaHeader()> 
<android.content.ContextWrapper: java.io.File getObbDir()> 
<org.apache.xpath.axes.AxesWalker: int getAnalysisBits()> 
<android.view.AbsSavedState: android.os.Parcelable getSuperState()> 
<android.media.Metadata: java.util.Date getDate(int)> 
<org.apache.xalan.templates.DecimalFormatProperties: java.text.DecimalFormatSymbols getDecimalFormatSymbols()> 
<android.widget.TextView: int getLineCount()> 
<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()> 
<android.hardware.Sensor: float getMaximumRange()> 
<org.apache.harmony.xml.parsers.SAXParserImpl: org.xml.sax.Parser getParser()> 
<org.apache.xalan.processor.StylesheetHandler: java.lang.String getNamespaceForPrefix(java.lang.String)> 
<android.view.ViewConfiguration: int getScaledDoubleTapSlop()> 
<org.apache.xpath.axes.WalkerFactory: org.apache.xpath.patterns.StepPattern loadSteps(org.apache.xpath.axes.MatchPatternIterator,org.apache.xpath.compiler.Compiler,int,int)> 
<org.apache.xalan.processor.ProcessorStylesheetElement: org.apache.xalan.templates.Stylesheet getStylesheetRoot(org.apache.xalan.processor.StylesheetHandler)> 
<gov.nist.javax.sip.address.SipUri: java.lang.String getLrParam()> 
<android.filterpacks.imageproc.BitmapSource: void loadImage(android.filterfw.core.FilterContext)> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: org.w3c.dom.NodeList getChildNodes()> 
<android.os.UserManager: java.util.List getUsers()> 
<android.media.videoeditor.OverlayFrame: java.lang.String getBitmapImageFileName()> 
<android.content.Intent: java.util.ArrayList getParcelableArrayListExtra(java.lang.String)> 
<android.support.v4.widget.SimpleCursorAdapter: android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder()> 
<org.apache.xpath.axes.LocPathIterator: org.apache.xml.utils.PrefixResolver getPrefixResolver()> 
<java.security.KeyStore: void load(java.security.KeyStore$LoadStoreParameter)> 
<java.security.GuardedObject: java.lang.Object getObject()> 
<android.telephony.SignalStrength: int getAsuLevel()> 
<android.accounts.AccountManagerService: void getAuthToken(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle)> 
<android.support.v4.app.DialogFragment: boolean getShowsDialog()> 
<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)> 
<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)> 
<javax.net.ssl.HttpsURLConnection: java.security.Principal getLocalPrincipal()> 
<android.drm.DrmManagerClient: int getDrmObjectType(android.net.Uri,java.lang.String)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl: java.lang.String[] getDefaultCipherSuites()> 
<android.test.mock.MockResources: android.graphics.drawable.Drawable getDrawable(int)> 
<org.apache.james.mime4j.decoder.UnboundedFifoByteBuffer: byte get()> 
<org.apache.http.protocol.HttpRequestHandlerRegistry: java.util.Map getHandlers()> 
<org.apache.xml.serializer.Version: int getDevelopmentVersionNum()> 
<android.media.videoeditor.MediaImageItem: int getScaledHeight()> 
<net.oauth.signature.PLAINTEXT: java.lang.String getSignature()> 
<junit.runner.TestCaseClassLoader: java.lang.Class loadClass(java.lang.String,boolean)> 
<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> 
<android.filterfw.core.InputPort: android.filterfw.core.OutputPort getSourcePort()> 
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getBeforeText()> 
<libcore.net.http.HttpsURLConnectionImpl: boolean getAllowUserInteraction()> 
<android.telephony.TelephonyManager: java.lang.String getIsimDomain()> 
<android.support.v4.view.PagerTitleStrip: int getMinHeight()> 
<android.widget.GridView: int getHorizontalSpacing()> 
<android.telephony.CellSignalStrengthLte: int getLevel()> 
<org.apache.xalan.templates.TemplateList: org.apache.xalan.templates.TemplateSubPatternAssociation getHead(java.lang.String)> 
<libcore.net.http.HttpResponseCache: java.net.CacheResponse get(java.net.URI,java.lang.String,java.util.Map)> 
<org.apache.harmony.security.provider.cert.X509CRLEntryImpl: java.math.BigInteger getSerialNumber()> 
<java.security.cert.X509CertSelector: java.util.Set getPolicy()> 
<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.Transition getTransition(java.lang.String)> 
<java.lang.reflect.Field: float getFloat(java.lang.Object)> 
<android.view.MotionEvent: float getHistoricalPressure(int)> 
<android.provider.MediaStore: android.net.Uri getMediaScannerUri()> 
<org.apache.xalan.templates.ElemApplyTemplates: java.lang.String getNodeName()> 
<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.Drawable getDrawable()> 
<android.widget.Spinner: int getBaseline()> 
<android.media.MediaFormat: java.util.Map getMap()> 
<android.database.sqlite.SQLiteDatabase: java.util.ArrayList getActiveDatabases()> 
<android.media.videoeditor.AudioTrack: int getDuckedTrackVolume()> 
<android.app.admin.DevicePolicyManager: int getPasswordMinimumUpperCase(android.content.ComponentName,int)> 
<android.filterfw.core.OutputPort: android.filterfw.core.Filter getTargetFilter()> 
<android.view.TextureView: int getLayerType()> 
<android.net.http.Request: void setLoadingPaused(boolean)> 
<gov.nist.javax.sip.header.Contact: int getExpires()> 
<java.io.BufferedReader: boolean ready()> 
<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getPeerName()> 
<android.text.Layout: float getLineRight(int)> 
<android.net.http.HttpsConnection: javax.net.ssl.SSLSocketFactory getSocketFactory()> 
<android.content.res.ObbScanner: android.content.res.ObbInfo getObbInfo(java.lang.String)> 
<android.webkit.WebSettings: boolean getAllowContentAccess()> 
<android.view.InputDevice: java.lang.String getName()> 
<gov.nist.javax.sip.stack.SIPTransaction: int getViaPort()> 
<org.apache.xpath.functions.SecuritySupport: java.lang.String getSystemProperty(java.lang.String)> 
<java.util.jar.JarEntry: java.security.CodeSigner[] getCodeSigners()> 
<javax.obex.ObexHelper: byte[] getTagValue(byte,byte[])> 
<android.graphics.drawable.DrawableContainer: android.graphics.Insets getLayoutInsets()> 
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)> 
<android.net.wifi.WifiInfo: int getNetworkId()> 
<android.preference.Preference: java.lang.String getKey()> 
<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)> 
<gov.nist.javax.sip.header.Via: java.lang.String getProtocol()> 
<android.webkit.BrowserFrame: android.webkit.CallbackProxy getCallbackProxy()> 
<org.apache.harmony.security.x509.AuthorityKeyIdentifier: org.apache.harmony.security.x509.GeneralNames getAuthorityCertIssuer()> 
<android.webkit.WebSettingsClassic: java.lang.String getUserAgentString()> 
<android.os.RemoteCallbackList: int getRegisteredCallbackCount()> 
<java.security.cert.X509CertSelector: java.util.Collection getPathToNames()> 
<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.reflect.Constructor getLogConstructor()> 
<java.lang.VMClassLoader: java.net.URL getResource(java.lang.String)> 
<java.security.spec.X509EncodedKeySpec: byte[] getEncoded()> 
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: long getState()> 
<android.app.PendingIntent: java.lang.String getCreatorPackage()> 
<java.io.StringReader: boolean ready()> 
<java.security.spec.ECFieldF2m: int getM()> 
<org.apache.xpath.axes.OneStepIterator: int getLength()> 
<android.test.InstrumentationTestRunner: java.lang.ClassLoader getLoader()> 
<java.net.Socket: int getLocalPort()> 
<android.telephony.ServiceState: int getCdmaEriIconMode()> 
<android.app.ContextImpl: android.app.ContextImpl getImpl(android.content.Context)> 
<android.net.ThrottleManager: long getByteCount(java.lang.String,int,int,int)> 
<org.apache.xml.dtm.ref.NodeLocator: int getLineNumber()> 
<android.webkit.WebViewClassic: int getProgress()> 
<android.view.View: android.view.HardwareRenderer getHardwareRenderer()> 
<android.app.ActivityThread: android.content.res.Resources getTopLevelResources(java.lang.String,int,android.content.res.Configuration,android.app.LoadedApk)> 
<libcore.icu.ICU: java.util.Locale[] getAvailableLocales()> 
<org.apache.harmony.security.provider.cert.X509CertImpl: byte[] getExtensionValue(java.lang.String)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.security.cert.Certificate[] getPeerCertificates()> 
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLength(android.content.ComponentName,int)> 
<android.content.SyncQueue: java.util.Collection getOperations()> 
<org.apache.harmony.xnet.provider.jsse.CipherSuite: java.lang.String getBulkEncryptionAlgorithm()> 
<android.media.audiofx.EnvironmentalReverb: int getReflectionsDelay()> 
<java.sql.SQLWarning: java.sql.SQLWarning getNextWarning()> 
<org.apache.xalan.templates.StylesheetRoot: java.util.Properties getOutputProperties()> 
<android.gesture.GestureLibrary: android.gesture.Learner getLearner()> 
<android.support.v4.view.accessibility.AccessibilityRecordCompat: int getAddedCount()> 
<android.os.storage.StorageManager: java.lang.String[] getVolumePaths()> 
<org.apache.xpath.compiler.OpMap: int getFirstChildPosOfStep(int)> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: java.lang.String getNodeNameX(int)> 
<org.apache.commons.codec.net.BCodec: byte[] doDecoding(byte[])> 
<android.media.videoeditor.MediaItem: android.media.videoeditor.Effect getEffect(java.lang.String)> 
<org.apache.xpath.axes.AxesWalker: int getCurrentNode()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: java.lang.String getNodeValue()> 
<android.view.View: int getMeasuredState()> 
<android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: java.lang.String getNodeName(int)> 
<org.apache.xml.dtm.ref.IncrementalSAXSource_Filter: org.apache.xml.dtm.ref.CoroutineManager getCoroutineManager()> 
<android.support.v4.view.ViewCompat: android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)> 
<java.util.concurrent.atomic.AtomicLong: long getAndAdd(long)> 
<java.text.RuleBasedBreakIterator: java.text.CharacterIterator getText()> 
<android.text.method.BaseMovementMethod: int getScrollBoundsLeft(android.widget.TextView)> 
<gov.nist.javax.sip.header.Allow: java.lang.String getMethod()> 
<java.io.DataInputStream: float readFloat()> 
<org.apache.xml.utils.DOM2Helper: java.lang.String getLocalNameOfNode(org.w3c.dom.Node)> 
<gov.nist.javax.sip.header.SIPDate: java.util.Calendar getJavaCal()> 
<android.content.res.TypedArray: java.lang.CharSequence[] getTextArray(int)> 
<android.accounts.AccountManagerService: java.lang.Integer getCredentialPermissionNotificationId(android.accounts.Account,java.lang.String,int)> 
<android.view.textservice.SpellCheckerSession: android.view.textservice.SpellCheckerInfo getSpellChecker()> 
<android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()> 
<org.apache.harmony.luni.lang.reflect.ImplForType: java.lang.reflect.Type getResolvedType()> 
<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)> 
<java.net.InterfaceAddress: java.net.InetAddress getAddress()> 
<javax.crypto.spec.OAEPParameterSpec: java.lang.String getMGFAlgorithm()> 
<android.drm.DrmManagerClient: java.lang.String getOriginalMimeType(android.net.Uri)> 
<android.telephony.CellBroadcastMessage: java.lang.String getDateString(android.content.Context)> 
<android.mtp.MtpStorage: java.lang.String getDescription()> 
<android.bluetooth.BluetoothTetheringDataTracker: android.net.LinkProperties getLinkProperties()> 
<gov.nist.javax.sip.header.AllowEvents: java.lang.String getEventType()> 
<android.widget.TextView: int getCurrentTextColor()> 
<java.text.BreakIterator: java.text.BreakIterator getSentenceInstance()> 
<libcore.net.http.RawHeaders: int getResponseCode()> 
<gov.nist.javax.sip.parser.WarningParser: gov.nist.javax.sip.header.SIPHeader parse()> 
<android.text.DynamicLayout: int[] getBlockEndLines()> 
<org.apache.xml.serializer.EncodingInfo: char getHighChar()> 
<android.content.pm.VerificationParams: int getInstallerUid()> 
<java.io.Console: java.io.Console getConsole()> 
<android.telephony.TelephonyManager: int getLteOnCdmaMode()> 
<java.io.RandomAccessFile: char readChar()> 
<org.apache.harmony.xnet.provider.jsse.ClientHello: int getType()> 
<android.app.ApplicationPackageManager: int[] getPackageGids(java.lang.String)> 
<org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream: int getBeginColumn()> 
<org.apache.xpath.axes.LocPathIterator: int getCurrentNode()> 
<org.apache.xml.dtm.ref.DTMDefaultBase: int getDocument()> 
<java.util.regex.PatternSyntaxException: java.lang.String getDescription()> 
<android.emoji.EmojiFactory: int getMinimumAndroidPua()> 
<android.view.MotionEvent: float getHistoricalTouchMinor(int)> 
<android.media.MediaCodecInfo: java.lang.String getName()> 
<android.content.res.Resources: android.content.res.XmlResourceParser loadXmlResourceParser(int,java.lang.String)> 
<android.location.Address: java.lang.String getSubThoroughfare()> 
<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaArtistNativeHelper getNativeContext()> 
<java.util.regex.PatternSyntaxException: java.lang.String getPattern()> 
<org.apache.harmony.security.provider.cert.X509CRLEntryImpl: javax.security.auth.x500.X500Principal getCertificateIssuer()> 
<java.lang.reflect.Method: int getModifiers()> 
<java.util.ArrayDeque: java.lang.Object getLast()> 
<android.widget.SearchView: java.lang.CharSequence getQuery()> 
<android.webkit.MimeTypeMap: java.lang.String getFileExtensionFromUrl(java.lang.String)> 
<java.lang.reflect.Field: int getModifiers()> 
<java.text.DecimalFormat: int getMultiplier()> 
<android.graphics.Canvas: android.graphics.Rect getClipBounds()> 
<android.widget.ImageView: boolean getCropToPadding()> 
<android.filterfw.core.AsyncRunner: android.filterfw.core.FilterGraph getGraph()> 
<android.widget.CalendarView: int getFirstDayOfWeek()> 
<java.security.cert.CertPathBuilder: java.lang.String getDefaultType()> 
<android.app.Dialog: android.content.Context getContext()> 
<android.webkit.HTML5VideoViewProxy: android.webkit.WebViewClassic getWebView()> 
<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplate getOwnerXSLTemplate()> 
<android.app.Activity: android.content.SharedPreferences getPreferences(int)> 
<javax.security.auth.Subject: java.util.Set getPublicCredentials()> 
<org.jivesoftware.smack.packet.XMPPError: java.lang.String getMessage()> 
<net.oauth.http.HttpMessage: java.lang.String getCharset(java.lang.String)> 
<org.apache.xpath.NodeSet: org.w3c.dom.Node getRoot()> 
<junit.runner.TestCaseClassLoader: java.net.URL getResource(java.lang.String)> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: java.lang.String getNamespaceURI(java.lang.String)> 
<java.io.DataInputStream: byte readByte()> 
<android.media.MediaFile: android.media.MediaFile$MediaFileType getFileType(java.lang.String)> 
<android.app.ListActivity: long getSelectedItemId()> 
<android.content.OperationApplicationException: int getNumSuccessfulYieldPoints()> 
<libcore.icu.ICU: java.util.Locale[] getAvailableDateFormatSymbolsLocales()> 
<android.content.AsyncTaskLoader: java.lang.Object onLoadInBackground()> 
<android.os.PowerManager: int getDefaultScreenBrightnessSetting()> 
<java.security.cert.CertStore: java.util.Collection getCRLs(java.security.cert.CRLSelector)> 
<android.bluetooth.BluetoothAdapter: boolean getProfileProxy(android.content.Context,android.bluetooth.BluetoothProfile$ServiceListener,int)> 
<org.apache.xalan.xslt.SecuritySupport: long getLastModified(java.io.File)> 
<java.net.InterfaceAddress: short getNetworkPrefixLength()> 
<android.mtp.MtpStorageInfo: int getStorageId()> 
<android.preference.PreferenceActivity: android.widget.Button getNextButton()> 
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getEffectiveValueSanitizer(java.lang.String)> 
<android.view.KeyEvent: android.view.KeyCharacterMap getKeyCharacterMap()> 
<android.widget.LinearLayout: android.view.View getVirtualChildAt(int)> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: org.xml.sax.ErrorHandler getErrorHandler()> 
<gov.nist.javax.sip.header.ims.PChargingFunctionAddresses: java.util.ListIterator getEventChargingFunctionAddresses()> 
<org.apache.xalan.templates.ElemValueOf: boolean getDisableOutputEscaping()> 
<java.lang.Class: java.lang.Package getPackage()> 
<android.net.wifi.WifiInfo: android.net.NetworkInfo$DetailedState getDetailedStateOf(android.net.wifi.SupplicantState)> 
<android.os.Build: java.lang.String getString(java.lang.String)> 
<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)> 
<org.apache.xalan.transformer.KeyIterator: java.util.Vector getKeyDeclarations()> 
<org.apache.xpath.patterns.StepPattern: double getMatchScore(org.apache.xpath.XPathContext,int)> 
<org.apache.james.mime4j.field.address.Mailbox: java.lang.String getDomain()> 
<java.text.NumberFormat: java.util.Currency getCurrency()> 
<org.apache.james.mime4j.field.address.Group: org.apache.james.mime4j.field.address.MailboxList getMailboxes()> 
<org.apache.commons.io.IOCase: java.lang.Object readResolve()> 
<android.renderscript.Matrix4f: void loadFrustum(float,float,float,float,float,float)> 
<android.hardware.SensorManager: float getInclination(float[])> 
<android.net.sip.SipProfile: java.lang.String getUserName()> 
<android.view.View: int getPaddingTop()> 
<android.view.GLES20Canvas: boolean getClipBounds(android.graphics.Rect)> 
<libcore.net.url.JarURLConnectionImpl: java.io.InputStream getInputStream()> 
<android.webkit.WebViewClassic: float getScale()> 
<android.net.NetworkPolicyManager: android.net.NetworkPolicy[] getNetworkPolicies()> 
<android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()> 
<android.filterfw.core.ShaderProgram: java.lang.Object getHostValue(java.lang.String)> 
<dalvik.system.profiler.PortableThreadSampler: java.lang.StackTraceElement[] getStackTrace(java.lang.Thread)> 
<android.webkit.HTML5VideoView: int getVideoLayerId()> 
<javax.net.ssl.SSLContext: java.security.Provider getProvider()> 
<android.media.Metadata: long getLong(int)> 
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()> 
<javax.obex.ClientOperation: java.lang.String getType()> 
<android.test.ActivityUnitTestCase: int getStartedActivityRequest()> 
<android.view.View: int getTextAlignment()> 
<org.xml.sax.helpers.AttributesImpl: java.lang.String getValue(java.lang.String)> 
<android.test.ActivityInstrumentationTestCase: android.app.Activity getActivity()> 
<org.apache.harmony.security.asn1.BerInputStream: int getOffset()> 
<javax.xml.transform.sax.SAXSource: org.xml.sax.XMLReader getXMLReader()> 
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.WhiteSpaceInfo getStripSpace(int)> 
<org.apache.harmony.security.provider.cert.X509CertImpl: java.lang.String getSigAlgName()> 
<org.apache.http.impl.conn.AbstractClientConnAdapter: int getSocketTimeout()> 
<java.security.cert.CertStore: java.security.cert.CertStoreParameters getCertStoreParameters()> 
<android.test.mock.MockPackageManager: java.util.List getAllPermissionGroups(int)> 
<android.test.mock.MockPackageManager: int getApplicationEnabledSetting(java.lang.String)> 
<android.net.sip.SipProfile: java.lang.String getProxyAddress()> 
<org.apache.xpath.patterns.NodeTest: int getWhatToShow()> 
<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.CallIdHeader getCallId()> 
<java.util.logging.Logger: java.util.logging.Logger getParent()> 
<gov.nist.javax.sip.header.Challenge: java.lang.String getDomain()> 
<libcore.net.http.RawHeaders: int getHttpMinorVersion()> 
<android.view.View: int getLeft()> 
<gov.nist.javax.sip.stack.MessageChannel: gov.nist.javax.sip.stack.MessageProcessor getMessageProcessor()> 
<org.jivesoftware.smack.provider.ProviderManager: java.lang.String getProviderKey(java.lang.String,java.lang.String)> 
<android.text.method.ArrowKeyMovementMethod: int getPageHeight(android.widget.TextView)> 
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String getTables()> 
<android.webkit.JWebCoreJavaBridge: java.lang.String[] getKeyStrengthList()> 
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketFactoryImpl: java.lang.String[] getDefaultCipherSuites()> 
<android.content.Context: java.lang.String getString(int)> 
<org.ccil.cowan.tagsoup.HTMLScanner: int getColumnNumber()> 
<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getTextAfterCursor(int,int)> 
<java.lang.ref.SoftReference: java.lang.Object get()> 
<java.util.logging.Handler: java.util.logging.Filter getFilter()> 
<org.apache.xalan.extensions.ObjectFactory: java.lang.ClassLoader findClassLoader()> 
<org.jivesoftware.smack.packet.Message: java.lang.String getSubject()> 
<android.content.res.Resources: android.content.res.AssetManager getAssets()> 
<android.media.videoeditor.MediaItem: boolean getRegenerateClip()> 
<org.jivesoftware.smack.provider.RawXmlIQProvider: int getTag()> 
<org.apache.harmony.xml.parsers.DocumentBuilderFactoryImpl: java.lang.Object getAttribute(java.lang.String)> 
<gov.nist.javax.sip.header.Contact: java.lang.String getSipInstanceParam()> 
<android.text.Layout: int getParagraphRight(int)> 
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: java.lang.CharSequence getClassName(java.lang.Object)> 
<android.graphics.Paint: android.graphics.MaskFilter getMaskFilter()> 
<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)> 
<java.text.FieldPosition: int getBeginIndex()> 
<android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)> 
<javax.xml.transform.sax.SAXResult: org.xml.sax.ext.LexicalHandler getLexicalHandler()> 
<java.lang.reflect.Constructor: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)> 
<android.webkit.WebSettings: boolean getDomStorageEnabled()> 
<android.text.StaticLayout: boolean getLineContainsTab(int)> 
<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x501.Name getSubject()> 
<android.support.v4.content.Loader: void onStartLoading()> 
<android.os.storage.StorageVolume: java.lang.String getPath()> 
<java.io.SequenceInputStream: int read(byte[],int,int)> 
<android.view.accessibility.AccessibilityRecord: boolean getBooleanProperty(int)> 
<java.io.Reader: int read()> 
<org.apache.xml.dtm.ref.DTMNamedNodeMap: int getLength()> 
<android.app.SearchableInfo: java.lang.String getSuggestPackage()> 
<android.preference.PreferenceScreen: android.app.Dialog getDialog()> 
<gov.nist.javax.sip.header.ContentType: java.lang.String getCharset()> 
<gov.nist.core.Host: java.lang.String getHostname()> 
<android.media.AudioService: android.media.IRingtonePlayer getRingtonePlayer()> 
<org.apache.harmony.security.provider.cert.X509CertImpl: int getBasicConstraints()> 
<android.graphics.drawable.DrawableContainer: int getMinimumHeight()> 
<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.ElemTemplate getDefaultRule()> 
<android.text.style.SubscriptSpan: int getSpanTypeId()> 
<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)> 
<java.util.GregorianCalendar: int getMinimum(int)> 
<android.net.EthernetDataTracker: android.net.NetworkInfo getNetworkInfo()> 
<org.jivesoftware.smackx.packet.MUCInitialPresence: java.lang.String getElementName()> 
<android.view.View: int getScrollX()> 
<org.apache.xml.serializer.utils.AttList: java.lang.String getType(java.lang.String)> 
<android.view.View: int getScrollY()> 
<android.bluetooth.BluetoothPan: java.util.List getDevicesMatchingConnectionStates(int[])> 
<android.net.TrafficStats: long getMobileTxPackets()> 
<android.appwidget.AppWidgetManager: android.os.Bundle getAppWidgetOptions(int)> 
<android.support.v4.content.AsyncTaskLoader: java.lang.Object onLoadInBackground()> 
<org.apache.harmony.security.x509.DNParser: int getByte(int)> 
<android.telephony.cdma.CdmaSmsCbProgramData: java.lang.String getCategoryName()> 
<android.app.SearchableInfo: int getVoiceMaxResults()> 
<org.apache.xpath.functions.FuncExtFunction: org.apache.xpath.Expression getArg(int)> 
<android.media.audiofx.Virtualizer: boolean getStrengthSupported()> 
<android.app.DownloadManager: java.lang.String getWhereClauseForIds(long[])> 
<android.location.Address: android.os.Bundle getExtras()> 
<android.text.Layout: char getEllipsisChar(android.text.TextUtils$TruncateAt)> 
<java.util.prefs.AbstractPreferences: int getInt(java.lang.String,int)> 
<org.apache.xml.dtm.ref.SecuritySupport: boolean getFileExists(java.io.File)> 
<android.graphics.Bitmap: int getWidth()> 
<android.filterfw.core.GLFrame: int getFboId()> 
<android.app.admin.DevicePolicyManager: boolean getCameraDisabled(android.content.ComponentName)> 
<org.apache.xpath.axes.PredicatedNodeTest: int getProximityPosition(int)> 
<android.view.inputmethod.InputBinding: android.os.IBinder getConnectionToken()> 
<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine getStatusLine()> 
<org.apache.xml.dtm.SecuritySupport12: java.lang.ClassLoader getSystemClassLoader()> 
<java.net.Socket: int getSoTimeout()> 
<libcore.net.http.RawHeaders: java.lang.String getFieldName(int)> 
<org.apache.harmony.security.x509.tsp.PKIStatusInfo: org.apache.harmony.security.x509.tsp.PKIFailureInfo getFailInfo()> 
<org.apache.xpath.axes.UnionPathIterator: int getAnalysisBits()> 
<java.lang.Package: java.lang.String getImplementationTitle()> 
<android.media.AudioService: boolean getBluetoothHeadset()> 
<android.widget.ListPopupWindow: int getHorizontalOffset()> 
<android.media.AudioManager: int getRouting(int)> 
<org.apache.harmony.security.pkcs7.SignedData: java.util.List getCRLs()> 
<android.graphics.Bitmap: byte[] getNinePatchChunk()> 
<android.filterpacks.performance.ThroughputFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<org.apache.xml.serializer.ToXMLSAXHandler: java.io.OutputStream getOutputStream()> 
<android.media.MediaRecorder: int getAudioSourceMax()> 
<android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()> 
<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.MsgMgr getMsgMgr()> 
<android.content.pm.ApplicationInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)> 
<android.database.CursorWrapper: double getDouble(int)> 
<android.graphics.Canvas: void getMatrix(android.graphics.Matrix)> 
<android.graphics.drawable.StateListDrawable: android.graphics.drawable.StateListDrawable$StateListState getStateListState()> 
<android.net.wifi.WifiManager: android.os.Messenger getWifiServiceMessenger()> 
<java.security.cert.CertPathBuilder: java.security.cert.CertPathBuilder getInstance(java.lang.String,java.security.Provider)> 
<android.media.videoeditor.WaveformData: int getFrameDuration()> 
<android.app.ActivityManager: int getCurrentUser()> 
<org.xml.sax.helpers.ParserAdapter: org.xml.sax.EntityResolver getEntityResolver()> 
<android.telephony.TelephonyManager: java.lang.String getMsisdn()> 
<android.nfc.NfcAdapter: android.nfc.INfcAdapter getService()> 
<org.xml.sax.helpers.AttributeListImpl: java.lang.String getName(int)> 
<android.widget.TextView: int getMaxHeight()> 
<java.security.SignedObject: java.lang.Object getObject()> 
<java.io.EmulatedFields: float get(java.lang.String,float)> 
<android.net.TrafficStats: android.net.NetworkStats getDataLayerSnapshotForUid(android.content.Context)> 
<android.widget.CompoundButton: int getCompoundPaddingLeft()> 
<android.gesture.GestureOverlayView: android.graphics.Path getGesturePath(android.graphics.Path)> 
<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)> 
<android.util.SparseIntArray: int get(int)> 
<org.apache.http.impl.io.ContentLengthInputStream: int read(byte[],int,int)> 
<android.content.ContentProviderClient: android.content.ContentProvider getLocalContentProvider()> 
<android.location.LocationRequest: int getQuality()> 
<android.telephony.TelephonyManager: int getCdmaEriIconMode()> 
<android.webkit.WebSettingsClassic: boolean getShowVisualIndicator()> 
<org.jivesoftware.smack.ConnectionConfiguration: java.lang.String getTruststoreType()> 
<android.app.DialogFragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)> 
<java.nio.HeapByteBuffer: long getLong()> 
<org.apache.http.impl.HttpConnectionMetricsImpl: long getRequestCount()> 
<libcore.net.url.FtpURLConnection: void getFile()> 
<org.apache.commons.logging.impl.Jdk14Logger: java.util.logging.Logger getLogger()> 
<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()> 
<android.os.PerformanceCollector: android.os.Bundle getBinderCounts()> 
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.HttpRequestRetryHandler createHttpRequestRetryHandler()> 
<android.view.animation.Animation: android.view.animation.Interpolator getInterpolator()> 
<android.app.ContextImpl: int getDisplayId()> 
<android.nfc.tech.BasicTagTechnology: android.nfc.Tag getTag()> 
<libcore.net.http.HttpEngine: int getResponseCode()> 
<android.hardware.SensorManager: int getSensors()> 
<android.view.ViewConfiguration: int getScrollBarSize()> 
<org.apache.xalan.templates.StylesheetRoot: boolean getIncremental()> 
<org.apache.xml.utils.SAXSourceLocator: java.lang.String getSystemId()> 
<org.apache.james.mime4j.field.address.parser.SimpleCharStream: int getLine()> 
<org.apache.harmony.security.x509.X509PublicKey: byte[] getEncoded()> 
<android.telephony.SmsCbEtwsInfo: int getWarningType()> 
<org.apache.xml.serializer.utils.AttList: int getLength()> 
<android.media.videoeditor.VideoEditorImpl: java.util.List getAllTransitions()> 
<android.text.SpannableStringInternal: int getSpanFlags(java.lang.Object)> 
<android.view.GLES20RenderLayer: android.view.HardwareCanvas getCanvas()> 
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: java.lang.String[] getEnabledCipherSuites()> 
<android.widget.TextView: int getTotalPaddingBottom()> 
<gov.nist.javax.sip.stack.TCPMessageChannel: java.lang.String getPeerAddress()> 
<android.webkit.WebSettingsClassic: boolean getUseFixedViewport()> 
<dalvik.system.CloseGuard: dalvik.system.CloseGuard get()> 
<android.view.ViewConfiguration: int getHoverTapSlop()> 
<android.widget.Toast: int getGravity()> 
<android.content.pm.ContainerEncryptionParams: byte[] getMacTag()> 
<org.apache.xalan.processor.ProcessorImport: int getStylesheetType()> 
<org.apache.xml.serializer.dom3.NamespaceSupport: java.lang.String getURI(java.lang.String)> 
<android.telephony.cdma.CdmaCellLocation: int getBaseStationLatitude()> 
<org.xml.sax.SAXParseException: java.lang.String getSystemId()> 
<android.filterpacks.imageproc.AlphaBlendFilter: android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)> 
<android.os.Environment: java.io.File getExternalStorageAppObbDirectory(java.lang.String)> 
<org.apache.http.params.HttpConnectionParams: int getSocketBufferSize(org.apache.http.params.HttpParams)> 
<android.widget.AbsSpinner: android.widget.Adapter getAdapter()> 
<android.support.v4.view.accessibility.AccessibilityManagerCompatIcs: java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager)> 
<libcore.io.ErrnoException: java.lang.String getMessage()> 
<org.apache.xalan.templates.ElemCallTemplate: org.apache.xml.utils.QName getName()> 
<java.util.concurrent.ForkJoinWorkerThread: int getEstimatedSurplusTaskCount()> 
<android.media.AudioTrack: int getStreamType()> 
<org.ccil.cowan.tagsoup.jaxp.SAXParserImpl: boolean getFeature(java.lang.String)> 
<org.apache.xpath.functions.SecuritySupport12: java.lang.ClassLoader getContextClassLoader()> 
<android.hardware.usb.UsbDevice: int getDeviceId(java.lang.String)> 
<libcore.net.http.HttpURLConnectionImpl: int getDefaultPort()> 
<android.app.ActivityManagerProxy: java.util.List getRunningAppProcesses()> 
<android.webkit.HTML5VideoView: boolean getPlayerBuffering()> 
<android.text.StaticLayout: int getEllipsisCount(int)> 
<android.view.textservice.SpellCheckerInfo: android.view.textservice.SpellCheckerSubtype getSubtypeAt(int)> 
<javax.crypto.spec.RC2ParameterSpec: int getEffectiveKeyBits()> 
<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.header.Via getViaHeader()> 
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()> 
<android.webkit.WebSettingsClassic: boolean getJavaScriptEnabled()> 
<android.test.IsolatedContext: android.content.ContentResolver getContentResolver()> 
<android.view.MotionEvent: float getRawX()> 
<org.apache.xalan.xslt.SecuritySupport12: java.lang.ClassLoader getContextClassLoader()> 
<android.view.MotionEvent: float getRawY()> 
<android.view.View: int getNextFocusRightId()> 
<android.content.ContentQueryMap: java.util.Map getRows()> 
<android.net.ConnectivityManager: java.lang.String[] getTetherableWifiRegexs()> 
<android.view.ViewRootImpl: android.view.View getView()> 
<android.test.InstrumentationTestRunner: java.util.List getBuilderRequirements()> 
<android.net.nsd.DnsSdTxtRecord: java.lang.String get(java.lang.String)> 
<libcore.net.http.HttpsURLConnectionImpl: java.lang.String getCipherSuite()> 
<org.apache.http.params.DefaultedHttpParams: org.apache.http.params.HttpParams getDefaults()> 
<javax.xml.transform.sax.SAXResult: org.xml.sax.ContentHandler getHandler()> 
<android.location.Address: java.lang.String getUrl()> 
<javax.xml.validation.SchemaFactoryFinder: javax.xml.validation.SchemaFactory createInstance(java.lang.String)> 
<android.media.RingtoneManager: boolean getStopPreviousRingtone()> 
<android.net.wifi.WifiInfo: boolean getMeteredHint()> 
<gov.nist.javax.sip.header.RAck: int getRSeqNumber()> 
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int getMovementGranularities()> 
<org.apache.xml.dtm.ref.ExpandedNameTable: int getExpandedTypeID(java.lang.String,java.lang.String,int,boolean)> 
<android.renderscript.BaseObj: java.lang.String getName()> 
<android.view.animation.Transformation: float getAlpha()> 
<org.apache.harmony.security.asn1.ASN1Integer: org.apache.harmony.security.asn1.ASN1Integer getInstance()> 
<android.webkit.WebViewClassic: void reload()> 
<java.util.Calendar: java.util.Date getTime()> 
<org.apache.james.mime4j.field.address.AddressList: org.apache.james.mime4j.field.address.Address get(int)> 
<android.view.Display: boolean getDisplayInfo(android.view.DisplayInfo)> 
<gov.nist.javax.sip.header.AllowEventsList: java.util.ListIterator getMethods()> 
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: int getPeerPort()> 
<android.webkit.WebViewClassic: java.lang.String getUrl()> 
<android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence,int)> 
<java.util.IllegalFormatCodePointException: java.lang.String getMessage()> 
<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator()> 
<org.jivesoftware.smackx.GroupChatInvitation: java.lang.String getRoomAddress()> 
<android.view.View: float getLeftFadingEdgeStrength()> 
<org.apache.harmony.xml.dom.EntityImpl: java.lang.String getPublicId()> 
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: boolean getEnableSessionCreation()> 
<android.widget.GridLayout: int getDefaultMargin(android.view.View,boolean,boolean,boolean)> 
<gov.nist.javax.sip.header.ims.PChargingVector: java.lang.String getICIDGeneratedAt()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: java.lang.String getNodeName()> 
<java.text.DecimalFormatSymbols: java.util.Currency getCurrency()> 
<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()> 
<android.app.WallpaperManager: android.app.IWallpaperManager getIWallpaperManager()> 
<org.apache.xpath.axes.FilterExprWalker: int getNextNode()> 
<libcore.net.http.HttpHandler: int getDefaultPort()> 
<android.speech.tts.EventLogger: java.lang.String getLocaleString()> 
<junit.runner.TestCaseClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)> 
<android.net.wifi.WifiManager: int getWifiApState()> 
<android.telephony.CellSignalStrengthCdma: int getLevel()> 
<org.apache.harmony.security.x501.AttributeValue: int getTag()> 
<org.apache.xalan.templates.OutputProperties: java.lang.String getProperty(java.lang.String)> 
<org.apache.xalan.templates.StylesheetRoot: java.util.Vector getKeysComposed()> 
<android.webkit.WebViewClassic: int getPageBackgroundColor()> 
<org.jivesoftware.smackx.packet.MUCInitialPresence: org.jivesoftware.smackx.packet.MUCInitialPresence$History getHistory()> 
<org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties getDefaultMethodProperties(java.lang.String)> 
<java.nio.DirectByteBuffer: int getInt()> 
<org.apache.xpath.jaxp.XPathExpressionImpl: java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)> 
<android.text.format.DateFormat: java.text.DateFormat getDateFormat(android.content.Context)> 
<org.apache.xml.utils.UnImplNode: org.w3c.dom.DOMImplementation getImplementation()> 
<org.javia.arity.Symbols: org.javia.arity.Symbol[] getAllSymbols()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: org.apache.xml.dtm.DTMAxisIterator getAxisIterator(int)> 
<android.media.AudioTrack: int getAudioFormat()> 
<org.jivesoftware.smack.packet.DataMessage: java.lang.String getRegId()> 
<android.os.Handler: android.os.Looper getLooper()> 
<android.bluetooth.BluetoothDevice: int getBondState()> 
<org.apache.xml.serializer.SecuritySupport: org.apache.xml.serializer.SecuritySupport getInstance()> 
<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.message.SIPMessage parseSIPMessage(byte[])> 
<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl getSipProvider()> 
<android.net.ConnectivityManager: boolean getMobileDataEnabled()> 
<android.content.Intent: float[] getFloatArrayExtra(java.lang.String)> 
<android.view.ViewDebug: long getViewInstanceCount()> 
<android.os.Message: android.os.Bundle getData()> 
<android.view.ViewGroup: android.graphics.Bitmap createSnapshot(android.graphics.Bitmap$Config,int,boolean)> 
<android.os.Bundle: double[] getDoubleArray(java.lang.String)> 
<org.jivesoftware.smack.packet.BindAccountRequest: java.lang.String getResource()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: org.w3c.dom.Document getOwnerDocument()> 
<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)> 
<org.apache.xpath.Arg: java.lang.String getExpression()> 
<android.telephony.ServiceState: int getRilRadioTechnology()> 
<java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.security.Provider)> 
<android.content.res.Resources: int[] getIntArray(int)> 
<android.test.mock.MockContext: android.graphics.drawable.Drawable getWallpaper()> 
<org.apache.harmony.security.pkcs8.PrivateKeyInfo: java.util.List getAttributes()> 
<java.io.ObjectInputStream: boolean readBoolean()> 
<org.apache.harmony.security.x509.PrivateKeyUsagePeriod: java.util.Date getNotAfter()> 
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(java.lang.String)> 
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> 
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPackageName()> 
<gov.nist.javax.sip.header.RAck: long getCSequenceNumber()> 
<org.apache.http.impl.SocketHttpClientConnection: java.net.InetAddress getLocalAddress()> 
<android.widget.Switch: java.lang.CharSequence getTextOn()> 
<org.javia.arity.DoubleStack: double[] getIm()> 
<android.content.ContextWrapper: java.io.File getDatabasePath(java.lang.String)> 
<android.content.ContentResolver: android.content.SyncAdapterType[] getSyncAdapterTypes()> 
<java.security.cert.PKIXCertPathValidatorResult: java.security.cert.PolicyNode getPolicyTree()> 
<android.webkit.WebSettingsClassic: boolean getNavDump()> 
<android.test.ClassPathPackageInfo: java.util.Set getSubpackages()> 
<org.apache.xml.serializer.utils.URI: int getPort()> 
<android.media.RingtoneManager: android.net.Uri getValidRingtoneUriFromCursorAndClose(android.content.Context,android.database.Cursor)> 
<java.security.KeyPairGenerator: java.security.Provider getProvider()> 
<org.apache.xpath.compiler.Lexer: int getTokenQueuePosFromMap(int)> 
<android.app.admin.DeviceAdminInfo: android.content.ComponentName getComponent()> 
<android.view.GLES20TextureLayer: android.view.HardwareCanvas getCanvas()> 
<android.preference.Preference: int getTitleRes()> 
<android.app.PendingIntent: android.app.PendingIntent getActivityAsUser(android.content.Context,int,android.content.Intent,int,android.os.Bundle,android.os.UserHandle)> 
<java.security.ProtectionDomain: java.security.Principal[] getPrincipals()> 
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getUrlAndSpaceLegal()> 
<gov.nist.javax.sip.header.To: java.lang.String getTag()> 
<sun.misc.Unsafe: sun.misc.Unsafe getUnsafe()> 
<jp.co.omronsoft.openwnn.TextCandidatesViewManager: int getViewType()> 
<org.ccil.cowan.tagsoup.AttributesImpl: int getIndex(java.lang.String,java.lang.String)> 
<org.apache.james.mime4j.field.address.parser.TokenMgrError: java.lang.String getMessage()> 
<gov.nist.javax.sip.parser.RouteParser: gov.nist.javax.sip.header.SIPHeader parse()> 
<gov.nist.javax.sip.stack.SIPClientTransaction: javax.sip.message.Request createCancel()> 
<android.widget.TextView: java.lang.CharSequence getText()> 
<org.apache.harmony.security.provider.cert.X509CertImpl: long getNotBeforeInternal()> 
<org.xmlpull.v1.XmlPullParserException: java.lang.Throwable getDetail()> 
<org.apache.xml.serializer.ToUnknownStream: javax.xml.transform.Transformer getTransformer()> 
<android.accounts.ChooseTypeAndAccountActivity: java.lang.String[] getListOfDisplayableOptions(java.util.ArrayList)> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: java.lang.String getNamespaceURI()> 
<android.widget.TextView: boolean getHorizontallyScrolling()> 
<android.widget.ActivityChooserModel: int getActivityIndex(android.content.pm.ResolveInfo)> 
<android.preference.PreferenceScreen: android.widget.ListAdapter getRootAdapter()> 
<android.net.WebAddress: java.lang.String getHost()> 
<org.apache.xalan.xslt.ObjectFactory: java.lang.ClassLoader findClassLoader()> 
<android.test.InstrumentationTestRunner: android.os.Bundle getBundle()> 
<java.security.KeyStore: java.lang.String getDefaultType()> 
<gov.nist.javax.sip.header.extensions.SessionExpires: int getExpires()> 
<org.apache.xalan.templates.ElemLiteralResult: java.lang.String getLocalName()> 
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getNonce()> 
<android.os.MemoryFile: java.io.OutputStream getOutputStream()> 
<android.animation.ValueAnimator: java.lang.Object getAnimatedValue(java.lang.String)> 
<android.graphics.Region: boolean getBounds(android.graphics.Rect)> 
<org.javia.arity.DoubleStack: double[] getRe()> 
<org.apache.xml.serializer.dom3.DOMLocatorImpl: int getUtf16Offset()> 
<jp.co.omronsoft.openwnn.EN.OpenWnnEngineEN: jp.co.omronsoft.openwnn.WnnWord getNextCandidate()> 
<libcore.net.http.HttpConnection: java.net.Socket getSocket()> 
<android.os.UserManager: android.graphics.Bitmap getUserIcon(int)> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: org.xml.sax.EntityResolver getEntityResolver()> 
<org.apache.http.impl.client.AbstractAuthenticationHandler: java.util.Map parseChallenges(org.apache.http.Header[])> 
<java.net.Socks4Message: java.lang.String getUserId()> 
<android.app.SearchableInfo: android.content.Context getProviderContext(android.content.Context,android.content.Context)> 
<jp.co.omronsoft.openwnn.DefaultSoftKeyboard: int getKeyboardType()> 
<android.net.SntpClient: long read32(byte[],int)> 
<org.apache.http.impl.client.RoutedRequest: org.apache.http.conn.routing.HttpRoute getRoute()> 
<org.apache.xpath.axes.NodeSequence: int getRoot()> 
<org.apache.http.params.DefaultedHttpParams: java.util.Set getLocalNames()> 
<org.apache.xml.serializer.ToUnknownStream: int getIndentAmount()> 
<org.apache.xalan.processor.StylesheetHandler: org.w3c.dom.Node getOriginatingNode()> 
<org.apache.xpath.objects.XString: int getType()> 
<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String getOutputProperty(java.lang.String)> 
<android.bluetooth.BluetoothHeadset: int getPriority(android.bluetooth.BluetoothDevice)> 
<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)> 
<java.text.StringCharacterIterator: int getBeginIndex()> 
<android.mtp.MtpDatabase: android.mtp.MtpPropertyList getObjectPropertyList(long,int,long,int,int)> 
<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)> 
<gov.nist.javax.sip.header.Via: gov.nist.core.NameValueList getViaParms()> 
<android.support.v4.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int)> 
<android.view.View: android.content.Context getContext()> 
<android.view.View: android.view.Display getDisplay()> 
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByType(java.lang.String)> 
<android.content.ContentResolver: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)> 
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getLocalName()> 
<android.mtp.MtpDatabase: int getNumObjects(int,int,int)> 
<org.apache.xml.dtm.ref.DTMDefaultBase: int getExpandedTypeID(int)> 
<gov.nist.core.LexerCore: int getPtr()> 
<java.io.EmulatedFieldsForLoading: double get(java.lang.String,double)> 
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void getBoundsInScreen(java.lang.Object,android.graphics.Rect)> 
<org.apache.xml.utils.SecuritySupport12: boolean getFileExists(java.io.File)> 
<org.apache.james.mime4j.field.datetime.parser.ParseException: java.lang.String getMessage()> 
<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.Effect parseEffect(org.xmlpull.v1.XmlPullParser,android.media.videoeditor.MediaItem)> 
<org.jivesoftware.smack.PacketReader: long getLastActive()> 
<android.net.NetworkTemplate: int getMatchRule()> 
<org.apache.xml.serializer.ToUnknownStream: java.io.Writer getWriter()> 
<android.mtp.MtpObjectInfo: int getProtectionStatus()> 
<android.content.Intent: long[] getLongArrayExtra(java.lang.String)> 
<android.content.res.Resources: void finishPreloading()> 
<java.math.MathContext: java.math.RoundingMode getRoundingMode()> 
<android.hardware.Sensor: int getVersion()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: java.lang.String getDocumentTypeDeclarationSystemIdentifier()> 
<javax.crypto.SecretKeyFactory: java.security.spec.KeySpec getKeySpec(javax.crypto.SecretKey,java.lang.Class)> 
<org.apache.http.util.VersionInfo: java.lang.String getUserAgent(java.lang.String,java.lang.String,java.lang.Class)> 
<javax.xml.datatype.FactoryFinder: java.lang.ClassLoader findClassLoader()> 
<android.text.DynamicLayout: int getEllipsisCount(int)> 
<android.widget.TextView: float getTextSize()> 
<java.net.URLConnection: java.net.FileNameMap getFileNameMap()> 
<org.apache.http.conn.routing.RouteTracker: int getHopCount()> 
<org.apache.harmony.xml.dom.DocumentImpl: java.lang.String getDocumentURI()> 
<android.view.animation.LayoutAnimationController: android.view.animation.Animation getAnimation()> 
<android.mtp.MtpDevice: byte[] getThumbnail(int)> 
<java.lang.Class: java.lang.annotation.Annotation[] getDeclaredAnnotations()> 
<org.apache.commons.io.input.CharSequenceReader: int read(char[],int,int)> 
<libcore.net.http.RequestHeaders: java.lang.String getIfModifiedSince()> 
<android.graphics.drawable.PictureDrawable: int getIntrinsicHeight()> 
<java.util.concurrent.RecursiveAction: java.lang.Object getRawResult()> 
<android.media.MediaCrypto: byte[] getByteArrayFromUUID(java.util.UUID)> 
<android.widget.NumberPicker: float getBottomFadingEdgeStrength()> 
<android.telephony.SmsCbMessage: java.lang.String getLanguageCode()> 
<gov.nist.core.StringTokenizer: java.util.Vector getLines()> 
<java.text.DecimalFormat: int getMaximumIntegerDigits()> 
<java.text.DateFormat: java.util.Locale[] getAvailableLocales()> 
<android.app.admin.DevicePolicyManager: int getPasswordMinimumUpperCase(android.content.ComponentName)> 
<android.view.textservice.SentenceSuggestionsInfo: int getOffsetAt(int)> 
<android.view.ViewConfiguration: int getDoubleTapTimeout()> 
<android.content.res.Resources: int getInteger(int)> 
<android.view.TextureView: android.graphics.Bitmap getBitmap(android.graphics.Bitmap)> 
<android.net.TrafficStats: long getTotalRxBytes()> 
<android.telephony.gsm.SmsMessage: int getTPLayerLengthForPDU(java.lang.String)> 
<libcore.net.http.RequestHeaders: java.lang.String getIfNoneMatch()> 
<org.apache.http.entity.InputStreamEntity: java.io.InputStream getContent()> 
<android.media.videoeditor.MediaVideoItem: long getBoundaryEndTime()> 
<android.renderscript.ScriptIntrinsicBlur: android.renderscript.Script$FieldID getFieldID_Input()> 
<android.widget.DateTimeView: java.text.DateFormat getTimeFormat()> 
<java.nio.DirectByteBuffer: char getChar()> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int getExpandedTypeID2(int)> 
<android.database.sqlite.SQLiteCursor: int getColumnIndex(java.lang.String)> 
<org.apache.xml.utils.TreeWalker: org.xml.sax.ContentHandler getContentHandler()> 
<gov.nist.javax.sip.header.Accept: java.lang.String getContentSubType()> 
<javax.crypto.spec.SecretKeySpec: byte[] getEncoded()> 
<org.apache.xml.serializer.ToUnknownStream: boolean getOmitXMLDeclaration()> 
<android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri)> 
<gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.message.Request createRequest(javax.sip.address.URI,java.lang.String,javax.sip.header.CallIdHeader,javax.sip.header.CSeqHeader,javax.sip.header.FromHeader,javax.sip.header.ToHeader,java.util.List,javax.sip.header.MaxForwardsHeader,javax.sip.header.ContentTypeHeader,byte[])> 
<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String getDomain()> 
<android.widget.NumberPicker: java.lang.String[] getDisplayedValues()> 
<android.app.SharedPreferencesImpl: java.util.Map getAll()> 
<android.widget.RemoteViewsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> 
<android.content.pm.PackageParser: java.lang.String parsePackageName(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,int,java.lang.String[])> 
<jp.co.omronsoft.openwnn.ComposingText: int getCursor(int)> 
<gov.nist.javax.sip.header.Via: int getTTL()> 
<android.filterfw.core.Filter: java.util.Collection getOutputPorts()> 
<gov.nist.core.HostPort: gov.nist.core.Host getHost()> 
<android.widget.TextView: android.text.Editable getEditableText()> 
<java.net.URL: int getDefaultPort()> 
<java.util.TimeZone: java.lang.String getID()> 
<android.webkit.WebView: android.graphics.Bitmap getFavicon()> 
<android.gesture.GestureOverlayView: int getGestureColor()> 
<android.app.ActivityGroup: android.app.LocalActivityManager getLocalActivityManager()> 
<java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone,java.util.Locale)> 
<android.graphics.drawable.Drawable: int getIntrinsicWidth()> 
<android.app.WallpaperManager: android.app.WallpaperManager getInstance(android.content.Context)> 
<android.test.mock.MockResources: java.lang.CharSequence getText(int,java.lang.CharSequence)> 
<gov.nist.javax.sip.address.Authority: int getPort()> 
<gov.nist.javax.sip.header.StatusLine: java.lang.String getVersionMajor()> 
<org.apache.harmony.xml.dom.NodeImpl: org.apache.harmony.xml.dom.NodeImpl getNamespacingElement()> 
<android.renderscript.RenderScriptGL: int getWidth()> 
<java.util.SimpleTimeZone: int getRawOffset()> 
<gov.nist.javax.sip.stack.SIPTransactionStack: javax.sip.address.Hop getNextHop(gov.nist.javax.sip.message.SIPRequest)> 
<android.telephony.ServiceState: java.lang.String getOperatorAlphaLong()> 
<org.apache.http.impl.conn.tsccm.WaitingThread: java.util.concurrent.locks.Condition getCondition()> 
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getContentDescription()> 
<android.preference.PreferenceFragment: android.preference.PreferenceManager getPreferenceManager()> 
<org.apache.xalan.templates.ElemCallTemplate: java.lang.String getNodeName()> 
<android.graphics.drawable.DrawableContainer: int getChangingConfigurations()> 
<android.mtp.MtpStorageInfo: long getFreeSpace()> 
<gov.nist.javax.sip.header.AcceptLanguage: float getQValue()> 
<android.media.videoeditor.Effect: long getDuration()> 
<gov.nist.javax.sip.stack.MessageChannel: java.lang.String getKey(gov.nist.core.HostPort,java.lang.String)> 
<net.oauth.http.HttpMessage: java.lang.String getContentCharset()> 
<org.xmlpull.v1.sax2.Driver: java.lang.Object getProperty(java.lang.String)> 
<java.text.DecimalFormatSymbols: char getZeroDigit()> 
<android.content.ContextWrapper: java.io.File getExternalCacheDir()> 
<org.jivesoftware.smack.PacketReader: org.jivesoftware.smack.packet.StreamError parseStreamError(org.xmlpull.v1.XmlPullParser)> 
<android.os.Parcel: java.util.ArrayList readArrayList(java.lang.ClassLoader)> 
<org.apache.harmony.security.provider.cert.X509CertImpl: byte[] getTBSCertificate()> 
<android.test.mock.MockResources: int getDimensionPixelOffset(int)> 
<android.nfc.tech.NfcBarcode: android.nfc.Tag getTag()> 
<java.io.EmulatedFields: int get(java.lang.String,int)> 
<java.io.WriteAbortedException: java.lang.Throwable getCause()> 
<org.apache.http.message.BasicLineParser: org.apache.http.RequestLine parseRequestLine(java.lang.String,org.apache.http.message.LineParser)> 
<java.lang.Package: java.lang.String getSpecificationTitle()> 
<org.javia.arity.SimpleCodeGen: org.javia.arity.Symbol getSymbol(org.javia.arity.Token)> 
<android.content.Intent: float getFloatExtra(java.lang.String,float)> 
<gov.nist.javax.sip.stack.SIPTransactionErrorEvent: int getErrorID()> 
<android.os.Environment: java.io.File getExternalStorageAppDataDirectory(java.lang.String)> 
<android.app.ApplicationPackageManager: java.lang.String getNameForUid(int)> 
<android.widget.Switch: int getSwitchPadding()> 
<org.apache.harmony.xml.ExpatReader: org.xml.sax.ContentHandler getContentHandler()> 
<android.net.SSLCertificateSocketFactory: javax.net.ssl.SSLSocketFactory getInsecure(int,android.net.SSLSessionCache)> 
<java.text.DecimalFormat: java.lang.String getNegativeSuffix()> 
<libcore.net.http.ResponseHeaders: java.lang.String getConnection()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPublicKey: byte[] getEncoded()> 
<android.renderscript.Allocation: int getUsage()> 
<java.util.concurrent.CyclicBarrier: int getParties()> 
<org.apache.xml.serializer.ToTextSAXHandler: java.io.OutputStream getOutputStream()> 
<android.webkit.WebSettings: java.lang.String getDefaultTextEncodingName()> 
<android.telephony.gsm.SmsMessage: android.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,short,byte[],boolean)> 
<android.filterfw.core.Frame: int getBindingType()> 
<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.javax.sip.header.SIPHeader parse()> 
<android.net.http.Headers: java.lang.String getContentEncoding()> 
<android.hardware.Sensor: float getPower()> 
<android.text.method.WordIterator: int getBeginning(int)> 
<org.xml.sax.helpers.AttributeListImpl: java.lang.String getValue(java.lang.String)> 
<android.filterfw.core.GLFrame: int[] getInts()> 
<org.apache.harmony.security.provider.cert.X509CRLImpl: java.util.Date getNextUpdate()> 
<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: org.apache.harmony.luni.lang.reflect.ImplForVariable parseFormalTypeParameter()> 
<android.app.ActivityManagerProxy: android.app.ActivityManager$TaskThumbnails getTaskThumbnails(int)> 
<android.widget.SimpleExpandableListAdapter: int getChildrenCount(int)> 
<android.filterfw.core.FrameFormat: int getDepth()> 
<android.telephony.SignalStrength: int getCdmaEcio()> 
<javax.xml.xpath.XPathException: java.lang.Throwable getCause()> 
<android.app.ActivityManager: java.util.List getRunningExternalApplications()> 
<org.apache.xpath.functions.FuncExtFunction: java.lang.String getNamespace()> 
<android.gesture.GestureStore: java.util.Set getGestureEntries()> 
<android.util.LruCache: java.lang.Object get(java.lang.Object)> 
<org.apache.commons.logging.impl.WeakHashtable: java.lang.Object get(java.lang.Object)> 
<android.app.ActivityThread: android.app.ActivityThread$ApplicationThread getApplicationThread()> 
<java.util.concurrent.locks.AbstractOwnableSynchronizer: java.lang.Thread getExclusiveOwnerThread()> 
<org.apache.harmony.security.provider.cert.X509CertFactoryImpl: java.security.cert.Certificate getCertificate(byte[])> 
<org.apache.xpath.objects.XRTreeFrag: java.lang.String getTypeString()> 
<org.apache.xml.utils.UnImplNode: java.lang.Object getFeature(java.lang.String,java.lang.String)> 
<android.test.mock.MockPackageManager: java.lang.String getNameForUid(int)> 
<org.apache.xalan.processor.TransformerFactoryImpl: boolean getFeature(java.lang.String)> 
<org.apache.xpath.res.XPATHErrorResources: java.lang.Object[][] getContents()> 
<java.util.concurrent.atomic.AtomicIntegerArray: int getAndDecrement(int)> 
<android.app.ContextImpl: java.io.File getExternalFilesDir(java.lang.String)> 
<jp.co.omronsoft.openwnn.TextCandidates1LineViewManager: android.widget.TextView getFocusedView()> 
<org.apache.http.impl.client.DefaultUserTokenHandler: java.lang.Object getUserToken(org.apache.http.protocol.HttpContext)> 
<javax.xml.transform.sax.SAXSource: java.lang.String getSystemId()> 
<android.filterfw.core.VertexFrame: java.nio.ByteBuffer getData()> 
<org.apache.xml.serializer.OutputPropertyUtils: int getIntProperty(java.lang.String,java.util.Properties)> 
<gov.nist.javax.sip.stack.TCPMessageChannel: int getPeerPacketSourcePort()> 
<java.security.cert.PKIXParameters: java.util.List getCertPathCheckers()> 
<android.database.sqlite.SQLiteDebug: android.database.sqlite.SQLiteDebug$PagerStats getDatabaseInfo()> 
<java.sql.SQLException: java.sql.SQLException getNextException()> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM: int getDocumentRoot(int)> 
<java.net.Socket: int getTrafficClass()> 
<org.apache.harmony.xnet.provider.jsse.KeyManagerImpl: java.lang.String[] getClientAliases(java.lang.String,java.security.Principal[])> 
<android.preference.Preference: android.os.Bundle getExtras()> 
<android.telephony.SmsCbMessage: android.telephony.SmsCbLocation getLocation()> 
<net.oauth.signature.RSA_SHA1: java.security.PublicKey getPublicKeyFromDer(byte[])> 
<org.apache.xml.utils.res.StringArrayWrapper: int getLength()> 
<gov.nist.javax.sip.parser.ParametersParser: void parseNameValueList(gov.nist.javax.sip.header.ParametersHeader)> 
<android.graphics.drawable.ColorDrawable: int getOpacity()> 
<android.widget.AbsListView: int getCheckedItemCount()> 
<org.apache.xml.utils.res.LongArrayWrapper: long getLong(int)> 
<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.lang.String)> 
<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader)> 
<libcore.net.http.HttpsURLConnectionImpl: java.io.InputStream getErrorStream()> 
<android.webkit.WebSettings: android.webkit.WebSettings$TextSize getTextSize()> 
<android.media.AudioTrack: int getState()> 
<org.apache.http.impl.conn.DefaultClientConnection: java.lang.Object getAttribute(java.lang.String)> 
<android.nfc.tech.IsoDep: android.nfc.Tag getTag()> 
<android.media.ExifInterface: double getAltitude(double)> 
<android.widget.VideoView: int getDuration()> 
<android.nfc.tech.MifareUltralight: android.nfc.tech.MifareUltralight get(android.nfc.Tag)> 
<android.widget.SearchView: int getInputType()> 
<org.apache.http.protocol.BasicHttpProcessor: int getRequestInterceptorCount()> 
<android.telephony.gsm.GsmCellLocation: int getLac()> 
<android.text.method.BaseMovementMethod: int getScrollBoundsRight(android.widget.TextView)> 
<org.apache.harmony.xnet.provider.jsse.ProtocolVersion: org.apache.harmony.xnet.provider.jsse.ProtocolVersion getByName(java.lang.String)> 
<android.mtp.MtpDeviceInfo: java.lang.String getVersion()> 
<org.jivesoftware.smack.util.Cache: int getMaxCacheSize()> 
<org.apache.harmony.security.provider.crypto.RandomBitsSupplier: byte[] getUnixDeviceRandom(int)> 
<java.util.UnknownFormatConversionException: java.lang.String getMessage()> 
<org.apache.james.mime4j.message.Header: java.util.List getFields(java.lang.String)> 
<org.apache.xpath.compiler.XPathParser: int getFunctionToken(java.lang.String)> 
<android.text.format.DateUtils: java.lang.String getMonthString(int,int)> 
<org.apache.http.message.BasicStatusLine: int getStatusCode()> 
<android.preference.ListPreference: java.lang.String getValue()> 
<android.net.wifi.p2p.WifiP2pWfdInfo: java.lang.String getDeviceInfoHex()> 
<android.mtp.MtpObjectInfo: int getThumbCompressedSize()> 
<android.app.ActivityOptions: android.graphics.Bitmap getThumbnail()> 
<java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int)> 
<android.media.videoeditor.MediaImageItem: java.lang.String getScaledImageFileName()> 
<android.filterfw.core.AsyncRunner: java.lang.Exception getError()> 
<android.test.mock.MockContext: java.io.File getObbDir()> 
<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getLastChildElem()> 
<javax.obex.ClientOperation: javax.obex.HeaderSet getReceivedHeader()> 
<android.app.SearchableInfo: int getSettingsDescriptionId()> 
<org.apache.xpath.NodeSetDTM: org.apache.xml.dtm.DTM getDTM(int)> 
<java.util.concurrent.ForkJoinTask: java.lang.Object get()> 
<java.net.PlainDatagramSocketImpl: int getTimeToLive()> 
<java.text.DecimalFormat: java.lang.String getPositivePrefix()> 
<java.lang.Thread: java.util.Map getAllStackTraces()> 
<android.net.DhcpInfoInternal: java.util.Collection getRoutes()> 
<java.sql.Date: int getHours()> 
<android.view.accessibility.AccessibilityNodeInfo: void getBoundsInScreen(android.graphics.Rect)> 
<java.net.SocketImpl: java.net.InetAddress getInetAddress()> 
<org.apache.xml.serializer.utils.AttList: java.lang.String getLocalName(int)> 
<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int getStartNode()> 
<android.widget.SimpleExpandableListAdapter: long getChildId(int,int)> 
<org.apache.xml.serializer.Version: int getReleaseVersionNum()> 
<android.widget.FastScroller: void getSectionsFromIndexer()> 
<android.media.MediaActionSound: void load(int)> 
<org.kxml2.io.KXmlParser: char[] getTextCharacters(int[])> 
<java.math.BigInteger: int getLowestSetBit()> 
<java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)> 
<java.net.NetworkInterface: java.net.NetworkInterface getByName(java.lang.String)> 
<org.jivesoftware.smackx.packet.VCard: byte[] getBytes(java.net.URL)> 
<android.os.Bundle: byte[] getByteArray(java.lang.String)> 
<java.net.URLConnection: int getReadTimeout()> 
<android.widget.ListPopupWindow: int getHeight()> 
<org.apache.xalan.templates.NamespaceAlias: java.lang.String getStylesheetPrefix()> 
<org.apache.xalan.templates.StylesheetRoot: boolean getOptimizer()> 
<dalvik.system.CloseGuard: dalvik.system.CloseGuard$Reporter getReporter()> 
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script$KernelID getKernelIDDstAtop()> 
<javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.security.Provider)> 
<libcore.net.http.RequestHeaders: int getMinFreshSeconds()> 
<android.animation.ValueAnimator: long getDuration()> 
<android.widget.AdapterView: int getFirstVisiblePosition()> 
<android.webkit.WebView: int getContentHeight()> 
<android.accounts.AccountManagerService: android.accounts.AccountAndUser[] getAccounts(int[])> 
<java.nio.charset.CharsetDecoder: java.nio.CharBuffer decode(java.nio.ByteBuffer)> 
<java.net.InetAddress: java.lang.String getHostAddress()> 
<org.apache.xalan.templates.DecimalFormatProperties: char getDigit()> 
<android.graphics.Paint: float getTextRunAdvances(java.lang.String,int,int,int,int,int,float[],int)> 
<android.widget.RelativeLayout: int getRelatedViewBaseline(int[],int)> 
<gov.nist.javax.sip.header.Event: java.lang.String getEventType()> 
<org.apache.commons.codec.net.URLCodec: java.lang.String decode(java.lang.String)> 
<java.io.InputStreamReader: boolean ready()> 
<android.widget.Switch: android.graphics.drawable.Drawable getTrackDrawable()> 
<android.view.textservice.SuggestionsInfo: int getSuggestionsAttributes()> 
<android.preference.TwoStatePreference: java.lang.CharSequence getSummaryOff()> 
<android.mtp.MtpStorage: long getReserveSpace()> 
<org.apache.harmony.xml.dom.DocumentTypeImpl: short getNodeType()> 
<android.opengl.GLUtils: int getType(android.graphics.Bitmap)> 
<android.filterpacks.imageproc.ToGrayFilter: android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)> 
<android.widget.GridView: int getVerticalSpacing()> 
<android.test.mock.MockContext: java.lang.String getPackageCodePath()> 
<org.apache.xpath.objects.XObject: org.apache.xpath.objects.XObject getFresh()> 
<java.nio.IntBuffer: java.nio.IntBuffer get(int[],int,int)> 
<org.xml.sax.ext.Locator2Impl: java.lang.String getXMLVersion()> 
<gov.nist.javax.sip.address.TelURLImpl: java.lang.String getPhoneContext()> 
<java.io.LineNumberReader: int read(char[],int,int)> 
<org.apache.xpath.axes.LocPathIterator: int getCurrentPos()> 
<android.widget.ActivityChooserModel: int getHistorySize()> 
<java.io.RandomAccessFile: java.lang.String readLine()> 
<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)> 
<java.util.TimeZone: java.lang.String[] getAvailableIDs()> 
<android.webkit.WebStorageClassic: java.util.Collection getOriginsSync()> 
<org.apache.xalan.transformer.TransformerImpl: java.lang.Object getParameter(java.lang.String)> 
<android.media.videoeditor.MediaArtistNativeHelper: int getMediaItemFileType(int)> 
<android.nfc.Tag: android.nfc.INfcTag getTagService()> 
<android.app.admin.DevicePolicyManager: long getMaximumTimeToLock(android.content.ComponentName,int)> 
<org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream: int getBeginLine()> 
<android.preference.PreferenceManager: java.lang.String getSharedPreferencesName()> 
<android.content.res.AssetManager: boolean getResourceValue(int,int,android.util.TypedValue,boolean)> 
<gov.nist.javax.sip.parser.ims.SecurityAgreeParser: gov.nist.javax.sip.header.SIPHeaderList parse(gov.nist.javax.sip.header.ims.SecurityAgree)> 
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: java.lang.String[] getSupportedProtocols()> 
<android.bluetooth.BluetoothSocket: int readAll(java.io.InputStream,byte[])> 
<gov.nist.javax.sip.header.RAck: int getCSeqNumber()> 
<org.apache.xalan.transformer.TransformerImpl: boolean getOptimize()> 
<org.xml.sax.SAXParseException: java.lang.String getPublicId()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: void ensureReadParams()> 
<gov.nist.javax.sip.header.Via: java.lang.String getMAddr()> 
<android.net.RouteInfo: android.net.LinkAddress getDestination()> 
<org.apache.harmony.security.asn1.BerInputStream: byte[] getBuffer()> 
<java.nio.DirectByteBuffer: void get(char[],int,int)> 
<android.filterfw.core.Filter: java.lang.String getName()> 
<org.apache.harmony.xml.dom.DocumentTypeImpl: java.lang.String getName()> 
<java.io.ObjectInputStream: java.lang.Object readObject()> 
<android.test.AndroidTestRunner: java.util.List getTestCases()> 
<org.apache.xml.utils.UnImplNode: java.lang.String getNodeName()> 
<java.net.PasswordAuthentication: char[] getPassword()> 
<android.net.http.Headers: java.lang.String getXPermittedCrossDomainPolicies()> 
<android.content.res.AssetFileDescriptor: long getLength()> 
<android.text.format.DateFormat: char[] getDateFormatOrder(android.content.Context)> 
<org.apache.harmony.security.fortress.Engine: java.lang.Object getInstance(java.lang.String,java.security.Provider,java.lang.Object)> 
<java.text.Bidi: int getBaseLevel()> 
<android.appwidget.AppWidgetManager: android.appwidget.AppWidgetManager getInstance(android.content.Context)> 
<java.text.BreakIterator: java.text.BreakIterator getSentenceInstance(java.util.Locale)> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: org.w3c.dom.Node getLastChild()> 
<android.webkit.HTML5VideoView: boolean getReadyToUseSurfTex()> 
<android.net.wifi.WifiManager: java.lang.String getConfigFile()> 
<android.view.KeyCharacterMap: android.view.KeyEvent[] getEvents(char[])> 
<android.webkit.WebSettingsClassic: java.lang.String getPluginsPath()> 
<android.webkit.WebView: java.lang.String getOriginalUrl()> 
<java.io.PipedInputStream: int read(byte[],int,int)> 
<org.apache.xalan.processor.XSLTSchema: java.util.Hashtable getElemsAvailable()> 
<org.apache.xalan.templates.ElemNumber: void getFormattedNumber(org.apache.xalan.transformer.TransformerImpl,int,char,int,long,org.apache.xml.utils.FastStringBuffer)> 
<javax.crypto.EncryptedPrivateKeyInfo: byte[] getEncoded()> 
<android.view.textservice.SpellCheckerInfo: android.content.pm.ServiceInfo getServiceInfo()> 
<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothClass getBluetoothClass()> 
<jp.co.omronsoft.openwnn.JAJP.DefaultSoftKeyboardJAJP: java.util.HashMap getReplaceTable()> 
<org.apache.harmony.security.fortress.Services: java.security.Provider$Service getSecureRandomService()> 
<java.io.FilterInputStream: int read()> 
<android.content.ContentProviderClient: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)> 
<javax.xml.parsers.DocumentBuilder: javax.xml.validation.Schema getSchema()> 
<org.apache.xalan.templates.ElemTextLiteral: int getXSLToken()> 
<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: java.lang.String getUnparsedEntityURI(java.lang.String)> 
<org.apache.harmony.security.x509.Extension: boolean getCritical()> 
<gov.nist.javax.sip.message.SIPDuplicateHeaderException: gov.nist.javax.sip.header.SIPHeader getSIPHeader()> 
<android.view.Choreographer: android.view.Choreographer getInstance()> 
<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadDefaultIcon(android.content.pm.PackageManager)> 
<org.apache.http.impl.HttpConnectionMetricsImpl: java.lang.Object getMetric(java.lang.String)> 
<android.view.KeyCharacterMap: char getMatch(int,char[])> 
<android.view.Display: int getType()> 
<org.apache.xml.serializer.OutputPropertiesFactory: java.util.Properties loadPropertiesFile(java.lang.String,java.util.Properties)> 
<java.nio.CharSequenceAdapter: java.nio.CharBuffer get(char[],int,int)> 
<android.mtp.MtpDeviceInfo: java.lang.String getModel()> 
<android.server.search.SearchManagerService: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)> 
<javax.crypto.spec.DESKeySpec: byte[] getKey()> 
<android.telephony.SmsCbCmasInfo: int getMessageClass()> 
<org.apache.harmony.security.provider.crypto.DSAPrivateKeyImpl: java.security.interfaces.DSAParams getParams()> 
<java.text.BreakIterator: int getInt(byte[],int)> 
<android.telephony.CellSignalStrengthLte: int getAsuLevel()> 
<org.apache.http.entity.FileEntity: long getContentLength()> 
<libcore.icu.TimeZones: java.lang.String[][] getZoneStrings(java.util.Locale)> 
<android.renderscript.ProgramVertex: int getInputCount()> 
<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: java.util.List getSupplicantQueryList()> 
<org.apache.xalan.templates.ElemExtensionDecl: org.apache.xml.utils.StringVector getFunctions()> 
<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.SubjectPublicKeyInfo getSubjectPublicKeyInfo()> 
<android.telephony.gsm.SmsMessage: java.lang.String getDisplayOriginatingAddress()> 
<org.apache.xpath.functions.FuncId: org.apache.xml.utils.StringVector getNodesByID(org.apache.xpath.XPathContext,int,java.lang.String,org.apache.xml.utils.StringVector,org.apache.xpath.NodeSetDTM,boolean)> 
<android.media.audiofx.Equalizer: short getBandLevel(short)> 
<org.apache.xml.dtm.ref.DTMDefaultBase: org.apache.xml.utils.SuballocatedIntVector getDTMIDs()> 
<org.apache.xalan.templates.ElemAttribute: java.lang.String getNodeName()> 
<android.server.search.Searchables: android.content.ComponentName getDefaultGlobalSearchProvider(java.util.List)> 
<org.apache.james.mime4j.LogFactory: org.apache.james.mime4j.Log getLog(java.lang.Class)> 
<java.nio.DirectByteBuffer: long getLong()> 
<org.apache.xpath.functions.FuncExtFunction: java.lang.Object getMethodKey()> 
<android.hardware.usb.UsbInterface: android.hardware.usb.UsbEndpoint getEndpoint(int)> 
<org.apache.harmony.security.SystemScope: java.security.Identity getIdentity(java.lang.String)> 
<org.apache.harmony.security.x509.tsp.TSTInfo: org.apache.harmony.security.x509.tsp.MessageImprint getMessageImprint()> 
<android.content.SyncStorageEngine: android.content.SyncStatusInfo getStatusByAccountAndAuthority(android.accounts.Account,int,java.lang.String)> 
<org.apache.xml.utils.AttList: int getLength()> 
<org.kxml2.io.KXmlParser: void readXmlDeclaration()> 
<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)> 
<android.speech.tts.SynthesisRequest: java.lang.String getVariant()> 
<android.view.Surface: boolean getDisplayInfo(android.os.IBinder,android.view.Surface$PhysicalDisplayInfo)> 
<android.widget.SimpleExpandableListAdapter: java.lang.Object getChild(int,int)> 
<org.apache.harmony.xml.dom.DocumentTypeImpl: org.w3c.dom.NamedNodeMap getNotations()> 
<org.apache.xalan.templates.ElemSort: org.apache.xalan.templates.AVT getOrder()> 
<android.accounts.AccountManager: java.lang.String getUserData(android.accounts.Account,java.lang.String)> 
<org.jivesoftware.smack.packet.Registration: java.util.Map getAttributes()> 
<android.filterfw.core.SerializedFrame: float[] getFloats()> 
<android.content.res.AssetManager: java.lang.CharSequence getResourceBagText(int,int)> 
<java.sql.Time: int getDay()> 
<android.net.http.AndroidHttpClient: java.io.InputStream getUngzippedContent(org.apache.http.HttpEntity)> 
<android.app.MediaRouteButton: android.app.Activity getActivity()> 
<android.content.IntentSender: java.lang.String getCreatorPackage()> 
<org.apache.xpath.functions.SecuritySupport12: boolean getFileExists(java.io.File)> 
<org.apache.harmony.xml.dom.DocumentTypeImpl: java.lang.String getTextContent()> 
<org.apache.xpath.patterns.NodeTest: java.lang.String getLocalName()> 
<org.xmlpull.v1.XmlPullParserException: int getColumnNumber()> 
<java.text.NumberFormat: java.text.NumberFormat getNumberInstance()> 
<org.jivesoftware.smack.packet.DefaultPacketExtension: java.lang.String getElementName()> 
<java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()> 
<android.view.animation.GridLayoutAnimationController: int getDirectionPriority()> 
<android.filterfw.core.ShaderProgram: android.filterfw.core.GLEnvironment getGLEnvironment(android.filterfw.core.FilterContext)> 
<org.apache.james.mime4j.message.Header: java.util.List getFields()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getNextPreceding(int,int)> 
<android.accounts.AccountManagerService: android.accounts.AccountManagerService$UserAccounts getUserAccounts(int)> 
<org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()> 
<org.jivesoftware.smack.ServerTrustManager: java.security.cert.X509Certificate[] getAcceptedIssuers()> 
<android.net.LocalSocketAddress: java.lang.String getName()> 
<org.apache.xml.utils.res.CharArrayWrapper: int getLength()> 
<android.media.videoeditor.OverlayFrame: java.lang.String getFilename()> 
<android.support.v4.app.LoaderManagerImpl: android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)> 
<org.apache.xml.utils.WrappedRuntimeException: java.lang.Exception getException()> 
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getAlgorithm()> 
<org.apache.harmony.xml.dom.DocumentImpl: java.util.Map getUserDataMap(org.apache.harmony.xml.dom.NodeImpl)> 
<libcore.net.url.FileURLConnection: java.io.InputStream getInputStream()> 
<org.apache.harmony.security.x509.tsp.TimeStampReq: java.lang.String getReqPolicy()> 
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: void getBoundsInParent(java.lang.Object,android.graphics.Rect)> 
<android.support.v4.content.CursorLoader: android.database.Cursor loadInBackground()> 
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getCNonce()> 
<android.server.search.SearchManagerService: android.content.ComponentName getWebSearchActivity()> 
<gov.nist.javax.sip.header.ParametersHeader: java.util.Iterator getMultiParameterNames()> 
<android.hardware.display.DisplayManager: android.view.Display[] getDisplays()> 
<libcore.icu.NativeBreakIterator: libcore.icu.NativeBreakIterator getLineInstance(java.util.Locale)> 
<android.app.ContextImpl: android.content.ContentResolver getContentResolver()> 
<java.util.logging.LogManager: java.util.logging.LogManager getLogManager()> 
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: java.lang.String[] getEnabledCipherSuites()> 
<android.text.format.DateUtils: java.lang.String getStandaloneMonthString(int,int)> 
<android.webkit.WebView: android.webkit.WebSettings getSettings()> 
<android.text.Layout: void getSelectionPath(int,int,android.graphics.Path)> 
<android.text.BoringLayout: int getEllipsizedWidth()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: byte[] getEncoded()> 
<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getPeerProtocol()> 
<android.media.audiofx.EnvironmentalReverb: int getReverbDelay()> 
<android.net.nsd.DnsSdTxtRecord: java.lang.String getValueAsString(int)> 
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLowerCase(android.content.ComponentName)> 
<android.database.sqlite.SQLiteOpenHelper: java.lang.String getDatabaseName()> 
<org.apache.xpath.axes.NodeSequence: int getCurrentNode()> 
<org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol: int getRecordSize(int)> 
<android.database.CursorWrapper: java.lang.String getColumnName(int)> 
<android.widget.ExpandableListView: int getPackedPositionGroup(long)> 
<org.apache.xml.utils.DOMHelper: short getLevel(org.w3c.dom.Node)> 
<android.text.format.Time: int getWeeksSinceEpochFromJulianDay(int,int)> 
<org.xmlpull.v1.sax2.Driver: java.lang.String getType(java.lang.String,java.lang.String)> 
<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ContentType getContentTypeHeader()> 
<android.graphics.drawable.GradientDrawable: float getFloatOrFraction(android.content.res.TypedArray,int,float)> 
<android.view.Display: void getRectSize(android.graphics.Rect)> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: org.w3c.dom.Node getParentNode()> 
<java.sql.Timestamp: long getTime()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: void getNodeData(org.w3c.dom.Node,org.apache.xml.utils.FastStringBuffer)> 
<android.view.animation.LayoutAnimationController: int getOrder()> 
<android.view.Display: void getRealMetrics(android.util.DisplayMetrics)> 
<android.net.EthernetDataTracker: android.net.LinkCapabilities getLinkCapabilities()> 
<android.sax.Element: android.sax.Element getChild(java.lang.String,java.lang.String)> 
<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap readKeyValueAssignments(android.filterfw.io.PatternScanner,java.util.regex.Pattern)> 
<java.util.prefs.AbstractPreferences: float getFloat(java.lang.String,float)> 
<android.telephony.CellIdentityCdma: int getNetworkId()> 
<android.app.ActivityManager: int getPackageScreenCompatMode(java.lang.String)> 
<android.animation.AnimatorInflater: android.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.util.AttributeSet)> 
<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.Element getElementById(java.lang.String)> 
<android.database.MergeCursor: byte[] getBlob(int)> 
<org.jivesoftware.smack.provider.ProviderManager: java.lang.Object getIQProvider(int)> 
<jp.co.omronsoft.openwnn.Keyboard: java.util.List getModifierKeys()> 
<android.webkit.HTML5VideoInline: int getTextureName()> 
<android.app.ApplicationPackageManager: android.content.pm.FeatureInfo[] getSystemAvailableFeatures()> 
<org.json.JSONTokener: char readEscapeCharacter()> 
<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getLocalName(int)> 
<android.widget.AdapterView: android.widget.AdapterView$OnItemClickListener getOnItemClickListener()> 
<android.os.MemoryFile: int getSize(java.io.FileDescriptor)> 
<android.net.wifi.WifiConfigStore: android.net.LinkProperties getLinkProperties(int)> 
<android.widget.ExpandableListView: long getExpandableListPosition(int)> 
<android.preference.PreferenceManager: android.app.Activity getActivity()> 
<android.os.Environment: java.io.File getExternalStoragePublicDirectory(java.lang.String)> 
<android.widget.ImageView: int getMaxWidth()> 
<android.renderscript.Mesh: android.renderscript.Mesh$Primitive getPrimitive(int)> 
<gov.nist.core.NameValueList: java.lang.Object getValue(java.lang.String)> 
<libcore.net.http.RawHeaders: java.lang.String getStatusLine()> 
<org.apache.xml.dtm.ref.DTMNodeProxy: boolean getSpecified()> 
<gov.nist.javax.sip.header.SIPHeader: java.lang.String getHeaderValue()> 
<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getBaseURI()> 
<javax.obex.ServerOperation: java.lang.String getType()> 
<libcore.net.url.FtpURLConnection: int getReply()> 
<android.view.TextureView: android.view.TextureView$SurfaceTextureListener getSurfaceTextureListener()> 
<gov.nist.javax.sip.stack.SIPTransaction: int getPeerPort()> 
<org.apache.xalan.processor.StylesheetHandler: boolean getSource_location()> 
<android.app.AppGlobals: android.app.Application getInitialApplication()> 
<android.widget.AdapterViewAnimator: android.view.View getViewAtRelativeIndex(int)> 
<android.widget.TextView: int getLeftPaddingOffset()> 
<android.net.NetworkPolicyManager: boolean getRestrictBackground()> 
<android.widget.CalendarView: int getShownWeekCount()> 
<javax.security.auth.PrivateCredentialPermission: java.util.Set getPrincipalSet()> 
<org.apache.xml.utils.UnImplNode: java.lang.String getNodeValue()> 
<android.filterfw.core.FrameManager: android.filterfw.core.FilterContext getContext()> 
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: javax.net.ssl.X509KeyManager getDefaultKeyManager()> 
<android.location.GpsSatellite: float getElevation()> 
<android.test.IsolatedContext: java.io.File getFilesDir()> 
<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress getPeerPacketSourceAddress()> 
<org.apache.xml.serializer.ToUnknownStream: java.lang.String getVersion()> 
<gov.nist.core.LexerCore: java.lang.String getString(char)> 
<android.widget.CalendarView: int getUnfocusedMonthDateColor()> 
<android.test.mock.MockContext: java.io.File getCacheDir()> 
<android.telephony.PhoneNumberUtils: java.lang.String getDefaultIdp()> 
<android.media.audiofx.EnvironmentalReverb: short getDiffusion()> 
<android.net.http.HttpConnection: java.lang.String getScheme()> 
<android.net.NetworkStatsHistory: long getBucketDuration()> 
<java.text.DateFormatSymbols: java.lang.String[] getAmPmStrings()> 
<android.telephony.cdma.CdmaSmsCbProgramData: int getMaxMessages()> 
<android.widget.Gallery: int getLimitedMotionScrollAmount(boolean,int)> 
<javax.security.auth.callback.PasswordCallback: java.lang.String getPrompt()> 
<org.apache.xalan.transformer.XalanTransformState: org.w3c.dom.traversal.NodeIterator getContextNodeList()> 
<gov.nist.javax.sip.stack.SIPDialog: javax.sip.Transaction getFirstTransaction()> 
<android.webkit.WebViewClassic: java.lang.String getTouchIconUrl()> 
<org.apache.xml.serializer.dom3.DOMOutputImpl: java.lang.String getSystemId()> 
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.Header getHeader(java.lang.String)> 
<java.util.prefs.AbstractPreferences: java.lang.String get(java.lang.String,java.lang.String)> 
<gov.nist.javax.sip.ListeningPointImpl: gov.nist.javax.sip.SipProviderImpl getProvider()> 
<android.app.SharedPreferencesImpl: java.lang.String getString(java.lang.String,java.lang.String)> 
<org.apache.xml.utils.UnImplNode: java.lang.String getNamespaceURI()> 
<android.net.nsd.NsdManager: int getListenerKey(java.lang.Object)> 
<gov.nist.javax.sip.header.MinExpires: int getExpires()> 
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.protocol.HttpRequestExecutor createRequestExecutor()> 
<org.apache.http.impl.client.RequestWrapper: org.apache.http.ProtocolVersion getProtocolVersion()> 
<android.net.SSLCertificateSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getHttpSocketFactory(int,android.net.SSLSessionCache)> 
<android.media.videoeditor.Effect: java.lang.String getId()> 
<android.view.animation.DecelerateInterpolator: float getInterpolation(float)> 
<android.view.ScaleGestureDetector: float getScaleFactor()> 
<java.lang.Class: java.security.ProtectionDomain getProtectionDomain()> 
<java.net.URLConnection: int getHeaderFieldInt(java.lang.String,int)> 
<android.view.MotionEvent: int getActionMasked()> 
<android.widget.OverScroller: int getDuration()> 
<android.renderscript.Element: int getVectorSize()> 
<android.app.SearchableInfo: android.content.ComponentName getSearchActivity()> 
<android.view.LayoutInflater: android.content.Context getContext()> 
<org.apache.xalan.processor.XSLTElementDef: boolean getRequired()> 
<android.view.InputDevice: android.os.Vibrator getVibrator()> 
<android.view.ViewConfiguration: int getScaledOverflingDistance()> 
<org.apache.harmony.security.provider.cert.Cache: java.lang.Object get(long,byte[])> 
<gov.nist.javax.sip.header.Priority: java.lang.String getPriority()> 
<org.json.JSONObject: java.lang.String getString(java.lang.String)> 
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: int getDnsType()> 
<android.test.mock.MockResources: float getDimension(int)> 
<android.os.ServiceManagerProxy: android.os.IBinder getService(java.lang.String)> 
<gov.nist.javax.sip.header.extensions.SessionExpires: java.lang.String getRefresher()> 
<gov.nist.javax.sip.address.SipUri: gov.nist.javax.sip.address.TelephoneNumber getTelephoneSubscriber()> 
<org.apache.harmony.xml.dom.DocumentTypeImpl: java.lang.String getPublicId()> 
<org.apache.xml.serializer.utils.URI: java.lang.String getScheme()> 
<gov.nist.javax.sip.message.SIPRequest: java.lang.Object getInviteTransaction()> 
<libcore.net.http.ResponseHeaders: int getMaxAgeSeconds()> 
<gov.nist.javax.sip.stack.MessageProcessor: gov.nist.javax.sip.header.Via getViaHeader()> 
<org.apache.xml.utils.SecuritySupport: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)> 
<android.support.v4.view.MotionEventCompat: int getActionMasked(android.view.MotionEvent)> 
<android.os.Registrant: android.os.Handler getHandler()> 
<android.database.CrossProcessCursorWrapper: android.database.CursorWindow getWindow()> 
<java.text.Bidi: int getRunCount()> 
<java.nio.MappedByteBufferAdapter: byte get(int)> 
<java.util.logging.Logger: java.util.logging.Filter getFilter()> 
<javax.obex.ClientSession: javax.obex.Operation get(javax.obex.HeaderSet)> 
<java.security.Security: java.util.Set getAlgorithms(java.lang.String)> 
<android.widget.PopupWindow: int getInputMethodMode()> 
<org.javia.arity.SimpleCodeGen: org.javia.arity.CompiledFunction getFun()> 
<java.text.NumberFormat: java.text.NumberFormat getPercentInstance(java.util.Locale)> 
<java.lang.reflect.Method: java.lang.Object getDefaultValue()> 
<org.apache.xml.serializer.utils.URI: java.lang.String getPath(boolean,boolean)> 
<jp.co.omronsoft.openwnn.TextCandidates1LineViewManager: jp.co.omronsoft.openwnn.WnnWord getFocusedWnnWord()> 
<android.mtp.MtpObjectInfo: int getFormat()> 
<gov.nist.core.NameValueList: java.lang.String getParameter(java.lang.String)> 
<java.security.cert.X509CertSelector: boolean getMatchAllSubjectAltNames()> 
<org.apache.xml.dtm.ref.DTMDefaultBase: int getDocumentRoot(int)> 
<android.support.v4.view.ViewCompatGingerbread: int getOverScrollMode(android.view.View)> 
<gov.nist.javax.sip.SipStackImpl: java.lang.String[] getEnabledProtocols()> 
<android.content.Loader: void startLoading()> 
<android.view.KeyEvent: int getAction()> 
<android.net.nsd.NsdServiceInfo: java.net.InetAddress getHost()> 
<android.support.v4.app.BackStackRecord: java.lang.CharSequence getBreadCrumbTitle()> 
<net.oauth.OAuthMessage: java.lang.String getConsumerKey()> 
<android.telephony.PhoneNumberUtils: java.lang.String getNumberFromIntent(android.content.Intent,android.content.Context)> 
<libcore.io.ForwardingOs: int getsockoptByte(java.io.FileDescriptor,int,int)> 
<android.content.Intent: int[] getIntArrayExtra(java.lang.String)> 
<java.security.cert.X509CertSelector: java.lang.String getIssuerAsString()> 
<android.media.audiofx.BassBoost: short getRoundedStrength()> 
<java.math.MathContext: int getPrecision()> 
<android.test.ProviderTestCase: android.content.ContentProvider getProvider()> 
<javax.net.ssl.SSLSessionBindingEvent: javax.net.ssl.SSLSession getSession()> 
<java.util.concurrent.ForkJoinTask: java.util.concurrent.ForkJoinPool getPool()> 
<net.oauth.signature.HMAC_SHA1: java.lang.String getSignature(java.lang.String)> 
<android.app.ApplicationPackageManager: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)> 
<org.jivesoftware.smack.packet.DefaultPacketExtension: java.lang.String getNamespace()> 
<android.test.InstrumentationTestRunner: com.android.internal.util.Predicate getNotAnnotationPredicate(java.lang.String)> 
<android.test.mock.MockPackageManager: android.content.res.Resources getResourcesForApplication(java.lang.String)> 
<org.apache.http.params.HttpProtocolParams: java.nio.charset.CodingErrorAction getUnmappableInputAction(org.apache.http.params.HttpParams)> 
<android.net.http.Connection: boolean getCanPersist()> 
<android.test.AndroidTestRunner: junit.framework.Test getTest(java.lang.Class)> 
<org.apache.harmony.security.pkcs8.PrivateKeyInfo: int getVersion()> 
<org.apache.xpath.compiler.Keywords: java.lang.Object getAxisName(java.lang.String)> 
<android.widget.NumberPicker: int getWrappedSelectorIndex(int)> 
<org.jivesoftware.smack.packet.RosterPacket: java.util.ArrayList getRosterItemsList()> 
<org.apache.xml.dtm.ref.NodeLocator: java.lang.String getPublicId()> 
<android.view.animation.AnticipateOvershootInterpolator: float getInterpolation(float)> 
<android.os.ParcelUuid: java.util.UUID getUuid()> 
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getApplicationLogo(android.content.pm.ApplicationInfo)> 
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)> 
<java.security.cert.CertStore: java.security.cert.CertStore getInstance(java.lang.String,java.security.cert.CertStoreParameters,java.security.Provider)> 
<android.content.ClipData: android.graphics.Bitmap getIcon()> 
<java.security.Signature: java.lang.Object getParameter(java.lang.String)> 
<gov.nist.javax.sip.message.SIPRequest: java.util.LinkedList getMessageAsEncodedStrings()> 
<android.view.View: android.graphics.Insets getOpticalInsets()> 
<android.widget.Switch: int getSwitchMinWidth()> 
<android.telephony.SmsMessage: java.lang.String getServiceCenterAddress()> 
<android.hardware.display.DisplayManagerGlobal: int[] getDisplayIds()> 
<android.location.Address: java.lang.String getLocality()> 
<java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()> 
<android.test.mock.MockPackageManager: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)> 
<java.util.concurrent.atomic.AtomicLongFieldUpdater: long getAndSet(java.lang.Object,long)> 
<org.apache.http.impl.SocketHttpClientConnection: java.net.InetAddress getRemoteAddress()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: java.lang.String getBaseURI()> 
<net.oauth.http.HttpMessageDecoder: java.lang.String getEncoding(net.oauth.http.HttpMessage)> 
<android.view.accessibility.AccessibilityNodeInfo: android.util.SparseLongArray getChildNodeIds()> 
<android.widget.TextView: float getLeftFadingEdgeStrength()> 
<android.media.AudioService: void reloadAudioSettings()> 
<org.apache.commons.io.input.ProxyReader: int read()> 
<android.widget.AdapterView: long getSelectedItemId()> 
<java.net.Socket: java.io.InputStream getInputStream()> 
<org.apache.http.conn.params.ConnManagerParams: int getMaxTotalConnections(org.apache.http.params.HttpParams)> 
<gov.nist.javax.sip.message.SIPMessage: java.lang.Object getApplicationData()> 
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getValueSanitizer(java.lang.String)> 
<org.apache.xpath.NodeSetDTM: int getRoot()> 
<org.apache.harmony.security.provider.cert.X509CRLEntryImpl: java.util.Date getRevocationDate()> 
<android.text.style.DynamicDrawableSpan: int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt)> 
<org.apache.harmony.security.x509.tsp.PKIStatusInfo: java.util.List getStatusString()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.lang.String[] getEnabledProtocols()> 
<android.speech.tts.TtsEngines: android.content.Intent getSettingsIntent(java.lang.String)> 
<java.util.IllegalFormatConversionException: char getConversion()> 
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: java.lang.Thread getFirstQueuedThread()> 
<java.net.AddressCache: java.lang.Object get(java.lang.String)> 
<android.animation.Keyframe: float getFraction()> 
<android.filterpacks.imageproc.ColorTemperatureFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<org.apache.harmony.xml.dom.AttrImpl: java.lang.String getName()> 
<android.util.NtpTrustedTime: long getCachedNtpTimeReference()> 
<org.javia.arity.Symbol: java.lang.String getName()> 
<org.apache.harmony.xnet.provider.jsse.AlertException: javax.net.ssl.SSLException getReason()> 
<org.apache.xalan.transformer.TransformerImpl: boolean getIncremental()> 
<android.opengl.GLException: java.lang.String getErrorString(int)> 
<android.os.UserManager: java.util.List getUsers(boolean)> 
<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()> 
<javax.xml.datatype.Duration: int getMonths()> 
<android.animation.LayoutTransition: android.animation.Animator getAnimator(int)> 
<android.net.UrlQuerySanitizer: java.lang.String getValue(java.lang.String)> 
<libcore.net.url.JarURLConnectionImpl: int getContentLength()> 
<org.apache.xml.serializer.Version: int getMajorVersionNum()> 
<android.view.PointerIcon: android.view.PointerIcon load(android.content.Context)> 
<dalvik.system.profiler.HprofData: java.util.List getThreadHistory()> 
<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$TunnelType getTunnelType()> 
<dalvik.system.profiler.HprofData: int getFlags()> 
<java.lang.Character: int getType(char)> 
<java.nio.CharToByteBufferAdapter: char get(int)> 
<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.URIResolver getURIResolver()> 
<org.apache.harmony.xml.dom.AttrImpl: org.w3c.dom.TypeInfo getSchemaTypeInfo()> 
<android.app.ActivityThread: android.app.LoadedApk getPackageInfoNoCheck(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo)> 
<net.oauth.OAuthMessage: java.lang.String getParameter(java.lang.String)> 
<javax.security.auth.x500.X500Principal: java.lang.String getName()> 
<android.media.videoeditor.TransitionSliding: int getDirection()> 
<org.xml.sax.helpers.ParserAdapter: java.lang.Object getProperty(java.lang.String)> 
<org.apache.harmony.xml.parsers.DocumentBuilderImpl: org.w3c.dom.Document parse(org.xml.sax.InputSource)> 
<org.apache.xml.utils.DOMHelper: java.lang.String getNodeData(org.w3c.dom.Node)> 
<org.apache.harmony.xml.dom.CharacterDataImpl: int getLength()> 
<android.content.BroadcastReceiver: boolean getAbortBroadcast()> 
<android.app.ListActivity: android.widget.ListAdapter getListAdapter()> 
<android.animation.IntKeyframeSet: java.lang.Object getValue(float)> 
<java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)> 
<javax.xml.transform.sax.SAXResult: java.lang.String getSystemId()> 
<org.kxml2.io.KXmlParser: java.lang.String getAttributeType(int)> 
<android.media.videoeditor.MediaProperties: android.util.Pair[] getSupportedResolutions(int)> 
<android.support.v4.view.PagerAdapter: java.lang.CharSequence getPageTitle(int)> 
<gov.nist.javax.sip.parser.ServerParser: gov.nist.javax.sip.header.SIPHeader parse()> 
<org.ccil.cowan.tagsoup.HTMLScanner: java.lang.String getSystemId()> 
<android.os.Environment: java.io.File getExternalStorageAndroidDataDir()> 
<android.text.Annotation: int getSpanTypeId()> 
<java.security.Security: java.security.Provider getProvider(java.lang.String)> 
<org.apache.xml.utils.SecuritySupport: java.lang.String getSystemProperty(java.lang.String)> 
<android.text.BoringLayout: int getLineCount()> 
<libcore.io.EventLogger: libcore.io.EventLogger$Reporter getReporter()> 
<libcore.net.http.HttpResponseCache: int getWriteSuccessCount()> 
<org.apache.commons.io.FilenameUtils: java.lang.String getBaseName(java.lang.String)> 
<org.apache.harmony.security.x509.OtherName: byte[] getValue()> 
<android.support.v4.app.FragmentManagerImpl: android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String)> 
<android.view.ViewConfiguration: int getKeyRepeatDelay()> 
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script$KernelID getKernelIDMultiply()> 
<javax.sip.DialogState: javax.sip.DialogState getObject(int)> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: java.lang.String getDocumentBaseURI()> 
<java.nio.HeapByteBuffer: byte get(int)> 
<android.location.LocationManager: java.util.List getProviders(android.location.Criteria,boolean)> 
<org.apache.xalan.templates.ElemMessage: int getXSLToken()> 
<android.view.PointerIcon: android.view.PointerIcon loadCustomIcon(android.content.res.Resources,int)> 
<jp.co.omronsoft.openwnn.DefaultSoftKeyboard: int getKeyMode()> 
<libcore.util.ZoneInfo: int getOffset(long)> 
<android.test.ActivityUnitTestCase: int getRequestedOrientation()> 
<android.graphics.drawable.LayerDrawable: int getIntrinsicWidth()> 
<android.os.Bundle: java.lang.Object get(java.lang.String)> 
<android.content.res.Resources: android.content.res.TypedArray getCachedStyledAttributes(int)> 
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentLengthHeader getContentLength()> 
<android.view.HardwareLayer: int getWidth()> 
<android.nfc.NdefMessage: android.nfc.NdefRecord[] getRecords()> 
<android.widget.Chronometer: android.widget.Chronometer$OnChronometerTickListener getOnChronometerTickListener()> 
<android.net.rtp.AudioStream: int getDtmfType()> 
<net.oauth.OAuthMessage: java.io.InputStream getBodyAsStream()> 
<org.apache.xml.serializer.SerializerBase: java.lang.String getOutputPropertyNonDefault(java.lang.String)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: java.lang.String[] getEnabledCipherSuites()> 
<org.apache.http.impl.io.ChunkedInputStream: int getChunkSize()> 
<android.preference.GenericInflater: android.preference.GenericInflater$Factory getFactory()> 
<android.filterfw.io.TextGraphReader: void parseString(java.lang.String)> 
<android.hardware.Sensor: float getResolution()> 
<java.util.concurrent.FutureTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)> 
<org.apache.xml.serializer.utils.URI: java.lang.String getUserinfo()> 
<org.apache.http.conn.params.ConnRouteParams: java.net.InetAddress getLocalAddress(org.apache.http.params.HttpParams)> 
<android.speech.tts.BlockingAudioTrack: long getAudioLengthMs(int)> 
<gov.nist.javax.sip.header.CallIdentifier: java.lang.String getLocalId()> 
<android.text.format.DateUtils: java.lang.String getDayOfWeekString(int,int)> 
<java.net.Inet6Address: java.net.NetworkInterface getScopedInterface()> 
<android.location.LocationRequest: android.location.LocationRequest create()> 
<android.test.mock.MockContext: int getWallpaperDesiredMinimumHeight()> 
<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler getInputContentHandler(boolean)> 
<org.apache.xalan.templates.VarNameCollector: int getVarCount()> 
<android.webkit.WebView: android.net.http.SslCertificate getCertificate()> 
<android.view.accessibility.AccessibilityRecord: android.os.Parcelable getParcelableData()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: java.lang.String getLocalName(int)> 
<android.view.accessibility.AccessibilityInteractionClient: java.util.List getFindAccessibilityNodeInfosResultAndClear(int)> 
<android.bluetooth.BluetoothPbap: android.bluetooth.BluetoothDevice getClient()> 
<java.lang.reflect.Field: int getInt(java.lang.Object)> 
<gov.nist.javax.sip.message.SIPResponse: java.util.LinkedList getMessageAsEncodedStrings()> 
<android.widget.ListView: int getFooterViewsCount()> 
<android.app.ApplicationPackageManager: int getApplicationEnabledSetting(java.lang.String)> 
<org.apache.xml.serializer.SerializerBase: boolean getIndent()> 
<org.apache.harmony.xml.dom.DocumentImpl: boolean getStrictErrorChecking()> 
<org.apache.xalan.Version: int getDevelopmentVersionNum()> 
<org.apache.xml.serializer.utils.SerializerMessages: java.lang.Object[][] getContents()> 
<android.content.res.TypedArray: int getInt(int,int)> 
<android.mtp.MtpObjectInfo: java.lang.String getName()> 
<org.apache.harmony.security.provider.cert.X509CRLImpl: int getVersion()> 
<org.javia.arity.OptCodeGen: org.javia.arity.CompiledFunction getFun(int)> 
<java.text.DateFormatSymbols: java.lang.String[] getWeekdays()> 
<android.graphics.PathMeasure: boolean getMatrix(float,android.graphics.Matrix,int)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: int getPkeyContext()> 
<android.content.SyncStorageEngine: java.util.ArrayList getSyncStatus()> 
<org.apache.james.mime4j.message.AbstractBody: org.apache.james.mime4j.message.Entity getParent()> 
<org.apache.xml.serializer.NamespaceMappings: org.apache.xml.serializer.NamespaceMappings$MappingRecord getMappingFromURI(java.lang.String)> 
<android.widget.ListView: long[] getCheckItemIds()> 
<org.apache.harmony.security.provider.cert.X509CRLEntryImpl: byte[] getExtensionValue(java.lang.String)> 
<android.graphics.drawable.BitmapDrawable: int getIntrinsicWidth()> 
<android.drm.DrmManagerClient: java.lang.String getOriginalMimeType(java.lang.String)> 
<android.mtp.MtpObjectInfo: int getObjectHandle()> 
<org.apache.xpath.XPath: java.lang.String getPatternString()> 
<jp.co.omronsoft.openwnn.DefaultSoftKeyboard: android.view.View getCurrentView()> 
<javax.crypto.SealedObject: java.lang.Object getObject(javax.crypto.Cipher)> 
<javax.net.ssl.SSLParameters: java.lang.String[] getProtocols()> 
<org.ccil.cowan.tagsoup.PYXWriter: int getEntity()> 
<android.net.BaseNetworkStateTracker: android.net.LinkProperties getLinkProperties()> 
<org.apache.http.impl.client.AbstractAuthenticationHandler: java.util.List getAuthPreferences(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)> 
<java.io.FileInputStream: int read(byte[],int,int)> 
<android.bluetooth.BluetoothClass: int getMajorDeviceClass()> 
<java.awt.font.TextAttribute: java.lang.Object readResolve()> 
<org.jivesoftware.smackx.packet.VCard: java.lang.String getJabberId()> 
<org.ccil.cowan.tagsoup.jaxp.SAXParserImpl: org.xml.sax.XMLReader getXMLReader()> 
<gov.nist.javax.sip.header.Via: gov.nist.javax.sip.header.Protocol getSentProtocol()> 
<dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()> 
<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()> 
<android.bluetooth.BluetoothA2dp: int getConnectionState(android.bluetooth.BluetoothDevice)> 
<java.security.spec.ECFieldF2m: int getFieldSize()> 
<android.text.method.PasswordTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)> 
<java.lang.HexStringParser: java.lang.String getNormalizedSignificand(java.lang.String,java.lang.String)> 
<java.util.jar.JarFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)> 
<org.apache.xml.dtm.ref.DTMDefaultBase: int getNextAttribute(int)> 
<org.apache.harmony.security.asn1.ASN1Any: int getEncodedLength(org.apache.harmony.security.asn1.BerOutputStream)> 
<android.text.format.DateFormat: java.lang.String getDateFormatStringForSetting(android.content.Context,java.lang.String)> 
<android.test.InstrumentationTestRunner: java.lang.Class getAnnotationClass(java.lang.String)> 
<org.apache.http.conn.params.ConnRouteParams: org.apache.http.HttpHost getDefaultProxy(org.apache.http.params.HttpParams)> 
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: boolean getNeedClientAuth()> 
<android.content.SyncManager: java.util.List getAllUsers()> 
<org.apache.xpath.functions.FuncLast: int getCountOfContextNodeList(org.apache.xpath.XPathContext)> 
<org.apache.xml.utils.StringVector: int getLength()> 
<org.apache.http.impl.client.DefaultTargetAuthenticationHandler: java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)> 
<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.Node getParentNode()> 
<libcore.net.http.RequestHeaders: libcore.net.http.RawHeaders getHeaders()> 
<android.view.animation.GridLayoutAnimationController: float getRowDelay()> 
<javax.net.ssl.HandshakeCompletedEvent: javax.security.cert.X509Certificate[] getPeerCertificateChain()> 
<android.view.View: int getNextFocusForwardId()> 
<java.util.concurrent.locks.ReentrantReadWriteLock: int getQueueLength()> 
<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.ThreadFactory getThreadFactory()> 
<android.nfc.tech.IsoDep: int getTimeout()> 
<net.oauth.client.OAuthClient: net.oauth.OAuthMessage getAccessToken(net.oauth.OAuthAccessor,java.lang.String,java.util.Collection)> 
<org.apache.xpath.axes.FilterExprIteratorSimple: int getAnalysisBits()> 
<org.apache.xml.serializer.OutputPropertyUtils: boolean getBooleanProperty(java.lang.String,java.util.Properties)> 
<android.graphics.drawable.ColorDrawable: int getAlpha()> 
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: byte[] getRawData()> 
<android.webkit.ByteArrayBuilder: android.webkit.ByteArrayBuilder$Chunk getFirstChunk()> 
<android.net.nsd.NsdManager: java.lang.Object getListener(int)> 
<libcore.net.http.RequestHeaders: java.lang.String getHost()> 
<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getPeerAddress()> 
<android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()> 
<gov.nist.javax.sip.header.AuthenticationInfo: java.lang.String getCNonce()> 
<android.graphics.drawable.DrawableContainer: int getIntrinsicWidth()> 
<android.content.AsyncTaskLoader: boolean onCancelLoad()> 
<org.apache.james.mime4j.EOLConvertingInputStream: int read()> 
<android.app.SearchManager: android.database.Cursor getSuggestions(android.app.SearchableInfo,java.lang.String)> 
<android.nfc.tech.NfcV: int getMaxTransceiveLength()> 
<android.content.res.Resources: boolean verifyPreloadConfig(android.util.TypedValue,java.lang.String)> 
<android.nfc.tech.NfcB: byte[] getProtocolInfo()> 
<javax.obex.ServerOperation: int getResponseCode()> 
<android.location.Location: float getAccuracy()> 
<org.apache.harmony.security.pkcs7.SignerInfo: byte[] getEncodedAuthenticatedAttributes()> 
<android.view.ViewConfiguration: int getScaledMaximumDrawingCacheSize()> 
<android.test.TouchUtils: void getStartLocation(android.view.View,int,int[])> 
<android.test.mock.MockPackageManager: java.util.List getInstalledApplications(int)> 
<android.webkit.Plugin: java.lang.String getFileName()> 
<android.app.backup.RestoreSession: int getAvailableRestoreSets(android.app.backup.RestoreObserver)> 
<android.database.CursorToBulkCursorAdaptor: android.database.CursorWindow getWindow(int)> 
<android.mtp.MtpDatabase: int getDeviceProperty(int,long[],char[])> 
<gov.nist.javax.sip.header.extensions.Join: java.lang.String getToTag()> 
<org.apache.harmony.security.provider.cert.X509CertFactoryImpl: java.security.cert.CRL getCRL(java.io.InputStream)> 
<android.test.mock.MockContext: android.content.pm.ApplicationInfo getApplicationInfo()> 
<android.app.admin.DevicePolicyManager: int getMaximumFailedPasswordsForWipe(android.content.ComponentName)> 
<org.apache.xml.utils.res.CharArrayWrapper: char getChar(int)> 
<android.webkit.WebSettingsClassic: boolean getNeedInitialFocus()> 
<gov.nist.javax.sip.message.SIPMessage: java.lang.String getTransactionId()> 
<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: int getAndDecrement(java.lang.Object)> 
<android.media.MediaFormat: java.nio.ByteBuffer getByteBuffer(java.lang.String)> 
<javax.net.ssl.HttpsURLConnection: javax.net.ssl.SSLSocketFactory getSSLSocketFactory()> 
<java.text.DecimalFormatSymbols: char getDecimalSeparator()> 
<android.net.wifi.WifiConfigStore: void loadConfiguredNetworks()> 
<android.widget.ListPopupWindow: android.widget.ListView getListView()> 
<android.content.Intent: int getFlags()> 
<java.io.EmulatedFieldsForLoading: char get(java.lang.String,char)> 
<android.appwidget.AppWidgetHostView: android.graphics.Rect getDefaultPaddingForWidget(android.content.Context,android.content.ComponentName,android.graphics.Rect)> 
<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.Node getLastChild()> 
<android.mtp.MtpPropertyGroup: android.mtp.MtpPropertyList getPropertyList(int,int,int)> 
<android.app.ContextImpl: java.lang.String getPackageCodePath()> 
<org.apache.http.util.VersionInfo: java.lang.String getModule()> 
<android.os.RemoteCallbackList: java.lang.Object getBroadcastCookie(int)> 
<android.app.WallpaperInfo: java.lang.String getSettingsActivity()> 
<org.apache.harmony.xnet.provider.jsse.HandshakeProtocol: org.apache.harmony.xnet.provider.jsse.SSLSessionImpl getSession()> 
<gov.nist.javax.sip.SipStackImpl: javax.sip.SipListener getSipListener()> 
<android.widget.Gallery: android.view.ContextMenu$ContextMenuInfo getContextMenuInfo()> 
<java.net.URLClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)> 
<android.app.LoaderManagerImpl: android.content.Loader restartLoader(int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks)> 
<android.telephony.SignalStrength: int getEvdoEcio()> 
<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.WaveformData getWaveformData()> 
<android.content.SyncStorageEngine: long getDelayUntilTime(android.accounts.Account,int,java.lang.String)> 
<gov.nist.javax.sip.message.MultipartMimeContentImpl: int getContentCount()> 
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: boolean getUseClientMode()> 
<org.apache.harmony.security.provider.cert.X509CertImpl: java.security.Principal getIssuerDN()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getParent(int)> 
<android.preference.PreferenceFragment: android.preference.PreferenceScreen getPreferenceScreen()> 
<java.util.jar.JarInputStream: java.util.jar.Manifest getManifest()> 
<android.widget.ListPopupWindow: android.view.View getAnchorView()> 
<java.net.DatagramSocket: java.net.InetAddress getLocalAddress()> 
<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getLocalName()> 
<android.view.PointerIcon: void loadResource(android.content.res.Resources,int)> 
<javax.net.ssl.DefaultSSLSocketFactory: java.lang.String[] getDefaultCipherSuites()> 
<java.net.HttpURLConnection: boolean getFollowRedirects()> 
<org.kxml2.io.KXmlParser: int getLineNumber()> 
<android.os.storage.StorageManager: java.lang.String getVolumeState(java.lang.String)> 
<org.apache.xml.dtm.ref.ExpandedNameTable: int getExpandedTypeID(java.lang.String,java.lang.String,int)> 
<org.jivesoftware.smackx.packet.VCard: void load(org.jivesoftware.smack.XMPPConnection)> 
<android.media.videoeditor.AudioTrack: long getDuration()> 
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getRealm()> 
<gov.nist.javax.sip.header.Challenge: gov.nist.core.NameValueList getAuthParams()> 
<android.widget.AutoCompleteTextView: int getDropDownAnimationStyle()> 
<android.preference.Preference: java.lang.CharSequence getTitle()> 
<android.inputmethodservice.InputMethodService: android.app.Dialog getWindow()> 
<java.util.concurrent.atomic.AtomicInteger: int getAndAdd(int)> 
<javax.obex.PasswordAuthentication: byte[] getPassword()> 
<android.app.DownloadManager: java.lang.String[] getWhereArgsForIds(long[])> 
<android.widget.AdapterViewAnimator: android.widget.Adapter getAdapter()> 
<jp.co.omronsoft.openwnn.Keyboard: int getMinWidth()> 
<android.media.videoeditor.Overlay: long getStartTime()> 
<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.NamespaceAlias getNamespaceAliasComposed(java.lang.String)> 
<org.apache.commons.io.input.ProxyInputStream: int read(byte[],int,int)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams: java.math.BigInteger getP()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams: java.math.BigInteger getQ()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams: java.math.BigInteger getX()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams: java.math.BigInteger getY()> 
<net.oauth.client.OAuthClient: net.oauth.http.HttpClient getHttpClient()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: java.lang.String getPrefix()> 
<java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams: java.math.BigInteger getG()> 
<org.apache.xml.serializer.dom3.DOMErrorImpl: java.lang.Object getRelatedData()> 
<org.apache.http.impl.conn.AbstractClientConnAdapter: int getLocalPort()> 
<android.nfc.NdefRecord: byte[] getPayload()> 
<org.apache.harmony.security.asn1.ASN1Oid: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> 
<android.renderscript.ProgramStore: android.renderscript.ProgramStore$BlendSrcFunc getBlendSrcFunc()> 
<android.media.videoeditor.TransitionAlpha: int getRGBFileHeight()> 
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: java.lang.String[] getSupportedProtocols()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: org.apache.xml.dtm.ref.DTMStringPool getLocalNameTable()> 
<android.webkit.CookieManagerClassic: android.webkit.CookieManagerClassic getInstance()> 
<java.lang.System: java.lang.String getenv(java.lang.String)> 
<java.security.spec.EllipticCurve: java.security.spec.ECField getField()> 
<android.graphics.drawable.Drawable: int[] getState()> 
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.ThreadAuditor getThreadAuditor()> 
<android.widget.AdapterViewAnimator: android.widget.FrameLayout getFrameForChild()> 
<java.net.URL: java.lang.String getUserInfo()> 
<android.drm.DrmSupportInfo: java.lang.String getDescription()> 
<java.net.URI: java.lang.String getUserInfo()> 
<org.apache.harmony.security.pkcs7.SignerInfo: java.math.BigInteger getSerialNumber()> 
<gov.nist.javax.sip.stack.DefaultRouter: javax.sip.address.Hop getNextHop(javax.sip.message.Request)> 
<android.webkit.WebSettingsClassic: boolean getDomStorageEnabled()> 
<java.net.CookieStoreImpl: java.util.List getCookies()> 
<org.apache.xpath.XPath: org.apache.xpath.Expression getExpression()> 
<java.lang.SecurityManager: java.lang.ThreadGroup getThreadGroup()> 
<android.os.UserHandle: int getCallingUserId()> 
<org.apache.commons.io.FileUtils: java.io.File getUserDirectory()> 
<org.apache.http.impl.SocketHttpServerConnection: int getSocketTimeout()> 
<android.widget.HeaderViewListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> 
<android.view.accessibility.AccessibilityRecord: int getMaxScrollY()> 
<android.view.accessibility.AccessibilityRecord: int getMaxScrollX()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: int getReceiveBufferSize()> 
<libcore.util.ZoneInfo: int getOffset(int,int,int,int,int,int)> 
<android.hardware.SensorManager: java.util.List getSensorList(int)> 
<android.inputmethodservice.Keyboard: int getVerticalGap()> 
<android.media.AudioService: int getMasterMaxVolume()> 
<org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream: int getEndColumn()> 
<android.content.pm.LabeledIntent: java.lang.String getSourcePackage()> 
<android.net.wifi.WifiInfo: android.net.wifi.SupplicantState getSupplicantState()> 
<org.apache.harmony.security.x509.GeneralSubtrees: byte[] getEncoded()> 
<android.support.v4.app.BackStackRecord: int getTransition()> 
<android.widget.SimpleAdapter: android.widget.SimpleAdapter$ViewBinder getViewBinder()> 
<java.text.DateFormatSymbols: java.lang.String[] getShortWeekdays()> 
<android.text.style.SuggestionSpan: int getUnderlineColor()> 
<android.widget.TextView: android.text.method.TransformationMethod getTransformationMethod()> 
<android.mtp.MtpDatabase: int getObjectFilePath(int,char[],long[])> 
<org.apache.harmony.xml.dom.DocumentImpl: java.lang.String getInputEncoding()> 
<libcore.io.BlockGuardOs: int read(java.io.FileDescriptor,java.nio.ByteBuffer)> 
<android.net.http.HttpResponseCache: int getHitCount()> 
<android.app.SearchManager: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)> 
<android.webkit.WebSettings: java.lang.String getPluginsPath()> 
<android.view.animation.BounceInterpolator: float getInterpolation(float)> 
<android.content.Intent: android.os.Parcelable[] getParcelableArrayExtra(java.lang.String)> 
<org.apache.xml.serializer.SerializerBase: java.lang.String getDoctypePublic()> 
<android.security.KeyChain: java.security.PrivateKey getPrivateKey(android.content.Context,java.lang.String)> 
<android.webkit.Plugin: java.lang.String getPath()> 
<android.content.pm.PackageManager: java.lang.String getDataDirForUser(int,java.lang.String)> 
<android.renderscript.Matrix4f: void loadScale(float,float,float)> 
<android.telephony.TelephonyManager: java.lang.String getDeviceSoftwareVersion()> 
<android.mtp.MtpDevice: int getDeviceId()> 
<org.apache.xpath.patterns.NodeTest: int getNodeTypeTest(int)> 
<android.filterfw.core.GLFrame: float[] getFloats()> 
<org.apache.harmony.xnet.provider.jsse.Finished: int getType()> 
<org.xml.sax.SAXException: java.lang.String getMessage()> 
<libcore.net.http.HttpsURLConnectionImpl: java.lang.String getHeaderFieldKey(int)> 
<android.support.v4.app.Fragment: int getId()> 
<java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)> 
<android.renderscript.Matrix3f: void loadScale(float,float,float)> 
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: boolean getUseClientMode()> 
<android.test.mock.MockPackageManager: int getUidForSharedUser(java.lang.String)> 
<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getValue(java.lang.String,java.lang.String)> 
<org.jivesoftware.smackx.ServiceDiscoveryManager: org.jivesoftware.smackx.NodeInformationProvider getNodeInformationProvider(java.lang.String)> 
<android.nfc.tech.MifareClassic: int getBlockCount()> 
<org.apache.james.mime4j.MimeStreamParser: org.apache.james.mime4j.BodyDescriptor parseHeader(java.io.InputStream)> 
<android.filterfw.core.FrameFormat: int getValuesPerSample()> 
<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.HttpConnectionMetrics getMetrics()> 
<android.app.Activity: android.app.ActionBar getActionBar()> 
<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String getName()> 
<org.apache.commons.codec.net.URLCodec: java.lang.String decode(java.lang.String,java.lang.String)> 
<java.util.logging.Logger: boolean getUseParentHandlers()> 
<android.view.ViewRootImpl: android.view.WindowLeaked getLocation()> 
<android.opengl.GLUtils: java.lang.String getEGLErrorString(int)> 
<java.util.concurrent.atomic.AtomicInteger: int getAndDecrement()> 
<android.telephony.gsm.SmsManager: android.telephony.gsm.SmsManager getDefault()> 
<org.apache.xml.utils.DOMHelper: java.lang.String getUnparsedEntityURI(java.lang.String,org.w3c.dom.Document)> 
<android.webkit.MimeTypeMap: java.lang.String getMimeTypeFromExtension(java.lang.String)> 
<java.util.concurrent.FutureTask: java.lang.Object get()> 
<android.bluetooth.BluetoothHealthAppConfiguration: int getChannelType()> 
<org.apache.xpath.operations.Variable: int getAnalysisBits()> 
<android.widget.TextView: android.text.TextPaint getPaint()> 
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getParent()> 
<android.telephony.SmsMessage: int getProtocolIdentifier()> 
<android.text.SpannableStringInternal: int getSpanStart(java.lang.Object)> 
<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams getApplicationParams()> 
<android.support.v4.view.PagerAdapter: float getPageWidth(int)> 
<org.apache.http.impl.conn.DefaultResponseParser: org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer)> 
<android.media.AudioManager: android.media.IRingtonePlayer getRingtonePlayer()> 
<org.apache.harmony.security.x509.tsp.PKIFailureInfo: int getValue()> 
<javax.crypto.EncryptedPrivateKeyInfo: java.security.spec.PKCS8EncodedKeySpec getKeySpec(javax.crypto.Cipher)> 
<android.nfc.tech.NfcB: int getMaxTransceiveLength()> 
<android.nfc.tech.NfcA: int getMaxTransceiveLength()> 
<android.nfc.tech.NfcF: int getMaxTransceiveLength()> 
<android.os.Environment: java.io.File getEmulatedStorageSource(int)> 
<org.apache.xalan.Version: java.lang.String getProduct()> 
<org.apache.xml.utils.SAXSourceLocator: java.lang.String getPublicId()> 
<android.gesture.GestureStore: android.gesture.Learner getLearner()> 
<libcore.net.http.HttpResponseCache: int getRequestCount()> 
<android.content.res.Resources: int getColor(int)> 
<libcore.net.http.HttpsURLConnectionImpl: java.security.cert.Certificate[] getLocalCertificates()> 
<android.speech.tts.SynthesisRequest: java.lang.String getCountry()> 
<android.database.MergeCursor: short getShort(int)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey: java.math.BigInteger getPrimeExponentQ()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey: java.math.BigInteger getPrimeExponentP()> 
<org.apache.harmony.xnet.provider.jsse.CertPinManager: java.lang.String[] getPinFileEntries(java.lang.String)> 
<java.lang.System: java.lang.String getProperty(java.lang.String)> 
<javax.net.ssl.DefaultSSLServerSocketFactory: java.lang.String[] getDefaultCipherSuites()> 
<android.database.DatabaseUtils: byte[] getCollationKeyInBytes(java.lang.String)> 
<java.net.URLConnection: java.util.Map getHeaderFields()> 
<android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat: java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo)> 
<android.graphics.drawable.ScaleDrawable: int getIntrinsicWidth()> 
<android.media.videoeditor.MediaArtistNativeHelper: int getEffectColorType(android.media.videoeditor.EffectColor)> 
<android.filterfw.core.SimpleFrame: java.nio.ByteBuffer getData()> 
<android.hardware.usb.UsbInterface: int getInterfaceSubclass()> 
<android.database.BulkCursorToCursorAdaptor: java.lang.String[] getColumnNames()> 
<gov.nist.javax.sip.stack.SIPTransactionStack: javax.sip.Dialog getJoinDialog(gov.nist.javax.sip.header.extensions.JoinHeader)> 
<gov.nist.javax.sip.header.Challenge: java.lang.String getParameter(java.lang.String)> 
<android.content.Intent: java.lang.Object getExtra(java.lang.String,java.lang.Object)> 
<android.mtp.MtpDatabase: boolean getObjectInfo(int,int[],char[],long[])> 
<org.jivesoftware.smack.packet.Authentication: java.lang.String getResource()> 
<android.webkit.ZoomManager: android.view.View getExternalZoomPicker()> 
<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.BlockingQueue getQueue()> 
<org.apache.xpath.axes.AxesWalker: int getNextNode()> 
<android.net.TrafficStats: long getTotalTxPackets()> 
<android.view.animation.Animation: void getInvalidateRegion(int,int,int,int,android.graphics.RectF,android.view.animation.Transformation)> 
<android.text.DynamicLayout: boolean getLineContainsTab(int)> 
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getAllButNulLegal()> 
<org.apache.xml.utils.URI: java.lang.String getScheme()> 
<android.widget.DatePicker: android.widget.CalendarView getCalendarView()> 
<android.view.View: void getHitRect(android.graphics.Rect)> 
<org.apache.xml.dtm.ref.DTMNodeIterator: boolean getExpandEntityReferences()> 
<gov.nist.javax.sip.stack.SIPTransactionStack: int getReceiveUdpBufferSize()> 
<org.apache.http.auth.params.AuthParams: java.lang.String getCredentialCharset(org.apache.http.params.HttpParams)> 
<java.util.zip.Deflater: long getBytesWritten()> 
<javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()> 
<libcore.icu.LocaleData: java.lang.String getDateFormat(int)> 
<javax.net.ssl.CertPathTrustManagerParameters: java.security.cert.CertPathParameters getParameters()> 
<org.apache.xalan.templates.ElemLiteralResult: java.lang.String getVersion()> 
<android.renderscript.ProgramRaster: android.renderscript.ProgramRaster$CullMode getCullMode()> 
<android.media.MediaPlayer: android.media.MediaPlayer$TrackInfo[] getTrackInfo()> 
<android.app.Fragment: java.lang.String getString(int,java.lang.Object[])> 
<android.view.inputmethod.InputMethodInfo: int getIsDefaultResourceId()> 
<android.drm.DrmInfoRequest: int getInfoType()> 
<android.net.LocalServerSocket: java.io.FileDescriptor getFileDescriptor()> 
<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal getIssuer()> 
<java.net.DatagramSocket: java.net.SocketAddress getLocalSocketAddress()> 
<android.widget.TabHost: android.widget.FrameLayout getTabContentView()> 
<android.content.pm.UserInfo: android.os.UserHandle getUserHandle()> 
<android.database.CursorToBulkCursorAdaptor: android.os.Bundle getExtras()> 
<java.text.DecimalFormatSymbols: char getPatternSeparator()> 
<android.webkit.WebSettingsClassic: java.lang.String getSansSerifFontFamily()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey: java.math.BigInteger getPrimeP()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey: java.math.BigInteger getPrimeQ()> 
<org.apache.harmony.xml.dom.EntityImpl: java.lang.String getSystemId()> 
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)> 
<org.apache.xml.utils.UnImplNode: java.lang.String getActualEncoding()> 
<android.location.GpsSatellite: int getPrn()> 
<android.media.videoeditor.TransitionAlpha: java.lang.String getPNGMaskFilename()> 
<android.app.Instrumentation: android.content.ComponentName getComponentName()> 
<android.support.v4.app.TaskStackBuilderHoneycomb: android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int)> 
<android.media.audiofx.EnvironmentalReverb: short getReflectionsLevel()> 
<gov.nist.javax.sip.stack.TCPMessageChannel: java.lang.String getKey()> 
<android.text.format.Time: int getJulianMondayFromWeeksSinceEpoch(int)> 
<org.apache.harmony.security.x509.Certificate: org.apache.harmony.security.x509.TBSCertificate getTbsCertificate()> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: org.xml.sax.EntityResolver getEntityResolver()> 
<android.util.MonthDisplayHelper: int getFirstDayOfMonth()> 
<android.drm.DrmInfo: byte[] getData()> 
<net.oauth.signature.OAuthSignatureMethod: java.lang.String getConsumerSecret()> 
<org.apache.xpath.compiler.OpMap: int getNextStepPos(int)> 
<android.test.mock.MockPackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int)> 
<org.apache.harmony.xml.dom.DOMErrorImpl: java.lang.Object getRelatedData()> 
<android.telephony.cdma.CdmaSmsCbProgramData: int getCategory()> 
<android.test.InstrumentationTestRunner: boolean getBooleanArgument(android.os.Bundle,java.lang.String)> 
<gov.nist.javax.sip.ListeningPointImpl: int getPort()> 
<org.apache.xalan.templates.Stylesheet: int getAttributeSetCount()> 
<android.filterfw.core.KeyValueMap: java.lang.String getString(java.lang.String)> 
<android.view.ViewConfiguration: int getWindowTouchSlop()> 
<java.text.DecimalFormat: java.util.Currency getCurrency()> 
<android.graphics.drawable.NinePatchDrawable: int getIntrinsicHeight()> 
<gov.nist.javax.sip.header.SIPDate: int getDeltaSeconds()> 
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.FromHeader getFrom()> 
<android.hardware.GeomagneticField: float getFieldStrength()> 
<org.jivesoftware.smack.ConnectionConfiguration: java.lang.String getTruststorePath()> 
<android.media.videoeditor.MediaVideoItem: java.lang.String getAudioWaveformFilename()> 
<android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat: java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo)> 
<org.apache.harmony.security.x509.CRLDistributionPoints: byte[] getEncoded()> 
<android.webkit.WebView: float getScale()> 
<org.apache.commons.io.output.DeferredFileOutputStream: java.io.File getFile()> 
<android.speech.tts.SynthesisRequest: android.os.Bundle getParams()> 
<org.apache.xml.utils.DOMHelper: java.lang.String getUniqueID(org.w3c.dom.Node)> 
<java.security.cert.X509CertSelector: byte[] getSubjectKeyIdentifier()> 
<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int getLast()> 
<android.widget.FastScroller: android.widget.SectionIndexer getSectionIndexer()> 
<org.apache.xalan.templates.ElemExtensionDecl: org.apache.xml.utils.StringVector getElements()> 
<java.nio.charset.CharsetDecoderICU: int getArray(java.nio.ByteBuffer)> 
<android.database.BulkCursorToCursorAdaptor: int getCount()> 
<android.net.LocalSocket: java.io.FileDescriptor getFileDescriptor()> 
<android.net.wifi.WifiApConfigStore: android.os.Messenger getMessenger()> 
<android.media.videoeditor.MediaArtistNativeHelper: boolean getGeneratePreview()> 
<android.renderscript.Allocation: android.renderscript.Type getType()> 
<org.apache.james.mime4j.field.DateTimeField: java.util.Date getDate()> 
<android.app.ActivityManagerProxy: android.content.ComponentName getActivityClassForToken(android.os.IBinder)> 
<org.jivesoftware.smackx.packet.DiscoverItems: java.lang.String getNode()> 
<android.speech.tts.TextToSpeechService: java.lang.String[] getSettingsLocale()> 
<java.security.cert.X509CertSelector: java.util.Date getPrivateKeyValid()> 
<android.widget.FrameLayout: int getPaddingRightWithForeground()> 
<gov.nist.javax.sip.address.TelephoneNumber: java.lang.String getParameter(java.lang.String)> 
<org.apache.xalan.processor.StylesheetHandler: java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Node)> 
<android.support.v4.view.accessibility.AccessibilityEventCompatIcs: int getRecordCount(android.view.accessibility.AccessibilityEvent)> 
<org.xml.sax.helpers.NamespaceSupport: java.lang.String getPrefix(java.lang.String)> 
<gov.nist.javax.sip.header.ims.PChargingVector: java.lang.String getOriginatingIOI()> 
<android.hardware.usb.UsbManager: android.hardware.usb.UsbAccessory[] getAccessoryList()> 
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: boolean getWantClientAuth()> 
<java.util.concurrent.locks.ReentrantLock: java.lang.Thread getOwner()> 
<gov.nist.core.NameValueList: gov.nist.core.NameValue get(java.lang.Object)> 
<org.xml.sax.helpers.XMLFilterImpl: org.xml.sax.XMLReader getParent()> 
<android.util.TimeUtils: java.util.ArrayList getTimeZones(java.lang.String)> 
<org.kxml2.io.KXmlParser: int getNamespaceCount(int)> 
<android.hardware.usb.UsbDevice: int getDeviceId()> 
<org.apache.harmony.xml.dom.DocumentImpl: java.lang.String getXmlEncoding()> 
<javax.crypto.Cipher: java.security.AlgorithmParameters getParameters()> 
<libcore.icu.ICU: java.util.Locale[] getAvailableCalendarLocales()> 
<org.jivesoftware.smack.packet.PresenceCapability: java.lang.String getVersion()> 
<org.apache.harmony.security.x509.Validity: byte[] getEncoded()> 
<android.content.Intent: long getLongExtra(java.lang.String,long)> 
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.ElemVariable getVariableOrParam(int)> 
<java.security.spec.ECPoint: java.math.BigInteger getAffineX()> 
<android.os.Debug: int getGlobalClassInitTime()> 
<java.security.spec.ECPoint: java.math.BigInteger getAffineY()> 
<android.webkit.CallbackProxy: int getProgress()> 
<org.apache.xml.utils.UnImplNode: java.lang.String getBaseURI()> 
<android.widget.TextView: int getTextColor(android.content.Context,android.content.res.TypedArray,int)> 
<android.media.videoeditor.MediaItem: int getRenderingMode()> 
<org.apache.http.client.methods.HttpPut: java.lang.String getMethod()> 
<java.sql.Time: int getDate()> 
<org.apache.james.mime4j.field.address.Mailbox: org.apache.james.mime4j.field.address.DomainList getRoute()> 
<android.widget.FastScroller: java.lang.Object[] getSections()> 
<org.apache.xalan.processor.XSLTElementDef: int getLastOrder()> 
<dalvik.system.profiler.BinaryHprofReader: void parseLoadClass()> 
<java.io.ObjectStreamClass: java.io.ObjectStreamField[] getFields()> 
<android.content.SyncStorageEngine: java.util.ArrayList getAuthorities()> 
<org.apache.commons.io.input.ClosedInputStream: int read()> 
<android.widget.SimpleCursorAdapter: int getStringConversionColumn()> 
<android.widget.GridLayout: android.widget.GridLayout$Alignment getAlignment(android.widget.GridLayout$Alignment,boolean)> 
<android.app.admin.DevicePolicyManager: int getStorageEncryptionStatus(int)> 
<libcore.io.ForwardingOs: int getgid()> 
<org.apache.xml.serializer.dom3.DOMErrorImpl: org.w3c.dom.DOMLocator getLocation()> 
<libcore.io.ForwardingOs: int pread(java.io.FileDescriptor,java.nio.ByteBuffer,long)> 
<libcore.net.http.HttpEngine: java.io.InputStream getTransferStream()> 
<android.content.Loader: void onStartLoading()> 
<android.telephony.SmsMessage: android.telephony.SmsMessage$MessageClass getMessageClass()> 
<java.security.cert.X509CRLSelector: java.util.Date getDateAndTime()> 
<android.widget.DatePicker: int getDayOfMonth()> 
<org.apache.http.message.BasicHttpRequest: org.apache.http.ProtocolVersion getProtocolVersion()> 
<android.content.pm.ContainerEncryptionParams: long getDataEnd()> 
<android.widget.ExpandableListPosition: android.widget.ExpandableListPosition getRecycledOrCreate()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: org.xml.sax.ErrorHandler getErrorHandler()> 
<org.apache.http.HttpHost: java.lang.String getHostName()> 
<android.mtp.MtpObjectInfo: int getSequenceNumber()> 
<android.telephony.gsm.SmsMessage: java.lang.String getMessageBody()> 
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getDefaultActivityIcon()> 
<java.net.URL: java.lang.String getProtocol()> 
<libcore.net.http.HttpConnection: libcore.net.http.HttpConnection$Address getAddress()> 
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.CookieStore getCookieStore()> 
<android.view.textservice.SentenceSuggestionsInfo: int getLengthAt(int)> 
<org.apache.harmony.security.asn1.BerOutputStream: void getChoiceLength(org.apache.harmony.security.asn1.ASN1Choice)> 
<org.apache.xalan.templates.ElemVariable: org.apache.xpath.objects.XObject getValue(org.apache.xalan.transformer.TransformerImpl,int)> 
<java.nio.DoubleToByteBufferAdapter: double get()> 
<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: byte[] getDigestMD5withoutLast()> 
<gov.nist.javax.sip.header.SIPDateHeader: java.util.Calendar getDate()> 
<android.app.ActivityManager: java.util.List getRunningAppProcesses()> 
<org.apache.xpath.functions.FunctionMultiArgs: org.apache.xpath.Expression[] getArgs()> 
<gov.nist.javax.sip.stack.TCPMessageChannel: java.lang.String getViaHost()> 
<org.apache.xpath.compiler.OpMap: org.apache.xpath.compiler.OpMapVector getOpMap()> 
<android.text.method.TimeKeyListener: char[] getAcceptedChars()> 
<android.test.mock.MockCursor: int getCount()> 
<org.apache.harmony.security.pkcs7.SignerInfo: javax.security.auth.x500.X500Principal getIssuer()> 
<javax.sip.ResponseEvent: javax.sip.ClientTransaction getClientTransaction()> 
<android.net.LinkProperties: java.util.Collection getRoutes()> 
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.StylesheetComposed getStylesheetComposed()> 
<org.apache.xpath.axes.FilterExprIteratorSimple: org.apache.xpath.Expression getInnerExpression()> 
<android.opengl.GLLogWrapper: java.lang.String getIndexType(int)> 
<android.content.AbstractThreadedSyncAdapter: android.os.IBinder getSyncAdapterBinder()> 
<android.text.BoringLayout: int getLineTop(int)> 
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getContentDescription()> 
<org.apache.http.impl.client.TunnelRefusedException: org.apache.http.HttpResponse getResponse()> 
<android.webkit.WebSettings: java.lang.String getDefaultUserAgent(android.content.Context)> 
<org.apache.harmony.xnet.provider.jsse.CipherSuite: java.lang.String getName()> 
<android.location.Geocoder: java.util.List getFromLocation(double,double,int)> 
<org.apache.commons.io.input.CharSequenceReader: int read()> 
<android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)> 
<android.accounts.AccountManagerService: android.os.UserManager getUserManager()> 
<org.apache.xml.utils.UnImplNode: org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)> 
<android.telephony.SmsCbCmasInfo: int getCertainty()> 
<android.net.http.Headers: java.lang.String getAcceptRanges()> 
<java.util.jar.InitManifest: boolean readHeader()> 
<android.server.search.Searchables: java.lang.String getGlobalSearchProviderSetting()> 
<java.util.zip.ZipEntry: java.lang.String getName()> 
<org.apache.http.impl.auth.RFC2617Scheme: java.util.Map getParameters()> 
<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getMethod()> 
<android.webkit.PluginData: java.util.Map getHeaders()> 
<android.net.LocalSocket: android.net.Credentials getPeerCredentials()> 
<org.apache.commons.codec.language.RefinedSoundex: char getMappingCode(char)> 
<android.drm.DrmManagerClient: android.content.ContentValues getConstraints(android.net.Uri,int)> 
<java.net.HttpURLConnection: long getHeaderFieldDate(java.lang.String,long)> 
<java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader)> 
<android.text.method.TextKeyListener: android.text.method.KeyListener getKeyListener(android.view.KeyEvent)> 
<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getNamespaceURI()> 
<org.apache.xml.dtm.ref.DTMNamedNodeMap: org.w3c.dom.Node getNamedItemNS(java.lang.String,java.lang.String)> 
<java.text.NumberFormat: java.text.NumberFormat getNumberInstance(java.util.Locale)> 
<jp.co.omronsoft.openwnn.Keyboard: int getKeyHeight()> 
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)> 
<org.apache.harmony.security.provider.cert.X509CertPathImpl: java.util.Iterator getEncodings()> 
<org.apache.james.mime4j.BodyDescriptor: java.util.Map getParameters()> 
<org.ccil.cowan.tagsoup.AttributesImpl: int getIndex(java.lang.String)> 
<android.webkit.CertTool: java.lang.String getSignedPublicKey(android.content.Context,int,java.lang.String)> 
<android.database.sqlite.SQLiteDatabase: java.util.ArrayList getDbStats()> 
<org.apache.harmony.xnet.provider.jsse.AlertProtocol: byte getDescriptionCode()> 
<android.renderscript.Allocation: android.graphics.SurfaceTexture getSurfaceTexture()> 
<android.app.WallpaperInfo: android.content.pm.ServiceInfo getServiceInfo()> 
<java.security.cert.CertStore: java.security.cert.CertStore getInstance(java.lang.String,java.security.cert.CertStoreParameters)> 
<android.view.MotionEvent: int getMetaState()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: java.lang.String getFormat()> 
<java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()> 
<org.apache.http.impl.conn.tsccm.BasicPoolEntryRef: org.apache.http.conn.routing.HttpRoute getRoute()> 
<android.text.method.DateKeyListener: int getInputType()> 
<android.database.AbstractCursor: int getPosition()> 
<android.gesture.GestureOverlayView: android.graphics.Path getGesturePath()> 
<javax.xml.transform.stream.StreamResult: java.lang.String getSystemId()> 
<android.net.wifi.WifiSsid: java.lang.String getHexString()> 
<android.view.animation.Animation: int getZAdjustment()> 
<org.apache.xpath.NodeSet: int getWhatToShow()> 
<android.webkit.WebHistoryItem: java.lang.String getOriginalUrl()> 
<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.Contact getContactHeader()> 
<android.view.View: int getAccessibilityCursorPosition()> 
<org.kxml2.io.KXmlParser: java.lang.String readValue(char,boolean,boolean,org.kxml2.io.KXmlParser$ValueContext)> 
<org.apache.xpath.axes.NodeSequence: org.apache.xml.dtm.DTM getDTM(int)> 
<android.widget.TimePicker: int getBaseline()> 
<org.apache.harmony.security.x509.TBSCertList: int getVersion()> 
<android.view.inputmethod.InputMethodInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)> 
<android.webkit.WebViewClassic: void loadDataImpl(java.lang.String,java.lang.String,java.lang.String)> 
<org.apache.james.mime4j.util.PartialInputStream: int getBytesLeft()> 
<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])> 
<org.apache.xalan.templates.KeyDeclaration: int getXSLToken()> 
<gov.nist.javax.sip.message.ContentImpl: java.lang.Object getContent()> 
<org.apache.harmony.security.utils.ObjectIdentifier: java.lang.String getName()> 
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponseInterceptor getResponseInterceptor(int)> 
<java.util.concurrent.locks.ReentrantReadWriteLock: java.lang.Thread getOwner()> 
<android.widget.RelativeLayout: int getChildMeasureSpec(int,int,int,int,int,int,int,int)> 
<android.app.admin.DevicePolicyManager: boolean getStorageEncryption(android.content.ComponentName)> 
<org.apache.xpath.objects.XNodeSet: org.apache.xml.utils.XMLString getStringFromNode(int)> 
<gov.nist.javax.sip.SipProviderImpl: javax.sip.SipListener getSipListener()> 
<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.Builder getInstance()> 
<org.apache.xalan.transformer.TransformerImpl: boolean getDebug()> 
<android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)> 
<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getSystemId()> 
<java.util.TimeZone: java.lang.String[] getAvailableIDs(int)> 
<org.apache.harmony.security.x509.CRLNumber: java.math.BigInteger getNumber()> 
<org.apache.xpath.axes.WalkerFactory: org.apache.xpath.axes.AxesWalker loadOneWalker(org.apache.xpath.axes.WalkingIterator,org.apache.xpath.compiler.Compiler,int)> 
<javax.net.ssl.SSLContext: javax.net.ssl.SSLParameters getSupportedSSLParameters()> 
<android.media.videoeditor.MediaImageItem: int getFileType()> 
<android.drm.DrmUtils: android.drm.DrmUtils$ExtendedMetadataParser getExtendedMetadataParser(byte[])> 
<org.jivesoftware.smack.XMPPConnection: int getLocalConnectionId()> 
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)> 
<java.net.URLConnection: int getConnectTimeout()> 
<org.apache.xml.dtm.ref.SecuritySupport: long getLastModified(java.io.File)> 
<android.widget.AbsSeekBar: int getThumbOffset()> 
<java.text.DateFormat: java.text.DateFormat getTimeInstance(int)> 
<gov.nist.javax.sip.message.SIPMessage: int getSize()> 
<org.apache.xml.utils.SecuritySupport: java.io.FileInputStream getFileInputStream(java.io.File)> 
<android.test.mock.MockPackageManager: java.util.List getInstalledPackages(int,int)> 
<javax.net.ssl.DistinguishedNameParser: char getEscaped()> 
<org.apache.xalan.templates.ElemTemplateElement: org.w3c.dom.Node getDOMBackPointer()> 
<android.os.UserManager: android.os.UserHandle getUserForSerialNumber(long)> 
<libcore.icu.TimeZones: java.lang.String getDisplayName(java.lang.String[][],java.lang.String,boolean,int)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: java.lang.String[] getSupportedProtocols()> 
<android.media.videoeditor.Transition: long getDuration()> 
<gov.nist.javax.sip.address.Authority: java.lang.String getPassword()> 
<libcore.io.ForwardingOs: libcore.io.StructLinger getsockoptLinger(java.io.FileDescriptor,int,int)> 
<android.filterpacks.imageproc.DrawRectFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<android.support.v4.content.ModernAsyncTask: android.support.v4.content.ModernAsyncTask$Status getStatus()> 
<java.nio.LongArrayBuffer: java.nio.LongBuffer get(long[],int,int)> 
<java.net.URI: java.lang.String getRawSchemeSpecificPart()> 
<android.app.ActivityManager: java.util.List getRecentTasks(int,int)> 
<org.apache.xalan.templates.Stylesheet: int getExcludeResultPrefixCount()> 
<android.content.pm.PackageParser: boolean parseIntent(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,int,android.content.pm.PackageParser$IntentInfo,java.lang.String[],boolean)> 
<org.apache.xalan.processor.ProcessorImport: java.lang.String getStylesheetInclErr()> 
<org.apache.xpath.XPath: double getMatchScore(org.apache.xpath.XPathContext,int)> 
<org.apache.xml.dtm.ref.SecuritySupport12: long getLastModified(java.io.File)> 
<org.apache.xalan.templates.ElemText: java.lang.String getNodeName()> 
<java.nio.SocketChannelImpl: java.net.InetAddress getLocalAddress()> 
<android.widget.AbsListView: java.lang.CharSequence getTextFilter()> 
<jp.co.omronsoft.openwnn.TextCandidatesViewManager: int getCandidateViewHeight()> 
<android.net.NetworkStatsHistory: long getTotalBytes()> 
<java.nio.LongToByteBufferAdapter: long get(int)> 
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: android.os.Parcelable getParcelableData(java.lang.Object)> 
<android.text.DynamicLayout: int[] getBlockIndices()> 
<android.accounts.AccountManager: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes()> 
<android.view.MotionEvent: float getToolMajor()> 
<net.oauth.signature.OAuthSignatureMethod: java.lang.String getBaseString(net.oauth.OAuthMessage)> 
<java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)> 
<android.filterpacks.imageproc.BitmapOverlayFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<java.nio.MappedByteBufferAdapter: double getDouble()> 
<org.apache.http.util.VersionInfo: java.lang.String getTimestamp()> 
<libcore.io.Posix: int read(java.io.FileDescriptor,byte[],int,int)> 
<android.widget.NumberPicker: float getTopFadingEdgeStrength()> 
<java.net.Authenticator: int getRequestingPort()> 
<java.text.FieldPosition: int getField()> 
<android.app.ActivityManagerProxy: int getFrontActivityScreenCompatMode()> 
<android.filterpacks.imageproc.ToRGBFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<org.apache.harmony.security.asn1.BerInputStream: byte[] getEncoded()> 
<gov.nist.javax.sip.header.Contact: gov.nist.javax.sip.header.ContactList getContactList()> 
<android.media.AudioService: boolean loadSoundEffects()> 
<org.apache.xml.serializer.dom3.DOM3SerializerImpl: org.w3c.dom.DOMErrorHandler getErrorHandler()> 
<android.filterfw.core.Filter: android.filterfw.core.OutputPort getOutputPort(java.lang.String)> 
<org.apache.http.impl.io.AbstractSessionInputBuffer: int handleDecodingResult(java.nio.charset.CoderResult,org.apache.http.util.CharArrayBuffer,java.nio.ByteBuffer)> 
<org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore: java.util.Date getCreationDate(java.lang.String)> 
<org.apache.harmony.xml.dom.ProcessingInstructionImpl: java.lang.String getTarget()> 
<org.apache.xalan.templates.XMLNSDecl: java.lang.String getPrefix()> 
<org.apache.harmony.security.provider.cert.X509CertImpl: byte[] getSignatureInternal()> 
<org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore: java.lang.String getCertificateAlias(java.security.cert.Certificate)> 
<org.apache.xml.dtm.ref.ExpandedNameTable: int getSize()> 
<java.nio.ShortToByteBufferAdapter: short get(int)> 
<org.apache.http.impl.cookie.RFC2965Spec: int getVersion()> 
<android.webkit.WebViewCore: android.webkit.ViewManager$ChildView createSurface(android.view.View)> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: java.lang.String getValue()> 
<java.net.Socket: int getReceiveBufferSize()> 
<android.os.UserHandle: int getIdentifier()> 
<org.json.JSONObject: long getLong(java.lang.String)> 
<android.media.MediaCodec: java.nio.ByteBuffer[] getInputBuffers()> 
<java.util.UnknownFormatConversionException: java.lang.String getConversion()> 
<android.telephony.CellBroadcastMessage: int getServiceCategory()> 
<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetComposed getGlobalImport(int)> 
<java.nio.charset.CharsetEncoderICU: int getArray(java.nio.ByteBuffer)> 
<android.net.sip.SipAudioCall: android.net.sip.SimpleSessionDescription createAnswer(java.lang.String)> 
<java.nio.HeapByteBuffer: short getShort(int)> 
<android.hardware.display.DisplayManager: android.view.Display getOrCreateDisplayLocked(int,boolean)> 
<android.webkit.WebViewClassic: int getBlockLeftEdge(int,int,float)> 
<android.widget.ExpandableListConnector: android.view.View getView(int,android.view.View,android.view.ViewGroup)> 
<android.text.SpannableStringBuilder: int getSpanStart(java.lang.Object)> 
<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()> 
<libcore.net.http.HttpEngine: java.lang.String getRequestLine()> 
<org.apache.xml.serializer.ObjectFactory: java.lang.ClassLoader findClassLoader()> 
<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getKey()> 
<android.app.Activity: java.lang.Object getLastNonConfigurationInstance()> 
<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost getHopTarget(int)> 
<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()> 
<android.preference.PreferenceGroupAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> 
<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()> 
<android.text.style.SuggestionSpan: java.lang.String getNotificationTargetClassName()> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: java.lang.String getDocumentTypeDeclarationPublicIdentifier()> 
<android.support.v4.app.NavUtils: java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName)> 
<android.media.videoeditor.VideoEditorImpl: java.util.List getAllMediaItems()> 
<android.webkit.WebViewClassic: int getOverlappingActionModeHeight()> 
<org.apache.http.cookie.CookieOrigin: java.lang.String getHost()> 
<android.widget.SuggestionsAdapter: java.lang.String getColumnString(android.database.Cursor,java.lang.String)> 
<android.graphics.Paint: boolean getFillPath(android.graphics.Path,android.graphics.Path)> 
<android.accounts.ChooseTypeAndAccountActivity: int getItemIndexToSelect(java.util.ArrayList,java.lang.String,boolean)> 
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.Node getOwnerNode()> 
<android.view.MotionEvent: float getSize(int)> 
<android.net.LocalSocket: java.io.InputStream getInputStream()> 
<android.view.inputmethod.CompletionInfo: java.lang.CharSequence getText()> 
<android.widget.ListView: int getHeaderViewsCount()> 
<android.content.res.Resources: java.lang.String getString(int)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.security.cert.Certificate[] getLocalCertificates()> 
<android.view.ViewGroup: boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation)> 
<android.app.ExpandableListActivity: android.widget.ExpandableListAdapter getExpandableListAdapter()> 
<org.apache.xalan.templates.ElemComment: java.lang.String getNodeName()> 
<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getTagName()> 
<jp.co.omronsoft.openwnn.DefaultSoftKeyboard: jp.co.omronsoft.openwnn.Keyboard getShiftChangeKeyboard(int)> 
<android.telephony.SignalStrength: int getLteLevel()> 
<android.widget.Spinner: java.lang.CharSequence getPrompt()> 
<android.preference.Preference: android.content.Intent getIntent()> 
<android.text.Layout: android.text.Layout$Alignment getAlignment()> 
<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.RejectedExecutionHandler getRejectedExecutionHandler()> 
<org.apache.harmony.xnet.provider.jsse.NativeCrypto: java.lang.String[] getSupportedProtocols()> 
<android.bluetooth.BluetoothServerSocket: int getChannel()> 
<android.filterfw.core.Frame: long getTimestamp()> 
<java.lang.Throwable: java.lang.String getMessage()> 
<java.awt.font.NumericShaper: int getRanges()> 
<android.app.Activity: java.lang.String getLocalClassName()> 
<org.apache.xpath.axes.OneStepIteratorForward: int getAxis()> 
<android.test.suitebuilder.TestGrouping: java.util.List getTests()> 
<android.widget.TextView: int getFadeTop(boolean)> 
<org.apache.harmony.security.asn1.ASN1Oid: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)> 
<android.server.search.Searchables: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)> 
<android.preference.ListPreference: java.lang.CharSequence[] getEntryValues()> 
<android.view.ViewConfiguration: int getScaledOverscrollDistance()> 
<android.filterfw.core.GLFrameTimer: android.filterfw.core.StopWatchMap get()> 
<android.view.PointerIcon: float getHotSpotX()> 
<android.view.PointerIcon: float getHotSpotY()> 
<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.Stylesheet getStylesheet()> 
<android.app.Activity: java.util.HashMap getLastNonConfigurationChildInstances()> 
<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack getStack()> 
<gov.nist.javax.sip.header.ParametersHeader: int getParameterAsInt(java.lang.String)> 
<java.security.CodeSource: java.security.cert.Certificate[] getCertificates()> 
<org.javia.arity.Symbols: java.lang.String[] getDictionary()> 
<gov.nist.javax.sip.SipStackImpl: gov.nist.javax.sip.EventScanner getEventScanner()> 
<android.media.EncoderCapabilities: int[] getOutputFileFormats()> 
<org.jivesoftware.smackx.packet.VCard: java.lang.String getAvatarHash()> 
<android.content.ContentValues: java.lang.String getAsString(java.lang.String)> 
<org.apache.xpath.functions.SecuritySupport12: java.lang.ClassLoader getSystemClassLoader()> 
<org.apache.xml.dtm.ref.DTMDefaultBase: int getNextAttributeIdentity(int)> 
<android.app.Fragment: android.app.Activity getActivity()> 
<gov.nist.javax.sip.address.SipUri: int getPort()> 
<org.jivesoftware.smack.packet.Authentication: java.lang.String getDigest()> 
<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.message.SIPMessage parseSIPMessage(java.lang.String)> 
<android.media.AudioTrack: float getMaxVolume()> 
<android.widget.ProgressBar: int getMax()> 
<org.apache.xpath.objects.XRTreeFragSelectWrapper: int getType()> 
<android.preference.DialogPreference: android.graphics.drawable.Drawable getDialogIcon()> 
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()> 
<android.widget.GridView: int getBottomSelectionPixel(int,int,int,int)> 
<android.net.http.RequestQueue: android.net.http.Request getRequest()> 
<java.security.cert.X509CRLSelector: java.util.Collection getIssuerNames()> 
<libcore.io.Posix: int pread(java.io.FileDescriptor,byte[],int,int,long)> 
<android.telephony.gsm.SmsMessage: java.lang.String getPseudoSubject()> 
<android.webkit.ZoomManager: int getDocumentAnchorX()> 
<android.webkit.ZoomManager: int getDocumentAnchorY()> 
<javax.security.auth.x500.X500Principal: byte[] getEncoded()> 
<android.gesture.GestureOverlayView: java.util.ArrayList getCurrentStroke()> 
<android.widget.TextView: int getGravity()> 
<org.apache.http.message.BasicNameValuePair: java.lang.String getName()> 
<android.gesture.Gesture: float getLength()> 
<android.webkit.ZoomControlEmbedded: android.widget.ZoomButtonsController getControls()> 
<android.mtp.MtpStorage: int getStorageId()> 
<android.net.ConnectivityManager: android.net.LinkProperties getActiveLinkProperties()> 
<java.util.GregorianCalendar: int getLeastMaximum(int)> 
<android.content.pm.ComponentInfo: int getIconResource()> 
<gov.nist.javax.sip.header.Via: java.lang.String getSentProtocolField()> 
<java.util.Properties: void loadFromXML(java.io.InputStream)> 
<android.media.videoeditor.MediaVideoItem: int getFileType()> 
<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()> 
<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.KeyUsage getKeyUsageValue()> 
<org.apache.http.impl.HttpConnectionMetricsImpl: long getResponseCount()> 
<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList getTextColor()> 
<javax.crypto.spec.DHGenParameterSpec: int getExponentSize()> 
<org.apache.harmony.security.x509.AlternativeName: byte[] getEncoded()> 
<android.widget.NumberPicker: boolean getWrapSelectorWheel()> 
<android.drm.mobile1.DrmConstraintInfo: int getCount()> 
<org.apache.xalan.templates.TemplateSubPatternAssociation: int getDocOrderPos()> 
<android.webkit.WebViewClassic: int getTextScrollY()> 
<android.webkit.WebViewClassic: int getTextScrollX()> 
<android.content.ContentValues: java.lang.Double getAsDouble(java.lang.String)> 
<org.apache.james.mime4j.decoder.DecoderUtil: java.lang.String decodeEncodedWord(java.lang.String,int,int)> 
<android.content.SearchRecentSuggestionsProvider: java.lang.String getType(android.net.Uri)> 
<junit.runner.BaseTestRunner: java.lang.Class loadSuiteClass(java.lang.String)> 
<org.apache.xml.serializer.SecuritySupport: long getLastModified(java.io.File)> 
<android.test.mock.MockCursor: float getFloat(int)> 
<android.drm.DrmInfo: int getInfoType()> 
<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getPrefix()> 
<org.xml.sax.helpers.ParserAdapter: boolean getFeature(java.lang.String)> 
<org.apache.harmony.security.fortress.Services: java.security.Provider$Service getService(java.lang.String)> 
<org.apache.harmony.xml.dom.NotationImpl: java.lang.String getNodeName()> 
<android.net.rtp.RtpStream: int getRemotePort()> 
<java.lang.String: byte[] getBytes()> 
<android.widget.TextClock: java.lang.CharSequence getFormat24Hour()> 
<java.nio.DirectByteBuffer: float getFloat()> 
<android.net.nsd.NsdManager: android.net.nsd.NsdServiceInfo getNsdService(int)> 
<java.security.KeyStore: void load(java.io.InputStream,char[])> 
<org.apache.xpath.XPathException: java.lang.String getMessage()> 
<org.jivesoftware.smack.PacketReader: org.jivesoftware.smack.packet.RosterPacket parseRoster(com.google.common.io.protocol.ProtoBuf)> 
<gov.nist.javax.sip.message.MessageFactoryImpl: java.lang.String getDefaultContentEncodingCharset()> 
<org.apache.xml.utils.PrefixResolverDefault: java.lang.String getBaseIdentifier()> 
<java.util.concurrent.atomic.AtomicLong: long getAndDecrement()> 
<org.apache.commons.io.input.ProxyReader: int read(java.nio.CharBuffer)> 
<java.lang.Class: java.lang.ClassLoader getClassLoader()> 
<android.media.DecoderCapabilities: java.util.List getVideoDecoders()> 
<android.nfc.tech.NfcB: byte[] getApplicationData()> 
<org.apache.xml.utils.QName: java.lang.String getLocalName()> 
<java.util.Calendar: int getFirstDayOfWeek()> 
<org.apache.xpath.NodeSet: int getLength()> 
<org.apache.xml.utils.URI: java.lang.String getHost()> 
<android.animation.FloatKeyframeSet: java.lang.Object getValue(float)> 
<android.content.pm.LabeledIntent: java.lang.CharSequence getNonLocalizedLabel()> 
<org.apache.xpath.axes.NodeSequence: org.apache.xml.utils.NodeVector getVector()> 
<libcore.io.ForwardingOs: libcore.io.StructTimeval getsockoptTimeval(java.io.FileDescriptor,int,int)> 
<android.webkit.FindActionModeCallback: int getActionModeGlobalBottom()> 
<android.graphics.drawable.ClipDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> 
<android.text.method.QwertyKeyListener: android.text.method.QwertyKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize)> 
<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getGlobalRTFDTM()> 
<org.apache.http.entity.SerializableEntity: long getContentLength()> 
<org.apache.http.impl.cookie.BestMatchSpec: org.apache.http.Header getVersionHeader()> 
<android.net.wifi.WifiStateTracker: android.net.LinkCapabilities getLinkCapabilities()> 
<android.widget.TextView: android.text.method.MovementMethod getDefaultMovementMethod()> 
<org.apache.xml.utils.Context2: java.lang.String getPrefix(java.lang.String)> 
<android.filterpacks.imageproc.GrainFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteSession getSession()> 
<android.webkit.WebViewCore: android.webkit.WebViewClassic getWebViewClassic()> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int getFirstAttribute(int)> 
<org.jivesoftware.smackx.packet.VCard: java.lang.String getChildElementXML()> 
<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplicationAsUser(java.lang.String,int)> 
<org.apache.xpath.axes.AxesWalker: org.apache.xpath.axes.AxesWalker getNextWalker()> 
<android.test.TestCaseUtil: java.util.List getTestCaseNames(junit.framework.Test,boolean)> 
<android.webkit.WebViewClassic: int getScaledMaxXScroll()> 
<org.apache.xml.serializer.ToUnknownStream: java.lang.String getMediaType()> 
<java.util.HashMap: java.lang.Object get(java.lang.Object)> 
<org.jivesoftware.smack.PacketReader: java.util.Collection parseCompressionMethods(org.xmlpull.v1.XmlPullParser)> 
<android.webkit.WebViewClassic: java.lang.String[] getHttpAuthUsernamePassword(java.lang.String,java.lang.String)> 
<org.apache.xml.utils.DOMHelper: void getNodeData(org.w3c.dom.Node,org.apache.xml.utils.FastStringBuffer)> 
<org.xmlpull.v1.sax2.Driver: java.lang.String getValue(java.lang.String)> 
<org.apache.xalan.Version: int getReleaseVersionNum()> 
<java.io.RandomAccessFile: byte readByte()> 
<org.apache.harmony.xml.dom.ProcessingInstructionImpl: java.lang.String getData()> 
<org.jivesoftware.smackx.packet.VCard: java.lang.String getOrganization()> 
<android.os.Bundle: java.lang.CharSequence[] getCharSequenceArray(java.lang.String)> 
<org.apache.xml.dtm.DTMManager: boolean getIncremental()> 
<android.test.suitebuilder.TestSuiteBuilder: java.lang.String parsePackageNameFromClassName(java.lang.String)> 
<org.apache.xml.dtm.SecuritySupport12: long getLastModified(java.io.File)> 
<android.animation.LayoutTransition: android.animation.TimeInterpolator getInterpolator(int)> 
<org.jivesoftware.smackx.provider.MUCUserProvider: org.jivesoftware.smackx.packet.MUCUser$Decline parseDecline(org.xmlpull.v1.XmlPullParser)> 
<org.jivesoftware.smack.XMPPConnection: java.util.Map getLoginSettings()> 
<android.opengl.GLLogWrapper: int getLightParamCount(int)> 
<gov.nist.javax.sip.ListeningPointImpl: java.lang.String getTransport()> 
<android.net.wifi.WifiNative: java.lang.String getNetworkVariable(int,java.lang.String)> 
<android.telephony.SignalStrength: int getGsmAsuLevel()> 
<org.jivesoftware.smack.RosterEntry: java.lang.String getName()> 
<org.apache.xpath.objects.XNodeSet: java.lang.String getTypeString()> 
<org.apache.harmony.xml.dom.InnerNodeImpl: void getElementsByTagNameNS(org.apache.harmony.xml.dom.NodeListImpl,java.lang.String,java.lang.String)> 
<android.view.animation.AnimationSet: long getStartTime()> 
<android.widget.TextView: int getCompoundPaddingStart()> 
<org.xml.sax.helpers.XMLFilterImpl: org.xml.sax.ContentHandler getContentHandler()> 
<org.apache.xml.dtm.ref.DTMNodeList: org.apache.xml.dtm.DTMIterator getDTMIterator()> 
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.Object getChild(java.lang.Object,int)> 
<org.apache.http.params.AbstractHttpParams: long getLongParameter(java.lang.String,long)> 
<org.apache.harmony.security.provider.cert.X509CRLImpl: java.security.Principal getIssuerDN()> 
<org.apache.http.protocol.BasicHttpProcessor: org.apache.http.HttpResponseInterceptor getResponseInterceptor(int)> 
<android.app.ApplicationPackageManager: java.util.List getInstalledPackages(int)> 
<android.graphics.drawable.ShapeDrawable: int getIntrinsicWidth()> 
<android.view.Choreographer: long getFrameTime()> 
<org.apache.http.message.BasicHttpRequest: org.apache.http.RequestLine getRequestLine()> 
<javax.xml.validation.Validator: java.lang.Object getProperty(java.lang.String)> 
<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.SIPHeader getSIPHeaderListLowerCase(java.lang.String)> 
<org.apache.xalan.templates.FuncDocument: int getDoc(org.apache.xpath.XPathContext,int,java.lang.String,java.lang.String)> 
<android.webkit.JWebCoreJavaBridge: java.lang.String getPluginSharedDataDirectory()> 
<java.util.logging.Handler: java.util.logging.Level getLevel()> 
<android.widget.ImageView: int getBaseline()> 
<gov.nist.javax.sip.header.Via: java.lang.String getReceived()> 
<org.apache.xml.utils.UnImplNode: org.w3c.dom.TypeInfo getSchemaTypeInfo()> 
<org.apache.xalan.processor.XSLTElementDef: boolean getMultiAllowed()> 
<android.widget.SimpleExpandableListAdapter: int getGroupCount()> 
<org.apache.harmony.security.x509.CertificatePolicies: byte[] getEncoded()> 
<org.apache.xalan.templates.ElemTemplate: org.apache.xalan.templates.StylesheetComposed getStylesheetComposed()> 
<android.nfc.NdefRecord: byte[] getId()> 
<org.apache.harmony.security.pkcs10.CertificationRequestInfo: int getVersion()> 
<libcore.icu.ICU: java.util.Locale[] getAvailableNumberFormatLocales()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: java.lang.String getNodeValue(int)> 
<android.webkit.WebStorage: android.webkit.WebStorage getInstance()> 
<android.opengl.GLLogWrapper: java.lang.String getMaterialPName(int)> 
<android.view.Display: float getRefreshRate()> 
<android.net.http.Headers: long getContentLength()> 
<gov.nist.javax.sip.header.Reason: java.lang.String getProtocol()> 
<org.apache.xpath.compiler.OpMap: int getArgLength(int)> 
<java.net.JarURLConnection: java.util.jar.JarEntry getJarEntry()> 
<gov.nist.javax.sip.address.SipUri: java.lang.String getParameter(java.lang.String)> 
<org.apache.xalan.templates.ElemCallTemplate: org.apache.xalan.templates.ElemWithParam getParamElem(int)> 
<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)> 
<android.widget.Editor: int getErrorY()> 
<android.graphics.drawable.ColorDrawable: int getChangingConfigurations()> 
<org.apache.xml.utils.SecuritySupport12: long getLastModified(java.io.File)> 
<android.widget.Editor: int getErrorX()> 
<org.jivesoftware.smack.packet.HttpResponse: byte[] getData()> 
<android.content.ContentService: boolean getMasterSyncAutomatically()> 
<android.app.ContextImpl: java.lang.ClassLoader getClassLoader()> 
<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()> 
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock getLock()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey: java.math.BigInteger getPublicExponent()> 
<android.widget.CalendarView: int getWeeksSinceMinDate(java.util.Calendar)> 
<android.support.v4.view.accessibility.AccessibilityRecordCompat: int getMaxScrollX()> 
<android.support.v4.view.accessibility.AccessibilityRecordCompat: int getMaxScrollY()> 
<java.lang.System: java.util.Properties getProperties()> 
<android.net.NetworkStatsHistory: int getIndexAfter(long)> 
<android.view.MotionEvent: float getY()> 
<java.lang.Thread: int getPriority()> 
<android.view.MotionEvent: float getX()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: java.lang.Object getUserData(java.lang.String)> 
<gov.nist.javax.sip.header.TimeStamp: float getDelay()> 
<org.jivesoftware.smackx.packet.MUCUser: java.lang.String getPassword()> 
<gov.nist.javax.sip.SipStackImpl: gov.nist.javax.sip.clientauthutils.AuthenticationHelper getSecureAuthenticationHelper(gov.nist.javax.sip.clientauthutils.SecureAccountManager,javax.sip.header.HeaderFactory)> 
<android.media.videoeditor.MediaArtistNativeHelper: boolean getAudioflag()> 
<org.apache.xpath.axes.LocPathIterator: org.apache.xml.dtm.DTMFilter getFilter()> 
<gov.nist.javax.sip.header.ParametersHeader: java.util.Iterator getParameterNames()> 
<gov.nist.javax.sip.header.SubscriptionState: int getExpires()> 
<gov.nist.javax.sip.header.ParametersHeader: gov.nist.core.NameValueList getParameters()> 
<org.apache.xalan.templates.ElemTemplateElement: org.w3c.dom.Node getParentNode()> 
<org.apache.xpath.functions.SecuritySupport: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)> 
<org.apache.http.impl.auth.NTLMScheme: java.lang.String getSchemeName()> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM: int getDocument()> 
<org.apache.xml.utils.NamespaceSupport2: java.util.Enumeration getPrefixes()> 
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> 
<android.filterpacks.imageproc.FlipFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<android.nfc.tech.NfcF: byte[] getSystemCode()> 
<org.apache.commons.io.input.ProxyReader: int read(char[])> 
<android.media.videoeditor.VideoEditorImpl: java.lang.String getPath()> 
<gov.nist.javax.sip.header.ContentType: gov.nist.javax.sip.header.MediaRange getMediaRange()> 
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getExpandedTypeID(int)> 
<android.app.SearchableInfo: int getSearchButtonText()> 
<android.location.Address: java.lang.String getCountryCode()> 
<org.apache.harmony.security.asn1.ASN1Implicit: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)> 
<org.ccil.cowan.tagsoup.jaxp.SAXFactoryImpl: boolean getFeature(java.lang.String)> 
<android.filterfw.core.FieldPort: java.lang.Object getTarget()> 
<java.net.URLConnection: java.lang.String getHeaderFieldKey(int)> 
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: android.net.wifi.p2p.WifiP2pDevice getSrcDevice()> 
<android.content.Intent: java.lang.CharSequence[] getCharSequenceArrayExtra(java.lang.String)> 
<android.server.search.Searchables: android.content.ComponentName getGlobalSearchActivity()> 
<android.test.RenamingDelegatingContext: java.io.File getDatabasePath(java.lang.String)> 
<android.test.mock.MockResources: int getInteger(int)> 
<java.sql.DriverManager: java.io.PrintWriter getLogWriter()> 
<gov.nist.javax.sip.header.extensions.References: java.lang.String getParameter(java.lang.String)> 
<gov.nist.javax.sip.header.extensions.Join: java.lang.String getCallId()> 
<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler getInputContentHandler()> 
<android.app.ActivityManagerProxy: java.lang.String getProviderMimeType(android.net.Uri,int)> 
<org.apache.xalan.templates.RedundentExprEliminator: org.apache.xalan.templates.ElemVariable getPrevVariableElem(org.apache.xalan.templates.ElemTemplateElement)> 
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse: java.util.List getUniqueServiceNames()> 
<gov.nist.javax.sip.stack.MessageChannel: java.lang.String getRawIpSourceAddress()> 
<android.renderscript.Allocation: int getBytesSize()> 
<jp.co.omronsoft.openwnn.SymbolList: java.lang.String getXmlAttribute(android.content.res.XmlResourceParser,java.lang.String)> 
<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.XSLTSchema getSchema()> 
<android.graphics.drawable.LayerDrawable: int getIntrinsicHeight()> 
<android.os.Handler: android.os.Message getPostMessage(java.lang.Runnable)> 
<org.apache.xalan.templates.Stylesheet: int getImportCount()> 
<org.jivesoftware.smack.packet.XMPPError: java.lang.String getType()> 
<android.database.DatabaseUtils: java.lang.String getCollationKey(java.lang.String)> 
<android.filterfw.core.FrameFormat: java.lang.Class getObjectClass()> 
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: java.lang.CharSequence getContentDescription(java.lang.Object)> 
<jp.co.omronsoft.openwnn.TextCandidatesViewManager: int getMaxLine()> 
<android.net.rtp.AudioCodec: android.net.rtp.AudioCodec[] getCodecs()> 
<org.apache.http.auth.AuthScope: java.lang.String getRealm()> 
<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme getScheme(java.lang.String)> 
<java.net.URLConnection: boolean getUseCaches()> 
<android.widget.AppSecurityPermissions: android.content.pm.PackageInfo getInstalledPackageInfo()> 
<javax.xml.transform.stream.StreamResult: java.io.OutputStream getOutputStream()> 
<java.util.Date: long getTime()> 
<android.view.ViewGroup: int getLayoutMode()> 
<android.os.Parcel: void readSparseBooleanArrayInternal(android.util.SparseBooleanArray,int)> 
<android.webkit.WebViewClassic: int getViewWidth()> 
<org.apache.xml.serializer.SerializerBase: boolean getOmitXMLDeclaration()> 
<org.apache.xalan.templates.KeyDeclaration: org.apache.xml.utils.QName getName()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: org.w3c.dom.Element getOwnerElement()> 
<org.apache.http.impl.SocketHttpServerConnection: java.net.Socket getSocket()> 
<java.security.cert.TrustAnchor: byte[] getNameConstraints()> 
<gov.nist.javax.sip.header.Supported: java.lang.String getOptionTag()> 
<org.jivesoftware.smack.PacketReader: org.jivesoftware.smack.packet.StreamError parseStreamError(com.google.common.io.protocol.ProtoBuf)> 
<android.media.AudioTrack: int getPlayState()> 
<android.view.PointerIcon: boolean isLoaded()> 
<android.test.mock.MockResources: int[] getIntArray(int)> 
<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.stack.MessageProcessor getMessageProcessor()> 
<javax.obex.HeaderSet: int[] getHeaderList()> 
<android.speech.srec.WaveHeader: int getSampleRate()> 
<libcore.net.http.HttpEngine: java.net.HttpURLConnection getHttpConnectionToCache()> 
<android.telephony.CellSignalStrengthCdma: int getEvdoDbm()> 
<android.os.HandlerThread: android.os.Looper getLooper()> 
<org.apache.xalan.templates.DecimalFormatProperties: java.lang.String getNodeName()> 
<android.widget.TextView: boolean getDefaultEditable()> 
<android.hardware.GeomagneticField: float getDeclination()> 
<org.apache.xml.utils.UnImplNode: java.lang.String getXmlVersion()> 
<org.apache.harmony.xml.dom.DocumentImpl: java.util.Map getUserDataMapForRead(org.apache.harmony.xml.dom.NodeImpl)> 
<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])> 
<android.inputmethodservice.Keyboard: int getMinWidth()> 
<org.xml.sax.InputSource: java.lang.String getSystemId()> 
<android.content.ContextWrapper: android.content.res.Resources getResources()> 
<android.widget.GridLayout: int getTotalMargin(android.view.View,boolean)> 
<android.view.animation.Animation: long getStartTime()> 
<android.net.sip.SipSession: android.net.sip.ISipSession getRealSession()> 
<org.apache.harmony.xml.dom.DOMImplementationImpl: org.apache.harmony.xml.dom.DOMImplementationImpl getInstance()> 
<org.apache.xalan.transformer.TransformerImpl: int getCurrentNode()> 
<android.app.admin.DeviceAdminInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)> 
<android.security.KeyStore: byte[] getPubkey(java.lang.String)> 
<android.database.CursorWrapper: byte[] getBlob(int)> 
<java.util.UUID: long getMostSignificantBits()> 
<java.lang.Character: int getNumericValue(char)> 
<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable$Orientation getOrientation()> 
<java.sql.Time: int getMonth()> 
<org.apache.http.conn.params.ConnPerRouteBean: int getDefaultMax()> 
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: javax.net.ssl.X509TrustManager getTrustManager()> 
<org.apache.harmony.security.provider.cert.X509CRLEntryImpl: byte[] getEncoded()> 
<android.view.GLES20Canvas: int getDisplayListSize(int)> 
<android.database.CursorWindow: java.lang.String getString(int,int)> 
<java.nio.IntBuffer: java.nio.IntBuffer get(int[])> 
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo)> 
<org.apache.xml.serializer.SerializerBase: int getIndentAmount()> 
<java.util.UnknownFormatFlagsException: java.lang.String getMessage()> 
<android.os.Bundle: byte getByte(java.lang.String)> 
<org.apache.xpath.functions.FunctionDef1Arg: double getArg0AsNumber(org.apache.xpath.XPathContext)> 
<android.content.ContextWrapper: android.content.res.AssetManager getAssets()> 
<android.widget.AbsListView: float getTopFadingEdgeStrength()> 
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script$KernelID getKernelIDDstIn()> 
<android.net.sip.SipManager: android.net.sip.SipSession getSessionFor(android.content.Intent)> 
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getChild(int)> 
<org.apache.xpath.axes.UnionPathIterator: int getAxis()> 
<android.text.method.DialerKeyListener: char[] getAcceptedChars()> 
<libcore.net.url.FileURLConnection: int getContentLength()> 
<android.view.inputmethod.InputMethodManager: java.util.List getEnabledInputMethodSubtypeList(android.view.inputmethod.InputMethodInfo,boolean)> 
<android.media.AudioRecord: int getChannelCount()> 
<org.apache.harmony.xml.dom.ElementImpl: short getNodeType()> 
<android.support.v4.app.NavUtils: android.content.Intent getParentActivityIntent(android.app.Activity)> 
<gov.nist.javax.sip.header.MimeVersion: int getMajorVersion()> 
<android.webkit.WebSettings: android.webkit.WebSettings$ZoomDensity getDefaultZoom()> 
<java.text.DecimalFormat: java.lang.String getPositiveSuffix()> 
<org.apache.harmony.security.x509.tsp.TSTInfo: java.util.Date getGenTime()> 
<android.net.http.Headers: void getHeaders(android.net.http.Headers$HeaderCallback)> 
<android.mtp.MtpDevice: byte[] getObject(int,int)> 
<android.content.res.Resources: java.lang.CharSequence getText(int,java.lang.CharSequence)> 
<org.apache.commons.codec.net.RFC1522Codec: java.lang.String decodeText(java.lang.String)> 
<android.app.MediaRouteActionProvider: android.app.Activity getActivity()> 
<org.apache.xml.utils.UnImplNode: java.lang.String getPrefix()> 
<javax.sip.RequestEvent: javax.sip.message.Request getRequest()> 
<java.net.Inet6Address: int getScopeId()> 
<android.support.v4.app.HCSparseArray: java.lang.Object get(int,java.lang.Object)> 
<libcore.io.IoBridge: int read(java.io.FileDescriptor,byte[],int,int)> 
<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getBaseIdentifier()> 
<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)> 
<android.graphics.drawable.GradientDrawable: int getIntrinsicHeight()> 
<org.apache.xalan.transformer.SerializerSwitcher: java.lang.String getOutputPropertyNoDefault(java.lang.String,java.util.Properties)> 
<java.text.SimpleDateFormat: java.text.DateFormatSymbols getDateFormatSymbols()> 
<android.view.accessibility.AccessibilityRecord: long getSourceNodeId()> 
<android.content.pm.ApplicationInfo: android.content.pm.ApplicationInfo getApplicationInfo()> 
<android.text.StaticLayout: int getLineCount()> 
<android.app.SearchableInfo: java.lang.String getSuggestIntentAction()> 
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLetters(android.content.ComponentName)> 
<gov.nist.javax.sip.header.ims.SecurityAgree: int getSPIServer()> 
<org.apache.harmony.security.x509.AuthorityKeyIdentifier: byte[] getEncoded()> 
<org.apache.james.mime4j.field.MailboxField: org.apache.james.mime4j.field.address.Mailbox getMailbox()> 
<android.telephony.SignalStrength: int getGsmSignalStrength()> 
<org.apache.harmony.xml.dom.DocumentFragmentImpl: short getNodeType()> 
<android.view.animation.GridLayoutAnimationController: int getDirection()> 
<android.widget.DatePicker: boolean parseDate(java.lang.String,java.util.Calendar)> 
<org.apache.http.impl.io.AbstractMessageParser: org.apache.http.Header[] parseHeaders(org.apache.http.io.SessionInputBuffer,int,int,org.apache.http.message.LineParser)> 
<android.support.v4.app.LoaderManagerImpl: android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)> 
<org.apache.harmony.xnet.provider.jsse.ConnectionState: int getFragmentSize(int)> 
<android.view.View: java.util.ArrayList getTouchables()> 
<android.widget.ScrollBarDrawable: boolean getAlwaysDrawVerticalTrack()> 
<android.server.search.SearchManagerService: android.content.ComponentName getAssistIntent(int)> 
<android.media.JetPlayer: boolean loadJetFile(java.lang.String)> 
<libcore.net.http.HttpEngine: javax.net.ssl.SSLSocketFactory getSslSocketFactory()> 
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)> 
<android.app.ContextImpl: java.io.File getDir(java.lang.String,int)> 
<android.appwidget.AppWidgetHostView: android.content.Context getRemoteContext(android.widget.RemoteViews)> 
<org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore: org.apache.harmony.security.x509.SubjectKeyIdentifier getSubjectKeyIdentifier(java.security.cert.X509Certificate)> 
<java.net.ServerSocket: java.net.InetAddress getInetAddress()> 
<org.apache.harmony.security.pkcs8.PrivateKeyInfo: byte[] getEncoded()> 
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long,long,long,int)> 
<android.text.style.MetricAffectingSpan: android.text.style.CharacterStyle getUnderlying()> 
<android.net.rtp.AudioGroup: int getMode()> 
<android.app.WallpaperInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)> 
<android.widget.CursorTreeAdapter: int getChildrenCount(int)> 
<android.view.MotionEvent: long getDownTime()> 
<android.view.inputmethod.InputBinding: android.view.inputmethod.InputConnection getConnection()> 
<org.apache.xml.serializer.utils.SystemIDResolver: java.lang.String getAbsoluteURIFromRelative(java.lang.String)> 
<android.webkit.CallbackProxy: android.webkit.BrowserFrame createWindow(boolean,boolean)> 
<libcore.net.http.HttpConnection: java.io.OutputStream getOutputStream()> 
<android.view.textservice.SuggestionsInfo: int getSequence()> 
<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties getOutputFormat()> 
<org.apache.xalan.processor.StylesheetHandler: double getElemVersion()> 
<android.filterfw.core.GLFrame: java.lang.Object getObjectValue()> 
<android.bluetooth.BluetoothA2dp: java.util.List getConnectedDevices()> 
<org.apache.xpath.axes.OneStepIterator: int getAxis()> 
<android.app.Activity: android.app.LoaderManager getLoaderManager()> 
<android.drm.DrmManagerClient: int getEventType(int)> 
<android.webkit.BrowserFrame: java.lang.String getRawResFilename(int)> 
<org.apache.http.message.BasicHttpResponse: org.apache.http.HttpEntity getEntity()> 
<android.app.DownloadManager: android.os.ParcelFileDescriptor openDownloadedFile(long)> 
<java.security.Security: java.security.Provider[] getProviders()> 
<android.content.SyncStorageEngine: android.util.Pair parsePeriodicSync(org.xmlpull.v1.XmlPullParser,android.content.SyncStorageEngine$AuthorityInfo)> 
<org.apache.commons.codec.language.Soundex: int getMaxLength()> 
<android.location.LocationProvider: int getAccuracy()> 
<libcore.net.http.HttpsURLConnectionImpl: java.security.Principal getPeerPrincipal()> 
<android.widget.TextView: boolean getLinksClickable()> 
<android.accounts.AccountManagerService: android.accounts.Account[] getAccounts(int)> 
<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: org.apache.james.mime4j.field.contenttype.parser.Token getNextToken()> 
<android.widget.TextView: int getLineAtCoordinate(float)> 
<android.graphics.NinePatch: int getWidth()> 
<org.apache.harmony.xnet.provider.jsse.ServerHello: int getType()> 
<android.view.View: android.view.View$OnFocusChangeListener getOnFocusChangeListener()> 
<java.util.concurrent.ForkJoinPool: long getStealCount()> 
<java.net.InetSocketAddress: java.net.InetAddress getAddress()> 
<junit.framework.TestCase: java.lang.String getName()> 
<org.apache.xml.utils.UnImplNode: java.lang.Object getUserData(java.lang.String)> 
<java.net.NetworkInterface: java.lang.String getDisplayName()> 
<org.apache.xalan.templates.ElemElement: java.lang.String getNodeName()> 
<org.apache.http.impl.conn.tsccm.BasicPoolEntry: long getValidUntil()> 
<org.apache.harmony.security.asn1.ASN1SetOf: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)> 
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthTokenLabel(java.lang.String,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler)> 
<android.service.dreams.DreamService: boolean getSystemUiVisibilityFlagValue(int,boolean)> 
<java.net.URI: java.lang.String getSchemeSpecificPart()> 
<java.nio.MappedByteBufferAdapter: short getShort()> 
<android.test.ApplicationTestCase: android.app.Application getApplication()> 
<android.accounts.ChooseTypeAndAccountActivity: java.util.Set getReleventAccountTypes(android.content.Intent)> 
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.lang.String[] getEnabledProtocols()> 
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.cookie.CookieSpecRegistry getCookieSpecs()> 
<org.apache.james.mime4j.field.AddressListField: org.apache.james.mime4j.field.address.parser.ParseException getParseException()> 
<org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore: java.security.cert.Certificate getCertificate(java.lang.String,boolean)> 
<org.apache.xpath.res.XPATHErrorResources: org.apache.xpath.res.XPATHErrorResources loadResourceBundle(java.lang.String)> 
<javax.security.auth.callback.PasswordCallback: char[] getPassword()> 
<android.widget.ActivityChooserModel: boolean readHistoricalDataIfNeeded()> 
<android.widget.AlphabetIndexer: java.lang.Object[] getSections()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: byte[] getNpnSelectedProtocol()> 
<org.xml.sax.helpers.AttributesImpl: java.lang.String getType(java.lang.String)> 
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)> 
<android.opengl.GLLogWrapper: int getIntegerStateFormat(int)> 
<org.apache.xml.dtm.ref.ExpandedNameTable: int getExpandedTypeID(int)> 
<android.net.http.ErrorStrings: int getResource(int)> 
<java.io.PushbackInputStream: int read(byte[],int,int)> 
<java.nio.FloatArrayBuffer: float get()> 
<java.nio.charset.CharsetDecoderICU: java.nio.charset.CoderResult decodeLoop(java.nio.ByteBuffer,java.nio.CharBuffer)> 
<gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.header.UserAgentHeader getDefaultUserAgentHeader()> 
<android.hardware.display.WifiDisplayStatus: int getScanState()> 
<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.ElemTemplate getTemplateComposed(org.apache.xml.utils.QName)> 
<javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.lang.String)> 
<android.media.videoeditor.MediaItem: java.util.List getAllEffects()> 
<java.security.spec.ECFieldF2m: int[] getMidTermsOfReductionPolynomial()> 
<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: int getAndSet(java.lang.Object,int)> 
<org.apache.xpath.functions.FunctionOneArg: org.apache.xpath.Expression getArg0()> 
<android.test.mock.MockPackageManager: android.content.pm.PackageInfo getPackageArchiveInfo(java.lang.String,int)> 
<android.speech.srec.WaveHeader: short getNumChannels()> 
<android.test.ProviderTestCase2: android.test.IsolatedContext getMockContext()> 
<android.app.ProgressDialog: int getMax()> 
<java.security.DigestInputStream: int read(byte[],int,int)> 
<android.util.DayOfMonthCursor: int getSelectedColumn()> 
<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(java.lang.String,android.content.res.CompatibilityInfo,int,int)> 
<libcore.io.BlockGuardOs: int pread(java.io.FileDescriptor,java.nio.ByteBuffer,long)> 
<android.content.Intent: double getDoubleExtra(java.lang.String,double)> 
<android.text.style.TextAppearanceSpan: int getTextStyle()> 
<android.graphics.drawable.AnimatedRotateDrawable: int getOpacity()> 
<android.widget.GridLayout: int getColumnCount()> 
<android.bluetooth.BluetoothSocket: int readInt(java.io.InputStream)> 
<android.view.animation.GridLayoutAnimationController: long getDelayForView(android.view.View)> 
<android.net.LinkSocket: android.net.LinkCapabilities getCapabilities(java.util.Set)> 
<android.support.v4.view.accessibility.AccessibilityEventCompat: int getRecordCount(android.view.accessibility.AccessibilityEvent)> 
<java.security.spec.RSAPrivateCrtKeySpec: java.math.BigInteger getPrimeQ()> 
<java.security.spec.RSAPrivateCrtKeySpec: java.math.BigInteger getPrimeP()> 
<android.net.http.RequestHandle: int getRedirectCount()> 
<android.filterpacks.performance.Throughput: int getTotalFrameCount()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: java.lang.String getDocumentEncoding(int)> 
<java.util.prefs.AbstractPreferences: double getDouble(java.lang.String,double)> 
<org.apache.http.impl.conn.AbstractClientConnAdapter: java.net.InetAddress getLocalAddress()> 
<android.view.GLES20Canvas: int getSaveCount()> 
<net.oauth.signature.RSA_SHA1: java.lang.String getSignature(java.lang.String)> 
<org.apache.xml.utils.UnImplNode: org.w3c.dom.Node getLastChild()> 
<android.webkit.WebViewClassic: void loadUrlImpl(java.lang.String,java.util.Map)> 
<gov.nist.javax.sip.stack.UDPMessageChannel: int getPort()> 
<gov.nist.javax.sip.header.To: java.lang.String getUserAtHostPort()> 
<org.apache.commons.io.FilenameUtils: java.lang.String getPathNoEndSeparator(java.lang.String)> 
<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse getLastResponse()> 
<android.test.AndroidTestRunner: java.lang.Class loadSuiteClass(java.lang.String)> 
<java.net.HttpRetryException: java.lang.String getLocation()> 
<android.test.mock.MockResources: void getValue(int,android.util.TypedValue,boolean)> 
<org.apache.http.entity.HttpEntityWrapper: long getContentLength()> 
<android.content.res.AssetManager: boolean getThemeValue(int,int,android.util.TypedValue,boolean)> 
<org.jivesoftware.smack.packet.LoginRequest: java.lang.String getDomain()> 
<android.widget.CalendarView: java.util.Calendar getCalendarForLocale(java.util.Calendar,java.util.Locale)> 
<android.text.DynamicLayout: int getTopPadding()> 
<org.apache.harmony.security.x509.tsp.TSTInfo: int getVersion()> 
<android.widget.Chronometer: java.lang.String getFormat()> 
<android.location.Address: java.lang.String getAdminArea()> 
<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.Extensions getExtensions()> 
<android.view.KeyCharacterMap: char getNumber(int)> 
<android.view.accessibility.AccessibilityNodeInfo: void getBoundsInParent(android.graphics.Rect)> 
<android.net.MobileDataStateTracker: java.lang.String getTcpBufferSizesPropName()> 
<android.media.AudioRecord: int getAudioSource()> 
<android.renderscript.Element: android.renderscript.Element$DataType getDataType()> 
<java.text.NumberFormat: java.text.NumberFormat getCurrencyInstance()> 
<org.apache.harmony.xml.dom.EntityImpl: java.lang.String getInputEncoding()> 
<java.sql.DriverManager: java.sql.Connection getConnection(java.lang.String,java.util.Properties)> 
<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getNodeValue()> 
<android.appwidget.AppWidgetManager: int[] getAppWidgetIds(android.content.ComponentName)> 
<android.os.Parcel: java.lang.Object[] readArray(java.lang.ClassLoader)> 
<gov.nist.javax.sip.header.TimeStamp: java.lang.String getTimeStampAsString()> 
<org.jivesoftware.smack.util.StringUtils: java.lang.String parseName(java.lang.String)> 
<android.telephony.CellBroadcastMessage: int getCmasMessageClass()> 
<android.content.ContextWrapper: int getThemeResId()> 
<android.support.v4.view.accessibility.AccessibilityRecordCompat: java.util.List getText()> 
<android.text.format.Time: int getJulianDay(long,long)> 
<android.app.WallpaperInfo: java.lang.String getServiceName()> 
<java.beans.PropertyChangeEvent: java.lang.String getPropertyName()> 
<java.text.NumberFormat: java.text.NumberFormat getPercentInstance()> 
<android.view.textservice.SpellCheckerInfo: java.lang.String getSettingsActivity()> 
<gov.nist.javax.sip.stack.UDPMessageProcessor: int getMaximumMessageSize()> 
<android.hardware.GeomagneticField: float getInclination()> 
<libcore.icu.CollationElementIteratorICU: libcore.icu.CollationElementIteratorICU getInstance(int,java.lang.String)> 
<android.media.videoeditor.MediaItem: java.util.List getAllOverlays()> 
<javax.net.ssl.SSLSessionBindingEvent: java.lang.String getName()> 
<gov.nist.javax.sip.header.ims.SecurityAgree: float getPreference()> 
<org.apache.xpath.patterns.StepPattern: int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)> 
<android.webkit.WebSettings: java.lang.String getFixedFontFamily()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: org.xml.sax.DTDHandler getDTDHandler()> 
<android.app.Instrumentation: android.os.Bundle getAllocCounts()> 
<java.lang.ClassLoader: java.lang.Class findLoadedClass(java.lang.String)> 
<org.apache.xml.utils.FastStringBuffer: void getChars(int,int,char[],int)> 
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.CredentialsProvider getCredentialsProvider()> 
<libcore.io.StrictLineReader: int readInt()> 
<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object getAndSet(int,java.lang.Object)> 
<org.apache.xalan.templates.ElemVariable: boolean getIsTopLevel()> 
<org.apache.http.auth.AuthScope: int getPort()> 
<javax.xml.transform.dom.DOMSource: java.lang.String getSystemId()> 
<javax.crypto.spec.PBEKeySpec: int getIterationCount()> 
<org.apache.harmony.security.pkcs10.CertificationRequestInfo: byte[] getEncoded()> 
<org.apache.harmony.security.x509.ExtendedKeyUsage: java.util.List getExtendedKeyUsage()> 
<android.media.videoeditor.MediaImageItem: int getScaledWidth()> 
<java.security.cert.CertificateFactory: java.util.Iterator getCertPathEncodings()> 
<android.text.BoringLayout: float getLineMax(int)> 
<android.app.FragmentBreadCrumbs: android.app.BackStackRecord createBackStackEntry(java.lang.CharSequence,java.lang.CharSequence)> 
<junit.runner.BaseTestRunner: java.lang.String getFilteredTrace(java.lang.Throwable)> 
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.SIPDialog getDialog(java.lang.String)> 
<org.apache.http.message.BasicHeaderElement: int getParameterCount()> 
<org.apache.james.mime4j.field.datetime.parser.SimpleCharStream: int getEndLine()> 
<org.apache.xpath.NodeSetDTM: int getWhatToShow()> 
<android.database.BulkCursorProxy: android.database.CursorWindow getWindow(int)> 
<org.apache.harmony.security.x509.tsp.TimeStampReq: org.apache.harmony.security.x509.Extensions getExtensions()> 
<android.telephony.SmsMessage: java.lang.String getDisplayMessageBody()> 
<android.app.Activity: android.content.ComponentName getComponentName()> 
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getElementById(java.lang.String)> 
<org.apache.http.impl.cookie.RFC2109Spec: int getVersion()> 
<android.webkit.WebViewClassic: int getTitleHeight()> 
<org.ccil.cowan.tagsoup.Parser: java.lang.Object getProperty(java.lang.String)> 
<java.util.logging.Logger: java.util.ResourceBundle getResourceBundle()> 
<android.view.GLES20Canvas: int getMaximumBitmapHeight()> 
<java.net.HttpURLConnection: int getResponseCode()> 
<android.widget.ActivityChooserModel: boolean loadActivitiesIfNeeded()> 
<android.media.videoeditor.EffectColor: int getType()> 
<android.content.SyncStorageEngine: boolean getMasterSyncAutomatically(int)> 
<android.location.Country: int getSource()> 
<android.widget.BaseExpandableListAdapter: int getGroupTypeCount()> 
<libcore.io.ForwardingOs: int getpid()> 
<gov.nist.javax.sip.stack.SIPDialog: javax.sip.message.Request createRequest(java.lang.String,gov.nist.javax.sip.message.SIPResponse)> 
<android.bluetooth.BluetoothA2dp: java.util.List getDevicesMatchingConnectionStates(int[])> 
<java.io.LineNumberReader: int read()> 
<android.text.BoringLayout: int getLineDescent(int)> 
<android.os.Bundle: boolean[] getBooleanArray(java.lang.String)> 
<java.util.concurrent.ForkJoinTask: java.lang.Throwable getThrowableException()> 
<org.apache.james.mime4j.field.datetime.DateTime: int getMinute()> 
<java.nio.HeapByteBuffer: double getDouble()> 
<android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()> 
<android.webkit.WebSettings: boolean getSavePassword()> 
<android.view.MotionEvent: long getHistoricalEventTimeNano(int)> 
<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()> 
<java.io.File: boolean setReadOnly()> 
<java.util.GregorianCalendar: int getActualMinimum(int)> 
<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getMethod()> 
<android.webkit.CacheManager: java.io.File getCacheFileBaseDir()> 
<java.net.ServerSocket: java.nio.channels.ServerSocketChannel getChannel()> 
<org.jivesoftware.smack.sasl.SASLAnonymous: java.lang.String getChallengeResponse(byte[])> 
<gov.nist.javax.sip.address.TelephoneNumber: java.lang.String getPostDial()> 
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.Object getUserData(java.lang.String)> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getDocument()> 
<gov.nist.core.HostPort: java.net.InetAddress getInetAddress()> 
<org.apache.xml.dtm.ref.ExpandedNameTable: java.lang.String getNamespace(int)> 
<android.database.sqlite.SQLiteDatabase: java.lang.String getLabel()> 
<libcore.net.url.FtpURLConnection: java.io.OutputStream getOutputStream()> 
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.DecimalFormatProperties getDecimalFormat(int)> 
<android.app.ContextImpl: java.io.File getObbDir()> 
<org.xml.sax.helpers.AttributesImpl: java.lang.String getValue(int)> 
<android.os.storage.StorageVolume: java.io.File getPathFile()> 
<android.widget.AutoCompleteTextView: int getDropDownHorizontalOffset()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: java.lang.String getLocalName()> 
<java.text.NumberFormat: java.text.NumberFormat getInstance()> 
<android.view.Window: android.content.res.TypedArray getWindowStyle()> 
<android.media.videoeditor.MediaVideoItem: int getAudioType()> 
<java.util.prefs.AbstractPreferences: java.util.prefs.AbstractPreferences getChild(java.lang.String)> 
<android.widget.ActivityChooserModel: android.widget.ActivityChooserModel get(android.content.Context,java.lang.String)> 
<android.content.pm.PathPermission: java.lang.String getWritePermission()> 
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: boolean getNeedClientAuth()> 
<android.support.v4.app.TaskStackBuilderJellybean: android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPublicKey: java.math.BigInteger getY()> 
<android.renderscript.Program: android.renderscript.Type getConstant(int)> 
<org.apache.harmony.xml.dom.LeafNodeImpl: org.w3c.dom.Node getNextSibling()> 
<android.support.v4.content.CursorLoader: java.lang.String[] getSelectionArgs()> 
<android.opengl.GLLogWrapper: java.lang.String getCap(int)> 
<org.apache.xml.utils.UnImplNode: boolean getStrictErrorChecking()> 
<android.widget.ActivityChooserModel: android.content.Intent getIntent()> 
<org.apache.james.mime4j.field.Field: java.lang.String getRaw()> 
<android.text.util.Rfc822Token: java.lang.String getName()> 
<android.text.TextUtils: int getOffsetBefore(java.lang.CharSequence,int)> 
<org.apache.harmony.xml.dom.LeafNodeImpl: org.w3c.dom.Node getPreviousSibling()> 
<org.apache.commons.io.FileCleaningTracker: int getTrackCount()> 
<org.apache.xpath.patterns.StepPattern: org.apache.xpath.Expression getExpression()> 
<org.apache.xml.utils.XMLReaderManager: org.xml.sax.XMLReader getXMLReader()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: java.lang.String getPrefix(int)> 
<android.speech.tts.TextToSpeech: java.util.Locale getLanguage()> 
<android.util.NtpTrustedTime: long getCachedNtpTime()> 
<android.app.PendingIntent: android.app.PendingIntent getActivitiesAsUser(android.content.Context,int,android.content.Intent[],int,android.os.Bundle,android.os.UserHandle)> 
<junit.runner.TestCaseClassLoader: byte[] loadJarData(java.lang.String,java.lang.String)> 
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getDatabaseLocked(boolean)> 
<android.widget.RemoteViewsAdapter: java.lang.Object getItem(int)> 
<org.apache.http.impl.io.HttpResponseParser: org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer)> 
<android.content.ContextWrapper: java.io.File getSharedPrefsFile(java.lang.String)> 
<android.widget.GridLayout: boolean getUseDefaultMargins()> 
<org.apache.harmony.security.x509.TBSCertList: byte[] getEncoded()> 
<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()> 
<android.nfc.NfcAdapter: int getAdapterState()> 
<android.graphics.drawable.DrawableContainer: int getMinimumWidth()> 
<android.hardware.usb.UsbDevice: int getDeviceProtocol()> 
<android.widget.AppSecurityPermissions: android.view.View getPermissionsView(int)> 
<android.text.Selection: int getSelectionEnd(java.lang.CharSequence)> 
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)> 
<android.webkit.WebSettings: boolean getJavaScriptCanOpenWindowsAutomatically()> 
<java.net.URLConnection: java.io.OutputStream getOutputStream()> 
<java.io.FileInputStream: int read(byte[])> 
<android.app.FragmentBreadCrumbs: int getPreEntryCount()> 
<android.widget.Switch: java.lang.CharSequence getTextOff()> 
<org.apache.harmony.xnet.provider.jsse.KeyManagerImpl: java.lang.String[] getServerAliases(java.lang.String,java.security.Principal[])> 
<android.net.TrafficStats: long getMobileRxBytes()> 
<android.location.Location: float getSpeed()> 
<android.location.Address: java.lang.String getPostalCode()> 
<android.widget.Toast: int getYOffset()> 
<android.nfc.Tag: java.lang.String[] getTechList()> 
<java.text.Collator: java.text.Collator getInstance()> 
<android.test.mock.MockPackageManager: java.util.List getInstalledPackages(int)> 
<android.os.Debug: int getGlobalAllocSize()> 
<android.content.ClipboardManager: java.lang.CharSequence getText()> 
<android.media.audiofx.AudioEffect: int getParameter(int[],int[])> 
<org.apache.http.impl.SocketHttpServerConnection: java.net.InetAddress getLocalAddress()> 
<android.widget.TextView: int getMaxWidth()> 
<gov.nist.javax.sip.parser.ExpiresParser: gov.nist.javax.sip.header.SIPHeader parse()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl getCachedClientSession(org.apache.harmony.xnet.provider.jsse.ClientSessionContext)> 
<org.apache.harmony.xnet.provider.jsse.ClientHello: byte[] getRandom()> 
<java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)> 
<org.apache.harmony.xnet.provider.jsse.CertificateRequest: java.lang.String[] getTypesAsString()> 
<android.graphics.drawable.ScaleDrawable: boolean getPadding(android.graphics.Rect)> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: java.lang.String getFixedNames(int)> 
<java.nio.ShortArrayBuffer: short get(int)> 
<android.os.PowerManager: int getMinimumScreenBrightnessSetting()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey: java.math.BigInteger getCrtCoefficient()> 
<java.io.DataInputStream: long readLong()> 
<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(boolean)> 
<java.io.LineNumberInputStream: int getLineNumber()> 
<org.apache.xml.serializer.NamespaceMappings: org.apache.xml.serializer.NamespaceMappings$MappingRecord getMappingFromPrefix(java.lang.String)> 
<java.net.DatagramSocket: int getTrafficClass()> 
<java.util.BitSet: java.util.BitSet get(int,int)> 
<org.apache.xml.utils.QName: org.apache.xml.utils.QName getQNameFromString(java.lang.String)> 
<org.apache.james.mime4j.field.ContentTypeField: java.util.Map getParameters()> 
<android.widget.Switch: int getCompoundPaddingLeft()> 
<java.util.Locale: java.lang.String getDisplayVariant()> 
<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getNetworkName()> 
<android.text.style.BackgroundColorSpan: int getSpanTypeId()> 
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle getAccountRemovalAllowed(android.accounts.AccountAuthenticatorResponse,android.accounts.Account)> 
<android.text.format.Time: int getWeekNumber()> 
<org.apache.xalan.templates.ElemPI: org.apache.xalan.templates.AVT getName()> 
<java.util.concurrent.atomic.AtomicLongArray: long getAndIncrement(int)> 
<android.os.Bundle: double getDouble(java.lang.String,double)> 
<org.apache.xpath.XPathException: org.w3c.dom.Node getStylesheetNode(org.apache.xpath.ExpressionNode)> 
<android.media.videoeditor.MediaProperties: int[] getSupportedVideoFileFormat()> 
<android.inputmethodservice.Keyboard: java.util.List getModifierKeys()> 
<android.renderscript.RSSurfaceView: android.renderscript.RenderScriptGL getRenderScriptGL()> 
<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.ExtensionValue getDecodedExtensionValue()> 
<org.apache.xpath.objects.DTMXRTreeFrag: int getDTMIdentity()> 
<org.apache.xpath.jaxp.JAXPVariableStack: org.apache.xpath.objects.XObject getVariableOrParam(org.apache.xpath.XPathContext,org.apache.xml.utils.QName)> 
<android.app.ActivityManagerNative: android.app.IActivityManager getDefault()> 
<gov.nist.javax.sip.message.SIPResponse: java.lang.String getFirstLine()> 
<org.apache.xalan.templates.ElemNumber: org.apache.xalan.templates.AVT getLetterValue()> 
<android.widget.ProgressBar: android.graphics.drawable.Drawable getCurrentDrawable()> 
<libcore.net.http.HttpsURLConnectionImpl: java.util.Map getRequestProperties()> 
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getNodeName()> 
<org.xml.sax.SAXParseException: int getColumnNumber()> 
<android.telephony.CellIdentityLte: int getCi()> 
<org.apache.xml.serializer.ToUnknownStream: java.util.Properties getOutputFormat()> 
<junit.runner.TestCaseClassLoader: void readExcludedPackages()> 
<android.text.style.ImageSpan: java.lang.String getSource()> 
<android.net.wifi.WifiManager: android.net.wifi.WifiConfiguration getWifiApConfiguration()> 
<gov.nist.javax.sip.message.SIPResponse: java.lang.String getSIPVersion()> 
<android.location.Criteria: int getVerticalAccuracy()> 
<org.apache.xalan.templates.ElemTemplate: java.lang.String getNodeName()> 
<android.support.v4.app.Fragment: boolean getRetainInstance()> 
<org.apache.harmony.xml.dom.ElementImpl: java.lang.String getNamespaceURI()> 
<android.view.animation.Animation: long getStartOffset()> 
<javax.security.auth.PrivateCredentialPermission: java.lang.String[][] getPrincipals()> 
<org.apache.xml.serializer.utils.AttList: java.lang.String getType(java.lang.String,java.lang.String)> 
<org.apache.xml.serializer.ToUnknownStream: java.lang.String getPrefixPartUnknown(java.lang.String)> 
<android.content.Loader: int getId()> 
<android.database.AbstractWindowedCursor: double getDouble(int)> 
<java.io.SerializationHandleMap: int get(java.lang.Object)> 
<java.nio.DoubleArrayBuffer: java.nio.DoubleBuffer get(double[],int,int)> 
<android.media.DecoderCapabilities: java.util.List getAudioDecoders()> 
<org.apache.xml.dtm.ref.DTMManagerDefault: int getFirstFreeDTMID()> 
<android.widget.TextView: java.lang.CharSequence getIterableTextForAccessibility()> 
<android.graphics.Bitmap: int getScaledWidth(android.util.DisplayMetrics)> 
<java.security.cert.CertStore: java.security.cert.CertStore getInstance(java.lang.String,java.security.cert.CertStoreParameters,java.lang.String)> 
<jp.co.omronsoft.openwnn.JAJP.DefaultSoftKeyboardJAJP: int getTableIndex(int)> 
<org.apache.harmony.security.x509.X509PublicKey: java.lang.String getFormat()> 
<gov.nist.javax.sip.header.SIPHeaderList: java.util.List getHeaderList()> 
<android.content.pm.VerificationParams: android.net.Uri getVerificationURI()> 
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getEntryCount()> 
<android.util.MonthDisplayHelper: int[] getDigitsForRow(int)> 
<android.widget.ListPopupWindow: android.view.View getSelectedView()> 
<org.apache.xalan.templates.OutputProperties: org.apache.xml.utils.QName getQNameProperty(java.lang.String,java.util.Properties)> 
<org.jivesoftware.smackx.provider.SimpleVCardProvider: int getTag()> 
<org.apache.http.message.BasicHeaderValueParser: org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)> 
<org.apache.xml.dtm.ref.ExpandedNameTable: short getType(int)> 
<java.util.zip.ZipEntry: byte[] getExtra()> 
<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.DOMImplementation getImplementation()> 
<org.jivesoftware.smack.PacketCollector: org.jivesoftware.smack.filter.PacketFilter getPacketFilter()> 
<org.apache.xml.dtm.SecuritySupport: org.apache.xml.dtm.SecuritySupport getInstance()> 
<android.view.PointerIcon: android.graphics.Bitmap getBitmap()> 
<jp.co.omronsoft.openwnn.DefaultSoftKeyboard: android.view.View getKeyboardView()> 
<android.media.videoeditor.MediaImageItem: int getGeneratedClipHeight()> 
<android.view.KeyEvent: int getUnicodeChar(int)> 
<android.net.MailTo: java.util.Map getHeaders()> 
<android.widget.Switch: int getThumbScrollRange()> 
<java.security.spec.ECPrivateKeySpec: java.security.spec.ECParameterSpec getParams()> 
<org.apache.commons.io.input.ProxyInputStream: int read(byte[])> 
<gov.nist.javax.sip.stack.IOHandler: java.net.Socket getSocket(java.lang.String)> 
<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.RouteList getRouteHeaders()> 
<android.net.Uri: java.util.Set getQueryParameterNames()> 
<android.net.sip.SipManager: java.lang.String getCallId(android.content.Intent)> 
<android.webkit.WebView: void loadUrl(java.lang.String,java.util.Map)> 
<org.kxml2.io.KXmlParser: void readEndTag()> 
<javax.crypto.KeyAgreement: java.lang.String getAlgorithm()> 
<java.text.DateFormatSymbols: java.lang.String[] getMonths()> 
<android.speech.tts.BlockingAudioTrack: int getBytesPerFrame(int)> 
<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int getPosition()> 
<org.apache.xpath.axes.DescendantIterator: int getAxis()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getFirstNamespaceNode(int,boolean)> 
<android.widget.SuggestionsAdapter: int getQueryRefinement()> 
<android.view.ViewRootImpl: int getHostVisibility()> 
<android.nfc.tech.Ndef: int getMaxSize()> 
<android.media.MediaPlayer: java.lang.String getStringParameter(int)> 
<android.content.SyncStatusInfo: long getPeriodicSyncTime(int)> 
<android.content.pm.ComponentInfo: android.graphics.drawable.Drawable loadDefaultIcon(android.content.pm.PackageManager)> 
<android.view.ViewRootImpl: android.media.AudioManager getAudioManager()> 
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: byte[] getId()> 
<android.webkit.WebViewClassic: android.webkit.WebViewCore getWebViewCore()> 
<gov.nist.javax.sip.address.SipUri: java.lang.String getMethodParam()> 
<android.app.ActivityManager: java.util.List getProcessesInErrorState()> 
<android.app.DialogFragment: int getTheme()> 
<libcore.net.http.HttpsURLConnectionImpl: long getIfModifiedSince()> 
<android.test.mock.MockContentProvider: android.content.IContentProvider getIContentProvider()> 
<org.apache.http.params.BasicHttpParams: java.lang.Object getParameter(java.lang.String)> 
<android.text.util.Rfc822Token: java.lang.String getAddress()> 
<android.webkit.HTML5VideoViewProxy: android.content.Context getContext()> 
<gov.nist.javax.sip.header.ContentDisposition: java.lang.String getHandling()> 
<java.util.concurrent.atomic.AtomicLongFieldUpdater: long getAndAdd(java.lang.Object,long)> 
<org.apache.commons.io.input.ProxyReader: int read(char[],int,int)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: int getPeerPort()> 
<org.apache.xml.serializer.dom3.DOM3SerializerImpl: char[] getNewLine()> 
<android.app.ContextImpl: java.io.File getFileStreamPath(java.lang.String)> 
<android.os.ServiceManager: android.os.IServiceManager getIServiceManager()> 
<android.sax.Children: android.sax.Element get(java.lang.String,java.lang.String)> 
<org.apache.xml.utils.UnImplNode: java.lang.String getDocumentURI()> 
<java.lang.Class: java.lang.reflect.Type[] getGenericInterfaces()> 
<android.view.View: android.view.KeyEvent$DispatcherState getKeyDispatcherState()> 
<org.apache.xalan.templates.ElemCallTemplate: int getParamElemCount()> 
<android.content.CursorLoader: java.lang.String getSortOrder()> 
<java.security.spec.RSAMultiPrimePrivateCrtKeySpec: java.security.spec.RSAOtherPrimeInfo[] getOtherPrimeInfo()> 
<android.app.admin.DeviceAdminInfo: java.lang.String getTagForPolicy(int)> 
<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getParentBaseUri()> 
<java.text.DecimalFormatSymbols: java.lang.String getInfinity()> 
<android.app.admin.DevicePolicyManager: int getKeyguardDisabledFeatures(android.content.ComponentName)> 
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager getInstance(android.content.Context)> 
<android.view.View: android.os.IBinder getWindowToken()> 
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script$KernelID getKernelIDSrc()> 
<jp.co.omronsoft.openwnn.Keyboard: int getHorizontalGap()> 
<android.content.pm.ContainerEncryptionParams: long getAuthenticatedDataStart()> 
<org.jivesoftware.smack.packet.PresenceCapability: java.lang.String getHash()> 
<org.apache.xpath.NodeSetDTM: int getLength()> 
<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.NamedNodeMap getAttributes()> 
<android.webkit.WebSettingsClassic: boolean getSavePassword()> 
<android.widget.TextView: int getMarqueeRepeatLimit()> 
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: boolean readTxtData(java.io.DataInputStream)> 
<android.widget.GridView: int getColumnWidth()> 
<android.app.SharedPreferencesImpl: long getLong(java.lang.String,long)> 
<java.lang.reflect.Method: java.lang.annotation.Annotation[] getDeclaredAnnotations()> 
<android.telephony.SmsCbMessage: int getGeographicalScope()> 
<android.gesture.GestureStore: void load(java.io.InputStream,boolean)> 
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentEncodingHeader getContentEncoding()> 
<android.webkit.JniUtil: android.content.Context getContext()> 
<org.apache.xpath.SourceTreeManager: int getNode(javax.xml.transform.Source)> 
<android.app.admin.DevicePolicyManager: long getPasswordExpiration(android.content.ComponentName)> 
<android.app.ActivityThread: android.app.Activity getActivity(android.os.IBinder)> 
<android.webkit.WebSettingsClassic: android.webkit.WebSettings$ZoomDensity getDefaultZoom()> 
<org.apache.xalan.templates.ElemExtensionDecl: int getXSLToken()> 
<org.apache.xpath.axes.WalkerFactory: int getAnalysisBitFromAxes(int)> 
<java.security.KeyStore: java.security.cert.Certificate getCertificate(java.lang.String)> 
<org.apache.xml.serializer.CharInfo: boolean get(int)> 
<org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore: org.apache.harmony.security.x509.AuthorityKeyIdentifier getAuthorityKeyIdentifier(java.security.cert.X509Certificate)> 
<android.app.ApplicationPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)> 
<org.apache.xalan.templates.ElemVariable: java.lang.String getNodeName()> 
<android.widget.TextView: int getBaseline()> 
<android.net.http.Request: android.net.http.EventHandler getEventHandler()> 
<android.media.videoeditor.AudioTrack: long getBoundaryBeginTime()> 
<android.webkit.WebSettingsClassic: java.lang.String getDatabasePath()> 
<org.jivesoftware.smack.packet.BatchPresence: org.jivesoftware.smack.packet.Presence getPresenceStanza(int)> 
<android.nfc.NdefRecord: short getTnf()> 
<javax.obex.ServerOperation: long getLength()> 
<android.widget.ImageView: boolean getAdjustViewBounds()> 
<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object decode(java.io.InputStream)> 
<android.view.textservice.SpellCheckerSession: void getSuggestions(android.view.textservice.TextInfo,int)> 
<android.telephony.ServiceState: java.lang.String getOperatorNumeric()> 
<java.util.concurrent.LinkedTransferQueue: int getWaitingConsumerCount()> 
<android.support.v4.widget.CursorAdapter: int getCount()> 
<java.nio.FloatToByteBufferAdapter: java.nio.FloatBuffer get(float[],int,int)> 
<android.media.AudioManager: int getLastAudibleStreamVolume(int)> 
<org.jivesoftware.smack.provider.RawXmlExtensionProvider: com.google.common.io.protocol.ProtoBufType getProtoBufType()> 
<org.apache.james.mime4j.field.address.NamedMailbox: java.lang.String getName()> 
<org.apache.xalan.templates.OutputProperties: java.util.Properties getDefaultMethodProperties(java.lang.String)> 
<android.opengl.GLUtils: int getInternalFormat(android.graphics.Bitmap)> 
<android.text.SpannedString: int getSpanEnd(java.lang.Object)> 
<org.apache.xalan.templates.ElemNumber: org.apache.xpath.XPath getCountMatchPattern(org.apache.xpath.XPathContext,int)> 
<org.apache.xml.dtm.ref.IncrementalSAXSource_Filter: int getSourceCoroutineID()> 
<android.view.MotionEvent: float getAxisValue(int)> 
<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getRemoteTag()> 
<android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View,int,boolean)> 
<android.widget.AppSecurityPermissions: int getPermissionCount()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: org.xml.sax.ext.DeclHandler getDeclHandler()> 
<org.apache.james.mime4j.field.contenttype.parser.ParseException: java.lang.String getMessage()> 
<android.test.ServiceTestCase: android.app.Application getApplication()> 
<android.filterfw.MffEnvironment: android.filterfw.core.FilterContext getContext()> 
<android.preference.RingtonePreference: boolean getShowSilent()> 
<android.webkit.JniUtil: java.lang.String getAutofillQueryUrl()> 
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ViaHeader getTopmostViaHeader()> 
<android.hardware.usb.UsbAccessory: java.lang.String getSerial()> 
<org.apache.harmony.security.x509.PolicyInformation: byte[] getEncoded()> 
<android.text.Layout: float getSecondaryHorizontal(int)> 
<android.text.style.MaskFilterSpan: android.graphics.MaskFilter getMaskFilter()> 
<android.os.CommonClock: int getEstimatedError()> 
<org.apache.xalan.templates.StylesheetRoot: java.util.Vector getVariablesAndParamsComposed()> 
<android.webkit.WebViewClassic: void overrideLoading(java.lang.String)> 
<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.Authorization getAuthorization()> 
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.ComponentName)> 
<java.util.TimeZone: java.util.TimeZone getDefault()> 
<android.widget.ScrollBarDrawable: boolean getAlwaysDrawHorizontalTrack()> 
<android.view.accessibility.AccessibilityEvent: int getEventType()> 
<android.content.res.Resources: java.lang.String getResourceName(int)> 
<android.content.ContentResolver: boolean getMasterSyncAutomatically()> 
<javax.xml.transform.stream.StreamSource: java.io.InputStream getInputStream()> 
<org.apache.xpath.XPathContext: org.apache.xalan.extensions.ExpressionContext getExpressionContext()> 
<org.apache.xml.serializer.utils.URI: java.lang.String getQueryString()> 
<android.media.MediaRouter: android.media.MediaRouter$RouteCategory getSystemAudioCategory()> 
<android.graphics.drawable.RotateDrawable: int getOpacity()> 
<org.apache.xalan.templates.AVT: java.lang.String getName()> 
<java.util.jar.Manifest: java.util.jar.Attributes getMainAttributes()> 
<org.apache.harmony.security.asn1.ASN1Integer: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> 
<java.lang.Class: java.lang.String getCanonicalName()> 
<android.app.WallpaperManager: android.graphics.drawable.Drawable getFastDrawable()> 
<android.nfc.NfcAdapter: android.nfc.NfcAdapter getNfcAdapter(android.content.Context)> 
<org.apache.xml.serializer.ToUnknownStream: java.lang.String getDoctypeSystem()> 
<java.text.ChoiceFormat: double[] getLimits()> 
<android.webkit.HTML5VideoView: int getCurrentState()> 
<java.util.concurrent.locks.ReentrantLock: int getHoldCount()> 
<android.app.LoadedApk: java.lang.ClassLoader getClassLoader()> 
<java.net.URL: java.lang.String getFile()> 
<org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getCNs(java.security.cert.X509Certificate)> 
<org.jivesoftware.smack.OpenTrustManager: java.security.cert.X509Certificate[] getAcceptedIssuers()> 
<org.jivesoftware.smack.packet.PresenceCapability: java.lang.String getExtension()> 
<android.filterfw.core.FilterFunction: android.filterfw.core.Filter getFilter()> 
<android.preference.SwitchPreference: java.lang.CharSequence getSwitchTextOn()> 
<org.apache.harmony.security.asn1.ASN1Integer: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)> 
<libcore.icu.RuleBasedCollatorICU: libcore.icu.CollationElementIteratorICU getCollationElementIterator(java.lang.String)> 
<junit.runner.BaseTestRunner: int getPreference(java.lang.String,int)> 
<android.widget.CursorAdapter: android.database.Cursor getCursor()> 
<java.lang.ClassLoader: java.lang.ClassLoader getParent()> 
<android.content.IntentSender: android.os.UserHandle getCreatorUserHandle()> 
<android.view.Surface: android.os.IBinder getBuiltInDisplay(int)> 
<jp.co.omronsoft.openwnn.JAJP.OpenWnnEngineJAJP: jp.co.omronsoft.openwnn.WnnWord getCandidate(int)> 
<android.view.KeyEvent: long getEventTime()> 
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: int getStatus()> 
<android.text.DynamicLayout: int getEllipsisStart(int)> 
<android.view.View: int getSuggestedMinimumWidth()> 
<android.app.TabActivity: android.widget.TabWidget getTabWidget()> 
<net.oauth.client.OAuthResponseMessage: java.lang.String getBodyEncoding()> 
<android.preference.Preference: int getLayoutResource()> 
<android.net.http.Headers: java.lang.String getContentType()> 
<android.graphics.NinePatch: android.graphics.Region getTransparentRegion(android.graphics.Rect)> 
<org.apache.harmony.xml.dom.DocumentImpl: java.lang.String getTextContent()> 
<android.os.storage.StorageVolume: int getStorageId()> 
<net.oauth.signature.OAuthSignatureMethod: java.lang.String getSignature(net.oauth.OAuthMessage)> 
<java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.lang.String)> 
<gov.nist.javax.sip.header.SIPDate: java.lang.String getMonth()> 
<java.io.InputStreamReader: java.lang.String getEncoding()> 
<java.text.Collator: int getStrength()> 
<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String[] getEnumNames()> 
<android.webkit.BrowserFrame: android.webkit.BrowserFrame createWindow(boolean,boolean)> 
<org.json.JSONArray: java.lang.Object get(int)> 
<org.apache.xpath.XPathContext: org.apache.xpath.axes.SubContextList getCurrentNodeList()> 
<gov.nist.javax.sip.stack.ServerLog: java.lang.String getLogFileName()> 
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance()> 
<android.widget.Editor: android.widget.Editor$InsertionPointCursorController getInsertionController()> 
<org.apache.http.impl.io.IdentityInputStream: int read()> 
<gov.nist.javax.sip.stack.SIPTransactionStack: int getServerTransactionTableSize()> 
<org.apache.harmony.security.x509.NameConstraints: byte[] getEncoded()> 
<org.apache.xpath.operations.Operation: org.apache.xpath.Expression getLeftOperand()> 
<org.apache.harmony.security.asn1.ASN1OctetString: org.apache.harmony.security.asn1.ASN1OctetString getInstance()> 
<org.apache.james.mime4j.util.SimpleTempStorage: org.apache.james.mime4j.util.TempPath getRootTempPath()> 
<android.view.View: float getX()> 
<android.view.View: float getY()> 
<android.filterfw.core.VertexFrame: java.lang.Object getObjectValue()> 
<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadLogo(android.content.pm.PackageManager)> 
<android.webkit.SelectActionModeCallback: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)> 
<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getEarlyDialogId()> 
<android.text.format.Time: java.lang.String getCurrentTimezone()> 
<gov.nist.javax.sip.header.Contact: java.lang.String getTempGruuParam()> 
<org.jivesoftware.smackx.packet.VCard: java.lang.String getAddressFieldWork(java.lang.String)> 
<javax.crypto.Mac: int getMacLength()> 
<gov.nist.javax.sip.header.SIPHeader: java.lang.String getValue()> 
<android.text.Layout: int getLineEnd(int)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.security.Principal getLocalPrincipal()> 
<javax.crypto.Cipher: java.security.Provider getProvider()> 
<org.apache.xpath.axes.AttributeIterator: int getNextNode()> 
<android.telephony.PhoneNumberUtils: int getFormatTypeForLocale(java.util.Locale)> 
<android.webkit.WebSettingsClassic: int getUserAgent()> 
<org.apache.http.conn.scheme.Scheme: org.apache.http.conn.scheme.SocketFactory getSocketFactory()> 
<android.app.backup.BackupDataInputStream: java.lang.String getKey()> 
<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,java.lang.ClassLoader,boolean,boolean)> 
<android.graphics.drawable.AnimatedRotateDrawable: int getChangingConfigurations()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: org.w3c.dom.NamedNodeMap getAttributes()> 
<android.net.http.HttpResponseCache: int getNetworkCount()> 
<android.net.UrlQuerySanitizer: java.util.Set getParameterSet()> 
<android.net.wifi.WifiInfo: java.lang.String getSSID()> 
<gov.nist.core.HostPort: int getPort()> 
<net.oauth.OAuthProblemException: java.lang.String getProblem()> 
<android.util.AtomicFile: java.io.File getBaseFile()> 
<jp.co.omronsoft.openwnn.OpenWnnDictionaryImpl: jp.co.omronsoft.openwnn.WnnWord getNextWord()> 
<org.apache.xml.utils.URI: int getPort()> 
<org.jivesoftware.smackx.provider.DiscoverItemsProvider: com.google.common.io.protocol.ProtoBufType getProtoBufType()> 
<android.inputmethodservice.IInputMethodSessionWrapper: android.view.inputmethod.InputMethodSession getInternalInputMethodSession()> 
<org.apache.harmony.xml.ExpatAttributes: java.lang.String getType(java.lang.String)> 
<android.os.Debug: int getThreadAllocSize()> 
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getResponse()> 
<android.renderscript.FieldPacker: byte[] getData()> 
<android.view.MotionEvent: float getHistoricalTouchMajor(int)> 
<org.xml.sax.helpers.ParserAdapter: org.xml.sax.DTDHandler getDTDHandler()> 
<gov.nist.javax.sip.address.Authority: gov.nist.core.Host getHost()> 
<org.apache.james.mime4j.field.MailboxField: org.apache.james.mime4j.field.address.parser.ParseException getParseException()> 
<javax.crypto.SecretKeyFactory: java.lang.String getAlgorithm()> 
<android.text.format.DateFormat: java.text.DateFormat getDateFormatForSetting(android.content.Context,java.lang.String)> 
<android.telephony.SmsMessage: java.lang.String getMessageBody()> 
<android.support.v4.view.ViewCompat: int getLabelFor(android.view.View)> 
<org.apache.xml.dtm.ref.DTMDefaultBase: java.lang.String getDocumentBaseURI()> 
<org.apache.harmony.security.x509.InvalidityDate: java.util.Date getDate()> 
<android.net.wifi.WifiInfo: int getRssi()> 
<android.content.Intent: int getIntExtra(java.lang.String,int)> 
<android.app.ApplicationPackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int)> 
<android.net.http.Headers: java.lang.String getContentDisposition()> 
<android.graphics.Bitmap: int getHeight()> 
<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)> 
<javax.net.ssl.SSLEngine: int getPeerPort()> 
<android.os.Environment: java.io.File getExternalStorageAppCacheDirectory(java.lang.String)> 
<java.security.spec.PKCS8EncodedKeySpec: byte[] getEncoded()> 
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script$KernelID getKernelIDDstOver()> 
<org.apache.harmony.xnet.provider.jsse.CertificateRequest: int getType()> 
<android.mtp.MtpObjectInfo: int getStorageId()> 
<android.net.http.Connection: org.apache.http.HttpHost getHost()> 
<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction getCanceledInviteTransaction()> 
<android.mtp.MtpObjectInfo: int getImagePixHeight()> 
<android.widget.ListPopupWindow: int getSoftInputMode()> 
<org.apache.commons.codec.binary.Hex: java.lang.Object decode(java.lang.Object)> 
<net.oauth.OAuthAccessor: java.lang.Object getProperty(java.lang.String)> 
<org.apache.xpath.jaxp.XPathImpl: javax.xml.xpath.XPathVariableResolver getXPathVariableResolver()> 
<android.view.MotionEvent: long getEventTimeNano()> 
<java.util.concurrent.ThreadPoolExecutor: int getCorePoolSize()> 
<org.apache.xalan.processor.TransformerFactoryImpl: java.lang.Object getAttribute(java.lang.String)> 
<jp.co.omronsoft.openwnn.DefaultSoftKeyboard: jp.co.omronsoft.openwnn.Keyboard getModeChangeKeyboard(int)> 
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)> 
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> 
<gov.nist.javax.sip.SipStackImpl: java.util.Iterator getListeningPoints()> 
<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()> 
<javax.net.ssl.DistinguishedNameParser: int getByte(int)> 
<org.apache.xalan.templates.ElemCopy: java.lang.String getNodeName()> 
<android.graphics.drawable.StateListDrawable: android.graphics.drawable.Drawable getStateDrawable(int)> 
<java.security.Provider: java.lang.Object get(java.lang.Object)> 
<android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View)> 
<java.io.RandomAccessFile: float readFloat()> 
<android.webkit.ZoomManager: float getDefaultMinZoomScale()> 
<java.io.DataInputStream: java.lang.String readLine()> 
<android.support.v4.app.NavUtils: java.lang.String getParentActivityName(android.app.Activity)> 
<android.filterfw.core.FrameFormat: int getBaseType()> 
<android.view.accessibility.AccessibilityRecord: int getToIndex()> 
<java.net.DatagramPacket: java.net.InetAddress getAddress()> 
<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getG()> 
<android.graphics.NinePatch: int getDensity()> 
<org.apache.harmony.xml.dom.DOMErrorImpl: org.w3c.dom.DOMLocator getLocation()> 
<android.text.Layout: float getLineMax(int)> 
<javax.crypto.spec.DHParameterSpec: int getL()> 
<android.support.v4.content.LocalBroadcastManager: android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context)> 
<javax.crypto.spec.DHParameterSpec: java.math.BigInteger getP()> 
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: java.util.Collection getSharedQueuedThreads()> 
<android.widget.Switch: android.graphics.drawable.Drawable getThumbDrawable()> 
<org.apache.harmony.xnet.provider.jsse.SSLSocketFactoryImpl: java.lang.String[] getDefaultCipherSuites()> 
<android.opengl.GLLogWrapper: java.lang.String getLightModelPName(int)> 
<android.hardware.input.InputManager: android.hardware.input.KeyboardLayout getKeyboardLayout(java.lang.String)> 
<android.test.RenamingDelegatingContext: java.io.File getCacheDir()> 
<java.util.concurrent.ConcurrentSkipListMap: java.util.AbstractMap$SimpleImmutableEntry getNear(java.lang.Object,int)> 
<android.database.AbstractCursor: byte[] getBlob(int)> 
<android.preference.ListPreference: int getValueIndex()> 
<org.apache.xml.dtm.ref.DTMDefaultBase: int getParent(int)> 
<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()> 
<org.jivesoftware.smack.packet.XMPPError: int getCode()> 
<org.apache.xalan.Version: int getMaintenanceVersionNum()> 
<android.content.ContextWrapper: int getWallpaperDesiredMinimumWidth()> 
<android.content.IntentFilter: java.lang.String getAction(int)> 
<org.apache.http.message.BasicNameValuePair: java.lang.String getValue()> 
<java.util.Calendar: int getMinimalDaysInFirstWeek()> 
<android.test.ActivityUnitTestCase: int getFinishedActivityRequest()> 
<android.media.RingtoneManager: android.database.Cursor getDrmRingtones()> 
<android.widget.TextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()> 
<org.ccil.cowan.tagsoup.Parser: org.xml.sax.EntityResolver getEntityResolver()> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: java.lang.String getDocumentTypeDeclarationSystemIdentifier()> 
<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getHopTarget(int)> 
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.DecimalFormatProperties getDecimalFormat(org.apache.xml.utils.QName)> 
<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getPassphrase()> 
<android.content.res.TypedArray: int getLayoutDimension(int,java.lang.String)> 
<android.view.ViewRootImpl: android.view.ViewParent getParent()> 
<android.widget.ExpandableListConnector: android.widget.ExpandableListConnector$PositionMetadata getFlattenedPos(android.widget.ExpandableListPosition)> 
<android.support.v4.view.ViewPager: int getChildDrawingOrder(int,int)> 
<org.apache.xml.serializer.ToHTMLStream: boolean getOmitMetaTag()> 
<org.apache.harmony.xml.dom.LeafNodeImpl: org.w3c.dom.Node getParentNode()> 
<org.apache.xalan.templates.ElemExsltFuncResult: java.lang.String getNodeName()> 
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getValue()> 
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: boolean parse()> 
<android.graphics.drawable.NinePatchDrawable: android.graphics.Region getTransparentRegion()> 
<android.webkit.WebSettingsClassic: void setLoadWithOverviewMode(boolean)> 
<org.apache.xpath.axes.LocPathIterator: boolean getIsTopLevel()> 
<android.util.XmlPullAttributes: java.lang.String getIdAttribute()> 
<org.xmlpull.v1.sax2.Driver: org.xml.sax.ContentHandler getContentHandler()> 
<java.security.cert.PolicyQualifierInfo: java.lang.String getPolicyQualifierId()> 
<android.app.ApplicationPackageManager: int getComponentEnabledSetting(android.content.ComponentName)> 
<org.apache.xalan.templates.ElemNumber: org.apache.xpath.XPath getCount()> 
<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> 
<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap readKeyValueAssignments(java.lang.String)> 
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse: int getVersion()> 
<android.webkit.WebSettingsClassic: int getDoubleTapZoom()> 
<android.view.Window: android.view.Window getContainer()> 
<android.view.View: android.view.AccessibilityIterators$TextSegmentIterator getIteratorForGranularity(int)> 
<gov.nist.javax.sip.stack.SIPDialog: java.util.Iterator getRouteSet()> 
<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getPreviousSiblingElem()> 
<java.net.HttpCookie: long getMaxAge()> 
<java.io.BufferedReader: int read()> 
<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EffectSettings getOverlaySettings(android.media.videoeditor.OverlayFrame)> 
<android.webkit.WebSettingsClassic: boolean getAllowFileAccess()> 
<org.apache.http.util.VersionInfo: java.lang.String getPackage()> 
<org.apache.xml.serializer.dom3.DOMOutputImpl: java.io.Writer getCharacterStream()> 
<android.os.Parcel: android.util.SparseArray readSparseArray(java.lang.ClassLoader)> 
<android.net.wifi.p2p.WifiP2pService: android.os.Messenger getMessenger()> 
<javax.security.auth.Subject: javax.security.auth.Subject getSubject(java.security.AccessControlContext)> 
<org.apache.xalan.templates.ElemTextLiteral: boolean getDisableOutputEscaping()> 
<android.text.style.TypefaceSpan: int getSpanTypeId()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: java.lang.String getFormat()> 
<org.apache.harmony.xml.parsers.SAXParserFactoryImpl: boolean getFeature(java.lang.String)> 
<android.app.ContextImpl: java.io.File getDatabasePath(java.lang.String)> 
<libcore.net.http.RawHeaders: java.lang.String get(java.lang.String)> 
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.ElemVariable getVariableOrParam(org.apache.xml.utils.QName)> 
<gov.nist.core.LexerCore: java.lang.String getBuffer()> 
<org.apache.xml.utils.StringToIntTable: int getIgnoreCase(java.lang.String)> 
<org.xml.sax.InputSource: java.lang.String getPublicId()> 
<android.accessibilityservice.UiTestAutomationBridge: android.view.accessibility.AccessibilityEvent getLastAccessibilityEvent()> 
<gov.nist.javax.sip.header.ims.SecurityAgree: java.lang.String getAlgorithm()> 
<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.ElemTemplate getMatchedTemplate()> 
<org.apache.xpath.compiler.OpMap: java.lang.String getStepNS(int)> 
<android.filterfw.geometry.Quad: float getBoundingWidth()> 
<android.filterfw.core.FrameFormat: int getWidth()> 
<java.lang.reflect.UndeclaredThrowableException: java.lang.Throwable getCause()> 
<java.net.HttpURLConnection: java.lang.String getHeaderFieldKey(int)> 
<org.apache.harmony.xml.ExpatAttributes: java.lang.String getURI(int)> 
<java.net.URLConnection: int getContentLength()> 
<android.telephony.CellBroadcastMessage: java.lang.String getMessageBody()> 
<net.oauth.OAuthMessage: java.lang.String getHeader(java.lang.String)> 
<org.apache.xml.utils.DOMHelper: java.lang.String getNamespaceOfNode(org.w3c.dom.Node)> 
<org.apache.harmony.luni.internal.util.TimezoneGetter: org.apache.harmony.luni.internal.util.TimezoneGetter getInstance()> 
<android.inputmethodservice.AbstractInputMethodService: android.view.KeyEvent$DispatcherState getKeyDispatcherState()> 
<android.view.MotionEvent: void getPointerProperties(int,android.view.MotionEvent$PointerProperties)> 
<android.filterfw.core.Frame: int getRefCount()> 
<org.apache.james.mime4j.field.address.parser.AddressListParser: org.apache.james.mime4j.field.address.parser.Token getToken(int)> 
<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)> 
<android.support.v4.view.ViewCompat: int getLayerType(android.view.View)> 
<org.apache.http.conn.scheme.SchemeRegistry: java.util.List getSchemeNames()> 
<android.nfc.Tag: int getConnectedTechnology()> 
<android.widget.DateTimeView: java.text.DateFormat getDateFormat()> 
<org.kxml2.io.KXmlSerializer: java.lang.String getNamespace()> 
<java.lang.String: void getBytes(int,int,byte[],int)> 
<android.webkit.WebViewDatabaseClassic: java.util.ArrayList getFormData(java.lang.String,java.lang.String)> 
<org.apache.xalan.templates.ElemNumber: org.apache.xpath.XPath getFrom()> 
<android.telephony.SmsManager: java.util.ArrayList getAllMessagesFromIcc()> 
<java.security.cert.X509CertSelector: byte[] getSubjectAsBytes()> 
<android.text.StaticLayout: int getTopPadding()> 
<org.apache.harmony.security.provider.cert.X509CRLEntryImpl: java.util.Set getNonCriticalExtensionOIDs()> 
<org.jivesoftware.smack.packet.LoginRequest: java.lang.String getDeviceId()> 
<java.security.SignedObject: java.lang.String getAlgorithm()> 
<android.util.MonthDisplayHelper: int getWeekStartDay()> 
<org.apache.xpath.axes.LocPathIterator: boolean getExpandEntityReferences()> 
<libcore.icu.NativeBreakIterator: libcore.icu.NativeBreakIterator getSentenceInstance(java.util.Locale)> 
<org.apache.xalan.templates.TemplateSubPatternAssociation: org.apache.xpath.patterns.StepPattern getStepPattern()> 
<org.apache.http.message.BasicHeaderElement: java.lang.String getValue()> 
<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getLocalName()> 
<org.apache.http.message.ParserCursor: int getLowerBound()> 
<org.apache.xml.serializer.utils.AttList: java.lang.String getValue(java.lang.String)> 
<org.apache.harmony.security.x509.SubjectPublicKeyInfo: byte[] getSubjectPublicKey()> 
<java.lang.reflect.Field: byte getByte(java.lang.Object)> 
<org.apache.xml.serializer.utils.URI: java.lang.String getHost()> 
<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.Collection getSharedQueuedThreads()> 
<org.apache.http.cookie.CookieSpecRegistry: org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String,org.apache.http.params.HttpParams)> 
<android.location.Address: java.lang.String getSubAdminArea()> 
<java.util.ResourceBundle: java.lang.Object getObject(java.lang.String)> 
<android.hardware.display.DisplayManagerGlobal: android.view.Display getCompatibleDisplay(int,android.view.CompatibilityInfoHolder)> 
<android.media.MediaExtractor: android.media.MediaFormat getTrackFormat(int)> 
<android.widget.TextView: int getMinHeight()> 
<gov.nist.javax.sip.header.Protocol: java.lang.String getTransport()> 
<android.content.res.Resources: android.content.res.XmlResourceParser getAnimation(int)> 
<org.kxml2.io.KXmlParser: void readDoctype(boolean)> 
<org.apache.james.mime4j.field.address.MailboxList: org.apache.james.mime4j.field.address.Mailbox get(int)> 
<javax.xml.datatype.Duration: javax.xml.namespace.QName getXMLSchemaType()> 
<javax.net.ssl.KeyManagerFactory: java.lang.String getDefaultAlgorithm()> 
<java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)> 
<org.apache.xalan.transformer.XalanTransformState: javax.xml.transform.Transformer getTransformer()> 
<android.app.Dialog: android.view.View getCurrentFocus()> 
<org.apache.xml.dtm.ref.DTMNodeList: int getLength()> 
<android.content.SyncStorageEngine: android.util.Pair getBackoff(android.accounts.Account,int,java.lang.String)> 
<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.ClassLoader getBaseClassLoader()> 
<android.view.MotionEvent: int getPointerCount()> 
<libcore.io.DiskLruCache: java.io.File getDirectory()> 
<android.graphics.Paint: android.graphics.Paint$FontMetricsInt getFontMetricsInt()> 
<android.database.BulkCursorProxy: android.os.Bundle getExtras()> 
<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])> 
<android.bluetooth.BluetoothAdapter: int getProfileConnectionState(int)> 
<android.bluetooth.BluetoothAdapter: android.bluetooth.IBluetoothManager getBluetoothManager()> 
<org.apache.xpath.axes.NodeSequence: int getAnalysisBits()> 
<org.apache.xalan.templates.StylesheetRoot: int getImportNumber(org.apache.xalan.templates.StylesheetComposed)> 
<org.apache.xalan.templates.OutputProperties: boolean getBooleanProperty(org.apache.xml.utils.QName)> 
<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.stack.SIPDialog getDialog(java.lang.String)> 
<android.net.UrlQuerySanitizer: java.lang.String unescape(java.lang.String)> 
<android.graphics.Bitmap: int getScaledHeight(int)> 
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: int getChildCount(java.lang.Object)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: boolean getWantClientAuth()> 
<org.apache.james.mime4j.field.ContentTypeField: org.apache.james.mime4j.field.contenttype.parser.ParseException getParseException()> 
<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)> 
<java.util.zip.ZipEntry: java.lang.String getComment()> 
<java.io.WriteAbortedException: java.lang.String getMessage()> 
<android.widget.CompoundButton: int getCompoundPaddingRight()> 
<android.view.View: int getWidth()> 
<java.nio.CharBuffer: java.nio.CharBuffer get(char[])> 
<java.io.EmulatedFieldsForLoading: short get(java.lang.String,short)> 
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: java.lang.Runnable getDelegatedTask()> 
<android.widget.RelativeLayout: android.widget.RelativeLayout$LayoutParams getRelatedViewParams(int[],int)> 
<java.text.BreakIterator: java.util.Locale[] getAvailableLocales()> 
<android.view.animation.AnimationUtils: android.view.animation.LayoutAnimationController loadLayoutAnimation(android.content.Context,int)> 
<android.text.Layout: int getParagraphLeadingMargin(int)> 
<android.media.audiofx.AudioEffect: int getParameter(byte[],byte[])> 
<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean)> 
<android.text.method.MultiTapKeyListener: android.text.method.MultiTapKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize)> 
<android.util.NtpTrustedTime: long getCacheCertainty()> 
<org.apache.harmony.security.x509.Extension: byte[] getExtnValue()> 
<java.io.FileInputStream: java.io.FileDescriptor getFD()> 
<android.widget.TextView: float getShadowRadius()> 
<org.apache.xpath.Arg: org.apache.xml.utils.QName getQName()> 
<android.renderscript.Mesh: int getVertexAllocationCount()> 
<org.apache.xml.serializer.dom3.LSSerializerImpl: org.w3c.dom.ls.LSSerializerFilter getFilter()> 
<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Body getBody()> 
<android.text.style.SuperscriptSpan: int getSpanTypeId()> 
<android.filterfw.core.NativeFrame: float[] getFloats()> 
<android.support.v4.content.ModernAsyncTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)> 
<org.apache.http.impl.client.DefaultRedirectHandler: java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)> 
<org.jivesoftware.smackx.provider.SimpleVCardProvider: org.jivesoftware.smack.packet.IQ parseIQ(com.google.common.io.protocol.ProtoBuf)> 
<org.apache.james.mime4j.message.MemoryBinaryBody: java.io.InputStream getInputStream()> 
<android.renderscript.Element: java.lang.String getSubElementName(int)> 
<org.apache.xml.dtm.ref.NodeLocator: java.lang.String getSystemId()> 
<android.util.NtpTrustedTime: long getCacheAge()> 
<android.opengl.GLSurfaceView: int getRenderMode()> 
<org.apache.xml.utils.UnImplNode: java.lang.String getWholeText()> 
<android.media.audiofx.Virtualizer: android.media.audiofx.Virtualizer$Settings getProperties()> 
<java.security.cert.X509CertSelector: java.math.BigInteger getSerialNumber()> 
<org.apache.harmony.security.pkcs7.SignedData: java.util.List getCertificates()> 
<android.media.videoeditor.MediaItem: android.media.videoeditor.Transition getEndTransition()> 
<android.content.ContentService: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)> 
<org.apache.xpath.patterns.NodeTest: java.lang.String getNamespace()> 
<android.webkit.WebViewDatabaseClassic: java.lang.String[] getUsernamePassword(java.lang.String)> 
<android.app.ActivityThread: int getIntCoreSetting(java.lang.String,int)> 
<android.support.v4.content.ModernAsyncTask: java.lang.Object get()> 
<android.support.v4.util.LongSparseArray: java.lang.Object get(long)> 
<android.media.audiofx.AudioEffect: int getId()> 
<org.apache.xml.dtm.SecuritySupport12: java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader)> 
<android.os.MemoryFile: java.io.InputStream getInputStream()> 
<java.util.logging.LogManager: java.util.logging.Logger getLogger(java.lang.String)> 
<org.apache.xml.serializer.ToXMLSAXHandler: java.util.Properties getOutputFormat()> 
<android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)> 
<gov.nist.javax.sip.address.Authority: java.lang.String getUser()> 
<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ErrorInfoList getErrorInfoHeaders()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.security.Principal getPeerPrincipal()> 
<org.apache.xml.utils.res.XResourceBundle: java.lang.String getResourceSuffix(java.util.Locale)> 
<android.app.LoadedApk: java.lang.String getResDir()> 
<android.media.videoeditor.MediaItem: java.lang.String getId()> 
<org.apache.xml.dtm.ref.DTMNodeListBase: int getLength()> 
<android.test.IsolatedContext: java.util.List getAndClearBroadcastIntents()> 
<android.animation.LayoutTransition: java.util.List getTransitionListeners()> 
<org.apache.xml.utils.UnImplNode: boolean getXmlStandalone()> 
<gov.nist.javax.sip.stack.HopImpl: int getPort()> 
<android.widget.Gallery: int getCenterOfGallery()> 
<java.util.logging.Level: java.lang.String getResourceBundleName()> 
<android.speech.tts.TextToSpeech: android.os.Bundle getParams(java.util.HashMap)> 
<org.apache.harmony.security.x509.GeneralSubtree: org.apache.harmony.security.x509.GeneralName getBase()> 
<org.apache.harmony.security.pkcs7.ContentInfo: java.lang.Object getContent()> 
<android.text.method.DigitsKeyListener: char[] getAcceptedChars()> 
<android.webkit.WebViewCore: android.webkit.WebView getWebView()> 
<android.widget.CalendarView: int getSelectedWeekBackgroundColor()> 
<android.widget.CalendarView: long getMaxDate()> 
<android.widget.EdgeEffect: android.graphics.Rect getBounds(boolean)> 
<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getParentNodeElem()> 
<java.util.Locale: java.lang.String getDisplayVariant(java.util.Locale)> 
<org.apache.harmony.security.x509.SubjectPublicKeyInfo: byte[] getEncoded()> 
<jp.co.omronsoft.openwnn.OpenWnnEN: int getShiftKeyState(android.view.inputmethod.EditorInfo)> 
<gov.nist.javax.sip.SipProviderImpl: javax.sip.ClientTransaction getNewClientTransaction(javax.sip.message.Request)> 
<org.apache.xml.serializer.utils.AttList: java.lang.String getValue(int)> 
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.DocumentType getDoctype()> 
<javax.security.auth.callback.UnsupportedCallbackException: javax.security.auth.callback.Callback getCallback()> 
<java.lang.BootClassLoader: java.net.URL getResource(java.lang.String)> 
<android.app.ApplicationPackageManager: java.lang.CharSequence getText(java.lang.String,int,android.content.pm.ApplicationInfo)> 
<android.text.DynamicLayout: int getBottomPadding()> 
<android.view.View: android.view.DisplayList getDisplayList(android.view.DisplayList,boolean)> 
<android.widget.SimpleCursorAdapter: android.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter()> 
<android.app.ContextImpl: java.io.File getDatabasesDir()> 
<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()> 
<org.apache.harmony.security.x509.Extensions: org.apache.harmony.security.x509.Extension getExtensionByOID(java.lang.String)> 
<android.app.admin.DevicePolicyManager: int getPasswordHistoryLength(android.content.ComponentName,int)> 
<android.test.suitebuilder.TestGrouping: java.util.SortedSet getTestCaseClasses()> 
<android.location.Address: java.lang.String getAddressLine(int)> 
<gov.nist.javax.sip.stack.MessageChannel: java.lang.String createBadReqRes(java.lang.String,java.text.ParseException)> 
<android.widget.ExpandableListConnector: android.widget.Filter getFilter()> 
<org.apache.xml.utils.QName: java.lang.String getNamespaceURI()> 
<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)> 
<org.apache.http.impl.cookie.BestMatchSpec: int getVersion()> 
<gov.nist.javax.sip.header.UserAgent: java.util.ListIterator getProduct()> 
<org.apache.harmony.security.pkcs7.SignerInfo: java.util.List getAuthenticatedAttributes()> 
<libcore.io.ForwardingOs: int getuid()> 
<org.apache.http.message.BasicStatusLine: java.lang.String getReasonPhrase()> 
<org.apache.harmony.xnet.provider.jsse.CipherSuite: org.apache.harmony.xnet.provider.jsse.CipherSuite getByCode(byte,byte,byte)> 
<android.nfc.Tag: byte[] readBytesWithNull(android.os.Parcel)> 
<android.view.View: java.lang.Object getTag(int)> 
<android.app.UiModeManager: int getNightMode()> 
<org.apache.xml.serializer.SerializerBase: javax.xml.transform.Transformer getTransformer()> 
<java.lang.Class: java.lang.Class[] getClasses()> 
<android.graphics.drawable.shapes.Shape: float getHeight()> 
<org.apache.james.mime4j.message.Multipart: java.lang.String getPreamble()> 
<org.kxml2.io.KXmlParser: void readNotationDeclaration()> 
<java.util.ResourceBundle: java.util.Locale getLocale()> 
<android.view.InputDevice: int getId()> 
<android.filterpacks.imageproc.ContrastFilter: android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)> 
<org.apache.xalan.templates.ElemApplyImport: java.lang.String getNodeName()> 
<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: java.lang.reflect.Type parseReturnType()> 
<org.apache.xml.utils.res.XResourceBundle: org.apache.xml.utils.res.XResourceBundle loadResourceBundle(java.lang.String,java.util.Locale)> 
<android.content.pm.PackageParser: android.os.Bundle parseMetaData(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.os.Bundle,java.lang.String[])> 
<android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance()> 
<android.support.v4.util.SparseArrayCompat: java.lang.Object get(int,java.lang.Object)> 
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByTypeAsUser(java.lang.String,android.os.UserHandle)> 
<org.apache.harmony.xml.dom.ProcessingInstructionImpl: java.lang.String getNodeValue()> 
<org.apache.http.message.BufferedHeader: java.lang.String getValue()> 
<android.view.InputQueue: android.view.InputChannel getInputChannel()> 
<android.content.ContentService: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String)> 
<android.widget.ListPopupWindow: int getPromptPosition()> 
<gov.nist.javax.sip.address.Authority: gov.nist.core.HostPort getHostPort()> 
<org.apache.commons.codec.net.URLCodec: java.lang.Object decode(java.lang.Object)> 
<java.net.URLConnection: boolean getDefaultAllowUserInteraction()> 
<android.text.HtmlToSpannedConverter: java.lang.Object getLast(android.text.Spanned,java.lang.Class)> 
<libcore.net.url.JarURLConnectionImpl: boolean getUseCaches()> 
<org.apache.xalan.xslt.SecuritySupport12: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)> 
<gov.nist.javax.sip.header.HeaderFactoryImpl: gov.nist.javax.sip.header.SipRequestLine createRequestLine(java.lang.String)> 
<libcore.net.http.RequestHeaders: java.lang.String getProxyAuthorization()> 
<android.os.Parcel: java.util.HashMap readHashMap(java.lang.ClassLoader)> 
<org.jivesoftware.smack.PacketReader: org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser)> 
<org.apache.xpath.compiler.OpMap: java.lang.Object getToken(int)> 
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script$KernelID getKernelIDXor()> 
<gov.nist.javax.sip.header.Reason: java.lang.String getName()> 
<android.widget.ListView: int getTopSelectionPixel(int,int,int)> 
<android.telephony.TelephonyManager: java.lang.String getSimOperatorName()> 
<java.util.TimeZone: int getDSTSavings()> 
<org.apache.harmony.xml.dom.CommentImpl: short getNodeType()> 
<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTElementProcessor getProcessorFor(java.lang.String,java.lang.String)> 
<org.apache.xalan.templates.ElemNumber: org.apache.xalan.templates.AVT getFormat()> 
<android.view.ViewGroup: int getPersistentDrawingCache()> 
<org.ccil.cowan.tagsoup.HTMLScanner: java.lang.String getPublicId()> 
<android.support.v13.app.FragmentPagerAdapter: long getItemId(int)> 
<org.apache.xpath.axes.ChildTestIterator: int getNextNode()> 
<android.database.sqlite.SQLiteGlobal: int getWALConnectionPoolSize()> 
<org.apache.harmony.security.x509.InvalidityDate: byte[] getEncoded()> 
<org.apache.xalan.templates.Stylesheet: int getVariableOrParamCount()> 
<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScheme getAuthScheme()> 
<android.filterfw.geometry.Quad: float getBoundingHeight()> 
<org.apache.xml.utils.SecuritySupport: java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader)> 
<android.telephony.TelephonyManager: int getPhoneType(int)> 
<org.xmlpull.v1.sax2.Driver: java.lang.String getLocalName(int)> 
<java.security.cert.PKIXCertPathValidatorResult: java.security.cert.TrustAnchor getTrustAnchor()> 
<android.view.View: int getNextFocusLeftId()> 
<android.webkit.WebSettings: int getCacheMode()> 
<android.net.ThrottleManager: long getResetTime(java.lang.String)> 
<org.apache.http.impl.SocketHttpServerConnection: java.net.InetAddress getRemoteAddress()> 
<android.os.Message: java.lang.Runnable getCallback()> 
<org.apache.james.mime4j.field.address.parser.AddressListParser: org.apache.james.mime4j.field.address.parser.Token getNextToken()> 
<org.apache.xml.serializer.NamespaceMappings: org.apache.xml.serializer.NamespaceMappings$Stack getPrefixStack(java.lang.String)> 
<android.widget.AppSecurityPermissions: android.view.View getPermissionItemViewOld(android.content.Context,android.view.LayoutInflater,java.lang.CharSequence,java.lang.CharSequence,boolean,android.graphics.drawable.Drawable)> 
<libcore.icu.NativeDecimalFormat: int getMinimumIntegerDigits()> 
<android.content.SyncStorageEngine: android.content.SyncStatusInfo getOrCreateSyncStatus(android.content.SyncStorageEngine$AuthorityInfo)> 
<android.content.Loader: void onStopLoading()> 
<android.renderscript.Matrix3f: float[] getArray()> 
<org.apache.harmony.security.provider.cert.X509CRLImpl: java.util.Set getRevokedCertificates()> 
<android.media.audiofx.AudioEffect: android.media.audiofx.AudioEffect$Descriptor getDescriptor()> 
<gov.nist.core.StringTokenizer: char getNextChar()> 
<android.nfc.NdefMessage: int getByteArrayLength()> 
<android.view.KeyEvent: int getKeyCode()> 
<android.view.animation.GridLayoutAnimationController: float getColumnDelay()> 
<android.animation.ValueAnimator: int getRepeatCount()> 
<java.util.Date: int getYear()> 
<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericExceptionTypes()> 
<android.hardware.display.WifiDisplayStatus: android.hardware.display.WifiDisplay[] getRememberedDisplays()> 
<android.test.mock.MockResources: java.lang.String getString(int,java.lang.Object[])> 
<org.apache.xalan.processor.StylesheetHandler: javax.xml.transform.Templates getTemplates()> 
<libcore.io.GaiException: java.lang.String getMessage()> 
<android.media.audiofx.EnvironmentalReverb: short getRoomHFLevel()> 
<javax.xml.xpath.XPathFactoryFinder: javax.xml.xpath.XPathFactory createInstance(java.lang.String)> 
<org.apache.xpath.operations.Operation: org.apache.xpath.Expression getRightOperand()> 
<android.media.ExifInterface: void loadAttributes()> 
<org.apache.xml.utils.UnImplNode: boolean getSpecified()> 
<org.jivesoftware.smackx.ServiceDiscoveryManager: java.lang.String getIdentityType()> 
<android.text.method.DateTimeKeyListener: int getInputType()> 
<org.apache.commons.codec.net.QuotedPrintableCodec: java.lang.String decode(java.lang.String,java.lang.String)> 
<android.os.Bundle: char getChar(java.lang.String)> 
<android.net.DnsPinger: java.util.List getDnsList()> 
<android.drm.ProcessedData: java.lang.String getAccountId()> 
<org.apache.http.util.EncodingUtils: byte[] getBytes(java.lang.String,java.lang.String)> 
<gov.nist.core.StringTokenizer: java.lang.String getNextToken(char)> 
<java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale)> 
<android.widget.ArrayAdapter: int getCount()> 
<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)> 
<org.apache.harmony.security.asn1.ASN1Enumerated: org.apache.harmony.security.asn1.ASN1Enumerated getInstance()> 
<android.renderscript.Matrix2f: float[] getArray()> 
<gov.nist.javax.sip.header.Via: java.lang.String getTransport()> 
<android.widget.ListView: int getArrowScrollPreviewLength()> 
<android.webkit.WebHistoryItemClassic: java.lang.String getTitle()> 
<android.widget.SlidingDrawer: android.view.View getContent()> 
<org.apache.http.impl.client.BasicCredentialsProvider: org.apache.http.auth.Credentials getCredentials(org.apache.http.auth.AuthScope)> 
<android.bluetooth.BluetoothAdapter: int getState()> 
<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler getContentHandler()> 
<org.apache.harmony.xnet.provider.jsse.ServerKeyExchange: java.security.interfaces.RSAPublicKey getRSAPublicKey()> 
<android.net.BaseNetworkStateTracker: android.os.Handler getTargetHandler()> 
<android.animation.ValueAnimator: android.animation.ValueAnimator$AnimationHandler getOrCreateAnimationHandler()> 
<org.apache.xml.dtm.ref.DTMDefaultBase: int getNextNamespaceNode(int,int,boolean)> 
<java.net.InetSocketAddress: java.lang.String getHostName()> 
<android.widget.ArrayAdapter: int getPosition(java.lang.Object)> 
<android.test.suitebuilder.TestSuiteBuilder: android.test.suitebuilder.TestGrouping getTestGrouping()> 
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: boolean getKeepAlive()> 
<java.util.PropertyResourceBundle: java.util.Enumeration getKeys()> 
<android.net.NetworkStatsHistory: android.net.NetworkStatsHistory$Entry getValues(long,long,long,android.net.NetworkStatsHistory$Entry)> 
<android.media.videoeditor.MediaArtistNativeHelper: android.media.videoeditor.MediaArtistNativeHelper$EffectSettings getEffectSettings(android.media.videoeditor.EffectColor)> 
<org.apache.http.client.methods.HttpHead: java.lang.String getMethod()> 
<gov.nist.javax.sip.header.Credentials: java.lang.String getScheme()> 
<gov.nist.javax.sip.header.RequestLine: gov.nist.javax.sip.address.GenericURI getUri()> 
<android.telephony.gsm.SmsMessage: int getProtocolIdentifier()> 
<org.apache.harmony.xnet.provider.jsse.CertificateMessage: int getType()> 
<org.apache.xalan.transformer.TransformerImpl: java.lang.Exception getExceptionThrown()> 
<org.jivesoftware.smack.SmackConfiguration: java.lang.String getVersion()> 
<gov.nist.javax.sip.stack.SIPTransaction: int getPeerPacketSourcePort()> 
<gov.nist.javax.sip.address.SipUri: int getTTLParam()> 
<java.lang.String: void getChars(int,int,char[],int)> 
<android.os.HandlerThread: int getThreadId()> 
<java.net.PlainDatagramSocketImpl: byte getTTL()> 
<java.security.CodeSigner: java.security.Timestamp getTimestamp()> 
<net.oauth.client.OAuthResponseMessage: java.io.InputStream getBodyAsStream()> 
<android.net.ConnectivityManager: java.lang.String[] getTetheredIfaces()> 
<org.apache.xml.serializer.dom3.NamespaceSupport: int getDeclaredPrefixCount()> 
<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String getComment()> 
<org.apache.http.impl.AbstractHttpServerConnection: org.apache.http.io.HttpMessageParser createRequestParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpRequestFactory,org.apache.http.params.HttpParams)> 
<android.webkit.WebSettings: boolean getBuiltInZoomControls()> 
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.Document getOwnerDocument()> 
<org.apache.xpath.XPathContext: javax.xml.transform.ErrorListener getErrorListener()> 
<android.filterfw.core.Filter: int getNumberOfOutputs()> 
<android.app.Activity: android.app.FragmentManager getFragmentManager()> 
<org.jivesoftware.smack.packet.BatchPresence: int getNumPresenceStanzas()> 
<javax.crypto.spec.OAEPParameterSpec: java.lang.String getDigestAlgorithm()> 
<org.apache.xalan.templates.ElemNumber: org.apache.xml.utils.NodeVector getMatchingAncestors(org.apache.xpath.XPathContext,int,boolean)> 
<android.net.sip.SipProfile: java.lang.String getSipDomain()> 
<gov.nist.javax.sip.header.Challenge: java.lang.String getResponse()> 
<android.graphics.drawable.PictureDrawable: int getOpacity()> 
<android.webkit.ZoomManager: float getDefaultScale()> 
<android.bluetooth.BluetoothInputDevice: java.util.List getDevicesMatchingConnectionStates(int[])> 
<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: byte[] getDigestSHA()> 
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.auth.AuthSchemeRegistry getAuthSchemes()> 
<java.util.logging.LogRecord: long getSequenceNumber()> 
<org.apache.harmony.luni.lang.reflect.ImplForWildcard: java.lang.reflect.Type[] getLowerBounds()> 
<gov.nist.javax.sip.header.ims.SecurityAgree: java.lang.String getSecurityMechanism()> 
<java.text.DateFormatSymbols: java.lang.String getLocalPatternChars()> 
<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.String getConfigurationValue(java.lang.String)> 
<dalvik.system.profiler.HprofBinaryToAscii: dalvik.system.profiler.HprofData read(java.io.InputStream)> 
<org.apache.james.mime4j.field.address.parser.ParseException: java.lang.String getMessage()> 
<org.apache.xpath.XPathContext: javax.xml.transform.SourceLocator getSAXLocator()> 
<java.net.DatagramSocket: int getSoTimeout()> 
<org.jivesoftware.smackx.provider.DiscoverInfoProvider: com.google.common.io.protocol.ProtoBufType getProtoBufType()> 
<android.webkit.WebSettings: java.lang.String getSansSerifFontFamily()> 
<android.text.Layout: float getSpacingAdd()> 
<org.apache.xml.utils.NamespaceSupport2: java.lang.String getURI(java.lang.String)> 
<gov.nist.javax.sip.header.AcceptEncoding: java.lang.String getEncoding()> 
<android.widget.SimpleAdapter: long getItemId(int)> 
<android.text.style.EasyEditSpan: int getSpanTypeId()> 
<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.ClassLoader getContextClassLoader()> 
<java.text.StringCharacterIterator: int getIndex()> 
<android.support.v4.view.accessibility.AccessibilityRecordCompat: int getFromIndex()> 
<android.webkit.CallbackProxy: boolean shouldOverrideUrlLoading(java.lang.String)> 
<android.app.backup.BackupDataInput: int getDataSize()> 
<java.util.Date: int getHours()> 
<android.view.View: java.lang.CharSequence getIterableTextForAccessibility()> 
<javax.net.ssl.SSLParameters: java.lang.String[] getCipherSuites()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getLastChild(int)> 
<android.view.View: android.view.ViewParent getParent()> 
<android.database.CursorWrapper: android.database.Cursor getWrappedCursor()> 
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback getCallback()> 
<android.widget.ListView: android.graphics.drawable.Drawable getDivider()> 
<gov.nist.javax.sip.stack.SIPClientTransaction: javax.sip.address.Hop getNextHop()> 
<java.nio.MemoryBlock: long getSize()> 
<android.content.SyncManager: java.lang.String getLastFailureMessage(int)> 
<android.media.AudioManager: java.lang.String getProperty(java.lang.String)> 
<java.util.BitSet: boolean get(int)> 
<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPRequest createBYERequest(boolean)> 
<android.app.Fragment: boolean getRetainInstance()> 
<java.util.FormatFlagsConversionMismatchException: char getConversion()> 
<org.apache.harmony.xnet.provider.jsse.ServerHelloDone: int getType()> 
<android.widget.ListPopupWindow: int getWidth()> 
<android.view.GLES20Canvas: int getDisplayList(int)> 
<android.webkit.WebSettingsClassic: java.lang.String getCurrentAcceptLanguage()> 
<java.util.concurrent.ForkJoinPool: boolean getAsyncMode()> 
<android.widget.Scroller: int getStartX()> 
<android.widget.Scroller: int getStartY()> 
<java.util.concurrent.locks.ReentrantLock: int getQueueLength()> 
<org.apache.harmony.xnet.provider.jsse.CipherSuite: java.lang.String getClientKeyType(byte)> 
<android.graphics.Camera: void getMatrix(android.graphics.Matrix)> 
<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.axes.LocPathIterator getLocPathIterator()> 
<android.widget.ImageView: android.graphics.ColorFilter getColorFilter()> 
<android.widget.PopupWindow: int getSoftInputMode()> 
<org.apache.xml.utils.SecuritySupport12: java.lang.ClassLoader getSystemClassLoader()> 
<android.preference.PreferenceManager: android.content.Context getContext()> 
<android.widget.CursorAdapter: long getItemId(int)> 
<android.view.KeyEvent: int getDeviceId()> 
<org.kxml2.io.KXmlParser: void readElementDeclaration()> 
<java.lang.reflect.Field: java.lang.Class getType()> 
<android.database.CursorWrapper: int getColumnIndex(java.lang.String)> 
<org.apache.xpath.axes.NodeSequence: org.apache.xml.dtm.DTMManager getDTMManager()> 
<java.security.cert.PKIXParameters: boolean getPolicyQualifiersRejected()> 
<libcore.icu.NativeDecimalFormat: int getMaximumIntegerDigits()> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: java.lang.String getNodeName(int)> 
<android.view.inputmethod.InputMethodSubtype: java.lang.String getMode()> 
<org.apache.xalan.templates.AVT: java.lang.String getRawName()> 
<android.gesture.GestureOverlayView: int getUncertainGestureColor()> 
<android.speech.srec.Recognizer: java.lang.String getConfigDir(java.util.Locale)> 
<java.util.logging.LogRecord: long getMillis()> 
<android.telephony.SmsMessage: int getTPLayerLengthForPDU(java.lang.String)> 
<android.media.AudioService: android.media.AudioService$ScoClient getScoClient(android.os.IBinder,boolean)> 
<java.nio.LongToByteBufferAdapter: java.nio.LongBuffer get(long[],int,int)> 
<android.app.ActivityManagerProxy: int getTaskForActivity(android.os.IBinder,boolean)> 
<android.util.DayOfMonthCursor: int getSelectedDayOfMonth()> 
<android.widget.ImageView: int getImageAlpha()> 
<android.view.View: int getWindowVisibility()> 
<android.net.SSLCertificateSocketFactory: javax.net.ssl.SSLSocketFactory getDefault(int,android.net.SSLSessionCache)> 
<android.graphics.Paint: android.graphics.Paint$FontMetrics getFontMetrics()> 
<android.renderscript.Matrix4f: float[] getArray()> 
<org.apache.http.impl.cookie.RFC2965Spec: org.apache.http.Header getVersionHeader()> 
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: int getDefaultMaxPerRoute()> 
<java.io.ObjectInputStream: float readFloat()> 
<android.animation.Keyframe: java.lang.Class getType()> 
<org.apache.harmony.security.x509.tsp.TSTInfo: java.math.BigInteger getNonce()> 
<android.database.sqlite.SQLiteConnection: android.database.sqlite.SQLiteDebug$DbStats getMainDbStatsUnsafe(int,long,long)> 
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getNamespaceURI()> 
<org.apache.james.mime4j.field.DateTimeField: org.apache.james.mime4j.field.datetime.parser.ParseException getParseException()> 
<java.security.AlgorithmParameters: byte[] getEncoded()> 
<android.util.EventLogTags: android.util.EventLogTags$Description get(java.lang.String)> 
<android.widget.TimePicker: java.lang.Integer getCurrentHour()> 
<android.widget.HeaderViewListAdapter: int getViewTypeCount()> 
<android.widget.ListView: boolean getItemsCanFocus()> 
<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.stack.MessageChannel getMessageChannel()> 
<org.apache.commons.logging.impl.LogFactoryImpl: org.apache.commons.logging.Log getInstance(java.lang.String)> 
<org.apache.http.impl.cookie.CookieSpecBase: java.util.List parse(org.apache.http.HeaderElement[],org.apache.http.cookie.CookieOrigin)> 
<java.net.InetAddress: java.lang.String getCanonicalHostName()> 
<org.apache.harmony.security.x509.ReasonCode: byte[] getEncoded()> 
<android.test.InstrumentationTestRunner: com.android.internal.util.Predicate getSizePredicateFromArg(java.lang.String)> 
<android.gesture.GestureOverlayView: float getGestureStrokeAngleThreshold()> 
<org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream: int getEndLine()> 
<android.hardware.usb.UsbEndpoint: int getAttributes()> 
<javax.net.ssl.TrustManagerFactory: java.lang.String getAlgorithm()> 
<android.graphics.drawable.Drawable: int getMinimumWidth()> 
<android.media.audiofx.Visualizer: int getSamplingRate()> 
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()> 
<java.security.spec.ECFieldFp: int getFieldSize()> 
<android.location.LocationManager: android.location.GpsStatus getGpsStatus(android.location.GpsStatus)> 
<android.media.videoeditor.MediaVideoItem: int getVideoType()> 
<android.widget.TextView: int getTotalPaddingStart()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: int getTrafficClass()> 
<org.apache.harmony.security.PublicKeyImpl: java.lang.String getAlgorithm()> 
<android.location.GpsSatellite: float getSnr()> 
<java.text.NumberFormat: java.util.Locale[] getAvailableLocales()> 
<android.speech.srec.Recognizer: int getResultCount()> 
<android.telephony.SignalStrength: int getLteDbm()> 
<java.security.Provider: java.lang.String getInfo()> 
<android.hardware.SensorManager: float getAltitude(float,float)> 
<org.kxml2.io.KXmlParser: java.lang.String getRootElementName()> 
<javax.crypto.ExemptionMechanism: javax.crypto.ExemptionMechanism getInstance(java.lang.String,java.security.Provider)> 
<org.apache.xpath.axes.IteratorPool: org.apache.xml.dtm.DTMIterator getInstanceOrThrow()> 
<android.filterfw.core.Frame: long getBindingId()> 
<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()> 
<java.io.CharArrayReader: int read(char[],int,int)> 
<android.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getDrawable(android.net.Uri)> 
<android.media.RingtoneManager: boolean getIncludeDrm()> 
<org.apache.http.message.BufferedHeader: org.apache.http.HeaderElement[] getElements()> 
<android.app.LoadedApk: android.app.IServiceConnection getServiceDispatcher(android.content.ServiceConnection,android.content.Context,android.os.Handler,int)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: java.lang.String[] getSupportedCipherSuites()> 
<android.net.MobileDataStateTracker: android.net.LinkCapabilities getLinkCapabilities()> 
<org.apache.xml.utils.StringBufferPool: org.apache.xml.utils.FastStringBuffer get()> 
<java.util.concurrent.ThreadPoolExecutor: long getCompletedTaskCount()> 
<android.os.Debug: int getGlobalExternalFreedSize()> 
<android.webkit.WebView: void stopLoading()> 
<java.security.cert.PKIXParameters: java.util.Set getTrustAnchors()> 
<android.test.suitebuilder.TestMethod: java.lang.String getEnclosingClassname()> 
<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()> 
<android.location.LocationRequest: int getNumUpdates()> 
<org.apache.james.mime4j.field.datetime.DateTime: int getTimeZone()> 
<org.apache.harmony.security.x509.TBSCertificate: boolean[] getSubjectUniqueID()> 
<android.test.mock.MockPackageManager: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)> 
<android.test.mock.MockCursor: android.os.Bundle getExtras()> 
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable$ShaderFactory getShaderFactory()> 
<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getState()> 
<android.mtp.MtpDatabase: int[] getSupportedDeviceProperties()> 
<android.nfc.TransceiveResult: byte[] getResponseOrThrow()> 
<libcore.icu.NativeDecimalFormat: int getMaximumFractionDigits()> 
<java.text.Collator: int getDecomposition()> 
<org.jivesoftware.smack.RosterEntry: java.util.Iterator getGroups()> 
<java.text.NumberFormat: int getMaximumIntegerDigits()> 
<android.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()> 
<android.accounts.AbstractAccountAuthenticator: android.os.IBinder getIBinder()> 
<libcore.net.http.HttpsURLConnectionImpl: long getHeaderFieldDate(java.lang.String,long)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: java.net.SocketAddress getLocalSocketAddress()> 
<android.graphics.drawable.NinePatchDrawable: int getOpacity()> 
<android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int)> 
<android.widget.SimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> 
<android.view.View: int getMeasuredHeight()> 
<android.support.v4.content.Loader: void onForceLoad()> 
<javax.xml.transform.TransformerException: java.lang.Throwable getException()> 
<android.content.SyncStorageEngine: android.content.SyncStorageEngine$AuthorityInfo getOrCreateAuthority(android.accounts.Account,int,java.lang.String)> 
<org.apache.xalan.templates.XUnresolvedVariableSimple: java.lang.String getTypeString()> 
<android.widget.TextView: int getCurrentHintTextColor()> 
<android.filterfw.core.FilterGraph: java.util.HashSet getSourceFilters()> 
<org.apache.xml.serializer.SerializerBase: java.lang.String getElementURI()> 
<android.view.KeyEvent: char getDisplayLabel()> 
<org.apache.http.util.ExceptionUtils: java.lang.reflect.Method getInitCauseMethod()> 
<android.accounts.AccountManagerService: void getAccountsByFeatures(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[])> 
<javax.crypto.spec.SecretKeySpec: java.lang.String getAlgorithm()> 
<org.xml.sax.helpers.ParserAdapter: org.xml.sax.ErrorHandler getErrorHandler()> 
<android.database.CursorWindow: int getStartPosition()> 
<android.app.ApplicationPackageManager: android.content.Intent getLaunchIntentForPackage(java.lang.String)> 
<java.net.Socks4Message: int getPort()> 
<android.filterfw.core.GLFrame: int getTextureId()> 
<jp.co.omronsoft.openwnn.OpenWnnJAJP: jp.co.omronsoft.openwnn.OpenWnnJAJP getInstance()> 
<android.content.pm.ConfigurationInfo: java.lang.String getGlEsVersion()> 
<android.accounts.GrantCredentialsPermissionActivity: java.lang.String getAccountLabel(android.accounts.Account)> 
<org.jivesoftware.smack.packet.RosterPacket: com.google.common.io.protocol.ProtoBuf getExtensionProtoBuf()> 
<android.database.AbstractWindowedCursor: short getShort(int)> 
<android.view.textservice.SpellCheckerInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)> 
<gov.nist.javax.sip.stack.UDPMessageProcessor: int getPort()> 
<android.view.MotionEvent: int getButtonState()> 
<android.widget.DialerFilter: java.lang.CharSequence getDigits()> 
<android.mtp.MtpStorage: java.lang.String getPath()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPublicKey: java.lang.String getFormat()> 
<android.support.v4.widget.CursorAdapter: android.database.Cursor getCursor()> 
<org.apache.http.protocol.SyncBasicHttpContext: java.lang.Object getAttribute(java.lang.String)> 
<java.security.cert.X509CRLSelector: java.math.BigInteger getMinCRL()> 
<org.apache.xpath.compiler.OpMap: int getNextOpPos(int[],int)> 
<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.header.RequestLine parseSIPRequestLine(java.lang.String)> 
<org.apache.http.message.BasicHttpResponse: java.util.Locale getLocale()> 
<java.security.AlgorithmParameters: java.security.spec.AlgorithmParameterSpec getParameterSpec(java.lang.Class)> 
<android.widget.DatePicker: boolean getSpinnersShown()> 
<gov.nist.javax.sip.message.SIPDuplicateHeaderException: gov.nist.javax.sip.message.SIPMessage getSIPMessage()> 
<android.net.NetworkInfo: int getType()> 
<android.text.method.TimeKeyListener: android.text.method.TimeKeyListener getInstance()> 
<android.webkit.WebSettings: boolean getBlockNetworkImage()> 
<android.content.SyncStorageEngine: java.util.List getPeriodicSyncs(android.accounts.Account,int,java.lang.String)> 
<android.nfc.Tag: android.os.Bundle getTechExtras(int)> 
<org.apache.xpath.axes.LocPathIterator: org.apache.xpath.XPathContext getXPathContext()> 
<org.apache.xalan.templates.ElemMessage: boolean getTerminate()> 
<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)> 
<jp.co.omronsoft.openwnn.SymbolList: jp.co.omronsoft.openwnn.WnnWord[] getUserDictionaryWords()> 
<android.telephony.SmsMessage: android.telephony.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,short,byte[],boolean)> 
<android.graphics.drawable.BitmapDrawable: android.graphics.Shader$TileMode getTileModeX()> 
<android.graphics.drawable.BitmapDrawable: android.graphics.Shader$TileMode getTileModeY()> 
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: boolean getWantClientAuth()> 
<java.text.RuleBasedCollator: java.lang.String getRules()> 
<org.apache.harmony.xnet.provider.jsse.ServerKeyExchange: int getType()> 
<android.app.ListActivity: android.widget.ListView getListView()> 
<android.content.ContentService: android.content.SyncAdapterType[] getSyncAdapterTypes()> 
<android.content.pm.ComponentInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)> 
<org.jivesoftware.smackx.packet.DiscoverInfo: java.util.Iterator getIdentities()> 
<gov.nist.javax.sip.header.Via: int getRPort()> 
<android.media.RingtoneManager: int getDefaultType(android.net.Uri)> 
<android.opengl.GLLogWrapper: java.lang.String getHex(int)> 
<android.view.View: float getRightFadingEdgeStrength()> 
<android.mtp.MtpObjectInfo: int getAssociationDesc()> 
<android.app.ApplicationPackageManager: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int)> 
<android.webkit.CallbackProxy: boolean onJsBeforeUnload(java.lang.String,java.lang.String)> 
<android.net.http.AndroidHttpClient: long getMinGzipSize(android.content.ContentResolver)> 
<android.widget.ExpandableListConnector: java.util.ArrayList getExpandedGroupMetadataList()> 
<android.widget.TextView: int getInputType()> 
<java.nio.CharArrayBuffer: char get()> 
<android.support.v4.view.accessibility.AccessibilityRecordCompat: android.os.Parcelable getParcelableData()> 
<android.webkit.DateSorter: int getIndex(long)> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getDocumentRoot(int)> 
<org.jivesoftware.smackx.packet.VCard: java.lang.String getEmailHome()> 
<android.view.GLES20TextureLayer: android.graphics.SurfaceTexture getSurfaceTexture()> 
<android.webkit.WebSettingsClassic: boolean getBuiltInZoomControls()> 
<android.filterpacks.imageproc.ResizeFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<android.webkit.ZoomManager: float getMinZoomScale()> 
<android.webkit.BrowserFrame: void loadUrl(java.lang.String,java.util.Map)> 
<org.jivesoftware.smack.sasl.SASLPlainMechanism: java.lang.String getAuthenticationText(java.lang.String,java.lang.String,java.lang.String)> 
<org.apache.harmony.security.asn1.ASN1Boolean: org.apache.harmony.security.asn1.ASN1Boolean getInstance()> 
<android.media.videoeditor.MediaArtistNativeHelper: void getPixelsList(java.lang.String,int,int,long,long,int,int[],android.media.videoeditor.MediaItem$GetThumbnailListCallback,int)> 
<android.widget.RatingBar: float getProgressPerStar()> 
<android.telephony.SignalStrength: int getLteCqi()> 
<android.location.LocationProvider: int getPowerRequirement()> 
<android.content.ClipData: android.content.ClipDescription getDescription()> 
<android.view.animation.LinearInterpolator: float getInterpolation(float)> 
<android.app.LoaderManagerImpl: android.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks)> 
<android.widget.CursorAdapter: int getCount()> 
<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)> 
<java.net.MulticastSocket: java.net.InetAddress getInterface()> 
<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()> 
<android.view.MotionEvent: float getYPrecision()> 
<android.os.UserManager: int getUserHandle(int)> 
<org.jivesoftware.smack.provider.ProviderManager: java.lang.Object getExtensionProvider(int)> 
<android.media.EncoderCapabilities: java.util.List getVideoEncoders()> 
<android.widget.Toast: float getVerticalMargin()> 
<android.net.http.SslCertificate: java.lang.String getDigest(java.security.cert.X509Certificate,java.lang.String)> 
<android.opengl.GLLogWrapper: java.lang.String getBeginMode(int)> 
<org.apache.harmony.security.provider.cert.X509CertPathImpl: java.util.List getCertificates()> 
<android.support.v4.content.Loader: android.content.Context getContext()> 
<android.view.View: int getLayoutDirection()> 
<android.view.HardwareLayer: int getHeight()> 
<android.hardware.GeomagneticField: float getX()> 
<android.hardware.GeomagneticField: float getY()> 
<android.hardware.GeomagneticField: float getZ()> 
<java.util.concurrent.Phaser: int getPhase()> 
<android.app.ContextImpl: android.graphics.drawable.Drawable getWallpaper()> 
<android.widget.TabHost: android.view.View getCurrentTabView()> 
<android.net.UrlQuerySanitizer: boolean getAllowUnregisteredParamaters()> 
<org.apache.harmony.xml.dom.ElementImpl: java.lang.String getAttributeNS(java.lang.String,java.lang.String)> 
<android.view.MotionEvent: float getAxisValue(int,int)> 
<net.oauth.OAuthMessage: java.lang.String getBodyEncoding()> 
<android.media.videoeditor.MediaItem: android.media.videoeditor.Overlay getOverlay(java.lang.String)> 
<org.apache.xalan.processor.StylesheetHandler: int getStylesheetType()> 
<android.media.AudioRecord: int getNotificationMarkerPosition()> 
<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)> 
<android.view.ViewConfiguration: int getHoverTapTimeout()> 
<android.net.NetworkInfo: android.net.NetworkInfo$DetailedState getDetailedState()> 
<android.emoji.EmojiFactory: java.lang.String getVendorSpecificPuaFromAndroidPua(java.lang.String)> 
<android.graphics.Paint: android.graphics.Paint$Join getStrokeJoin()> 
<org.apache.harmony.security.provider.cert.X509CertImpl: byte[] getSigAlgParams()> 
<org.apache.xpath.functions.FuncExtFunction: java.lang.String getFunctionName()> 
<android.view.accessibility.AccessibilityNodeInfo: java.lang.String getActionSymbolicName(int)> 
<android.app.ActivityManagerProxy: android.content.res.Configuration getConfiguration()> 
<org.jivesoftware.smackx.packet.MUCUser: java.lang.String getElementName()> 
<org.jivesoftware.smackx.packet.MUCInitialPresence: java.lang.String getNamespace()> 
<android.widget.TextView: int getDesiredHeight(android.text.Layout,boolean)> 
<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)> 
<android.widget.CursorTreeAdapter: android.database.Cursor getChild(int,int)> 
<android.app.ApplicationPackageManager: java.lang.String[] getSystemSharedLibraryNames()> 
<android.net.nsd.NsdManager: android.os.Messenger getMessenger()> 
<android.widget.AdapterView: android.widget.AdapterView$OnItemLongClickListener getOnItemLongClickListener()> 
<gov.nist.javax.sip.address.AddressImpl: gov.nist.core.HostPort getHostPort()> 
<org.jivesoftware.smack.XMPPConnection: boolean getServerClockSkewKnown()> 
<org.apache.xpath.compiler.FunctionTable: org.apache.xpath.functions.Function getFunction(int)> 
<org.xmlpull.v1.sax2.Driver: int getLineNumber()> 
<android.filterpacks.imageproc.ToGrayFilter: android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)> 
<android.app.ApplicationPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)> 
<android.widget.AutoCompleteTextView: android.widget.AdapterView$OnItemSelectedListener getOnItemSelectedListener()> 
<java.nio.charset.CharsetEncoderICU: int getArray(java.nio.CharBuffer)> 
<java.net.HttpURLConnection: java.lang.String getResponseMessage()> 
<org.apache.harmony.security.x501.Name: java.lang.String getName(java.lang.String)> 
<android.net.nsd.DnsSdTxtRecord: byte[] getRawData()> 
<android.telephony.SignalStrength: int getCdmaDbm()> 
<java.text.NumberFormat: int getMinimumIntegerDigits()> 
<org.apache.xpath.axes.ReverseAxesWalker: int getLastPos(org.apache.xpath.XPathContext)> 
<android.widget.CalendarView: long getMinDate()> 
<org.apache.http.impl.io.AbstractSessionInputBuffer: int read()> 
<android.media.videoeditor.MediaArtistNativeHelper: java.lang.String getProjectAudioTrackPCMFilePath()> 
<java.io.FilePermission: java.lang.String getActions()> 
<org.apache.xml.utils.URI: java.lang.String getUserinfo()> 
<org.jivesoftware.smack.packet.LoginRequest: java.util.Map getSettings()> 
<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.Contact getMyContactHeader()> 
<javax.crypto.spec.PSource: java.lang.String getAlgorithm()> 
<android.webkit.CacheManager: android.webkit.CacheManager$CacheResult getCacheFile(java.lang.String,long,java.util.Map)> 
<org.xml.sax.SAXParseException: int getLineNumber()> 
<android.view.KeyEvent: int getScanCode()> 
<android.test.SingleLaunchActivityTestCase: android.app.Activity getActivity()> 
<org.apache.commons.io.FileCleaningTracker: java.util.List getDeleteFailures()> 
<android.test.ClassPathPackageInfoSource: java.lang.String getClassName(java.lang.String)> 
<android.media.effect.EffectContext: android.media.effect.EffectFactory getFactory()> 
<android.net.DummyDataStateTracker: android.net.LinkProperties getLinkProperties()> 
<org.apache.xalan.xslt.SecuritySupport12: java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader)> 
<android.preference.Preference: boolean getPersistedBoolean(boolean)> 
<android.widget.AbsListView: int getDistance(android.graphics.Rect,android.graphics.Rect,int)> 
<android.speech.tts.TextToSpeech: java.lang.String getDefaultEngine()> 
<javax.net.ssl.HandshakeCompletedEvent: javax.net.ssl.SSLSession getSession()> 
<android.preference.ListPreference: java.lang.CharSequence getEntry()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: java.lang.String getLocalNameFromExpandedNameID(int)> 
<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.ref.ExpandedNameTable getExpandedNameTable(org.apache.xml.dtm.DTM)> 
<java.security.cert.PolicyQualifierInfo: byte[] getPolicyQualifier()> 
<org.apache.xalan.transformer.TransformerIdentityImpl: java.lang.String getOutputProperty(java.lang.String)> 
<android.animation.AnimatorSet: java.util.ArrayList getChildAnimations()> 
<android.text.SpannableStringInternal: java.lang.Object[] getSpans(int,int,java.lang.Class)> 
<java.security.DigestOutputStream: java.security.MessageDigest getMessageDigest()> 
<org.apache.http.client.methods.HttpOptions: java.lang.String getMethod()> 
<android.media.videoeditor.MediaVideoItem: long getBoundaryBeginTime()> 
<android.hardware.usb.UsbDevice: int getVendorId()> 
<org.apache.harmony.xml.dom.DOMErrorImpl: java.lang.Object getRelatedException()> 
<android.preference.Preference: java.lang.CharSequence getSummary()> 
<java.io.Reader: boolean ready()> 
<java.util.concurrent.ForkJoinPool: int getParallelism()> 
<org.apache.harmony.security.provider.cert.X509CertPathImpl: org.apache.harmony.security.provider.cert.X509CertPathImpl getInstance(java.io.InputStream)> 
<gov.nist.javax.sip.stack.TLSMessageChannel: int getPeerPort()> 
<android.util.XmlPullAttributes: java.lang.String getAttributeValue(java.lang.String,java.lang.String)> 
<gov.nist.javax.sip.header.ProxyAuthenticate: javax.sip.address.URI getURI()> 
<android.drm.mobile1.DrmRightsManager: android.drm.mobile1.DrmRightsManager getInstance()> 
<org.apache.xml.utils.URI: java.lang.String getSchemeSpecificPart()> 
<org.apache.xalan.templates.ElemAttributeSet: org.apache.xml.utils.QName getName()> 
<java.io.SequenceInputStream: int read()> 
<org.apache.xpath.jaxp.XPathImpl: javax.xml.namespace.NamespaceContext getNamespaceContext()> 
<android.bluetooth.BluetoothHeadset: java.util.List getDevicesMatchingConnectionStates(int[])> 
<android.content.res.Resources: boolean getBoolean(int)> 
<android.net.http.SslCertificate: java.lang.String getValidNotBefore()> 
<android.widget.RemoteViewsAdapter: android.content.Intent getRemoteViewsServiceIntent()> 
<android.net.ThrottleManager: long getPeriodStartTime(java.lang.String)> 
<android.accounts.AccountManagerService: android.accounts.Account[] getAccounts(java.lang.String)> 
<org.apache.http.message.HeaderGroup: org.apache.http.Header getFirstHeader(java.lang.String)> 
<android.widget.TabHost: android.widget.TabWidget getTabWidget()> 
<android.media.videoeditor.MediaVideoItem: void getThumbnailList(int,int,long,long,int,int[],android.media.videoeditor.MediaItem$GetThumbnailListCallback)> 
<java.net.DatagramPacket: int getOffset()> 
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(android.content.Context,long,boolean)> 
<java.lang.Package: java.lang.String getName()> 
<android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs: android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo)> 
<android.app.Fragment: android.os.Bundle getArguments()> 
<libcore.net.url.JarURLConnectionImpl: java.util.jar.JarFile getJarFile()> 
<android.telephony.CellSignalStrengthCdma: int getEvdoSnr()> 
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.ConnectionReuseStrategy getConnectionReuseStrategy()> 
<android.bluetooth.BluetoothHealth: java.util.List getConnectedDevices()> 
<org.apache.xpath.operations.Variable: org.apache.xml.utils.QName getQName()> 
<android.widget.GridView: android.widget.Adapter getAdapter()> 
<android.util.SparseLongArray: long get(int)> 
<java.security.Provider: java.security.Provider$Service getService(java.lang.String,java.lang.String)> 
<org.apache.http.entity.HttpEntityWrapper: org.apache.http.Header getContentEncoding()> 
<jp.co.omronsoft.openwnn.EN.DefaultSoftKeyboardEN: int getShiftKeyState(android.view.inputmethod.EditorInfo)> 
<android.view.GLES20Canvas: void getMatrix(android.graphics.Matrix)> 
<java.nio.DirectByteBuffer: void get(float[],int,int)> 
<org.jivesoftware.smack.provider.ProviderManager: java.util.Iterator getExtensionProviders()> 
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getCapacity()> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: org.xml.sax.ext.LexicalHandler getLexicalHandler()> 
<android.net.nsd.NsdServiceInfo: android.net.nsd.DnsSdTxtRecord getTxtRecord()> 
<android.telephony.CellBroadcastMessage: java.lang.String getSpokenDateString(android.content.Context)> 
<org.jivesoftware.smack.ProtoBufAuthentication: java.util.Map getServerSettings()> 
<java.lang.ref.FinalizerReference: java.lang.Object get()> 
<org.apache.xml.serializer.ToUnknownStream: org.apache.xml.serializer.NamespaceMappings getNamespaceMappings()> 
<android.bluetooth.BluetoothTetheringDataTracker: android.net.NetworkInfo getNetworkInfo()> 
<android.app.Dialog: android.app.Activity getOwnerActivity()> 
<android.support.v4.view.ViewConfigurationCompatFroyo: int getScaledPagingTouchSlop(android.view.ViewConfiguration)> 
<android.view.ActionMode: boolean getTitleOptionalHint()> 
<android.support.v4.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)> 
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry createEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,org.apache.http.conn.ClientConnectionOperator)> 
<android.widget.AutoCompleteTextView: java.lang.CharSequence getCompletionHint()> 
<java.net.Socket: boolean getKeepAlive()> 
<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader)> 
<org.jivesoftware.smack.XMPPConnection: org.jivesoftware.smack.SASLAuthentication getSASLAuthentication()> 
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothDevice getRemoteDevice(byte[])> 
<android.webkit.WebSettingsClassic: boolean getAllowUniversalAccessFromFileURLs()> 
<android.net.http.Headers: java.lang.String getWwwAuthenticate()> 
<javax.crypto.ExemptionMechanism: java.lang.String getName()> 
<android.webkit.CallbackProxy: java.lang.String getJsDialogTitle(java.lang.String)> 
<javax.sql.StatementEvent: java.sql.PreparedStatement getStatement()> 
<org.jivesoftware.smack.RosterEntry: org.jivesoftware.smack.packet.RosterPacket$ItemStatus getStatus()> 
<org.apache.http.params.AbstractHttpParams: boolean getBooleanParameter(java.lang.String,boolean)> 
<android.widget.RemoteViews: int getLayoutId()> 
<java.nio.LongArrayBuffer: long get(int)> 
<org.apache.xalan.templates.RedundentExprEliminator: org.apache.xalan.templates.ElemTemplateElement getPrevElementWithinContext(org.apache.xalan.templates.ElemTemplateElement)> 
<android.media.videoeditor.Transition: java.lang.String getFilename()> 
<android.content.res.TypedArray: java.lang.String getNonResourceString(int)> 
<java.lang.Package: java.lang.String getImplementationVersion()> 
<android.test.InstrumentationUtils: int getMenuIdentifier(java.lang.Class,java.lang.String)> 
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ToHeader getTo()> 
<android.widget.GridLayout: int getMeasurementIncludingMargin(android.view.View,boolean)> 
<org.apache.james.mime4j.field.address.parser.SimpleCharStream: int getEndColumn()> 
<java.util.regex.PatternSyntaxException: java.lang.String getMessage()> 
<org.apache.xpath.functions.SecuritySupport: java.lang.ClassLoader getSystemClassLoader()> 
<android.webkit.WebIconDatabase: android.webkit.WebIconDatabase getInstance()> 
<java.net.HttpCookie: java.lang.String getPath()> 
<android.graphics.drawable.ShapeDrawable: boolean getPadding(android.graphics.Rect)> 
<android.renderscript.Matrix2f: float get(int,int)> 
<org.apache.xpath.XPathContext: int getDTMIdentity(org.apache.xml.dtm.DTM)> 
<android.app.Activity: android.view.Window getWindow()> 
<libcore.net.http.HttpsURLConnectionImpl: java.security.Principal getLocalPrincipal()> 
<android.net.http.SslCertificate: java.util.Date getValidNotBeforeDate()> 
<android.telephony.ServiceState: java.lang.String getOperatorAlphaShort()> 
<org.apache.http.impl.io.AbstractSessionInputBuffer: int readLine(org.apache.http.util.CharArrayBuffer)> 
<android.text.StaticLayout: int getLineDescent(int)> 
<android.renderscript.Matrix3f: float get(int,int)> 
<org.apache.xalan.transformer.KeyManager: org.apache.xpath.objects.XNodeSet getNodeSetDTMByKey(org.apache.xpath.XPathContext,int,org.apache.xml.utils.QName,org.apache.xml.utils.XMLString,org.apache.xml.utils.PrefixResolver)> 
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()> 
<android.webkit.WebViewCore: long getUsedQuota()> 
<android.bluetooth.BluetoothHeadset: int getBatteryUsageHint(android.bluetooth.BluetoothDevice)> 
<java.util.zip.ZipFile: java.lang.String getName()> 
<libcore.icu.NativeDecimalFormat: java.lang.String getNegativeSuffix()> 
<android.renderscript.Matrix4f: float get(int,int)> 
<android.net.NetworkStats: long getElapsedRealtimeAge()> 
<android.app.ActivityManager: int getMemoryClass()> 
<java.net.URLConnection: java.lang.String getContentEncoding()> 
<org.jivesoftware.smack.packet.Bind: java.lang.String getJid()> 
<android.widget.TextView: int getSelectionEnd()> 
<android.service.dreams.DreamService: android.view.Window getWindow()> 
<org.apache.harmony.security.utils.Array: java.lang.String getBytesAsString(byte[])> 
<android.view.ViewRootImpl: android.view.ViewRootImpl$RunQueue getRunQueue()> 
<libcore.net.http.RequestHeaders: java.net.URI getUri()> 
<java.security.spec.ECFieldF2m: java.math.BigInteger getReductionPolynomial()> 
<java.security.spec.DSAPrivateKeySpec: java.math.BigInteger getX()> 
<android.content.ContentProviderProxy: java.lang.String getType(android.net.Uri)> 
<android.text.method.DialerKeyListener: android.text.method.DialerKeyListener getInstance()> 
<android.support.v4.view.accessibility.AccessibilityRecordCompat: int getScrollX()> 
<android.support.v4.view.accessibility.AccessibilityRecordCompat: int getScrollY()> 
<android.telephony.CellIdentityCdma: int getSystemId()> 
<org.apache.xml.utils.QName: java.lang.String getPrefix()> 
<java.security.spec.DSAPrivateKeySpec: java.math.BigInteger getQ()> 
<java.security.spec.DSAPrivateKeySpec: java.math.BigInteger getP()> 
<java.security.spec.DSAPrivateKeySpec: java.math.BigInteger getG()> 
<gov.nist.javax.sip.header.extensions.Join: java.lang.String getFromTag()> 
<java.util.concurrent.ThreadPoolExecutor: int getPoolSize()> 
<android.view.KeyCharacterMap: int getDeadChar(int,int)> 
<java.lang.Throwable: java.lang.String getLocalizedMessage()> 
<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getHost()> 
<android.test.InstrumentationTestCase: android.app.Instrumentation getInstrumentation()> 
<gov.nist.javax.sip.stack.ServerLog: int getTraceLevel()> 
<javax.obex.ApplicationParameter: byte[] getAPPparam()> 
<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.Via getTopmostVia()> 
<android.app.ContextImpl: int getWallpaperDesiredMinimumHeight()> 
<org.apache.harmony.security.x509.PolicyConstraints: byte[] getEncoded()> 
<android.content.Loader: boolean onCancelLoad()> 
<android.support.v4.util.AtomicFile: java.io.File getBaseFile()> 
<android.webkit.WebSettingsClassic: int getDefaultFixedFontSize()> 
<android.webkit.WebSettings: boolean getAllowFileAccess()> 
<android.telephony.SmsCbMessage: java.lang.String getMessageBody()> 
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.Object getParent(java.lang.Object)> 
<android.widget.ExpandableListView: android.widget.Adapter getAdapter()> 
<org.jivesoftware.smack.packet.Presence: org.jivesoftware.smack.packet.Presence$Type getType()> 
<org.apache.xml.utils.UnImplNode: java.lang.String getXmlEncoding()> 
<android.text.TextUtils: int getLayoutDirectionFromLocale(java.util.Locale)> 
<javax.xml.transform.TransformerFactoryConfigurationError: java.lang.Exception getException()> 
<org.apache.harmony.security.x509.GeneralNames: byte[] getEncoded()> 
<org.apache.harmony.xnet.provider.jsse.AlertException: byte getDescriptionCode()> 
<android.media.AudioManager: int getStreamMaxVolume(int)> 
<java.net.Socket: int getPort()> 
<android.view.ViewConfiguration: int getScrollBarFadeDuration()> 
<android.nfc.NdefRecord: int getByteLength()> 
<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadDefaultLogo(android.content.pm.PackageManager)> 
<org.apache.harmony.xnet.provider.jsse.ServerHello: byte[] getRandom()> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int getIdForNamespace(java.lang.String)> 
<android.content.res.Resources: java.lang.String getResourcePackageName(int)> 
<android.webkit.WebSettingsClassic: boolean getJavaScriptCanOpenWindowsAutomatically()> 
<org.jivesoftware.smackx.packet.VCard: java.lang.String getMiddleName()> 
<org.xmlpull.v1.sax2.Driver: java.lang.String getURI(int)> 
<android.text.DynamicLayout: int getParagraphDirection(int)> 
<org.apache.harmony.xnet.provider.jsse.Finished: byte[] getData()> 
<java.io.DataInputStream: int readUnsignedByte()> 
<org.apache.http.conn.routing.HttpRoute: org.apache.http.conn.routing.RouteInfo$TunnelType getTunnelType()> 
<gov.nist.javax.sip.header.CallInfo: javax.sip.address.URI getInfo()> 
<android.view.inputmethod.InputMethodSubtype: java.lang.CharSequence getDisplayName(android.content.Context,java.lang.String,android.content.pm.ApplicationInfo)> 
<libcore.io.ForwardingOs: java.net.InetAddress[] getaddrinfo(java.lang.String,libcore.io.StructAddrinfo)> 
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()> 
<java.util.Locale: java.lang.String[] getISOCountries()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.lang.String[] getEnabledCipherSuites()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: org.xml.sax.DTDHandler getDTDHandler()> 
<android.media.audiofx.Equalizer: short[] getBandLevelRange()> 
<org.jivesoftware.smack.packet.Message: org.jivesoftware.smack.packet.Message$Type getType()> 
<org.apache.xalan.templates.ElemTemplateElement: org.w3c.dom.Node getPreviousSibling()> 
<org.apache.http.impl.cookie.NetscapeDraftHeaderParser: org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)> 
<android.app.admin.DeviceAdminReceiver: android.content.ComponentName getWho(android.content.Context)> 
<android.net.wifi.WifiStateTracker: java.lang.String getTcpBufferSizesPropName()> 
<android.content.res.Resources: libcore.icu.NativePluralRules getPluralRule()> 
<android.app.WallpaperInfo: android.content.ComponentName getComponent()> 
<java.io.ObjectInputStream: byte readByte()> 
<android.app.LoadedApk: android.app.Application getApplication()> 
<android.view.accessibility.AccessibilityManager: java.util.List getInstalledAccessibilityServiceList()> 
<android.util.XmlPullAttributes: int getAttributeIntValue(int,int)> 
<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: byte[] getData(int)> 
<android.media.audiofx.Virtualizer: short getRoundedStrength()> 
<android.appwidget.AppWidgetHostView: android.view.View getDefaultView()> 
<gov.nist.javax.sip.header.To: gov.nist.core.HostPort getHostPort()> 
<javax.net.ssl.HandshakeCompletedEvent: javax.net.ssl.SSLSocket getSocket()> 
<org.apache.xml.serializer.ToUnknownStream: java.lang.String getNamespaceURI(java.lang.String,boolean)> 
<java.util.Locale: java.lang.String getLanguage()> 
<android.view.ViewConfiguration: int getLongPressTimeout()> 
<java.io.File: java.lang.String getName()> 
<android.test.InstrumentationTestRunner: junit.framework.TestSuite getAllTests()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: int getSoTimeout()> 
<libcore.net.http.HttpURLConnectionImpl: java.security.Permission getPermission()> 
<gov.nist.javax.sip.address.SipUri: gov.nist.javax.sip.address.Authority getAuthority()> 
<gov.nist.javax.sip.parser.extensions.SessionExpiresParser: gov.nist.javax.sip.header.SIPHeader parse()> 
<android.media.videoeditor.AudioTrack: int getDuckingThreshhold()> 
<android.graphics.drawable.PictureDrawable: int getIntrinsicWidth()> 
<android.text.StaticLayout: int getEllipsisStart(int)> 
<android.widget.TextView: int getTotalPaddingEnd()> 
<android.test.mock.MockContext: java.lang.String getPackageResourcePath()> 
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLowerCase(android.content.ComponentName,int)> 
<android.app.Activity: android.content.ComponentName getCallingActivity()> 
<android.app.ActivityThread: android.os.Looper getLooper()> 
<java.text.MessageFormat: java.util.Locale getLocale()> 
<android.filterpacks.imageproc.PosterizeFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<android.view.PointerIcon: int getStyle()> 
<org.apache.james.mime4j.message.Multipart: java.lang.String getEpilogue()> 
<org.apache.xml.serializer.dom3.DOMErrorImpl: java.lang.String getType()> 
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.net.NetworkLayer getNetworkLayer()> 
<java.util.Currency: java.util.Currency getInstance(java.util.Locale)> 
<android.app.admin.DevicePolicyManager: int getPasswordHistoryLength(android.content.ComponentName)> 
<junit.runner.StandardTestSuiteLoader: java.lang.Class load(java.lang.String)> 
<android.hardware.LegacySensorManager: int getRotation()> 
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()> 
<org.xmlpull.v1.sax2.Driver: int getIndex(java.lang.String,java.lang.String)> 
<android.location.Address: java.lang.String getSubLocality()> 
<org.apache.xalan.templates.ElemCopyOf: org.apache.xpath.XPath getSelect()> 
<org.apache.http.util.EncodingUtils: java.lang.String getString(byte[],java.lang.String)> 
<net.oauth.signature.RSA_SHA1: java.security.PublicKey getPublicKeyFromDerCert(byte[])> 
<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.DOMConfiguration getDomConfig()> 
<android.media.audiofx.PresetReverb: short getPreset()> 
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.KeyDeclaration getKey(int)> 
<android.net.DnsPinger: java.net.InetAddress getDefaultDns()> 
<android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs: java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo)> 
<org.ccil.cowan.tagsoup.Schema: java.lang.String getPrefix()> 
<java.util.concurrent.ThreadPoolExecutor: int getMaximumPoolSize()> 
<android.preference.Preference: android.graphics.drawable.Drawable getIcon()> 
<android.media.videoeditor.AudioTrack: long getStartTime()> 
<org.apache.xml.serializer.dom3.DOMErrorImpl: java.lang.Object getRelatedException()> 
<org.apache.xpath.objects.XObject: java.lang.String getTypeString()> 
<android.support.v4.view.ViewCompatJB: int getImportantForAccessibility(android.view.View)> 
<android.view.ViewConfiguration: int getScaledPagingTouchSlop()> 
<android.webkit.WebSettings: void setLoadWithOverviewMode(boolean)> 
<android.view.Window: android.view.Window$Callback getCallback()> 
<android.media.videoeditor.MediaArtistNativeHelper: int getTotalEffects(java.util.List)> 
<java.lang.SecurityManager: java.lang.Class currentLoadedClass()> 
<android.view.ActionMode: java.lang.Object getTag()> 
<android.graphics.Paint: int getTextWidths(java.lang.CharSequence,int,int,float[])> 
<android.widget.AlphabetIndexer: int getPositionForSection(int)> 
<org.jivesoftware.smack.packet.Packet: java.lang.String getTo()> 
<java.io.InputStreamReader: int read()> 
<org.apache.xpath.functions.SecuritySupport12: long getLastModified(java.io.File)> 
<android.widget.OverScroller: int getFinalX()> 
<android.widget.OverScroller: int getFinalY()> 
<android.accounts.AccountManagerService: android.accounts.Account[] getAccountsFromCacheLocked(android.accounts.AccountManagerService$UserAccounts,java.lang.String)> 
<android.media.videoeditor.MediaImageItem: android.graphics.Bitmap getThumbnail(int,int,long)> 
<android.app.SearchableInfo: java.lang.String getSuggestAuthority()> 
<android.content.ContextWrapper: android.os.Looper getMainLooper()> 
<org.apache.harmony.security.provider.cert.Cache: long getHash(byte[])> 
<android.content.ContentValues: java.lang.Short getAsShort(java.lang.String)> 
<java.security.cert.X509CertSelector: java.security.PublicKey getSubjectPublicKey()> 
<android.speech.tts.BlockingAudioTrack: int getChannelConfig(int)> 
<gov.nist.javax.sip.header.RAck: long getRSequenceNumber()> 
<android.media.JetPlayer: android.media.JetPlayer getJetPlayer()> 
<android.widget.ArrayAdapter: long getItemId(int)> 
<org.apache.xpath.functions.Function3Args: org.apache.xpath.Expression getArg2()> 
<android.net.EthernetDataTracker: android.net.LinkProperties getLinkProperties()> 
<android.os.Bundle: int getInt(java.lang.String)> 
<android.webkit.WebViewClassic: android.webkit.AccessibilityInjector getAccessibilityInjector()> 
<android.media.videoeditor.VideoEditorFactory: android.media.videoeditor.VideoEditor load(java.lang.String,boolean)> 
<android.util.MonthDisplayHelper: int getYear()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getOpenSSLKey()> 
<android.view.View: void getBoundsOnScreen(android.graphics.Rect)> 
<android.app.SearchableInfo: int getHintId()> 
<gov.nist.javax.sip.stack.MessageChannel: gov.nist.core.HostPort getPeerHostPort()> 
<android.content.Entity: java.util.ArrayList getSubValues()> 
<android.media.audiofx.Visualizer: int getCaptureSize()> 
<org.apache.james.mime4j.field.contenttype.parser.TokenMgrError: java.lang.String getMessage()> 
<org.apache.xml.dtm.SecuritySupport: boolean getFileExists(java.io.File)> 
<jp.co.omronsoft.openwnn.TextCandidatesViewManager: java.lang.String getCategoriesText(java.lang.String)> 
<java.security.cert.CertificateFactory: java.lang.String getType()> 
<android.view.PointerIcon: int getSystemIconStyleIndex(int)> 
<java.net.JarURLConnection: java.util.jar.Attributes getAttributes()> 
<android.app.ActivityOptions: int getStartHeight()> 
<org.apache.http.message.BasicHttpResponse: org.apache.http.StatusLine getStatusLine()> 
<net.oauth.ConsumerProperties: java.net.URL getResource(java.lang.String,java.lang.ClassLoader)> 
<android.bluetooth.BluetoothAdapter: int getConnectionState()> 
<java.nio.MappedByteBufferAdapter: float getFloat(int)> 
<org.apache.xml.utils.AttList: java.lang.String getType(int)> 
<android.widget.Spinner: android.graphics.drawable.Drawable getPopupBackground()> 
<org.apache.commons.codec.net.QuotedPrintableCodec: java.lang.Object decode(java.lang.Object)> 
<org.apache.harmony.xml.dom.DOMErrorImpl: java.lang.String getType()> 
<android.widget.AbsSpinner: android.view.View getSelectedView()> 
<android.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle)> 
<android.media.audiofx.BassBoost: android.media.audiofx.BassBoost$Settings getProperties()> 
<android.widget.TextView: int getDesiredHeight()> 
<org.apache.xalan.templates.DecimalFormatProperties: java.lang.String getNaN()> 
<java.sql.DriverManager: java.util.Enumeration getDrivers()> 
<org.xml.sax.ext.DefaultHandler2: org.xml.sax.InputSource getExternalSubset(java.lang.String,java.lang.String)> 
<java.io.DataInputStream: boolean readBoolean()> 
<android.widget.Gallery: int getCenterOfView(android.view.View)> 
<android.media.Metadata: java.lang.String getString(int)> 
<org.javia.arity.Symbol: int getArity()> 
<android.os.Parcel: android.util.SparseBooleanArray readSparseBooleanArray()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getOpenSSLKey()> 
<javax.obex.ServerOperation: int getHeaderLength()> 
<android.test.mock.MockContentProvider: java.lang.String getType(android.net.Uri)> 
<java.io.StringBufferInputStream: int read(byte[],int,int)> 
<jp.co.omronsoft.openwnn.TextCandidates1LineViewManager: int getViewLeftOnScreen(android.view.View)> 
<org.apache.harmony.security.provider.cert.X509CertPathImpl: byte[] getEncoded(java.lang.String)> 
<android.view.Display: int getPixelFormat()> 
<java.util.concurrent.Phaser: int getUnarrivedParties()> 
<android.graphics.drawable.StateListDrawable: int getStateCount()> 
<org.apache.james.mime4j.CloseShieldInputStream: java.io.InputStream getUnderlyingStream()> 
<android.view.Choreographer: float getRefreshRate()> 
<android.view.Display: void getCurrentSizeRange(android.graphics.Point,android.graphics.Point)> 
<android.drm.DrmRights: java.lang.String getMimeType()> 
<org.apache.harmony.xnet.provider.jsse.CipherSuite: java.lang.String getHashName()> 
<android.app.FragmentManagerImpl: android.app.Fragment getFragment(android.os.Bundle,java.lang.String)> 
<android.test.TestRunner: java.lang.String[] getTestChildren(android.content.Context,java.lang.String)> 
<java.util.IllegalFormatFlagsException: java.lang.String getFlags()> 
<android.app.ContextImpl: java.lang.String getPackageName()> 
<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)> 
<gov.nist.javax.sip.header.SIPHeaderList: javax.sip.header.Header getFirst()> 
<android.app.admin.DeviceAdminInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)> 
<org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)> 
<android.widget.AbsListView: int getTranscriptMode()> 
<org.jivesoftware.smack.XMPPConnection: int getPort()> 
<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address getRemoteParty()> 
<java.net.DatagramSocket: int getLocalPort()> 
<java.util.IllegalFormatConversionException: java.lang.String getMessage()> 
<android.view.View: void getLocationOnScreen(int[])> 
<org.apache.harmony.security.pkcs10.CertificationRequest: org.apache.harmony.security.pkcs10.CertificationRequestInfo getInfo()> 
<org.apache.commons.logging.impl.SimpleLog: int getLevel()> 
<android.view.animation.Animation: boolean getFillAfter()> 
<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: java.util.ArrayList getParamValues()> 
<libcore.net.http.HttpsURLConnectionImpl: long getExpiration()> 
<android.database.sqlite.SQLiteProgram: java.lang.String getSql()> 
<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.ElemTemplateElement getCurrentElement()> 
<android.net.NetworkStats: android.net.NetworkStats$Entry getValues(int,android.net.NetworkStats$Entry)> 
<android.graphics.Canvas: int getMaximumBitmapWidth()> 
<net.oauth.client.URLConnectionResponse: int getStatusCode()> 
<android.media.Metadata: double getDouble(int)> 
<java.security.UnresolvedPermission: java.lang.String getUnresolvedActions()> 
<org.apache.xml.utils.FastStringBuffer: java.lang.String getString(int,int)> 
<android.net.http.Headers: java.lang.String getLastModified()> 
<android.speech.tts.TextToSpeechService: int getDefaultSpeechRate()> 
<android.hardware.usb.UsbDevice: int getInterfaceCount()> 
<android.app.ActivityThread: android.app.Instrumentation getInstrumentation()> 
<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)> 
<android.bluetooth.BluetoothUuid: int getServiceIdentifierFromParcelUuid(android.os.ParcelUuid)> 
<android.view.VelocityTracker: boolean getEstimator(int,android.view.VelocityTracker$Estimator)> 
<java.lang.Thread: long getId()> 
<android.support.v4.app.FragmentManagerImpl: android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int)> 
<java.security.CodeSource: java.net.URL getLocation()> 
<java.security.IdentityScope: java.security.Identity getIdentity(java.security.Principal)> 
<org.jivesoftware.smack.PacketReader: org.jivesoftware.smack.packet.Registration parseRegistration(org.xmlpull.v1.XmlPullParser)> 
<android.net.NetworkIdentity: int getType()> 
<org.apache.xml.utils.SystemIDResolver: java.lang.String getAbsoluteURI(java.lang.String)> 
<android.media.videoeditor.MediaImageItem: java.lang.String getGeneratedImageClip()> 
<android.text.style.StyleSpan: int getSpanTypeId()> 
<org.apache.xpath.axes.PredicatedNodeTest: int getProximityPosition()> 
<android.support.v4.content.AsyncTaskLoader: void onForceLoad()> 
<java.nio.DirectByteBuffer: short getShort()> 
<android.view.textservice.SuggestionsInfo: int getSuggestionsCount()> 
<org.jivesoftware.smack.ConnectionConfiguration: java.lang.String getServiceName()> 
<java.security.cert.PKIXParameters: java.security.cert.CertSelector getTargetCertConstraints()> 
<android.telephony.TelephonyManager: int getCdmaEriIconIndex()> 
<javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.security.Provider)> 
<javax.xml.namespace.QName: java.lang.String getNamespaceURI()> 
<org.apache.xml.utils.UnImplNode: org.w3c.dom.Node getFirstChild()> 
<org.apache.xml.serializer.SecuritySupport: java.lang.ClassLoader getContextClassLoader()> 
<android.graphics.SurfaceTexture: long getTimestamp()> 
<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)> 
<android.telephony.SmsMessage: int getStatus()> 
<org.jivesoftware.smack.XMPPConnection: java.lang.String getConnectionID()> 
<org.apache.xml.serializer.WriterToUTF8Buffered: java.io.Writer getWriter()> 
<android.graphics.Paint: android.graphics.PathEffect getPathEffect()> 
<org.apache.harmony.security.asn1.BerInputStream: int getLength()> 
<android.support.v4.util.SparseArrayCompat: java.lang.Object get(int)> 
<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPRequest createSIPRequest(gov.nist.javax.sip.header.RequestLine,boolean)> 
<java.nio.CharToByteBufferAdapter: java.nio.CharBuffer get(char[],int,int)> 
<android.mtp.MtpDeviceInfo: java.lang.String getSerialNumber()> 
<android.speech.tts.TextToSpeech: java.lang.String getCurrentEngine()> 
<org.apache.xml.dtm.ref.DTMDefaultBase: java.lang.String getDocumentEncoding(int)> 
<org.apache.xpath.XPathContext: org.apache.xpath.VariableStack getVarStack()> 
<android.filterpacks.imageproc.ImageStitcher: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<android.content.ClipData: android.content.ClipData$Item getItemAt(int)> 
<gov.nist.javax.sip.parser.RequestLineParser: gov.nist.javax.sip.header.RequestLine parse()> 
<android.graphics.Paint: float getTextRunAdvances(java.lang.CharSequence,int,int,int,int,int,float[],int)> 
<android.gesture.GestureOverlayView: android.graphics.Paint getGesturePaint()> 
<org.apache.xml.dtm.ref.SecuritySupport: java.lang.ClassLoader getContextClassLoader()> 
<android.widget.Toast: int getDuration()> 
<libcore.net.http.HttpsURLConnectionImpl: java.lang.String getHeaderField(java.lang.String)> 
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)> 
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.lang.Object getValue(java.lang.String)> 
<android.widget.VideoView: int getBufferPercentage()> 
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry()> 
<java.security.spec.RSAKeyGenParameterSpec: int getKeysize()> 
<android.widget.HeaderViewListAdapter: long getItemId(int)> 
<android.view.Gravity: int getAbsoluteGravity(int,int)> 
<android.view.textservice.SpellCheckerInfo: int getSubtypeCount()> 
<android.view.inputmethod.InputBinding: int getUid()> 
<android.widget.SuggestionsAdapter: java.lang.String getStringOrNull(android.database.Cursor,int)> 
<org.apache.http.impl.auth.DigestScheme: java.lang.String getQopVariantString()> 
<android.net.wifi.WifiInfo: java.lang.String getBSSID()> 
<android.text.method.BaseMovementMethod: int getCharacterWidth(android.widget.TextView)> 
<android.view.inputmethod.InputMethodInfo: java.lang.String getServiceName()> 
<android.view.View: int getPaddingBottom()> 
<android.net.http.SslCertificate: java.lang.String getValidNotAfter()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: java.net.InetAddress getInetAddress()> 
<android.test.mock.MockPackageManager: android.content.res.Resources getResourcesForApplicationAsUser(java.lang.String,int)> 
<android.net.http.RequestHandle: java.lang.String getMethod()> 
<java.security.cert.CertPathValidator: java.lang.String getDefaultType()> 
<java.io.PipedReader: int read()> 
<gov.nist.core.NameValue: java.lang.String getName()> 
<org.apache.xpath.VariableStack: org.apache.xpath.objects.XObject getLocalVariable(org.apache.xpath.XPathContext,int,boolean)> 
<java.nio.DirectByteBuffer: void get(double[],int,int)> 
<java.text.CollationKey: java.lang.String getSourceString()> 
<android.bluetooth.BluetoothDevice: java.lang.String getAlias()> 
<java.util.ResourceBundle: java.lang.String[] getStringArray(java.lang.String)> 
<android.widget.CursorTreeAdapter: android.widget.CursorTreeAdapter$MyCursorHelper getChildrenCursorHelper(int,boolean)> 
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getWholeText()> 
<android.os.Debug: int getLoadedClassCount()> 
<java.text.SimpleDateFormat: java.util.Date get2DigitYearStart()> 
<org.apache.harmony.xml.dom.CDATASectionImpl: java.lang.String getNodeName()> 
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: java.util.List getText(java.lang.Object)> 
<java.security.cert.PolicyQualifierInfo: byte[] getEncoded()> 
<javax.crypto.spec.RC5ParameterSpec: int getVersion()> 
<android.widget.FrameLayout: boolean getMeasureAllChildren()> 
<libcore.icu.RuleBasedCollatorICU: int getDecomposition()> 
<org.apache.xpath.axes.PredicatedNodeTest: int getPredicateIndex()> 
<android.webkit.WebChromeClient: android.view.View getVideoLoadingProgressView()> 
<java.nio.HeapByteBuffer: void get(float[],int,int)> 
<android.gesture.GestureLibrary: int getSequenceType()> 
<android.media.videoeditor.MediaImageItem: java.lang.String getDecodedImageFileName()> 
<android.mtp.MtpStorageInfo: java.lang.String getVolumeIdentifier()> 
<org.apache.xml.serializer.SecuritySupport12: java.lang.String getSystemProperty(java.lang.String)> 
<android.support.v4.app.FragmentPagerAdapter: long getItemId(int)> 
<gov.nist.javax.sip.header.AuthenticationInfo: java.lang.String getAuthenticationInfo()> 
<android.database.CursorWrapper: boolean getWantsAllOnMoveCalls()> 
<android.graphics.drawable.RotateDrawable: android.graphics.drawable.Drawable getDrawable()> 
<org.apache.xml.dtm.Axis: java.lang.String getNames(int)> 
<android.opengl.GLLogWrapper: java.lang.String getMatrixMode(int)> 
<android.animation.IntKeyframeSet: int getIntValue(float)> 
<gov.nist.javax.sip.header.Via: gov.nist.core.HostPort getSentBy()> 
<android.graphics.Paint: android.graphics.Paint$Style getStyle()> 
<java.net.JarURLConnection: java.util.jar.Attributes getMainAttributes()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: int getSoTimeout()> 
<javax.net.ssl.SSLSocketFactory: javax.net.SocketFactory getDefault()> 
<org.apache.harmony.xml.dom.InnerNodeImpl: void getElementsByTagName(org.apache.harmony.xml.dom.NodeListImpl,java.lang.String)> 
<org.apache.harmony.xnet.provider.jsse.CipherSuite: int getBlockSize()> 
<android.net.http.Headers: long getTransferEncoding()> 
<android.test.ClassPathPackageInfoSource: java.util.Set getJarEntries(java.io.File)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.lang.String[] getSupportedProtocols()> 
<android.text.BoringLayout: int getParagraphDirection(int)> 
<org.apache.http.impl.io.AbstractSessionInputBuffer: org.apache.http.io.HttpTransportMetrics getMetrics()> 
<org.apache.xpath.axes.MatchPatternIterator: int getNextNode()> 
<org.apache.xalan.templates.ElemWhen: org.apache.xpath.XPath getTest()> 
<android.text.style.UnderlineSpan: int getSpanTypeId()> 
<android.bluetooth.BluetoothAdapter: int getDiscoverableTimeout()> 
<android.telephony.TelephonyManager: java.lang.String getLine1AlphaTag()> 
<android.view.inputmethod.CompletionInfo: long getId()> 
<android.drm.DrmSupportInfo: java.lang.String getDescriprition()> 
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()> 
<libcore.net.http.HttpURLConnectionImpl: java.io.OutputStream getOutputStream()> 
<android.view.MotionEvent: float getHistoricalToolMinor(int,int)> 
<org.apache.commons.io.input.ProxyReader: boolean ready()> 
<org.apache.harmony.xnet.provider.jsse.CipherSuite: org.apache.harmony.xnet.provider.jsse.CipherSuite[] getSupported()> 
<android.webkit.WebResourceResponse: java.io.InputStream getData()> 
<java.security.cert.X509CRL: javax.security.auth.x500.X500Principal getIssuerX500Principal()> 
<org.apache.xml.utils.UnImplNode: java.lang.String getTextContent()> 
<gov.nist.javax.sip.message.SIPRequest: java.lang.String getViaHost()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: java.lang.String getDocumentTypeDeclarationSystemIdentifier()> 
<android.content.AsyncTaskLoader: void onForceLoad()> 
<org.apache.xml.serializer.ToUnknownStream: java.lang.String getEncoding()> 
<android.location.Location: double getLongitude()> 
<org.apache.xml.serializer.ToHTMLStream: org.apache.xml.serializer.ElemDesc getElemDesc(java.lang.String)> 
<org.apache.http.entity.FileEntity: java.io.InputStream getContent()> 
<android.media.videoeditor.MediaItem: android.graphics.Bitmap[] getThumbnailList(int,int,long,long,int)> 
<gov.nist.javax.sip.header.ims.SecurityAgree: int getPortClient()> 
<org.apache.xpath.NodeSetDTM: boolean getExpandEntityReferences()> 
<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.Result getOutputTarget()> 
<gov.nist.javax.sip.header.Organization: java.lang.String getOrganization()> 
<org.apache.commons.logging.LogSource: org.apache.commons.logging.Log getInstance(java.lang.String)> 
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: java.net.SocketAddress getLocalSocketAddress()> 
<java.text.DecimalFormatSymbols: char getMonetaryDecimalSeparator()> 
<org.apache.xpath.VariableStack: org.apache.xpath.objects.XObject getGlobalVariable(org.apache.xpath.XPathContext,int,boolean)> 
<android.widget.AbsListView: int getCheckedItemPosition()> 
<java.nio.MappedByteBufferAdapter: long getLong()> 
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: javax.net.ssl.SSLSession getSession()> 
<android.widget.CursorTreeAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)> 
<java.nio.DirectByteBuffer: int getInt(int)> 
<junit.runner.BaseTestRunner: java.io.File getPreferencesFile()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: int getSoLinger()> 
<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getSelectedText(int)> 
<android.widget.RemoteViews: java.lang.String getPackage()> 
<android.widget.ExpandableListConnector: android.widget.ExpandableListConnector$PositionMetadata getUnflattenedPos(int)> 
<java.nio.FloatBuffer: java.nio.FloatBuffer get(float[],int,int)> 
<android.widget.ListPopupWindow: java.lang.Object getSelectedItem()> 
<android.accounts.AccountManagerService: java.lang.String getUserData(android.accounts.Account,java.lang.String)> 
<android.view.DragEvent: int getAction()> 
<java.security.Identity: java.lang.String getName()> 
<android.database.sqlite.SQLiteProgram: int getUniqueId()> 
<java.util.concurrent.atomic.AtomicReference: java.lang.Object getAndSet(java.lang.Object)> 
<android.nfc.NfcActivityManager: android.net.Uri[] getUris()> 
<android.widget.TextView: java.lang.CharSequence getImeActionLabel()> 
<java.nio.DirectByteBuffer: byte get(int)> 
<android.app.PendingIntent: java.lang.String getTargetPackage()> 
<org.apache.xml.utils.DOMHelper: java.lang.String getExpandedAttributeName(org.w3c.dom.Attr)> 
<java.nio.CharSequenceAdapter: char get(int)> 
<android.widget.AdapterViewAnimator: android.widget.AdapterViewAnimator$ViewAndMetaData getMetaDataForChild(android.view.View)> 
<android.media.CamcorderProfile: android.media.CamcorderProfile get(int)> 
<android.nfc.Tag: int getServiceHandle()> 
<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: java.lang.String getType()> 
<org.apache.http.impl.auth.DigestScheme: java.lang.String getCnonce()> 
<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getType(java.lang.String)> 
<android.os.StrictMode: int getThreadPolicyMask()> 
<android.content.pm.ResolveInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)> 
<android.widget.Switch: boolean getTargetCheckedState()> 
<android.opengl.GLLogWrapper: java.lang.String getFogPName(int)> 
<org.apache.xpath.patterns.StepPattern: int getProximityPosition(org.apache.xpath.XPathContext)> 
<android.widget.AbsSpinner: int getChildWidth(android.view.View)> 
<gov.nist.javax.sip.SipProviderImpl: javax.sip.ListeningPoint[] getListeningPoints()> 
<org.kxml2.io.KXmlParser: java.lang.String getNamespacePrefix(int)> 
<org.apache.xalan.xslt.SecuritySupport: java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader)> 
<android.support.v4.content.Loader: void startLoading()> 
<android.net.SSLCertificateSocketFactory: java.lang.String[] getSupportedCipherSuites()> 
<java.util.concurrent.CountDownLatch: long getCount()> 
<org.apache.xml.utils.QName: java.lang.String getNamespace()> 
<javax.xml.namespace.QName: java.lang.String getPrefix()> 
<gov.nist.javax.sip.header.ims.PAssertedService: java.lang.String getSubserviceIdentifiers()> 
<libcore.net.http.HttpsURLConnectionImpl: boolean getInstanceFollowRedirects()> 
<org.apache.http.params.AbstractHttpParams: double getDoubleParameter(java.lang.String,double)> 
<android.text.method.BaseMovementMethod: int getBottomLine(android.widget.TextView)> 
<org.jivesoftware.smack.ConnectionConfiguration: java.lang.String getTruststorePassword()> 
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int getMaxTotalConnections()> 
<android.filterfw.core.InputPort: android.filterfw.core.Filter getSourceFilter()> 
<java.lang.System: java.util.Map getenv()> 
<org.apache.http.impl.io.AbstractMessageParser: org.apache.http.HttpMessage parse()> 
<android.media.RemoteControlClient: android.app.PendingIntent getRcMediaIntent()> 
<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker()> 
<android.app.Service: android.app.Application getApplication()> 
<org.apache.harmony.security.x509.SubjectPublicKeyInfo: java.security.PublicKey getPublicKey()> 
<android.telephony.CellBroadcastMessage: android.telephony.SmsCbCmasInfo getCmasWarningInfo()> 
<android.filterfw.core.Filter: java.util.Collection getInputPorts()> 
<java.util.concurrent.ConcurrentLinkedDeque: java.lang.Object getLast()> 
<org.apache.http.conn.scheme.Scheme: int getDefaultPort()> 
<android.webkit.WebBackForwardListClassic: int getCurrentIndex()> 
<org.apache.xml.dtm.SecuritySupport12: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)> 
<android.content.res.Resources: void startPreloading()> 
<android.view.inputmethod.InputMethodManager: java.util.List getInputMethodList()> 
<org.apache.xml.serializer.dom3.DOMLocatorImpl: int getByteOffset()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: javax.xml.transform.SourceLocator getSourceLocatorFor(int)> 
<android.view.View: android.view.View$ListenerInfo getListenerInfo()> 
<org.apache.xml.dtm.ref.SecuritySupport12: java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader)> 
<android.security.KeyStore: long getmtime(byte[])> 
<android.net.sip.SipAudioCall: android.net.rtp.AudioGroup getAudioGroup()> 
<java.net.ProxySelectorImpl: int getSystemPropertyInt(java.lang.String,int)> 
<android.webkit.PluginManager: java.lang.String getPluginSharedDataDirectory()> 
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothDevice getRemoteDevice(java.lang.String)> 
<gov.nist.javax.sip.stack.MessageProcessor: java.lang.String getSentBy()> 
<android.telephony.TelephonyManager: java.lang.String[] getIsimImpu()> 
<gov.nist.javax.sip.header.Credentials: gov.nist.core.NameValueList getCredentials()> 
<android.view.ViewConfiguration: int getFadingEdgeLength()> 
<android.os.DropBoxManager: android.os.DropBoxManager$Entry getNextEntry(java.lang.String,long)> 
<java.io.File: java.lang.String getAbsolutePath()> 
<org.apache.james.mime4j.field.ContentTypeField: java.lang.String getParameter(java.lang.String)> 
<org.apache.xpath.NodeSetDTM: int getCurrentPos()> 
<android.view.accessibility.AccessibilityNodeInfo: java.lang.String getMovementGranularitySymbolicName(int)> 
<android.net.http.Connection: android.net.http.SslCertificate getCertificate()> 
<android.content.ContentService: android.content.SyncManager getSyncManager()> 
<android.mtp.MtpObjectInfo: long getDateModified()> 
<android.net.NetworkStatsHistory: long getStart()> 
<android.text.DynamicLayout: int getEllipsizedWidth()> 
<android.content.pm.ContainerEncryptionParams: javax.crypto.SecretKey getEncryptionKey()> 
<org.apache.xpath.NodeSet: org.w3c.dom.Node getCurrentNode()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: java.math.BigInteger getPrivateExponent()> 
<android.telephony.TelephonyManager: java.lang.String getIsimImpi()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: boolean getSpecified()> 
<org.apache.xpath.SourceTreeManager: org.xml.sax.XMLReader getXMLReader(javax.xml.transform.Source,javax.xml.transform.SourceLocator)> 
<android.database.CursorWrapper: int getType(int)> 
<android.drm.DrmRights: java.lang.String getSubscriptionId()> 
<javax.security.auth.Subject: java.util.Set getPrivateCredentials()> 
<android.telephony.CellSignalStrengthCdma: int getEvdoLevel()> 
<android.app.admin.DeviceAdminInfo: java.lang.String getReceiverName()> 
<org.apache.xml.utils.UnImplNode: org.w3c.dom.Node getNextSibling()> 
<android.database.sqlite.SQLiteConnection: int getConnectionId()> 
<org.apache.xpath.patterns.StepPattern: org.apache.xpath.Expression[] getPredicates()> 
<android.accounts.AccountManagerService: android.accounts.AccountManagerService$UserAccounts getUserAccountsForCaller()> 
<android.filterpacks.imageproc.DocumentaryFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<android.hardware.display.DisplayManager: android.view.Display[] getDisplays(java.lang.String)> 
<org.apache.xpath.operations.UnaryOperation: org.apache.xpath.Expression getExpression()> 
<android.media.ExifInterface: byte[] getThumbnail()> 
<android.graphics.drawable.GradientDrawable: boolean getPadding(android.graphics.Rect)> 
<android.graphics.Paint: void getTextBounds(char[],int,int,android.graphics.Rect)> 
<android.widget.ProgressBar: android.graphics.drawable.Drawable getProgressDrawable()> 
<android.view.View: android.view.ViewParent getParentForAccessibility()> 
<android.hardware.input.InputManager: int[] getInputDeviceIds()> 
<android.view.KeyCharacterMap: char getMatch(int,char[],int)> 
<org.apache.xml.utils.UnImplNode: org.w3c.dom.Document getOwnerDocument()> 
<gov.nist.javax.sip.header.ParametersHeader: int getParameterAsHexInt(java.lang.String)> 
<android.app.FragmentManagerImpl: android.animation.Animator loadAnimator(android.app.Fragment,int,boolean,int)> 
<org.apache.http.client.methods.HttpTrace: java.lang.String getMethod()> 
<android.test.ProviderTestCase2: android.test.mock.MockContentResolver getMockContentResolver()> 
<java.io.File: boolean canRead()> 
<android.animation.PropertyValuesHolder: java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class)> 
<java.net.URLConnection: boolean getDefaultUseCaches()> 
<org.apache.xml.serializer.SerializerBase: java.lang.String getNamespaceURIFromPrefix(java.lang.String)> 
<android.media.videoeditor.AudioTrack: int getAudioChannels()> 
<android.widget.AbsListView: int getFooterViewsCount()> 
<android.webkit.WebViewFactory: android.webkit.WebViewFactoryProvider getFactoryByName(java.lang.String,java.lang.ClassLoader)> 
<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)> 
<java.net.URLConnection: long getLastModified()> 
<android.widget.TextView: int getMinWidth()> 
<org.kxml2.io.KXmlParser: java.lang.String readQuotedId(boolean)> 
<android.renderscript.Element: android.renderscript.Element$DataKind getDataKind()> 
<android.graphics.Region: boolean getBoundaryPath(android.graphics.Path)> 
<android.widget.Toast: float getHorizontalMargin()> 
<javax.xml.validation.SchemaFactoryFinder: javax.xml.validation.SchemaFactory loadFromServicesFile(java.lang.String,java.lang.String,java.io.InputStream)> 
<android.os.Bundle: java.lang.String getPairValue()> 
<org.apache.commons.io.output.CountingOutputStream: long getByteCount()> 
<android.app.WallpaperInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)> 
<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)> 
<android.webkit.WebView: android.webkit.WebView$HitTestResult getHitTestResult()> 
<libcore.net.http.HttpURLConnectionImpl: java.net.Proxy getProxy()> 
<android.support.v4.app.FragmentActivity: android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean)> 
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1: int getMaxScrollY(java.lang.Object)> 
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1: int getMaxScrollX(java.lang.Object)> 
<org.apache.xalan.templates.ElemForEach: org.apache.xpath.Expression getSelect()> 
<gov.nist.javax.sip.stack.TCPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()> 
<javax.xml.transform.stream.StreamSource: java.io.Reader getReader()> 
<android.webkit.WebSettings: java.lang.String getSerifFontFamily()> 
<org.apache.xml.serializer.SecuritySupport12: boolean getFileExists(java.io.File)> 
<android.net.WebAddress: java.lang.String getAuthInfo()> 
<android.webkit.JniUtil: java.lang.String getPackageName()> 
<net.oauth.ConsumerProperties: java.lang.String getURL(java.net.URL,java.lang.String)> 
<android.database.MatrixCursor: int getCount()> 
<android.media.videoeditor.EffectKenBurns: android.graphics.Rect getStartRect()> 
<android.view.Display: int getMaximumSizeDimension()> 
<org.apache.xalan.transformer.TransformerImpl: java.lang.Thread getTransformThread()> 
<android.renderscript.Mesh: int getPrimitiveCount()> 
<android.text.SpannableStringBuilder: int getSpanEnd(java.lang.Object)> 
<java.io.RandomAccessFile: double readDouble()> 
<gov.nist.javax.sip.stack.SIPTransactionStack: javax.sip.Dialog getReplacesDialog(gov.nist.javax.sip.header.extensions.ReplacesHeader)> 
<android.inputmethodservice.Keyboard: int getHorizontalGap()> 
<android.graphics.drawable.ScaleDrawable: int getChangingConfigurations()> 
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: int getQueueLength()> 
<android.media.CameraProfile: int getJpegEncodingQualityParameter(int)> 
<org.jivesoftware.smackx.packet.DiscoverInfo: java.lang.String getNode()> 
<javax.xml.datatype.Duration: int getYears()> 
<android.view.accessibility.AccessibilityNodeInfo: int getActions()> 
<org.xml.sax.helpers.XMLFilterImpl: java.lang.Object getProperty(java.lang.String)> 
<android.widget.TabHost: java.lang.String getCurrentTabTag()> 
<android.test.InstrumentationCoreTestRunner: android.test.AndroidTestRunner getAndroidTestRunner()> 
<android.view.KeyCharacterMap: int get(int,int)> 
<gov.nist.javax.sip.stack.MessageChannel: gov.nist.core.HostPort getViaHostPort()> 
<org.apache.xalan.processor.XSLTAttributeDef: java.lang.StringBuffer getListOfEnums()> 
<android.view.KeyCharacterMap: char getDisplayLabel(int)> 
<android.graphics.Interpolator: int getKeyFrameCount()> 
<org.xml.sax.helpers.AttributesImpl: java.lang.String getValue(java.lang.String,java.lang.String)> 
<android.app.admin.DevicePolicyManager: android.app.admin.DeviceAdminInfo getAdminInfo(android.content.ComponentName)> 
<net.oauth.OAuthMessage: java.lang.String getSignature()> 
<android.view.View: int getHorizontalScrollbarHeight()> 
<org.jivesoftware.smackx.packet.MUCUser: org.jivesoftware.smackx.packet.MUCUser$Item getItem()> 
<android.view.MotionEvent: float getHistoricalSize(int)> 
<android.net.InterfaceConfiguration: java.lang.String getHardwareAddress()> 
<java.lang.Throwable: java.lang.Throwable getCause()> 
<org.json.JSONArray: org.json.JSONArray getJSONArray(int)> 
<android.widget.ListPopupWindow: int getVerticalOffset()> 
<android.graphics.Paint: float getTextRunAdvances(java.lang.String,int,int,int,int,int,float[],int,int)> 
<org.apache.xpath.axes.LocPathIterator: int getWhatToShow()> 
<android.view.inputmethod.InputMethodInfo: android.view.inputmethod.InputMethodSubtype getSubtypeAt(int)> 
<org.jivesoftware.smackx.provider.DiscoverItemsProvider: org.jivesoftware.smack.packet.IQ parseIQ(com.google.common.io.protocol.ProtoBuf)> 
<java.net.DatagramSocket: int getSendBufferSize()> 
<org.apache.xml.dtm.ref.SecuritySupport12: java.lang.ClassLoader getContextClassLoader()> 
<java.util.concurrent.ConcurrentLinkedDeque: java.lang.Object getFirst()> 
<android.media.ExifInterface: long getGpsDateTime()> 
<org.apache.xalan.templates.NamespaceAlias: java.lang.String getStylesheetNamespace()> 
<org.jivesoftware.smack.util.PacketParserUtils: boolean getBoolOrDefault(com.google.common.io.protocol.ProtoBuf,int,boolean)> 
<java.nio.charset.MalformedInputException: int getInputLength()> 
<android.content.pm.VerificationParams: android.net.Uri getReferrer()> 
<org.apache.harmony.luni.lang.reflect.ImplForArray: java.lang.reflect.Type getGenericComponentType()> 
<org.apache.xml.serializer.ToStream: java.io.OutputStream getOutputStream()> 
<android.mtp.MtpDatabase: int[] getSupportedPlaybackFormats()> 
<android.app.ActivityManagerProxy: int getLaunchedFromUid(android.os.IBinder)> 
<android.view.TextureView: android.graphics.Bitmap getBitmap()> 
<android.os.Bundle: java.lang.String getString(java.lang.String,java.lang.String)> 
<android.app.ActivityManager: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()> 
<java.net.JarURLConnection: java.security.cert.Certificate[] getCertificates()> 
<android.location.Location: android.location.Location getExtraLocation(java.lang.String)> 
<android.media.JetPlayer: boolean loadJetFile(android.content.res.AssetFileDescriptor)> 
<java.io.BufferedReader: java.lang.String readLine()> 
<android.view.ViewGroup: int getChildMeasureSpec(int,int,int)> 
<org.jivesoftware.smack.provider.RawXmlIQProvider: org.jivesoftware.smack.packet.IQ parseIQ(com.google.common.io.protocol.ProtoBuf)> 
<android.support.v4.app.NavUtils: android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName)> 
<java.io.EmulatedFieldsForLoading: java.io.ObjectStreamClass getObjectStreamClass()> 
<org.apache.xalan.templates.TemplateList: double getPriorityOrScore(org.apache.xalan.templates.TemplateSubPatternAssociation)> 
<android.text.style.SuggestionSpan: java.lang.String[] getSuggestions()> 
<org.apache.http.ProtocolVersion: java.lang.String getProtocol()> 
<android.media.videoeditor.MediaVideoItem: int getAspectRatio()> 
<org.apache.harmony.xml.dom.NodeImpl: java.lang.Object getFeature(java.lang.String,java.lang.String)> 
<org.apache.xalan.templates.ElemText: int getXSLToken()> 
<org.apache.xalan.xslt.EnvironmentCheck: java.util.Hashtable getEnvironmentHash()> 
<java.net.Socks4Message: int getLength()> 
<android.telephony.cdma.CdmaSmsCbProgramData: int getOperation()> 
<java.net.Inet6Address: java.lang.String getHostAddress()> 
<android.telephony.ServiceState: boolean getIsManualSelection()> 
<libcore.net.http.HttpResponseCache: int getHitCount()> 
<org.apache.xpath.axes.FilterExprWalker: int getAnalysisBits()> 
<android.net.dhcp.DhcpAckPacket: int getInt(java.lang.Integer)> 
<java.text.FieldPosition: int getEndIndex()> 
<android.content.ContentQueryMap: android.content.ContentValues getValues(java.lang.String)> 
<java.security.spec.MGF1ParameterSpec: java.lang.String getDigestAlgorithm()> 
<android.telephony.SmsCbMessage: android.telephony.SmsCbEtwsInfo getEtwsWarningInfo()> 
<java.io.File: java.lang.String getPath()> 
<android.renderscript.Matrix4f: void loadOrthoWindow(int,int)> 
<gov.nist.javax.sip.header.ims.PVisitedNetworkID: java.lang.String getVisitedNetworkID()> 
<org.apache.commons.io.input.TeeInputStream: int read(byte[])> 
<org.apache.xml.dtm.ref.SecuritySupport12: java.lang.ClassLoader getSystemClassLoader()> 
<org.apache.xml.utils.SuballocatedIntVector: int[][] getMap()> 
<org.apache.harmony.xnet.provider.jsse.TrustManagerImpl: java.security.cert.X509Certificate[] getAcceptedIssuers()> 
<java.lang.reflect.Constructor: java.lang.annotation.Annotation[] getDeclaredAnnotations()> 
<java.util.ListResourceBundle: java.util.Enumeration getKeys()> 
<android.view.DisplayInfo: void getMetricsWithSize(android.util.DisplayMetrics,android.view.CompatibilityInfoHolder,int,int)> 
<android.net.http.HttpAuthHeader: boolean getStale()> 
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: java.lang.String[] getEnabledProtocols()> 
<android.widget.PopupWindow: android.view.View getContentView()> 
<android.net.sip.SipProfile: javax.sip.address.SipURI getUri()> 
<android.widget.AbsListView: android.view.View getSelectedView()> 
<android.database.AbstractWindowedCursor: float getFloat(int)> 
<android.content.Context: java.lang.CharSequence getText(int)> 
<android.database.AbstractCursor: java.lang.String getColumnName(int)> 
<org.kxml2.io.KXmlParser: int getEventType()> 
<java.security.spec.DSAPublicKeySpec: java.math.BigInteger getP()> 
<java.security.spec.DSAPublicKeySpec: java.math.BigInteger getQ()> 
<java.security.spec.DSAPublicKeySpec: java.math.BigInteger getY()> 
<android.text.AutoText: int getSize(android.view.View)> 
<android.util.DayOfMonthCursor: int getSelectedRow()> 
<org.jivesoftware.smack.packet.DataMessage: java.lang.String getToken()> 
<java.security.spec.DSAPublicKeySpec: java.math.BigInteger getG()> 
<java.security.SignedObject: byte[] getSignature()> 
<android.net.SSLCertificateSocketFactory: java.lang.String[] getDefaultCipherSuites()> 
<java.util.zip.Deflater: int getTotalOut()> 
<org.jivesoftware.smack.XMPPConnection: long getLastActivityToServerTime()> 
<android.media.MediaRouter: android.media.MediaRouter$RouteCategory getCategoryAt(int)> 
<android.app.ActivityManagerProxy: android.content.ComponentName getCallingActivity(android.os.IBinder)> 
<android.webkit.WebViewClassic: int getMaxTextScrollY()> 
<android.webkit.WebViewClassic: int getMaxTextScrollX()> 
<org.apache.xml.serializer.dom3.DOMLocatorImpl: int getLineNumber()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: int getHandleOfNode()> 
<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.String getLogClassName()> 
<java.net.URISyntaxException: java.lang.String getInput()> 
<android.media.AudioTrack: int getMinBufferSize(int,int,int)> 
<org.apache.harmony.security.asn1.ASN1Boolean: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)> 
<android.app.Presentation: android.content.res.Resources getResources()> 
<android.net.MobileDataStateTracker: android.net.LinkProperties getLinkProperties()> 
<libcore.io.ForwardingOs: int getsockoptInt(java.io.FileDescriptor,int,int)> 
<java.security.Identity: java.lang.String getInfo()> 
<android.drm.DrmSupportInfo: java.util.Iterator getMimeTypeIterator()> 
<org.apache.harmony.security.provider.cert.X509CertPathImpl: byte[] getEncoded()> 
<android.support.v4.content.AsyncTaskLoader: boolean cancelLoad()> 
<org.apache.xalan.transformer.TransformerImpl: boolean getFeature(java.lang.String)> 
<org.apache.xalan.templates.ElemNumber: java.lang.String getZeroString()> 
<android.app.Dialog: android.view.Window getWindow()> 
<android.app.ActivityManager: boolean getPackageAskScreenCompat(java.lang.String)> 
<org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)> 
<android.widget.PopupWindow: int getWindowLayoutType()> 
<org.xmlpull.v1.XmlPullParserFactory: boolean getFeature(java.lang.String)> 
<libcore.net.http.HttpURLConnectionImpl: java.net.InetAddress getConnectToInetAddress()> 
<android.text.method.HideReturnsTransformationMethod: char[] getReplacement()> 
<org.apache.commons.io.input.SwappedDataInputStream: boolean readBoolean()> 
<org.apache.xalan.processor.XSLTElementDef: java.lang.String getNamespace()> 
<android.net.sip.SimpleSessionDescription: java.lang.String getEncryptionKey()> 
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.ElemParam getParam(org.apache.xml.utils.QName)> 
<java.lang.ExceptionInInitializerError: java.lang.Throwable getCause()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: org.w3c.dom.Node getNextSibling()> 
<android.widget.RemoteViewsAdapter: int getConvertViewTypeId(android.view.View)> 
<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectPool getStringWriterPool()> 
<android.net.ProxyProperties: java.lang.String getHost()> 
<java.security.KeyStore: java.lang.String getType()> 
<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: java.lang.String getSubType()> 
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script$KernelID getKernelIDSrcOut()> 
<android.filterfw.core.SimpleFrame: int[] getInts()> 
<java.net.ServerSocket: int getReceiveBufferSize()> 
<android.database.DatabaseUtils: java.lang.String getHexCollationKey(java.lang.String)> 
<android.filterpacks.imageproc.FisheyeFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<java.net.Authenticator: java.net.PasswordAuthentication getPasswordAuthentication()> 
<android.view.animation.LayoutAnimationController: int getTransformedIndex(android.view.animation.LayoutAnimationController$AnimationParameters)> 
<android.widget.TableRow: int getVirtualChildCount()> 
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getSettingsActivityName()> 
<libcore.icu.NativeDecimalFormat: java.lang.String getNegativePrefix()> 
<android.widget.ArrayAdapter: android.widget.Filter getFilter()> 
<android.animation.LayoutTransition: long getStagger(int)> 
<org.apache.http.protocol.DefaultedHttpContext: org.apache.http.protocol.HttpContext getDefaults()> 
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime()> 
<android.support.v4.view.accessibility.AccessibilityRecordCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource()> 
<android.os.StatFs: int getBlockSize()> 
<android.net.nsd.DnsSdTxtRecord: byte[] getValue(int)> 
<javax.crypto.ExemptionMechanism: int getOutputSize(int)> 
<org.apache.xml.serializer.SerializerBase: java.util.Set getOutputPropKeys()> 
<org.apache.xml.utils.NamespaceSupport2: java.lang.String getPrefix(java.lang.String)> 
<libcore.net.http.HttpURLConnectionImpl: libcore.net.http.HttpEngine getHttpEngine()> 
<android.inputmethodservice.Keyboard: void loadKeyboard(android.content.Context,android.content.res.XmlResourceParser)> 
<android.media.videoeditor.MediaVideoItem: int getWidth()> 
<java.security.IdentityScope: java.security.IdentityScope getSystemScope()> 
<android.webkit.BrowserFrame: void loadStarted(java.lang.String,android.graphics.Bitmap,int,boolean)> 
<android.location.LocationRequest: long getExpireAt()> 
<android.server.search.SearchManagerService: java.util.List getSearchablesInGlobalSearch()> 
<org.apache.harmony.xnet.provider.jsse.ClientKeyExchange: int getType()> 
<android.test.InstrumentationTestRunner: java.lang.String getCoverageFilePath()> 
<org.apache.xpath.VariableStack: org.apache.xpath.objects.XObject getLocalVariable(org.apache.xpath.XPathContext,int)> 
<android.os.RecoverySystem: java.util.HashSet getTrustedCerts(java.io.File)> 
<android.renderscript.ScriptIntrinsicColorMatrix: android.renderscript.Script$KernelID getKernelID()> 
<org.apache.xalan.transformer.TransformerImpl: int getRecursionLimit()> 
<android.filterpacks.base.FrameBranch: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<org.apache.http.impl.conn.SingleClientConnManager: org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry()> 
<java.security.Provider: java.lang.String getName()> 
<gov.nist.javax.sip.address.SipUri: java.util.Iterator getHeaderNames()> 
<org.apache.xml.utils.UnImplNode: org.w3c.dom.Node getPreviousSibling()> 
<java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)> 
<org.jivesoftware.smack.packet.LoginResponse: long getServerTimestamp()> 
<android.view.inputmethod.InputMethodSubtype: int getNameResId()> 
<java.util.concurrent.Phaser: int getArrivedParties()> 
<android.filterfw.core.VertexFrame: float[] getFloats()> 
<org.apache.xml.dtm.ref.SecuritySupport: java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader)> 
<android.view.View: float getPivotY()> 
<android.view.View: float getPivotX()> 
<java.util.zip.ZipEntry: long getCompressedSize()> 
<android.os.Environment: java.io.File getSystemSecureDirectory()> 
<android.widget.DialerFilter: int getMode()> 
<org.apache.xpath.axes.ReverseAxesWalker: int getNextNode()> 
<android.text.DynamicLayout: int getLineCount()> 
<android.test.suitebuilder.TestMethod: java.lang.String getName()> 
<org.jivesoftware.smack.packet.LoginResponse: java.util.Map getSettings()> 
<org.apache.xml.serializer.SecuritySupport: java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader)> 
<android.renderscript.Allocation: android.view.Surface getSurface()> 
<junit.framework.ComparisonFailure: java.lang.String getActual()> 
<org.apache.xalan.templates.AVT: org.apache.xml.utils.FastStringBuffer getBuffer()> 
<android.graphics.Bitmap: int getScaledHeight(android.graphics.Canvas)> 
<android.bluetooth.BluetoothDevice: android.os.ParcelUuid[] getUuids()> 
<android.support.v4.app.DialogFragment: int getTheme()> 
<android.app.ApplicationPackageManager: java.lang.String getInstallerPackageName(java.lang.String)> 
<android.widget.AlphabetIndexer: int getSectionForPosition(int)> 
<java.util.concurrent.LinkedBlockingDeque: java.lang.Object getFirst()> 
<javax.security.auth.Subject: java.util.Set getPublicCredentials(java.lang.Class)> 
<javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)> 
<org.apache.commons.io.input.NullInputStream: long getSize()> 
<android.view.ViewGroup: android.view.View getChildAt(int)> 
<android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)> 
<android.webkit.WebBackForwardListClassic: android.webkit.WebHistoryItem getItemAtIndex(int)> 
<org.xml.sax.helpers.XMLFilterImpl: org.xml.sax.EntityResolver getEntityResolver()> 
<org.apache.xalan.templates.ElemExsltFunction: java.lang.String getNodeName()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: java.lang.Object getFeature(java.lang.String,java.lang.String)> 
<android.text.Layout: int getLineVisibleEnd(int,int,int)> 
<org.apache.xalan.templates.ElemNumber: org.apache.xpath.XPath getValue()> 
<org.apache.xml.utils.StringToIntTable: int getLength()> 
<java.io.ObjectInputStream: java.lang.Object readUnshared()> 
<org.apache.james.mime4j.message.Entity: java.lang.String getMimeType()> 
<android.webkit.URLUtil: java.lang.String parseContentDisposition(java.lang.String)> 
<android.widget.LinearLayout: int getChildrenSkipCount(android.view.View,int)> 
<java.sql.DriverManager: java.sql.Driver getDriver(java.lang.String)> 
<org.jivesoftware.smack.sasl.SASLPlainMechanism: java.lang.String getChallengeResponse(byte[])> 
<android.net.TrafficStats: long getTxBytes(java.lang.String)> 
<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)> 
<android.view.MotionEvent: float getHistoricalAxisValue(int,int,int)> 
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentLengthHeader getContentLengthHeader()> 
<org.apache.xml.dtm.ref.ExpandedNameTable: int getNamespaceID(int)> 
<android.widget.ImageView: android.graphics.Matrix getImageMatrix()> 
<android.media.MediaCodec: android.media.MediaCodec createDecoderByType(java.lang.String)> 
<org.apache.harmony.security.asn1.BerInputStream: java.lang.Object get(java.lang.Object)> 
<android.os.Debug: int getThreadExternalAllocCount()> 
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: java.util.Collection getExclusiveQueuedThreads()> 
<org.apache.xalan.templates.ElemWithParam: org.apache.xpath.XPath getSelect()> 
<java.security.PrivilegedActionException: java.lang.Throwable getCause()> 
<android.net.http.HttpResponseCache: java.net.CacheResponse get(java.net.URI,java.lang.String,java.util.Map)> 
<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest getLastAckSent()> 
<org.apache.harmony.xnet.provider.jsse.NativeCrypto: java.lang.String[] getDefaultProtocols()> 
<java.security.cert.CertPathBuilder: java.security.Provider getProvider()> 
<android.content.SyncStorageEngine: android.content.SyncStorageEngine$AuthorityInfo getOrCreateAuthorityLocked(android.accounts.Account,int,java.lang.String,int,boolean)> 
<org.apache.james.mime4j.BodyDescriptor: java.lang.String getMimeType()> 
<android.app.SharedPreferencesImpl: boolean getBoolean(java.lang.String,boolean)> 
<gov.nist.javax.sip.stack.SIPClientTransaction: javax.sip.message.Request createErrorAck()> 
<android.widget.TextView: android.text.TextUtils$TruncateAt getEllipsize()> 
<java.nio.HeapByteBuffer: float getFloat()> 
<org.apache.http.impl.cookie.BasicClientCookie: int getVersion()> 
<gov.nist.javax.sip.address.TelURLImpl: java.lang.String getPhoneNumber()> 
<android.app.ApplicationPackageManager: android.content.res.XmlResourceParser getXml(java.lang.String,int,android.content.pm.ApplicationInfo)> 
<org.jivesoftware.smack.RosterEntry: java.lang.String getAbbreviatedUser()> 
<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Entity getParent()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: java.lang.String getTextContent()> 
<android.widget.AppSecurityPermissions: void loadResources()> 
<org.apache.http.ProtocolVersion: int getMinor()> 
<org.apache.xalan.transformer.Counter: int getLast()> 
<android.app.backup.BackupDataInput: boolean readNextHeader()> 
<gov.nist.javax.sip.stack.SIPDialog: int getRemoteSequenceNumber()> 
<android.net.sip.SipAudioCall: android.net.sip.SipProfile getLocalProfile()> 
<org.apache.xalan.templates.Stylesheet: java.lang.Object getNonXslTopLevel(org.apache.xml.utils.QName)> 
<org.apache.xpath.functions.FunctionDef1Arg: org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)> 
<android.app.ActivityManagerProxy: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)> 
<org.apache.james.mime4j.field.datetime.DateTime: int getYear()> 
<org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)> 
<java.nio.FloatArrayBuffer: java.nio.FloatBuffer get(float[],int,int)> 
<android.telephony.gsm.SmsMessage: int getStatusOnIcc()> 
<android.content.ContentResolver: android.content.ContentResolver$OpenResourceIdResult getResourceId(android.net.Uri)> 
<android.view.inputmethod.InputBinding: int getPid()> 
<android.widget.AutoCompleteTextView: int getListSelection()> 
<android.support.v4.app.BackStackRecord: int getBreadCrumbShortTitleRes()> 
<android.media.AudioService: int getLastAudibleMasterVolume()> 
<jp.co.omronsoft.openwnn.JAJP.OpenWnnClauseConverterJAJP: java.util.ArrayList getIndependentWords(java.lang.String,boolean)> 
<android.content.pm.ContainerEncryptionParams: java.lang.String getEncryptionAlgorithm()> 
<org.apache.xml.utils.SecuritySupport12: java.io.FileInputStream getFileInputStream(java.io.File)> 
<android.net.sip.SipSession: java.lang.String getCallId()> 
<org.apache.commons.io.FileCleaner: org.apache.commons.io.FileCleaningTracker getInstance()> 
<org.apache.james.mime4j.message.Message: org.apache.james.mime4j.field.UnstructuredField getSubject()> 
<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.Dialog getDialog()> 
<android.database.CursorWindow: byte[] getBlob(int,int)> 
<libcore.net.http.HttpsURLConnectionImpl: java.lang.Object getContent()> 
<android.widget.RatingBar: float getRating()> 
<org.apache.james.mime4j.field.DelegatingFieldParser: org.apache.james.mime4j.field.FieldParser getParser(java.lang.String)> 
<gov.nist.javax.sip.address.TelephoneNumber: java.util.Iterator getParameterNames()> 
<libcore.net.http.HttpsURLConnectionImpl: boolean getUseCaches()> 
<android.renderscript.Program: int getConstantCount()> 
<android.webkit.WebView: java.lang.String getUrl()> 
<gov.nist.javax.sip.header.ReplyTo: java.lang.String getDisplayName()> 
<java.net.MulticastSocket: byte getTTL()> 
<java.nio.HeapByteBuffer: void get(char[],int,int)> 
<java.security.CodeSource: java.security.CodeSigner[] getCodeSigners()> 
<android.app.DatePickerDialog: android.widget.DatePicker getDatePicker()> 
<android.hardware.input.InputManager: int getPointerSpeed(android.content.Context)> 
<javax.net.ssl.SSLContext: javax.net.ssl.SSLSessionContext getClientSessionContext()> 
<gov.nist.javax.sip.header.AcceptLanguage: java.lang.String getLanguageRange()> 
<org.apache.james.mime4j.BodyDescriptor: java.lang.String getTransferEncoding()> 
<org.apache.http.impl.conn.SingleClientConnManager: org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object)> 
<android.server.search.Searchables: java.util.ArrayList getSearchablesInGlobalSearchList()> 
<gov.nist.javax.sip.header.AllowList: java.util.ListIterator getMethods()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: int getNumberOfNodes()> 
<libcore.io.ForwardingOs: libcore.io.StructPasswd getpwuid(int)> 
<java.util.concurrent.Semaphore: java.util.Collection getQueuedThreads()> 
<org.apache.xpath.compiler.OpMap: java.lang.String getPatternString()> 
<java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)> 
<java.security.Signature: java.security.Signature getInstance(java.lang.String)> 
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: int getApplicationBufferSize()> 
<android.drm.DrmManagerClient: android.content.ContentValues getMetadata(java.lang.String)> 
<android.renderscript.ScriptIntrinsicYuvToRGB: android.renderscript.Script$FieldID getFieldID_Input()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getFirstAttribute(int)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: java.math.BigInteger getModulus()> 
<android.content.ContextWrapper: android.content.Context getBaseContext()> 
<org.apache.harmony.xml.dom.DocumentImpl: java.lang.String getNodeName()> 
<android.widget.SearchView: int getMaxWidth()> 
<android.telephony.CellInfo: int getTimeStampType()> 
<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getHost()> 
<javax.crypto.spec.OAEPParameterSpec: javax.crypto.spec.PSource getPSource()> 
<org.apache.http.cookie.CookieSpecRegistry: org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String)> 
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,android.os.Bundle)> 
<java.text.BreakIterator: java.text.BreakIterator getLineInstance()> 
<java.net.Authenticator: java.net.Authenticator$RequestorType getRequestorType()> 
<android.view.ViewDebug: java.lang.reflect.Field[] getExportedPropertyFields(java.lang.Class)> 
<android.content.res.TypedArray: boolean getBoolean(int,boolean)> 
<org.apache.commons.io.FileUtils: java.lang.String decodeUrl(java.lang.String)> 
<org.apache.harmony.security.x509.InfoAccessSyntax: byte[] getEncoded()> 
<org.apache.harmony.xml.dom.InnerNodeImpl: void getTextContent(java.lang.StringBuilder)> 
<net.oauth.OAuthMessage: java.util.Map getDump()> 
<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCache$ServiceInfo getServiceInfo(java.lang.Object,int)> 
<android.os.Process: int getUidForPid(int)> 
<android.widget.ProgressBar: android.view.animation.Interpolator getInterpolator()> 
<android.nfc.tech.MifareUltralight: android.nfc.Tag getTag()> 
<javax.obex.ServerOperation: int getMaxPacketSize()> 
<android.app.ApplicationPackageManager: int getUidForSharedUser(java.lang.String)> 
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getMaxEntries()> 
<org.apache.james.mime4j.message.Multipart: java.util.List getBodyParts()> 
<android.widget.AdapterViewFlipper: int getFlipInterval()> 
<jp.co.omronsoft.openwnn.DefaultSoftKeyboard: jp.co.omronsoft.openwnn.Keyboard getKeyboardInputed(boolean)> 
<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getNodeName()> 
<java.util.ArrayDeque: java.lang.Object getFirst()> 
<android.database.AbstractWindowedCursor: long getLong(int)> 
<android.content.CursorLoader: java.lang.String[] getProjection()> 
<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.XSLTElementProcessor getCurrentProcessor()> 
<android.security.AndroidKeyPairGeneratorSpec: java.util.Date getStartDate()> 
<android.widget.TextView: java.lang.CharSequence getTextForAccessibility()> 
<android.view.animation.AccelerateDecelerateInterpolator: float getInterpolation(float)> 
<java.net.HttpCookie: java.lang.String getValue()> 
<android.webkit.CookieManagerClassic: java.lang.String getCookie(java.lang.String,boolean)> 
<jp.co.omronsoft.openwnn.JAJP.OpenWnnEngineJAJP: jp.co.omronsoft.openwnn.WnnWord[] getUserDictionaryWords()> 
<android.text.SpannableString: int getSpanStart(java.lang.Object)> 
<libcore.util.ZoneInfoDB: java.util.TimeZone getSystemDefault()> 
<gov.nist.core.GenericObject: java.lang.String getIndentation()> 
<org.apache.xpath.compiler.Lexer: int getKeywordToken(java.lang.String)> 
<android.opengl.EGLObjectHandle: int getHandle()> 
<android.text.method.MultiTapKeyListener: int getInputType()> 
<org.jivesoftware.smack.PacketReader: java.util.Collection parseMechanisms(org.xmlpull.v1.XmlPullParser)> 
<android.media.AudioRecord: int getRecordingState()> 
<org.apache.xml.dtm.ref.DTMNodeIterator: org.w3c.dom.Node getRoot()> 
<org.apache.xml.dtm.DTMManager: org.apache.xml.utils.XMLStringFactory getXMLStringFactory()> 
<android.media.videoeditor.MediaArtistNativeHelper: int getTransitionResolution(android.media.videoeditor.MediaItem,android.media.videoeditor.MediaItem)> 
<android.os.Bundle: int[] getIntArray(java.lang.String)> 
<org.apache.xpath.objects.XStringForChars: void getChars(int,int,char[],int)> 
<android.net.LocalSocket: android.net.LocalSocketAddress getLocalSocketAddress()> 
<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler getSerializationHandler()> 
<org.apache.xalan.templates.ElemValueOf: java.lang.String getNodeName()> 
<android.preference.Preference: int getWidgetLayoutResource()> 
<android.text.method.WordIterator: int getEnd(int)> 
<android.text.Selection: int getSelectionStart(java.lang.CharSequence)> 
<android.widget.TextClock: java.lang.String getTimeZone()> 
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLetters(android.content.ComponentName,int)> 
<android.support.v4.view.AccessibilityDelegateCompatJellyBean: java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View)> 
<android.net.http.HttpResponseCache: int getRequestCount()> 
<android.telephony.SignalStrength: int getLevel()> 
<android.filterpacks.imageproc.CropFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<android.media.AudioRecord: int read(short[],int,int)> 
<org.apache.xalan.templates.ElemElement: int getXSLToken()> 
<org.apache.harmony.xml.dom.ElementImpl: java.lang.String getLocalName()> 
<android.text.method.BaseMovementMethod: int getInnerHeight(android.widget.TextView)> 
<jp.co.omronsoft.openwnn.TextCandidates1LineViewManager: int getViewType()> 
<android.filterpacks.imageproc.Invert: android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)> 
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int getWindowId()> 
<android.webkit.WebViewClassic: android.net.http.SslCertificate getCertificate()> 
<org.apache.xml.utils.SAXSourceLocator: int getLineNumber()> 
<android.gesture.GestureOverlayView: android.gesture.Gesture getGesture()> 
<android.location.Geofence: int getType()> 
<org.apache.harmony.security.SystemScope: java.security.Identity getIdentity(java.security.PublicKey)> 
<android.webkit.ZoomManager: float getInvDefaultScale()> 
<android.net.sip.SipAudioCall: android.net.sip.SipProfile getPeerProfile(android.net.sip.SipSession)> 
<java.util.zip.Deflater: long getBytesRead()> 
<org.apache.xpath.objects.XBoolean: int getType()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: org.w3c.dom.Node getFirstChild()> 
<libcore.net.http.HttpURLConnectionImpl: int getResponseCode()> 
<android.webkit.WebSettings: int getDefaultFixedFontSize()> 
<android.media.videoeditor.Overlay: java.util.Map getUserAttributes()> 
<android.webkit.WebHistoryItem: java.lang.String getUrl()> 
<android.view.ViewConfiguration: int getEdgeSlop()> 
<junit.runner.BaseTestRunner: junit.runner.TestSuiteLoader getLoader()> 
<org.apache.xalan.processor.XSLTElementDef: boolean getRequiredFound()> 
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: java.io.FileDescriptor getFileDescriptor$()> 
<android.widget.Editor: android.widget.Editor$PositionListener getPositionListener()> 
<libcore.net.url.JarURLConnectionImpl: java.lang.Object getContent()> 
<org.apache.http.cookie.CookieOrigin: java.lang.String getPath()> 
<android.view.View: int getBottom()> 
<org.apache.xpath.objects.XRTreeFrag: int getType()> 
<org.apache.xalan.templates.NamespaceAlias: java.lang.String getResultPrefix()> 
<java.beans.PropertyChangeListenerProxy: java.lang.String getPropertyName()> 
<org.apache.xml.serializer.dom3.NamespaceSupport: java.util.Enumeration getAllPrefixes()> 
<android.media.videoeditor.MediaImageItem: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings getImageClipProperties()> 
<org.apache.harmony.security.provider.cert.X509CertImpl: java.util.List getExtendedKeyUsage()> 
<android.widget.LinearLayout: int getOrientation()> 
<org.apache.http.client.methods.HttpGet: java.lang.String getMethod()> 
<android.webkit.DateSorter: java.lang.String getLabel(int)> 
<android.graphics.Bitmap: int getByteCount()> 
<org.apache.xalan.templates.ElemUse: org.apache.xml.utils.QName[] getUseAttributeSets()> 
<android.webkit.WebViewCore: android.webkit.WebViewInputDispatcher$WebKitCallbacks getInputDispatcherCallbacks()> 
<android.graphics.drawable.ShapeDrawable: int getChangingConfigurations()> 
<javax.security.auth.x500.X500Principal: java.lang.String getName(java.lang.String)> 
<org.jivesoftware.smack.XMPPConnection: java.net.InetAddress getInetAddress()> 
<libcore.net.http.HttpsURLConnectionImpl: boolean getDoInput()> 
<org.apache.xpath.objects.DTMXRTreeFrag: org.apache.xpath.XPathContext getXPathContext()> 
<android.support.v4.view.ViewCompatHC: int getLayerType(android.view.View)> 
<android.view.GLES20Layer: int getLayer()> 
<android.widget.SimpleExpandableListAdapter: android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)> 
<java.net.URI: java.lang.String getScheme()> 
<org.apache.xalan.templates.DecimalFormatProperties: int getXSLToken()> 
<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.ElemTemplate getDefaultTextRule()> 
<org.apache.http.params.AbstractHttpParams: int getIntParameter(java.lang.String,int)> 
<android.widget.BaseExpandableListAdapter: long getCombinedGroupId(long)> 
<android.view.inputmethod.InputMethodSubtype: java.lang.String getExtraValueOf(java.lang.String)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.lang.String getPeerHostName()> 
<org.apache.james.mime4j.message.Entity: org.apache.james.mime4j.message.Header getHeader()> 
<android.view.animation.Animation: float getScaleFactor()> 
<android.net.http.HttpAuthHeader: java.lang.String parseScheme(java.lang.String)> 
<org.kxml2.io.KXmlParser: java.lang.String getInputEncoding()> 
<java.util.zip.Deflater: int getTotalIn()> 
<java.text.DateFormat: java.util.TimeZone getTimeZone()> 
<gov.nist.javax.sip.address.SipUri: java.lang.String getTransportParam()> 
<android.database.BulkCursorToCursorAdaptor: android.os.Bundle getExtras()> 
<javax.security.cert.X509Certificate: javax.security.cert.X509Certificate getInstance(java.io.InputStream)> 
<android.support.v4.app.Fragment: android.view.View getView()> 
<gov.nist.javax.sip.header.SIPHeader: java.lang.String getName()> 
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getPackageName()> 
<android.support.v4.app.TaskStackBuilder: int getIntentCount()> 
<org.apache.harmony.xml.parsers.SAXParserImpl: java.lang.Object getProperty(java.lang.String)> 
<java.net.Socket: java.net.SocketAddress getRemoteSocketAddress()> 
<org.apache.harmony.security.PrivateKeyImpl: byte[] getEncoded()> 
<android.widget.AbsListView: android.graphics.drawable.Drawable getSelector()> 
<org.apache.xalan.templates.ElemAttributeSet: int getXSLToken()> 
<android.net.NetworkInfo: java.lang.String getExtraInfo()> 
<android.net.LocalServerSocket: android.net.LocalSocketAddress getLocalSocketAddress()> 
<android.widget.NumberPicker: int getSelectedPos(java.lang.String)> 
<android.webkit.WebViewClassic: android.webkit.WebViewProvider$ViewDelegate getViewDelegate()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPublicKey: java.math.BigInteger getModulus()> 
<android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()> 
<org.apache.xml.dtm.ref.DTMNodeProxy: boolean getXmlStandalone()> 
<android.view.GLES20Canvas: int getMaximumBitmapWidth()> 
<libcore.net.http.RawHeaders: java.lang.String getResponseMessage()> 
<java.util.concurrent.atomic.AtomicMarkableReference: java.lang.Object get(boolean[])> 
<org.apache.http.impl.io.ChunkedInputStream: int read(byte[],int,int)> 
<android.view.MotionEvent: float getOrientation()> 
<java.util.zip.ZipEntry: long getCrc()> 
<android.provider.Settings: java.lang.String getGTalkDeviceId(long)> 
<android.content.pm.PackageParser: android.content.pm.PackageParser$Package parsePackage(java.io.File,java.lang.String,android.util.DisplayMetrics,int)> 
<android.os.Environment: java.io.File getEmulatedStorageObbSource()> 
<android.view.inputmethod.InputConnectionWrapper: int getCursorCapsMode(int)> 
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: boolean getTcpNoDelay()> 
<android.app.admin.DeviceAdminInfo: java.lang.String getPackageName()> 
<android.view.MotionEvent: float getHistoricalX(int,int)> 
<android.text.method.DigitsKeyListener: int getInputType()> 
<android.view.MotionEvent: float getHistoricalY(int,int)> 
<org.apache.xalan.templates.ElemParam: java.lang.String getNodeName()> 
<android.telephony.gsm.SmsMessage: long getTimestampMillis()> 
<android.os.storage.StorageVolume: int getMtpReserveSpace()> 
<android.webkit.WebSettingsClassic: android.webkit.WebSettings$PluginState getPluginState()> 
<android.net.http.Headers: java.lang.String getLocation()> 
<gov.nist.javax.sip.header.TimeStamp: java.lang.String getDelayAsString()> 
<gov.nist.javax.sip.message.SIPRequest: java.lang.String getCannonicalName(java.lang.String)> 
<android.webkit.WebViewFactory: android.webkit.WebViewFactoryProvider getProvider()> 
<org.apache.commons.io.input.NullInputStream: long getPosition()> 
<android.telephony.gsm.SmsMessage: byte[] getUserData()> 
<java.lang.reflect.Field: java.lang.annotation.Annotation[] getDeclaredAnnotations()> 
<gov.nist.javax.sip.header.CSeq: int getSequenceNumber()> 
<android.util.JsonReader: java.lang.CharSequence getSnippet()> 
<org.apache.http.impl.client.DefaultProxyAuthenticationHandler: java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)> 
<android.app.Presentation: android.view.Display getDisplay()> 
<org.kxml2.io.KXmlParser: void readInternalSubset()> 
<android.media.audiofx.Equalizer: java.lang.String getPresetName(short)> 
<org.apache.xpath.functions.FuncPosition: int getPositionInContextNodeList(org.apache.xpath.XPathContext)> 
<java.net.Socket: boolean getTcpNoDelay()> 
<android.content.ContentResolver: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)> 
<android.webkit.WebSettingsClassic: java.lang.String getSerifFontFamily()> 
<android.hardware.usb.UsbDevice: android.hardware.usb.UsbInterface getInterface(int)> 
<android.webkit.ZoomControlExternal: android.webkit.ZoomControlExternal$ExtendedZoomControls createZoomControls()> 
<org.apache.http.HttpHost: int getPort()> 
<java.util.UnknownFormatFlagsException: java.lang.String getFlags()> 
<android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs: java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo)> 
<android.text.Layout: int getOffsetToLeftOf(int)> 
<android.test.SimpleCache: java.lang.Object get(java.lang.Object)> 
<android.content.pm.PackageParser: android.content.pm.VerifierInfo parseVerifier(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,int,java.lang.String[])> 
<android.accounts.AccountManagerService: android.accounts.AccountAndUser[] getRunningAccounts()> 
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()> 
<android.support.v4.content.Loader: void onStopLoading()> 
<gov.nist.javax.sip.header.SIPDate: int getMinute()> 
<android.webkit.WebViewClassic: void loadUrl(java.lang.String)> 
<java.util.ArrayList: java.lang.Object get(int)> 
<java.lang.ref.PhantomReference: java.lang.Object get()> 
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInScreen(android.graphics.Rect)> 
<android.text.method.AllCapsTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)> 
<java.util.concurrent.locks.ReentrantReadWriteLock: int getWriteHoldCount()> 
<org.apache.harmony.security.x501.Name: byte[] getEncoded()> 
<android.os.UserHandle: int getSharedAppGid(int)> 
<org.apache.xml.serializer.Version: java.lang.String getVersion()> 
<android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawables()> 
<android.widget.LinearLayout: int getDividerWidth()> 
<java.security.spec.ECParameterSpec: java.security.spec.EllipticCurve getCurve()> 
<android.mtp.MtpObjectInfo: int getThumbPixWidth()> 
<android.view.InputDevice: int getGeneration()> 
<android.media.RemoteControlClient: android.media.IAudioService getService()> 
<android.os.Debug: int getThreadGcInvocationCount()> 
<android.media.videoeditor.VideoEditorImpl: java.util.List getAllAudioTracks()> 
<android.view.View: boolean getFitsSystemWindows()> 
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.lang.String[] getEnabledCipherSuites()> 
<org.apache.http.message.BasicLineParser: org.apache.http.RequestLine parseRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)> 
<android.view.inputmethod.InputMethodInfo: java.lang.String getId()> 
<java.util.Locale: java.lang.String getDisplayCountry()> 
<java.util.concurrent.ForkJoinPool: int getRunningThreadCount()> 
<org.apache.http.util.VersionInfo: java.lang.String getClassloader()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLKey: org.apache.harmony.xnet.provider.jsse.OpenSSLEngine getEngine()> 
<android.media.RemoteControlClient: int getRcseId()> 
<android.widget.TextView: int getVerticalOffset(boolean)> 
<org.apache.http.util.EncodingUtils: java.lang.String getAsciiString(byte[])> 
<android.support.v4.app.BackStackRecord: java.lang.String getName()> 
<android.widget.AutoCompleteTextView: android.widget.AdapterView$OnItemSelectedListener getItemSelectedListener()> 
<org.jivesoftware.smack.RosterEntry: java.lang.String getUser()> 
<org.apache.xml.utils.res.XResourceBundle: java.lang.Object[][] getContents()> 
<android.os.Environment: android.os.storage.StorageVolume getPrimaryVolume()> 
<org.apache.xalan.processor.XSLTAttributeDef: java.lang.Class getPrimativeClass(java.lang.Object)> 
<java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)> 
<android.app.SearchableInfo: int getVoiceLanguageModeId()> 
<android.bluetooth.BluetoothDevice: java.lang.String getName()> 
<org.apache.xml.dtm.ref.SecuritySupport12: java.io.FileInputStream getFileInputStream(java.io.File)> 
<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()> 
<android.net.rtp.AudioGroup: android.net.rtp.AudioStream[] getStreams()> 
<android.widget.HorizontalScrollView: int getMaxScrollAmount()> 
<android.widget.TableRow: int getChildrenSkipCount(android.view.View,int)> 
<org.apache.commons.io.filefilter.AndFileFilter: java.util.List getFileFilters()> 
<javax.xml.datatype.Duration: int getMinutes()> 
<java.io.ObjectInputStream: double readDouble()> 
<java.util.concurrent.ForkJoinPool: java.util.concurrent.ForkJoinPool$ForkJoinWorkerThreadFactory getFactory()> 
<java.nio.DirectByteBuffer: void get(int[],int,int)> 
<org.jivesoftware.smack.packet.DefaultPacketExtension: java.lang.String getAttributeValue(java.lang.String)> 
<android.content.ContentProvider: java.lang.String getReadPermission()> 
<gov.nist.javax.sip.stack.SIPDialog: long getLocalSeqNumber()> 
<org.apache.xalan.templates.ElemLiteralResult: java.lang.String getPrefix()> 
<android.content.ContentValues: java.lang.Boolean getAsBoolean(java.lang.String)> 
<org.apache.harmony.security.asn1.ASN1SequenceOf: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)> 
<android.media.MediaFile: int getFormatCode(java.lang.String,java.lang.String)> 
<java.nio.NioUtils: int getDirectBufferAddress(java.nio.Buffer)> 
<android.emoji.EmojiFactory: int getAndroidPuaFromVendorSpecificSjis(char)> 
<org.apache.harmony.security.provider.cert.Cache: long getSuffHash(byte[])> 
<android.test.mock.MockPackageManager: java.lang.CharSequence getText(java.lang.String,int,android.content.pm.ApplicationInfo)> 
<java.util.AbstractSequentialList: java.lang.Object get(int)> 
<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo getCurrentInputEditorInfo()> 
<org.apache.xml.serializer.SecuritySupport12: java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader)> 
<libcore.net.http.HttpResponseCache: int getWriteAbortCount()> 
<java.util.LinkedList: java.lang.Object get(int)> 
<java.util.MissingFormatArgumentException: java.lang.String getMessage()> 
<org.apache.xpath.axes.FilterExprWalker: org.apache.xpath.Expression getInnerExpression()> 
<org.apache.harmony.xml.dom.ElementImpl: org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)> 
<java.security.cert.X509CertSelector: javax.security.auth.x500.X500Principal getSubject()> 
<android.widget.RatingBar: android.widget.RatingBar$OnRatingBarChangeListener getOnRatingBarChangeListener()> 
<org.jivesoftware.smackx.packet.MUCUser: org.jivesoftware.smackx.packet.MUCUser$Status getStatus()> 
<java.nio.HeapByteBuffer: void get(short[],int,int)> 
<android.mtp.MtpDevice: long getStorageId(int)> 
<android.support.v4.view.ViewCompatHC: long getFrameTime()> 
<android.telephony.CellSignalStrengthCdma: int getCdmaLevel()> 
<android.appwidget.AppWidgetHostView: android.view.View getErrorView()> 
<android.net.UrlQuerySanitizer: java.util.List getParameterList()> 
<android.content.SyncStorageEngine: java.util.List getCurrentSyncs(int)> 
<android.net.MailTo: java.lang.String getBody()> 
<org.apache.xpath.objects.XMLStringFactoryImpl: org.apache.xml.utils.XMLStringFactory getFactory()> 
<android.text.BoringLayout: int getTopPadding()> 
<libcore.net.url.JarURLConnectionImpl: java.lang.String getContentType()> 
<java.io.PushbackReader: int read()> 
<org.apache.xml.serializer.CharInfo: org.apache.xml.serializer.CharInfo getCharInfoBasedOnPrivilege(java.lang.String,java.lang.String,boolean)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: java.net.SocketAddress getRemoteSocketAddress()> 
<android.support.v4.app.ListFragment: android.widget.ListAdapter getListAdapter()> 
<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)> 
<android.widget.ExpandableListView: long getSelectedId()> 
<android.widget.AppSecurityPermissions: int getPermissionCount(int)> 
<android.support.v4.app.Fragment: android.support.v4.app.LoaderManager getLoaderManager()> 
<org.apache.harmony.security.x509.tsp.TSTInfo: org.apache.harmony.security.x509.Extensions getExtensions()> 
<android.support.v4.app.DialogFragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)> 
<org.apache.xml.serializer.SecuritySupport: java.io.FileInputStream getFileInputStream(java.io.File)> 
<libcore.icu.CollationElementIteratorICU: int getMaxExpansion(int)> 
<java.io.ObjectInputStream: java.io.ObjectInputStream$GetField readFields()> 
<libcore.net.http.HttpsURLConnectionImpl: java.lang.String getContentEncoding()> 
<java.util.concurrent.Semaphore: int getQueueLength()> 
<android.content.pm.PackageParser: android.content.pm.PackageParser$Provider parseProvider(android.content.pm.PackageParser$Package,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,int,java.lang.String[])> 
<android.preference.PreferenceGroupAdapter: long getItemId(int)> 
<android.view.InputChannel: java.lang.String getName()> 
<android.test.mock.MockResources: java.lang.String getResourceEntryName(int)> 
<android.preference.Preference: boolean getShouldDisableView()> 
<android.view.Choreographer: long getFrameDelay()> 
<jp.co.omronsoft.openwnn.TextCandidatesViewManager: int getWordCount()> 
<android.graphics.drawable.InsetDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> 
<org.apache.xalan.templates.TemplateList: org.apache.xalan.templates.TemplateSubPatternAssociation getHead(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM)> 
<org.apache.harmony.xnet.provider.jsse.ConnectionState: int getPaddingSize(int)> 
<java.security.cert.X509CertSelector: int getBasicConstraints()> 
<org.apache.harmony.xml.parsers.DocumentBuilderImpl: void parse(org.kxml2.io.KXmlParser,org.apache.harmony.xml.dom.DocumentImpl,org.w3c.dom.Node,int)> 
<org.xml.sax.helpers.LocatorImpl: int getLineNumber()> 
<android.telephony.CellSignalStrengthLte: int getDbm()> 
<java.util.EventListenerProxy: java.util.EventListener getListener()> 
<org.apache.xalan.templates.ElemVariable: org.apache.xml.utils.QName getName()> 
<javax.obex.ClientOperation: long getLength()> 
<android.widget.AdapterViewAnimator: android.view.View getCurrentView()> 
<android.graphics.drawable.ColorDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> 
<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.Node getFirstChild()> 
<android.media.AudioManager: int getMode()> 
<android.media.Metadata: byte[] getByteArray(int)> 
<gov.nist.core.LogWriter: int getLineCount()> 
<android.text.method.ArrowKeyMovementMethod: android.text.method.MovementMethod getInstance()> 
<android.view.Display: int getHeight()> 
<android.os.Process: int getParentPid(int)> 
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getExpandedTypeID(java.lang.String,java.lang.String,int)> 
<org.apache.http.impl.io.ContentLengthInputStream: int read(byte[])> 
<android.media.ExifInterface: double getAttributeDouble(java.lang.String,double)> 
<android.content.ContextWrapper: java.io.File getFilesDir()> 
<android.hardware.usb.UsbEndpoint: int getAddress()> 
<org.xml.sax.InputSource: java.lang.String getEncoding()> 
<gov.nist.javax.sip.header.AuthenticationInfo: java.lang.String getNextNonce()> 
<org.apache.harmony.security.x509.CertificateList: org.apache.harmony.security.x509.TBSCertList getTbsCertList()> 
<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getTextAfterCursor(int,int)> 
<android.media.MediaRouter: int getRouteCount()> 
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script$KernelID getKernelIDSrcAtop()> 
<android.app.DialogFragment: boolean getShowsDialog()> 
<android.location.Location: double getAltitude()> 
<android.os.AsyncTask: java.lang.Object get()> 
<android.database.sqlite.SQLiteProgram: int getConnectionFlags()> 
<gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.message.Request createRequest(javax.sip.address.URI,java.lang.String,javax.sip.header.CallIdHeader,javax.sip.header.CSeqHeader,javax.sip.header.FromHeader,javax.sip.header.ToHeader,java.util.List,javax.sip.header.MaxForwardsHeader,byte[],javax.sip.header.ContentTypeHeader)> 
<android.view.MotionEvent: float getHistoricalSize(int,int)> 
<gov.nist.javax.sip.address.SipUri: java.lang.String getMethod()> 
<android.test.RenamingDelegatingContext: java.lang.String getDatabasePrefix()> 
<android.filterfw.core.VertexFrame: int getVboId()> 
<org.apache.harmony.xnet.provider.jsse.SSLEngineDataStream: byte[] getData(int)> 
<java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)> 
<android.widget.ListPopupWindow: int getAnimationStyle()> 
<org.apache.harmony.security.provider.cert.X509CertFactoryImpl: byte[] decodePEM(java.io.InputStream,byte[])> 
<java.net.Socket: java.net.InetAddress getInetAddress()> 
<java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String,java.security.Provider)> 
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()> 
<android.widget.RemoteViews: android.widget.RemoteViews getRemoteViewsToApply(android.content.Context)> 
<java.security.spec.RSAPrivateKeySpec: java.math.BigInteger getPrivateExponent()> 
<android.support.v4.view.ViewPager: int getCurrentItem()> 
<java.io.FileOutputStream: java.io.FileDescriptor getFD()> 
<android.webkit.WebViewCore: void loadUrl(java.lang.String,java.util.Map)> 
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getText()> 
<android.util.ReflectiveProperty: java.lang.Object get(java.lang.Object)> 
<android.widget.DatePicker: java.util.Calendar getCalendarForLocale(java.util.Calendar,java.util.Locale)> 
<android.filterfw.core.NativeBuffer: int getElementSize()> 
<android.view.ViewGroup: int getDescendantFocusability()> 
<android.widget.Editor: android.widget.Editor$SelectionModifierCursorController getSelectionController()> 
<java.util.ServiceLoader: void internalLoad()> 
<java.security.AccessControlContext: java.security.DomainCombiner getDomainCombiner()> 
<java.security.cert.CertPathBuilder: java.lang.String getAlgorithm()> 
<org.apache.xml.res.XMLErrorResources: java.lang.Object[][] getContents()> 
<android.inputmethodservice.Keyboard: java.util.List getKeys()> 
<android.content.pm.PackageParser: boolean parsePackageItemInfo(android.content.pm.PackageParser$Package,android.content.pm.PackageItemInfo,java.lang.String[],java.lang.String,android.content.res.TypedArray,int,int,int,int)> 
<android.media.MediaRouter: android.media.MediaRouter$RouteInfo getSelectedRoute(int)> 
<android.graphics.drawable.LayerDrawable: int getNumberOfLayers()> 
<android.webkit.PluginData: long getContentLength()> 
<java.lang.SecurityManager: boolean getInCheck()> 
<org.apache.harmony.security.pkcs8.PrivateKeyInfo: byte[] getPrivateKey()> 
<gov.nist.javax.sip.header.AuthenticationHeader: javax.sip.address.URI getURI()> 
<android.text.Layout: android.text.TextDirectionHeuristic getTextDirectionHeuristic()> 
<java.security.AccessControlException: java.security.Permission getPermission()> 
<android.graphics.drawable.Drawable: android.graphics.Region getTransparentRegion()> 
<android.webkit.WebView: void loadData(java.lang.String,java.lang.String,java.lang.String)> 
<gov.nist.javax.sip.header.AuthenticationInfo: int getNonceCount()> 
<android.content.res.AssetManager: java.lang.CharSequence getResourceText(int)> 
<android.content.ContentProvider: android.content.Context getContext()> 
<gov.nist.javax.sip.stack.TLSMessageChannel: int getPeerPacketSourcePort()> 
<java.nio.MappedByteBufferAdapter: float getFloat()> 
<android.content.res.Resources: java.lang.String getQuantityString(int,int)> 
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getStringValue()> 
<android.text.method.TextKeyListener: int getPrefs(android.content.Context)> 
<org.jivesoftware.smackx.packet.MUCUser: org.jivesoftware.smackx.packet.MUCUser$Decline getDecline()> 
<android.webkit.ZoomControlExternal: android.webkit.ZoomControlExternal$ExtendedZoomControls getControls()> 
<android.media.CameraProfile: int getJpegEncodingQualityParameter(int,int)> 
<libcore.icu.ICU: java.lang.String[] getISOCountries()> 
<android.database.MergeCursor: int getType(int)> 
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getClassName()> 
<org.apache.xpath.functions.FunctionOneArg: org.apache.xpath.Expression getExpression()> 
<org.ccil.cowan.tagsoup.CommandLine: int getopts(java.util.Hashtable,java.lang.String[])> 
<android.text.style.ImageSpan: android.graphics.drawable.Drawable getDrawable()> 
<org.apache.xalan.templates.OutputProperties: org.apache.xml.utils.QName getQNameProperty(java.lang.String)> 
<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.Node getNextSibling()> 
<android.view.View: int getSuggestedMinimumHeight()> 
<java.io.LineNumberReader: java.lang.String readLine()> 
<android.inputmethodservice.InputMethodService: int getCandidatesHiddenVisibility()> 
<android.graphics.drawable.AnimatedRotateDrawable: int getIntrinsicWidth()> 
<java.util.Calendar: java.util.Locale[] getAvailableLocales()> 
<android.graphics.Canvas: int getMaximumBitmapHeight()> 
<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.ClassLoader getContextClassLoaderInternal()> 
<android.view.KeyEvent: int getKeyboardDevice()> 
<android.media.CamcorderProfile: android.media.CamcorderProfile get(int,int)> 
<org.apache.xpath.operations.Variable: int getIndex()> 
<android.widget.CalendarView: boolean parseDate(java.lang.String,java.util.Calendar)> 
<android.telephony.cdma.CdmaCellLocation: int getBaseStationId()> 
<org.apache.xalan.templates.RedundentExprEliminator: org.apache.xalan.templates.ElemTemplateElement getElemFromExpression(org.apache.xpath.Expression)> 
<android.app.ContextImpl: java.io.File getPreferencesDir()> 
<java.security.ProtectionDomain: java.security.PermissionCollection getPermissions()> 
<android.test.mock.MockPackageManager: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity()> 
<android.hardware.usb.UsbAccessory: java.lang.String getUri()> 
<org.apache.james.mime4j.message.MemoryTextBody: java.io.Reader getReader()> 
<android.app.Activity: android.view.View getCurrentFocus()> 
<android.renderscript.Element: int getSubElementOffsetBytes(int)> 
<android.filterpacks.imageproc.FillLightFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()> 
<android.appwidget.AppWidgetManager: java.util.List getInstalledProviders()> 
<java.io.DataInputStream: double readDouble()> 
<gov.nist.javax.sip.header.ims.PUserDatabase: java.lang.String getDatabaseName()> 
<gov.nist.javax.sip.address.SipUri: java.lang.String getMAddrParam()> 
<android.view.GLES20Canvas: android.graphics.DrawFilter getDrawFilter()> 
<android.bluetooth.BluetoothHealth: java.util.List getDevicesMatchingConnectionStates(int[])> 
<android.bluetooth.BluetoothDevice: java.lang.String getAddress()> 
<android.mtp.MtpObjectInfo: int getImagePixDepth()> 
<org.apache.xpath.compiler.Compiler: org.apache.xpath.compiler.FunctionTable getFunctionTable()> 
<android.text.Layout: android.text.TextPaint getPaint()> 
<android.net.http.Request: java.lang.String getUri()> 
<android.view.animation.LayoutAnimationController: android.view.animation.Animation getAnimationForView(android.view.View)> 
<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.MediaItem getMediaItem(java.lang.String)> 
<android.widget.ProgressBar: android.graphics.drawable.shapes.Shape getDrawableShape()> 
<libcore.icu.RuleBasedCollatorICU: int getStrength()> 
<android.view.animation.AnimationSet: boolean getTransformation(long,android.view.animation.Transformation)> 
<javax.sip.ResponseEvent: javax.sip.Dialog getDialog()> 
<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)> 
<android.view.ViewConfiguration: int getScaledWindowTouchSlop()> 
<android.webkit.WebViewCore: android.webkit.WebSettingsClassic getSettings()> 
<android.hardware.display.WifiDisplay: java.lang.String getDeviceAddress()> 
<android.media.videoeditor.Transition: android.media.videoeditor.MediaItem getAfterMediaItem()> 
<org.apache.xpath.Expression: int getColumnNumber()> 
<android.support.v4.view.PagerTabStrip: int getTabIndicatorColor()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: byte[] getId()> 
<org.apache.harmony.security.provider.crypto.ThreeIntegerSequence: byte[] getEncoded()> 
<android.speech.srec.WaveHeader: int read(java.io.InputStream)> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: javax.xml.transform.SourceLocator getSourceLocatorFor(int)> 
<org.apache.xml.serializer.SerializerBase: java.lang.String getOutputPropertyDefault(java.lang.String)> 
<android.test.mock.MockPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)> 
<org.apache.xalan.processor.StylesheetHandler: org.apache.xml.utils.SAXSourceLocator getLocator()> 
<org.apache.xpath.XPathContext: javax.xml.transform.URIResolver getURIResolver()> 
<android.view.textservice.TextInfo: int getSequence()> 
<javax.obex.PasswordAuthentication: byte[] getUserName()> 
<javax.xml.datatype.Duration: int getSeconds()> 
<android.content.SyncAdapterType: java.lang.String getSettingsActivity()> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int getFirstAttributeIdentity(int)> 
<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.io.HttpMessageWriter createRequestWriter(org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams)> 
<android.support.v4.widget.SimpleCursorAdapter: int getStringConversionColumn()> 
<android.view.View: int getPaddingRight()> 
<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()> 
<org.apache.http.conn.routing.RouteTracker: java.net.InetAddress getLocalAddress()> 
<android.view.SoundEffectConstants: int getContantForFocusDirection(int)> 
<java.sql.Date: int getSeconds()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: int getSoWriteTimeout()> 
<android.support.v4.view.ViewPager: android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)> 
<android.view.View: int getSystemUiVisibility()> 
<android.webkit.WebViewCore: android.content.Context getContext()> 
<android.opengl.GLLogWrapper: java.lang.String getTextureTarget(int)> 
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: int getFromIndex(java.lang.Object)> 
<org.apache.xml.serializer.Encodings: java.lang.String getMimeEncoding(java.lang.String)> 
<android.widget.BaseExpandableListAdapter: int getGroupType(int)> 
<android.app.ContextImpl: android.content.res.Resources getResources()> 
<gov.nist.javax.sip.header.ParametersHeader: java.lang.String getMultiParameter(java.lang.String)> 
<android.content.ContentProvider: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)> 
<android.renderscript.FileA3D: int getIndexEntryCount()> 
<org.apache.xalan.templates.WhiteSpaceInfo: boolean getShouldStripSpace()> 
<org.apache.xalan.templates.ElemApplyTemplates: org.apache.xml.utils.QName getMode()> 
<jp.co.omronsoft.openwnn.OpenWnn: jp.co.omronsoft.openwnn.OpenWnn getCurrentIme()> 
<org.apache.xpath.objects.XNumber: int getType()> 
<android.test.mock.MockResources: android.graphics.Movie getMovie(int)> 
<org.apache.xalan.templates.ElemExtensionDecl: int getFunctionCount()> 
<android.view.View: android.view.ViewRootImpl getViewRootImpl()> 
<android.mtp.MtpStorageInfo: java.lang.String getDescription()> 
<org.kxml2.io.KXmlParser: java.lang.String getNamespaceUri(int)> 
<android.app.TabActivity: android.widget.TabHost getTabHost()> 
<org.apache.xpath.operations.Variable: boolean getGlobal()> 
<android.text.Layout: int getOffsetForHorizontal(int,float)> 
<android.content.pm.ContainerEncryptionParams: long getEncryptedDataStart()> 
<org.apache.harmony.security.asn1.ASN1Boolean: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> 
<org.xml.sax.helpers.LocatorImpl: int getColumnNumber()> 
<android.support.v4.app.Fragment: android.os.Bundle getArguments()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLEngine: int getEngineContext()> 
<android.text.method.TextKeyListener: int getInputType()> 
<org.apache.http.message.BasicRequestLine: org.apache.http.ProtocolVersion getProtocolVersion()> 
<android.widget.BaseAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)> 
<org.apache.xpath.axes.WalkerFactory: java.lang.String getAnalysisString(int)> 
<java.net.URL: java.lang.String getQuery()> 
<org.apache.xalan.transformer.TransformerHandlerImpl: javax.xml.transform.Transformer getTransformer()> 
<java.net.URI: java.lang.String getQuery()> 
<org.apache.xalan.templates.Stylesheet: int getDecimalFormatCount()> 
<net.oauth.ConsumerProperties: net.oauth.OAuthConsumer getConsumer(java.lang.String)> 
<android.view.KeyEvent: int getFlags()> 
<android.database.sqlite.SQLiteDatabase: int getVersion()> 
<android.app.admin.DevicePolicyManager: java.util.List getActiveAdmins()> 
<android.media.RingtoneManager: android.net.Uri getUriFromCursor(android.database.Cursor)> 
<android.widget.TextView: int getTopPaddingOffset()> 
<java.lang.Class: java.lang.Class[] getDeclaredClasses()> 
<java.beans.PropertyChangeEvent: java.lang.Object getNewValue()> 
<org.jivesoftware.smack.packet.Presence: int getCapabilityFlag()> 
<org.jivesoftware.smackx.packet.VCard: java.lang.String getLocalAvatarHash()> 
<java.sql.SQLClientInfoException: java.util.Map getFailedProperties()> 
<gov.nist.javax.sip.header.extensions.References: java.lang.String getRel()> 
<android.text.method.SingleLineTransformationMethod: android.text.method.SingleLineTransformationMethod getInstance()> 
<org.apache.james.mime4j.field.MailboxListField: org.apache.james.mime4j.field.address.MailboxList getMailboxList()> 
<android.widget.AppSecurityPermissions: android.view.View getPermissionItemView(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)> 
<android.text.SpannableStringInternal: void getChars(int,int,char[],int)> 
<android.widget.FrameLayout: int getPaddingBottomWithForeground()> 
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getUrlLegal()> 
<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x501.Name getIssuer()> 
<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager getInstance()> 
<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> 
<dalvik.system.profiler.BinaryHprofReader: dalvik.system.profiler.HprofData getHprofData()> 
<android.graphics.drawable.DrawableContainer: int getOpacity()> 
<android.view.ViewStub: int getInflatedId()> 
<org.apache.xml.utils.UnImplNode: org.w3c.dom.DocumentFragment createDocumentFragment()> 
<org.apache.xml.dtm.ref.SecuritySupport: java.io.FileInputStream getFileInputStream(java.io.File)> 
<android.view.View: android.view.View getRootView()> 
<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)> 
<android.text.style.StrikethroughSpan: int getSpanTypeId()> 
<org.apache.xpath.axes.PredicatedNodeTest: int getPredicateCount()> 
<org.apache.xalan.templates.ElemTemplateElement: boolean getXmlSpace()> 
<org.apache.harmony.xml.dom.TextImpl: java.lang.String getNodeName()> 
<android.net.sip.SipAudioCall: java.lang.String getLocalIp()> 
<java.net.Socks4Message: java.lang.String getString(int,int)> 
<java.net.URI: java.lang.String getRawUserInfo()> 
<java.lang.ThreadGroup: java.lang.ThreadGroup getParent()> 
<android.filterpacks.imageproc.BlendFilter: android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)> 
<android.view.VelocityTracker: float getYVelocity()> 
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.NodeList getChildNodes()> 
<java.text.ParseException: int getErrorOffset()> 
<android.util.XmlPullAttributes: java.lang.String getPositionDescription()> 
<org.apache.http.conn.params.ConnPerRouteBean: int getDefaultMaxPerRoute()> 
<java.util.logging.Logger: java.util.logging.Logger getAnonymousLogger()> 
<android.content.res.Configuration: int getLayoutDirection()> 
<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getViaHost()> 
<org.apache.commons.io.FileUtils: java.lang.String getUserDirectoryPath()> 
<gov.nist.javax.sip.header.SubscriptionState: int getRetryAfter()> 
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: java.security.SecureRandom getSecureRandomMember()> 
<android.telephony.ServiceState: int getCssIndicator()> 
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(boolean,boolean)> 
<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.lang.Thread getFirstQueuedThread()> 
<android.view.KeyCharacterMap: boolean getKeyData(int,android.view.KeyCharacterMap$KeyData)> 
<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean)> 
<org.apache.xml.utils.AttList: java.lang.String getURI(int)> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int getTypedAttribute(int,int)> 
<android.media.videoeditor.AudioTrack: int getAudioBitrate()> 
<android.content.res.TypedArray: float getFraction(int,int,int,float)> 
<android.view.animation.Animation: boolean getDetachWallpaper()> 
<android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()> 
<android.content.Loader: android.content.Context getContext()> 
<java.util.Calendar: java.util.TimeZone getTimeZone()> 
<android.filterfw.core.FilterPort: android.filterfw.core.FrameFormat getPortFormat()> 
<java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)> 
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CSeqHeader getCSeqHeader()> 
<org.apache.xalan.templates.KeyDeclaration: java.lang.String getNodeName()> 
<java.util.logging.Formatter: java.lang.String getHead(java.util.logging.Handler)> 
<android.webkit.CallbackProxy: android.webkit.WebViewClient getWebViewClient()> 
<org.jivesoftware.smack.provider.RawXmlExtensionProvider: org.jivesoftware.smack.packet.PacketExtension parseExtension(com.google.common.io.protocol.ProtoBuf)> 
<android.test.mock.MockPackageManager: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int)> 
<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int,double,double,double,double)> 
<android.text.SpannedString: java.lang.Object[] getSpans(int,int,java.lang.Class)> 
<android.net.wifi.WifiManager: int getWifiState()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPublicKey: byte[] getEncoded()> 
<android.hardware.Sensor: int getType()> 
<gov.nist.javax.sip.message.SIPMessage: java.lang.String getHeaderAsFormattedString(java.lang.String)> 
<android.net.sip.SipProfile: java.lang.String getProtocol()> 
<gov.nist.javax.sip.stack.DefaultRouter: javax.sip.address.Hop getOutboundProxy()> 
<android.database.sqlite.SQLiteProgram: java.lang.Object[] getBindArgs()> 
<dalvik.system.profiler.HprofData: java.util.Set getSamples()> 
<android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)> 
<android.app.Activity: android.view.MenuInflater getMenuInflater()> 
<org.apache.http.params.HttpConnectionParams: int getLinger(org.apache.http.params.HttpParams)> 
<libcore.net.http.ResponseHeaders: java.net.URI getUri()> 
<org.apache.xalan.transformer.TransformerHandlerImpl: java.lang.String getSystemId()> 
<android.view.inputmethod.BaseInputConnection: int getComposingSpanStart(android.text.Spannable)> 
<gov.nist.core.GenericObject: java.lang.Class getClassFromName(java.lang.String)> 
<android.telephony.gsm.SmsMessage: android.telephony.gsm.SmsMessage$MessageClass getMessageClass()> 
<org.apache.harmony.luni.lang.reflect.ListOfVariables: java.lang.reflect.TypeVariable[] getArray()> 
<gov.nist.javax.sip.header.RSeq: long getSeqNumber()> 
<android.media.videoeditor.MediaArtistNativeHelper: int getAspectRatio(int,int)> 
<org.apache.xpath.axes.NodeSequence: org.apache.xml.dtm.DTMIterator getContainedIter()> 
<android.filterpacks.imageproc.SaturateFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<org.apache.xml.dtm.SecuritySupport: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)> 
<android.webkit.ZoomManager: android.webkit.ZoomControlBase getCurrentZoomControl()> 
<org.jivesoftware.smack.packet.LoginRequest: java.lang.String getAuthToken()> 
<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int)> 
<android.widget.FastScroller: int getWidth()> 
<android.view.ViewConfiguration: int getScaledTouchSlop()> 
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: int getActions(java.lang.Object)> 
<java.io.ObjectStreamField: java.lang.String getName()> 
<org.apache.http.message.BasicStatusLine: org.apache.http.ProtocolVersion getProtocolVersion()> 
<org.apache.xml.serializer.SerializerBase: java.lang.String getNamespaceURI(java.lang.String,boolean)> 
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)> 
<android.widget.TabHost: android.view.View getCurrentView()> 
<android.hardware.usb.UsbEndpoint: int getDirection()> 
<android.view.inputmethod.InputMethodSubtype: java.lang.String getExtraValue()> 
<org.apache.xalan.templates.DecimalFormatProperties: org.apache.xml.utils.QName getName()> 
<android.hardware.SerialManager: java.lang.String[] getSerialPorts()> 
<android.content.res.Resources: android.graphics.drawable.Drawable loadDrawable(android.util.TypedValue,int)> 
<org.apache.harmony.security.provider.cert.X509CertImpl: byte[] getSignature()> 
<org.apache.http.message.HeaderGroup: org.apache.http.Header getCondensedHeader(java.lang.String)> 
<android.content.AsyncTaskLoader: boolean isLoadInBackgroundCanceled()> 
<android.filterfw.core.FrameFormat: java.lang.Object getMetaValue(java.lang.String)> 
<org.apache.http.message.AbstractHttpMessage: org.apache.http.Header[] getHeaders(java.lang.String)> 
<android.text.BoringLayout: boolean getLineContainsTab(int)> 
<android.view.inputmethod.InputMethodInfo: java.lang.String getSettingsActivity()> 
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.Stylesheet getInclude(int)> 
<android.net.http.Headers: java.lang.String getPragma()> 
<org.apache.harmony.security.provider.cert.X509CertImpl: java.security.PublicKey getPublicKey()> 
<java.util.logging.Logger: java.lang.String getResourceBundleName()> 
<java.security.Timestamp: java.util.Date getTimestamp()> 
<android.view.MotionEvent: float getHistoricalY(int)> 
<android.view.MotionEvent: float getHistoricalX(int)> 
<android.content.ContentValues: byte[] getAsByteArray(java.lang.String)> 
<java.lang.Long: java.lang.Long getLong(java.lang.String)> 
<jp.co.omronsoft.openwnn.TextCandidatesViewManager: jp.co.omronsoft.openwnn.WnnWord getFocusedWnnWord()> 
<android.widget.OverScroller: float getCurrVelocity()> 
<org.apache.xalan.processor.ProcessorLRE: org.apache.xalan.templates.Stylesheet getStylesheetRoot(org.apache.xalan.processor.StylesheetHandler)> 
<android.media.AudioRecord: int read(java.nio.ByteBuffer,int)> 
<javax.crypto.SealedObject: java.lang.String getAlgorithm()> 
<org.apache.xalan.templates.ElemTextLiteral: java.lang.String getNodeName()> 
<org.apache.xml.serializer.utils.URI: java.lang.String getSchemeSpecificPart()> 
<android.widget.ExpandableListView: android.graphics.drawable.Drawable getIndicator(android.widget.ExpandableListConnector$PositionMetadata)> 
<android.telephony.gsm.SmsMessage: int getStatusOnSim()> 
<org.apache.http.params.DefaultedHttpParams: java.util.Set getDefaultNames()> 
<android.widget.TextView: int getAutoLinkMask()> 
<android.bluetooth.BluetoothAdapter: java.util.Set getBondedDevices()> 
<android.telephony.NeighboringCellInfo: int getCid()> 
<org.apache.xml.utils.SystemIDResolver: java.lang.String getAbsoluteURIFromRelative(java.lang.String)> 
<android.database.MatrixCursor: float getFloat(int)> 
<java.security.KeyFactory: java.security.Provider getProvider()> 
<java.util.FormatFlagsConversionMismatchException: java.lang.String getFlags()> 
<android.view.inputmethod.InputMethodSubtype: int getIconResId()> 
<org.jivesoftware.smack.packet.DefaultPacketExtension: java.util.Iterator getNames()> 
<android.os.storage.StorageVolume: int getDescriptionId()> 
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int getConnectionsInPool()> 
<android.app.ListFragment: long getSelectedItemId()> 
<android.view.textservice.SpellCheckerSubtype: java.util.HashMap getExtraValueHashMap()> 
<java.security.cert.LDAPCertStoreParameters: int getPort()> 
<libcore.io.ForwardingOs: int getppid()> 
<org.apache.xalan.templates.ElemSort: java.lang.String getNodeName()> 
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()> 
<org.apache.xpath.axes.WalkingIterator: org.apache.xpath.axes.AxesWalker getFirstWalker()> 
<android.database.MatrixCursor: long getLong(int)> 
<android.view.TextureView: android.graphics.SurfaceTexture getSurfaceTexture()> 
<org.apache.xml.dtm.DTMException: java.lang.Throwable getCause()> 
<java.net.URLConnection: long getIfModifiedSince()> 
<android.webkit.HTML5VideoFullScreen: int getBufferPercentage()> 
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.ElemTemplate getTemplate(int)> 
<java.security.spec.RSAPrivateKeySpec: java.math.BigInteger getModulus()> 
<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager getDTMManager()> 
<org.jivesoftware.smack.GroupChat: java.lang.String getNickname()> 
<gov.nist.javax.sip.message.SIPMessage: java.lang.Object getContent()> 
<android.webkit.WebView: void reload()> 
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script$KernelID getKernelIDClear()> 
<android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)> 
<javax.xml.parsers.FactoryConfigurationError: java.lang.Exception getException()> 
<android.database.MatrixCursor: java.lang.String getString(int)> 
<android.database.sqlite.SQLiteCursor: java.lang.String[] getColumnNames()> 
<libcore.net.http.HttpsURLConnectionImpl: java.lang.String getRequestMethod()> 
<gov.nist.core.NameValueList: gov.nist.core.NameValue getNameValue(java.lang.String)> 
<java.nio.charset.UnmappableCharacterException: int getInputLength()> 
<android.content.Intent: java.lang.String getPackage()> 
<android.app.ActivityManager: android.graphics.Bitmap getTaskTopThumbnail(int)> 
<android.webkit.PluginData: java.io.InputStream getInputStream()> 
<java.io.BufferedInputStream: int read()> 
<org.apache.xml.utils.AttList: java.lang.String getType(java.lang.String)> 
<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor getParcelFileDescriptor()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: boolean getTcpNoDelay()> 
<android.gesture.GestureOverlayView: float getGestureStrokeLengthThreshold()> 
<android.net.wifi.WifiManager: android.net.DhcpInfo getDhcpInfo()> 
<org.apache.xml.dtm.SecuritySupport12: java.io.FileInputStream getFileInputStream(java.io.File)> 
<android.widget.AdapterViewAnimator: int getDisplayedChild()> 
<gov.nist.javax.sip.header.Via: java.lang.String getSentByField()> 
<net.oauth.client.URLConnectionResponse: java.util.List getHeaders()> 
<android.view.WindowManagerGlobal: android.view.IWindowSession getWindowSession(android.os.Looper)> 
<org.apache.xml.serializer.SecuritySupport: java.lang.String getSystemProperty(java.lang.String)> 
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: boolean getUseClientMode()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: org.w3c.dom.Node getPreviousSibling()> 
<android.app.DownloadManager: java.lang.Long getMaxBytesOverMobile(android.content.Context)> 
<gov.nist.javax.sip.header.NameMap: java.lang.Class getClassFromName(java.lang.String)> 
<org.apache.xpath.XPathContext: org.apache.xpath.objects.DTMXRTreeFrag getDTMXRTreeFrag(int)> 
<android.widget.ViewAnimator: android.view.animation.Animation getInAnimation()> 
<java.io.EmulatedFieldsForLoading: long get(java.lang.String,long)> 
<android.media.MediaCodec: java.nio.ByteBuffer[] getOutputBuffers()> 
<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: java.util.ArrayList getParamNames()> 
<android.view.MotionEvent: float getTouchMajor()> 
<android.graphics.drawable.StateListDrawable: int[] getStateSet(int)> 
<android.database.MergeCursor: java.lang.String[] getColumnNames()> 
<org.apache.xml.dtm.ref.DTMNodeIterator: org.apache.xml.dtm.DTMIterator getDTMIterator()> 
<android.app.backup.FullBackupDataOutput: android.app.backup.BackupDataOutput getData()> 
<org.apache.harmony.security.x509.AuthorityKeyIdentifier: byte[] getKeyIdentifier()> 
<android.os.Bundle: java.lang.String[] getStringArray(java.lang.String)> 
<org.ccil.cowan.tagsoup.jaxp.SAXParserImpl: org.xml.sax.Parser getParser()> 
<org.apache.xalan.templates.TemplateSubPatternAssociation: java.lang.String getPattern()> 
<android.view.animation.OvershootInterpolator: float getInterpolation(float)> 
<libcore.io.ForwardingOs: java.lang.String getnameinfo(java.net.InetAddress,int)> 
<android.view.ViewRootImpl: android.view.View getCommonPredecessor(android.view.View,android.view.View)> 
<android.webkit.WebSettingsClassic: void setLoadsImagesAutomatically(boolean)> 
<android.graphics.Canvas: android.graphics.DrawFilter getDrawFilter()> 
<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.security.Provider)> 
<org.xml.sax.helpers.AttributeListImpl: java.lang.String getValue(int)> 
<libcore.net.url.FtpURLConnection: boolean readMultiLine()> 
<java.util.IllegalFormatConversionException: java.lang.Class getArgumentClass()> 
<android.text.Layout: float getLineExtent(int,boolean)> 
<android.view.View: int getDefaultSize(int,int)> 
<android.media.videoeditor.VideoEditorProfile: android.media.videoeditor.VideoEditorProfile get()> 
<android.widget.ScrollView: float getTopFadingEdgeStrength()> 
<java.sql.DriverManager: int getLoginTimeout()> 
<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransaction getLastTransaction()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketFactoryImpl: java.lang.String[] getSupportedCipherSuites()> 
<android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)> 
<org.jivesoftware.smack.packet.Bind: java.lang.String getChildElementXML()> 
<gov.nist.javax.sip.address.TelephoneNumber: gov.nist.core.NameValueList getParameters()> 
<gov.nist.javax.sip.header.ims.PAssertedService: java.lang.String getApplicationIdentifiers()> 
<android.filterpacks.imageproc.SepiaFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<android.app.admin.DeviceAdminInfo: android.content.pm.ActivityInfo getActivityInfo()> 
<gov.nist.javax.sip.address.TelURLImpl: gov.nist.core.NameValueList getParameters()> 
<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForActivity(android.content.ComponentName)> 
<java.net.MulticastSocket: java.net.NetworkInterface getNetworkInterface()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPublicKey: java.math.BigInteger getPublicExponent()> 
<javax.security.auth.SubjectDomainCombiner: javax.security.auth.Subject getSubject()> 
<android.support.v4.widget.SimpleCursorAdapter: android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter()> 
<java.net.Inet4Address: byte[] getAddress()> 
<org.apache.xpath.Expression: org.apache.xpath.ExpressionNode getExpressionOwner()> 
<java.text.DateFormat: java.text.DateFormat getDateInstance()> 
<org.apache.harmony.security.x509.ExtensionValue: byte[] getEncoded()> 
<org.jivesoftware.smack.packet.RosterPacket: int getRosterItemCount()> 
<android.app.admin.DevicePolicyManager: int getPasswordQuality(android.content.ComponentName,int)> 
<android.location.LocationManager: android.location.LocationProvider getProvider(java.lang.String)> 
<android.content.pm.ContainerEncryptionParams: java.lang.String getMacAlgorithm()> 
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.NamespaceAlias getNamespaceAlias(int)> 
<android.telephony.TelephonyManager: int getSimState()> 
<gov.nist.javax.sip.header.Challenge: java.lang.String getStale()> 
<android.preference.Preference: int getPersistedInt(int)> 
<java.text.DecimalFormat: java.text.DecimalFormatSymbols getDecimalFormatSymbols()> 
<android.drm.DrmEvent: int getUniqueId()> 
<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()> 
<java.nio.DirectByteBuffer: double getDouble()> 
<gov.nist.javax.sip.stack.TLSMessageChannel: java.lang.String getKey()> 
<org.apache.xml.dtm.ref.SecuritySupport12: java.lang.String getSystemProperty(java.lang.String)> 
<org.apache.http.message.BasicLineParser: org.apache.http.StatusLine parseStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)> 
<android.app.ContextImpl: java.io.File getDataDirFile()> 
<android.widget.ExpandableListView: long getPackedPositionForChild(int,int)> 
<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: byte[] getDigestSHAwithoutLast()> 
<android.app.SearchManager: java.util.List getSearchablesInGlobalSearch()> 
<java.security.MessageDigest: java.lang.String getAlgorithm()> 
<org.apache.xalan.templates.ElemLiteralResult: java.lang.String getAttributeNS(java.lang.String,java.lang.String)> 
<android.net.wifi.WifiConfigStore: java.util.List getConfiguredNetworks()> 
<android.test.mock.MockCursor: double getDouble(int)> 
<android.content.pm.PackageParser: boolean parseAllMetaData(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,java.lang.String,android.content.pm.PackageParser$Component,java.lang.String[])> 
<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.Overlay parseOverlay(org.xmlpull.v1.XmlPullParser,android.media.videoeditor.MediaItem)> 
<java.util.TreeMap: java.lang.Object get(java.lang.Object)> 
<android.widget.SearchView: int getImeOptions()> 
<android.media.videoeditor.AudioTrack: long getBoundaryEndTime()> 
<org.apache.xml.serializer.dom3.DOMErrorImpl: short getSeverity()> 
<android.text.style.DynamicDrawableSpan: int getVerticalAlignment()> 
<android.webkit.WebView: int getVisibleTitleHeight()> 
<org.apache.xalan.templates.NamespaceAlias: java.lang.String getResultNamespace()> 
<android.hardware.Camera: void getCameraInfo(int,android.hardware.Camera$CameraInfo)> 
<org.apache.xpath.NodeSet: org.w3c.dom.traversal.NodeFilter getFilter()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLEngine: java.security.PrivateKey getPrivateKeyById(java.lang.String)> 
<java.util.logging.LogRecord: java.lang.String getMessage()> 
<java.security.cert.TrustAnchor: java.security.PublicKey getCAPublicKey()> 
<javax.crypto.spec.PBEParameterSpec: int getIterationCount()> 
<android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getChildFragmentManager()> 
<android.view.KeyEvent: char getNumber()> 
<java.security.spec.RSAMultiPrimePrivateCrtKeySpec: java.math.BigInteger getPublicExponent()> 
<android.telephony.TelephonyManager: int getDataActivity()> 
<android.os.AsyncTask: android.os.AsyncTask$Status getStatus()> 
<android.telephony.SignalStrength: int getGsmLevel()> 
<android.view.DragEvent: java.lang.Object getLocalState()> 
<android.media.videoeditor.Transition: java.lang.String getId()> 
<java.util.Calendar: java.util.Calendar getInstance()> 
<android.net.http.AndroidHttpClientConnection: int getRemotePort()> 
<org.apache.http.client.HttpResponseException: int getStatusCode()> 
<java.net.URLConnection: java.net.URL getURL()> 
<libcore.net.http.RequestHeaders: java.lang.String getAcceptEncoding()> 
<android.emoji.EmojiFactory: int getVendorSpecificPuaFromAndroidPua(int)> 
<org.xml.sax.helpers.AttributeListImpl: java.lang.String getType(java.lang.String)> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: java.lang.String getDocumentTypeDeclarationPublicIdentifier()> 
<android.graphics.drawable.LayerDrawable: int getId(int)> 
<android.widget.RemoteViewsAdapter: java.util.ArrayList getVisibleWindow(int,int,int)> 
<org.apache.harmony.xml.ExpatAttributes: java.lang.String getLocalName(int)> 
<org.apache.xml.dtm.ref.DTMDefaultBase: char[] getStringValueChunk(int,int,int[])> 
<gov.nist.javax.sip.header.Challenge: java.lang.String getSignedBy()> 
<java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.security.Provider)> 
<android.telephony.gsm.SmsMessage: int getIndexOnIcc()> 
<android.view.SurfaceView: android.view.SurfaceHolder$Callback[] getSurfaceCallbacks()> 
<javax.security.auth.Subject: java.util.Set getPrincipals()> 
<gov.nist.javax.sip.stack.MessageProcessor: gov.nist.javax.sip.ListeningPointImpl getListeningPoint()> 
<android.webkit.BrowserDownloadListener: void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)> 
<android.widget.PopupWindow: int getHeight()> 
<android.hardware.usb.UsbInterface: int getId()> 
<android.telephony.gsm.SmsMessage: java.lang.String getServiceCenterAddress()> 
<android.net.LocalSocketImpl: java.io.OutputStream getOutputStream()> 
<android.view.View: android.graphics.drawable.Drawable getBackground()> 
<org.apache.xml.dtm.ref.SecuritySupport: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)> 
<android.widget.ProgressBar: android.graphics.drawable.Drawable getIndeterminateDrawable()> 
<android.test.TestRunner: java.lang.String getTitle(java.lang.String)> 
<android.app.admin.DevicePolicyManager: int getMaximumFailedPasswordsForWipe(android.content.ComponentName,int)> 
<android.telephony.TelephonyManager: java.lang.String getLine1Number()> 
<dalvik.system.profiler.BinaryHprofReader: java.lang.String readClass()> 
<org.apache.harmony.security.asn1.ASN1GeneralizedTime: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)> 
<org.apache.xml.serializer.SecuritySupport12: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)> 
<android.content.res.TypedArray: int getInteger(int,int)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: javax.net.ssl.SSLSession getSession()> 
<android.view.KeyEvent: int getDeadChar(int,int)> 
<gov.nist.javax.sip.address.SipUri: java.util.Iterator getParameterNames()> 
<android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)> 
<gov.nist.javax.sip.stack.HopImpl: java.lang.String getTransport()> 
<org.apache.http.impl.cookie.RFC2109Spec: org.apache.http.Header getVersionHeader()> 
<org.apache.xalan.extensions.ExtensionNamespaceSupport: java.lang.String getNamespace()> 
<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest getLastAckReceived()> 
<org.jivesoftware.smack.XMPPException: org.jivesoftware.smack.packet.StreamError getStreamError()> 
<org.apache.xpath.XPathContext: int getPredicatePos()> 
<org.apache.xalan.templates.AVT: java.lang.String getURI()> 
<java.net.MulticastSocket: boolean getLoopbackMode()> 
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getQop()> 
<android.content.ContentResolver: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String)> 
<android.telephony.gsm.SmsMessage: android.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean,byte[])> 
<gov.nist.javax.sip.header.Accept: java.lang.String getContentType()> 
<org.apache.xalan.templates.DecimalFormatProperties: char getZeroDigit()> 
<android.webkit.WebSettingsClassic: int getCacheMode()> 
<android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)> 
<org.apache.xml.utils.QName: java.lang.String getPrefixFromXMLNSDecl(java.lang.String)> 
<libcore.util.ZoneInfoDB: java.lang.String getVersion()> 
<org.apache.harmony.security.asn1.ASN1BitString: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)> 
<android.media.videoeditor.OverlayFrame: int getResizedRGBSizeHeight()> 
<org.apache.xpath.compiler.OpMap: int getFirstChildPos(int)> 
<android.filterfw.core.ProgramVariable: android.filterfw.core.Program getProgram()> 
<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator getLocator()> 
<org.apache.xml.utils.SecuritySupport: long getLastModified(java.io.File)> 
<org.apache.xalan.templates.RedundentExprEliminator: int getPseudoVarID()> 
<android.util.Property: java.lang.Class getType()> 
<org.apache.commons.io.output.CountingOutputStream: int getCount()> 
<android.net.nsd.DnsSdTxtRecord: java.lang.String getKey(int)> 
<android.graphics.YuvImage: int getHeight()> 
<org.jivesoftware.smack.PacketReader: org.jivesoftware.smack.packet.Packet parseBindAccountResponse(com.google.common.io.protocol.ProtoBuf)> 
<android.graphics.PathMeasure: float getLength()> 
<android.media.videoeditor.MediaVideoItem: int getVideoLevel()> 
<javax.xml.namespace.QName: java.lang.String getLocalPart()> 
<net.oauth.OAuthMessage: java.lang.String getBodyType()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getNextDescendant(int,int)> 
<java.text.DecimalFormat: java.lang.String getNegativePrefix()> 
<android.drm.DrmEvent: java.lang.Object getAttribute(java.lang.String)> 
<org.apache.xalan.processor.ProcessorInclude: int getStylesheetType()> 
<android.net.Credentials: int getGid()> 
<gov.nist.javax.sip.message.MultipartMimeContentImpl: javax.sip.header.ContentTypeHeader getContentTypeHeader()> 
<android.util.XmlPullAttributes: int getAttributeCount()> 
<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()> 
<android.database.sqlite.SQLiteDatabase: java.util.Map getSyncedTables()> 
<java.lang.Class: java.lang.reflect.Constructor getEnclosingConstructor()> 
<org.jivesoftware.smackx.packet.VCard: java.lang.String getLastName()> 
<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()> 
<org.apache.james.mime4j.field.ContentTransferEncodingField: java.lang.String getEncoding()> 
<android.widget.TextView: void getFocusedRect(android.graphics.Rect)> 
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)> 
<java.net.URLConnection: java.util.Map getRequestProperties()> 
<android.webkit.WebHistoryItemClassic: android.graphics.Bitmap getFavicon()> 
<android.widget.AppSecurityPermissions: void getAllUsedPermissions(int,java.util.Set)> 
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.lang.String[] getSupportedProtocols()> 
<android.graphics.Paint: void getTextPath(java.lang.String,int,int,float,float,android.graphics.Path)> 
<org.apache.xpath.axes.AxesWalker: int getRoot()> 
<android.content.res.Resources: java.lang.CharSequence[] getTextArray(int)> 
<android.telephony.ServiceState: int getSystemId()> 
<org.apache.xpath.axes.NodeSequence: boolean getExpandEntityReferences()> 
<android.content.SyncStorageEngine: java.util.ArrayList getPendingOperations()> 
<org.jivesoftware.smack.util.PacketParserUtils: long getLongOrDefault(com.google.common.io.protocol.ProtoBuf,int,long)> 
<android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()> 
<android.text.SpanSet: int getNextTransition(int,int)> 
<java.lang.ThreadGroup: java.lang.String getName()> 
<android.widget.RemoteViewsAdapter: int getItemViewType(int)> 
<android.hardware.usb.UsbDeviceConnection: int getFileDescriptor()> 
<android.filterfw.core.Filter: int getNumberOfInputs()> 
<android.filterpacks.imageproc.DrawOverlayFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<java.security.cert.CollectionCertStoreParameters: java.util.Collection getCollection()> 
<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.DocumentType getDoctype()> 
<android.app.ContextImpl: android.content.pm.PackageManager getPackageManager()> 
<net.oauth.client.OAuthClient: void getRequestToken(net.oauth.OAuthAccessor)> 
<java.nio.HeapByteBuffer: long getLong(int)> 
<org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore: java.security.cert.X509Certificate readCertificate(java.io.File)> 
<org.apache.http.message.AbstractHttpMessage: org.apache.http.Header getLastHeader(java.lang.String)> 
<libcore.net.http.HttpEngine: java.io.OutputStream getRequestBody()> 
<org.apache.harmony.xml.dom.EntityReferenceImpl: short getNodeType()> 
<org.jivesoftware.smack.SmackConfiguration: int getPacketReplyTimeout()> 
<gov.nist.javax.sip.stack.TCPMessageChannel: java.lang.String getPeerProtocol()> 
<android.security.SystemKeyStore: android.security.SystemKeyStore getInstance()> 
<org.apache.xpath.objects.XNodeSet: org.apache.xpath.objects.XObject getFresh()> 
<android.media.videoeditor.OverlayFrame: int getOverlayFrameHeight()> 
<android.graphics.drawable.ShapeDrawable: int getIntrinsicHeight()> 
<org.apache.harmony.xml.dom.CharacterDataImpl: java.lang.String getNodeValue()> 
<org.apache.xml.utils.QName: java.lang.String getPrefixPart(java.lang.String)> 
<java.util.jar.Manifest: java.util.Map getEntries()> 
<android.media.videoeditor.MediaVideoItem: int getFps()> 
<javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)> 
<org.apache.xalan.templates.ElemExsltFuncResult: int getXSLToken()> 
<android.media.videoeditor.TransitionAlpha: java.lang.String getMaskFilename()> 
<android.media.videoeditor.MediaVideoItem: int getVideoProfile()> 
<libcore.net.http.HttpEngine: java.net.URI getUri()> 
<android.view.ViewConfiguration: int getScaledScrollBarSize()> 
<android.view.DragEvent: float getX()> 
<android.view.DragEvent: float getY()> 
<java.text.CollationElementIterator: int getMaxExpansion(int)> 
<org.apache.harmony.security.x509.AlgorithmIdentifier: byte[] getParameters()> 
<org.apache.xpath.axes.LocPathIterator: int getLength()> 
<java.net.Socket: int getSoLinger()> 
<org.apache.xalan.templates.XMLNSDecl: boolean getIsExcluded()> 
<android.view.Window: android.view.WindowManager getWindowManager()> 
<android.widget.AbsListView: int getCacheColorHint()> 
<org.apache.harmony.security.provider.cert.X509CRLImpl: byte[] getExtensionValue(java.lang.String)> 
<android.app.ContextImpl: android.os.IBinder getActivityToken()> 
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.io.OutputStream getOutputStream()> 
<java.util.Calendar: long getTimeInMillis()> 
<java.net.PlainSocketImpl: java.io.InputStream getInputStream()> 
<android.app.ActivityManager: int getFrontActivityScreenCompatMode()> 
<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()> 
<javax.crypto.Cipher: int getMaxAllowedKeyLength(java.lang.String)> 
<android.database.sqlite.SQLiteConnectionPool: int getPriority(int)> 
<gov.nist.javax.sip.header.To: java.lang.String getDisplayName()> 
<org.apache.xml.utils.res.IntArrayWrapper: int getInt(int)> 
<org.apache.commons.io.input.DemuxInputStream: int read()> 
<org.apache.xpath.objects.XBoolean: java.lang.String getTypeString()> 
<gov.nist.javax.sip.header.ParametersHeader: java.lang.String getParameter(java.lang.String)> 
<android.preference.PreferenceGroupAdapter: int getCount()> 
<android.database.MatrixCursor: double getDouble(int)> 
<android.net.sip.SipSession: android.net.sip.SipProfile getPeerProfile()> 
<android.content.pm.PackageItemInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)> 
<android.view.KeyEvent: java.lang.String getCharacters()> 
<android.webkit.PluginManager: java.lang.String[] getPluginDirectories()> 
<org.jivesoftware.smack.packet.Registration: java.lang.String getChildElementXML()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getNextFollowing(int,int)> 
<android.text.TextUtils: int getTrimmedLength(java.lang.CharSequence)> 
<android.webkit.WebViewCore: android.webkit.DeviceOrientationService getDeviceOrientationService()> 
<org.apache.xml.dtm.ref.DTMNodeProxy: int getDTMNodeNumber()> 
<android.webkit.WebViewClassic: java.lang.String getSelection()> 
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getXmlVersion()> 
<java.lang.Thread: java.lang.Thread$State getState()> 
<org.apache.harmony.security.asn1.BerInputStream: void decodeValueCollection(org.apache.harmony.security.asn1.ASN1ValueCollection)> 
<java.util.prefs.PreferenceChangeEvent: java.lang.String getNewValue()> 
<android.content.SyncManager: android.net.ConnectivityManager getConnectivityManager()> 
<org.apache.xalan.templates.TemplateList: org.apache.xalan.templates.ElemTemplate getTemplate(org.apache.xpath.XPathContext,int,org.apache.xml.utils.QName,int,int,boolean,org.apache.xml.dtm.DTM)> 
<java.security.cert.CertPathValidator: java.lang.String getAlgorithm()> 
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getAllButNulAndAngleBracketsLegal()> 
<android.content.Intent: android.content.Intent getSelector()> 
<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getDefaultInAnimation()> 
<android.filterfw.core.NativeFrame: int[] getInts()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: org.apache.xml.utils.XMLString getStringValue(int)> 
<android.webkit.WebBackForwardList: int getSize()> 
<android.media.SoundPool: int load(android.content.res.AssetFileDescriptor,int)> 
<org.apache.xml.serializer.utils.AttList: int getIndex(java.lang.String)> 
<android.support.v4.widget.ScrollerCompat: int getCurrY()> 
<android.support.v4.widget.ScrollerCompat: int getCurrX()> 
<gov.nist.javax.sip.header.extensions.References: java.util.Iterator getParameterNames()> 
<android.app.ActivityManager: java.util.Map getAllPackageLaunchCounts()> 
<java.util.concurrent.ForkJoinWorkerThread: int getPoolIndex()> 
<android.app.admin.DevicePolicyManager: void getRemoveWarning(android.content.ComponentName,android.os.RemoteCallback)> 
<android.media.MediaFormat: float getFloat(java.lang.String)> 
<org.apache.xalan.templates.ElemUnknown: int getXSLToken()> 
<android.graphics.Bitmap: int getPixel(int,int)> 
<android.view.View: boolean getKeepScreenOn()> 
<java.lang.String: byte[] getBytes(java.lang.String)> 
<gov.nist.javax.sip.header.Indentation: java.lang.String getIndentation()> 
<android.bluetooth.BluetoothSocket: java.io.OutputStream getOutputStream()> 
<javax.sip.RequestEvent: javax.sip.Dialog getDialog()> 
<gov.nist.javax.sip.stack.DefaultRouter: java.util.ListIterator getNextHops(javax.sip.message.Request)> 
<android.widget.Scroller: float getCurrVelocity()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: java.lang.String[] getEnabledProtocols()> 
<org.apache.harmony.xml.dom.NodeImpl: java.lang.String getTextContent()> 
<android.telephony.SmsCbMessage: int getMessagePriority()> 
<android.view.InputDevice: android.view.InputDevice getDevice(int)> 
<android.media.videoeditor.MediaVideoItem: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings getVideoClipProperties()> 
<org.apache.xml.utils.DOMHelper: java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Element)> 
<android.filterfw.core.OutputPort: android.filterfw.core.InputPort getBasePort()> 
<java.net.URISyntaxException: java.lang.String getReason()> 
<android.view.View: int getScrollBarSize()> 
<android.util.XmlPullAttributes: int getAttributeListValue(int,java.lang.String[],int)> 
<org.apache.xpath.compiler.XPathParser: java.lang.String getTokenRelative(int)> 
<java.util.Locale: java.lang.String getDisplayCountry(java.util.Locale)> 
<android.webkit.WebBackForwardList: int getCurrentIndex()> 
<org.apache.xpath.functions.FuncSystemProperty: void loadPropertyFile(java.lang.String,java.util.Properties)> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: int getNumberOfNodes()> 
<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String getPath()> 
<java.net.ServerSocket: boolean getReuseAddress()> 
<org.apache.xml.serializer.dom3.LSSerializerImpl: java.lang.String getInputEncoding(org.w3c.dom.Node)> 
<android.content.res.TypedArray: java.lang.String getPositionDescription()> 
<android.content.pm.PackageParser: android.content.pm.PackageParser$Activity parseActivityAlias(android.content.pm.PackageParser$Package,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,int,java.lang.String[])> 
<android.widget.ScrollView: int getScrollRange()> 
<android.net.wifi.WifiStateTracker: android.net.NetworkInfo getNetworkInfo()> 
<org.apache.james.mime4j.field.address.Mailbox: java.lang.String getLocalPart()> 
<android.media.MediaRouter: android.media.MediaRouter$RouteInfo getSystemAudioRoute()> 
<android.test.mock.MockPackageManager: java.lang.String getInstallerPackageName(java.lang.String)> 
<android.webkit.WebViewClassic: int getWidth()> 
<android.drm.mobile1.DrmConstraintInfo: java.util.Date getStartDate()> 
<java.text.DateFormat: java.text.DateFormat getInstance()> 
<org.apache.xalan.transformer.KeyTable: java.util.Vector getKeyDeclarations()> 
<gov.nist.javax.sip.parser.PipelinedMsgParser: int getNewUid()> 
<org.apache.http.impl.auth.RFC2617Scheme: java.lang.String getRealm()> 
<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack getCurrentTemplateElements()> 
<android.security.SystemKeyStore: java.io.File getKeyFile(java.lang.String)> 
<org.apache.harmony.security.asn1.ASN1BitString: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> 
<java.sql.DataTruncation: boolean getParameter()> 
<android.view.View: int getMeasuredWidthAndState()> 
<org.apache.harmony.security.asn1.DerOutputStream: void getSequenceOfLength(org.apache.harmony.security.asn1.ASN1SequenceOf)> 
<android.widget.TextView: java.lang.CharSequence getError()> 
<android.speech.tts.TtsEngines: java.lang.String getLocalePrefForEngine(java.lang.String)> 
<android.net.http.Headers: java.util.ArrayList getSetCookie()> 
<android.renderscript.Font: java.lang.String getFontFileName(java.lang.String,android.renderscript.Font$Style)> 
<org.apache.harmony.security.asn1.DerOutputStream: void getExplicitLength(org.apache.harmony.security.asn1.ASN1Explicit)> 
<gov.nist.core.NameValueList: java.util.Iterator getNames()> 
<android.text.style.DrawableMarginSpan: int getLeadingMargin(boolean)> 
<java.net.CookieManager: java.net.CookieStore getCookieStore()> 
<javax.crypto.EncryptedPrivateKeyInfo: byte[] getEncryptedData()> 
<android.text.Layout: int getLineVisibleEnd(int)> 
<android.app.WallpaperManager: int getDesiredMinimumHeight()> 
<jp.co.omronsoft.openwnn.OpenWnnDictionaryImpl: byte[][] getConnectMatrix()> 
<org.jivesoftware.smack.RosterEntry: org.jivesoftware.smackx.packet.VCard getVCard()> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: boolean declAlreadyDeclared(java.lang.String)> 
<java.security.AccessController: java.security.AccessControlContext getContext()> 
<android.bluetooth.BluetoothHeadset: int getConnectionState(android.bluetooth.BluetoothDevice)> 
<android.test.mock.MockResources: android.content.res.Configuration getConfiguration()> 
<org.apache.xalan.templates.ElemForEach: int getSortElemCount()> 
<android.app.UiModeManager: int getCurrentModeType()> 
<gov.nist.javax.sip.header.ParametersHeader: gov.nist.javax.sip.address.GenericURI getParameterAsURI(java.lang.String)> 
<android.opengl.GLLogWrapper: int getTextureEnvParamCount(int)> 
<android.preference.PreferenceManager: android.preference.PreferenceManager$OnPreferenceTreeClickListener getOnPreferenceTreeClickListener()> 
<android.webkit.PluginManager: java.lang.Class getPluginClass(java.lang.String,java.lang.String)> 
<org.xml.sax.ext.Locator2Impl: java.lang.String getEncoding()> 
<android.widget.AppSecurityPermissions: android.widget.AppSecurityPermissions$PermissionItemView getPermissionItemView(android.widget.AppSecurityPermissions$MyPermissionGroupInfo,android.widget.AppSecurityPermissions$MyPermissionInfo,boolean,java.lang.CharSequence)> 
<org.jivesoftware.smackx.provider.MUCUserProvider: com.google.common.io.protocol.ProtoBufType getProtoBufType()> 
<javax.obex.ClientSession: long getConnectionID()> 
<gov.nist.javax.sip.Utils: gov.nist.javax.sip.Utils getInstance()> 
<gov.nist.javax.sip.header.Protocol: java.lang.String getProtocolVersion()> 
<android.drm.DrmManagerClient: int getErrorType(int)> 
<android.opengl.GLLogWrapper: java.lang.String getTextureParamName(float)> 
<org.apache.http.impl.conn.AbstractClientConnAdapter: java.lang.Object getAttribute(java.lang.String)> 
<android.content.res.AssetFileDescriptor: long getDeclaredLength()> 
<org.apache.harmony.security.pkcs7.SignedData: int getVersion()> 
<android.database.sqlite.SQLiteCursor: android.database.sqlite.SQLiteDatabase getDatabase()> 
<java.net.DatagramSocket: boolean getReuseAddress()> 
<javax.net.ssl.TrustManagerFactory: java.security.Provider getProvider()> 
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.CharSequence getText(java.lang.Object)> 
<java.util.Date: int getSeconds()> 
<javax.xml.transform.dom.DOMResult: org.w3c.dom.Node getNextSibling()> 
<android.app.ContextImpl: java.io.File getSharedPrefsFile(java.lang.String)> 
<org.json.JSONObject: double getDouble(java.lang.String)> 
<org.apache.harmony.security.asn1.ASN1Oid: org.apache.harmony.security.asn1.ASN1Oid getInstance()> 
<android.webkit.CookieManager: java.lang.String getCookie(java.lang.String)> 
<org.apache.http.conn.routing.HttpRoute: java.net.InetAddress getLocalAddress()> 
<android.widget.FrameLayout: boolean getConsiderGoneChildrenWhenMeasuring()> 
<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()> 
<android.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)> 
<android.location.Criteria: int getHorizontalAccuracy()> 
<java.nio.DoubleToByteBufferAdapter: java.nio.DoubleBuffer get(double[],int,int)> 
<org.apache.http.entity.StringEntity: long getContentLength()> 
<java.io.ObjectInputStream: short readShort()> 
<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.KeyManager getKeyManager()> 
<org.apache.xpath.functions.SecuritySupport: boolean getFileExists(java.io.File)> 
<android.telephony.CellSignalStrengthCdma: int getAsuLevel()> 
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.net.AddressResolver getAddressResolver()> 
<android.media.MediaMetadataRetriever: byte[] getEmbeddedPicture()> 
<java.net.DatagramSocket: java.nio.channels.DatagramChannel getChannel()> 
<org.apache.harmony.security.x509.GeneralNames: java.util.List getNames()> 
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getActualEncoding()> 
<java.util.Locale: java.lang.String getVariant()> 
<java.lang.BootClassLoader: java.lang.BootClassLoader getInstance()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: short getNodeType()> 
<android.media.audiofx.Visualizer: int getWaveForm(byte[])> 
<org.apache.harmony.security.x509.CertificateList: byte[] getEncoded()> 
<javax.xml.transform.dom.DOMSource: org.w3c.dom.Node getNode()> 
<android.test.mock.MockIContentProvider: java.lang.String getType(android.net.Uri)> 
<android.net.TrafficStats: long getTotalTxBytes()> 
<org.apache.harmony.security.pkcs8.PrivateKeyInfo: org.apache.harmony.security.x509.AlgorithmIdentifier getAlgorithmIdentifier()> 
<org.apache.http.impl.io.ChunkedInputStream: org.apache.http.Header[] getFooters()> 
<java.security.UnresolvedPermission: java.lang.String getUnresolvedName()> 
<android.net.wifi.WifiWatchdogStateMachine: boolean getSettingsGlobalBoolean(android.content.ContentResolver,java.lang.String,boolean)> 
<org.apache.http.protocol.BasicHttpProcessor: int getResponseInterceptorCount()> 
<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.OutputProperties getOutputComposed()> 
<android.telephony.SmsMessage: int getStatusOnSim()> 
<android.support.v4.content.Loader: int getId()> 
<android.location.Address: java.util.Locale getLocale()> 
<android.webkit.WebSettings: boolean getLoadWithOverviewMode()> 
<android.text.style.QuoteSpan: int getLeadingMargin(boolean)> 
<android.widget.TextView: boolean getFreezesText()> 
<org.apache.xml.serializer.utils.SerializerMessages_pt_BR: java.lang.Object[][] getContents()> 
<org.apache.harmony.xml.dom.NodeListImpl: int getLength()> 
<android.widget.AdapterView: int getCount()> 
<org.apache.xml.res.XMLMessages: java.util.ListResourceBundle loadResourceBundle(java.lang.String)> 
<android.content.ContextWrapper: java.io.File getFileStreamPath(java.lang.String)> 
<android.os.UserManager: java.lang.String getUserName()> 
<javax.net.ssl.HttpsURLConnection: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()> 
<android.app.LauncherActivity: android.content.Intent getTargetIntent()> 
<org.apache.xml.serializer.utils.DOM2Helper: java.lang.String getLocalNameOfNode(org.w3c.dom.Node)> 
<java.util.MapEntry: java.lang.Object getKey()> 
<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()> 
<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$LayerType getLayerType()> 
<android.webkit.WebSettings: java.lang.String getDatabasePath()> 
<org.apache.xalan.transformer.TransformerImpl: java.util.Properties getOutputProperties()> 
<android.widget.SimpleExpandableListAdapter: long getGroupId(int)> 
<android.database.ContentObserver: android.database.IContentObserver getContentObserver()> 
<gov.nist.javax.sip.header.CSeq: long getSeqNumber()> 
<gov.nist.core.LexerCore: java.lang.String getNextId()> 
<android.app.Activity: android.content.Intent getParentActivityIntent()> 
<dalvik.system.profiler.HprofData: long getStartMillis()> 
<android.graphics.drawable.RotateDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> 
<android.content.pm.ComponentInfo: android.graphics.drawable.Drawable loadDefaultLogo(android.content.pm.PackageManager)> 
<android.net.NetworkStats: android.net.NetworkStats$Entry getTotal(android.net.NetworkStats$Entry,java.util.HashSet,int,boolean)> 
<android.app.SharedPreferencesImpl: float getFloat(java.lang.String,float)> 
<java.util.concurrent.Executors: java.util.concurrent.Callable privilegedCallableUsingCurrentClassLoader(java.util.concurrent.Callable)> 
<java.io.RandomAccessFile: int readUnsignedShort()> 
<org.apache.harmony.xnet.provider.jsse.ConnectionState: int getMinFragmentSize()> 
<org.apache.http.message.BasicHttpEntityEnclosingRequest: org.apache.http.HttpEntity getEntity()> 
<java.nio.MappedByteBuffer: java.nio.MappedByteBuffer load()> 
<android.app.SearchableInfo: boolean getVoiceSearchLaunchRecognizer()> 
<android.net.http.HttpAuthHeader: int getScheme()> 
<android.drm.mobile1.DrmRawContent: java.lang.String getContentType()> 
<android.widget.AdapterView: int getPositionForView(android.view.View)> 
<java.security.CodeSigner: java.security.cert.CertPath getSignerCertPath()> 
<jp.co.omronsoft.openwnn.KeyboardView: int getKeyIndices(int,int,int[])> 
<org.apache.xml.utils.SecuritySupport: java.lang.ClassLoader getContextClassLoader()> 
<org.apache.james.mime4j.message.Entity: java.lang.String getCharset()> 
<android.view.animation.AnticipateInterpolator: float getInterpolation(float)> 
<android.view.View: int getScrollBarStyle()> 
<gov.nist.javax.sip.header.MediaRange: java.lang.String getSubtype()> 
<org.apache.http.impl.io.HttpRequestParser: org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer)> 
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute)> 
<android.opengl.GLLogWrapper: java.lang.String getLightName(int)> 
<org.apache.xml.serializer.dom3.DOMLocatorImpl: java.lang.String getUri()> 
<android.view.MotionEvent: float getHistoricalOrientation(int)> 
<android.media.videoeditor.MediaArtistNativeHelper: int getMediaItemRenderingMode(int)> 
<android.webkit.WebViewClassic: android.webkit.WebView getWebView()> 
<android.accessibilityservice.AccessibilityServiceInfo: boolean getCanRetrieveWindowContent()> 
<java.net.URLStreamHandler: int getDefaultPort()> 
<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String,boolean)> 
<org.apache.xml.utils.UnImplNode: org.w3c.dom.DOMConfiguration getDomConfig()> 
<org.apache.xalan.templates.ElemSort: org.apache.xalan.templates.AVT getLang()> 
<org.apache.harmony.security.asn1.DerOutputStream: void getSetOfLength(org.apache.harmony.security.asn1.ASN1SetOf)> 
<java.net.InetSocketAddress: int getPort()> 
<org.apache.xml.res.XMLMessages: java.util.Locale getLocale()> 
<org.apache.xalan.templates.TemplateList: org.apache.xalan.templates.ElemTemplate getTemplateFast(org.apache.xpath.XPathContext,int,int,org.apache.xml.utils.QName,int,boolean,org.apache.xml.dtm.DTM)> 
<android.webkit.CallbackProxy: boolean onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)> 
<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node getCurrentNode()> 
<org.apache.xml.utils.DOM2Helper: org.w3c.dom.Node getParentOfNode(org.w3c.dom.Node)> 
<android.text.Layout: int getLineBottom(int)> 
<android.net.http.HttpAuthHeader: java.lang.String getPassword()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPublicKey: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getInstance(java.security.interfaces.DSAPublicKey)> 
<android.hardware.Sensor: int getMinDelay()> 
<android.widget.GridView: int getTopSelectionPixel(int,int,int)> 
<org.apache.http.message.BasicHeader: org.apache.http.HeaderElement[] getElements()> 
<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ViaList getViaHeaders()> 
<org.apache.xml.dtm.ref.DTMDefaultBase: boolean getShouldStripWhitespace()> 
<libcore.net.http.ResponseHeaders: java.util.Date getServedDate()> 
<android.util.EventLog: int getTagCode(java.lang.String)> 
<java.io.RandomAccessFile: java.lang.String readUTF()> 
<android.telephony.SignalStrength: int getLteRssnr()> 
<android.view.View: int getTopPaddingOffset()> 
<org.apache.xalan.templates.ElemNumber: org.apache.xalan.templates.AVT getGroupingSize()> 
<org.apache.xpath.axes.FilterExprWalker: int getAxis()> 
<org.apache.xml.utils.ObjectPool: java.lang.Object getInstanceIfFree()> 
<android.view.KeyEvent: char getMatch(char[],int)> 
<org.apache.xalan.templates.ElemTemplateElement: int getEndColumnNumber()> 
<android.net.LinkSocket: android.net.LinkCapabilities getNeededCapabilities()> 
<android.webkit.WebViewClassic: int getContentHeight()> 
<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot getStylesheet()> 
<javax.sip.ResponseEvent: javax.sip.message.Response getResponse()> 
<java.text.DecimalFormatSymbols: java.lang.String getCurrencySymbol()> 
<android.renderscript.Element: int getBytesSize()> 
<android.accounts.AccountManagerService: long getAccountIdLocked(android.database.sqlite.SQLiteDatabase,android.accounts.Account)> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: java.lang.String getDocumentStandalone(int)> 
<org.apache.xalan.transformer.TransformerImpl: int getMatchedNode()> 
<android.widget.LinearLayout: int getDividerPadding()> 
<org.apache.http.cookie.CookieOrigin: int getPort()> 
<android.test.mock.MockPackageManager: android.content.pm.FeatureInfo[] getSystemAvailableFeatures()> 
<android.telephony.CellSignalStrengthCdma: int getCdmaEcio()> 
<android.webkit.HTML5Audio: float getMaxTimeSeekable()> 
<android.database.AbstractWindowedCursor: int getInt(int)> 
<android.view.ViewRootImpl: android.view.View getAccessibilityFocusedHost()> 
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationLogo(android.content.pm.ApplicationInfo)> 
<java.util.logging.LogRecord: java.lang.Object[] getParameters()> 
<java.lang.Character: byte getDirectionality(int)> 
<org.jivesoftware.smack.packet.IQ: org.jivesoftware.smack.packet.IQ$Type getType()> 
<org.apache.harmony.security.pkcs7.SignerInfo: java.lang.String getDigestEncryptionAlgorithm()> 
<org.apache.http.params.HttpProtocolParams: java.lang.String getContentCharset(org.apache.http.params.HttpParams)> 
<org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy: long getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)> 
<android.widget.Editor: float getPrimaryHorizontal(android.text.Layout,android.text.Layout,int)> 
<org.apache.xml.utils.AttList: java.lang.String getLocalName(int)> 
<org.jivesoftware.smackx.ServiceDiscoveryManager: java.util.Iterator getFeatures()> 
<android.view.ScaleGestureDetector: float getPreviousSpan()> 
<android.widget.TextView: int getExtendedPaddingTop()> 
<android.net.LocalSocket: int getSoTimeout()> 
<org.apache.xml.serializer.utils.Messages: java.util.ListResourceBundle loadResourceBundle(java.lang.String)> 
<java.text.RuleBasedCollator: java.text.CollationKey getCollationKey(java.lang.String)> 
<org.apache.http.auth.AuthSchemeRegistry: org.apache.http.auth.AuthScheme getAuthScheme(java.lang.String,org.apache.http.params.HttpParams)> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: org.apache.xml.utils.XMLString getStringValue(int)> 
<gov.nist.javax.sip.address.SipUri: gov.nist.core.NameValueList getParameters()> 
<gov.nist.javax.sip.stack.UDPMessageChannel: int getViaPort()> 
<android.media.MediaCodecList: android.media.MediaCodecInfo getCodecInfoAt(int)> 
<org.apache.http.impl.conn.AbstractPooledConnAdapter: org.apache.http.conn.routing.HttpRoute getRoute()> 
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getCachedIcon(android.app.ApplicationPackageManager$ResourceName)> 
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry getFreeEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,java.lang.Object)> 
<android.widget.CursorAdapter: java.lang.Object getItem(int)> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: org.apache.xml.utils.FastStringBuffer getContentBuffer()> 
<android.view.View: int getScrollBarDefaultDelayBeforeFade()> 
<android.content.SyncStorageEngine: android.content.SyncStatusInfo getOrCreateSyncStatusLocked(int)> 
<android.app.ContextImpl: int getWallpaperDesiredMinimumWidth()> 
<android.telephony.TelephonyManager: int getPhoneTypeFromNetworkType()> 
<gov.nist.javax.sip.stack.MessageChannel: java.lang.String getHost()> 
<android.graphics.Region: android.graphics.Path getBoundaryPath()> 
<android.telephony.SignalStrength: int getCdmaAsuLevel()> 
<org.apache.harmony.luni.lang.reflect.ImplForVariable: java.lang.reflect.GenericDeclaration getGenericDeclaration()> 
<android.widget.TabHost: int getCurrentTab()> 
<android.webkit.WebSettingsClassic: java.lang.String getFantasyFontFamily()> 
<android.app.Fragment: boolean getUserVisibleHint()> 
<gov.nist.javax.sip.header.SIPDate: int getHour()> 
<gov.nist.javax.sip.address.SipUri: java.lang.String getHost()> 
<org.apache.xalan.templates.TemplateList: org.apache.xalan.templates.ElemTemplate getTemplate(org.apache.xpath.XPathContext,int,org.apache.xml.utils.QName,boolean,org.apache.xml.dtm.DTM)> 
<android.preference.PreferenceFragment: android.widget.ListView getListView()> 
<org.xml.sax.helpers.LocatorImpl: java.lang.String getSystemId()> 
<android.webkit.JsResult: boolean getResult()> 
<org.apache.harmony.security.asn1.ASN1UTCTime: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)> 
<org.apache.harmony.security.PrivateKeyImpl: java.lang.String getFormat()> 
<android.app.SearchManager: java.util.List getGlobalSearchActivities()> 
<android.content.ContentResolver: java.lang.String getType(android.net.Uri)> 
<android.filterfw.core.FilterGraph: boolean readyForProcessing(android.filterfw.core.Filter,java.util.Set)> 
<org.apache.xalan.templates.Stylesheet: int getTemplateCount()> 
<org.apache.xalan.templates.DecimalFormatProperties: char getDecimalSeparator()> 
<android.app.Dialog: int getVolumeControlStream()> 
<android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence)> 
<gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.header.ServerHeader getDefaultServerHeader()> 
<libcore.util.ZoneInfoDB: java.lang.String[] getAvailableIDs()> 
<android.view.animation.CycleInterpolator: float getInterpolation(float)> 
<android.webkit.CacheManager: android.webkit.CacheManager$CacheResult getCacheFile(java.lang.String,java.util.Map)> 
<net.oauth.OAuthMessage: java.util.Map getParameterMap()> 
<gov.nist.javax.sip.parser.TimeStampParser: gov.nist.javax.sip.header.SIPHeader parse()> 
<android.telephony.gsm.SmsMessage: java.lang.String getDisplayMessageBody()> 
<org.apache.harmony.xnet.provider.jsse.SSLSocketFactoryImpl: java.lang.String[] getSupportedCipherSuites()> 
<org.apache.harmony.security.x509.GeneralName: java.lang.Object getName()> 
<android.telephony.CellIdentityGsm: int getCid()> 
<java.text.DateFormat: java.text.DateFormat getDateTimeInstance()> 
<org.apache.xalan.transformer.TransformerImpl: java.lang.String getBaseURLOfSource()> 
<android.bluetooth.BluetoothClass: int getDeviceClass()> 
<android.webkit.WebViewClassic: android.view.View getZoomControls()> 
<android.renderscript.Matrix3f: void load(android.renderscript.Matrix3f)> 
<org.apache.xml.utils.UnImplNode: org.w3c.dom.NodeList getChildNodes()> 
<android.widget.ExpandableListView: long getSelectedPosition()> 
<android.view.View: int getRight()> 
<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.URIResolver getURIResolver()> 
<gov.nist.javax.sip.header.SIPHeaderList: java.util.List getHeadersAsEncodedStrings()> 
<android.graphics.Paint: android.graphics.Xfermode getXfermode()> 
<org.apache.http.impl.conn.tsccm.BasicPoolEntry: long getCreated()> 
<android.webkit.WebSettingsClassic: boolean getLightTouchEnabled()> 
<android.telephony.SmsMessage: int getIndexOnIcc()> 
<org.apache.xpath.functions.FuncExtFunction: int getArgCount()> 
<android.support.v4.app.FragmentActivity: android.support.v4.app.LoaderManager getSupportLoaderManager()> 
<org.apache.harmony.security.asn1.BerOutputStream: void getSequenceLength(org.apache.harmony.security.asn1.ASN1Sequence)> 
<libcore.io.IoBridge: java.net.InetAddress getSocketLocalAddress(java.io.FileDescriptor)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: int getPacketBufferSize()> 
<java.util.jar.JarFile: java.util.zip.ZipEntry getEntry(java.lang.String)> 
<android.app.ListFragment: int getSelectedItemPosition()> 
<android.renderscript.Matrix4f: void load(android.renderscript.Matrix4f)> 
<java.security.cert.X509Certificate: java.util.Collection getIssuerAlternativeNames()> 
<gov.nist.javax.sip.header.ContentDisposition: java.lang.String getContentDisposition()> 
<org.jivesoftware.smack.packet.Packet: java.lang.Object getProperty(java.lang.String)> 
<org.jivesoftware.smack.packet.Packet: long getRmqId()> 
<org.kxml2.io.KXmlSerializer: java.lang.Object getProperty(java.lang.String)> 
<net.oauth.http.HttpMessageDecoder: int getStatusCode()> 
<android.view.ViewDebug: long getViewRootImplCount()> 
<gov.nist.javax.sip.message.SIPMessage: java.lang.String getFromTag()> 
<gov.nist.javax.sip.message.SIPResponse: java.lang.String getReasonPhrase(int)> 
<android.text.style.RelativeSizeSpan: float getSizeChange()> 
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: int getSoTimeout()> 
<org.apache.xml.utils.SuballocatedIntVector: int[] getMap0()> 
<android.net.NetworkStats: long getElapsedRealtime()> 
<android.filterfw.core.FrameFormat: int getDimensionCount()> 
<android.hardware.usb.UsbDeviceConnection: byte[] getRawDescriptors()> 
<android.renderscript.Matrix2f: void load(android.renderscript.Matrix2f)> 
<android.net.BaseNetworkStateTracker: android.net.LinkCapabilities getLinkCapabilities()> 
<android.view.FocusFinder: android.view.View getBackwardFocusable(android.view.ViewGroup,android.view.View,java.util.ArrayList,int)> 
<android.text.method.BaseMovementMethod: int getMovementMetaState(android.text.Spannable,android.view.KeyEvent)> 
<org.apache.harmony.xnet.provider.jsse.HandshakeProtocol: int getRSAKeyLength(java.security.PublicKey)> 
<org.apache.harmony.security.provider.cert.X509CertImpl: java.util.Date getNotAfter()> 
<android.content.res.TypedArray: int getLayoutDimension(int,int)> 
<android.widget.ListPopupWindow: int getSelectedItemPosition()> 
<org.apache.xpath.compiler.OpMap: org.apache.xml.utils.ObjectVector getTokenQueue()> 
<android.graphics.drawable.ScaleDrawable: float getPercent(android.content.res.TypedArray,int)> 
<android.webkit.WebSettingsClassic: void setMaximumDecodedImageSize(long)> 
<libcore.net.http.ResponseHeaders: java.lang.String getEtag()> 
<android.preference.GenericInflater: java.lang.String getDefaultPackage()> 
<net.oauth.OAuthProblemException: java.util.Map getParameters()> 
<org.apache.http.impl.client.EntityEnclosingRequestWrapper: org.apache.http.HttpEntity getEntity()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getFirstChild(int)> 
<android.support.v4.app.FragmentManagerImpl: int getBackStackEntryCount()> 
<org.apache.harmony.security.provider.cert.X509CertFactoryImpl: java.security.cert.CRL getCRL(byte[])> 
<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothDevice getRemoteDevice()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: java.lang.String getNamespaceURI(int)> 
<android.media.audiofx.EnvironmentalReverb: short getDensity()> 
<java.security.KeyFactory: java.lang.String getAlgorithm()> 
<android.test.mock.MockResources: android.content.res.XmlResourceParser getXml(int)> 
<dalvik.system.DexFile: java.lang.Class loadClass(java.lang.String,java.lang.ClassLoader)> 
<java.nio.NIOAccess: java.lang.Object getBaseArray(java.nio.Buffer)> 
<android.app.ActivityManagerProxy: int getUidForIntentSender(android.content.IIntentSender)> 
<android.os.Bundle: java.util.ArrayList getCharSequenceArrayList(java.lang.String)> 
<gov.nist.javax.sip.parser.ContentEncodingParser: gov.nist.javax.sip.header.SIPHeader parse()> 
<org.kxml2.io.KXmlParser: java.lang.String getPublicId()> 
<org.apache.xpath.compiler.Keywords: java.lang.Object getKeyWord(java.lang.String)> 
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.security.Principal getPeerPrincipal()> 
<android.widget.ExpandableListView: android.widget.ExpandableListAdapter getExpandableListAdapter()> 
<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTAttributeDef getAttributeDef(java.lang.String,java.lang.String)> 
<org.jivesoftware.smack.XMPPConnection: long getDefaultAccountId()> 
<android.webkit.URLUtil: int parseHex(byte)> 
<org.apache.xalan.templates.XUnresolvedVariable: int getType()> 
<org.apache.james.mime4j.field.ContentTypeField: java.lang.String getMimeType(org.apache.james.mime4j.field.ContentTypeField,org.apache.james.mime4j.field.ContentTypeField)> 
<android.animation.ValueAnimator: long getStartDelay()> 
<org.apache.commons.io.input.NullReader: long getSize()> 
<android.graphics.Bitmap: int getGenerationId()> 
<android.location.Address: java.lang.String getPremises()> 
<java.nio.DirectByteBuffer: void get(short[],int,int)> 
<android.media.MiniThumbFile: long getMagic(long)> 
<android.webkit.WebBackForwardListClassic: boolean getClearPending()> 
<android.webkit.WebViewFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> 
<libcore.net.http.HttpsURLConnectionImpl: long getLastModified()> 
<android.webkit.WebSettingsClassic: boolean getMediaPlaybackRequiresUserGesture()> 
<android.text.PackedIntVector: int getValue(int,int)> 
<gov.nist.javax.sip.stack.SIPTransaction: java.net.InetAddress getPeerInetAddress()> 
<android.renderscript.BaseObj: int getID(android.renderscript.RenderScript)> 
<android.app.ExpandableListActivity: android.widget.ExpandableListView getExpandableListView()> 
<org.apache.xml.dtm.ref.DTMDefaultBase: boolean getDocumentAllDeclarationsProcessed()> 
<android.webkit.JniUtil: java.lang.String getCacheDirectory()> 
<android.content.SyncStorageEngine: int getCurrentDayLocked()> 
<android.widget.RemoteViewsAdapter: int getCount()> 
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)> 
<java.nio.MappedByteBufferAdapter: char getChar()> 
<org.apache.xml.utils.res.XResources_cy: java.lang.Object[][] getContents()> 
<org.apache.harmony.security.asn1.ASN1Set: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)> 
<java.util.logging.LogRecord: java.lang.String getSourceClassName()> 
<android.support.v4.app.Fragment: java.lang.CharSequence getText(int)> 
<org.apache.james.mime4j.field.datetime.parser.DateTimeParser: org.apache.james.mime4j.field.datetime.parser.Token getNextToken()> 
<android.test.InstrumentationTestRunner: android.test.AndroidTestRunner getAndroidTestRunner()> 
<org.apache.xml.utils.SystemIDResolver: java.lang.String getAbsoluteURI(java.lang.String,java.lang.String)> 
<java.util.Locale: java.util.Locale[] getAvailableLocales()> 
<org.apache.xml.utils.res.XResources_de: java.lang.Object[][] getContents()> 
<android.view.View: void getLocationInWindow(int[])> 
<org.apache.xpath.axes.FilterExprIterator: int getAnalysisBits()> 
<android.webkit.WebSettings: java.lang.String getStandardFontFamily()> 
<java.io.EmulatedFieldsForLoading: float get(java.lang.String,float)> 
<android.webkit.WebViewClassic: float getZoomOverviewScale()> 
<android.database.AbstractWindowedCursor: int getType(int)> 
<java.util.zip.Deflater: int getAdler()> 
<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()> 
<libcore.io.ForwardingOs: java.net.InetAddress getsockoptInAddr(java.io.FileDescriptor,int,int)> 
<android.view.ViewConfiguration: int getTouchSlop()> 
<java.security.cert.X509CertSelector: byte[] getAuthorityKeyIdentifier()> 
<org.apache.xml.utils.res.XResources_fr: java.lang.Object[][] getContents()> 
<org.jivesoftware.smack.XMPPConnection: java.lang.String getUser()> 
<java.io.PushbackReader: int read(char[],int,int)> 
<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPServerTransaction getInviteTransaction()> 
<android.view.View: android.os.IBinder getApplicationWindowToken()> 
<android.widget.TableRow: android.view.View getVirtualChildAt(int)> 
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()> 
<org.apache.xml.utils.res.XResources_el: java.lang.Object[][] getContents()> 
<android.media.SoundPool: int load(android.content.Context,int,int)> 
<org.apache.xml.utils.res.XResources_en: java.lang.Object[][] getContents()> 
<android.mtp.MtpDevice: int[] getStorageIds()> 
<android.app.admin.DevicePolicyManager: int getPasswordMinimumNumeric(android.content.ComponentName,int)> 
<org.apache.xml.utils.res.XResources_es: java.lang.Object[][] getContents()> 
<org.apache.http.protocol.UriPatternMatcher: java.util.Map getObjects()> 
<android.app.LoadedApk: android.content.pm.ApplicationInfo getApplicationInfo()> 
<android.net.nsd.DnsSdTxtRecord: byte[] getValue(java.lang.String)> 
<android.graphics.drawable.ScaleDrawable: int getOpacity()> 
<org.apache.xml.utils.DOM2Helper: java.lang.String getNamespaceOfNode(org.w3c.dom.Node)> 
<org.jivesoftware.smack.ServerTrustManager: java.lang.String getPeerIdentity(java.security.cert.X509Certificate)> 
<org.apache.xml.dtm.ref.SecuritySupport: java.lang.String getSystemProperty(java.lang.String)> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getStringValueChunkCount(int)> 
<org.apache.james.mime4j.message.TempFileTextBody: java.io.Reader getReader()> 
<gov.nist.javax.sip.SipStackImpl: java.lang.String getIPAddress()> 
<android.view.InputDevice: int getSources()> 
<org.apache.harmony.security.x509.TBSCertificate: boolean[] getIssuerUniqueID()> 
<android.os.Debug: int getGlobalAllocCount()> 
<org.apache.xml.utils.res.XResources_he: java.lang.Object[][] getContents()> 
<android.widget.ListPopupWindow: android.graphics.drawable.Drawable getBackground()> 
<android.test.mock.MockContext: java.lang.String getPackageName()> 
<gov.nist.javax.sip.stack.TLSMessageProcessor: int getMaximumMessageSize()> 
<org.apache.http.message.ParserCursor: int getUpperBound()> 
<java.lang.ExceptionInInitializerError: java.lang.Throwable getException()> 
<gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.message.Request createRequest(java.lang.String)> 
<org.apache.harmony.security.asn1.ASN1Time: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> 
<org.apache.james.mime4j.field.Field: java.lang.String getBody()> 
<javax.crypto.ExemptionMechanism: java.security.Provider getProvider()> 
<android.media.effect.FilterEffect: java.lang.String getName()> 
<org.apache.xml.dtm.ref.DTMManagerDefault: org.xml.sax.XMLReader getXMLReader(javax.xml.transform.Source)> 
<gov.nist.javax.sip.stack.SIPTransaction: int getPort()> 
<android.view.MotionEvent: float getHistoricalToolMajor(int,int)> 
<android.test.suitebuilder.TestGrouping: java.util.List getTestMethods(java.lang.Class)> 
<org.apache.xalan.templates.KeyDeclaration: org.apache.xpath.XPath getMatch()> 
<org.apache.xml.utils.res.XResources_it: java.lang.Object[][] getContents()> 
<org.apache.xpath.functions.SecuritySupport: org.apache.xpath.functions.SecuritySupport getInstance()> 
<org.jivesoftware.smack.packet.Message: long getTimestamp()> 
<android.text.BoringLayout: int getHeight()> 
<android.test.mock.MockContext: android.content.res.Resources getResources()> 
<android.widget.ExpandableListView: int getAbsoluteFlatPosition(int)> 
<org.apache.james.mime4j.field.ContentTypeField: java.lang.String getMimeType()> 
<android.app.Instrumentation: android.content.Context getContext()> 
<android.view.inputmethod.InputMethodInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)> 
<android.net.ConnectivityManager: int getLastTetherError(java.lang.String)> 
<android.appwidget.AppWidgetHostView: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo()> 
<android.app.ContextImpl: android.content.Context getReceiverRestrictedContext()> 
<java.net.DatagramSocketImpl: java.io.FileDescriptor getFileDescriptor()> 
<android.test.mock.MockResources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)> 
<org.apache.xml.utils.res.XResources_hy: java.lang.Object[][] getContents()> 
<javax.crypto.EncryptedPrivateKeyInfo: java.security.spec.PKCS8EncodedKeySpec getKeySpec(java.security.Key)> 
<gov.nist.javax.sip.stack.SIPDialog: long getOriginalLocalSequenceNumber()> 
<android.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String)> 
<java.awt.font.NumericShaper: java.awt.font.NumericShaper getContextualShaper(int)> 
<android.media.AudioRecord: int read(byte[],int,int)> 
<org.apache.xml.serializer.CharInfo: org.apache.xml.serializer.CharInfo getCharInfo(java.lang.String,java.lang.String)> 
<org.apache.commons.io.filefilter.OrFileFilter: java.util.List getFileFilters()> 
<org.apache.xalan.templates.ElemLiteralResult: org.apache.xalan.templates.AVT getLiteralResultAttribute(java.lang.String)> 
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.DocumentFragment createDocumentFragment()> 
<gov.nist.javax.sip.address.UserInfo: java.lang.String getPassword()> 
<gov.nist.javax.sip.stack.TLSMessageChannel: java.lang.String getPeerAddress()> 
<libcore.net.http.HttpsURLConnectionImpl: java.net.URL getURL()> 
<android.content.CursorLoader: void onStartLoading()> 
<android.widget.SearchView: int getSearchIconId()> 
<org.apache.xalan.templates.DecimalFormatProperties: char getPatternSeparator()> 
<org.apache.http.entity.InputStreamEntity: long getContentLength()> 
<android.media.videoeditor.MediaImageItem: int getGeneratedClipWidth()> 
<android.telephony.NeighboringCellInfo: int getNetworkType()> 
<android.text.StaticLayout: int getLineForVertical(int)> 
<org.apache.http.impl.conn.DefaultClientConnection: java.net.Socket getSocket()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.io.FileDescriptor getFileDescriptor$()> 
<android.net.LinkProperties: java.util.Collection getLinkAddresses()> 
<java.nio.BaseByteBuffer: char getChar()> 
<libcore.net.http.HttpsURLConnectionImpl: int getConnectTimeout()> 
<org.apache.http.protocol.HttpDateGenerator: java.lang.String getCurrentDate()> 
<java.net.HttpURLConnection: java.lang.String getRequestMethod()> 
<android.app.admin.DevicePolicyManager: android.content.ComponentName getGlobalProxyAdmin()> 
<android.net.sip.SipProfile: java.lang.String getProfileName()> 
<android.net.MobileDataStateTracker: void getPhoneService(boolean)> 
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.Header getHeaderLowerCase(java.lang.String)> 
<org.apache.xml.utils.QName: java.lang.String getLocalPart(java.lang.String)> 
<gov.nist.javax.sip.header.ContentLanguage: java.util.Locale getContentLanguage()> 
<gov.nist.javax.sip.stack.TLSMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()> 
<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getParentElem()> 
<gov.nist.javax.sip.address.TelURLImpl: java.util.Iterator getParameterNames()> 
<gov.nist.javax.sip.message.ContentImpl: javax.sip.header.ContentTypeHeader getContentTypeHeader()> 
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.Intent)> 
<android.content.SyncStorageEngine: android.content.SyncStorageEngine$AuthorityInfo getAuthorityLocked(android.accounts.Account,int,java.lang.String,java.lang.String)> 
<android.app.ApplicationPackageManager: java.util.List getInstalledPackages(int,int)> 
<android.widget.ArrayAdapter: java.lang.Object getItem(int)> 
<android.media.videoeditor.MediaVideoItem: int getHeight()> 
<libcore.net.url.FtpURLConnection: java.lang.String readLine()> 
<org.apache.xml.utils.AttList: int getIndex(java.lang.String)> 
<org.apache.harmony.security.provider.cert.X509CRLImpl: byte[] getEncoded()> 
<org.apache.xpath.NodeSet: int getLast()> 
<java.security.spec.RSAPrivateCrtKeySpec: java.math.BigInteger getPublicExponent()> 
<javax.xml.datatype.Duration: long getTimeInMillis(java.util.Calendar)> 
<org.apache.xml.dtm.ref.ExtendedType: java.lang.String getNamespace()> 
<android.webkit.WebViewClassic: int getContentWidth()> 
<android.content.pm.ContainerEncryptionParams: java.security.spec.AlgorithmParameterSpec getEncryptionSpec()> 
<android.view.View: float getRotation()> 
<android.telephony.TelephonyManager: java.lang.String getNetworkTypeName(int)> 
<org.apache.xml.utils.ObjectFactory: java.lang.ClassLoader findClassLoader()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getOwnerDocument(int)> 
<org.apache.xml.dtm.ref.DTMDefaultBase: int getPreviousSibling(int)> 
<android.webkit.WebSettingsClassic: boolean getHardwareAccelSkiaEnabled()> 
<java.net.ProxySelector: java.net.ProxySelector getDefault()> 
<org.apache.harmony.security.provider.cert.X509CertFactoryImpl: java.security.cert.Certificate getCertificate(java.io.InputStream)> 
<android.app.ActivityOptions: java.lang.String getPackageName()> 
<android.net.sip.SipManager: java.lang.String getOfferSessionDescription(android.content.Intent)> 
<android.gesture.Gesture: java.util.ArrayList getStrokes()> 
<org.apache.xml.utils.SecuritySupport: java.lang.ClassLoader getSystemClassLoader()> 
<org.apache.xalan.templates.ElemVariable: int getIndex()> 
<org.ccil.cowan.tagsoup.AttributesImpl: int getLength()> 
<android.app.BackStackRecord: int getTransitionStyle()> 
<org.apache.xalan.templates.ElemExtensionDecl: java.lang.String getPrefix()> 
<android.filterfw.core.Frame: int getCapacity()> 
<org.apache.http.entity.HttpEntityWrapper: org.apache.http.Header getContentType()> 
<java.util.ServiceLoader: java.lang.Object loadFromSystemProperty(java.lang.Class)> 
<jp.co.omronsoft.openwnn.Keyboard: int getShiftKeyIndex()> 
<android.media.videoeditor.MediaImageItem: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings getKenBurns(android.media.videoeditor.EffectKenBurns)> 
<org.apache.xml.res.XMLErrorResources: org.apache.xml.res.XMLErrorResources loadResourceBundle(java.lang.String)> 
<android.text.SpannableString: int getSpanEnd(java.lang.Object)> 
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthTokenByFeatures(java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler)> 
<android.support.v4.content.AsyncTaskLoader: void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object)> 
<org.apache.http.client.methods.HttpDelete: java.lang.String getMethod()> 
<org.jivesoftware.smack.packet.Registration: java.lang.String getInstructions()> 
<android.opengl.GLLogWrapper: java.lang.String getHintMode(int)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getInstance(java.security.interfaces.RSAPrivateKey)> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: org.apache.xml.dtm.ref.DTMStringPool getPrefixNameTable()> 
<gov.nist.javax.sip.header.AcceptEncoding: float getQValue()> 
<java.security.cert.X509CertSelector: boolean[] getKeyUsage()> 
<android.widget.TextView: android.view.AccessibilityIterators$TextSegmentIterator getIteratorForGranularity(int)> 
<android.preference.Preference: android.preference.PreferenceManager getPreferenceManager()> 
<gov.nist.javax.sip.stack.MessageProcessor: java.lang.String getSavedIpAddress()> 
<android.view.MotionEvent: int getToolType(int)> 
<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.WhiteSpaceInfo getWhiteSpaceInfo(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM)> 
<java.lang.Package: java.lang.Package[] getPackages()> 
<org.apache.xalan.templates.AVTPartXPath: java.lang.String getSimpleString()> 
<org.apache.xml.serializer.SecuritySupport: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)> 
<java.nio.SocketChannelImpl: java.io.FileDescriptor getFD()> 
<android.net.wifi.p2p.WifiP2pWfdInfo: int getDeviceType()> 
<android.content.res.Resources: void getValue(java.lang.String,android.util.TypedValue,boolean)> 
<android.text.method.QwertyKeyListener: android.text.method.QwertyKeyListener getInstanceForFullKeyboard()> 
<android.test.ProviderTestCase: android.test.mock.MockContentResolver getMockContentResolver()> 
<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.message.Response getResponse()> 
<java.text.DecimalFormatSymbols: char getPerMill()> 
<android.view.View: int getNextFocusUpId()> 
<javax.crypto.spec.PBEKeySpec: int getKeyLength()> 
<android.net.LinkSocket: java.util.Set getTrackedCapabilities()> 
<android.renderscript.ScriptIntrinsicYuvToRGB: android.renderscript.Script$KernelID getKernelID()> 
<android.webkit.WebView: void ensureProviderCreated()> 
<org.jivesoftware.smack.util.StringUtils: java.lang.String parseBareAddress(java.lang.String)> 
<android.content.pm.ContainerEncryptionParams: java.security.spec.AlgorithmParameterSpec getMacSpec()> 
<gov.nist.javax.sip.header.ContentType: java.lang.String getContentSubType()> 
<android.os.SystemProperties: int getInt(java.lang.String,int)> 
<android.widget.TextView: int getCompoundDrawablePadding()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: org.w3c.dom.TypeInfo getSchemaTypeInfo()> 
<android.speech.tts.EventLogger: int getUtteranceLength()> 
<android.app.Activity: android.view.WindowManager getWindowManager()> 
<android.widget.Toast: int getXOffset()> 
<android.view.View: float getTranslationY()> 
<java.util.Date: int getDate()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: org.xml.sax.ext.LexicalHandler getLexicalHandler()> 
<android.view.View: float getTranslationX()> 
<android.widget.TextClock: java.lang.CharSequence getFormat12Hour()> 
<android.filterpacks.imageproc.BlackWhiteFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<java.security.spec.EllipticCurve: byte[] getSeed()> 
<android.renderscript.Sampler: android.renderscript.Sampler$Value getWrapT()> 
<android.renderscript.Sampler: android.renderscript.Sampler$Value getWrapS()> 
<android.test.mock.MockContext: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)> 
<gov.nist.javax.sip.message.SIPMessage: java.lang.String getToTag()> 
<org.apache.harmony.security.x509.PolicyInformation: java.lang.String getPolicyIdentifier()> 
<android.graphics.Paint: android.graphics.Typeface getTypeface()> 
<android.telephony.SmsMessage: android.telephony.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean)> 
<org.apache.xpath.axes.LocPathIterator: int getRoot()> 
<javax.crypto.spec.PBEKeySpec: byte[] getSalt()> 
<android.net.Credentials: int getPid()> 
<org.apache.http.message.BasicLineParser: org.apache.http.ProtocolVersion parseProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)> 
<android.nfc.tech.NfcBarcode: byte[] getBarcode()> 
<android.net.http.Connection: byte[] getBuf()> 
<org.apache.xalan.templates.ElemNumber: org.apache.xalan.templates.AVT getLang()> 
<android.text.method.ScrollingMovementMethod: android.text.method.MovementMethod getInstance()> 
<android.text.SpannableStringInternal: int getSpanEnd(java.lang.Object)> 
<android.text.style.StyleSpan: int getStyle()> 
<java.security.spec.ECGenParameterSpec: java.lang.String getName()> 
<android.widget.TextView: java.util.Locale getTextServicesLocale()> 
<android.content.pm.PackageParser: android.content.pm.PackageParser$Permission parsePermission(android.content.pm.PackageParser$Package,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,java.lang.String[])> 
<android.content.CursorLoader: java.lang.String getSelection()> 
<libcore.net.http.HttpsURLConnectionImpl: java.lang.String getContentType()> 
<org.apache.harmony.security.x509.IssuingDistributionPoint: byte[] getEncoded()> 
<java.util.SimpleTimeZone: int getOffset(long)> 
<android.graphics.drawable.NinePatchDrawable: int getMinimumWidth()> 
<org.apache.xml.utils.res.XResources_sv: java.lang.Object[][] getContents()> 
<org.apache.xpath.axes.NodeSequence: int getCurrentPos()> 
<android.filterfw.core.FilterSurfaceView: int getSurfaceId()> 
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: java.util.Map getTxtRecord()> 
<libcore.net.http.HttpConnection: javax.net.ssl.SSLSocket getSecureSocketIfConnected()> 
<android.content.Intent: double[] getDoubleArrayExtra(java.lang.String)> 
<android.net.rtp.RtpStream: int getLocalPort()> 
<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.javax.sip.header.SIPHeader parse()> 
<android.media.videoeditor.MediaImageItem: long getTimelineDuration()> 
<android.view.inputmethod.InputMethodManager: java.util.Map getShortcutInputMethodsAndSubtypes()> 
<java.nio.ShortBuffer: java.nio.ShortBuffer get(short[],int,int)> 
<libcore.net.http.RequestHeaders: int getMaxStaleSeconds()> 
<java.security.spec.EncodedKeySpec: byte[] getEncoded()> 
<android.media.MediaRouter: int getRouteCountStatic()> 
<android.security.KeyStore: byte[] getPubkey(byte[])> 
<junit.runner.ReloadingTestSuiteLoader: junit.runner.TestCaseClassLoader createLoader()> 
<org.apache.xpath.NodeSetDTM: boolean getShouldCacheNodes()> 
<java.sql.DataTruncation: boolean getRead()> 
<android.preference.PreferenceManager: int getNextRequestCode()> 
<android.app.admin.DevicePolicyManager: int getKeyguardDisabledFeatures(android.content.ComponentName,int)> 
<gov.nist.core.Host: java.lang.String getIpAddress()> 
<gov.nist.javax.sip.header.AddressParametersHeader: javax.sip.address.Address getAddress()> 
<android.widget.LinearLayout: android.graphics.drawable.Drawable getDividerDrawable()> 
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: boolean getNeedClientAuth()> 
<org.apache.harmony.xnet.provider.jsse.CipherSuite: org.apache.harmony.xnet.provider.jsse.CipherSuite getByName(java.lang.String)> 
<android.content.pm.PackageParser: android.content.pm.PackageParser$Instrumentation parseInstrumentation(android.content.pm.PackageParser$Package,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,java.lang.String[])> 
<android.view.accessibility.AccessibilityInteractionClient: boolean getPerformAccessibilityActionResultAndClear(int)> 
<android.view.MotionEvent: float getY(int)> 
<android.webkit.WebSettingsClassic: int getTextZoom()> 
<android.view.MotionEvent: float getX(int)> 
<android.nfc.NfcAdapter: android.content.Context getContext()> 
<org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getSubjectAlts(java.security.cert.X509Certificate,java.lang.String)> 
<org.apache.xml.utils.UnImplNode: org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)> 
<android.telephony.cdma.CdmaCellLocation: int getSystemId()> 
<org.apache.harmony.luni.lang.reflect.ImplForType: java.lang.reflect.Type[] getActualTypeArguments()> 
<android.widget.SimpleCursorTreeAdapter: android.widget.SimpleCursorTreeAdapter$ViewBinder getViewBinder()> 
<android.webkit.UrlInterceptRegistry: android.webkit.CacheManager$CacheResult getSurrogate(java.lang.String,java.util.Map)> 
<android.gesture.GestureOverlayView: int getGestureStrokeType()> 
<android.widget.ExpandableListView: int getFlatListPosition(long)> 
<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)> 
<android.nfc.tech.IsoDep: android.nfc.tech.IsoDep get(android.nfc.Tag)> 
<android.webkit.MimeTypeMap: java.lang.String getExtensionFromMimeType(java.lang.String)> 
<java.text.DecimalFormat: int getMaximumFractionDigits()> 
<java.io.EmulatedFields: boolean get(java.lang.String,boolean)> 
<java.io.EmulatedFields: char get(java.lang.String,char)> 
<org.jivesoftware.smack.XMPPConnection: long getLastActivityFromServerTime()> 
<org.apache.harmony.xml.dom.ElementImpl: java.lang.String getPrefix()> 
<java.lang.reflect.Method: java.lang.Class getReturnType()> 
<android.os.AsyncTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)> 
<android.mtp.MtpObjectInfo: int getCompressedSize()> 
<android.util.XmlPullAttributes: int getAttributeResourceValue(int,int)> 
<org.apache.http.params.AbstractHttpParams: java.util.Set getNames()> 
<org.apache.xalan.templates.StylesheetRoot: java.lang.String getExtensionHandlerClass()> 
<android.net.LocalSocketImpl: java.io.FileDescriptor[] getAncillaryFileDescriptors()> 
<org.jivesoftware.smack.XMPPConnection: java.lang.String getHost()> 
<android.renderscript.Program: android.renderscript.Program$TextureType getTextureType(int)> 
<java.io.ObjectInputStream: int readInt()> 
<android.animation.ValueAnimator: float getDurationScale()> 
<org.apache.xml.utils.res.XResources_ka: java.lang.Object[][] getContents()> 
<android.renderscript.Sampler: android.renderscript.Sampler$Value getMagnification()> 
<libcore.net.http.HttpURLConnectionImpl: java.lang.String getAuthorizationCredentials(libcore.net.http.RawHeaders,java.lang.String)> 
<org.apache.harmony.security.provider.crypto.DSAPublicKeyImpl: java.math.BigInteger getY()> 
<android.mtp.MtpObjectInfo: int getAssociationType()> 
<java.io.StringReader: int read(char[],int,int)> 
<org.apache.xml.utils.res.XResources_ko: java.lang.Object[][] getContents()> 
<android.view.View: android.view.animation.Animation getAnimation()> 
<android.view.accessibility.AccessibilityRecord: java.util.List getText()> 
<android.os.Environment: java.io.File getDownloadCacheDirectory()> 
<android.test.mock.MockContext: java.io.File getExternalCacheDir()> 
<android.widget.ActivityChooserModel: android.content.pm.ResolveInfo getDefaultActivity()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLKey: java.lang.String getAlias()> 
<android.preference.DialogPreference: java.lang.CharSequence getNegativeButtonText()> 
<org.apache.xalan.processor.XSLTElementDef: java.lang.String getName()> 
<net.oauth.http.HttpMessage: java.lang.String getHeader(java.lang.String)> 
<android.app.FragmentManagerImpl: int getBackStackEntryCount()> 
<android.opengl.GLSurfaceView: int getDebugFlags()> 
<android.widget.AdapterViewAnimator: int getWindowSize()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: boolean getOOBInline()> 
<org.apache.xalan.templates.ElemTemplateElement: int getLineNumber()> 
<org.apache.xalan.templates.Stylesheet: java.lang.String getNodeName()> 
<android.widget.Switch: int getThumbTextPadding()> 
<net.oauth.OAuthMessage: java.lang.String getToken()> 
<javax.crypto.ExemptionMechanism: javax.crypto.ExemptionMechanism getInstance(java.lang.String,java.lang.String)> 
<org.apache.xpath.operations.Variable: org.apache.xalan.templates.ElemVariable getElemVariable()> 
<android.net.NetworkStatsHistory: android.net.NetworkStatsHistory$Entry getValues(int,android.net.NetworkStatsHistory$Entry)> 
<android.support.v4.app.FragmentManagerImpl: android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int)> 
<org.apache.xalan.templates.ElemTemplate: int getXSLToken()> 
<android.widget.RelativeLayout: android.view.View getRelatedView(int[],int)> 
<org.apache.harmony.security.x509.Extensions: byte[] getEncoded()> 
<android.widget.TextView: int getBottomPaddingOffset()> 
<org.jivesoftware.smackx.provider.SimpleVCardProvider: com.google.common.io.protocol.ProtoBufType getProtoBufType()> 
<java.security.cert.PKIXParameters: java.util.Set getInitialPolicies()> 
<android.widget.TextView: android.graphics.Path getUpdatedHighlightPath()> 
<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)> 
<org.apache.commons.io.input.SwappedDataInputStream: char readChar()> 
<android.graphics.Shader: boolean getLocalMatrix(android.graphics.Matrix)> 
<android.app.ContextImpl: int getUserId()> 
<android.support.v4.app.Fragment: java.lang.String getString(int,java.lang.Object[])> 
<gov.nist.javax.sip.header.SIPHeader: java.lang.String getHeaderName()> 
<android.app.Dialog: android.view.LayoutInflater getLayoutInflater()> 
<org.apache.commons.codec.net.BCodec: java.lang.String getEncoding()> 
<android.graphics.Paint: int getBidiFlags()> 
<android.accessibilityservice.AccessibilityService: android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow()> 
<android.media.videoeditor.TransitionAlpha: int getRGBFileWidth()> 
<org.apache.http.entity.SerializableEntity: java.io.InputStream getContent()> 
<org.apache.xpath.axes.ChildTestIterator: int getAxis()> 
<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()> 
<android.widget.DatePicker: int getMonth()> 
<java.io.ObjectStreamField: int getOffset()> 
<android.app.BackStackRecord: java.lang.CharSequence getBreadCrumbShortTitle()> 
<android.location.Location: long getTime()> 
<android.util.SparseBooleanArray: boolean get(int)> 
<android.widget.TextView: android.text.TextDirectionHeuristic getTextDirectionHeuristic()> 
<jp.co.omronsoft.openwnn.OpenWnnJAJP: int getShiftKeyState(android.view.inputmethod.EditorInfo)> 
<android.filterfw.core.FrameFormat: int[] getDimensions()> 
<java.security.cert.PKIXParameters: java.lang.String getSigProvider()> 
<android.telephony.NeighboringCellInfo: int getLac()> 
<org.apache.http.auth.NTCredentials: java.security.Principal getUserPrincipal()> 
<android.graphics.drawable.BitmapDrawable: int getOpacity()> 
<java.net.URISyntaxException: int getIndex()> 
<android.webkit.BrowserFrame: java.lang.String getRawResFilename(int,android.content.Context)> 
<org.xml.sax.helpers.NamespaceSupport: java.lang.String getURI(java.lang.String)> 
<android.bluetooth.BluetoothAdapter: int getScanMode()> 
<android.os.storage.StorageVolume: long getMaxFileSize()> 
<android.view.View: boolean getLocalVisibleRect(android.graphics.Rect)> 
<android.view.View: float getAlpha()> 
<android.view.View: int getNextFocusDownId()> 
<android.view.View: int getVerticalScrollbarPosition()> 
<java.sql.DataTruncation: int getDataSize()> 
<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()> 
<java.security.spec.RSAMultiPrimePrivateCrtKeySpec: java.math.BigInteger getPrimeP()> 
<org.apache.xalan.transformer.KeyIterator: org.apache.xml.utils.QName getName()> 
<java.security.spec.RSAMultiPrimePrivateCrtKeySpec: java.math.BigInteger getPrimeQ()> 
<java.lang.Class: java.lang.annotation.Annotation[] getAnnotations()> 
<java.security.cert.X509CertSelector: java.util.Collection getSubjectAlternativeNames()> 
<android.test.mock.MockResources: java.lang.String getResourceTypeName(int)> 
<org.apache.commons.io.input.TeeInputStream: int read(byte[],int,int)> 
<java.net.URI: java.lang.String getPath()> 
<java.net.URL: java.lang.String getPath()> 
<android.app.ActivityManager: int getLauncherLargeIconSize()> 
<gov.nist.javax.sip.parser.RAckParser: gov.nist.javax.sip.header.SIPHeader parse()> 
<android.util.EventLogTags: android.util.EventLogTags$Description get(int)> 
<java.net.Inet4Address: java.lang.String getHostAddress()> 
<java.util.concurrent.atomic.AtomicIntegerArray: int get(int)> 
<android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View,int)> 
<net.oauth.OAuthProblemException: java.lang.String getMessage()> 
<android.widget.TextView: int getCompoundPaddingEnd()> 
<org.apache.http.impl.conn.tsccm.AbstractConnPool: org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntry(org.apache.http.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit)> 
<org.apache.xml.utils.DOM2Helper: org.w3c.dom.Element getElementByID(java.lang.String,org.w3c.dom.Document)> 
<java.nio.DatagramChannelImpl: java.net.InetAddress getLocalAddress()> 
<android.net.wifi.p2p.WifiP2pGroup: int getNetworkId()> 
<android.widget.TextView: android.os.Bundle getInputExtras(boolean)> 
<android.database.CursorWrapper: java.lang.String getString(int)> 
<android.view.TextureView: android.graphics.Matrix getTransform(android.graphics.Matrix)> 
<org.apache.xpath.Expression: int getLineNumber()> 
<java.util.TimeZone: int getOffset(long)> 
<org.apache.http.impl.io.AbstractSessionInputBuffer: int read(byte[],int,int)> 
<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: int getAndIncrement(java.lang.Object)> 
<org.apache.xalan.templates.StylesheetRoot: java.text.DecimalFormatSymbols getDecimalFormatComposed(org.apache.xml.utils.QName)> 
<java.net.URL: java.lang.Object getContent(java.lang.Class[])> 
<org.apache.harmony.xml.ExpatParser: void parseFragment(java.io.Reader)> 
<org.apache.harmony.xnet.provider.jsse.ProtocolVersion: org.apache.harmony.xnet.provider.jsse.ProtocolVersion getLatestVersion(java.lang.String[])> 
<org.apache.harmony.security.provider.cert.X509CRLImpl: java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)> 
<gov.nist.javax.sip.header.Accept: gov.nist.javax.sip.header.MediaRange getMediaRange()> 
<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()> 
<android.webkit.BrowserFrame: void loadData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> 
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getLabelFor()> 
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getDocumentURI()> 
<android.drm.ProcessedData: byte[] getData()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.io.InputStream getInputStream()> 
<org.json.JSONArray: boolean getBoolean(int)> 
<java.sql.DataTruncation: int getTransferSize()> 
<android.text.DynamicLayout: int getNumberOfBlocks()> 
<android.net.http.RequestQueue: android.net.http.Request removeFirst(java.util.LinkedHashMap)> 
<android.database.sqlite.SQLiteProgram: java.lang.String[] getColumnNames()> 
<java.nio.HeapByteBuffer: char getChar(int)> 
<android.inputmethodservice.SoftInputWindow: int getSize()> 
<android.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getIcon2(android.database.Cursor)> 
<android.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getIcon1(android.database.Cursor)> 
<android.content.res.TypedArray: float getDimension(int,float)> 
<android.webkit.WebSettings: boolean getSaveFormData()> 
<android.media.MediaFile: java.lang.String getFileTitle(java.lang.String)> 
<org.jivesoftware.smack.SmackConfiguration: int getKeepAliveInterval()> 
<android.preference.Preference: android.preference.Preference$OnPreferenceClickListener getOnPreferenceClickListener()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: int getHandleFromNode(org.w3c.dom.Node)> 
<android.view.View: int getLeftPaddingOffset()> 
<android.media.AudioService: int getStreamVolume(int)> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: java.lang.String getTypeName()> 
<android.text.method.SingleLineTransformationMethod: char[] getOriginal()> 
<java.net.Inet6Address: byte[] getAddress()> 
<org.apache.xml.utils.PrefixResolverDefault: java.lang.String getNamespaceForPrefix(java.lang.String)> 
<org.apache.http.params.HttpProtocolParams: java.lang.String getUserAgent(org.apache.http.params.HttpParams)> 
<java.util.Locale: java.lang.String getDisplayName()> 
<android.provider.Browser: android.database.Cursor getAllVisitedUrls(android.content.ContentResolver)> 
<org.jivesoftware.smackx.packet.VCard: byte[] getFileBytes(java.io.File)> 
<java.util.regex.PatternSyntaxException: int getIndex()> 
<android.webkit.SslClientCertLookupTable: android.webkit.SslClientCertLookupTable getInstance()> 
<android.content.IntentSender: java.lang.String getTargetPackage()> 
<android.hardware.SerialPort: java.lang.String getName()> 
<android.widget.DatePicker: long getMinDate()> 
<android.app.ActivityOptions: int getStartY()> 
<android.app.ActivityOptions: int getStartX()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: int getNextNodeIdentity(int)> 
<org.apache.xalan.transformer.TransformerImpl: short getShouldStripSpace(int,org.apache.xml.dtm.DTM)> 
<android.app.LoadedApk: java.lang.String getLibDir()> 
<android.widget.VideoView: int getCurrentPosition()> 
<java.security.DigestInputStream: java.security.MessageDigest getMessageDigest()> 
<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getTransport()> 
<android.mtp.MtpDeviceInfo: java.lang.String getManufacturer()> 
<android.net.http.HttpsConnection: java.lang.String getScheme()> 
<android.app.Dialog: android.app.ActionBar getActionBar()> 
<org.apache.xml.dtm.ref.DTMDefaultBase: org.apache.xml.dtm.DTMManager getManager()> 
<org.apache.http.conn.routing.HttpRoute: org.apache.http.conn.routing.RouteInfo$LayerType getLayerType()> 
<android.widget.ViewAnimator: int getDisplayedChild()> 
<android.widget.TextView: android.graphics.Typeface getTypeface()> 
<gov.nist.javax.sip.parser.AcceptLanguageParser: gov.nist.javax.sip.header.SIPHeader parse()> 
<android.provider.Browser: java.lang.String[] getVisitedHistory(android.content.ContentResolver)> 
<android.telephony.SignalStrength: int getGsmBitErrorRate()> 
<org.kxml2.io.KXmlParser: void readEntityDeclaration()> 
<org.apache.harmony.security.asn1.DerOutputStream: void getValueOfLength(org.apache.harmony.security.asn1.ASN1ValueCollection)> 
<android.media.CameraProfile: int[] getImageEncodingQualityLevels(int)> 
<java.net.Socks4Message: java.lang.String getErrorString(int)> 
<libcore.net.MimeUtils: java.io.InputStream getContentTypesPropertiesStream()> 
<android.net.wifi.WifiStateMachine: android.os.Messenger getMessenger()> 
<android.net.TrafficStats: long getMobileRxPackets()> 
<libcore.net.http.ResponseHeaders: libcore.net.http.RawHeaders getHeaders()> 
<android.content.res.TypedArray: int getIndexCount()> 
<android.net.rtp.RtpStream: java.net.InetAddress getLocalAddress()> 
<org.apache.harmony.security.x509.Extension: byte[] getRawExtnValue()> 
<org.jivesoftware.smack.packet.LoginRequest: java.lang.String getUser()> 
<android.app.DownloadManager: android.net.Uri getUriForDownloadedFile(long)> 
<org.apache.xml.dtm.ref.DTMDefaultBase: int getTypedFirstChild(int,int)> 
<gov.nist.javax.sip.message.SIPMessage: java.util.ListIterator getHeaders(java.lang.String)> 
<android.hardware.Sensor: int getHandle()> 
<java.lang.Package: java.lang.String getSpecificationVersion()> 
<junit.runner.TestCaseClassLoader: byte[] getClassData(java.io.File)> 
<org.apache.http.impl.io.AbstractSessionOutputBuffer: org.apache.http.io.HttpTransportMetrics getMetrics()> 
<android.webkit.WebView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)> 
<java.nio.DoubleArrayBuffer: double get()> 
<org.apache.xalan.templates.ElemCopy: int getXSLToken()> 
<org.apache.http.auth.AuthScope: java.lang.String getHost()> 
<java.security.spec.RSAOtherPrimeInfo: java.math.BigInteger getExponent()> 
<android.server.search.Searchables: android.content.ComponentName getWebSearchActivity()> 
<org.apache.http.impl.SocketHttpClientConnection: java.net.Socket getSocket()> 
<gov.nist.javax.sip.SipStackImpl: gov.nist.javax.sip.LogRecordFactory getLogRecordFactory()> 
<java.io.LineNumberInputStream: int read(byte[],int,int)> 
<org.apache.xalan.templates.ElemExsltFunction: int getXSLToken()> 
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: java.net.InetAddress getLocalAddress()> 
<android.widget.CalendarView: android.graphics.drawable.Drawable getSelectedDateVerticalBar()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPublicKey: java.lang.String getAlgorithm()> 
<org.jivesoftware.smack.packet.LoginRequest: java.lang.String getResource()> 
<android.telephony.CellSignalStrengthGsm: int getAsuLevel()> 
<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getInAnimation()> 
<android.media.AudioManager: int getStreamVolume(int)> 
<android.widget.CalendarView: int getWeekNumberColor()> 
<android.widget.PopupWindow: android.graphics.drawable.Drawable getBackground()> 
<org.jivesoftware.smack.packet.LoginRequest: long getLastRmqId()> 
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: boolean getUseClientMode()> 
<android.net.sip.SipSession: java.lang.String getLocalIp()> 
<org.apache.harmony.xnet.provider.jsse.CipherSuite: java.lang.String getHmacName()> 
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.Object getInfo()> 
<android.test.mock.MockContext: java.io.File getFilesDir()> 
<android.content.res.TypedArray: java.lang.CharSequence loadStringValueAt(int)> 
<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse getReliableProvisionalResponse()> 
<android.app.NotificationManager: android.app.INotificationManager getService()> 
<android.preference.Preference: java.lang.String getFragment()> 
<org.apache.xml.serializer.utils.StringToIntTable: int get(java.lang.String)> 
<android.filterpacks.imageproc.BrightnessFilter: android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)> 
<org.apache.xpath.NodeSetDTM: org.apache.xml.dtm.DTMFilter getFilter()> 
<android.os.Bundle: java.lang.Byte getByte(java.lang.String,byte)> 
<android.text.format.DateFormat: java.lang.String getDateFormatString(android.content.Context)> 
<java.lang.Runtime: java.lang.Runtime getRuntime()> 
<java.io.ObjectInputStream: java.lang.Object readObjectOverride()> 
<android.content.pm.Signature: java.security.PublicKey getPublicKey()> 
<org.jivesoftware.smack.packet.Message: java.lang.String getThread()> 
<android.accounts.ChooseTypeAndAccountActivity: java.util.ArrayList getAcceptableAccountChoices(android.accounts.AccountManager)> 
<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Collection getDialogs(javax.sip.DialogState)> 
<java.net.PlainSocketImpl: java.lang.Object getOption(int)> 
<java.security.KeyPair: java.security.PrivateKey getPrivate()> 
<android.filterfw.format.ObjectFormat: java.lang.Class getBoxedClass(java.lang.Class)> 
<android.preference.MultiCheckPreference: boolean getValue(int)> 
<java.net.HttpURLConnection: java.lang.String getHeaderField(int)> 
<gov.nist.core.Host: java.net.InetAddress getInetAddress()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: java.lang.String getDocumentVersion(int)> 
<android.app.admin.DevicePolicyManager: int getPasswordMinimumNumeric(android.content.ComponentName)> 
<android.view.ScaleGestureDetector: long getTimeDelta()> 
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: javax.net.ssl.SSLSession getSession()> 
<java.security.spec.PSSParameterSpec: int getSaltLength()> 
<android.text.AutoText: android.text.AutoText getInstance(android.view.View)> 
<libcore.net.http.HttpURLConnectionImpl: libcore.net.http.HttpEngine getResponse()> 
<android.content.pm.PackageParser: android.content.pm.PackageParser$Package parsePackage(android.content.res.Resources,android.content.res.XmlResourceParser,int,java.lang.String[])> 
<gov.nist.javax.sip.parser.RSeqParser: gov.nist.javax.sip.header.SIPHeader parse()> 
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: int getWaitQueueLength(java.util.concurrent.locks.AbstractQueuedLongSynchronizer$ConditionObject)> 
<javax.xml.validation.ValidatorHandler: java.lang.Object getProperty(java.lang.String)> 
<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getURI(int)> 
<org.apache.xalan.templates.ElemNumber: org.apache.xalan.templates.AVT getGroupingSeparator()> 
<java.util.MissingFormatWidthException: java.lang.String getMessage()> 
<org.xml.sax.helpers.NamespaceSupport: java.util.Enumeration getPrefixes()> 
<android.inputmethodservice.Keyboard: int getHeight()> 
<android.test.mock.MockResources: android.content.res.XmlResourceParser getLayout(int)> 
<java.nio.MappedByteBufferAdapter: int getInt()> 
<java.sql.SQLException: int getErrorCode()> 
<android.support.v4.app.FragmentActivity: java.lang.Object getLastCustomNonConfigurationInstance()> 
<libcore.net.http.HttpEngine: java.lang.String getDefaultUserAgent()> 
<android.app.BackStackRecord: java.lang.String getName()> 
<org.apache.xalan.templates.OutputProperties: java.util.Vector getQNameProperties(org.apache.xml.utils.QName)> 
<org.xmlpull.v1.sax2.Driver: java.lang.String getPublicId()> 
<android.content.ContentResolver: java.util.List getCurrentSyncs()> 
<org.apache.harmony.security.asn1.ASN1GeneralizedTime: org.apache.harmony.security.asn1.ASN1GeneralizedTime getInstance()> 
<android.webkit.WebView: void loadUrl(java.lang.String)> 
<java.io.RandomAccessFile: int readInt()> 
<android.text.SpannedString: int getSpanStart(java.lang.Object)> 
<android.animation.Animator: java.util.ArrayList getListeners()> 
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)> 
<java.net.MulticastSocket: int getTimeToLive()> 
<org.apache.http.impl.conn.AbstractClientConnAdapter: int getRemotePort()> 
<org.apache.xml.serializer.dom3.DOM3SerializerImpl: org.w3c.dom.ls.LSSerializerFilter getNodeFilter()> 
<org.apache.http.params.DefaultedHttpParams: java.util.Set getNames(org.apache.http.params.HttpParams)> 
<android.test.AndroidTestCase: android.content.Context getContext()> 
<android.widget.AutoCompleteTextView: android.graphics.drawable.Drawable getDropDownBackground()> 
<android.net.http.Headers: java.lang.String getExpires()> 
<org.apache.harmony.xml.ExpatParser: void parseFragment(java.io.InputStream)> 
<java.lang.reflect.Field: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)> 
<org.apache.xml.utils.AttList: java.lang.String getValue(java.lang.String,java.lang.String)> 
<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo getContextMenuInfo()> 
<android.view.KeyCharacterMap: android.view.KeyCharacterMap$FallbackAction getFallbackAction(int,int)> 
<org.apache.harmony.xml.ExpatReader: org.xml.sax.ErrorHandler getErrorHandler()> 
<gov.nist.javax.sip.SipStackImpl: java.util.Iterator getSipProviders()> 
<java.security.UnresolvedPermission: java.lang.String getActions()> 
<org.apache.http.impl.client.RequestWrapper: org.apache.http.HttpRequest getOriginal()> 
<android.view.VelocityTracker: float getXVelocity(int)> 
<android.support.v4.view.accessibility.AccessibilityRecordCompat: int getRemovedCount()> 
<android.view.View: int[] getDrawableState()> 
<org.json.JSONObject: boolean getBoolean(java.lang.String)> 
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getAmpAndSpaceLegal()> 
<android.app.Fragment: android.app.FragmentManager getChildFragmentManager()> 
<android.support.v4.app.NavUtils: android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class)> 
<org.apache.xalan.templates.ElemExtensionCall: org.apache.xalan.templates.ElemExtensionDecl getElemExtensionDecl(org.apache.xalan.templates.StylesheetRoot,java.lang.String)> 
<java.security.cert.CertStore: java.lang.String getType()> 
<android.support.v4.view.ViewCompatJellybeanMr1: int getLabelFor(android.view.View)> 
<gov.nist.javax.sip.header.ParametersHeader: gov.nist.core.NameValue getNameValue(java.lang.String)> 
<org.xmlpull.v1.sax2.Driver: java.lang.String getSystemId()> 
<java.util.concurrent.RecursiveTask: java.lang.Object getRawResult()> 
<org.apache.harmony.security.x509.CertificateList: byte[] getSignatureValue()> 
<android.content.SyncManager: android.content.SyncStorageEngine getSyncStorageEngine()> 
<android.app.BackStackRecord: int getBreadCrumbShortTitleRes()> 
<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()> 
<org.jivesoftware.smackx.provider.DiscoverInfoProvider: org.jivesoftware.smack.packet.IQ parseIQ(com.google.common.io.protocol.ProtoBuf)> 
<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()> 
<android.test.DatabaseTestUtils: java.util.Set getSchemaSet(android.database.sqlite.SQLiteDatabase)> 
<android.media.TimedText: android.graphics.Rect getBounds()> 
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawableForDensity(int,int)> 
<gov.nist.javax.sip.header.SIPDate: int getSecond()> 
<android.net.ThrottleManager: int getCliffLevel(java.lang.String,int)> 
<android.graphics.drawable.BitmapDrawable: int getGravity()> 
<org.ccil.cowan.tagsoup.HTMLScanner: int getLineNumber()> 
<java.security.AlgorithmParameters: byte[] getEncoded(java.lang.String)> 
<org.apache.harmony.security.x509.Extension: java.lang.String getExtnID()> 
<org.apache.http.impl.conn.AbstractPooledConnAdapter: java.lang.Object getState()> 
<android.widget.TextView: int getCompoundPaddingTop()> 
<android.widget.Scroller: int getFinalY()> 
<android.widget.Scroller: int getFinalX()> 
<org.apache.http.impl.auth.DigestScheme: java.lang.String getSchemeName()> 
<libcore.net.url.FtpURLConnection: java.security.Permission getPermission()> 
<org.apache.xpath.XPathException: java.lang.Object getStylesheetNode()> 
<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()> 
<java.security.Security: java.lang.String getProperty(java.lang.String)> 
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.lang.String[] getValueNames()> 
<org.apache.harmony.security.x509.tsp.TSTInfo: java.lang.String getPolicy()> 
<android.hardware.GeomagneticField: float getHorizontalStrength()> 
<android.widget.Scroller: int getDuration()> 
<android.app.ActivityManagerProxy: int getRequestedOrientation(android.os.IBinder)> 
<android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)> 
<android.text.DynamicLayout: int getLineTop(int)> 
<android.graphics.drawable.AnimationDrawable: int getDuration(int)> 
<org.apache.xalan.xslt.EnvironmentCheck: java.lang.String getApparentVersion(java.lang.String,long)> 
<android.gesture.Gesture: android.graphics.RectF getBoundingBox()> 
<android.net.nsd.NsdServiceInfo: int getPort()> 
<android.preference.ListPreference: java.lang.CharSequence[] getEntries()> 
<android.widget.TextView: int getOffsetAtCoordinate(int,float)> 
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: javax.net.ssl.SSLEngineResult$HandshakeStatus getHandshakeStatus()> 
<java.security.KeyRep: java.lang.Object readResolve()> 
<gov.nist.javax.sip.header.Expires: int getExpires()> 
<javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)> 
<jp.co.omronsoft.openwnn.OpenWnnDictionaryImpl: jp.co.omronsoft.openwnn.WnnWord[] getUserDictionaryWords()> 
<android.content.res.StringBlock: java.lang.CharSequence get(int)> 
<android.app.LocalActivityManager: java.lang.String getCurrentId()> 
<android.media.AudioRecord: int getAudioSessionId()> 
<java.util.UnsafeArrayList: java.lang.Object get(int)> 
<gov.nist.core.NameValue: java.lang.Object getValue()> 
<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.Node getPreviousSibling()> 
<org.apache.xpath.SourceTreeManager: javax.xml.transform.URIResolver getURIResolver()> 
<java.util.prefs.AbstractPreferences: byte[] getByteArray(java.lang.String,byte[])> 
<android.filterfw.geometry.Rectangle: float getHeight()> 
<org.apache.harmony.security.asn1.ASN1StringType: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)> 
<android.util.NtpTrustedTime: android.util.NtpTrustedTime getInstance(android.content.Context)> 
<android.graphics.drawable.InsetDrawable: int getIntrinsicHeight()> 
<android.view.textservice.SpellCheckerSubtype: int getNameResId()> 
<android.renderscript.Matrix2f: void loadMultiply(android.renderscript.Matrix2f,android.renderscript.Matrix2f)> 
<java.nio.HeapByteBuffer: java.nio.ByteBuffer get(byte[],int,int)> 
<android.media.AudioRecord: int getChannelConfiguration()> 
<org.apache.xpath.compiler.OpMap: int getStepTestType(int)> 
<java.beans.PropertyChangeSupport: java.beans.PropertyChangeListener[] getPropertyChangeListeners(java.lang.String)> 
<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo getFindAccessibilityNodeInfoResultAndClear(int)> 
<android.widget.ArrayAdapter: android.content.Context getContext()> 
<android.database.sqlite.SQLiteCursor: int getCount()> 
<org.apache.xalan.templates.XMLNSDecl: java.lang.String getURI()> 
<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getDialogId()> 
<java.util.jar.Manifest: java.util.jar.Attributes getAttributes(java.lang.String)> 
<android.bluetooth.BluetoothHealth: int getConnectionState(android.bluetooth.BluetoothDevice)> 
<org.apache.xalan.templates.ElemForEach: java.lang.String getNodeName()> 
<org.apache.xml.serializer.utils.StringToIntTable: int getIgnoreCase(java.lang.String)> 
<org.apache.http.impl.cookie.NetscapeDraftSpec: org.apache.http.Header getVersionHeader()> 
<org.apache.xml.dtm.ref.DTMNodeProxy: boolean getStrictErrorChecking()> 
<org.apache.commons.io.FileUtils: java.io.File getTempDirectory()> 
<android.app.ActivityThread: java.lang.String getProfileFilePath()> 
<gov.nist.javax.sip.header.InReplyTo: java.lang.String getCallId()> 
<org.jivesoftware.smack.packet.BindAccountResponse: java.lang.String getJid()> 
<org.ccil.cowan.tagsoup.Schema: int getEntity(java.lang.String)> 
<android.os.BatteryStats: long getRadioDataUptimeMs()> 
<javax.net.ssl.KeyStoreBuilderParameters: java.util.List getParameters()> 
<org.apache.commons.io.input.SwappedDataInputStream: byte readByte()> 
<android.view.MotionEvent: void getHistoricalPointerCoords(int,int,android.view.MotionEvent$PointerCoords)> 
<android.view.accessibility.AccessibilityRecord: android.view.accessibility.AccessibilityNodeInfo getSource()> 
<android.test.mock.MockPackageManager: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)> 
<org.apache.xalan.templates.ElemNumber: int getTargetNode(org.apache.xpath.XPathContext,int)> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: java.lang.String getLocalName(int)> 
<org.apache.james.mime4j.field.datetime.DateTime: int getSecond()> 
<org.apache.http.impl.conn.AbstractClientConnAdapter: org.apache.http.conn.OperatedClientConnection getWrappedConnection()> 
<gov.nist.javax.sip.header.Challenge: java.lang.String getQOP()> 
<android.net.NetworkQuotaInfo: long getEstimatedBytes()> 
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: int getLocalPort()> 
<android.location.Location: float getBearing()> 
<org.apache.xml.utils.Context2: org.apache.xml.utils.Context2 getParent()> 
<android.preference.PreferenceManager: int getDefaultSharedPreferencesMode()> 
<android.test.InstrumentationTestRunner: junit.framework.TestSuite getTestSuite()> 
<org.apache.harmony.security.provider.crypto.DSAPublicKeyImpl: java.security.interfaces.DSAParams getParams()> 
<android.appwidget.AppWidgetHostView: int getAppWidgetId()> 
<org.jivesoftware.smackx.GroupChatInvitation: java.lang.String getNamespace()> 
<java.text.DecimalFormatSymbols: char getGroupingSeparator()> 
<jp.co.omronsoft.openwnn.Keyboard: void loadKeyboard(android.content.Context,android.content.res.XmlResourceParser)> 
<dalvik.system.profiler.HprofData: int getDepth()> 
<java.net.Authenticator: java.lang.String getRequestingProtocol()> 
<libcore.icu.RuleBasedCollatorICU: libcore.icu.CollationElementIteratorICU getCollationElementIterator(java.text.CharacterIterator)> 
<org.kxml2.io.KXmlParser: void parseStartTag(boolean,boolean)> 
<org.apache.xml.utils.UnImplNode: short getNodeType()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLServerSocketImpl: boolean getEnableSessionCreation()> 
<org.apache.harmony.security.provider.cert.X509CertPathImpl: org.apache.harmony.security.provider.cert.X509CertPathImpl getInstance(byte[],java.lang.String)> 
<android.bluetooth.BluetoothDevice: int getServiceChannel(android.os.ParcelUuid)> 
<org.apache.harmony.security.pkcs7.AuthenticatedAttributes: byte[] getEncoded()> 
<javax.xml.transform.TransformerException: java.lang.String getLocationAsString()> 
<java.net.URI: int getPort()> 
<android.text.style.RasterizerSpan: android.graphics.Rasterizer getRasterizer()> 
<java.net.URL: int getPort()> 
<gov.nist.javax.sip.address.TelURLImpl: java.lang.String getIsdnSubAddress()> 
<android.view.animation.GridLayoutAnimationController: int getTransformedRowIndex(android.view.animation.GridLayoutAnimationController$AnimationParameters)> 
<android.opengl.GLLogWrapper: int getLightModelParamCount(int)> 
<org.apache.xalan.templates.ElemNumber: java.lang.String getNodeName()> 
<android.content.ContentValues: java.util.ArrayList getStringArrayList(java.lang.String)> 
<android.widget.ArrayAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)> 
<org.apache.harmony.security.provider.cert.X509CRLImpl: javax.security.auth.x500.X500Principal getIssuerX500Principal()> 
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.lang.String getPeerHostName()> 
<java.security.cert.CertPathValidator: java.security.Provider getProvider()> 
<java.text.Bidi: int getRunStart(int)> 
<org.jivesoftware.smack.GroupChat: int getParticipantCount()> 
<java.security.SecureRandom: java.security.Provider getProvider()> 
<org.apache.xalan.Version: java.lang.String getVersion()> 
<android.os.UserHandle: int getUid(int,int)> 
<libcore.net.http.ResponseHeaders: java.lang.String getContentEncoding()> 
<android.content.pm.ActivityInfo: int getRealConfigChanged()> 
<java.net.InetAddress: java.lang.String getHostName()> 
<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object get(java.lang.Object)> 
<org.apache.xalan.templates.KeyDeclaration: org.apache.xpath.XPath getUse()> 
<android.webkit.WebStorageClassic: android.webkit.WebStorageClassic getInstance()> 
<org.apache.xpath.NodeSet: int getCurrentPos()> 
<android.text.style.QuoteSpan: int getSpanTypeId()> 
<android.preference.DialogPreference: java.lang.CharSequence getDialogTitle()> 
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getOpaque()> 
<java.net.URLConnection: java.security.Permission getPermission()> 
<org.apache.xml.dtm.ref.DTMDefaultBase: int getStringValueChunkCount(int)> 
<java.io.EmulatedFields: double get(java.lang.String,double)> 
<android.bluetooth.BluetoothTetheringDataTracker: boolean readLinkProperty(java.lang.String)> 
<java.security.KeyStore: java.security.cert.Certificate[] getCertificateChain(java.lang.String)> 
<android.preference.TwoStatePreference: java.lang.CharSequence getSummaryOn()> 
<org.jivesoftware.smackx.packet.VCard: byte[] getAvatar()> 
<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)> 
<javax.xml.parsers.DocumentBuilderFactory: javax.xml.validation.Schema getSchema()> 
<android.graphics.drawable.BitmapDrawable: android.graphics.Paint getPaint()> 
<android.text.method.BaseMovementMethod: int getTopLine(android.widget.TextView)> 
<android.view.KeyEvent: int getModifierMetaStateMask()> 
<org.xml.sax.helpers.XMLFilterImpl: boolean getFeature(java.lang.String)> 
<javax.net.ssl.HandshakeCompletedEvent: java.security.Principal getPeerPrincipal()> 
<org.apache.xalan.xslt.SecuritySupport: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)> 
<android.view.MotionEvent: float getTouchMinor()> 
<org.apache.harmony.luni.lang.reflect.ImplForType: java.lang.Class getRawType()> 
<android.graphics.Paint: android.graphics.Rasterizer getRasterizer()> 
<android.widget.CalendarView: int getWeekSeparatorLineColor()> 
<android.accounts.AccountManager: android.accounts.Account[] getAccounts()> 
<gov.nist.javax.sip.header.RequestLine: java.lang.String getSipVersion()> 
<gov.nist.javax.sip.header.From: java.lang.String getTag()> 
<java.lang.Package: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)> 
<android.test.AndroidTestCase: android.content.Context getTestContext()> 
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()> 
<gov.nist.javax.sip.stack.TCPMessageProcessor: int getMaximumMessageSize()> 
<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.ElemTemplate getDefaultRootRule()> 
<android.net.wifi.WifiManager: android.os.Messenger getWifiStateMachineMessenger()> 
<android.media.MediaSyncEvent: int getAudioSessionId()> 
<android.net.wifi.WifiConfiguration: java.lang.String getPrintableSsid()> 
<android.net.Credentials: int getUid()> 
<org.apache.commons.codec.net.QCodec: byte[] doDecoding(byte[])> 
<android.util.SparseBooleanArray: boolean get(int,boolean)> 
<java.util.concurrent.locks.AbstractQueuedLongSynchronizer: java.util.Collection getWaitingThreads(java.util.concurrent.locks.AbstractQueuedLongSynchronizer$ConditionObject)> 
<android.database.sqlite.SQLiteGlobal: int getDefaultPageSize()> 
<org.apache.xpath.compiler.Keywords: java.lang.Object getNodeType(java.lang.String)> 
<org.apache.http.impl.conn.LoggingSessionOutputBuffer: org.apache.http.io.HttpTransportMetrics getMetrics()> 
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.shapes.Shape getShape()> 
<android.webkit.WebSettingsClassic: boolean getSaveFormData()> 
<org.jivesoftware.smack.SASLAuthentication: java.util.List getRegisterSASLMechanisms()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: boolean getWantClientAuth()> 
<android.util.SparseArray: java.lang.Object get(int)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: javax.security.cert.X509Certificate[] getPeerCertificateChain()> 
<android.webkit.WebSettingsClassic: java.lang.String getStandardFontFamily()> 
<java.security.spec.RSAPublicKeySpec: java.math.BigInteger getPublicExponent()> 
<java.security.cert.PKIXCertPathValidatorResult: java.security.PublicKey getPublicKey()> 
<java.sql.Date: int getMinutes()> 
<org.apache.http.impl.cookie.BasicClientCookie2: java.lang.String getCommentURL()> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: java.lang.String getStringValue()> 
<gov.nist.javax.sip.stack.SIPDialog: javax.sip.message.Request createAck(long)> 
<android.media.audiofx.Visualizer: boolean getEnabled()> 
<gov.nist.javax.sip.message.SIPMessage: java.util.ListIterator getUnrecognizedHeaders()> 
<org.kxml2.io.KXmlParser: java.lang.String getAttributeNamespace(int)> 
<android.text.Annotation: java.lang.String getKey()> 
<libcore.net.http.HttpsURLConnectionImpl: java.security.Permission getPermission()> 
<org.apache.http.impl.conn.AbstractClientConnAdapter: javax.net.ssl.SSLSession getSSLSession()> 
<android.webkit.ZoomManager: float getZoomOverviewScale()> 
<android.webkit.SslCertLookupTable: android.webkit.SslCertLookupTable getInstance()> 
<android.net.NetworkStats: int[] getUniqueUids()> 
<net.oauth.client.OAuthClient: void getRequestToken(net.oauth.OAuthAccessor,java.lang.String)> 
<android.widget.TextView: android.text.method.WordIterator getWordIterator()> 
<android.telephony.NeighboringCellInfo: int getPsc()> 
<android.media.videoeditor.MediaArtistNativeHelper: int getFileType(int)> 
<android.media.MediaPlayer: android.os.Parcel getParcelParameter(int)> 
<android.os.MemoryFile: java.io.FileDescriptor getFileDescriptor()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: short getNodeType(int)> 
<org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol: int getMinRecordSize()> 
<gov.nist.javax.sip.header.ContentLanguage: java.lang.String getLanguageTag()> 
<org.apache.xml.dtm.ref.DTMDefaultBase: int getNamespaceType(int)> 
<android.support.v4.content.CursorLoader: android.net.Uri getUri()> 
<java.util.jar.Attributes: java.lang.String getValue(java.lang.String)> 
<org.apache.http.util.EncodingUtils: java.lang.String getAsciiString(byte[],int,int)> 
<org.apache.xml.serializer.SerializerTraceWriter: java.io.Writer getWriter()> 
<android.bluetooth.BluetoothA2dp: int getPriority(android.bluetooth.BluetoothDevice)> 
<gov.nist.javax.sip.stack.TCPMessageProcessor: java.lang.String getTransport()> 
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntryBlocking(org.apache.http.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit,org.apache.http.impl.conn.tsccm.WaitingThreadAborter)> 
<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.routing.HttpRoute getPlannedRoute()> 
<android.content.ContextWrapper: android.content.Context getApplicationContext()> 
<android.accounts.AccountManagerService: java.lang.String getDatabaseName(int)> 
<junit.framework.TestSuite: java.lang.reflect.Constructor getTestConstructor(java.lang.Class)> 
<android.filterpacks.imageproc.NegativeFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<org.apache.james.mime4j.field.datetime.parser.DateTimeParser: org.apache.james.mime4j.field.datetime.parser.Token getToken(int)> 
<android.app.ExpandableListActivity: long getSelectedPosition()> 
<java.security.AlgorithmParameterGenerator: java.lang.String getAlgorithm()> 
<android.media.MediaFile: java.lang.String getMimeTypeForFormatCode(int)> 
<org.kxml2.io.KXmlParser: java.lang.Object getProperty(java.lang.String)> 
<android.database.sqlite.SQLiteDatabase: java.util.List getAttachedDbs()> 
<android.net.http.Headers: java.lang.String getCacheControl()> 
<android.widget.CheckedTextView: android.graphics.drawable.Drawable getCheckMarkDrawable()> 
<java.util.Calendar: int get(int)> 
<android.util.XmlPullAttributes: int getAttributeResourceValue(java.lang.String,java.lang.String,int)> 
<java.net.Authenticator: java.net.InetAddress getRequestingSite()> 
<org.kxml2.io.KXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean)> 
<javax.net.ssl.DefaultSSLServerSocketFactory: java.lang.String[] getSupportedCipherSuites()> 
<java.lang.HexStringParser: int getOffset(java.lang.String,java.lang.String)> 
<android.test.mock.MockPackageManager: int[] getPackageGids(java.lang.String)> 
<javax.xml.transform.stream.StreamSource: java.lang.String getSystemId()> 
<gov.nist.javax.sip.header.StatusLine: java.lang.String getSipVersion()> 
<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)> 
<org.apache.harmony.security.asn1.ASN1OctetString: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)> 
<java.awt.font.NumericShaper: java.awt.font.NumericShaper getContextualShaper(int,int)> 
<android.speech.tts.SynthesisRequest: java.lang.String getText()> 
<org.apache.xml.utils.AttList: java.lang.String getQName(int)> 
<android.filterfw.core.ShaderProgram: android.filterfw.core.GLEnvironment getGLEnvironment()> 
<android.widget.Scroller: double getSplineDeceleration(float)> 
<java.nio.DatagramChannelImpl: int readImpl(java.nio.ByteBuffer)> 
<android.text.TextUtils: int getCapsMode(java.lang.CharSequence,int,int)> 
<gov.nist.javax.sip.header.AuthenticationInfo: gov.nist.core.NameValue getAuthInfo(java.lang.String)> 
<android.view.View: android.graphics.Matrix getMatrix()> 
<gov.nist.javax.sip.header.CallID: java.lang.String getCallId()> 
<org.apache.xml.serializer.dom3.DOMLocatorImpl: int getColumnNumber()> 
<org.apache.harmony.xml.dom.EntityImpl: java.lang.String getNodeName()> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: java.lang.String getNodeNameX(int)> 
<org.apache.harmony.security.x509.TBSCertificate: java.math.BigInteger getSerialNumber()> 
<android.view.textservice.SpellCheckerSubtype: java.lang.String getLocale()> 
<gov.nist.javax.sip.header.CallIdentifier: java.lang.String getHost()> 
<org.apache.harmony.security.provider.cert.X509CertImpl: java.math.BigInteger getSerialNumber()> 
<gov.nist.javax.sip.stack.UDPMessageChannel: int getPeerPort()> 
<android.content.res.Resources: android.content.res.ColorStateList getCachedColorStateList(long)> 
<gov.nist.javax.sip.address.SipUri: java.lang.String getUser()> 
<android.app.ApplicationPackageManager: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)> 
<java.io.EmulatedFieldsForLoading: int get(java.lang.String,int)> 
<android.inputmethodservice.Keyboard: int[] getShiftKeyIndices()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: int getElementById(java.lang.String)> 
<org.apache.commons.logging.impl.SimpleLog: boolean getBooleanProperty(java.lang.String,boolean)> 
<android.location.LocationRequest: float getSmallestDisplacement()> 
<android.speech.RecognizerIntent: android.content.Intent getVoiceDetailsIntent(android.content.Context)> 
<java.lang.Class: java.lang.Object[] getEnumConstants()> 
<java.io.ObjectInputStream: java.lang.String readUTF()> 
<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)> 
<org.jivesoftware.smack.packet.Packet: int getStreamId()> 
<android.widget.AutoCompleteTextView: android.widget.AdapterView$OnItemClickListener getOnItemClickListener()> 
<android.app.FragmentManagerImpl: android.app.FragmentManager$BackStackEntry getBackStackEntryAt(int)> 
<android.view.DragEvent: boolean getResult()> 
<org.apache.harmony.xml.ExpatAttributes: int getIndex(java.lang.String)> 
<android.view.MotionEvent: float getXPrecision()> 
<org.apache.xalan.templates.ElemExtensionCall: int getXSLToken()> 
<java.util.prefs.NodeChangeEvent: java.util.prefs.Preferences getParent()> 
<gov.nist.javax.sip.stack.HopImpl: java.lang.String getHost()> 
<org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore: java.util.List getCertificateChain(java.security.cert.X509Certificate)> 
<android.widget.TextView: int getFadeHeight(boolean)> 
<org.apache.xml.serializer.dom3.LSSerializerImpl: org.w3c.dom.DOMErrorHandler getErrorHandler()> 
<android.widget.Editor: int getLastTapPosition()> 
<android.widget.CalendarView: int getWeekDayTextAppearance()> 
<android.net.wifi.WifiInfo: boolean getHiddenSSID()> 
<android.app.ProgressDialog: int getProgress()> 
<java.net.JarURLConnection: java.util.jar.Manifest getManifest()> 
<android.opengl.GLLogWrapper: java.lang.String getLightPName(int)> 
<org.apache.james.mime4j.message.Header: org.apache.james.mime4j.field.Field getField(java.lang.String)> 
<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getNamespaceForPrefix(java.lang.String)> 
<org.apache.harmony.security.provider.cert.X509CertImpl: java.lang.String getSigAlgOID()> 
<org.apache.xpath.axes.PredicatedNodeTest: int getProximityPosition(org.apache.xpath.XPathContext)> 
<android.hardware.input.InputManager: android.view.InputDevice getInputDevice(int)> 
<android.view.MotionEvent: int getActionIndex()> 
<java.net.URLConnection: java.lang.String getContentType()> 
<android.support.v4.app.BackStackRecord: int getId()> 
<gov.nist.javax.sip.header.Challenge: java.lang.String getAlgorithm()> 
<android.webkit.WebViewClassic: int getHistoryPictureWidth()> 
<android.location.Geofence: double getLongitude()> 
<android.database.AbstractCursor: int getType(int)> 
<gov.nist.javax.sip.stack.SIPDialog: javax.sip.message.Request createPrack(javax.sip.message.Response)> 
<android.view.inputmethod.InputMethodInfo: java.lang.String getPackageName()> 
<java.io.File: java.lang.String getParent()> 
<org.apache.harmony.security.asn1.ASN1Oid: org.apache.harmony.security.asn1.ASN1Oid getInstanceForString()> 
<android.preference.Preference: long getId()> 
<org.apache.http.protocol.BasicHttpContext: java.lang.Object getAttribute(java.lang.String)> 
<android.widget.GridView: int getRequestedHorizontalSpacing()> 
<org.apache.harmony.security.x509.DNParser: char getUTF8()> 
<gov.nist.javax.sip.stack.SIPTransactionStack: int getActiveClientTransactionCount()> 
<org.apache.harmony.security.provider.cert.X509CertImpl: long getNotAfterInternal()> 
<android.app.ActivityManagerProxy: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()> 
<org.apache.xpath.functions.Function2Args: org.apache.xpath.Expression getArg1()> 
<android.widget.ViewAnimator: android.view.View getCurrentView()> 
<java.net.URLConnection: long getDate()> 
<android.speech.tts.FileSynthesisCallback: int getMaxBufferSize()> 
<org.apache.harmony.xnet.provider.jsse.NativeCrypto: java.lang.String[] getSupportedCipherSuites()> 
<org.apache.xalan.templates.ElemForEach: org.apache.xpath.Expression getExpression()> 
<org.xmlpull.v1.sax2.Driver: java.lang.String getValue(int)> 
<org.apache.xml.dtm.DTMException: java.lang.String getLocationAsString()> 
<org.apache.xml.dtm.ref.DTMTreeWalker: org.xml.sax.ContentHandler getcontentHandler()> 
<android.text.style.QuoteSpan: int getColor()> 
<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.javax.sip.header.SIPHeader parse()> 
<android.animation.ValueAnimator: int getRepeatMode()> 
<gov.nist.javax.sip.stack.SIPTransactionStack: int getClientTransactionTableSize()> 
<android.view.View: int getRawTextDirection()> 
<java.security.AlgorithmParameters: java.lang.String getAlgorithm()> 
<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()> 
<gov.nist.javax.sip.parser.ParserFactory: gov.nist.javax.sip.parser.HeaderParser createParser(java.lang.String)> 
<java.nio.charset.CharsetDecoderICU: int getArray(java.nio.CharBuffer)> 
<android.preference.PreferenceManager: java.lang.String getDefaultSharedPreferencesName(android.content.Context)> 
<android.drm.mobile1.DrmConstraintInfo: java.util.Date getEndDate()> 
<org.apache.xpath.axes.SelfIteratorNoPredicate: int getLastPos(org.apache.xpath.XPathContext)> 
<org.jivesoftware.smackx.packet.VCard: void doLoad(org.jivesoftware.smack.XMPPConnection,java.lang.String)> 
<org.apache.xalan.templates.Stylesheet: int getIncludeCount()> 
<android.view.KeyEvent: int getModifiers()> 
<android.app.ApplicationPackageManager: java.util.List getAllPermissionGroups(int)> 
<gov.nist.core.Token: int getTokenType()> 
<javax.net.ssl.SSLEngine: java.lang.String getPeerHost()> 
<gov.nist.javax.sip.header.extensions.Join: gov.nist.javax.sip.header.CallIdentifier getCallIdentifer()> 
<android.widget.ViewAnimator: int getBaseline()> 
<android.app.admin.DevicePolicyManager: int getPasswordMaximumLength(int)> 
<android.os.CommonTimeConfig: boolean getAutoDisable()> 
<android.preference.PreferenceManager: android.content.SharedPreferences$Editor getEditor()> 
<gov.nist.javax.sip.header.RSeq: int getSequenceNumber()> 
<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPResponse getLastResponse()> 
<android.graphics.Paint: int getTextWidths(char[],int,int,float[])> 
<android.accounts.AccountManagerService: long getExtrasIdLocked(android.database.sqlite.SQLiteDatabase,long,java.lang.String)> 
<android.hardware.input.KeyboardLayout: java.lang.String getCollection()> 
<android.widget.OverScroller: int getCurrY()> 
<android.widget.OverScroller: int getCurrX()> 
<org.jivesoftware.smack.util.PacketParserUtils: org.jivesoftware.smack.packet.PacketExtension parsePacketExtension(com.google.common.io.protocol.ProtoBuf)> 
<java.security.cert.X509Certificate: java.util.Collection getSubjectAlternativeNames()> 
<java.util.logging.LogRecord: java.lang.String getResourceBundleName()> 
<org.apache.harmony.xml.dom.EntityImpl: java.lang.String getNotationName()> 
<android.bluetooth.BluetoothInputDevice: int getConnectionState(android.bluetooth.BluetoothDevice)> 
<java.sql.BatchUpdateException: int[] getUpdateCounts()> 
<gov.nist.javax.sip.stack.HandshakeCompletedListenerImpl: javax.net.ssl.HandshakeCompletedEvent getHandshakeCompletedEvent()> 
<org.apache.harmony.security.pkcs7.ContentInfo: org.apache.harmony.security.pkcs7.SignedData getSignedData()> 
<android.renderscript.Allocation: int getIDSafe()> 
<android.telephony.SmsMessage: int getIndexOnSim()> 
<gov.nist.javax.sip.header.MimeVersion: int getMinorVersion()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: java.lang.String getName()> 
<org.apache.xpath.functions.FunctionDef1Arg: int getArg0AsNode(org.apache.xpath.XPathContext)> 
<android.widget.DatePicker: long getMaxDate()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode: java.lang.String getTypeNamespace()> 
<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler getContentHandler()> 
<android.widget.RatingBar: int getNumStars()> 
<java.lang.StackTraceElement: java.lang.String getFileName()> 
<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()> 
<android.support.v4.app.ListFragment: android.widget.ListView getListView()> 
<android.preference.ListPreference: java.lang.CharSequence getSummary()> 
<android.support.v4.app.BackStackRecord: int getTransitionStyle()> 
<android.test.mock.MockContext: java.lang.Object getSystemService(java.lang.String)> 
<java.util.jar.Attributes: java.lang.String getValue(java.util.jar.Attributes$Name)> 
<android.widget.SearchView: java.lang.CharSequence getDecoratedHint(java.lang.CharSequence)> 
<android.view.View: int getOverScrollMode()> 
<javax.xml.transform.stream.StreamSource: java.lang.String getPublicId()> 
<android.graphics.drawable.ClipDrawable: int getOpacity()> 
<android.support.v4.view.PagerTabStrip: boolean getDrawFullUnderline()> 
<java.lang.RealToString: java.lang.RealToString getInstance()> 
<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.TemplateList getTemplateListComposed()> 
<android.filterfw.core.NativeFrame: java.lang.Object getObjectValue()> 
<libcore.internal.StringPool: java.lang.String get(char[],int,int)> 
<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMIterator getContextNodeList()> 
<android.graphics.YuvImage: int[] getStrides()> 
<java.net.URI: java.lang.String getRawFragment()> 
<java.nio.CharToByteBufferAdapter: char get()> 
<libcore.net.http.HttpEngine: libcore.net.http.RequestHeaders getRequestHeaders()> 
<java.security.spec.PSSParameterSpec: java.lang.String getMGFAlgorithm()> 
<org.jivesoftware.smackx.packet.VCard: java.lang.String getNickName()> 
<android.animation.ValueAnimator: int getCurrentAnimationsCount()> 
<jp.co.omronsoft.openwnn.SymbolList: java.util.ArrayList getXmlfile(int)> 
<gov.nist.javax.sip.header.ParametersHeader: java.lang.Object getParameterValue(java.lang.String)> 
<android.test.mock.MockCursor: int getColumnIndexOrThrow(java.lang.String)> 
<android.renderscript.Mesh: android.renderscript.Allocation getVertexAllocation(int)> 
<libcore.net.url.FtpURLConnection: java.lang.String getContentType()> 
<android.database.MergeCursor: double getDouble(int)> 
<org.apache.xpath.compiler.Compiler: org.apache.xml.utils.PrefixResolver getNamespaceContext()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: int getHandleOfNode(org.w3c.dom.Node)> 
<org.jivesoftware.smack.packet.DefaultPacketExtension: java.lang.String getValue(java.lang.String)> 
<org.apache.xalan.templates.ElemIf: int getXSLToken()> 
<android.speech.tts.TextToSpeech: java.util.List getEngines()> 
<java.util.concurrent.ForkJoinTask: java.lang.Throwable getException()> 
<android.net.NetworkStats: android.net.NetworkStats$Entry getTotal(android.net.NetworkStats$Entry,int)> 
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)> 
<android.view.View: int getDrawingCacheQuality()> 
<org.apache.xalan.templates.ElemApplyImport: int getXSLToken()> 
<android.widget.SearchView: android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String)> 
<android.webkit.WebSettings: void setLoadsImagesAutomatically(boolean)> 
<java.lang.ClassLoader: java.lang.Package getPackage(java.lang.String)> 
<libcore.net.http.HttpEngine: libcore.net.http.RawHeaders getNetworkRequestHeaders()> 
<org.jivesoftware.smack.packet.RosterPacket: java.lang.String getEtag()> 
<java.text.DateFormat: java.text.DateFormat getTimeInstance(int,java.util.Locale)> 
<android.view.inputmethod.CompletionInfo: int getPosition()> 
<java.lang.Package: java.lang.String getSpecificationVendor()> 
<android.media.RingtoneManager: android.media.Ringtone getRingtone(int)> 
<android.telephony.CellInfoCdma: android.telephony.CellIdentityCdma getCellIdentity()> 
<android.graphics.YuvImage: byte[] getYuvData()> 
<org.apache.xpath.axes.AxesWalker: org.apache.xpath.axes.AxesWalker getPrevWalker()> 
<org.apache.xalan.templates.ElemTemplateElement: int getUid()> 
<java.security.spec.PSSParameterSpec: java.security.spec.AlgorithmParameterSpec getMGFParameters()> 
<java.io.ObjectInputStream: java.io.ObjectStreamClass readClassDescriptor()> 
<java.net.URI: java.lang.String getRawPath()> 
<org.jivesoftware.smack.XMPPConnection: java.lang.String getHostIpAddress()> 
<android.text.StaticLayout: int getLineTop(int)> 
<gov.nist.javax.sip.address.AddressImpl: javax.sip.address.URI getURI()> 
<android.text.TextUtils: int getLayoutDirectionFromFirstChar(java.util.Locale)> 
<android.content.res.AssetFileDescriptor: long getStartOffset()> 
<android.database.MergeCursor: java.lang.String getString(int)> 
<android.net.sip.SimpleSessionDescription: java.lang.String[] getBandwidthTypes()> 
<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String,java.lang.String)> 
<android.test.ActivityTestCase: android.app.Activity getActivity()> 
<org.apache.harmony.security.x509.tsp.TSTInfo: int[] getAccuracy()> 
<android.database.MatrixCursor: java.lang.String[] getColumnNames()> 
<android.widget.TextView: int getSelectionStart()> 
<org.apache.commons.codec.net.BCodec: java.lang.String getDefaultCharset()> 
<android.database.CursorWindow: int getNumRows()> 
<android.content.ContextWrapper: java.lang.String getPackageName()> 
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLength(android.content.ComponentName)> 
<android.nfc.tech.MifareClassic: int getTimeout()> 
<android.filterfw.core.Filter: int getSleepDelay()> 
<java.io.RandomAccessFile: short readShort()> 
<android.view.accessibility.AccessibilityRecord: int getFromIndex()> 
<android.graphics.ImageFormat: int getBitsPerPixel(int)> 
<android.filterfw.core.FilterSurfaceView: android.filterfw.core.GLEnvironment getGLEnv()> 
<android.text.SpannableStringBuilder: android.text.InputFilter[] getFilters()> 
<android.telephony.SmsCbCmasInfo: int getCategory()> 
<org.apache.http.params.HttpProtocolParams: org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams)> 
<android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)> 
<gov.nist.javax.sip.message.SIPRequest: int getViaPort()> 
<org.apache.xml.dtm.ref.DTMDefaultBase: short getLevel(int)> 
<android.widget.TextView: boolean getShowSoftInputOnFocus()> 
<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ErrorHandler getErrorHandler()> 
<org.apache.xml.dtm.ref.DTMManagerDefault: int getDTMHandleFromNode(org.w3c.dom.Node)> 
<org.apache.xalan.templates.ElemNumber: int getPreviousNode(org.apache.xpath.XPathContext,int)> 
<android.filterfw.core.FilterPort: android.filterfw.core.Filter getFilter()> 
<android.support.v4.app.BackStackRecord: int getBreadCrumbTitleRes()> 
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.protocol.HttpProcessor getProtocolProcessor()> 
<jp.co.omronsoft.openwnn.TextCandidates1LineViewManager: android.view.View getCurrentView()> 
<android.hardware.input.InputManager: android.os.Vibrator getInputDeviceVibrator(int)> 
<org.apache.xalan.processor.XSLTElementDef: java.lang.String getNameAlias()> 
<android.view.ViewConfiguration: int getTapTimeout()> 
<android.net.http.Headers: int getConnectionType()> 
<gov.nist.javax.sip.Utils: java.lang.String getSignature()> 
<android.hardware.SensorManager: android.hardware.LegacySensorManager getLegacySensorManager()> 
<android.text.format.DateUtils: java.lang.CharSequence getRelativeDateTimeString(android.content.Context,long,long,long,int)> 
<libcore.net.http.HttpEngine: java.net.CacheResponse getCacheResponse()> 
<android.view.TextureView: android.view.HardwareLayer getHardwareLayer()> 
<android.view.MotionEvent: float getHistoricalAxisValue(int,int)> 
<android.database.AbstractCursor: android.os.Bundle getExtras()> 
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CallIdHeader getCallId()> 
<android.view.inputmethod.InputMethodInfo: android.content.pm.ServiceInfo getServiceInfo()> 
<gov.nist.javax.sip.message.SIPMessage: byte[] getRawContent()> 
<java.io.DataInputStream: int read(byte[])> 
<org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String,java.lang.String)> 
<android.view.accessibility.AccessibilityRecord: int getItemCount()> 
<org.apache.xalan.res.XSLTErrorResources: java.lang.Object[][] getContents()> 
<android.graphics.BitmapRegionDecoder: int getHeight()> 
<libcore.io.ForwardingOs: int read(java.io.FileDescriptor,java.nio.ByteBuffer)> 
<android.widget.TimePicker: java.lang.Integer getCurrentMinute()> 
<android.widget.TextView: int getLineBounds(int,android.graphics.Rect)> 
<java.net.Inet6Address: java.net.Inet6Address getByAddress(java.lang.String,byte[],int)> 
<org.apache.xml.dtm.DTMException: java.lang.String getMessageAndLocation()> 
<java.nio.NioUtils: java.io.FileDescriptor getFD(java.nio.channels.FileChannel)> 
<android.content.ClipData: int getItemCount()> 
<android.telephony.CellInfoLte: android.telephony.CellIdentityLte getCellIdentity()> 
<android.view.KeyEvent: boolean getKeyData(android.view.KeyCharacterMap$KeyData)> 
<android.graphics.Paint: java.util.Locale getTextLocale()> 
<javax.crypto.Cipher: java.lang.String getAlgorithm()> 
<android.media.audiofx.EnvironmentalReverb: short getDecayHFRatio()> 
<android.renderscript.ScriptIntrinsicBlur: android.renderscript.Script$KernelID getKernelID()> 
<android.app.ActivityThread: android.app.Application getApplication()> 
<android.media.AudioTrack: int getPlaybackHeadPosition()> 
<android.hardware.input.InputManager: android.view.InputDevice getInputDeviceByDescriptor(java.lang.String)> 
<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)> 
<org.ccil.cowan.tagsoup.jaxp.SAXFactoryImpl: org.ccil.cowan.tagsoup.jaxp.SAXParserImpl getPrototype()> 
<org.jivesoftware.smack.PacketReader: org.jivesoftware.smack.packet.RosterPacket parseRoster(org.xmlpull.v1.XmlPullParser)> 
<android.content.pm.VerificationParams: int getOriginatingUid()> 
<android.animation.ObjectAnimator: java.lang.Object getTarget()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketFactoryImpl: java.lang.String[] getDefaultCipherSuites()> 
<android.view.MotionEvent: float getToolMinor()> 
<android.os.Debug: int getGlobalClassInitCount()> 
<android.app.ActivityThread: android.app.ContextImpl getSystemContext()> 
<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.Collection getQueuedThreads()> 
<org.apache.xalan.templates.ElemPI: int getXSLToken()> 
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getContentDescription()> 
<android.view.View: android.graphics.Matrix getInverseMatrix()> 
<android.media.AudioManager: int getLastAudibleMasterVolume()> 
<android.content.Intent: android.graphics.Rect getSourceBounds()> 
<android.widget.CursorAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)> 
<gov.nist.javax.sip.header.Via: java.lang.String getProtocolVersion()> 
<gov.nist.javax.sip.parser.ContactParser: gov.nist.javax.sip.header.SIPHeader parse()> 
<android.filterfw.GraphEnvironment: android.filterfw.core.FilterGraph getGraph(int)> 
<org.apache.xalan.templates.ElemComment: int getXSLToken()> 
<android.app.ActivityManager: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)> 
<org.apache.xml.serializer.utils.SystemIDResolver: java.lang.String getAbsoluteURI(java.lang.String)> 
<junit.runner.ReloadingTestSuiteLoader: java.lang.Class reload(java.lang.Class)> 
<android.support.v4.app.Fragment: android.content.res.Resources getResources()> 
<android.app.PendingIntent: android.content.IntentSender getIntentSender()> 
<org.apache.http.impl.client.ClientParamsStack: java.lang.Object getParameter(java.lang.String)> 
<android.view.FocusFinder: android.view.View getForwardFocusable(android.view.ViewGroup,android.view.View,java.util.ArrayList,int)> 
<org.apache.harmony.xml.dom.AttrImpl: boolean getSpecified()> 
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getIntegrityProtected()> 
<org.apache.http.message.AbstractHttpMessage: org.apache.http.Header[] getAllHeaders()> 
<android.app.WallpaperInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)> 
<android.app.WallpaperManager: android.graphics.Bitmap getBitmap()> 
<org.apache.xpath.compiler.OpMap: int getNextOpPos(int)> 
<android.view.MotionEvent: int getPointerId(int)> 
<java.io.StringBufferInputStream: int read()> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: org.xml.sax.ContentHandler getContentHandler()> 
<java.security.Security: java.lang.String getAlgorithmProperty(java.lang.String,java.lang.String)> 
<org.apache.xalan.templates.Stylesheet: int getOutputCount()> 
<android.media.videoeditor.MediaVideoItem: int getAudioSamplingFrequency()> 
<org.apache.http.entity.AbstractHttpEntity: org.apache.http.Header getContentEncoding()> 
<libcore.io.DiskLruCache: libcore.io.DiskLruCache$Snapshot get(java.lang.String)> 
<android.widget.Spinner: int getDropDownVerticalOffset()> 
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.security.Principal getLocalPrincipal()> 
<org.apache.http.impl.cookie.BasicClientCookie2: int[] getPorts()> 
<org.apache.http.impl.cookie.BestMatchSpec: org.apache.http.impl.cookie.RFC2109Spec getObsoleteStrict()> 
<org.apache.harmony.xml.ExpatAttributes: java.lang.String getValue(java.lang.String,java.lang.String)> 
<java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String,java.lang.String)> 
<android.renderscript.RenderScript: android.renderscript.RenderScript$RSMessageHandler getMessageHandler()> 
<android.text.PackedObjectVector: java.lang.Object getValue(int,int)> 
<java.security.cert.CertPathValidator: java.security.cert.CertPathValidator getInstance(java.lang.String,java.lang.String)> 
<java.security.cert.CertPathBuilder: java.security.cert.CertPathBuilder getInstance(java.lang.String)> 
<android.widget.AbsListView: int getListPaddingRight()> 
<android.widget.GridLayout: int getMargin1(android.view.View,boolean,boolean)> 
<android.widget.AdapterView: java.lang.Object getItemAtPosition(int)> 
<android.util.XmlPullAttributes: java.lang.String getClassAttribute()> 
<libcore.icu.RuleBasedCollatorICU: int getAttribute(int)> 
<org.apache.xpath.objects.XNodeSet: double getNumberFromNode(int)> 
<android.content.Intent: java.lang.String getAction()> 
<android.view.View: int getSolidColor()> 
<org.apache.xml.serializer.dom3.DOMLocatorImpl: org.w3c.dom.Node getRelatedNode()> 
<android.test.LoaderTestCase: java.lang.Object getLoaderResultSynchronously(android.content.Loader)> 
<android.os.Bundle: float getFloat(java.lang.String,float)> 
<android.webkit.WebViewClassic: java.lang.String getTitle()> 
<gov.nist.javax.sip.SipStackImpl: java.lang.String[] getEnabledCipherSuites()> 
<jp.co.omronsoft.openwnn.TextCandidatesViewManager: int getViewTopOnScreen(android.view.View)> 
<android.hardware.usb.UsbEndpoint: int getEndpointNumber()> 
<android.net.wifi.WifiConfigStore: android.net.DhcpInfoInternal getIpConfiguration(int)> 
<android.graphics.drawable.LayerDrawable: boolean getPadding(android.graphics.Rect)> 
<org.apache.xalan.transformer.KeyTable: org.apache.xml.utils.QName getKeyTableName()> 
<java.text.DateFormat: java.text.DateFormat getTimeInstance()> 
<android.content.ContentResolver: int getIsSyncable(android.accounts.Account,java.lang.String)> 
<libcore.net.url.FileURLConnection: java.io.InputStream getDirectoryListing(java.io.File)> 
<javax.xml.transform.stream.StreamResult: java.io.Writer getWriter()> 
<android.animation.ValueAnimator: long getFrameDelay()> 
<android.webkit.WebViewClassic: void loadUrlImpl(java.lang.String)> 
<android.media.TimedText: java.lang.Object getObject(int)> 
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: int getTrafficClass()> 
<libcore.icu.ICU: java.lang.String[] getISOLanguages()> 
<android.app.ApplicationErrorReport: android.content.ComponentName getErrorReportReceiver(android.content.pm.PackageManager,java.lang.String,java.lang.String)> 
<org.apache.xml.dtm.SecuritySupport: java.lang.ClassLoader getSystemClassLoader()> 
<org.apache.xml.utils.UnImplNode: org.w3c.dom.Element getElementById(java.lang.String)> 
<gov.nist.javax.sip.header.Challenge: java.lang.String getURI()> 
<android.accessibilityservice.AccessibilityServiceInfo: android.content.pm.ResolveInfo getResolveInfo()> 
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.CharSequence getContentDescription(java.lang.Object)> 
<android.view.View: void getFocusedRect(android.graphics.Rect)> 
<android.webkit.WebViewClassic: void loadData(java.lang.String,java.lang.String,java.lang.String)> 
<android.text.style.IconMarginSpan: int getLeadingMargin(boolean)> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: char[] getStringValueChunk(int,int,int[])> 
<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)> 
<java.net.URL: java.lang.Object getContent()> 
<java.nio.NIOAccess: int getBaseArrayOffset(java.nio.Buffer)> 
<org.kxml2.io.KXmlParser: java.lang.String getName()> 
<org.kxml2.io.KXmlParser: java.lang.String getSystemId()> 
<org.apache.xalan.templates.ElemWithParam: int getXSLToken()> 
<android.webkit.WebSettings: boolean getLightTouchEnabled()> 
<android.app.ActivityManagerProxy: java.lang.String getCallingPackage(android.os.IBinder)> 
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getXmlEncoding()> 
<org.jivesoftware.smack.sasl.SASLMechanism: org.jivesoftware.smack.SASLAuthentication getSASLAuthentication()> 
<android.graphics.drawable.PictureDrawable: android.graphics.Picture getPicture()> 
<javax.security.auth.PrivateCredentialPermission: java.lang.String getActions()> 
<android.text.style.SuggestionSpan: int getFlags()> 
<org.apache.harmony.security.x509.KeyUsage: boolean[] getKeyUsage()> 
<android.hardware.display.WifiDisplayStatus: android.hardware.display.WifiDisplay[] getAvailableDisplays()> 
<android.text.Layout: int getLineBaseline(int)> 
<org.javia.arity.Symbols: org.javia.arity.Symbol[] getTopFrame()> 
<android.widget.RelativeLayout: int getBaseline()> 
<android.view.textservice.SuggestionsInfo: int getCookie()> 
<android.media.RingtoneManager: android.net.Uri getRingtoneUri(int)> 
<android.app.Activity: int getVolumeControlStream()> 
<android.app.LoadedApk: android.content.res.AssetManager getAssets(android.app.ActivityThread)> 
<android.bluetooth.BluetoothSocket: int getPort()> 
<android.net.sip.SipProfile: java.lang.String getPassword()> 
<android.content.res.TypedArray: android.content.res.Resources getResources()> 
<android.net.wifi.WifiInfo: int getLinkSpeed()> 
<libcore.net.http.RequestHeaders: int getContentLength()> 
<org.apache.harmony.security.pkcs10.CertificationRequest: byte[] getSignature()> 
<android.support.v4.app.BackStackRecord: java.lang.CharSequence getBreadCrumbShortTitle()> 
<java.util.concurrent.atomic.AtomicLongArray: long getAndDecrement(int)> 
<android.content.ContextWrapper: int getWallpaperDesiredMinimumHeight()> 
<org.apache.xalan.templates.Stylesheet: java.lang.String getVersion()> 
<java.net.URLConnection: boolean getDoInput()> 
<android.net.MailTo: java.lang.String getSubject()> 
<org.jivesoftware.smackx.packet.VCard: java.lang.String getPhoneHome(java.lang.String)> 
<android.app.DownloadManager: long getActiveNetworkWarningBytes(android.content.Context)> 
<org.apache.harmony.security.provider.cert.X509CertFactoryImpl: byte[] readBytes(java.io.InputStream,int)> 
<android.filterfw.core.SerializedFrame: java.nio.ByteBuffer getData()> 
<org.apache.xalan.transformer.TransformerImpl: java.lang.String getOutputPropertyNoDefault(java.lang.String)> 
<java.text.DecimalFormat: int getMinimumIntegerDigits()> 
<android.os.StatFs: int getBlockCount()> 
<java.io.InvalidClassException: java.lang.String getMessage()> 
<android.test.ClassPathPackageInfo: java.util.Set getTopLevelClassesRecursive()> 
<jp.co.omronsoft.openwnn.DefaultSoftKeyboard: jp.co.omronsoft.openwnn.Keyboard getTypeChangeKeyboard(int)> 
<android.content.pm.VerificationParams: android.net.Uri getOriginatingURI()> 
<android.nfc.tech.IsoDep: int getMaxTransceiveLength()> 
<org.apache.xalan.transformer.KeyTable: int getDocKey()> 
<android.text.Layout: int getWidth()> 
<android.app.ApplicationPackageManager: java.util.List getPreferredPackages(int)> 
<android.view.Display: int getDisplayId()> 
<gov.nist.javax.sip.parser.Parser: gov.nist.javax.sip.parser.Lexer getLexer()> 
<java.util.Currency: int getDefaultFractionDigits()> 
<android.security.AndroidKeyStore: java.util.Set getUniqueAliases()> 
<java.nio.FloatToByteBufferAdapter: float get(int)> 
<android.media.videoeditor.MediaImageItem: long getDuration()> 
<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.ErrorListener getErrorListener()> 
<org.apache.http.entity.EntityTemplate: java.io.InputStream getContent()> 
<java.util.Grego: int getDayOfWeekInMonth(int,int,int)> 
<android.webkit.WebViewClassic: android.webkit.WebChromeClient getWebChromeClient()> 
<org.json.JSONArray: int getInt(int)> 
<org.apache.harmony.security.provider.cert.X509CRLImpl: java.util.Set getCriticalExtensionOIDs()> 
<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)> 
<android.database.AbstractWindowedCursor: android.database.CursorWindow getWindow()> 
<org.apache.http.impl.cookie.BasicClientCookie: java.util.Date getExpiryDate()> 
<java.util.logging.Level: java.lang.String getLocalizedName()> 
<org.xml.sax.helpers.AttributeListImpl: java.lang.String getType(int)> 
<jp.co.omronsoft.openwnn.UserDictionaryToolsList: java.util.ArrayList getWords()> 
<android.content.pm.PackageManager: void getPackageSizeInfo(java.lang.String,android.content.pm.IPackageStatsObserver)> 
<gov.nist.javax.sip.address.SipUri: java.lang.String getScheme()> 
<android.widget.TextView: int getExtendedPaddingBottom()> 
<net.oauth.OAuthMessage: java.util.List getHeaders()> 
<org.apache.james.mime4j.field.datetime.DateTime: int getHour()> 
<java.nio.MappedByteBufferAdapter: double getDouble(int)> 
<android.content.Intent: android.os.IBinder getIBinderExtra(java.lang.String)> 
<android.filterpacks.imageproc.BlendFilter: android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)> 
<java.lang.reflect.Method: java.lang.Class getDeclaringClass()> 
<java.net.Socket: int getSendBufferSize()> 
<android.telephony.SignalStrength: int getGsmDbm()> 
<android.view.MotionEvent: float getToolMajor(int)> 
<org.jivesoftware.smack.RosterEntry: java.lang.String getDisplayName(boolean)> 
<android.widget.TextView: int getHighlightColor()> 
<android.nfc.tech.Ndef: android.nfc.Tag getTag()> 
<android.drm.DrmInfoRequest: java.lang.String getMimeType()> 
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getApplicationIcon(java.lang.String)> 
<android.os.Environment: java.io.File getLegacyExternalStorageObbDirectory()> 
<gov.nist.javax.sip.header.ims.AddressHeaderIms: javax.sip.address.Address getAddress()> 
<gov.nist.javax.sip.header.Indentation: int getCount()> 
<android.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle,android.os.UserHandle)> 
<android.telephony.CellSignalStrengthCdma: int getEvdoEcio()> 
<org.apache.harmony.xml.ExpatAttributes: int getIndex(java.lang.String,java.lang.String)> 
<android.graphics.Bitmap: int getScaledWidth(android.graphics.Canvas)> 
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader getContextClassLoader()> 
<android.media.audiofx.Equalizer: short getBand(int)> 
<gov.nist.javax.sip.header.SIPIfMatch: java.lang.String getETag()> 
<android.test.mock.MockContext: java.io.File getFileStreamPath(java.lang.String)> 
<android.os.Environment: java.io.File getRootDirectory()> 
<org.apache.xml.serializer.SerializerBase: java.lang.String getVersion()> 
<android.widget.CursorAdapter: android.widget.Filter getFilter()> 
<android.media.videoeditor.MediaItem: android.media.videoeditor.MediaArtistNativeHelper$ClipSettings getClipSettings()> 
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)> 
<android.opengl.GLLogWrapper: java.lang.String getPointerTypeName(int)> 
<org.apache.xml.utils.DOM2Helper: org.w3c.dom.Document getDocument()> 
<javax.sip.DialogState: int getValue()> 
<java.security.MessageDigest: int getDigestLength()> 
<android.net.EthernetDataTracker: android.net.EthernetDataTracker getInstance()> 
<gov.nist.javax.sip.header.ContentEncoding: java.lang.String getEncoding()> 
<javax.xml.validation.SchemaFactory: boolean getFeature(java.lang.String)> 
<android.webkit.ZoomManager: float getScale()> 
<android.hardware.Sensor: java.lang.String getVendor()> 
<android.widget.TextView: int getShadowColor()> 
<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.impl.conn.tsccm.BasicPoolEntryRef getWeakRef()> 
<org.apache.xalan.templates.ElemSort: int getXSLToken()> 
<android.telephony.CellSignalStrengthGsm: int getDbm()> 
<org.kxml2.io.KXmlParser: void readContentSpec()> 
<android.mtp.MtpDatabase: int[] getSupportedCaptureFormats()> 
<org.apache.http.client.params.HttpClientParams: java.lang.String getCookiePolicy(org.apache.http.params.HttpParams)> 
<android.text.AutoText: java.lang.String get(java.lang.CharSequence,int,int,android.view.View)> 
<libcore.net.http.HttpEngine: libcore.net.http.HttpConnection getConnection()> 
<java.security.cert.X509CRLSelector: java.security.cert.X509Certificate getCertificateChecking()> 
<org.apache.harmony.security.provider.cert.X509CRLImpl: java.security.cert.X509CRLEntry getRevokedCertificate(java.security.cert.X509Certificate)> 
<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()> 
<java.util.Locale: java.lang.String getDisplayName(java.util.Locale)> 
<android.telephony.SmsMessage: byte[] getUserData()> 
<android.webkit.CertTool: java.lang.String getCertType(java.lang.String)> 
<android.webkit.JsPromptResult: java.lang.String getStringResult()> 
<android.graphics.drawable.NinePatchDrawable: int getIntrinsicWidth()> 
<android.widget.Gallery: int getChildHeight(android.view.View)> 
<android.nfc.tech.NfcA: int getTimeout()> 
<org.apache.xpath.compiler.XPathParser: javax.xml.transform.ErrorListener getErrorListener()> 
<libcore.io.IoBridge: int getSocketLocalPort(java.io.FileDescriptor)> 
<android.nfc.tech.NfcF: int getTimeout()> 
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime(long)> 
<org.apache.xalan.processor.XSLTAttributeDef: int getErrorType()> 
<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()> 
<org.apache.commons.io.input.NullReader: int read(char[])> 
<android.view.MotionEvent: float getPressure(int)> 
<android.media.videoeditor.MediaProperties: int[] getSupportedVideoCodecs()> 
<android.widget.GridLayout: int getMargin(android.view.View,boolean,boolean)> 
<android.widget.TextView: int getBottomVerticalOffset(boolean)> 
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.ComponentName)> 
<org.apache.harmony.xnet.provider.jsse.PinListEntry: java.lang.String getCommonName()> 
<android.drm.DrmRights: java.lang.String getAccountId()> 
<android.view.MotionEvent: float getSize()> 
<android.net.wifi.WifiNative: int getGroupCapability(java.lang.String)> 
<org.apache.xalan.templates.StylesheetRoot: java.util.Properties getDefaultOutputProps()> 
<android.view.accessibility.AccessibilityNodeInfo: int getMovementGranularities()> 
<javax.crypto.Mac: java.lang.String getAlgorithm()> 
<org.jivesoftware.smack.XMPPConnection: com.google.android.gsf.gtalkservice.rmq.RmqManager getRmqManager()> 
<java.net.HttpCookie: java.lang.String getCommentURL()> 
<org.apache.harmony.security.pkcs7.SignerInfo: byte[] getEncryptedDigest()> 
<android.content.res.Resources: int getDimensionPixelSize(int)> 
<java.lang.Runtime: java.io.OutputStream getLocalizedOutputStream(java.io.OutputStream)> 
<java.security.spec.X509EncodedKeySpec: java.lang.String getFormat()> 
<org.apache.xml.utils.DOMHelper: java.lang.String getExpandedElementName(org.w3c.dom.Element)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: int getPeerPort()> 
<android.webkit.JWebCoreJavaBridge: java.lang.String[] getPluginDirectories()> 
<android.graphics.Canvas: int getDensity()> 
<org.apache.xpath.compiler.FunctionTable: java.lang.String getFunctionName(int)> 
<android.accounts.AccountManagerService: java.lang.String getPassword(android.accounts.Account)> 
<org.apache.xpath.axes.LocPathIterator: org.apache.xml.dtm.DTM getDTM(int)> 
<org.apache.james.mime4j.field.datetime.parser.SimpleCharStream: int getColumn()> 
<org.apache.harmony.xml.dom.AttrImpl: java.lang.String getLocalName()> 
<libcore.net.http.HttpsURLConnectionImpl: java.io.InputStream getInputStream()> 
<android.hardware.usb.UsbInterface: int getEndpointCount()> 
<android.widget.AbsListView: int getTopPaddingOffset()> 
<org.apache.http.impl.io.AbstractSessionInputBuffer: int lineFromReadBuffer(org.apache.http.util.CharArrayBuffer,int)> 
<android.net.http.HttpAuthHeader: java.lang.String getNonce()> 
<org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)> 
<org.apache.xpath.axes.LocPathIterator: org.apache.xml.dtm.DTMManager getDTMManager()> 
<android.widget.TextView: int getAccessibilityCursorPosition()> 
<android.view.ViewPropertyAnimator: float getValue(int)> 
<android.webkit.CertTool: java.lang.String[] getKeyStrengthList()> 
<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> 
<org.jivesoftware.smack.packet.Packet: java.util.Iterator getPropertyNames()> 
<org.apache.http.impl.io.AbstractSessionInputBuffer: int appendDecoded(org.apache.http.util.CharArrayBuffer,java.nio.ByteBuffer)> 
<android.media.AudioManager: int getVibrateSetting(int)> 
<org.xml.sax.helpers.AttributeListImpl: int getLength()> 
<android.media.AudioManager: android.media.IAudioService getService()> 
<org.apache.http.message.BasicHeaderElement: java.lang.String getName()> 
<android.webkit.WebViewClassic: android.webkit.PluginList getPluginList()> 
<android.media.audiofx.AudioEffect: int getParameter(int[],short[])> 
<android.media.videoeditor.MediaProperties: int getSupportedAudioTrackCount()> 
<org.apache.harmony.security.provider.cert.X509CertImpl: java.util.Set getCriticalExtensionOIDs()> 
<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)> 
<android.text.format.Time: int getActualMaximum(int)> 
<java.net.URLStreamHandler: java.net.InetAddress getHostAddress(java.net.URL)> 
<android.database.sqlite.SQLiteDatabase: int getThreadDefaultConnectionFlags(boolean)> 
<java.nio.FloatArrayBuffer: float get(int)> 
<java.net.URLConnection: java.lang.String getRequestProperty(java.lang.String)> 
<android.os.Parcel: void readSparseArrayInternal(android.util.SparseArray,int,java.lang.ClassLoader)> 
<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodClient getClient()> 
<android.telephony.SignalStrength: int getLteRsrq()> 
<android.telephony.SignalStrength: int getLteRsrp()> 
<android.net.SntpClient: long getNtpTime()> 
<android.widget.NumberPicker: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()> 
<android.view.GLES20DisplayList: int getSize()> 
<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.Collection getWaitingThreads(java.util.concurrent.locks.Condition)> 
<libcore.io.Posix: int read(java.io.FileDescriptor,java.nio.ByteBuffer)> 
<android.app.ActivityManager: java.util.List getRecentTasksForUser(int,int,int)> 
<android.app.TaskStackBuilder: android.content.Intent[] getIntents()> 
<android.widget.GridView: int getRequestedColumnWidth()> 
<org.apache.xalan.processor.StylesheetHandler: boolean getOptimize()> 
<android.view.DragEvent: android.content.ClipDescription getClipDescription()> 
<java.net.URL: java.lang.String getRef()> 
<android.text.HtmlToSpannedConverter: int getHtmlColor(java.lang.String)> 
<android.widget.SimpleCursorAdapter: android.widget.SimpleCursorAdapter$ViewBinder getViewBinder()> 
<android.os.Debug: java.lang.String getCaller(java.lang.StackTraceElement[],int)> 
<javax.crypto.SealedObject: java.lang.Object getObject(java.security.Key,java.lang.String)> 
<org.apache.xpath.XPathException: java.lang.Throwable getException()> 
<android.telephony.TelephonyManager: java.lang.String getSimOperator()> 
<android.view.MotionEvent: void getPointerCoords(int,android.view.MotionEvent$PointerCoords)> 
<android.content.pm.ActivityInfo: int getThemeResource()> 
<java.security.cert.CertPathValidator: java.security.cert.CertPathValidator getInstance(java.lang.String,java.security.Provider)> 
<android.hardware.usb.UsbAccessory: java.lang.String getModel()> 
<android.net.rtp.AudioCodec: android.net.rtp.AudioCodec getCodec(int,java.lang.String,java.lang.String)> 
<org.apache.james.mime4j.field.datetime.parser.SimpleCharStream: int getBeginColumn()> 
<gov.nist.javax.sip.stack.TLSMessageChannel: java.lang.String getTransport()> 
<java.lang.reflect.Field: double getDouble(java.lang.Object)> 
<android.location.LocationRequest: java.lang.String getProvider()> 
<org.apache.xml.serializer.Encodings: org.apache.xml.serializer.EncodingInfo[] loadEncodingInfo()> 
<android.filterpacks.performance.Throughput: int getPeriodTime()> 
<org.apache.xpath.patterns.StepPattern: int getLastPos(org.apache.xpath.XPathContext)> 
<dalvik.system.BaseDexClassLoader: java.lang.Package getPackage(java.lang.String)> 
<android.filterfw.core.FrameManager: android.filterfw.core.GLEnvironment getGLEnvironment()> 
<android.location.Address: java.lang.String getCountryName()> 
<jp.co.omronsoft.openwnn.Keyboard: int getDimensionOrFraction(android.content.res.TypedArray,int,int,int)> 
<org.apache.commons.logging.impl.LogFactoryImpl: org.apache.commons.logging.Log getInstance(java.lang.Class)> 
<android.provider.Browser: android.database.Cursor getVisitedLike(android.content.ContentResolver,java.lang.String)> 
<android.test.mock.MockPackageManager: int getComponentEnabledSetting(android.content.ComponentName)> 
<java.security.cert.PKIXParameters: java.util.Date getDate()> 
<org.apache.http.entity.BasicHttpEntity: long getContentLength()> 
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getAllIllegal()> 
<java.nio.ShortToByteBufferAdapter: short get()> 
<gov.nist.javax.sip.stack.SIPTransaction: long getCSeq()> 
<android.support.v4.view.PagerTabStrip: int getMinHeight()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: org.xml.sax.ContentHandler getContentHandler()> 
<android.webkit.WebSettings: int getMinimumFontSize()> 
<java.lang.Class: java.lang.Class getEnclosingClass()> 
<java.lang.Long: java.lang.Long getLong(java.lang.String,java.lang.Long)> 
<android.widget.ListView: android.graphics.drawable.Drawable getOverscrollFooter()> 
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.io.InputStream getInputStream()> 
<java.lang.BootClassLoader: java.lang.Class loadClass(java.lang.String,boolean)> 
<android.renderscript.Sampler: float getAnisotropy()> 
<libcore.net.http.HttpEngine: libcore.net.http.ResponseHeaders getResponseHeaders()> 
<javax.obex.ServerRequestHandler: long getConnectionId()> 
<android.app.Activity: android.os.IBinder getActivityToken()> 
<android.webkit.ZoomManager: float getTextWrapScale()> 
<jp.co.omronsoft.openwnn.EN.UserDictionaryToolsListEN: java.util.Comparator getComparator()> 
<org.apache.http.impl.conn.tsccm.WaitingThread: org.apache.http.impl.conn.tsccm.RouteSpecificPool getPool()> 
<java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)> 
<java.net.PlainSocketImpl: java.io.OutputStream getOutputStream()> 
<android.os.storage.StorageVolume: java.lang.String getDescription(android.content.Context)> 
<org.apache.harmony.xml.dom.InnerNodeImpl: org.w3c.dom.Node getNextSibling()> 
<android.support.v4.view.VelocityTrackerCompatHoneycomb: float getXVelocity(android.view.VelocityTracker,int)> 
<org.apache.xml.serializer.ToUnknownStream: java.io.OutputStream getOutputStream()> 
<android.view.View: android.view.View$AccessibilityDelegate getAccessibilityDelegate()> 
<org.apache.commons.codec.binary.Base64: java.lang.Object decode(java.lang.Object)> 
<android.preference.PreferenceActivity: android.preference.PreferenceManager getPreferenceManager()> 
<java.net.DatagramPacket: int getPort()> 
<org.apache.harmony.security.x509.tsp.TimeStampReq: java.math.BigInteger getNonce()> 
<android.widget.AutoCompleteTextView: android.widget.Filter getFilter()> 
<android.text.style.ScaleXSpan: int getSpanTypeId()> 
<java.util.concurrent.Phaser: int getRegisteredParties()> 
<java.util.logging.MemoryHandler: java.util.logging.Level getPushLevel()> 
<android.app.WallpaperManager: android.app.WallpaperInfo getWallpaperInfo()> 
<android.widget.TextView: int getTotalPaddingLeft()> 
<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)> 
<org.jivesoftware.smack.packet.Packet: java.util.Iterator getExtensions()> 
<android.view.GLES20Canvas: int getWidth()> 
<android.view.accessibility.AccessibilityManager: java.util.List getAccessibilityServiceList()> 
<org.apache.xalan.templates.ElemLiteralResult: org.apache.xalan.templates.AVT getLiteralResultAttributeNS(java.lang.String,java.lang.String)> 
<android.content.SyncStorageEngine: int getSyncRandomOffset()> 
<android.nfc.tech.BasicTagTechnology: int getMaxTransceiveLengthInternal()> 
<android.text.BoringLayout: android.text.Layout$Directions getLineDirections(int)> 
<android.view.VolumePanel: int getStreamVolume(int)> 
<android.net.NetworkIdentity: java.lang.String getNetworkId()> 
<org.apache.harmony.security.x509.GeneralNames: java.util.Collection getPairsList()> 
<org.kxml2.io.KXmlParser: java.lang.String getNamespace()> 
<android.webkit.WebViewClassic: int getHeight()> 
<android.gesture.Gesture: long getID()> 
<android.text.Layout: int getLineForOffset(int)> 
<android.bluetooth.BluetoothDevice: android.bluetooth.IBluetooth getService()> 
<org.apache.harmony.xml.dom.AttrImpl: org.w3c.dom.Element getOwnerElement()> 
<gov.nist.javax.sip.parser.Parser: java.text.ParseException createParseException(java.lang.String)> 
<android.media.AudioTrack: int getNativeOutputSampleRate(int)> 
<android.support.v4.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> 
<android.view.textservice.SpellCheckerInfo: java.lang.String getId()> 
<org.apache.http.impl.conn.AbstractClientConnAdapter: org.apache.http.conn.ClientConnectionManager getManager()> 
<java.net.DatagramSocket: java.net.SocketAddress getRemoteSocketAddress()> 
<java.security.spec.DSAParameterSpec: java.math.BigInteger getQ()> 
<java.security.spec.DSAParameterSpec: java.math.BigInteger getP()> 
<java.security.spec.DSAParameterSpec: java.math.BigInteger getG()> 
<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getRTFDTM()> 
<android.widget.RemoteViews: boolean onLoadClass(java.lang.Class)> 
<gov.nist.javax.sip.SipProviderImpl: javax.sip.SipStack getSipStack()> 
<org.apache.xalan.processor.XSLTAttributeDef: java.lang.String getSetterMethodName()> 
<org.apache.harmony.security.x509.TBSCertificate: byte[] getEncoded()> 
<android.database.AbstractCursor: int getColumnIndexOrThrow(java.lang.String)> 
<android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getCurrentItem()> 
<java.net.CookieManager: java.util.Map get(java.net.URI,java.util.Map)> 
<org.apache.xpath.axes.PredicatedNodeTest: org.apache.xpath.Expression getPredicate(int)> 
<javax.xml.parsers.SAXParserFactory: javax.xml.validation.Schema getSchema()> 
<org.jivesoftware.smack.PacketReader: org.jivesoftware.smack.packet.LoginResponse parseLoginResponse(com.google.common.io.protocol.ProtoBuf)> 
<android.view.Display: android.view.CompatibilityInfoHolder getCompatibilityInfo()> 
<org.apache.xml.serializer.WriterToUTF8Buffered: java.io.OutputStream getOutputStream()> 
<java.security.cert.Certificate: java.lang.String getType()> 
<android.sax.BadXmlException: java.lang.String getMessage()> 
<java.util.Locale: java.lang.String getDisplayLanguage()> 
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)> 
<java.text.BreakIterator: java.text.BreakIterator getWordInstance()> 
<net.oauth.http.HttpMessage: java.io.InputStream getBody()> 
<org.apache.xpath.axes.OneStepIteratorForward: int getNextNode()> 
<org.apache.xpath.objects.DTMXRTreeFrag: org.apache.xml.dtm.DTM getDTM()> 
<android.mtp.MtpDevice: android.mtp.MtpDeviceInfo getDeviceInfo()> 
<android.widget.ActivityChooserView: android.widget.ActivityChooserModel getDataModel()> 
<org.apache.xpath.functions.SecuritySupport12: java.io.FileInputStream getFileInputStream(java.io.File)> 
<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.QName getMode()> 
<android.app.admin.DevicePolicyManager: int getStorageEncryptionStatus()> 
<org.apache.harmony.security.provider.cert.X509CertPathImpl: org.apache.harmony.security.provider.cert.X509CertPathImpl getInstance(byte[])> 
<android.database.AbstractCursor: boolean getWantsAllOnMoveCalls()> 
<android.util.LongSparseArray: java.lang.Object get(long,java.lang.Object)> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: java.lang.String getNodeNameX(int)> 
<android.widget.AutoCompleteTextView: int getDropDownHeight()> 
<android.view.InputDevice: java.lang.String getDescriptor()> 
<java.util.EventObject: java.lang.Object getSource()> 
<android.text.Layout: int getOffsetToLeftRightOf(int,boolean)> 
<android.security.KeyStore: byte[] getUidBytes(int)> 
<org.jivesoftware.smack.packet.Packet: int getLastStreamId()> 
<android.test.mock.MockCursor: java.lang.String[] getColumnNames()> 
<android.media.AudioService: int getLastAudibleStreamVolume(int)> 
<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()> 
<android.webkit.BrowserFrame: java.lang.String getUserAgentString()> 
<org.apache.http.params.HttpProtocolParams: java.lang.String getHttpElementCharset(org.apache.http.params.HttpParams)> 
<org.apache.xpath.functions.SecuritySupport12: java.lang.String getSystemProperty(java.lang.String)> 
<android.app.Activity: android.view.LayoutInflater getLayoutInflater()> 
<java.io.DataInputStream: java.lang.String readUTF()> 
<org.xmlpull.v1.XmlPullParserException: int getLineNumber()> 
<android.telephony.TelephonyManager: int getPhoneTypeFromProperty()> 
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.Element getDocumentElement()> 
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: org.apache.xml.dtm.DTMAxisIterator getTypedAxisIterator(int,int)> 
<android.mtp.MtpObjectInfo: int getImagePixWidth()> 
<java.net.URLConnection: java.lang.String getDefaultRequestProperty(java.lang.String)> 
<android.graphics.Canvas: boolean getClipBounds(android.graphics.Rect)> 
<android.net.http.AndroidHttpClientConnection: org.apache.http.HttpConnectionMetrics getMetrics()> 
<android.hardware.usb.UsbRequest: java.lang.Object getClientData()> 
<android.text.method.QwertyKeyListener: int getInputType()> 
<android.view.ViewConfiguration: float getScrollFriction()> 
<java.util.concurrent.locks.ReentrantReadWriteLock: int getWaitQueueLength(java.util.concurrent.locks.Condition)> 
<org.apache.xml.serializer.Version: int getMaintenanceVersionNum()> 
<org.apache.xml.serializer.ToUnknownStream: java.lang.String getDoctypePublic()> 
<libcore.icu.CollationElementIteratorICU: int getOffset()> 
<org.apache.harmony.security.asn1.ASN1OctetString: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> 
<gov.nist.javax.sip.message.SIPRequest: javax.sip.address.URI getRequestURI()> 
<gov.nist.javax.sip.message.SIPRequest: java.lang.Object getMessageChannel()> 
<org.apache.harmony.xml.dom.NotationImpl: java.lang.String getPublicId()> 
<android.net.sip.SipSession: int getState()> 
<org.apache.harmony.security.x501.AttributeTypeAndValue: org.apache.harmony.security.utils.ObjectIdentifier getOID(int[])> 
<android.media.audiofx.Equalizer: short getNumberOfPresets()> 
<android.webkit.WebBackForwardListClassic: int getSize()> 
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.StylesheetComposed getImport(int)> 
<java.awt.font.NumericShaper: java.awt.font.NumericShaper getShaper(int)> 
<java.net.DatagramSocket: int getPort()> 
<android.content.Intent: byte getByteExtra(java.lang.String,byte)> 
<java.util.prefs.NodeChangeEvent: java.util.prefs.Preferences getChild()> 
<android.content.res.Resources: android.graphics.Movie getMovie(int)> 
<android.view.InputDevice: int[] getDeviceIds()> 
<android.widget.ExpandableListView: int getPackedPositionChild(long)> 
<org.apache.james.mime4j.field.address.NamedMailbox: java.lang.String getAddressString(boolean)> 
<android.content.res.Configuration: int getScreenLayoutNoDirection(int)> 
<java.io.LineNumberReader: int getLineNumber()> 
<org.apache.xml.dtm.ref.DTMDefaultBase: short getNodeType(int)> 
<android.telephony.CellLocation: android.telephony.CellLocation getEmpty()> 
<android.webkit.WebHistoryItemClassic: java.lang.String getUrl()> 
<android.filterpacks.imageproc.SimpleImageFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<android.view.textservice.SentenceSuggestionsInfo: int getSuggestionsCount()> 
<android.app.ApplicationPackageManager: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)> 
<android.widget.TextView: java.lang.CharSequence getHint()> 
<javax.crypto.EncryptedPrivateKeyInfo: java.security.spec.PKCS8EncodedKeySpec getKeySpec(java.security.Key,java.lang.String)> 
<android.net.rtp.RtpStream: int getSocket()> 
<org.apache.xalan.templates.Stylesheet: int getKeyCount()> 
<android.test.TestCaseUtil: java.util.List getTests(junit.framework.Test,boolean,java.util.Set)> 
<android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()> 
<android.app.LoaderManagerImpl: android.content.Loader getLoader(int)> 
<javax.crypto.spec.RC2ParameterSpec: byte[] getIV()> 
<gov.nist.javax.sip.parser.MinExpiresParser: gov.nist.javax.sip.header.SIPHeader parse()> 
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.ElemVariable getVariable(org.apache.xml.utils.QName)> 
<libcore.net.http.HttpsURLConnectionImpl: java.security.cert.Certificate[] getServerCertificates()> 
<android.os.Messenger: android.os.IBinder getBinder()> 
<libcore.io.BlockGuardOs: int read(java.io.FileDescriptor,byte[],int,int)> 
<android.mtp.MtpObjectInfo: int getParent()> 
<android.accounts.AccountManagerService: void getAuthTokenLabel(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String)> 
<java.util.concurrent.locks.ReentrantLock: java.util.Collection getWaitingThreads(java.util.concurrent.locks.Condition)> 
<android.widget.GridLayout: android.widget.GridLayout$LayoutParams getLayoutParams(android.view.View)> 
<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair getParameterByName(java.lang.String)> 
<android.animation.PropertyValuesHolder: java.lang.String getMethodName(java.lang.String,java.lang.String)> 
<org.apache.commons.logging.impl.LogFactoryImpl: boolean getBooleanConfiguration(java.lang.String,boolean)> 
<org.apache.xpath.XPathContext: java.lang.Object getOwnerObject()> 
<java.net.Socks4Message: int getVersionNumber()> 
<org.apache.xml.serializer.SerializerTraceWriter: java.io.OutputStream getOutputStream()> 
<org.apache.xml.serializer.WriterToASCI: java.io.OutputStream getOutputStream()> 
<org.apache.http.message.AbstractHttpMessage: org.apache.http.Header getFirstHeader(java.lang.String)> 
<java.nio.charset.Charset: java.nio.CharBuffer decode(java.nio.ByteBuffer)> 
<android.media.audiofx.AudioEffect: int getParameter(int[],byte[])> 
<org.apache.xalan.templates.ElemFallback: int getXSLToken()> 
<android.location.Location: android.os.Bundle getExtras()> 
<java.nio.DirectByteBuffer: char getChar(int)> 
<android.support.v4.app.ShareCompat: java.lang.String getCallingPackage(android.app.Activity)> 
<android.text.AlteredCharSequence: void getChars(int,int,char[],int)> 
<android.view.View: int getFadeTop(boolean)> 
<org.apache.harmony.luni.lang.reflect.Types: java.lang.reflect.Type[] getClonedTypeArray(org.apache.harmony.luni.lang.reflect.ListOfTypes)> 
<android.widget.AutoCompleteTextView: int getDropDownVerticalOffset()> 
<android.widget.BaseAdapter: int getViewTypeCount()> 
<android.view.View: android.os.Handler getHandler()> 
<java.security.Identity: java.security.IdentityScope getScope()> 
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentLanguageHeader getContentLanguage()> 
<gov.nist.javax.sip.message.SIPMessage: java.lang.String getMessageContent()> 
<java.net.URLConnection: java.lang.Object getContent(java.lang.Class[])> 
<android.support.v4.app.ListFragment: int getSelectedItemPosition()> 
<android.app.ActivityOptions: int getCustomEnterResId()> 
<org.apache.xalan.transformer.KeyTable: org.apache.xpath.objects.XNodeSet getNodeSetDTMByKey(org.apache.xml.utils.QName,org.apache.xml.utils.XMLString)> 
<android.net.NetworkStats: long getTotalBytes()> 
<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost getTargetHost()> 
<android.widget.Gallery: boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation)> 
<gov.nist.javax.sip.stack.SIPTransaction: java.security.cert.Certificate[] getLocalCertificates()> 
<libcore.net.http.HttpURLConnectionImpl: java.io.InputStream getInputStream()> 
<java.util.zip.CRC32: long getValue()> 
<android.content.pm.ResolveInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)> 
<android.mtp.MtpDevice: android.mtp.MtpObjectInfo getObjectInfo(int)> 
<java.security.cert.X509CertSelector: java.lang.String getSubjectAsString()> 
<org.apache.xml.serializer.dom3.LSSerializerImpl: org.w3c.dom.DOMStringList getParameterNames()> 
<org.apache.xml.dtm.ref.DTMDefaultBase: java.lang.String getDocumentSystemIdentifier(int)> 
<org.apache.xml.serializer.ToUnknownStream: boolean getIndent()> 
<java.util.logging.LogRecord: java.lang.Throwable getThrown()> 
<android.gesture.GestureLibrary: java.util.Set getGestureEntries()> 
<android.bluetooth.BluetoothPbap: int getState()> 
<android.net.NetworkQuotaInfo: long getSoftLimitBytes()> 
<android.filterpacks.imageproc.ImageSlicer: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<libcore.icu.NativeDecimalFormat: int getGroupingSize()> 
<android.media.RingtoneManager: java.lang.String getSettingForType(int)> 
<android.preference.PreferenceGroup: boolean onPrepareAddPreference(android.preference.Preference)> 
<java.io.DataInputStream: java.lang.String readUTF(java.io.DataInput)> 
<org.xml.sax.helpers.AttributesImpl: java.lang.String getQName(int)> 
<android.net.wifi.WifiConfigStore: android.net.ProxyProperties getProxyProperties(int)> 
<android.widget.PopupMenu: android.view.Menu getMenu()> 
<android.net.NetworkIdentity: java.lang.String getSubscriberId()> 
<org.jivesoftware.smackx.packet.DiscoverItems: java.util.Iterator getItems()> 
<gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser: gov.nist.javax.sip.header.SIPHeader parse()> 
<gov.nist.javax.sip.header.ims.PMediaAuthorization: java.lang.String getToken()> 
<java.lang.Package: java.lang.annotation.Annotation[] getAnnotations()> 
<gov.nist.javax.sip.address.SipUri: java.lang.String getUserPassword()> 
<android.telephony.TelephonyManager: int getNetworkClass(int)> 
<android.telephony.SmsCbMessage: int getSerialNumber()> 
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.security.cert.Certificate[] getPeerCertificates()> 
<org.apache.xml.utils.DOMBuilder: java.io.Writer getWriter()> 
<org.apache.xml.dtm.ref.DTMDefaultBase: int getExpandedTypeID(java.lang.String,java.lang.String,int)> 
<org.jivesoftware.smack.XMPPConnection: org.jivesoftware.smack.ConnectionConfiguration getConnectionConfiguration()> 
<org.apache.xml.serializer.SerializerBase: java.lang.String getOutputProperty(java.lang.String)> 
<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()> 
<android.app.SearchableInfo: java.lang.String getSuggestIntentData()> 
<org.apache.james.mime4j.field.datetime.DateTime: java.util.Date getDate()> 
<android.location.LocationManager: java.util.List getProviders(boolean)> 
<java.util.concurrent.atomic.AtomicIntegerArray: int getAndSet(int,int)> 
<android.content.IntentFilter: int getPriority()> 
<java.nio.HeapByteBuffer: int getInt(int)> 
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.Attr getAttributeNode(java.lang.String)> 
<android.util.SparseIntArray: int get(int,int)> 
<android.net.Proxy: int getPort(android.content.Context)> 
<android.widget.CalendarView: long getDate()> 
<android.media.audiofx.EnvironmentalReverb: int getDecayTime()> 
<android.accessibilityservice.AccessibilityService: android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()> 
<android.content.ContentResolver: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String)> 
<android.test.ClassPathPackageInfoSource: java.lang.String[] getClassPath()> 
<gov.nist.javax.sip.SipProviderImpl: javax.sip.ServerTransaction getNewServerTransaction(javax.sip.message.Request)> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: org.xml.sax.ContentHandler getContentHandler()> 
<android.widget.HeaderViewListAdapter: int getFootersCount()> 
<gov.nist.javax.sip.header.SubscriptionState: java.lang.String getState()> 
<org.apache.http.conn.scheme.Scheme: org.apache.http.conn.scheme.SchemeSocketFactory getSchemeSocketFactory()> 
<libcore.net.http.HttpURLConnectionImpl: int getChunkLength()> 
<android.content.CursorLoader: android.database.Cursor loadInBackground()> 
<org.apache.xml.dtm.ref.ExtendedType: java.lang.String getLocalName()> 
<android.net.LinkSocket: android.net.LinkProperties getLinkProperties()> 
<android.emoji.EmojiFactory: java.lang.String getAndroidPuaFromVendorSpecificPua(java.lang.String)> 
<android.view.ViewGroup: float[] getDebugLines(int,int,int,int)> 
<android.content.BroadcastReceiver: int getSendingUserId()> 
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getScheme()> 
<org.apache.http.auth.UsernamePasswordCredentials: java.security.Principal getUserPrincipal()> 
<android.os.UserManager: int getUserCount()> 
<gov.nist.javax.sip.stack.SIPDialog: int getLocalSequenceNumber()> 
<org.apache.xpath.axes.AxesWalker: int getAxis()> 
<android.widget.ExpandableListPosition: long getPackedPosition()> 
<android.webkit.BrowserFrame: void downloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)> 
<org.apache.james.mime4j.MimeStreamParser: void parseEntity(java.io.InputStream)> 
<gov.nist.core.GenericObject: gov.nist.core.Match getMatcher()> 
<android.media.AudioService: int getMasterStreamType()> 
<android.test.suitebuilder.TestMethod: java.lang.Class getEnclosingClass()> 
<java.util.concurrent.locks.ReentrantLock: int getWaitQueueLength(java.util.concurrent.locks.Condition)> 
<java.util.MapEntry: java.lang.Object getValue()> 
<org.apache.harmony.xml.dom.DocumentImpl: org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)> 
<android.widget.AbsSeekBar: android.graphics.drawable.Drawable getThumb()> 
<android.view.MotionEvent: float getHistoricalToolMajor(int)> 
<android.webkit.HTML5VideoViewProxy: void createWebCoreHandler()> 
<android.widget.TextView: android.text.style.URLSpan[] getUrls()> 
<org.apache.xml.serializer.SerializerBase: java.lang.String getStandalone()> 
<android.content.ClipboardManager: android.content.ClipDescription getPrimaryClipDescription()> 
<org.apache.harmony.security.x509.TBSCertificate: org.apache.harmony.security.x509.AlgorithmIdentifier getSignature()> 
<android.content.Intent: java.util.ArrayList getCharSequenceArrayListExtra(java.lang.String)> 
<org.apache.harmony.xml.dom.NodeImpl: void getTextContent(java.lang.StringBuilder)> 
<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)> 
<java.io.HistoricalCharsetNames: java.lang.String get(java.nio.charset.Charset)> 
<android.location.GpsStatus: int getTimeToFirstFix()> 
<org.apache.http.auth.UsernamePasswordCredentials: java.lang.String getUserName()> 
<android.widget.AdapterView: long getItemIdAtPosition(int)> 
<java.io.LineNumberInputStream: int read()> 
<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object decode(byte[],int,int)> 
<android.test.mock.MockContext: android.content.pm.PackageManager getPackageManager()> 
<android.gesture.GestureOverlayView: int getOrientation()> 
<android.filterfw.core.SimpleFrame: float[] getFloats()> 
<android.nfc.ApduList: java.util.List get()> 
<android.hardware.display.WifiDisplayStatus: int getFeatureState()> 
<libcore.icu.ICU: java.util.Locale[] getAvailableBreakIteratorLocales()> 
<android.view.View: java.util.ArrayList getFocusables(int)> 
<org.apache.commons.logging.impl.SimpleLog: java.io.InputStream getResourceAsStream(java.lang.String)> 
<android.net.LocalSocketImpl: java.io.InputStream getInputStream()> 
<libcore.net.url.JarURLConnectionImpl: java.util.jar.JarEntry getJarEntry()> 
<java.io.Reader: int read(java.nio.CharBuffer)> 
<org.apache.james.mime4j.field.Field: java.lang.String getName()> 
<java.util.concurrent.ConcurrentSkipListMap: void readObject(java.io.ObjectInputStream)> 
<android.animation.ValueAnimator: android.animation.TimeInterpolator getInterpolator()> 
<org.apache.harmony.xml.ExpatReader: org.xml.sax.DTDHandler getDTDHandler()> 
<dalvik.system.profiler.DalvikThreadSampler: java.lang.StackTraceElement[] getStackTrace(java.lang.Thread)> 
<org.apache.xpath.jaxp.JAXPPrefixResolver: java.lang.String getNamespaceForPrefix(java.lang.String)> 
<java.net.ServerSocket: java.net.SocketAddress getLocalSocketAddress()> 
<gov.nist.javax.sip.header.ContentDisposition: java.lang.String getDispositionType()> 
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInParent(android.graphics.Rect)> 
<javax.crypto.Cipher: int getOutputSize(int)> 
<android.net.ConnectivityManager: java.lang.String[] getTetherableUsbRegexs()> 
<android.view.textservice.SpellCheckerSubtype: java.lang.CharSequence getDisplayName(android.content.Context,java.lang.String,android.content.pm.ApplicationInfo)> 
<android.widget.HorizontalScrollView: float getRightFadingEdgeStrength()> 
<android.text.StaticLayout: int getEllipsizedWidth()> 
<android.text.method.ReplacementTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)> 
<org.apache.xalan.processor.XSLTAttributeDef: boolean getRequired()> 
<org.apache.harmony.security.x509.GeneralName: int getTag()> 
<android.app.ProgressDialog: int getSecondaryProgress()> 
<android.text.Layout: int getParagraphLeft(int)> 
<android.graphics.Paint: android.graphics.ColorFilter getColorFilter()> 
<android.os.Debug: int getGlobalFreedCount()> 
<libcore.util.ZoneInfo: int getDSTSavings()> 
<android.webkit.AccessibilityInjectorFallback: android.view.accessibility.AccessibilityEvent getPartialyPopulatedAccessibilityEvent(int)> 
<android.view.MotionEvent: int getSource()> 
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: javax.net.ssl.X509KeyManager getKeyManager()> 
<java.util.logging.LogRecord: int getThreadID()> 
<org.apache.harmony.xnet.provider.jsse.HandshakeIODataStream: byte[] getMessages()> 
<android.net.sip.SimpleSessionDescription: java.lang.String getAttribute(java.lang.String)> 
<org.json.JSONArray: long getLong(int)> 
<android.net.http.HttpAuthHeader: java.lang.String getUsername()> 
<java.lang.reflect.Method: java.lang.String getName()> 
<android.text.style.TextAppearanceSpan: int getSpanTypeId()> 
<android.app.BackStackRecord: int getId()> 
<java.util.concurrent.ForkJoinTask: int getSurplusQueuedTaskCount()> 
<org.apache.xalan.processor.ProcessorInclude: java.lang.String getStylesheetInclErr()> 
<org.apache.xpath.NodeSetDTM: int getLast()> 
<gov.nist.javax.sip.header.ParametersHeader: gov.nist.core.DuplicateNameValueList getMultiParameters()> 
<org.apache.harmony.security.provider.cert.X509CertImpl: javax.security.auth.x500.X500Principal getIssuerX500Principal()> 
<android.view.accessibility.AccessibilityInteractionClient: android.accessibilityservice.IAccessibilityServiceConnection getConnection(int)> 
<java.net.HttpCookie: boolean getSecure()> 
<android.net.wifi.WifiNative: int getBand()> 
<android.filterpacks.imageproc.AutoFixFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<android.telephony.SmsMessage: java.lang.String getOriginatingAddress()> 
<android.view.Display: java.lang.String getName()> 
<android.net.wifi.p2p.WifiP2pWfdInfo: int getMaxThroughput()> 
<android.database.sqlite.SQLiteDatabase: long getPageSize()> 
<gov.nist.javax.sip.stack.UDPMessageProcessor: int getDefaultTargetPort()> 
<org.apache.http.impl.conn.AbstractPoolEntry: java.lang.Object getState()> 
<gov.nist.javax.sip.message.SIPResponse: java.lang.String getReasonPhrase()> 
<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams getRequestParams()> 
<libcore.util.ZoneInfoDB: java.lang.String[] getAvailableIDs(int)> 
<android.test.MoreAsserts: java.util.regex.Matcher getMatcher(java.lang.String,java.lang.String)> 
<android.net.sip.SimpleSessionDescription: android.net.sip.SimpleSessionDescription$Media[] getMedia()> 
<javax.xml.transform.dom.DOMResult: java.lang.String getSystemId()> 
<android.view.View: android.view.DisplayList getDisplayList()> 
<junit.runner.TestCaseClassLoader: byte[] loadFileData(java.lang.String,java.lang.String)> 
<android.net.LocalSocketImpl: android.net.Credentials getPeerCredentials()> 
<android.filterfw.core.KeyValueMap: float getFloat(java.lang.String)> 
<org.apache.james.mime4j.field.datetime.parser.SimpleCharStream: int getBeginLine()> 
<android.webkit.BrowserFrame: boolean getShouldStartScrolledRight()> 
<android.view.inputmethod.BaseInputConnection: int getComposingSpanEnd(android.text.Spannable)> 
<android.content.ContentValues: java.lang.Float getAsFloat(java.lang.String)> 
<android.os.UserManager: int getUserHandle()> 
<android.net.wifi.WifiStateMachine: java.lang.String getConfigFile()> 
<java.util.GregorianCalendar: java.util.TimeZone getTimeZone()> 
<android.renderscript.Matrix3f: void loadMultiply(android.renderscript.Matrix3f,android.renderscript.Matrix3f)> 
<jp.co.omronsoft.openwnn.TextCandidatesViewManager: int getCandidateSpaceWidth(boolean)> 
<org.apache.xml.utils.SecuritySupport: boolean getFileExists(java.io.File)> 
<android.os.Debug: int getThreadAllocCount()> 
<android.mtp.MtpStorage: int getStorageId(int)> 
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)> 
<android.location.Criteria: int getSpeedAccuracy()> 
<android.text.style.SuggestionRangeSpan: int getSpanTypeId()> 
<android.app.ApplicationPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)> 
<java.util.concurrent.locks.ReentrantReadWriteLock: int getReadLockCount()> 
<android.test.TestCaseUtil: junit.framework.Test getTestAtIndex(junit.framework.TestSuite,int)> 
<org.apache.xml.serializer.dom3.NamespaceSupport: java.lang.String getPrefix(java.lang.String)> 
<javax.crypto.KeyGenerator: java.lang.String getAlgorithm()> 
<android.webkit.WebHistoryItemClassic: java.lang.String getTouchIconUrl()> 
<junit.extensions.TestDecorator: junit.framework.Test getTest()> 
<org.xml.sax.helpers.AttributesImpl: int getIndex(java.lang.String,java.lang.String)> 
<org.apache.xalan.templates.StylesheetComposed: int getImportCountComposed()> 
<gov.nist.javax.sip.header.Reason: java.lang.String getText()> 
<android.drm.mobile1.DrmRawContent: int getRawType()> 
<java.nio.HeapByteBuffer: void get(double[],int,int)> 
<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()> 
<android.drm.DrmUtils: byte[] readBytes(java.io.File)> 
<android.os.CommonClock: long getTimelineId()> 
<libcore.icu.NativeBreakIterator: java.text.CharacterIterator getText()> 
<android.filterpacks.imageproc.ToRGBFilter: android.filterfw.core.FrameFormat getConvertedFormat(android.filterfw.core.FrameFormat)> 
<org.apache.xalan.processor.StylesheetHandler: org.xml.sax.helpers.NamespaceSupport getNamespaceSupport()> 
<org.jivesoftware.smackx.provider.DiscoverItemsProvider: int getTag()> 
<org.jivesoftware.smackx.packet.VCard: java.lang.String getOrganizationUnit()> 
<javax.xml.validation.Validator: boolean getFeature(java.lang.String)> 
<android.content.Intent: byte[] getByteArrayExtra(java.lang.String)> 
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.lang.String[] getSupportedCipherSuites()> 
<java.nio.FileChannelImpl: java.io.FileDescriptor getFD()> 
<android.view.View: android.view.IWindowSession getWindowSession()> 
<org.apache.harmony.xnet.provider.jsse.CipherSuite: int getMACLength()> 
<android.widget.ActivityChooserModel: int getHistoryMaxSize()> 
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpRequestInterceptor getRequestInterceptor(int)> 
<android.filterfw.geometry.Rectangle: float getWidth()> 
<org.apache.xml.utils.UnImplNode: java.lang.String getTagName()> 
<android.telephony.gsm.SmsMessage: int getStatus()> 
<android.app.admin.DevicePolicyManager: long getMaximumTimeToLock(android.content.ComponentName)> 
<android.net.LocalSocket: int getSendBufferSize()> 
<javax.net.ssl.SSLEngineResult: javax.net.ssl.SSLEngineResult$Status getStatus()> 
<android.opengl.GLLogWrapper: java.lang.String getErrorString(int)> 
<android.app.WallpaperManager: android.graphics.drawable.Drawable getDrawable()> 
<java.security.spec.RSAPublicKeySpec: java.math.BigInteger getModulus()> 
<org.apache.harmony.security.fortress.Services: java.util.List getProvidersList()> 
<org.apache.harmony.xml.dom.DocumentTypeImpl: java.lang.String getNodeName()> 
<android.net.nsd.NsdServiceInfo: java.lang.String getServiceType()> 
<org.apache.harmony.security.fortress.Services: int getCacheVersion()> 
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader directGetContextClassLoader()> 
<android.test.ActivityInstrumentationTestCase2: android.app.Activity getActivity()> 
<android.content.ClipDescription: java.lang.CharSequence getLabel()> 
<android.os.UserManager: int getUserSerialNumber(int)> 
<java.util.LinkedList: java.lang.Object getFirst()> 
<org.apache.xml.utils.Context2: java.util.Enumeration getDeclaredPrefixes()> 
<java.nio.DirectByteBuffer: void get(long[],int,int)> 
<org.apache.http.impl.io.HttpTransportMetricsImpl: long getBytesTransferred()> 
<android.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> 
<java.util.TimeZone: java.lang.String getDisplayName(java.util.Locale)> 
<org.apache.xml.utils.Context2: java.lang.String getURI(java.lang.String)> 
<android.widget.AutoCompleteTextView: android.widget.ListAdapter getAdapter()> 
<org.apache.xml.utils.res.StringArrayWrapper: java.lang.String getString(int)> 
<org.apache.harmony.xml.ExpatAttributes: java.lang.String getQName(int)> 
<java.util.logging.LogRecord: java.lang.String getLoggerName()> 
<android.os.SystemProperties: long getLong(java.lang.String,long)> 
<android.nfc.tech.Ndef: android.nfc.NdefMessage getNdefMessage()> 
<android.support.v4.app.TaskStackBuilder: android.content.Intent[] getIntents()> 
<android.net.http.Connection: org.apache.http.protocol.HttpContext getHttpContext()> 
<android.media.AudioSystem: java.lang.String getDeviceName(int)> 
<org.apache.http.message.HeaderGroup: org.apache.http.Header[] getHeaders(java.lang.String)> 
<org.apache.xpath.patterns.StepPattern: org.apache.xpath.Expression getPredicate(int)> 
<java.text.DateFormat: java.text.NumberFormat getNumberFormat()> 
<android.preference.PreferenceManager: android.preference.PreferenceFragment getFragment()> 
<org.apache.harmony.security.x509.CertificateIssuer: javax.security.auth.x500.X500Principal getIssuer()> 
<android.drm.mobile1.DrmRawContent: int getContentLength(android.drm.mobile1.DrmRights)> 
<android.telephony.SmsCbMessage: android.telephony.SmsCbCmasInfo getCmasWarningInfo()> 
<android.view.accessibility.AccessibilityNodeInfoCache: android.view.accessibility.AccessibilityNodeInfo get(long)> 
<android.os.Message: android.os.Handler getTarget()> 
<android.view.inputmethod.CompletionInfo: java.lang.CharSequence getLabel()> 
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CallIdHeader getCallIdHeader()> 
<android.preference.MultiSelectListPreference: java.lang.CharSequence[] getEntries()> 
<android.renderscript.ScriptIntrinsicConvolve5x5: android.renderscript.Script$FieldID getFieldID_Input()> 
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: boolean getWantClientAuth()> 
<android.app.admin.DevicePolicyManager: int getPasswordQuality(android.content.ComponentName)> 
<android.bluetooth.BluetoothTetheringDataTracker: android.net.LinkCapabilities getLinkCapabilities()> 
<android.net.wifi.WifiInfo: android.net.wifi.WifiSsid getWifiSsid()> 
<gov.nist.javax.sip.address.SipUri: java.lang.String getUserParam()> 
<gov.nist.core.ThreadAuditor: long getPingIntervalInMillisecs()> 
<android.media.AudioRecord: int getMinBufferSize(int,int,int)> 
<org.jivesoftware.smackx.packet.MUCUser: java.lang.String getNamespace()> 
<java.io.EmulatedFields: java.lang.Object get(java.lang.String,java.lang.Object)> 
<android.view.ViewGroup: android.graphics.Paint getDebugPaint()> 
<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)> 
<android.widget.RatingBar: android.graphics.drawable.shapes.Shape getDrawableShape()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: boolean getUseClientMode()> 
<org.apache.commons.io.output.DeferredFileOutputStream: byte[] getData()> 
<org.jivesoftware.smack.packet.Presence: java.lang.String getStatus()> 
<javax.crypto.spec.PBEParameterSpec: byte[] getSalt()> 
<android.filterpacks.performance.Throughput: float getFramesPerSecond()> 
<java.beans.IndexedPropertyChangeEvent: int getIndex()> 
<android.telephony.ServiceState: int getNetworkId()> 
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: java.lang.String[] getSupportedCipherSuites()> 
<org.apache.xalan.templates.DecimalFormatProperties: char getMinusSign()> 
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime(long,int)> 
<org.apache.http.impl.io.ChunkedInputStream: int read()> 
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.Intent)> 
<org.ccil.cowan.tagsoup.HTMLScanner: void unread(java.io.PushbackReader,int)> 
<org.apache.xalan.templates.ElemForEach: int getXSLToken()> 
<javax.xml.transform.TransformerException: java.lang.Throwable getCause()> 
<org.apache.harmony.security.x509.CertificatePolicies: java.util.List getPolicyInformations()> 
<gov.nist.core.Token: java.lang.String getTokenValue()> 
<android.widget.AbsListView: int getRightPaddingOffset()> 
<org.apache.xalan.transformer.TransformerIdentityImpl: java.lang.Object getParameter(java.lang.String)> 
<android.graphics.Paint: float getTextRunAdvances(char[],int,int,int,int,int,float[],int,int)> 
<org.apache.harmony.security.x509.ORAddress: byte[] getEncoded()> 
<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.processor.XSLTElementProcessor getProcessorFor(java.lang.String,java.lang.String,java.lang.String)> 
<java.util.zip.DeflaterInputStream: int read(byte[],int,int)> 
<org.apache.harmony.luni.lang.reflect.ListOfTypes: java.lang.reflect.Type[] getResolvedTypes()> 
<java.util.Locale: java.lang.String getDisplayLanguage(java.util.Locale)> 
<android.speech.srec.WaveHeader: short readShort(java.io.InputStream)> 
<org.apache.xml.serializer.utils.SystemIDResolver: java.lang.String getAbsoluteURI(java.lang.String,java.lang.String)> 
<android.view.View: int getMeasuredWidth()> 
<android.widget.ScrollBarDrawable: int getOpacity()> 
<android.test.mock.MockContext: java.io.File getSharedPrefsFile(java.lang.String)> 
<android.view.animation.AnimationSet: long getDuration()> 
<org.apache.harmony.security.pkcs7.SignerInfo: java.lang.String getDigestAlgorithm()> 
<android.graphics.drawable.DrawableContainer: int getIntrinsicHeight()> 
<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.MessageChannel getResponseChannel()> 
<android.media.MediaCodecInfo: android.media.MediaCodecInfo$CodecCapabilities getCapabilitiesForType(java.lang.String)> 
<android.speech.tts.TtsEngines: android.speech.tts.TextToSpeech$EngineInfo getEngineInfo(java.lang.String)> 
<android.os.Bundle: short getShort(java.lang.String)> 
<org.xml.sax.helpers.LocatorImpl: java.lang.String getPublicId()> 
<org.apache.xpath.XPathContext: org.apache.xml.utils.IntStack getCurrentExpressionNodeStack()> 
<android.media.videoeditor.WaveformData: short[] getFrameGains()> 
<org.apache.xalan.templates.DecimalFormatProperties: java.lang.String getInfinity()> 
<org.apache.xml.serializer.utils.AttList: java.lang.String getQName(int)> 
<android.content.ContentProviderClient: java.lang.String getType(android.net.Uri)> 
<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()> 
<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getTargetHost()> 
<android.webkit.PluginManager: java.lang.String getPluginsAPKName(java.lang.String)> 
<org.apache.xalan.transformer.TransformerImpl: java.util.Vector getTemplateCallstack()> 
<org.apache.http.conn.scheme.Scheme: java.lang.String getName()> 
<org.apache.http.client.methods.HttpOptions: java.util.Set getAllowedMethods(org.apache.http.HttpResponse)> 
<android.text.Layout: int getLineStartPos(int,int,int)> 
<android.accounts.ChooseTypeAndAccountActivity: java.util.Set getAllowableAccountSet(android.content.Intent)> 
<org.apache.commons.io.output.ThresholdingOutputStream: long getByteCount()> 
<java.security.SecureRandom: java.lang.String getAlgorithm()> 
<org.apache.james.mime4j.field.datetime.parser.TokenMgrError: java.lang.String getMessage()> 
<android.view.accessibility.AccessibilityInteractionClient: android.os.Message getSameProcessMessageAndClear()> 
<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPRequest createAckRequest(gov.nist.javax.sip.header.To)> 
<java.security.cert.CertPathBuilder: java.security.cert.CertPathBuilder getInstance(java.lang.String,java.lang.String)> 
<android.view.View: int getMeasuredHeightAndState()> 
<android.net.TrafficStats: java.lang.String[] getMobileIfaces()> 
<android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()> 
<android.speech.tts.TextToSpeechService: int getSecureSettingInt(java.lang.String,int)> 
<android.content.IntentFilter: java.lang.String getDataType(int)> 
<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.Collection getQueuedThreads()> 
<android.widget.ZoomButtonsController: android.view.View getZoomControls()> 
<android.widget.AbsSpinner: int getChildHeight(android.view.View)> 
<android.telephony.CellSignalStrengthCdma: int getDbm()> 
<android.text.Layout: android.text.Layout$Alignment getParagraphAlignment(int)> 
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: boolean getEnableSessionCreation()> 
<org.apache.http.impl.client.RoutedRequest: org.apache.http.impl.client.RequestWrapper getRequest()> 
<android.util.XmlPullAttributes: int getStyleAttribute()> 
<android.app.SearchableInfo: int getInputType()> 
<android.graphics.drawable.AnimatedRotateDrawable: boolean getPadding(android.graphics.Rect)> 
<android.widget.SimpleExpandableListAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)> 
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfoForUid(int)> 
<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.message.Request getRequest()> 
<org.apache.http.auth.NTUserPrincipal: java.lang.String getName()> 
<android.animation.FloatKeyframeSet: float getFloatValue(float)> 
<android.test.ActivityUnitTestCase: android.content.Intent getStartedActivityIntent()> 
<android.drm.mobile1.DrmRawContent: java.io.InputStream getContentInputStream(android.drm.mobile1.DrmRights)> 
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: org.apache.harmony.xnet.provider.jsse.ClientSessionContext getClientSessionContext()> 
<java.util.logging.Logger: java.lang.String getName()> 
<org.apache.xalan.templates.ElemCopyOf: int getXSLToken()> 
<java.lang.Boolean: boolean getBoolean(java.lang.String)> 
<android.net.wifi.p2p.WifiP2pGroup: java.util.Collection getClientList()> 
<java.io.PipedReader: boolean ready()> 
<android.location.LocationRequest: android.location.LocationRequest createFromDeprecatedCriteria(android.location.Criteria,long,float,boolean)> 
<org.apache.harmony.xml.dom.DOMImplementationImpl: java.lang.Object getFeature(java.lang.String,java.lang.String)> 
<java.util.IllegalFormatWidthException: int getWidth()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getInstance(java.security.interfaces.DSAPrivateKey)> 
<android.location.Address: java.lang.String getPhone()> 
<android.view.KeyEvent: int getRepeatCount()> 
<gov.nist.core.DuplicateNameValueList: java.lang.Object getValue(java.lang.String)> 
<android.telephony.CellBroadcastMessage: android.telephony.SmsCbEtwsInfo getEtwsWarningInfo()> 
<android.content.ContextWrapper: java.lang.String getPackageResourcePath()> 
<org.jivesoftware.smack.packet.Packet: java.lang.String getFrom()> 
<javax.security.auth.PrivateCredentialPermission: java.lang.String getCredentialClass()> 
<java.net.URLConnection: long getExpiration()> 
<android.os.Bundle: char[] getCharArray(java.lang.String)> 
<android.view.KeyEvent: long getEventTimeNano()> 
<android.widget.TextView: float getTextScaleX()> 
<android.text.StaticLayout: android.text.Layout$Directions getLineDirections(int)> 
<android.net.MobileDataStateTracker: android.net.NetworkInfo getNetworkInfo()> 
<org.apache.harmony.xml.dom.DocumentImpl: java.lang.String getXmlVersion()> 
<org.jivesoftware.smack.packet.Presence: org.jivesoftware.smack.packet.Presence$Mode getMode()> 
<java.net.SocketImpl: int getPort()> 
<org.apache.xalan.templates.TemplateList: java.util.Hashtable getNamedTemplates()> 
<android.widget.Spinner: int getGravity()> 
<android.webkit.CallbackProxy: boolean uiOverrideUrlLoading(java.lang.String)> 
<android.database.sqlite.SQLiteGlobal: java.lang.String getDefaultJournalMode()> 
<android.filterfw.core.GLFrame: android.graphics.Bitmap getBitmap()> 
<java.nio.DirectByteBuffer: java.nio.ByteBuffer get(byte[],int,int)> 
<android.server.search.Searchables: java.util.ArrayList getGlobalSearchActivities()> 
<org.jivesoftware.smack.PacketWriter: int getPacketListenerCount()> 
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.DOMConfiguration getDomConfig()> 
<java.text.FieldPosition: java.text.Format$Field getFieldAttribute()> 
<android.view.ViewConfiguration: int getScaledDoubleTapTouchSlop()> 
<java.util.concurrent.ThreadPoolExecutor: int getActiveCount()> 
<android.content.ContextWrapper: android.content.res.Resources$Theme getTheme()> 
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: int getSendBufferSize()> 
<android.view.View: android.view.TouchDelegate getTouchDelegate()> 
<android.widget.GridLayout: int getOrientation()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getAttributeNode(int,java.lang.String,java.lang.String)> 
<android.bluetooth.BluetoothTetheringDataTracker: android.bluetooth.BluetoothTetheringDataTracker getInstance()> 
<android.view.CompatibilityInfoHolder: android.content.res.CompatibilityInfo get()> 
<org.apache.harmony.security.x509.OtherName: byte[] getEncoded()> 
<javax.sip.TransactionTerminatedEvent: javax.sip.ServerTransaction getServerTransaction()> 
<android.net.InterfaceConfiguration: android.net.LinkAddress getLinkAddress()> 
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.String)> 
<android.app.Instrumentation: android.content.Context getTargetContext()> 
<org.jivesoftware.smackx.ServiceDiscoveryManager: java.lang.String getIdentityName()> 
<java.nio.HeapByteBuffer: void get(int[],int,int)> 
<org.apache.harmony.xml.dom.CharacterDataImpl: java.lang.String getData()> 
<org.apache.xalan.transformer.TransformerIdentityImpl: javax.xml.transform.ErrorListener getErrorListener()> 
<javax.xml.transform.TransformerException: java.lang.String getMessageAndLocation()> 
<android.telephony.TelephonyManager: java.lang.String getCompleteVoiceMailNumber()> 
<android.renderscript.ProgramVertex: android.renderscript.Element getInput(int)> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: int getAttributeNode(int,java.lang.String,java.lang.String)> 
<java.io.ObjectInputStream: int read()> 
<gov.nist.javax.sip.header.Contact: javax.sip.address.Address getAddress()> 
<android.test.ServiceTestCase: android.app.Service getService()> 
<android.app.ActivityOptions: int getStartWidth()> 
<org.apache.xalan.templates.ElemTextLiteral: java.lang.String getNodeValue()> 
<android.telephony.cdma.CdmaSmsCbProgramResults: int getCategory()> 
<org.jivesoftware.smack.XMPPConnection: org.jivesoftware.smack.packet.HeartbeatConfig getHeartbeatConfig()> 
<org.jivesoftware.smack.packet.Packet: long getAccountId()> 
<java.sql.DataTruncation: int getIndex()> 
<android.telephony.SmsCbEtwsInfo: long getPrimaryNotificationTimestamp()> 
<android.view.View: java.lang.CharSequence getContentDescription()> 
<android.opengl.GLLogWrapper: int getIntegerStateSize(int)> 
<android.nfc.NdefRecord: byte[] getType()> 
<libcore.net.http.ResponseHeaders: int getSMaxAgeSeconds()> 
<libcore.net.http.HttpsURLConnectionImpl: int getReadTimeout()> 
<android.view.ViewConfiguration: int getPressedStateDuration()> 
<org.apache.harmony.xnet.provider.jsse.KeyManagerImpl: java.security.PrivateKey getPrivateKey(java.lang.String)> 
<android.telephony.CellIdentityCdma: int getLongitude()> 
<android.graphics.drawable.Drawable: int getChangingConfigurations()> 
<java.util.Currency: java.util.Currency getInstance(java.lang.String)> 
<org.apache.http.impl.HttpConnectionMetricsImpl: long getReceivedBytesCount()> 
<org.apache.xml.dtm.DTMManager: int getNodeIdentityMask()> 
<android.text.Layout: void getCursorPath(int,android.graphics.Path,java.lang.CharSequence)> 
<org.apache.harmony.security.x501.Name: java.lang.String getName0(java.lang.String)> 
<android.content.pm.PackageParser: int getParseError()> 
<org.apache.http.impl.auth.RFC2617Scheme: java.lang.String getParameter(java.lang.String)> 
<javax.crypto.CipherInputStream: int read()> 
<android.text.Layout: java.lang.CharSequence getText()> 
<org.apache.xalan.templates.ElemTemplate: double getPriority()> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: java.lang.String getNodeValue(int)> 
<android.telephony.ServiceState: int getCdmaRoamingIndicator()> 
<org.apache.harmony.security.PublicKeyImpl: byte[] getEncoded()> 
<android.content.res.AssetManager: java.lang.String[] getResourceStringArray(int)> 
<android.database.DatabaseUtils: int getSqlStatementType(java.lang.String)> 
<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)> 
<org.apache.commons.io.input.CountingInputStream: int getCount()> 
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: int getTransactionId()> 
<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams getClientParams()> 
<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String,java.lang.String)> 
<java.security.Provider: java.util.Set getServices()> 
<android.animation.AnimatorInflater: android.animation.ValueAnimator loadAnimator(android.content.Context,android.util.AttributeSet,android.animation.ValueAnimator)> 
<android.webkit.CallbackProxy: android.webkit.WebBackForwardListClassic getBackForwardList()> 
<org.apache.harmony.xml.dom.AttrImpl: java.lang.String getValue()> 
<org.apache.http.impl.client.DefaultTargetAuthenticationHandler: java.util.List getAuthPreferences(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)> 
<org.apache.harmony.security.x509.Extension: org.apache.harmony.security.x509.BasicConstraints getBasicConstraintsValue()> 
<android.os.UserManager: int getMaxSupportedUsers()> 
<android.content.CursorLoader: android.net.Uri getUri()> 
<jp.co.omronsoft.openwnn.JAJP.DefaultSoftKeyboardJAJP: java.lang.String[][] getCycleTable()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: long getLastAccessedTime()> 
<org.apache.xml.dtm.ref.DTMDefaultBase: int getFirstChild(int)> 
<org.apache.xml.utils.AttList: java.lang.String getType(java.lang.String,java.lang.String)> 
<android.database.CursorWrapper: int getInt(int)> 
<org.apache.xpath.jaxp.XPathImpl: java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)> 
<org.apache.harmony.security.asn1.ASN1StringType: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> 
<org.jivesoftware.smack.packet.LoginResponse: java.lang.String getJid()> 
<android.nfc.tech.NfcA: short getSak()> 
<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> 
<android.server.search.SearchManagerService: java.util.List getGlobalSearchActivities()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: org.apache.xml.dtm.DTMAxisTraverser getAxisTraverser(int)> 
<android.widget.AdapterViewAnimator: int getBaseline()> 
<android.widget.TableRow: int getLocationOffset(android.view.View)> 
<android.net.rtp.AudioStream: android.net.rtp.AudioCodec getCodec()> 
<android.renderscript.Program: int getTextureCount()> 
<android.support.v4.util.AtomicFile: byte[] readFully()> 
<org.apache.xml.serializer.ToTextSAXHandler: java.io.Writer getWriter()> 
<android.app.Activity: java.lang.String getCallingPackage()> 
<java.net.NetworkInterface: java.lang.String getName()> 
<android.net.EthernetDataTracker: java.lang.String getTcpBufferSizesPropName()> 
<org.jivesoftware.smack.packet.DataMessage: long getUserSerialNumber()> 
<android.location.GpsSatellite: float getAzimuth()> 
<org.jivesoftware.smack.ProtoBufAuthentication: org.jivesoftware.smack.packet.HeartbeatConfig getHeartbeatConfig()> 
<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: java.lang.String getAccessType()> 
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: boolean getOOBInline()> 
<android.text.style.DynamicDrawableSpan: android.graphics.drawable.Drawable getCachedDrawable()> 
<java.util.prefs.AbstractPreferences: boolean getBoolean(java.lang.String,boolean)> 
<org.apache.http.conn.params.ConnManagerParams: long getTimeout(org.apache.http.params.HttpParams)> 
<android.text.style.ScaleXSpan: float getScaleX()> 
<android.webkit.BrowserFrame: int getFileSize(java.lang.String)> 
<android.content.SyncManager: android.content.SyncAdapterType[] getSyncAdapterTypes(int)> 
<android.database.DatabaseUtils: int getKeyLen(byte[])> 
<org.apache.xml.serializer.dom3.DOMStringListImpl: int getLength()> 
<android.net.LinkProperties: android.net.ProxyProperties getHttpProxy()> 
<org.apache.harmony.security.pkcs7.SignedData: java.util.List getSignerInfos()> 
<javax.obex.ServerOperation: javax.obex.HeaderSet getReceivedHeader()> 
<org.jivesoftware.smack.XMPPConnection: java.net.Socket getSocketConnection()> 
<android.content.SyncStorageEngine: android.content.SyncStorageEngine$AuthorityInfo parseAuthority(org.xmlpull.v1.XmlPullParser,int)> 
<android.telephony.CellInfoCdma: android.telephony.CellSignalStrengthCdma getCellSignalStrength()> 
<android.widget.RadioGroup: int getCheckedRadioButtonId()> 
<android.support.v4.view.accessibility.AccessibilityRecordCompat: java.lang.Object getImpl()> 
<android.util.XmlPullAttributes: java.lang.String getAttributeValue(int)> 
<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso()> 
<android.test.mock.MockContext: android.view.CompatibilityInfoHolder getCompatibilityInfo(int)> 
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()> 
<android.nfc.NfcAdapter: android.nfc.INfcTag getTagService()> 
<android.webkit.WebSettingsClassic: boolean getDatabaseEnabled()> 
<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.Drawable getDrawable()> 
<java.io.BufferedInputStream: int read(byte[],int,int)> 
<org.apache.harmony.xml.dom.AttrImpl: java.lang.String getNodeValue()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: java.lang.String getLocalName(int)> 
<libcore.icu.NativeBreakIterator: libcore.icu.NativeBreakIterator getCharacterInstance(java.util.Locale)> 
<android.webkit.HTML5VideoFullScreen: android.view.SurfaceView getSurfaceView()> 
<android.filterfw.core.FrameFormat: int getBytesPerSample()> 
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: int getAddedCount(java.lang.Object)> 
<android.widget.SlidingDrawer: android.view.View getHandle()> 
<gov.nist.javax.sip.parser.Lexer: java.lang.String getHeaderValue(java.lang.String)> 
<android.location.Geofence: float getRadius()> 
<android.bluetooth.BluetoothAdapter: android.os.ParcelUuid[] getUuids()> 
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script$KernelID getKernelIDSubtract()> 
<android.net.sip.SipProfile: int getCallingUid()> 
<android.support.v4.app.Fragment: boolean getUserVisibleHint()> 
<java.nio.MappedByteBufferAdapter: byte get()> 
<org.apache.harmony.security.x509.BasicConstraints: int getPathLenConstraint()> 
<android.view.animation.Animation: int getRepeatCount()> 
<android.preference.EditTextPreference: android.widget.EditText getEditText()> 
<org.jivesoftware.smack.XMPPException: java.lang.Throwable getWrappedThrowable()> 
<android.view.MotionEvent: float getHistoricalOrientation(int,int)> 
<java.util.GregorianCalendar: int getGreatestMinimum(int)> 
<android.nfc.tech.MifareClassic: int getSectorCount()> 
<java.lang.reflect.AccessibleObject: java.lang.annotation.Annotation[] getDeclaredAnnotations()> 
<gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.message.Request createRequest(javax.sip.address.URI,java.lang.String,javax.sip.header.CallIdHeader,javax.sip.header.CSeqHeader,javax.sip.header.FromHeader,javax.sip.header.ToHeader,java.util.List,javax.sip.header.MaxForwardsHeader)> 
<android.net.ProxyProperties: java.lang.String getExclusionList()> 
<android.app.admin.DevicePolicyManager: int getCurrentFailedPasswordAttempts()> 
<android.net.sip.SimpleSessionDescription: java.lang.String[] getAttributeNames()> 
<org.apache.http.params.HttpConnectionParams: boolean getSoReuseaddr(org.apache.http.params.HttpParams)> 
<org.jivesoftware.smackx.provider.MUCUserProvider: int getTag()> 
<libcore.net.http.RequestHeaders: java.lang.String getUserAgent()> 
<android.net.ConnectivityManager: android.net.ProxyProperties getProxy()> 
<android.bluetooth.BluetoothHealth: android.os.ParcelFileDescriptor getMainChannelFd(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)> 
<java.security.Permission: java.lang.String getName()> 
<android.media.AudioTrack: int getChannelConfiguration()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: boolean getNeedClientAuth()> 
<libcore.io.ForwardingOs: int read(java.io.FileDescriptor,byte[],int,int)> 
<android.webkit.WebViewClassic: int getScrollY()> 
<android.webkit.WebViewClassic: int getScrollX()> 
<org.ccil.cowan.tagsoup.Schema: java.lang.String getURI()> 
<java.security.spec.RSAMultiPrimePrivateCrtKeySpec: java.math.BigInteger getCrtCoefficient()> 
<android.view.animation.AccelerateInterpolator: float getInterpolation(float)> 
<gov.nist.javax.sip.header.ims.Privacy: java.lang.String getPrivacy()> 
<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo[] loadVersionInfo(java.lang.String[],java.lang.ClassLoader)> 
<android.media.AudioTrack: int getAudioSessionId()> 
<org.apache.xml.serializer.CharInfo: java.lang.String getOutputStringForChar(char)> 
<android.widget.GridLayout: int getDefaultMargin(android.view.View,boolean,boolean)> 
<android.app.Fragment: int getId()> 
<android.app.admin.DevicePolicyManager: int getPasswordMinimumSymbols(android.content.ComponentName,int)> 
<android.content.IntentFilter: java.lang.String getCategory(int)> 
<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParserTokenManager: org.apache.james.mime4j.field.contenttype.parser.Token getNextToken()> 
<org.apache.http.conn.MultihomePlainSocketFactory: org.apache.http.conn.MultihomePlainSocketFactory getSocketFactory()> 
<android.preference.PreferenceManager: android.preference.PreferenceScreen getPreferenceScreen()> 
<java.security.KeyStore: java.lang.String getCertificateAlias(java.security.cert.Certificate)> 
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: int getReceiveBufferSize()> 
<java.net.HttpURLConnection: java.security.Permission getPermission()> 
<android.widget.ToggleButton: java.lang.CharSequence getTextOn()> 
<org.kxml2.io.KXmlParser: java.lang.String getAttributeName(int)> 
<android.test.mock.MockCursor: java.lang.String getString(int)> 
<android.view.animation.Animation: long getDuration()> 
<org.apache.harmony.security.asn1.BerOutputStream: void getSequenceOfLength(org.apache.harmony.security.asn1.ASN1SequenceOf)> 
<android.nfc.tech.NfcV: android.nfc.Tag getTag()> 
<android.app.PendingIntent: android.app.PendingIntent getBroadcastAsUser(android.content.Context,int,android.content.Intent,int,android.os.UserHandle)> 
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: boolean getEnableSessionCreation()> 
<org.apache.xpath.jaxp.XPathFactoryImpl: boolean getFeature(java.lang.String)> 
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteSession getThreadSession()> 
<android.app.ContextImpl: android.app.WallpaperManager getWallpaperManager()> 
<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: java.lang.Object getExtensionAccessInfo()> 
<org.apache.xml.serializer.utils.SerializerMessages_zh_TW: java.lang.Object[][] getContents()> 
<android.widget.DialerFilter: java.lang.CharSequence getFilterText()> 
<android.preference.EditTextPreference: java.lang.String getText()> 
<android.os.Parcel: java.io.Serializable readSerializable()> 
<jp.co.omronsoft.openwnn.ComposingText: java.util.ArrayList getStringLayer(int)> 
<android.webkit.DateSorter: long getBoundary(int)> 
<org.apache.harmony.xml.dom.ElementImpl: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)> 
<java.security.AlgorithmParameterGenerator: java.security.AlgorithmParameterGenerator getInstance(java.lang.String,java.lang.String)> 
<android.view.MotionEvent: int getDeviceId()> 
<org.apache.commons.logging.LogSource: org.apache.commons.logging.Log getInstance(java.lang.Class)> 
<android.app.SharedPreferencesImpl: int getInt(java.lang.String,int)> 
<org.apache.xml.utils.UnImplNode: org.w3c.dom.Element getOwnerElement()> 
<org.apache.xalan.templates.Stylesheet: int getXSLToken()> 
<java.math.BigInt: int getNativeBIGNUM()> 
<gov.nist.javax.sip.message.SIPResponse: java.lang.String getDialogId(boolean,java.lang.String)> 
<javax.sql.ConnectionEvent: java.sql.SQLException getSQLException()> 
<android.webkit.WebSettings: boolean getNavDump()> 
<android.drm.DrmManagerClient: android.content.ContentValues getMetadata(android.net.Uri)> 
<org.apache.xalan.templates.ElemWhen: java.lang.String getNodeName()> 
<java.net.SocketPermission: java.lang.String getActions()> 
<libcore.net.http.ResponseHeaders: int getContentLength()> 
<android.media.videoeditor.EffectColor: int getColor()> 
<android.webkit.BrowserFrame: void resetLoadingStates()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: org.w3c.dom.Node getNode(int)> 
<android.telephony.CellIdentityCdma: int getBasestationId()> 
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String loadDescription(android.content.pm.PackageManager)> 
<android.content.pm.PackageParser: android.content.pm.PackageParser$Permission parsePermissionTree(android.content.pm.PackageParser$Package,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,java.lang.String[])> 
<java.text.DecimalFormatSymbols: char getPercent()> 
<org.jivesoftware.smack.Chat: java.lang.String getParticipant()> 
<java.text.NumberFormat: int getMaximumFractionDigits()> 
<java.lang.Class: java.net.URL getResource(java.lang.String)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: byte[] getEncoded()> 
<android.preference.Preference: float getPersistedFloat(float)> 
<android.media.audiofx.EnvironmentalReverb: short getReverbLevel()> 
<org.jivesoftware.smack.util.PacketParserUtils: int getIntOrDefault(com.google.common.io.protocol.ProtoBuf,int,int)> 
<android.webkit.WebSettings: boolean getDatabaseEnabled()> 
<gov.nist.javax.sip.stack.TLSMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()> 
<android.app.ActivityManager: java.util.List getRunningTasks(int,int,android.app.IThumbnailReceiver)> 
<android.telephony.CellBroadcastMessage: java.lang.String getLanguageCode()> 
<android.test.TestRunner: java.lang.reflect.Method getChildrenMethod(java.lang.Class)> 
<android.webkit.WebSettings: boolean getUseDoubleTree()> 
<java.security.spec.ECParameterSpec: java.math.BigInteger getOrder()> 
<android.media.videoeditor.VideoEditorImpl: void load()> 
<jp.co.omronsoft.openwnn.Keyboard: java.util.List getKeys()> 
<android.media.videoeditor.MediaVideoItem: long getTimelineDuration()> 
<android.graphics.PathMeasure: boolean getSegment(float,float,android.graphics.Path,boolean)> 
<org.apache.harmony.security.asn1.BerOutputStream: void getExplicitLength(org.apache.harmony.security.asn1.ASN1Explicit)> 
<android.text.format.DateFormat: java.text.DateFormat getLongDateFormat(android.content.Context)> 
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RedirectStrategy getRedirectStrategy()> 
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ConnectionKeepAliveStrategy getConnectionKeepAliveStrategy()> 
<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPRequest createErrorAck(gov.nist.javax.sip.header.To)> 
<org.xmlpull.v1.sax2.Driver: boolean getFeature(java.lang.String)> 
<android.graphics.SurfaceTexture: void getTransformMatrix(float[])> 
<android.webkit.WebSettingsClassic: android.webkit.WebSettingsClassic$AutoFillProfile getAutoFillProfile()> 
<android.widget.ListView: int getMaxScrollAmount()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey getInstance(org.apache.harmony.xnet.provider.jsse.OpenSSLKey)> 
<org.apache.harmony.security.asn1.ASN1Type: int getEncodedLength(org.apache.harmony.security.asn1.BerOutputStream)> 
<android.webkit.WebSettingsClassic: boolean getDisplayZoomControls()> 
<android.nfc.tech.NfcB: android.nfc.Tag getTag()> 
<android.nfc.tech.NfcA: android.nfc.Tag getTag()> 
<android.view.Display: java.lang.String getAddress()> 
<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getFirstChildElem()> 
<android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String)> 
<org.apache.xml.serializer.ToHTMLStream: org.apache.xml.serializer.ElemDesc getElemDesc2(java.lang.String)> 
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.Node getNextSibling()> 
<android.location.Address: double getLongitude()> 
<android.net.NetworkTemplate: java.lang.String getSubscriberId()> 
<android.app.LocalActivityManager: android.app.Activity getActivity(java.lang.String)> 
<android.nfc.tech.NfcF: android.nfc.Tag getTag()> 
<org.apache.http.auth.AuthState: org.apache.http.auth.Credentials getCredentials()> 
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.Node getPreviousSibling()> 
<org.apache.xpath.compiler.FunctionTable: java.lang.Object getFunctionID(java.lang.String)> 
<org.xml.sax.helpers.XMLFilterImpl: org.xml.sax.DTDHandler getDTDHandler()> 
<android.view.MotionEvent: int getPointerIdBits()> 
<android.widget.HeaderViewListAdapter: android.widget.Filter getFilter()> 
<android.filterfw.core.NativeFrame: java.nio.ByteBuffer getData()> 
<android.util.JsonReader: android.util.JsonToken decodeLiteral()> 
<gov.nist.javax.sip.address.UserInfo: int getUserType()> 
<org.apache.xml.serializer.utils.AttList: int getIndex(java.lang.String,java.lang.String)> 
<junit.textui.ResultPrinter: java.io.PrintStream getWriter()> 
<android.text.method.DateKeyListener: android.text.method.DateKeyListener getInstance()> 
<android.text.format.DateUtils: java.lang.String getRelativeDayString(android.content.res.Resources,long,long)> 
<android.accessibilityservice.UiTestAutomationBridge: android.view.accessibility.AccessibilityNodeInfo getRootAccessibilityNodeInfoInActiveWindow()> 
<android.graphics.PathMeasure: boolean getPosTan(float,float[],float[])> 
<gov.nist.javax.sip.parser.PipelinedMsgParser: java.lang.String readLine(java.io.InputStream)> 
<android.widget.BaseExpandableListAdapter: int getChildTypeCount()> 
<android.view.Display: int getRotation()> 
<android.content.ClipDescription: int getMimeTypeCount()> 
<android.hardware.display.WifiDisplay: java.lang.String getFriendlyDisplayName()> 
<gov.nist.javax.sip.address.SipUri: java.lang.String getUserAtHost()> 
<javax.net.ssl.DistinguishedNameParser: char getUTF8()> 
<java.net.SocketImpl: int getLocalPort()> 
<org.apache.harmony.luni.lang.reflect.ImplForType: java.lang.reflect.Type getOwnerType()> 
<android.media.videoeditor.VideoEditorImpl: android.media.videoeditor.AudioTrack parseAudioTrack(org.xmlpull.v1.XmlPullParser)> 
<android.bluetooth.BluetoothPan: int getConnectionState(android.bluetooth.BluetoothDevice)> 
<android.media.videoeditor.OverlayFrame: int getOverlayFrameWidth()> 
<android.telephony.CellIdentityGsm: int getMcc()> 
<android.view.View: int getBaseline()> 
<android.net.wifi.p2p.WifiP2pGroupList: java.util.Collection getGroupList()> 
<org.apache.xml.res.XMLMessages: java.lang.String getResourceSuffix(java.util.Locale)> 
<android.webkit.WebSettings: boolean getMediaPlaybackRequiresUserGesture()> 
<org.apache.harmony.xml.parsers.SAXParserImpl: org.xml.sax.XMLReader getXMLReader()> 
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.security.cert.Certificate[] getLocalCertificates()> 
<android.widget.TextView: int getPaintFlags()> 
<gov.nist.javax.sip.stack.TLSMessageChannel: java.net.InetAddress getPeerInetAddress()> 
<android.app.SearchableInfo: android.app.SearchableInfo getActivityMetaData(android.content.Context,org.xmlpull.v1.XmlPullParser,android.content.ComponentName)> 
<org.jivesoftware.smack.packet.Presence: java.lang.String getAvatarHash()> 
<org.jivesoftware.smack.packet.RosterPacket: java.lang.String getChildElementXML()> 
<android.content.res.TypedArray: int getDimensionPixelSize(int,int)> 
<android.view.View: void getDrawingRect(android.graphics.Rect)> 
<android.telephony.ServiceState: int getNetworkType()> 
<java.lang.Character: byte getDirectionality(char)> 
<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)> 
<org.apache.xml.dtm.ref.DTMDefaultBase: int getNextSibling(int)> 
<org.jivesoftware.smackx.packet.MUCInitialPresence: java.lang.String getPassword()> 
<org.apache.http.auth.AuthScope: java.lang.String getScheme()> 
<android.media.videoeditor.MediaVideoItem: android.graphics.Bitmap getThumbnail(int,int,long)> 
<android.os.Environment: java.io.File getLegacyExternalStorageDirectory()> 
<javax.sip.SipFactory: javax.sip.SipFactory getInstance()> 
<android.view.WindowOrientationListener: int getProposedRotation()> 
<android.test.mock.MockContext: android.content.Context getApplicationContext()> 
<android.hardware.display.DisplayManager: android.view.Display getDisplay(int)> 
<java.security.cert.TrustAnchor: java.lang.String getCAName()> 
<org.apache.xml.utils.XMLReaderManager: org.apache.xml.utils.XMLReaderManager getInstance()> 
<org.apache.xml.serializer.SerializerBase: char getFirstCharLocName(java.lang.String)> 
<android.view.ViewGroup: int getChildCount()> 
<javax.net.ssl.HandshakeCompletedEvent: java.security.cert.Certificate[] getLocalCertificates()> 
<android.accounts.AccountManagerService: java.lang.Integer getSigninRequiredNotificationId(android.accounts.AccountManagerService$UserAccounts,android.accounts.Account)> 
<android.app.ContextImpl: java.io.File getFilesDir()> 
<android.webkit.WebViewClassic: android.webkit.WebView$HitTestResult getHitTestResult()> 
<android.net.http.AndroidHttpClientConnection: java.net.InetAddress getRemoteAddress()> 
<android.nfc.tech.Ndef: android.nfc.NdefMessage getCachedNdefMessage()> 
<android.view.Surface: int getGenerationId()> 
<android.graphics.Bitmap: int getRowBytes()> 
<android.widget.AutoCompleteTextView: android.widget.AutoCompleteTextView$Validator getValidator()> 
<java.util.Currency: java.lang.String getCurrencyCode()> 
<org.jivesoftware.smack.packet.Authentication: java.lang.String getChildElementXML()> 
<android.media.TimedText: boolean parseParcel(android.os.Parcel)> 
<org.apache.xpath.VariableStack: org.apache.xpath.objects.XObject getLocalVariable(int,int)> 
<android.webkit.ZoomManager: float computeReadingLevelScale(float)> 
<android.widget.BaseAdapter: int getItemViewType(int)> 
<android.gesture.GestureOverlayView: long getFadeOffset()> 
<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMIterator getContextNodes()> 
<org.apache.harmony.xml.dom.CommentImpl: java.lang.String getNodeName()> 
<org.apache.xml.serializer.SerializerBase: org.apache.xml.serializer.NamespaceMappings getNamespaceMappings()> 
<android.renderscript.RenderScript: android.renderscript.RenderScript$RSErrorHandler getErrorHandler()> 
<android.webkit.WebSettingsClassic: boolean getUseDoubleTree()> 
<org.apache.xalan.templates.ElemPI: java.lang.String getNodeName()> 
<android.provider.MediaStore: java.lang.String getVersion(android.content.Context)> 
<android.app.ContextImpl: android.view.CompatibilityInfoHolder getCompatibilityInfo(int)> 
<android.app.SearchableInfo: android.content.Context getActivityContext(android.content.Context)> 
<java.net.DatagramSocket: java.net.InetAddress getInetAddress()> 
<org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore: java.io.File getCertificateFile(java.io.File,java.security.cert.X509Certificate)> 
<org.apache.http.impl.auth.BasicScheme: java.lang.String getSchemeName()> 
<android.hardware.SystemSensorManager: java.util.List getFullSensorList()> 
<gov.nist.javax.sip.stack.SIPTransaction: java.net.InetAddress getPeerPacketSourceAddress()> 
<android.telephony.CellIdentityGsm: int getMnc()> 
<android.content.res.TypedArray: int getIndex(int)> 
<android.app.ActivityManagerProxy: android.app.IActivityManager$ContentProviderHolder getContentProvider(android.app.IApplicationThread,java.lang.String,int,boolean)> 
<android.test.mock.MockCursor: int getColumnIndex(java.lang.String)> 
<javax.obex.ClientOperation: int getHeaderLength()> 
<org.apache.http.impl.client.RequestWrapper: java.net.URI getURI()> 
<android.graphics.drawable.ShapeDrawable: int getOpacity()> 
<org.apache.xpath.jaxp.XPathImpl: org.w3c.dom.Document getDummyDocument()> 
<org.apache.xpath.compiler.OpMap: int getOp(int)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateCrtKey: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getInstance(java.security.interfaces.RSAPrivateCrtKey)> 
<android.net.http.CertificateChainValidator: android.net.http.CertificateChainValidator getInstance()> 
<javax.xml.datatype.Duration: long getTimeInMillis(java.util.Date)> 
<libcore.icu.NativeDecimalFormat: int getMinimumFractionDigits()> 
<org.apache.xalan.transformer.XalanTransformState: org.apache.xalan.templates.ElemTemplate getCurrentTemplate()> 
<android.os.storage.StorageManager: java.lang.String getMountedObbPath(java.lang.String)> 
<android.renderscript.Path: android.renderscript.Allocation getLoopAllocation()> 
<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()> 
<android.content.Intent: java.lang.String getScheme()> 
<android.app.Fragment: java.lang.CharSequence getText(int)> 
<javax.crypto.Mac: java.security.Provider getProvider()> 
<android.accounts.AccountManagerService: android.accounts.AccountManagerService getSingleton()> 
<android.widget.TextView: android.text.Layout getHintLayout()> 
<libcore.io.BlockGuardOs: int readv(java.io.FileDescriptor,java.lang.Object[],int[],int[])> 
<android.telephony.SmsMessage: int getStatusOnIcc()> 
<android.location.Location: java.lang.String getProvider()> 
<android.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName)> 
<android.support.v4.content.CursorLoader: void onStartLoading()> 
<android.content.SyncStorageEngine: android.content.SyncStorageEngine$AuthorityInfo getAuthority(int)> 
<android.hardware.usb.UsbManager: java.lang.String getDefaultFunction()> 
<gov.nist.javax.sip.header.Warning: int getCode()> 
<android.net.wifi.p2p.WifiP2pDeviceList: android.net.wifi.p2p.WifiP2pDevice get(java.lang.String)> 
<org.apache.harmony.xnet.provider.jsse.AlertProtocol: java.lang.String getAlertDescription()> 
<java.security.cert.X509CertSelector: byte[] getNameConstraints()> 
<android.animation.Keyframe: android.animation.TimeInterpolator getInterpolator()> 
<java.util.zip.Inflater: int getTotalOut()> 
<android.telephony.TelephonyManager: com.android.internal.telephony.IPhoneSubInfo getSubscriberInfo()> 
<java.lang.Long: java.lang.Long getLong(java.lang.String,long)> 
<android.location.Address: java.lang.String getThoroughfare()> 
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: int getToIndex(java.lang.Object)> 
<org.apache.xpath.operations.Operation: org.apache.xpath.Expression getExpression()> 
<android.content.IntentFilter: android.os.PatternMatcher getDataPath(int)> 
<org.apache.harmony.security.asn1.ASN1Any: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)> 
<android.webkit.WebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> 
<android.nfc.NfcAdapter: android.nfc.INfcAdapter getServiceInterface()> 
<java.util.concurrent.atomic.AtomicIntegerArray: int getAndIncrement(int)> 
<android.telephony.CellIdentityGsm: int getLac()> 
<gov.nist.javax.sip.stack.MessageChannel: int getPort()> 
<org.apache.xml.dtm.ref.DTMDefaultBase: java.lang.String getDocumentStandalone(int)> 
<android.app.ActivityOptions: int getCustomExitResId()> 
<javax.xml.datatype.Duration: int getDays()> 
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.security.Provider)> 
<android.service.dreams.DreamService: void loadSandman()> 
<android.preference.MultiCheckPreference: java.lang.CharSequence[] getEntries()> 
<android.view.LayoutInflater: android.view.LayoutInflater$Filter getFilter()> 
<android.bluetooth.BluetoothTetheringDataTracker: java.lang.String getTcpBufferSizesPropName()> 
<java.util.concurrent.ForkJoinPool: java.lang.Thread$UncaughtExceptionHandler getUncaughtExceptionHandler()> 
<org.apache.xpath.axes.OneStepIterator: int getProximityPosition(int)> 
<org.apache.harmony.xml.dom.DocumentFragmentImpl: java.lang.String getNodeName()> 
<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: java.lang.String getUtranCellID3GPP()> 
<android.view.View: long getDrawingTime()> 
<android.content.Loader: void onForceLoad()> 
<android.filterfw.core.Scheduler: android.filterfw.core.FilterGraph getGraph()> 
<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.ElemTemplate getTemplateComposed(org.apache.xpath.XPathContext,int,org.apache.xml.utils.QName,int,int,boolean,org.apache.xml.dtm.DTM)> 
<android.media.videoeditor.MediaArtistNativeHelper: int getVideoCodecType(int)> 
<java.util.concurrent.atomic.AtomicLongFieldUpdater: long getAndIncrement(java.lang.Object)> 
<org.ccil.cowan.tagsoup.XMLWriter: java.lang.String getPrefix(java.lang.String)> 
<org.apache.harmony.security.x509.CRLNumber: byte[] getEncoded()> 
<org.jivesoftware.smackx.packet.DiscoverInfo: java.util.Iterator getFeatures()> 
<android.speech.tts.SynthesisRequest: int getSpeechRate()> 
<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ext.LexicalHandler getInputLexicalHandler()> 
<org.apache.harmony.security.x501.AttributeValue: java.lang.String getHexString()> 
<org.apache.commons.codec.net.QuotedPrintableCodec: java.lang.String getDefaultCharset()> 
<java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)> 
<android.text.Layout: float getHorizontal(int,boolean)> 
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable getDrawable(int)> 
<java.text.ParsePosition: int getErrorIndex()> 
<android.app.ActivityManagerProxy: java.lang.String getPackageForIntentSender(android.content.IIntentSender)> 
<android.util.MonthDisplayHelper: int getColumnOf(int)> 
<libcore.net.http.HttpsURLConnectionImpl: java.lang.String getHeaderField(int)> 
<android.test.TestRunner: java.lang.reflect.Method getChildrenMethod(android.content.Context,java.lang.String)> 
<android.text.format.DateFormat: java.text.DateFormat getMediumDateFormat(android.content.Context)> 
<android.view.inputmethod.InputMethodInfo: android.content.ComponentName getComponent()> 
<android.test.mock.MockResources: java.lang.String getResourceName(int)> 
<org.xmlpull.v1.sax2.Driver: int getLength()> 
<gov.nist.javax.sip.header.ims.SecurityAgree: java.lang.String getMode()> 
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean: int getMovementGranularities(java.lang.Object)> 
<org.jivesoftware.smack.packet.RosterPacket: java.util.Iterator getRosterItems()> 
<org.apache.harmony.xml.parsers.DocumentBuilderImpl: org.w3c.dom.DOMImplementation getDOMImplementation()> 
<org.apache.http.message.HeaderGroup: org.apache.http.Header[] getAllHeaders()> 
<org.apache.harmony.xnet.provider.jsse.AbstractSessionContext: int getSessionCacheSize()> 
<android.view.GLES20DisplayList: int getNativeDisplayList()> 
<android.net.Uri: boolean getBooleanQueryParameter(java.lang.String,boolean)> 
<android.database.CursorWindow: float getFloat(int,int)> 
<android.net.sip.SimpleSessionDescription: java.lang.String getAddress()> 
<org.apache.xalan.templates.ElemIf: java.lang.String getNodeName()> 
<java.security.KeyStore: java.util.Date getCreationDate(java.lang.String)> 
<android.hardware.usb.UsbAccessory: java.lang.String getVersion()> 
<android.net.wifi.WifiStateMachine: android.net.NetworkInfo$DetailedState getNetworkDetailedState()> 
<android.widget.FrameLayout: android.graphics.drawable.Drawable getForeground()> 
<android.content.Loader: boolean cancelLoad()> 
<libcore.net.url.FileURLConnection: java.security.Permission getPermission()> 
<android.location.LocationRequest: android.location.LocationRequest createFromDeprecatedProvider(java.lang.String,long,float,boolean)> 
<android.text.method.HideReturnsTransformationMethod: android.text.method.HideReturnsTransformationMethod getInstance()> 
<org.apache.xml.utils.FastStringBuffer: java.lang.StringBuffer getString(java.lang.StringBuffer,int,int,int)> 
<java.io.CharArrayReader: boolean ready()> 
<android.webkit.WebViewClassic: int getViewHeight()> 
<android.webkit.Plugin: java.lang.String getName()> 
<org.apache.james.mime4j.field.datetime.parser.SimpleCharStream: int getTabSize(int)> 
<org.apache.xalan.templates.ElemTemplate: org.apache.xml.utils.QName getMode()> 
<org.apache.xalan.transformer.XalanTransformState: org.apache.xalan.templates.ElemTemplate getMatchedTemplate()> 
<java.util.concurrent.locks.AbstractQueuedSynchronizer: int getQueueLength()> 
<android.net.LocalSocket: int getReceiveBufferSize()> 
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getTextContent()> 
<org.apache.xalan.transformer.TransformerIdentityImpl: javax.xml.transform.Transformer getTransformer()> 
<android.text.Layout: float getPrimaryHorizontal(int)> 
<dalvik.system.SocketTagger: dalvik.system.SocketTagger get()> 
<javax.security.auth.Subject: int getCredHashCode(java.lang.Object)> 
<android.os.CommonTimeConfig: int getClientSyncInterval()> 
<android.view.KeyEvent: int getUnicodeChar()> 
<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getPeerProtocol()> 
<android.webkit.WebViewClassic: int getScaledNavSlop()> 
<org.apache.harmony.security.x509.BasicConstraints: byte[] getEncoded()> 
<org.apache.harmony.security.provider.cert.X509CertImpl: java.util.Date getNotBefore()> 
<android.net.LocalSocketImpl: java.io.FileDescriptor getFileDescriptor()> 
<android.hardware.usb.UsbInterface: int getInterfaceClass()> 
<org.apache.xalan.processor.XSLTElementDef: int getType()> 
<org.kxml2.io.KXmlParser: java.lang.String getAttributeValue(int)> 
<gov.nist.javax.sip.header.ims.PServedUser: java.lang.String getSessionCase()> 
<java.io.PipedReader: int read(char[],int,int)> 
<org.apache.xml.serializer.utils.Messages: java.util.ListResourceBundle getResourceBundle()> 
<android.view.ScaleGestureDetector: float getCurrentSpan()> 
<org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream: int getLine()> 
<java.lang.Class: java.lang.String getSimpleName()> 
<android.graphics.drawable.RotateDrawable: int getChangingConfigurations()> 
<java.util.concurrent.locks.ReentrantLock: java.util.Collection getQueuedThreads()> 
<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int getNodeByPosition(int)> 
<android.filterfw.core.OutputPort: android.filterfw.core.InputPort getTargetPort()> 
<java.util.SimpleTimeZone: int getOffset(int,int,int,int,int,int)> 
<android.webkit.WebSettings: java.lang.String getUserAgentString()> 
<android.accounts.AccountManagerService: android.accounts.AccountAndUser[] getAllAccounts()> 
<org.apache.harmony.xnet.provider.jsse.CipherSuite: java.lang.String[] getSupportedCipherSuiteNames()> 
<android.view.DisplayInfo: void getLogicalMetrics(android.util.DisplayMetrics,android.view.CompatibilityInfoHolder)> 
<android.net.http.IdleCache: android.net.http.Connection getConnection(org.apache.http.HttpHost)> 
<gov.nist.javax.sip.address.AddressImpl: java.lang.String getUserAtHostPort()> 
<org.apache.harmony.xnet.provider.jsse.ClientSessionContext: javax.net.ssl.SSLSession getSession(byte[])> 
<android.webkit.WebSettingsClassic: java.lang.String getAcceptLanguage()> 
<org.apache.xalan.templates.ElemExtensionScript: java.lang.String getSrc()> 
<org.apache.james.mime4j.field.datetime.DateTime: int getMonth()> 
<libcore.io.ForwardingOs: libcore.io.StructPasswd getpwnam(java.lang.String)> 
<android.view.View: int getAccessibilityViewId()> 
<java.io.DataInputStream: int readUnsignedShort()> 
<org.apache.http.client.methods.HttpRequestBase: org.apache.http.RequestLine getRequestLine()> 
<org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol: org.apache.harmony.xnet.provider.jsse.SSLSessionImpl getSession()> 
<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCacheListener getListener()> 
<org.apache.james.mime4j.RootInputStream: int getLineNumber()> 
<org.apache.xpath.axes.LocPathIterator: int getAnalysisBits()> 
<org.apache.xml.serializer.utils.SerializerMessages_ca: java.lang.Object[][] getContents()> 
<java.net.InetAddress: java.net.InetAddress getByAddress(byte[])> 
<android.widget.AdapterView: java.lang.Object getSelectedItem()> 
<android.graphics.Paint: android.graphics.Paint$Cap getStrokeCap()> 
<android.util.XmlPullAttributes: int getAttributeIntValue(java.lang.String,java.lang.String,int)> 
<gov.nist.javax.sip.address.AddressImpl: java.lang.String getHost()> 
<javax.crypto.spec.RC5ParameterSpec: int getRounds()> 
<android.graphics.drawable.BitmapDrawable: int getIntrinsicHeight()> 
<android.telephony.gsm.SmsManager: java.util.ArrayList getAllMessagesFromSim()> 
<gov.nist.core.StringTokenizer: java.lang.String getLine()> 
<android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs: boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo)> 
<android.net.MailTo: java.lang.String getTo()> 
<android.hardware.usb.UsbAccessory: java.lang.String getDescription()> 
<java.util.Hashtable: java.lang.Object get(java.lang.Object)> 
<android.content.Context: int getThemeResId()> 
<android.location.Address: java.lang.String getFeatureName()> 
<android.os.CommonTimeConfig: int getMasterAnnounceInterval()> 
<android.text.method.DialerKeyListener: int getInputType()> 
<android.media.videoeditor.VideoEditorProfile: int getExportProfile(int)> 
<gov.nist.javax.sip.header.SIPHeaderList: gov.nist.javax.sip.header.SIPHeader get(int)> 
<android.inputmethodservice.InputMethodService: android.view.LayoutInflater getLayoutInflater()> 
<android.content.pm.RegisteredServicesCache: java.util.Collection getAllServices(int)> 
<android.app.admin.DevicePolicyManager: long getPasswordExpirationTimeout(android.content.ComponentName)> 
<java.security.Signature: java.lang.String getAlgorithm()> 
<org.apache.xalan.processor.XSLTAttributeDef: boolean getSupportsAVT()> 
<android.webkit.WebViewCore: android.webkit.DeviceMotionService getDeviceMotionService()> 
<android.view.accessibility.AccessibilityEvent: int getMovementGranularity()> 
<org.jivesoftware.smack.packet.Packet: java.lang.String getRmq2Id()> 
<java.io.ObjectStreamClass: long getSerialVersionUID()> 
<android.graphics.NinePatch: int getHeight()> 
<org.apache.harmony.xml.dom.DOMConfigurationImpl: java.lang.Object getParameter(java.lang.String)> 
<org.apache.xml.serializer.utils.SerializerMessages_de: java.lang.Object[][] getContents()> 
<android.app.SearchManager: android.content.Intent getAssistIntent(android.content.Context,int)> 
<android.view.animation.Animation: int getBackgroundColor()> 
<android.os.CommonTimeConfig: java.lang.String getInterfaceBinding()> 
<android.net.http.SslError: int getPrimaryError()> 
<java.util.logging.XMLFormatter: java.lang.String getHead(java.util.logging.Handler)> 
<android.telephony.NeighboringCellInfo: int getRssi()> 
<org.apache.xpath.jaxp.XPathExpressionImpl: org.w3c.dom.Document getDummyDocument()> 
<org.apache.harmony.xml.dom.ProcessingInstructionImpl: short getNodeType()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.lang.String getProtocol()> 
<android.util.XmlPullAttributes: java.lang.String getAttributeName(int)> 
<org.apache.harmony.xml.dom.AttrImpl: java.lang.String getPrefix()> 
<java.util.concurrent.atomic.AtomicMarkableReference: java.lang.Object getReference()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLMessageDigestJDK: int getCtx()> 
<org.jivesoftware.smack.XMPPException: java.lang.String getMessage()> 
<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Node)> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: java.lang.String getNamespaceFromExpandedNameID(int)> 
<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()> 
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: java.lang.String[] getEnabledProtocols()> 
<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()> 
<android.widget.TextView: int getCompoundPaddingRight()> 
<gov.nist.javax.sip.ListeningPointImpl: java.lang.String getIPAddress()> 
<org.apache.xml.serializer.utils.SerializerMessages_cs: java.lang.Object[][] getContents()> 
<org.jivesoftware.smack.util.Cache: long getCacheMisses()> 
<org.apache.harmony.security.x509.Certificate: byte[] getEncoded()> 
<org.kxml2.io.KXmlParser: java.lang.String getText()> 
<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()> 
<android.graphics.drawable.ClipDrawable: int getChangingConfigurations()> 
<java.util.TimeZone: java.lang.String getDisplayName()> 
<gov.nist.javax.sip.header.extensions.Replaces: java.lang.String getFromTag()> 
<org.apache.xml.utils.UnImplNode: java.lang.String getAttribute(java.lang.String)> 
<android.webkit.WebViewDatabaseClassic: java.lang.String[] getHttpAuthUsernamePassword(java.lang.String,java.lang.String)> 
<org.apache.xml.serializer.utils.SerializerMessages_es: java.lang.Object[][] getContents()> 
<android.net.ConnectivityManager: java.lang.String[] getTetherableIfaces()> 
<android.app.ContextImpl: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)> 
<android.widget.TextView: java.util.Locale getTextLocale()> 
<android.net.wifi.WifiStateTracker: android.net.LinkProperties getLinkProperties()> 
<org.json.JSONArray: java.lang.String getString(int)> 
<android.view.KeyCharacterMap: int getModifierBehavior()> 
<junit.framework.ComparisonFailure: java.lang.String getExpected()> 
<java.lang.reflect.Field: short getShort(java.lang.Object)> 
<android.view.View: int getId()> 
<java.lang.ClassLoader: java.util.Enumeration getSystemResources(java.lang.String)> 
<java.security.AlgorithmParameterGenerator: java.security.AlgorithmParameterGenerator getInstance(java.lang.String)> 
<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.ElemTemplate getTemplateComposed(org.apache.xpath.XPathContext,int,org.apache.xml.utils.QName,boolean,org.apache.xml.dtm.DTM)> 
<gov.nist.javax.sip.address.AddressImpl: int getAddressType()> 
<android.widget.AppSecurityPermissions: void getPermissionsForPackage(java.lang.String,java.util.Set)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: java.security.interfaces.DSAParams getParams()> 
<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.message.SIPResponse getLastResponse()> 
<java.util.prefs.PreferenceChangeEvent: java.util.prefs.Preferences getNode()> 
<org.apache.xml.dtm.Axis: int getNamesLength()> 
<android.webkit.WebSettingsClassic: int getMinimumFontSize()> 
<javax.xml.transform.dom.DOMResult: org.w3c.dom.Node getNode()> 
<java.security.spec.RSAPrivateCrtKeySpec: java.math.BigInteger getPrimeExponentQ()> 
<java.security.spec.RSAPrivateCrtKeySpec: java.math.BigInteger getPrimeExponentP()> 
<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: org.apache.harmony.luni.lang.reflect.ListOfTypes parseOptTypeArguments()> 
<android.view.View: int getRightPaddingOffset()> 
<org.apache.xpath.axes.LocPathIterator: boolean getFoundLast()> 
<android.webkit.ZoomManager: float getInvScale()> 
<org.apache.harmony.security.provider.cert.X509CertImpl: java.util.Collection getSubjectAlternativeNames()> 
<org.apache.harmony.xnet.provider.jsse.Logger: org.apache.harmony.xnet.provider.jsse.Logger$Stream getStream(java.lang.String)> 
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: java.lang.Object getSource(java.lang.Object)> 
<javax.net.ssl.SSLContext: javax.net.ssl.SSLServerSocketFactory getServerSocketFactory()> 
<android.net.ProxyProperties: int getPort()> 
<org.apache.xalan.templates.ElemExtensionDecl: int getElementCount()> 
<libcore.io.ForwardingOs: int readv(java.io.FileDescriptor,java.lang.Object[],int[],int[])> 
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: org.apache.harmony.xnet.provider.jsse.SSLParametersImpl getDefault()> 
<org.apache.xml.utils.FastStringBuffer: java.lang.String getOneChunkString(int,int,int)> 
<org.apache.commons.io.IOCase: java.lang.String getName()> 
<org.apache.xpath.XPathContext: int getCurrentNode()> 
<gov.nist.javax.sip.stack.SIPDialog: javax.sip.message.Request createRequest(java.lang.String)> 
<java.nio.ShortToByteBufferAdapter: java.nio.ShortBuffer get(short[],int,int)> 
<android.support.v4.widget.CursorAdapter: android.widget.Filter getFilter()> 
<android.widget.LinearLayout: int getLocationOffset(android.view.View)> 
<jp.co.omronsoft.openwnn.Keyboard: int getVerticalGap()> 
<android.opengl.EGLLogWrapper: java.lang.String getHex(int)> 
<org.apache.xml.serializer.utils.SerializerMessages_fr: java.lang.Object[][] getContents()> 
<android.media.audiofx.Equalizer: android.media.audiofx.Equalizer$Settings getProperties()> 
<net.oauth.signature.OAuthSignatureMethod: java.lang.String getTokenSecret()> 
<libcore.net.http.HttpURLConnectionImpl: java.lang.String getConnectToHost()> 
<android.database.DatabaseUtils: int getTypeOfObject(java.lang.Object)> 
<org.apache.harmony.xml.dom.EntityImpl: java.lang.String getXmlVersion()> 
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getInputEncoding()> 
<java.io.ObjectStreamClass: java.io.ObjectStreamField getField(java.lang.String)> 
<org.apache.xalan.templates.Stylesheet: java.lang.String getHref()> 
<org.apache.http.impl.io.AbstractSessionInputBuffer: java.lang.String readLine()> 
<org.jivesoftware.smackx.provider.MUCUserProvider: org.jivesoftware.smackx.packet.MUCUser$Invite parseInvite(org.xmlpull.v1.XmlPullParser)> 
<org.apache.xalan.templates.ElemLiteralResult: java.lang.String getRawName()> 
<libcore.net.http.HttpURLConnectionImpl: java.lang.String getHeaderFieldKey(int)> 
<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow(int)> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: short getLevel(int)> 
<org.apache.xml.serializer.ToUnknownStream: java.lang.String getStandalone()> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: org.xml.sax.ext.DeclHandler getDeclHandler()> 
<android.net.http.Connection: android.net.http.Connection getConnection(android.content.Context,org.apache.http.HttpHost,org.apache.http.HttpHost,android.net.http.RequestFeeder)> 
<org.kxml2.io.KXmlParser: int getColumnNumber()> 
<android.preference.Preference: android.content.SharedPreferences$Editor getEditor()> 
<org.apache.harmony.security.provider.cert.X509CRLImpl: byte[] getSigAlgParams()> 
<android.content.ContextWrapper: java.io.File getCacheDir()> 
<android.filterpacks.imageproc.ToRGBAFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<android.widget.ViewSwitcher: android.view.View getNextView()> 
<java.net.Socket: boolean getOOBInline()> 
<org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream: int getColumn()> 
<org.apache.http.impl.cookie.RFC2965Spec: java.util.List parse(org.apache.http.HeaderElement[],org.apache.http.cookie.CookieOrigin)> 
<org.apache.xml.serializer.utils.SerializerMessages_it: java.lang.Object[][] getContents()> 
<libcore.net.http.HttpsURLConnectionImpl: boolean getDefaultUseCaches()> 
<java.net.URLClassLoader: java.net.URL[] getURLs()> 
<org.apache.harmony.xml.parsers.DocumentBuilderFactoryImpl: boolean getFeature(java.lang.String)> 
<gov.nist.javax.sip.stack.SIPClientTransaction: javax.sip.message.Request createAck()> 
<android.test.mock.MockIContentProvider: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)> 
<java.util.concurrent.ForkJoinPool: int getPoolSize()> 
<org.apache.xpath.res.XPATHErrorResources: java.lang.String getResourceSuffix(java.util.Locale)> 
<android.widget.TextView: boolean getIncludeFontPadding()> 
<android.preference.SeekBarPreference: java.lang.CharSequence getSummary()> 
<android.webkit.CallbackProxy: android.webkit.WebChromeClient getWebChromeClient()> 
<android.graphics.Typeface: int getStyle()> 
<org.apache.xml.serializer.utils.SerializerMessages_hu: java.lang.Object[][] getContents()> 
<android.view.FocusFinder: android.view.FocusFinder getInstance()> 
<android.widget.TextView: void getInterestingRect(android.graphics.Rect,int)> 
<android.opengl.GLLogWrapper: java.lang.String getFactor(int)> 
<android.webkit.WebHistoryItem: java.lang.String getTitle()> 
<android.graphics.drawable.GradientDrawable: int getIntrinsicWidth()> 
<org.xmlpull.v1.sax2.Driver: org.xml.sax.EntityResolver getEntityResolver()> 
<android.text.DynamicLayout: int getLineStart(int)> 
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: int getConnectionsInPool()> 
<org.apache.http.impl.client.AbstractHttpClient: int getResponseInterceptorCount()> 
<org.apache.xml.utils.QName: java.lang.String getLocalPart()> 
<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect)> 
<android.webkit.WebResourceResponse: java.lang.String getMimeType()> 
<android.location.Location: double getLatitude()> 
<android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri,int)> 
<android.net.wifi.WifiConfigStore: java.lang.String getConfigFile()> 
<android.test.mock.MockPackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)> 
<android.content.pm.PackageParser: boolean parseApplication(android.content.pm.PackageParser$Package,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,int,java.lang.String[])> 
<android.widget.FastScroller: int getState()> 
<org.apache.xml.serializer.utils.SerializerMessages_ja: java.lang.Object[][] getContents()> 
<org.apache.xalan.processor.XSLTAttributeDef: int getType()> 
<android.drm.DrmManagerClient: android.content.ContentValues getConstraints(java.lang.String,int)> 
<org.apache.harmony.security.provider.cert.X509CertImpl: java.security.Principal getSubjectDN()> 
<java.nio.HeapByteBuffer: double getDouble(int)> 
<android.view.textservice.SuggestionsInfo: java.lang.String getSuggestionAt(int)> 
<org.jivesoftware.smack.packet.PresenceCapability: java.lang.String getNode()> 
<javax.net.ssl.SSLPermission: java.lang.String getActions()> 
<android.view.accessibility.AccessibilityRecord: int getCurrentItemIndex()> 
<android.renderscript.RenderScript: android.content.Context getApplicationContext()> 
<java.lang.reflect.Method: java.lang.annotation.Annotation[][] getParameterAnnotations()> 
<gov.nist.javax.sip.header.RetryAfter: int getRetryAfter()> 
<android.security.KeyStore: android.security.KeyStore getInstance()> 
<android.media.audiofx.PresetReverb: android.media.audiofx.PresetReverb$Settings getProperties()> 
<android.view.CompatibilityInfoHolder: android.content.res.CompatibilityInfo getIfNeeded()> 
<android.speech.tts.SynthesisRequest: int getPitch()> 
<org.apache.harmony.security.x509.Extensions: java.util.Set getNonCriticalExtensions()> 
<java.security.cert.X509CRL: java.security.cert.X509CRLEntry getRevokedCertificate(java.security.cert.X509Certificate)> 
<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)> 
<android.content.pm.PackageParser: boolean parseProviderTags(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.pm.PackageParser$Provider,java.lang.String[])> 
<android.text.Annotation: java.lang.String getValue()> 
<android.os.Bundle: double getDouble(java.lang.String)> 
<android.webkit.CookieManager: android.webkit.CookieManager getInstance()> 
<org.apache.xpath.jaxp.JAXPPrefixResolver: java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Node)> 
<android.location.GpsStatus: int getMaxSatellites()> 
<android.content.pm.PackageParser: java.security.cert.Certificate[] loadCertificates(java.util.jar.JarFile,java.util.jar.JarEntry,byte[])> 
<org.apache.commons.codec.language.Metaphone: int getMaxCodeLen()> 
<org.apache.xml.serializer.utils.URI: java.lang.String getFragment()> 
<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node getRootDocument()> 
<android.media.videoeditor.MediaArtistNativeHelper: int getVideoTransitionBehaviour(int)> 
<org.apache.harmony.security.asn1.DerOutputStream: void getSequenceLength(org.apache.harmony.security.asn1.ASN1Sequence)> 
<org.apache.harmony.security.x509.KeyUsage: byte[] getEncoded()> 
<android.content.IntentFilter: android.content.IntentFilter$AuthorityEntry getDataAuthority(int)> 
<gov.nist.javax.sip.header.extensions.References: java.lang.String getCallId()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getDocumentRoot()> 
<org.apache.xml.serializer.utils.SerializerMessages_ko: java.lang.Object[][] getContents()> 
<android.text.style.SpellCheckSpan: int getSpanTypeId()> 
<javax.security.cert.X509Certificate: javax.security.cert.X509Certificate getInstance(byte[])> 
<android.content.ContentProviderProxy: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)> 
<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getKey()> 
<android.telephony.PhoneNumberFormattingTextWatcher: java.lang.String getFormattedNumber(char,boolean)> 
<java.util.logging.Logger: java.util.logging.Logger getAnonymousLogger(java.lang.String)> 
<gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.message.Request createRequest(javax.sip.address.URI,java.lang.String,javax.sip.header.CallIdHeader,javax.sip.header.CSeqHeader,javax.sip.header.FromHeader,javax.sip.header.ToHeader,java.util.List,javax.sip.header.MaxForwardsHeader,javax.sip.header.ContentTypeHeader,java.lang.Object)> 
<android.webkit.WebView: java.lang.String getTitle()> 
<android.widget.ExpandableListView: long getChildOrGroupId(android.widget.ExpandableListPosition)> 
<gov.nist.javax.sip.parser.CSeqParser: gov.nist.javax.sip.header.SIPHeader parse()> 
<android.os.RegistrantList: java.lang.Object get(int)> 
<android.app.LoaderManagerImpl: android.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks)> 
<android.net.http.RequestQueue: org.apache.http.HttpHost getProxyHost()> 
<org.jivesoftware.smack.PacketReader: org.jivesoftware.smack.packet.HttpResponse parseHttpResponse(com.google.common.io.protocol.ProtoBuf)> 
<android.media.videoeditor.Overlay: long getDuration()> 
<org.apache.xml.serializer.SecuritySupport12: long getLastModified(java.io.File)> 
<org.apache.harmony.xml.dom.NodeImpl: org.w3c.dom.NodeList getChildNodes()> 
<javax.crypto.EncryptedPrivateKeyInfo: java.security.AlgorithmParameters getAlgParameters()> 
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: int getServiceType()> 
<gov.nist.javax.sip.message.SIPRequest: java.lang.String getDialogId(boolean,java.lang.String)> 
<java.util.MissingFormatWidthException: java.lang.String getFormatSpecifier()> 
<android.drm.DrmInfoRequest: java.lang.Object get(java.lang.String)> 
<java.net.CookieStoreImpl: java.util.List get(java.net.URI)> 
<android.widget.ExpandableListConnector: int getCount()> 
<android.mtp.MtpStorage: long getMaxFileSize()> 
<libcore.io.IoBridge: java.lang.Object getSocketOption(java.io.FileDescriptor,int)> 
<android.net.http.Headers: java.lang.String getProxyAuthenticate()> 
<android.view.accessibility.AccessibilityNodeInfo: boolean getBooleanProperty(int)> 
<org.ccil.cowan.tagsoup.Parser: java.io.Reader getReader(org.xml.sax.InputSource)> 
<android.graphics.Paint: int getTextGlyphs(java.lang.String,int,int,int,int,int,char[])> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: boolean getReuseAddress()> 
<org.apache.harmony.xml.dom.ElementImpl: org.w3c.dom.NamedNodeMap getAttributes()> 
<android.security.AndroidKeyPairGeneratorSpec: java.math.BigInteger getSerialNumber()> 
<org.apache.harmony.security.x509.PrivateKeyUsagePeriod: byte[] getEncoded()> 
<java.util.SimpleTimeZone: int getDSTSavings()> 
<org.apache.http.HttpHost: java.lang.String getSchemeName()> 
<android.view.inputmethod.BaseInputConnection: int getCursorCapsMode(int)> 
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.Node getFirstChild()> 
<android.view.animation.Animation: boolean getTransformation(long,android.view.animation.Transformation,float)> 
<org.apache.harmony.xml.dom.DocumentTypeImpl: java.lang.String getInternalSubset()> 
<android.media.audiofx.EnvironmentalReverb: android.media.audiofx.EnvironmentalReverb$Settings getProperties()> 
<android.text.method.TimeKeyListener: int getInputType()> 
<android.speech.tts.TtsEngines: java.lang.String getHighestRankedEngineName()> 
<org.apache.harmony.xml.ExpatReader: boolean getFeature(java.lang.String)> 
<android.media.RingtoneManager: int getRingtonePosition(android.net.Uri)> 
<libcore.net.http.RequestHeaders: java.lang.String getConnection()> 
<org.apache.harmony.security.asn1.ASN1Explicit: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)> 
<org.jivesoftware.smack.provider.RawXmlExtensionProvider: int getTag()> 
<org.apache.harmony.security.provider.cert.X509CertImpl: javax.security.auth.x500.X500Principal getSubjectX500Principal()> 
<android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)> 
<libcore.net.url.JarURLConnectionImpl: java.security.Permission getPermission()> 
<android.support.v4.widget.CursorAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)> 
<android.net.NetworkStatsHistory: long getEnd()> 
<org.jivesoftware.smackx.packet.VCard: java.lang.String getAddressFieldHome(java.lang.String)> 
<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()> 
<gov.nist.javax.sip.message.SIPRequest: java.lang.Object getTransaction()> 
<org.apache.xalan.res.XSLTErrorResources: org.apache.xalan.res.XSLTErrorResources loadResourceBundle(java.lang.String)> 
<android.graphics.Bitmap: int getScaledWidth(int)> 
<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme get(java.lang.String)> 
<org.apache.harmony.xnet.provider.jsse.DHParameters: byte[] getPrime()> 
<android.graphics.Matrix: void getValues(float[])> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLEngine: org.apache.harmony.xnet.provider.jsse.OpenSSLEngine getInstance(java.lang.String)> 
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.TypeInfo getSchemaTypeInfo()> 
<android.content.res.Resources: java.lang.CharSequence getText(int)> 
<org.jivesoftware.smack.GroupChat: java.lang.String getRoom()> 
<libcore.icu.ICU: java.util.Locale[] getAvailableDecimalFormatSymbolsLocales()> 
<android.net.ThrottleManager: long getCliffThreshold(java.lang.String,int)> 
<org.apache.harmony.security.x509.tsp.TimeStampResp: org.apache.harmony.security.x509.tsp.PKIStatusInfo getStatus()> 
<org.apache.http.impl.conn.tsccm.WaitingThread: java.lang.Thread getThread()> 
<android.content.Intent: short getShortExtra(java.lang.String,short)> 
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getDrawable(java.lang.String,int,android.content.pm.ApplicationInfo)> 
<java.security.spec.ECPublicKeySpec: java.security.spec.ECParameterSpec getParams()> 
<java.security.cert.X509CertSelector: java.security.cert.X509Certificate getCertificate()> 
<org.apache.harmony.xml.dom.NotationImpl: short getNodeType()> 
<android.preference.Preference: android.content.SharedPreferences getSharedPreferences()> 
<android.net.sip.SipAudioCall: android.net.rtp.AudioStream getAudioStream()> 
<android.view.DisplayInfo: void getAppMetrics(android.util.DisplayMetrics,android.view.CompatibilityInfoHolder)> 
<android.media.AudioManager: int getRingerMode()> 
<android.support.v4.app.NavUtilsJB: android.content.Intent getParentActivityIntent(android.app.Activity)> 
<org.apache.harmony.xnet.provider.jsse.CertificateVerify: int getType()> 
<android.app.ListFragment: android.widget.ListView getListView()> 
<android.graphics.Paint: float getTextRunAdvances(java.lang.CharSequence,int,int,int,int,int,float[],int,int)> 
<org.apache.http.impl.conn.DefaultClientConnection: org.apache.http.io.HttpMessageParser createResponseParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams)> 
<javax.xml.datatype.XMLGregorianCalendar: int getMillisecond()> 
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()> 
<org.apache.xpath.XPath: javax.xml.transform.SourceLocator getLocator()> 
<javax.crypto.spec.DHPublicKeySpec: java.math.BigInteger getG()> 
<gov.nist.core.Host: java.lang.String getAddress()> 
<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()> 
<javax.crypto.spec.DHPublicKeySpec: java.math.BigInteger getP()> 
<org.apache.xml.utils.URI: java.lang.String getPath(boolean,boolean)> 
<javax.crypto.spec.DHPublicKeySpec: java.math.BigInteger getY()> 
<java.io.ObjectInputStream: int readUnsignedShort()> 
<android.inputmethodservice.InputMethodService: boolean getCurrentInputStarted()> 
<android.webkit.WebViewFragment: android.webkit.WebView getWebView()> 
<org.apache.harmony.security.x509.TBSCertificate: int getVersion()> 
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute)> 
<gov.nist.javax.sip.ListeningPointImpl: gov.nist.javax.sip.stack.MessageProcessor getMessageProcessor()> 
<org.apache.xalan.templates.StylesheetRoot: java.util.Vector getExtensions()> 
<android.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)> 
<org.apache.http.impl.conn.ProxySelectorRoutePlanner: java.lang.String getHost(java.net.InetSocketAddress)> 
<android.preference.PreferenceCategory: boolean onPrepareAddPreference(android.preference.Preference)> 
<android.util.MonthDisplayHelper: int getOffset()> 
<org.apache.xml.dtm.SecuritySupport: java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader)> 
<android.support.v4.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle)> 
<libcore.net.http.RequestHeaders: int getMaxAgeSeconds()> 
<android.widget.HeaderViewListAdapter: int getCount()> 
<java.security.cert.CertStore: java.util.Collection getCertificates(java.security.cert.CertSelector)> 
<android.media.videoeditor.MediaProperties: int[] getAllSupportedAspectRatios()> 
<org.apache.xml.dtm.SecuritySupport: java.lang.ClassLoader getContextClassLoader()> 
<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getType(int)> 
<android.net.sip.SipProfile: int getPort()> 
<java.security.cert.CRL: java.lang.String getType()> 
<android.text.method.DateTimeKeyListener: android.text.method.DateTimeKeyListener getInstance()> 
<android.filterpacks.videosrc.CameraSource: android.hardware.Camera$Parameters getCameraParameters()> 
<org.apache.xpath.compiler.OpMap: int getArgLengthOfStep(int)> 
<org.apache.xpath.axes.WalkerFactory: org.apache.xpath.axes.AxesWalker loadWalkers(org.apache.xpath.axes.WalkingIterator,org.apache.xpath.compiler.Compiler,int,int)> 
<android.database.AbstractCursor: int getColumnIndex(java.lang.String)> 
<org.jivesoftware.smack.packet.DataMessage: int getAppDataSize()> 
<android.media.videoeditor.OverlayFrame: android.graphics.Bitmap getBitmap()> 
<android.view.Window: int getFeatures()> 
<org.apache.xalan.templates.ElemChoose: int getXSLToken()> 
<android.widget.Editor: int getAvailableDisplayListIndex(int[],int,int)> 
<android.media.Metadata: boolean parse(android.os.Parcel)> 
<android.view.animation.Animation: boolean getTransformation(long,android.view.animation.Transformation)> 
<android.widget.AbsListView: int getChoiceMode()> 
<org.apache.http.message.ParserCursor: int getPos()> 
<java.io.PushbackReader: boolean ready()> 
<org.apache.http.impl.conn.AbstractPooledConnAdapter: org.apache.http.impl.conn.AbstractPoolEntry getPoolEntry()> 
<android.database.MergeCursor: int getInt(int)> 
<android.test.mock.MockCursor: long getLong(int)> 
<android.view.InputDevice: android.view.InputDevice$MotionRange getMotionRange(int)> 
<android.graphics.drawable.Drawable: android.graphics.Insets getLayoutInsets()> 
<org.apache.xpath.patterns.StepPattern: int getAxis()> 
<android.view.ViewConfiguration: int getMinimumFlingVelocity()> 
<java.security.KeyFactory: java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)> 
<org.apache.xalan.templates.Stylesheet: int getNamespaceAliasCount()> 
<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstanceForThread(long)> 
<android.telephony.TelephonyManager: int getCallState()> 
<dalvik.system.profiler.BinaryHprofReader: java.lang.String getVersion()> 
<android.security.KeyStore: int getLastError()> 
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getIK()> 
<android.telephony.SignalStrength: int getEvdoDbm()> 
<org.apache.xml.dtm.ref.DTMNodeProxy: int getLength()> 
<org.apache.http.params.HttpConnectionParams: boolean getSoKeepalive(org.apache.http.params.HttpParams)> 
<gov.nist.javax.sip.header.From: java.lang.String getUserAtHostPort()> 
<android.app.Service: java.lang.String getClassName()> 
<android.location.Criteria: int getPowerRequirement()> 
<java.lang.ClassNotFoundException: java.lang.Throwable getCause()> 
<android.view.View: android.view.View$ScrollabilityCache getScrollCache()> 
<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getViaHost()> 
<gov.nist.javax.sip.parser.ims.PServedUserParser: gov.nist.javax.sip.header.SIPHeader parse()> 
<org.apache.james.mime4j.field.address.parser.SimpleCharStream: int getEndLine()> 
<javax.net.ssl.HandshakeCompletedEvent: java.lang.String getCipherSuite()> 
<java.nio.MappedByteBufferAdapter: int getInt(int)> 
<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)> 
<android.filterfw.GraphEnvironment: android.filterfw.core.GraphRunner getRunner(int,int)> 
<android.media.AudioTrack: int getPositionNotificationPeriod()> 
<javax.net.ssl.SSLSocket: javax.net.ssl.SSLParameters getSSLParameters()> 
<android.database.CursorWindow: long getLong(int,int)> 
<java.util.logging.Handler: java.util.logging.ErrorManager getErrorManager()> 
<android.support.v4.app.DialogFragment: android.app.Dialog getDialog()> 
<android.text.style.ForegroundColorSpan: int getSpanTypeId()> 
<android.view.ViewConfiguration: long getGlobalActionKeyTimeout()> 
<gov.nist.javax.sip.stack.TLSMessageProcessor: int getDefaultTargetPort()> 
<android.widget.TextView: int getLineHeight()> 
<java.util.concurrent.ScheduledThreadPoolExecutor: boolean getExecuteExistingDelayedTasksAfterShutdownPolicy()> 
<android.filterfw.core.ProgramVariable: java.lang.String getVariableName()> 
<org.apache.http.conn.BasicManagedEntity: java.io.InputStream getContent()> 
<android.content.SyncContext: android.os.IBinder getSyncContextBinder()> 
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getCK()> 
<android.widget.ExpandableListView: int getPackedPositionType(long)> 
<android.media.RemoteControlClient: int getIntPlaybackInformation(int)> 
<org.xmlpull.v1.sax2.Driver: int getColumnNumber()> 
<android.telephony.ServiceState: int getCdmaEriIconIndex()> 
<net.oauth.client.ExcerptInputStream: byte[] getExcerpt()> 
<android.support.v4.view.MotionEventCompatEclair: float getY(android.view.MotionEvent,int)> 
<android.support.v4.view.MotionEventCompatEclair: float getX(android.view.MotionEvent,int)> 
<java.lang.SecurityManager: java.lang.ClassLoader currentClassLoader()> 
<org.apache.xml.dtm.ref.DTMDefaultBaseIterators: org.apache.xml.dtm.DTMAxisIterator getAxisIterator(int)> 
<java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.lang.Object getAndSet(java.lang.Object,java.lang.Object)> 
<android.content.IntentSender: int getCreatorUid()> 
<android.telephony.CellIdentityGsm: int getPsc()> 
<org.apache.harmony.xnet.provider.jsse.HelloRequest: int getType()> 
<android.content.res.Resources: int getDimensionPixelOffset(int)> 
<android.renderscript.Matrix4f: void loadMultiply(android.renderscript.Matrix4f,android.renderscript.Matrix4f)> 
<android.renderscript.Matrix3f: void loadRotate(float)> 
<android.telephony.gsm.SmsMessage: java.lang.String getEmailBody()> 
<org.apache.harmony.xnet.provider.jsse.SSLSocketImpl: int getPeerPort()> 
<android.content.IntentSender: android.content.IIntentSender getTarget()> 
<android.widget.AbsListView: int getVerticalScrollbarWidth()> 
<android.media.AudioTrack: int getNotificationMarkerPosition()> 
<java.util.logging.LogRecord: java.util.ResourceBundle getResourceBundle()> 
<gov.nist.javax.sip.header.ims.SecurityAgree: java.lang.String getProtocol()> 
<android.content.ClipboardManager: android.content.ClipData getPrimaryClip()> 
<android.test.InstrumentationCoreTestRunner: java.util.List getBuilderRequirements()> 
<android.util.TimeUtils: java.util.TimeZone getTimeZone(int,boolean,long,java.lang.String)> 
<android.text.method.QwertyKeyListener: java.lang.String getReplacement(java.lang.CharSequence,int,int,android.view.View)> 
<android.telephony.SmsCbLocation: int getLac()> 
<android.net.NetworkStats: android.net.NetworkStats$Entry getTotal(android.net.NetworkStats$Entry,java.util.HashSet)> 
<android.net.MailTo: java.lang.String getCc()> 
<org.apache.harmony.security.x509.ExtendedKeyUsage: byte[] getEncoded()> 
<android.text.style.AbsoluteSizeSpan: boolean getDip()> 
<android.widget.FrameLayout: int getPaddingTopWithForeground()> 
<android.media.videoeditor.MediaImageItem: int getHeight()> 
<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)> 
<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.RecordRouteList getRecordRouteHeaders()> 
<android.content.Intent: java.lang.String getType()> 
<android.media.MediaRouter: android.media.MediaRouter$RouteInfo getRouteAtStatic(int)> 
<android.text.format.DateFormat: java.lang.String getTimeZoneString(java.util.Calendar,int)> 
<gov.nist.javax.sip.header.AuthenticationInfo: java.lang.String getResponse()> 
<java.util.jar.InitManifest: int getPos()> 
<org.apache.http.impl.io.ChunkedInputStream: int read(byte[])> 
<org.apache.harmony.xnet.provider.jsse.SSLInputStream: int read(byte[],int,int)> 
<android.support.v4.view.accessibility.AccessibilityRecordCompat: int getWindowId()> 
<android.widget.Space: int getDefaultSize2(int,int)> 
<android.filterfw.core.GLFrame: java.nio.ByteBuffer getData()> 
<android.database.CursorWrapper: long getLong(int)> 
<android.view.animation.LayoutAnimationController: long getDelayForView(android.view.View)> 
<android.graphics.Paint: float getTextRunAdvances(char[],int,int,int,int,int,float[],int)> 
<android.opengl.GLLogWrapper: java.lang.String getTextureEnvTarget(int)> 
<java.net.InetAddress: java.net.InetAddress getByAddress(java.lang.String,byte[])> 
<org.apache.xml.dtm.ref.ExpandedNameTable: int getLocalNameID(int)> 
<org.apache.xalan.transformer.TransformerImpl: java.util.Vector getElementCallstack()> 
<gov.nist.javax.sip.header.AcceptLanguageList: gov.nist.javax.sip.header.AcceptLanguage getLast()> 
<android.telephony.SmsCbLocation: java.lang.String getPlmn()> 
<org.apache.xml.serializer.utils.SerializerMessages_zh: java.lang.Object[][] getContents()> 
<libcore.icu.NativeDecimalFormat: java.lang.String getPositiveSuffix()> 
<org.apache.james.mime4j.field.datetime.parser.SimpleCharStream: int getEndColumn()> 
<android.view.VolumePanel: android.media.ToneGenerator getOrCreateToneGenerator(int)> 
<android.view.GLES20Canvas: int getRenderer()> 
<android.app.Activity: android.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean)> 
<org.apache.http.client.methods.HttpRequestBase: org.apache.http.ProtocolVersion getProtocolVersion()> 
<android.nfc.tech.NdefFormatable: android.nfc.tech.NdefFormatable get(android.nfc.Tag)> 
<org.kxml2.io.KXmlParser: void readAttributeListDeclaration()> 
<android.os.UserManager: long getSerialNumberForUser(android.os.UserHandle)> 
<javax.crypto.spec.RC5ParameterSpec: int getWordSize()> 
<java.util.prefs.FilePreferencesImpl: java.lang.String getSpi(java.lang.String)> 
<android.graphics.YuvImage: int getWidth()> 
<android.telephony.CellIdentityCdma: int getLatitude()> 
<org.apache.xalan.templates.Stylesheet: boolean getCompatibleMode()> 
<org.apache.commons.io.input.CountingInputStream: long getByteCount()> 
<org.apache.xml.dtm.ref.DTMManagerDefault: org.apache.xml.dtm.DTM getDTM(int)> 
<android.content.pm.PackageItemInfo: android.content.res.XmlResourceParser loadXmlMetaData(android.content.pm.PackageManager,java.lang.String)> 
<android.content.res.TypedArray: int getColor(int,int)> 
<org.apache.xalan.templates.ElemLiteralResult: java.lang.String getNodeName()> 
<javax.crypto.Cipher: java.security.spec.AlgorithmParameterSpec getMaxAllowedParameterSpec(java.lang.String)> 
<java.net.Authenticator: java.lang.String getRequestingPrompt()> 
<android.widget.AbsSpinner: int getCount()> 
<android.drm.DrmRights: byte[] getData()> 
<android.os.ServiceManager: android.os.IBinder getService(java.lang.String)> 
<android.app.ApplicationErrorReport: android.content.ComponentName getErrorReportReceiver(android.content.Context,java.lang.String,int)> 
<gov.nist.javax.sip.header.TimeStamp: long getTime()> 
<android.nfc.tech.Ndef: java.lang.String getType()> 
<android.text.style.SuggestionSpan: java.lang.String getLocale()> 
<android.net.sip.SipAudioCall: android.net.sip.SipSession getSipSession()> 
<org.apache.http.impl.conn.AbstractClientConnAdapter: java.net.InetAddress getRemoteAddress()> 
<java.net.Socks4Message: byte[] getBytes()> 
<org.apache.http.auth.AuthSchemeRegistry: java.util.List getSchemeNames()> 
<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])> 
<android.renderscript.ScriptIntrinsicConvolve5x5: android.renderscript.Script$KernelID getKernelID()> 
<android.content.ContentProviderOperation: android.net.Uri getUri()> 
<android.media.videoeditor.EffectKenBurns: android.graphics.Rect getEndRect()> 
<android.webkit.JWebCoreJavaBridge: java.lang.String getSignedPublicKey(int,java.lang.String,java.lang.String)> 
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: int getWindowId(java.lang.Object)> 
<org.apache.xpath.XPathContext: org.apache.xml.utils.PrefixResolver getNamespaceContext()> 
<javax.xml.transform.sax.SAXSource: org.xml.sax.InputSource getInputSource()> 
<libcore.io.ForwardingOs: int geteuid()> 
<gov.nist.javax.sip.header.From: java.lang.String getDisplayName()> 
<android.nfc.tech.MifareClassic: int getBlockCountInSector(int)> 
<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: org.apache.http.impl.conn.AbstractPoolEntry getPoolEntry()> 
<android.database.CursorWrapper: java.lang.String[] getColumnNames()> 
<jp.co.omronsoft.openwnn.OpenWnnEN: jp.co.omronsoft.openwnn.OpenWnnEN getInstance()> 
<org.apache.xpath.objects.XString: java.lang.String getTypeString()> 
<libcore.net.http.HttpsURLConnectionImpl: java.lang.String getRequestProperty(java.lang.String)> 
<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPRequest createCancelRequest()> 
<android.app.Fragment: android.app.Fragment getTargetFragment()> 
<android.content.Intent: java.lang.String getDataString()> 
<android.hardware.usb.UsbDevice: int getProductId()> 
<android.support.v4.net.TrafficStatsCompat: int getThreadStatsTag()> 
<android.view.InputDevice: java.util.List getMotionRanges()> 
<android.view.ViewConfiguration: int getJumpTapTimeout()> 
<android.widget.SearchView: java.lang.CharSequence getQueryHint()> 
<org.apache.harmony.xml.dom.NotationImpl: java.lang.String getSystemId()> 
<java.nio.MappedByteBuffer: boolean isLoaded()> 
<android.nfc.tech.Ndef: android.nfc.tech.Ndef get(android.nfc.Tag)> 
<java.util.logging.LogManager: java.lang.String getProperty(java.lang.String)> 
<java.util.Locale: java.lang.String getISO3Language()> 
<org.apache.commons.io.FileUtils: java.lang.String getTempDirectoryPath()> 
<android.net.sip.SipSession: android.net.sip.SipProfile getLocalProfile()> 
<android.view.accessibility.AccessibilityManager: android.view.accessibility.IAccessibilityManagerClient getClient()> 
<android.app.ActivityManagerProxy: long[] getProcessPss(int[])> 
<android.test.mock.MockResources: java.lang.String getString(int)> 
<android.app.ContextImpl: java.lang.Object getSystemService(java.lang.String)> 
<android.net.TrafficStats: long getTotalRxPackets()> 
<android.widget.GridView: int getStretchMode()> 
<android.content.SyncStorageEngine: int getPendingOperationCount()> 
<android.speech.tts.TtsEngines: java.util.List getEngines()> 
<org.apache.commons.codec.net.BCodec: java.lang.String decode(java.lang.String)> 
<android.view.ContextThemeWrapper: int getThemeResId()> 
<android.webkit.ZoomManager: float getDefaultMaxZoomScale()> 
<gov.nist.javax.sip.stack.SIPClientTransaction: int getViaPort()> 
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationLogo(java.lang.String)> 
<org.apache.xml.utils.UnImplNode: java.lang.String getInputEncoding()> 
<android.content.Intent: java.lang.Object getExtra(java.lang.String)> 
<android.text.style.TypefaceSpan: java.lang.String getFamily()> 
<org.apache.xml.utils.DOMHelper: java.lang.String getLocalNameOfNode(org.w3c.dom.Node)> 
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getAmpLegal()> 
<android.test.mock.MockCursor: boolean getWantsAllOnMoveCalls()> 
<java.security.cert.LDAPCertStoreParameters: java.lang.String getServerName()> 
<android.net.DummyDataStateTracker: java.lang.String getTcpBufferSizesPropName()> 
<android.support.v4.view.accessibility.AccessibilityManagerCompat: java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager)> 
<android.webkit.WebView: android.webkit.WebViewFactoryProvider getFactory()> 
<android.text.style.BulletSpan: int getLeadingMargin(boolean)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: long getCreationTime()> 
<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getSelectedText(int)> 
<android.view.Display: int getOrientation()> 
<org.apache.harmony.security.pkcs7.ContentInfo: byte[] getEncoded()> 
<org.json.JSONArray: double getDouble(int)> 
<org.apache.http.message.BasicLineParser: org.apache.http.RequestLine createRequestLine(java.lang.String,java.lang.String,org.apache.http.ProtocolVersion)> 
<android.view.View: int getScrollBarFadeDuration()> 
<android.media.AudioService: int getVibrateSetting(int)> 
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.ElemAttributeSet getAttributeSet(int)> 
<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.Collection getExclusiveQueuedThreads()> 
<java.nio.CharArrayBuffer: char get(int)> 
<dalvik.system.VMRuntime: long getExternalBytesAllocated()> 
<org.jivesoftware.smack.RosterEntry: org.jivesoftware.smack.packet.RosterPacket$ItemType getType()> 
<java.lang.Integer: java.lang.Integer getInteger(java.lang.String)> 
<android.net.WebAddress: java.lang.String getPath()> 
<android.support.v4.view.accessibility.AccessibilityRecordCompat: int getCurrentItemIndex()> 
<java.text.NumberFormat: java.text.NumberFormat getIntegerInstance(java.util.Locale)> 
<android.app.Activity: int getTaskId()> 
<javax.crypto.spec.IvParameterSpec: byte[] getIV()> 
<java.sql.DriverManager: java.io.PrintStream getLogStream()> 
<android.os.PowerManager: int getMaximumScreenBrightnessSetting()> 
<org.apache.harmony.xnet.provider.jsse.CipherSuite: org.apache.harmony.xnet.provider.jsse.CipherSuite getCipherSuiteByCode(int,int,int)> 
<java.util.TimeZone: java.lang.String getDisplayName(boolean,int,java.util.Locale)> 
<android.view.inputmethod.InputConnectionWrapper: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)> 
<android.widget.LinearLayout: int getBaseline()> 
<android.app.SearchableInfo: boolean getVoiceSearchEnabled()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: java.lang.String getAlgorithm()> 
<org.jivesoftware.smack.provider.ProviderManager: java.lang.Object getIQProvider(java.lang.String,java.lang.String)> 
<java.util.MissingResourceException: java.lang.String getClassName()> 
<gov.nist.javax.sip.stack.UDPMessageChannel: int getPeerPacketSourcePort()> 
<android.graphics.drawable.NinePatchDrawable: boolean getPadding(android.graphics.Rect)> 
<org.apache.xpath.axes.LocPathIterator: int getCurrentContextNode()> 
<android.webkit.WebSettings: java.lang.String getFantasyFontFamily()> 
<android.webkit.WebHistoryItemClassic: java.lang.Object getCustomData()> 
<gov.nist.javax.sip.address.TelURLImpl: java.lang.String getScheme()> 
<android.opengl.GLLogWrapper: java.lang.String getTexturePName(int)> 
<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)> 
<android.app.ActivityManagerProxy: android.graphics.Bitmap getTaskTopThumbnail(int)> 
<android.content.pm.VerificationParams: android.content.pm.ManifestDigest getManifestDigest()> 
<java.io.DataInputStream: short readShort()> 
<android.view.ViewConfiguration: int getMaximumFlingVelocity()> 
<gov.nist.javax.sip.DialogTimeoutEvent: javax.sip.Dialog getDialog()> 
<org.apache.xpath.patterns.NodeTest: double getDefaultScore()> 
<android.hardware.usb.UsbDevice: int getDeviceSubclass()> 
<android.media.Ringtone: java.lang.String getTitle(android.content.Context,android.net.Uri,boolean)> 
<android.media.videoeditor.MediaImageItem: int getWidth()> 
<java.io.StringWriter: java.lang.StringBuffer getBuffer()> 
<org.apache.http.util.EntityUtils: java.lang.String getContentCharSet(org.apache.http.HttpEntity)> 
<java.nio.IntToByteBufferAdapter: int get()> 
<gov.nist.javax.sip.stack.TCPMessageChannel: int getPeerPort()> 
<java.util.Date: int getMinutes()> 
<org.apache.xpath.axes.AxesWalker: org.apache.xml.dtm.DTM getDTM(int)> 
<android.app.ActivityManagerProxy: java.util.List getServices(int,int)> 
<android.os.PatternMatcher: int getType()> 
<android.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()> 
<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()> 
<java.nio.DirectByteBuffer: float getFloat(int)> 
<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.util.Iterator getContents()> 
<org.jivesoftware.smack.packet.DataMessage: java.lang.String getPermission()> 
<android.widget.LinearLayout: int getShowDividers()> 
<android.preference.PreferenceActivity: android.preference.PreferenceScreen getPreferenceScreen()> 
<android.location.Criteria: int getAccuracy()> 
<android.widget.HorizontalScrollView: float getLeftFadingEdgeStrength()> 
<android.test.mock.MockCursor: int getType(int)> 
<android.webkit.WebSettings: int getTextZoom()> 
<java.lang.StringBuffer: void getChars(int,int,char[],int)> 
<android.media.videoeditor.AudioTrack: int getVolume()> 
<org.apache.xpath.axes.WalkingIterator: org.apache.xpath.axes.AxesWalker getLastUsedWalker()> 
<net.oauth.OAuthProblemException: int getHttpStatusCode()> 
<android.telephony.cdma.CdmaSmsCbProgramResults: int getCategoryResult()> 
<android.app.ExpandableListActivity: long getSelectedId()> 
<java.text.DecimalFormatSymbols: char getDigit()> 
<android.filterfw.core.SyncRunner: java.lang.Exception getError()> 
<android.database.MergeCursor: int getCount()> 
<android.test.mock.MockResources: android.util.DisplayMetrics getDisplayMetrics()> 
<android.graphics.Path: android.graphics.Path$FillType getFillType()> 
<android.text.Layout: int getHeight()> 
<android.widget.BaseExpandableListAdapter: long getCombinedChildId(long,long)> 
<android.hardware.input.KeyboardLayout: java.lang.String getLabel()> 
<android.test.TestCaseUtil: java.lang.String getTestName(junit.framework.Test)> 
<java.security.Signature: java.security.Provider getProvider()> 
<android.view.GLES20RecordingCanvas: android.view.GLES20RecordingCanvas getNextPoolable()> 
<org.apache.xpath.axes.WalkingIterator: int getAnalysisBits()> 
<gov.nist.core.NameValue: java.lang.Object getValueAsObject()> 
<org.xml.sax.InputSource: java.io.Reader getCharacterStream()> 
<gov.nist.javax.sip.stack.MessageProcessor: int getPort()> 
<android.telephony.CellIdentityLte: int getMnc()> 
<android.app.WallpaperManager: int getDesiredMinimumWidth()> 
<java.lang.Character: int getNumericValue(int)> 
<org.apache.harmony.security.x509.SubjectPublicKeyInfo: org.apache.harmony.security.x509.AlgorithmIdentifier getAlgorithmIdentifier()> 
<java.nio.DoubleToByteBufferAdapter: double get(int)> 
<android.os.Process: int getThreadGroupLeader(int)> 
<org.xml.sax.helpers.ParserAdapter: org.xml.sax.ContentHandler getContentHandler()> 
<org.apache.harmony.xml.dom.ElementImpl: java.lang.String getTagName()> 
<org.apache.xml.dtm.ref.DTMDefaultBase: java.lang.String getDocumentVersion(int)> 
<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.Collection getWaitingThreads(java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAParams: org.apache.harmony.xnet.provider.jsse.OpenSSLKey getOpenSSLKey()> 
<android.support.v4.widget.CursorAdapter: java.lang.Object getItem(int)> 
<android.widget.NumberPicker: int getSolidColor()> 
<org.apache.http.entity.AbstractHttpEntity: org.apache.http.Header getContentType()> 
<android.media.videoeditor.VideoEditorProfile: int getExportLevel(int)> 
<gov.nist.javax.sip.message.SIPMessage: java.lang.String getCharset()> 
<dalvik.system.profiler.BinaryHprofWriter: int writeLoadClass(java.lang.String)> 
<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.ElemVariable getVariableOrParamComposed(org.apache.xml.utils.QName)> 
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script$KernelID getKernelIDSrcOver()> 
<android.view.GLES20Canvas: int getHeight()> 
<android.emoji.EmojiFactory: android.graphics.Bitmap getBitmapFromVendorSpecificSjis(char)> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: java.lang.String getUnparsedEntityURI(java.lang.String)> 
<android.widget.TextView: float getLineSpacingMultiplier()> 
<gov.nist.javax.sip.header.AuthenticationHeader: java.lang.String getDomain()> 
<org.apache.harmony.security.x509.GeneralName: byte[] getEncoded()> 
<javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.security.Provider)> 
<android.gesture.GestureOverlayView: float getGestureStrokeSquarenessTreshold()> 
<android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)> 
<android.widget.TextView: android.text.Layout getLayout()> 
<org.ccil.cowan.tagsoup.Parser: int getEntity()> 
<android.telephony.cdma.CdmaSmsCbProgramData: int getAlertOption()> 
<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()> 
<java.util.Vector: java.lang.Object get(int)> 
<android.media.SoundPool: int load(java.lang.String,int)> 
<android.widget.ActivityChooserModel: android.content.pm.ResolveInfo getActivity(int)> 
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: org.apache.harmony.xnet.provider.jsse.ServerSessionContext getServerSessionContext()> 
<org.xmlpull.v1.sax2.Driver: java.lang.String getType(int)> 
<org.jivesoftware.smack.provider.ProviderManager: java.util.Iterator getIQProviders()> 
<android.filterpacks.imageproc.DuotoneFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<java.text.BreakIterator: java.text.BreakIterator getLineInstance(java.util.Locale)> 
<java.net.Socket: java.nio.channels.SocketChannel getChannel()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: java.lang.String getUnparsedEntityURI(java.lang.String)> 
<android.telephony.CellIdentityLte: int getMcc()> 
<javax.xml.xpath.XPathFactoryFinder: javax.xml.xpath.XPathFactory loadFromServicesFile(java.lang.String,java.lang.String,java.io.InputStream)> 
<org.apache.xpath.axes.ChildIterator: int getAxis()> 
<org.apache.harmony.xnet.provider.jsse.HandshakeProtocol: javax.net.ssl.SSLEngineResult$HandshakeStatus getStatus()> 
<android.net.NetworkInfo: java.lang.String getSubtypeName()> 
<org.apache.xalan.templates.ElemVariable: int getXSLToken()> 
<android.view.textservice.SentenceSuggestionsInfo: android.view.textservice.SuggestionsInfo getSuggestionsInfoAt(int)> 
<android.filterfw.core.ProgramVariable: java.lang.Object getValue()> 
<android.opengl.GLLogWrapper: java.lang.String getClearBufferMask(int)> 
<android.text.style.URLSpan: int getSpanTypeId()> 
<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()> 
<android.widget.TextView: java.lang.CharSequence getTransformedText(int,int)> 
<gov.nist.javax.sip.address.SipUri: java.lang.String getUserType()> 
<org.apache.harmony.security.asn1.DerOutputStream: void getChoiceLength(org.apache.harmony.security.asn1.ASN1Choice)> 
<android.test.mock.MockPackageManager: android.content.res.Resources getResourcesForActivity(android.content.ComponentName)> 
<org.apache.xml.serializer.utils.SerializerMessages_pl: java.lang.Object[][] getContents()> 
<gov.nist.javax.sip.header.SIPETag: java.lang.String getETag()> 
<android.app.Activity: java.lang.CharSequence getTitle()> 
<java.security.spec.RSAPrivateCrtKeySpec: java.math.BigInteger getCrtCoefficient()> 
<org.apache.xpath.Expression: java.lang.String getSystemId()> 
<android.test.mock.MockResources: android.content.res.ColorStateList getColorStateList(int)> 
<org.apache.harmony.security.x509.Extensions: java.util.Set getCriticalExtensions()> 
<android.view.textservice.SpellCheckerSession: void getSentenceSuggestions(android.view.textservice.TextInfo[],int)> 
<org.apache.harmony.xnet.provider.jsse.KeyManagerImpl: java.security.cert.X509Certificate[] getCertificateChain(java.lang.String)> 
<android.app.SearchableInfo: int getSuggestThreshold()> 
<java.io.FilterReader: boolean ready()> 
<org.apache.harmony.security.x509.NameConstraints: byte[] getExtensionValue(java.security.cert.X509Certificate,java.lang.String)> 
<android.os.Bundle: boolean getBoolean(java.lang.String)> 
<org.apache.xpath.axes.IteratorPool: org.apache.xml.dtm.DTMIterator getInstance()> 
<libcore.icu.LocaleData: libcore.icu.LocaleData get(java.util.Locale)> 
<org.apache.xml.serializer.utils.SerializerMessages_sk: java.lang.Object[][] getContents()> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: int getAttributeNode(int,java.lang.String,java.lang.String)> 
<org.apache.xml.serializer.utils.SerializerMessages_sl: java.lang.Object[][] getContents()> 
<org.apache.harmony.xnet.provider.jsse.CipherSuite: java.lang.String getServerKeyType()> 
<org.apache.xpath.SourceTreeManager: int getSourceTree(java.lang.String,java.lang.String,javax.xml.transform.SourceLocator,org.apache.xpath.XPathContext)> 
<org.apache.xml.dtm.ref.DTMDefaultBase: int getFirstAttribute(int)> 
<java.util.concurrent.atomic.AtomicIntegerArray: int getAndAdd(int,int)> 
<android.inputmethodservice.KeyboardView: android.inputmethodservice.KeyboardView$OnKeyboardActionListener getOnKeyboardActionListener()> 
<android.widget.CursorTreeAdapter: android.widget.Filter getFilter()> 
<android.app.Fragment: android.app.LoaderManager getLoaderManager()> 
<java.net.HttpCookie: boolean getDiscard()> 
<java.io.InputStream: int read(byte[])> 
<android.webkit.WebViewCore: float getFixedDisplayDensity(android.content.Context)> 
<org.apache.xalan.templates.ElemTemplateElement: int getEndLineNumber()> 
<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo getApplicationInfo()> 
<android.renderscript.Sampler: android.renderscript.Sampler$Value getMinification()> 
<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.ClassLoader getClassLoader(java.lang.Class)> 
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.lang.String getPeerHost()> 
<org.apache.xml.serializer.utils.SerializerMessages_ru: java.lang.Object[][] getContents()> 
<android.webkit.WebSettingsClassic: int getDefaultFontSize()> 
<java.util.zip.Adler32: long getValue()> 
<android.widget.AdapterView: android.view.View getEmptyView()> 
<android.net.NetworkQuotaInfo: long getHardLimitBytes()> 
<android.util.XmlPullAttributes: boolean getAttributeBooleanValue(int,boolean)> 
<java.net.URI: java.lang.String getHost()> 
<java.net.URL: java.lang.String getHost()> 
<org.apache.xml.serializer.utils.SerializerMessages_tr: java.lang.Object[][] getContents()> 
<org.apache.xml.utils.StylesheetPIHandler: javax.xml.transform.URIResolver getURIResolver()> 
<android.telephony.cdma.CdmaSmsCbProgramResults: int getLanguage()> 
<android.media.videoeditor.MediaVideoItem: int getAudioBitrate()> 
<android.webkit.WebIconDatabaseClassic: android.webkit.WebIconDatabaseClassic getInstance()> 
<android.os.Message: long getWhen()> 
<android.mtp.MtpObjectInfo: java.lang.String getKeywords()> 
<android.view.ViewRootImpl: android.view.AccessibilityInteractionController getAccessibilityInteractionController()> 
<android.net.NetworkTemplate: java.lang.String getNetworkId()> 
<libcore.net.http.RequestHeaders: java.lang.String getTransferEncoding()> 
<android.telephony.CellBroadcastMessage: long getDeliveryTime()> 
<org.json.JSONObject: java.lang.Object get(java.lang.String)> 
<org.apache.xml.serializer.utils.StringToIntTable: int getLength()> 
<java.net.HttpURLConnection: boolean getInstanceFollowRedirects()> 
<org.jivesoftware.smack.PacketReader: org.jivesoftware.smack.packet.Bind parseResourceBinding(org.xmlpull.v1.XmlPullParser)> 
<android.net.Uri: android.net.Uri getCanonicalUri()> 
<android.util.JsonReader: int getLineNumber()> 
<org.apache.xml.serializer.utils.SerializerMessages_sv: java.lang.Object[][] getContents()> 
<java.lang.reflect.Constructor: java.lang.Class[] getExceptionTypes()> 
<android.preference.Preference: java.lang.String getDependency()> 
<java.nio.HeapByteBuffer: float getFloat(int)> 
<org.xml.sax.helpers.NamespaceSupport: java.util.Enumeration getDeclaredPrefixes()> 
<gov.nist.javax.sip.address.SipUri: gov.nist.core.NameValueList getQheaders()> 
<android.support.v4.app.ListFragment: long getSelectedItemId()> 
<gov.nist.javax.sip.address.SipUri: java.lang.String getGrParam()> 
<android.filterfw.core.SerializedFrame: java.lang.Object getObjectValue()> 
<android.widget.TabWidget: int getChildDrawingOrder(int,int)> 
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getAttributeNS(java.lang.String,java.lang.String)> 
<android.media.SoundPool: int load(java.io.FileDescriptor,long,long,int)> 
<java.lang.reflect.Field: java.lang.String getName()> 
<org.apache.xalan.transformer.TransformerIdentityImpl: javax.xml.transform.URIResolver getURIResolver()> 
<net.oauth.signature.PLAINTEXT: java.lang.String getSignature(java.lang.String)> 
<android.net.sip.SipProfile: java.lang.String getUriString()> 
<org.jivesoftware.smack.ProtoBufAuthentication: long getServerClockSkew()> 
<java.util.concurrent.locks.AbstractQueuedSynchronizer: int getWaitQueueLength(java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)> 
<android.test.mock.MockContentProvider: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)> 
<org.apache.xpath.functions.SecuritySupport: long getLastModified(java.io.File)> 
<org.jivesoftware.smack.packet.DataMessage: org.jivesoftware.smack.packet.DataMessage$AppData getAppData(int)> 
<org.apache.xalan.templates.ElemNumber: java.lang.String getCountString(org.apache.xalan.transformer.TransformerImpl,int)> 
<android.net.http.HttpAuthHeader: java.lang.String getQop()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getNextSibling(int)> 
<android.test.AndroidTestRunner: java.lang.String getTestClassName()> 
<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT getName()> 
<java.nio.LongBuffer: java.nio.LongBuffer get(long[],int,int)> 
<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()> 
<android.os.Handler: java.lang.String getMessageName(android.os.Message)> 
<org.kxml2.io.KXmlParser: boolean getFeature(java.lang.String)> 
<android.security.AndroidKeyStore: java.util.Date getModificationDate(java.lang.String)> 
<android.text.BoringLayout: int getEllipsisStart(int)> 
<java.lang.reflect.Constructor: java.lang.annotation.Annotation[][] getParameterAnnotations()> 
<libcore.net.http.HttpsURLConnectionImpl: java.lang.Object getContent(java.lang.Class[])> 
<org.apache.http.message.HeaderGroup: org.apache.http.Header getLastHeader(java.lang.String)> 
<android.app.ActivityManagerProxy: android.os.Debug$MemoryInfo[] getProcessMemoryInfo(int[])> 
<android.media.AudioTrack: int getPlaybackRate()> 
<android.view.PointerIcon: android.view.PointerIcon getDefaultIcon(android.content.Context)> 
<android.webkit.PluginData: int getStatusCode()> 
<android.widget.PopupWindow: int getAnimationStyle()> 
<java.security.cert.CertPath: java.lang.String getType()> 
<android.view.accessibility.AccessibilityEvent: int getRecordCount()> 
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.Intent)> 
<android.text.format.DateFormat: java.lang.String getYearString(java.util.Calendar,int)> 
<javax.xml.transform.TransformerFactoryConfigurationError: java.lang.String getMessage()> 
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent()> 
<android.os.CommonClock: java.net.InetSocketAddress getMasterAddr()> 
<org.xml.sax.helpers.AttributesImpl: int getIndex(java.lang.String)> 
<org.apache.xalan.xslt.SecuritySupport12: boolean getFileExists(java.io.File)> 
<android.media.audiofx.EnvironmentalReverb: short getRoomLevel()> 
<android.app.ActivityGroup: android.app.Activity getCurrentActivity()> 
<org.apache.harmony.security.x509.Certificate: byte[] getSignatureValue()> 
<org.apache.xpath.axes.UnionPathIterator: void loadLocationPaths(org.apache.xpath.compiler.Compiler,int,int)> 
<android.webkit.WebViewDatabase: android.webkit.WebViewDatabase getInstance(android.content.Context)> 
<android.webkit.WebSettings: boolean getLoadsImagesAutomatically()> 
<org.apache.james.mime4j.message.MemoryBinaryBody: org.apache.james.mime4j.message.Entity getParent()> 
<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()> 
<android.widget.DatePicker: int getYear()> 
<android.security.AndroidKeyPairGeneratorSpec: java.lang.String getKeystoreAlias()> 
<android.media.RingtoneManager: android.database.Cursor getCursor()> 
<java.util.zip.ZipEntry: long getTime()> 
<java.nio.DatagramChannelImpl: java.io.FileDescriptor getFD()> 
<org.jivesoftware.smack.provider.RawXmlIQProvider: com.google.common.io.protocol.ProtoBufType getProtoBufType()> 
<javax.obex.ClientOperation: java.lang.String getEncoding()> 
<gov.nist.javax.sip.stack.MessageChannel: java.lang.String getKey(java.net.InetAddress,int,java.lang.String)> 
<libcore.io.BlockGuardOs: int pread(java.io.FileDescriptor,byte[],int,int,long)> 
<gov.nist.javax.sip.header.ReplyTo: gov.nist.core.HostPort getHostPort()> 
<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: java.lang.String getDSLLocation()> 
<android.widget.AbsListView: int getHeaderViewsCount()> 
<android.animation.ValueAnimator: long getCurrentPlayTime()> 
<android.view.View: int getAccessibilityWindowId()> 
<android.view.accessibility.AccessibilityManager: java.util.List getEnabledAccessibilityServiceList(int)> 
<android.graphics.Bitmap: int getDefaultDensity()> 
<android.webkit.WebView: android.webkit.WebViewProvider getWebViewProvider()> 
<android.gesture.GestureStore: java.util.ArrayList getGestures(java.lang.String)> 
<org.jivesoftware.smack.ConnectionConfiguration: java.lang.String getHost()> 
<org.apache.xml.serializer.Encodings: org.apache.xml.serializer.EncodingInfo getEncodingInfo(java.lang.String)> 
<android.telephony.CellBroadcastMessage: android.content.ContentValues getContentValues()> 
<java.lang.SecurityManager: void checkCreateClassLoader()> 
<java.security.AlgorithmParameterGenerator: java.security.AlgorithmParameterGenerator getInstance(java.lang.String,java.security.Provider)> 
<android.accounts.AccountManagerService: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes()> 
<android.gesture.Gesture: int getStrokesCount()> 
<android.net.wifi.WifiSsid: byte[] getOctets()> 
<java.security.PrivilegedActionException: java.lang.Exception getException()> 
<gov.nist.core.NameValue: java.lang.Object getKey()> 
<gov.nist.javax.sip.message.SIPMessage: java.util.ListIterator getHeaderNames()> 
<android.content.BroadcastReceiver: java.lang.String getResultData()> 
<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.String[] getAttributeNames()> 
<android.content.pm.ResolveInfo: int getIconResource()> 
<android.support.v4.app.Fragment: java.lang.String getTag()> 
<org.apache.james.mime4j.message.Multipart: java.lang.String getBoundary()> 
<org.apache.commons.logging.LogConfigurationException: java.lang.Throwable getCause()> 
<org.apache.xml.dtm.SecuritySupport: java.io.FileInputStream getFileInputStream(java.io.File)> 
<android.location.GeocoderParams: java.lang.String getClientPackage()> 
<android.webkit.WebViewClassic: int getSelectionCoordinate(int,int,int)> 
<android.widget.ImageView: int getMaxHeight()> 
<org.apache.http.impl.cookie.BrowserCompatSpec: int getVersion()> 
<android.mtp.MtpStorageInfo: long getMaxCapacity()> 
<java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: int getPreviousSibling(int)> 
<android.view.View: android.view.DisplayList getHardwareLayerDisplayList(android.view.HardwareLayer)> 
<org.apache.xpath.objects.XStringForFSB: void getChars(int,int,char[],int)> 
<java.util.IllegalFormatPrecisionException: java.lang.String getMessage()> 
<android.content.CursorLoader: java.lang.String[] getSelectionArgs()> 
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: int getScrollY(java.lang.Object)> 
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: int getScrollX(java.lang.Object)> 
<android.media.videoeditor.MediaItem: java.lang.String getFilename()> 
<org.apache.commons.io.input.NullReader: long getPosition()> 
<android.net.SntpClient: long getRoundTripTime()> 
<org.apache.http.util.EntityUtils: java.lang.String getContentMimeType(org.apache.http.HttpEntity)> 
<android.graphics.Paint: int getTextWidths(java.lang.String,int,int,float[])> 
<org.apache.xml.dtm.ref.DTMNodeProxy: short getNodeType()> 
<android.support.v4.view.accessibility.AccessibilityRecordCompat: java.lang.CharSequence getContentDescription()> 
<android.inputmethodservice.KeyboardView: int getKeyIndices(int,int,int[])> 
<android.widget.TextView: android.content.res.ColorStateList getTextColors(android.content.Context,android.content.res.TypedArray)> 
<org.apache.xpath.XPathContext: int getIteratorRoot()> 
<junit.runner.BaseTestRunner: java.lang.String getFilteredTrace(java.lang.String)> 
<android.test.mock.MockPackageManager: android.graphics.drawable.Drawable getDefaultActivityIcon()> 
<org.apache.xalan.templates.ElemTextLiteral: char[] getChars()> 
<libcore.io.ForwardingOs: java.net.SocketAddress getsockname(java.io.FileDescriptor)> 
<gov.nist.javax.sip.header.Unsupported: java.lang.String getOptionTag()> 
<org.apache.harmony.security.asn1.ASN1Sequence: java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream)> 
<java.text.DateFormat: java.util.Calendar getCalendar()> 
<android.widget.CursorTreeAdapter: android.database.Cursor getGroup(int)> 
<javax.sip.TransactionTerminatedEvent: javax.sip.ClientTransaction getClientTransaction()> 
<java.lang.reflect.Constructor: java.lang.String getName()> 
<android.security.Credentials: android.security.Credentials getInstance()> 
<android.text.format.DateFormat: java.text.DateFormat getTimeFormat(android.content.Context)> 
<android.os.Debug: int getGlobalExternalAllocSize()> 
<android.view.MotionEvent: int getFlags()> 
<javax.obex.ClientOperation: int getResponseCode()> 
<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getType(java.lang.String,java.lang.String)> 
<dalvik.system.profiler.BinaryHprofReader: java.lang.String readString()> 
<org.apache.harmony.xml.ExpatReader: java.lang.Object getProperty(java.lang.String)> 
<android.telephony.CellIdentityLte: int getPci()> 
<android.inputmethodservice.KeyboardView: java.lang.CharSequence getPreviewText(android.inputmethodservice.Keyboard$Key)> 
<org.apache.xml.serializer.ToUnknownStream: java.lang.String getPrefix(java.lang.String)> 
<android.emoji.EmojiFactory: int getAndroidPuaFromVendorSpecificPua(int)> 
<java.security.spec.PSSParameterSpec: java.lang.String getDigestAlgorithm()> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: java.lang.String getPrefix(java.lang.String,java.lang.String)> 
<org.apache.xml.serializer.utils.WrappedRuntimeException: java.lang.Exception getException()> 
<org.apache.xalan.templates.ElemWithParam: org.apache.xml.utils.QName getName()> 
<java.util.zip.CheckedOutputStream: java.util.zip.Checksum getChecksum()> 
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RedirectHandler getRedirectHandler()> 
<org.jivesoftware.smack.packet.Message: boolean getIsIncoming()> 
<android.os.Bundle: char getChar(java.lang.String,char)> 
<java.security.spec.ECPublicKeySpec: java.security.spec.ECPoint getW()> 
<android.graphics.drawable.NinePatchDrawable: int getMinimumHeight()> 
<android.text.Layout: int getLineForVertical(int)> 
<android.app.admin.DevicePolicyManager: int getPasswordMinimumNonLetter(android.content.ComponentName,int)> 
<org.apache.harmony.security.x509.EDIPartyName: byte[] getEncoded()> 
<android.media.videoeditor.Transition: int getBehavior()> 
<android.content.SyncStorageEngine: android.content.SyncStorageEngine getSingleton()> 
<android.database.sqlite.SQLiteGlobal: java.lang.String getWALSyncMode()> 
<java.net.DatagramPacket: int getLength()> 
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: java.lang.String getCipherSuite()> 
<org.apache.xml.serializer.SecuritySupport12: java.lang.ClassLoader getContextClassLoader()> 
<android.net.http.HttpAuthHeader: java.lang.String getAlgorithm()> 
<org.apache.xpath.NodeSetDTM: int getCurrentNode()> 
<android.net.RouteInfo: java.net.InetAddress getGateway()> 
<android.view.Display: void getMetrics(android.util.DisplayMetrics)> 
<org.apache.commons.codec.net.URLCodec: java.lang.String getEncoding()> 
<org.kxml2.io.KXmlParser: void readEntity(java.lang.StringBuilder,boolean,boolean,org.kxml2.io.KXmlParser$ValueContext)> 
<android.net.TrafficStats: long getMobileTxBytes()> 
<android.os.Binder: android.os.UserHandle getCallingUserHandle()> 
<android.view.animation.Animation: boolean getFillBefore()> 
<android.widget.TextView: float getRightFadingEdgeStrength()> 
<org.apache.xalan.processor.ProcessorInclude: java.lang.String getHref()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: java.lang.String getPkeyAlias()> 
<java.lang.ClassLoader: java.lang.Package[] getPackages()> 
<android.renderscript.Type: android.renderscript.Element getElement()> 
<android.media.MiniThumbFile: byte[] getMiniThumbFromFile(long,byte[])> 
<android.media.audiofx.Equalizer: short getNumberOfBands()> 
<android.inputmethodservice.InputMethodService: int getMaxWidth()> 
<org.apache.xalan.processor.XSLTElementDef: org.apache.xalan.processor.XSLTAttributeDef[] getAttributes()> 
<libcore.net.url.JarURLConnectionImpl: boolean getDefaultUseCaches()> 
<org.apache.xalan.templates.ElemLiteralResult: boolean getIsLiteralResultAsStylesheet()> 
<android.widget.AutoCompleteTextView: int getDropDownAnchor()> 
<gov.nist.javax.sip.header.RequestLine: java.lang.String getMethod()> 
<android.support.v4.app.FragmentActivity: android.support.v4.app.FragmentManager getSupportFragmentManager()> 
<android.test.mock.MockResources: android.content.res.XmlResourceParser getAnimation(int)> 
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getLabeledBy()> 
<android.text.method.DateKeyListener: char[] getAcceptedChars()> 
<android.app.ActivityManagerProxy: java.util.List getProcessesInErrorState()> 
<android.webkit.WebSettings: int getDefaultFontSize()> 
<android.telephony.gsm.SmsMessage: android.telephony.gsm.SmsMessage$SubmitPdu getSubmitPdu(java.lang.String,java.lang.String,java.lang.String,boolean)> 
<gov.nist.javax.sip.header.Subject: java.lang.String getSubject()> 
<android.telephony.SignalStrength: int getLteAsuLevel()> 
<org.apache.james.mime4j.util.PositionInputStream: long getPosition()> 
<android.media.videoeditor.MediaProperties: int[] getSupportedVideoBitrates()> 
<java.util.zip.Inflater: int getAdler()> 
<android.filterfw.core.SyncRunner: android.filterfw.core.FilterGraph getGraph()> 
<android.drm.mobile1.DrmConstraintInfo: long getInterval()> 
<jp.co.omronsoft.openwnn.JAJP.UserDictionaryToolsListJAJP: java.util.Comparator getComparator()> 
<java.lang.Package: java.lang.Package getPackage(java.lang.String)> 
<javax.net.SocketFactory: javax.net.SocketFactory getDefault()> 
<java.lang.Integer: java.lang.Integer getInteger(java.lang.String,int)> 
<android.widget.ScrollBarDrawable: int getSize(boolean)> 
<android.view.GLES20Canvas: int getStencilSize()> 
<java.io.DataInputStream: int readInt()> 
<android.widget.ProgressBar: int getSecondaryProgress()> 
<android.mtp.MtpDatabase: int[] getObjectReferences(int)> 
<android.webkit.HTML5VideoView: int getCurrentPosition()> 
<org.apache.http.entity.BufferedHttpEntity: long getContentLength()> 
<android.telephony.ServiceState: int getCdmaDefaultRoamingIndicator()> 
<android.widget.AdapterView: int getSelectedItemPosition()> 
<gov.nist.javax.sip.header.TimeStamp: float getTimeStamp()> 
<org.apache.harmony.xml.dom.DocumentTypeImpl: org.w3c.dom.NamedNodeMap getEntities()> 
<android.view.View: float getCameraDistance()> 
<android.media.Ringtone: android.net.Uri getUri()> 
<org.apache.harmony.security.x509.TBSCertList: org.apache.harmony.security.x509.AlgorithmIdentifier getSignature()> 
<libcore.net.http.HttpResponseCache: int getNetworkCount()> 
<gov.nist.javax.sip.header.ims.PChargingVector: java.lang.String getICID()> 
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: int getPacketBufferSize()> 
<org.apache.xalan.templates.ElemTemplateElement: org.w3c.dom.Node getLastChild()> 
<android.view.LayoutInflater: android.view.View createViewFromTag(android.view.View,java.lang.String,android.util.AttributeSet)> 
<android.filterfw.core.Filter: int getNumberOfConnectedOutputs()> 
<android.widget.GridLayout: int getMeasurement(android.view.View,boolean)> 
<gov.nist.javax.sip.header.ContentType: java.lang.String getMediaSubType()> 
<org.apache.xalan.templates.ElemWithParam: java.lang.String getNodeName()> 
<android.widget.LinearLayout: int getBaselineAlignedChildIndex()> 
<org.apache.commons.io.input.SwappedDataInputStream: int readUnsignedByte()> 
<gov.nist.javax.sip.stack.MessageChannel: gov.nist.javax.sip.header.Via getViaHeader()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: boolean getDocumentAllDeclarationsProcessed()> 
<android.content.res.Resources: java.lang.CharSequence getQuantityText(int,int)> 
<jp.co.omronsoft.openwnn.KeyboardView: java.lang.CharSequence getPreviewText(jp.co.omronsoft.openwnn.Keyboard$Key)> 
<android.filterfw.core.KeyValueMap: int getInt(java.lang.String)> 
<org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String)> 
<gov.nist.javax.sip.header.Require: java.lang.String getOptionTag()> 
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: java.net.InetAddress getInetAddress()> 
<android.widget.Toast: android.app.INotificationManager getService()> 
<org.apache.harmony.xnet.provider.jsse.ProtocolVersion: org.apache.harmony.xnet.provider.jsse.ProtocolVersion getByVersion(byte[])> 
<gov.nist.javax.sip.clientauthutils.CredentialsCache: java.util.Collection getCachedAuthorizationHeaders(java.lang.String)> 
<android.widget.GridLayout: int getRowCount()> 
<java.lang.AbstractStringBuilder: void getChars(int,int,char[],int)> 
<android.content.res.Resources: android.content.res.CompatibilityInfo getCompatibilityInfo()> 
<org.xml.sax.helpers.XMLReaderFactory: org.xml.sax.XMLReader createXMLReader()> 
<android.text.style.SuggestionSpan: int getSpanTypeId()> 
<android.preference.RingtonePreference: boolean getShowDefault()> 
<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)> 
<org.jivesoftware.smack.packet.DataMessage: java.lang.String getExtensionsXML()> 
<java.util.Calendar: int getActualMinimum(int)> 
<android.content.Intent: char[] getCharArrayExtra(java.lang.String)> 
<libcore.net.http.HttpResponseCache: libcore.net.http.HttpEngine getHttpEngine(java.net.HttpURLConnection)> 
<org.apache.xalan.templates.ElemForEach: org.apache.xalan.templates.ElemSort getSortElem(int)> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: org.w3c.dom.Node getNode(int)> 
<org.apache.xalan.xslt.SecuritySupport12: long getLastModified(java.io.File)> 
<libcore.io.Streams: long skipByReading(java.io.InputStream,long)> 
<org.apache.harmony.xml.dom.ElementImpl: java.lang.String getAttribute(java.lang.String)> 
<android.view.WindowManagerImpl: android.view.Display getDefaultDisplay()> 
<android.view.Window: int getForcedWindowFlags()> 
<android.content.pm.PackageParser: android.content.pm.PackageParser$Activity parseActivity(android.content.pm.PackageParser$Package,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,int,java.lang.String[],boolean,boolean)> 
<gov.nist.javax.sip.header.RAck: java.lang.String getMethod()> 
<android.view.accessibility.AccessibilityRecord: int getWindowId()> 
<org.apache.xpath.objects.XNumber: java.lang.String getTypeString()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPrivateKey: java.lang.String getAlgorithm()> 
<org.apache.xpath.NodeSet: boolean getShouldCacheNodes()> 
<gov.nist.javax.sip.header.Warning: java.lang.String getAgent()> 
<android.view.View: boolean getFilterTouchesWhenObscured()> 
<android.widget.HeaderViewListAdapter: android.widget.ListAdapter getWrappedAdapter()> 
<android.webkit.WebSettings: void setBlockNetworkLoads(boolean)> 
<android.media.JetPlayer: int getMaxTracks()> 
<gov.nist.javax.sip.address.TelephoneNumber: java.lang.String getPhoneNumber()> 
<libcore.net.http.HttpURLConnectionImpl: int getConnectToPort()> 
<android.view.VelocityTracker: android.view.VelocityTracker getNextPoolable()> 
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: boolean getReuseAddress()> 
<android.text.style.TextAppearanceSpan: int getTextSize()> 
<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String getValue()> 
<java.io.ByteArrayInputStream: int read(byte[],int,int)> 
<android.view.ViewRootImpl: void getGfxInfo(android.view.View,int[])> 
<android.graphics.drawable.InsetDrawable: int getChangingConfigurations()> 
<java.net.Socket: boolean getReuseAddress()> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: int getNextNodeIdentity(int)> 
<org.apache.xpath.axes.WalkerFactory: int getAxisFromStep(org.apache.xpath.compiler.Compiler,int)> 
<android.graphics.drawable.GradientDrawable: int getChangingConfigurations()> 
<javax.sip.RequestEvent: javax.sip.ServerTransaction getServerTransaction()> 
<org.apache.james.mime4j.field.address.Group: java.lang.String getName()> 
<org.apache.xpath.NodeSet: boolean getExpandEntityReferences()> 
<gov.nist.javax.sip.stack.MessageChannel: gov.nist.core.HostPort getHostPort()> 
<android.content.Entity: android.content.ContentValues getEntityValues()> 
<android.view.accessibility.AccessibilityRecord: int getAddedCount()> 
<android.telephony.ServiceState: int getRadioTechnology()> 
<android.view.inputmethod.CorrectionInfo: java.lang.CharSequence getOldText()> 
<libcore.icu.RuleBasedCollatorICU: java.text.CollationKey getCollationKey(java.lang.String)> 
<android.content.Intent: android.net.Uri getData()> 
<gov.nist.javax.sip.stack.SIPTransactionStack: int getMaxMessageSize()> 
<android.database.CursorWindow: java.lang.String getName()> 
<org.apache.james.mime4j.field.address.Mailbox: java.lang.String getAddressString()> 
<org.jivesoftware.smack.packet.Packet: java.lang.String getPacketID()> 
<android.net.http.SslCertificate: java.lang.String getSerialNumber(java.security.cert.X509Certificate)> 
<android.media.audiofx.AudioEffect: int getParameter(int,int[])> 
<org.kxml2.io.KXmlParser: java.lang.String getAttributePrefix(int)> 
<android.text.format.DateFormat: java.lang.String getMonthString(java.util.Calendar,int,int)> 
<org.kxml2.io.KXmlParser: int getAttributeCount()> 
<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.templates.Stylesheet getStylesheet()> 
<android.widget.DialerFilter: java.lang.CharSequence getLetters()> 
<android.preference.Preference: java.util.Set getPersistedStringSet(java.util.Set)> 
<java.io.RandomAccessFile: int read(byte[])> 
<android.view.MotionEvent: int getHistorySize()> 
<android.util.TypedValue: float getFraction(float,float)> 
<android.widget.CursorTreeAdapter: android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)> 
<org.apache.xpath.patterns.StepPattern: org.apache.xpath.patterns.StepPattern getRelativePathPattern()> 
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.Stylesheet getStylesheetParent()> 
<org.apache.xalan.processor.TransformerFactoryImpl: java.lang.String getDOMsystemID()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLDSAPublicKey: java.security.interfaces.DSAParams getParams()> 
<gov.nist.javax.sip.ResponseEventExt: gov.nist.javax.sip.ClientTransactionExt getOriginalTransaction()> 
<android.security.KeyStore: byte[] get(java.lang.String)> 
<android.filterfw.core.FrameFormat: int getLength()> 
<org.jivesoftware.smack.packet.BindAccountRequest: java.lang.String getDomain()> 
<libcore.net.url.FileURLConnection: java.lang.String getContentType()> 
<android.telephony.TelephonyManager: java.lang.String getProcCmdLine()> 
<org.apache.http.impl.client.AbstractAuthenticationHandler: java.util.List getAuthPreferences()> 
<java.net.HttpCookie: int getVersion()> 
<org.apache.xalan.templates.TemplateSubPatternAssociation: java.lang.String getTargetString()> 
<gov.nist.javax.sip.header.SIPDate: java.lang.String getWkday()> 
<java.security.ProtectionDomain: java.security.CodeSource getCodeSource()> 
<java.util.zip.Inflater: long getBytesRead()> 
<gov.nist.javax.sip.header.SIPDate: int getYear()> 
<org.jivesoftware.smack.provider.ProviderManager: java.lang.Object getRawXmlExtensionProvider(java.lang.String,java.lang.String)> 
<gov.nist.javax.sip.message.ListMap: java.lang.Class getListClass(java.lang.Class)> 
<org.apache.harmony.security.provider.cert.X509CertImpl: boolean[] getSubjectUniqueID()> 
<org.apache.xalan.processor.StylesheetHandler: java.lang.String getSystemId()> 
<android.os.Bundle: long[] getLongArray(java.lang.String)> 
<android.media.MediaFile: java.lang.String getMimeTypeForFile(java.lang.String)> 
<android.nfc.tech.MifareClassic: android.nfc.Tag getTag()> 
<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)> 
<android.app.ActivityOptions: int getAnimationType()> 
<java.security.spec.PSSParameterSpec: int getTrailerField()> 
<java.nio.DirectByteBuffer: long getLong(int)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: javax.net.ssl.SSLSessionContext getSessionContext()> 
<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)> 
<android.filterpacks.base.RetargetFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<android.view.inputmethod.InputMethodManager: java.util.List getEnabledInputMethodList()> 
<android.filterfw.core.FrameFormat: int getSize()> 
<android.test.TestCaseUtil: java.util.List getTests(junit.framework.Test,boolean)> 
<org.apache.harmony.xml.dom.ElementImpl: java.lang.String getNodeName()> 
<org.apache.harmony.xnet.provider.jsse.AbstractSessionContext: int getSessionTimeout()> 
<android.webkit.BrowserFrame: void didFinishLoading()> 
<android.preference.DialogPreference: java.lang.CharSequence getPositiveButtonText()> 
<android.media.Ringtone: java.lang.String getTitle(android.content.Context)> 
<android.gesture.GestureStore: int getSequenceType()> 
<java.sql.SQLException: java.lang.String getSQLState()> 
<android.inputmethodservice.KeyboardView: android.inputmethodservice.Keyboard getKeyboard()> 
<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getCipherSuite()> 
<gov.nist.javax.sip.SipProviderImpl: javax.sip.ListeningPoint getListeningPoint(java.lang.String)> 
<java.security.AllPermission: java.lang.String getActions()> 
<org.apache.xml.serializer.SerializerBase: java.lang.String getProp(java.lang.String,boolean)> 
<android.text.Layout: int getLineBounds(int,android.graphics.Rect)> 
<org.apache.harmony.xnet.provider.jsse.CertificateMessage: java.lang.String getAuthType()> 
<gov.nist.javax.sip.header.Event: java.lang.String getEventId()> 
<org.apache.http.conn.EofSensorInputStream: boolean isReadAllowed()> 
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getUnregisteredParameterValueSanitizer()> 
<org.apache.xalan.templates.ElemValueOf: org.apache.xpath.XPath getSelect()> 
<org.apache.xml.dtm.ref.DTMDefaultBase: int getTypedNextSibling(int,int)> 
<android.telephony.CellInfoGsm: android.telephony.CellIdentityGsm getCellIdentity()> 
<org.apache.harmony.security.x509.TBSCertList: java.util.List getRevokedCertificates()> 
<android.webkit.WebSettings: android.webkit.WebSettings$LayoutAlgorithm getLayoutAlgorithm()> 
<android.widget.ViewAnimator: boolean getAnimateFirstView()> 
<android.database.sqlite.SQLiteGlobal: int getWALAutoCheckpoint()> 
<gov.nist.javax.sip.address.Authority: gov.nist.javax.sip.address.UserInfo getUserInfo()> 
<java.util.PropertyPermission: java.lang.String getActions()> 
<java.security.cert.X509CertSelector: java.lang.String getSubjectPublicKeyAlgID()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSessionImpl: java.lang.String[] getValueNames()> 
<android.webkit.HTML5VideoView: int getDuration()> 
<org.jivesoftware.smack.XMPPException: org.jivesoftware.smack.packet.XMPPError getXMPPError()> 
<org.apache.xalan.templates.ElemOtherwise: int getXSLToken()> 
<org.apache.http.impl.cookie.BestMatchSpec: org.apache.http.impl.cookie.RFC2965Spec getStrict()> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: org.xml.sax.ErrorHandler getErrorHandler()> 
<android.webkit.WebView: android.view.View getZoomControls()> 
<android.telephony.gsm.SmsMessage: byte[] getPdu()> 
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getName()> 
<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)> 
<gov.nist.javax.sip.SipStackImpl: java.lang.String getStackName()> 
<android.mtp.MtpObjectInfo: long getDateCreated()> 
<org.apache.http.impl.client.RequestWrapper: java.lang.String getMethod()> 
<org.jivesoftware.smackx.packet.VCard: java.lang.String getEmailWork()> 
<android.util.MonthDisplayHelper: int getNumberOfDaysInMonth()> 
<android.app.Fragment: android.view.View getView()> 
<android.widget.ListView: android.widget.Adapter getAdapter()> 
<gov.nist.javax.sip.header.ims.PAccessNetworkInfo: java.lang.String getCGI3GPP()> 
<org.apache.http.impl.EnglishReasonPhraseCatalog: java.lang.String getReason(int,java.util.Locale)> 
<android.os.Debug: java.lang.String getCaller()> 
<android.nfc.tech.IsoDep: byte[] getHiLayerResponse()> 
<android.view.InputDevice: android.view.KeyCharacterMap getKeyCharacterMap()> 
<android.webkit.WebSettingsClassic: boolean getLoadWithOverviewMode()> 
<android.os.Environment: java.io.File getUserSystemDirectory(int)> 
<org.apache.xpath.compiler.Compiler: int getLocationPathDepth()> 
<android.app.ActivityManagerProxy: void getMyMemoryState(android.app.ActivityManager$RunningAppProcessInfo)> 
<org.apache.xml.utils.res.IntArrayWrapper: int getLength()> 
<android.widget.ProgressBar: int getProgress()> 
<org.apache.harmony.xml.ExpatReader: org.xml.sax.EntityResolver getEntityResolver()> 
<jp.co.omronsoft.openwnn.UserDictionaryToolsListFocus: android.view.View getPairView()> 
<android.view.KeyCharacterMap: int getKeyboardType()> 
<java.util.logging.Handler: java.util.logging.Formatter getFormatter()> 
<android.net.sip.SipAudioCall: android.net.sip.SipProfile getPeerProfile()> 
<org.apache.xpath.objects.XNodeSet: int getType()> 
<android.widget.ExpandableListView: long getPackedPositionForGroup(int)> 
<android.net.sip.SipProfile: java.lang.String getDisplayName()> 
<org.jivesoftware.smack.packet.DefaultPacketExtension: java.util.Iterator getAttributeNames()> 
<android.net.wifi.WifiManager: int getFrequencyBand()> 
<java.lang.Runtime: java.io.InputStream getLocalizedInputStream(java.io.InputStream)> 
<android.text.StaticLayout: int getLineStart(int)> 
<android.renderscript.ScriptIntrinsicLUT: android.renderscript.Script$KernelID getKernelID()> 
<android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)> 
<javax.crypto.SealedObject: java.lang.Object getObject(java.security.Key)> 
<org.apache.commons.io.input.TeeInputStream: int read()> 
<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.StylesheetComposed getStylesheetComposed()> 
<java.security.spec.RSAMultiPrimePrivateCrtKeySpec: java.math.BigInteger getPrimeExponentQ()> 
<java.security.spec.RSAMultiPrimePrivateCrtKeySpec: java.math.BigInteger getPrimeExponentP()> 
<org.apache.xalan.templates.OutputProperties: java.util.Vector getQNameProperties(java.lang.String,java.util.Properties)> 
<android.media.AudioManager: int getMasterVolume()> 
<org.apache.harmony.security.x509.tsp.PKIStatusInfo: org.apache.harmony.security.x509.tsp.PKIStatus getStatus()> 
<android.view.KeyEvent: int getSource()> 
<android.net.http.Headers: java.lang.String getRefresh()> 
<java.util.concurrent.ScheduledThreadPoolExecutor: boolean getContinueExistingPeriodicTasksAfterShutdownPolicy()> 
<java.security.AlgorithmParameters: java.security.Provider getProvider()> 
<android.text.SpannableStringBuilder: void getChars(int,int,char[],int)> 
<android.filterfw.core.FilterGraph: java.util.Set getFilters()> 
<android.text.DynamicLayout: int getLineDescent(int)> 
<android.text.Layout: int getLineAscent(int)> 
<android.widget.ExpandableListConnector: int getItemViewType(int)> 
<android.telephony.SmsCbLocation: int getCid()> 
<java.security.AlgorithmParameterGenerator: java.security.Provider getProvider()> 
<android.telephony.SmsCbMessage: int getServiceCategory()> 
<org.apache.xml.serializer.ToUnknownStream: java.lang.String getLocalNameUnknown(java.lang.String)> 
<org.apache.xml.dtm.ref.DTMDefaultBase: org.w3c.dom.Node getNode(int)> 
<android.support.v4.content.CursorLoader: java.lang.String getSelection()> 
<org.apache.james.mime4j.message.TempFileBinaryBody: java.io.InputStream getInputStream()> 
<org.apache.xpath.XPathContext: int getPredicateRoot()> 
<java.util.jar.JarInputStream: java.util.zip.ZipEntry getNextEntry()> 
<android.support.v4.view.accessibility.AccessibilityManagerCompat: java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int)> 
<android.app.ActivityManager: android.os.Debug$MemoryInfo[] getProcessMemoryInfo(int[])> 
<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String getCommentURL()> 
<javax.net.ssl.SSLContext: java.lang.String getProtocol()> 
<java.util.concurrent.atomic.AtomicStampedReference: java.lang.Object get(int[])> 
<java.io.Reader: int read(char[])> 
<android.text.Layout: long getLineRangeForDraw(android.graphics.Canvas)> 
<org.apache.xml.dtm.ref.SecuritySupport12: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)> 
<java.nio.DirectByteBuffer: byte get()> 
<android.view.ViewConfiguration: int getKeyRepeatTimeout()> 
<android.hardware.SensorManager: float[] getOrientation(float[],float[])> 
<android.telephony.cdma.CdmaCellLocation: int getBaseStationLongitude()> 
<android.telephony.CellSignalStrengthLte: int getTimingAdvance()> 
<android.view.View: int getVerticalFadingEdgeLength()> 
<org.apache.harmony.xnet.provider.jsse.AbstractSessionContext: javax.net.ssl.SSLSession getSession(byte[])> 
<android.webkit.WebSettingsClassic: boolean getUseWideViewPort()> 
<java.nio.charset.MalformedInputException: java.lang.String getMessage()> 
<org.apache.xml.utils.UnImplNode: org.w3c.dom.NamedNodeMap getAttributes()> 
<android.net.TrafficStats: long getRxPackets(java.lang.String)> 
<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getTransactionId()> 
<android.view.MotionEvent: float getHistoricalToolMinor(int)> 
<java.io.EmulatedFields: short get(java.lang.String,short)> 
<org.apache.xml.serializer.SerializerBase: java.lang.String getDoctypeSystem()> 
<java.text.Bidi: int getLevelAt(int)> 
<android.webkit.WebSettings: boolean getBlockNetworkLoads()> 
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAccountsByTypeAndFeatures(java.lang.String,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)> 
<java.nio.LongToByteBufferAdapter: long get()> 
<java.security.spec.RSAOtherPrimeInfo: java.math.BigInteger getPrime()> 
<android.filterpacks.imageproc.VignetteFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<android.hardware.usb.UsbDevice: int getDeviceClass()> 
<android.drm.ProcessedData: java.lang.String getSubscriptionId()> 
<android.view.FocusFinder: int getWeightedDistanceFor(int,int)> 
<android.media.RingtoneManager: android.net.Uri getDefaultUri(int)> 
<libcore.net.url.FtpHandler: int getDefaultPort()> 
<org.apache.http.auth.NTCredentials: java.lang.String getPassword()> 
<android.view.ViewPropertyAnimator: long getStartDelay()> 
<android.media.videoeditor.OverlayFrame: int getResizedRGBSizeWidth()> 
<android.widget.TextView: int getCompoundPaddingLeft()> 
<android.net.http.HttpAuthHeader: java.lang.String getRealm()> 
<org.apache.james.mime4j.BodyDescriptor: java.util.Map getHeaderParams(java.lang.String)> 
<android.widget.NumberPicker: int getValue()> 
<java.util.Locale: java.lang.String getCountry()> 
<android.app.ListFragment: android.widget.ListAdapter getListAdapter()> 
<android.graphics.drawable.RotateDrawable: boolean getPadding(android.graphics.Rect)> 
<android.net.http.RequestQueue: android.net.http.Request getRequest(org.apache.http.HttpHost)> 
<org.apache.xml.serializer.SecuritySupport12: java.lang.ClassLoader getSystemClassLoader()> 
<gov.nist.javax.sip.header.SIPHeaderList: java.lang.String getName()> 
<android.support.v4.view.accessibility.AccessibilityRecordCompat: int getItemCount()> 
<android.view.KeyCharacterMap: android.view.KeyCharacterMap load(int)> 
<org.apache.xalan.processor.TransformerFactoryImpl: javax.xml.transform.Source getAssociatedStylesheet(javax.xml.transform.Source,java.lang.String,java.lang.String,java.lang.String)> 
<org.apache.xml.serializer.SerializerBase: java.lang.String getLocalName(java.lang.String)> 
<jp.co.omronsoft.openwnn.ComposingText: jp.co.omronsoft.openwnn.StrSegment getStrSegment(int,int)> 
<java.util.zip.Inflater: int getTotalIn()> 
<java.util.zip.ZipInputStream: java.util.zip.ZipEntry getNextEntry()> 
<android.content.res.AssetManager: java.lang.CharSequence getPooledString(int,int)> 
<android.webkit.WebHistoryItemClassic: int getId()> 
<android.app.admin.DevicePolicyManager: int getPasswordMinimumNonLetter(android.content.ComponentName)> 
<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] getValues()> 
<android.telephony.gsm.SmsMessage: com.android.internal.telephony.SmsMessageBase getSmsFacility()> 
<android.support.v4.view.accessibility.AccessibilityRecordCompat: java.lang.CharSequence getBeforeText()> 
<gov.nist.javax.sip.address.GenericURI: java.lang.String getScheme()> 
<android.graphics.drawable.ClipDrawable: int getIntrinsicHeight()> 
<android.net.TrafficStats: long getRxBytes(java.lang.String)> 
<org.apache.commons.io.input.NullInputStream: int read(byte[])> 
<android.hardware.display.DisplayManagerGlobal: android.hardware.display.WifiDisplayStatus getWifiDisplayStatus()> 
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketImpl: java.lang.String[] getEnabledProtocols()> 
<android.webkit.AccessibilityInjector: int getAxsUrlParameterValue(java.lang.String)> 
<java.text.DateFormatSymbols: java.lang.String[] getShortMonths()> 
<android.hardware.display.WifiDisplayStatus: android.hardware.display.WifiDisplay getActiveDisplay()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: java.lang.String getDocumentSystemIdentifier(int)> 
<javax.net.ssl.HandshakeCompletedEvent: java.security.cert.Certificate[] getPeerCertificates()> 
<org.xmlpull.v1.sax2.Driver: org.xml.sax.ErrorHandler getErrorHandler()> 
<java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int,java.util.Locale)> 
<android.content.SyncStorageEngine: android.content.SyncStorageEngine$DayStats[] getDayStatistics()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: int getSendBufferSize()> 
<libcore.net.http.HttpEngine: java.io.InputStream getResponseBody()> 
<java.beans.PropertyChangeSupport: java.beans.PropertyChangeListener[] getPropertyChangeListeners()> 
<android.widget.SimpleExpandableListAdapter: java.lang.Object getGroup(int)> 
<android.telephony.PhoneNumberUtils: int getFormatTypeFromCountryCode(java.lang.String)> 
<android.content.pm.PathPermission: java.lang.String getReadPermission()> 
<java.security.spec.RSAKeyGenParameterSpec: java.math.BigInteger getPublicExponent()> 
<org.kxml2.io.KXmlParser: boolean readExternalId(boolean,boolean)> 
<android.support.v4.view.VelocityTrackerCompatHoneycomb: float getYVelocity(android.view.VelocityTracker,int)> 
<gov.nist.javax.sip.header.Challenge: java.lang.String getScheme()> 
<android.os.Bundle: float[] getFloatArray(java.lang.String)> 
<android.widget.ArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> 
<java.nio.IntArrayBuffer: int get()> 
<android.media.videoeditor.MediaVideoItem: int getAudioChannels()> 
<android.widget.TextView: android.content.res.ColorStateList getLinkTextColors()> 
<java.util.concurrent.ThreadPoolExecutor: long getKeepAliveTime(java.util.concurrent.TimeUnit)> 
<org.apache.harmony.xnet.provider.jsse.ConnectionState: int getContentSize(int)> 
<org.apache.xalan.transformer.XalanTransformState: org.w3c.dom.Node getMatchedNode()> 
<gov.nist.javax.sip.header.ParametersHeader: boolean getParameterAsBoolean(java.lang.String)> 
<org.apache.xml.dtm.SecuritySupport: java.lang.String getSystemProperty(java.lang.String)> 
<gov.nist.javax.sip.header.From: gov.nist.core.HostPort getHostPort()> 
<android.text.style.LocaleSpan: int getSpanTypeId()> 
<android.widget.TextView: int getOffsetForPosition(float,float)> 
<android.os.Debug: java.lang.String getCallers(int,java.lang.String)> 
<org.apache.commons.logging.impl.SimpleLog: java.lang.ClassLoader getContextClassLoader()> 
<android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)> 
<android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)> 
<java.text.RuleBasedCollator: java.text.CollationElementIterator getCollationElementIterator(java.text.CharacterIterator)> 
<org.ccil.cowan.tagsoup.AttributesImpl: java.lang.String getValue(int)> 
<java.net.ServerSocket: int getSoTimeout()> 
<org.apache.xalan.processor.StylesheetHandler: java.lang.String getBaseIdentifier()> 
<java.util.concurrent.ForkJoinWorkerThread: java.util.concurrent.ForkJoinPool getPool()> 
<android.net.wifi.WifiConfiguration: int getAuthType()> 
<android.database.CursorWrapper: float getFloat(int)> 
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.params.HttpParams getParams()> 
<android.nfc.NdefRecord: android.net.Uri parseWktUri()> 
<android.security.AndroidKeyPairGeneratorSpec: java.util.Date getEndDate()> 
<android.widget.GridView: int getNumColumns()> 
<org.apache.xml.serializer.dom3.LSSerializerImpl: java.lang.String getNewLine()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLRSAPrivateKey: java.lang.String getPkeyAlias()> 
<org.apache.xml.dtm.ref.DTMAxisIteratorBase: int getAxis()> 
<org.apache.harmony.security.fortress.Services: java.security.Provider getProvider(java.lang.String)> 
<gov.nist.javax.sip.header.extensions.References: java.lang.String getName()> 
<android.net.dhcp.DhcpPacket: int getTransactionId()> 
<android.app.ActivityManagerProxy: android.content.IIntentSender getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)> 
<android.graphics.Paint: int getTextRunCursor(java.lang.String,int,int,int,int,int)> 
<android.webkit.WebSettingsClassic: void setBlockNetworkLoads(boolean)> 
<android.filterfw.core.Frame: android.filterfw.core.FrameManager getFrameManager()> 
<org.apache.xml.utils.DOMBuilder: org.w3c.dom.Node getRootNode()> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: int getNextAttributeIdentity(int)> 
<android.app.ActivityThread: android.os.Handler getHandler()> 
<org.apache.xalan.templates.Stylesheet: java.lang.String getExtensionElementPrefix(int)> 
<android.media.videoeditor.VideoEditorImpl: long getDuration()> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: java.lang.String getStringValueX(int)> 
<java.security.SecureClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)> 
<org.apache.commons.codec.language.DoubleMetaphone: int getMaxCodeLen()> 
<android.app.ContextImpl: java.io.File getExternalCacheDir()> 
<android.widget.TextView: float getShadowDy()> 
<android.widget.TextView: float getShadowDx()> 
<java.text.Bidi: int getRunLimit(int)> 
<org.apache.james.mime4j.field.datetime.DateTime: int getDay()> 
<android.widget.TextView: int getCompoundPaddingBottom()> 
<android.graphics.drawable.RotateDrawable: int getIntrinsicWidth()> 
<org.apache.http.message.BasicHeaderValueParser: org.apache.http.HeaderElement parseHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)> 
<android.webkit.WebViewDatabaseClassic: android.webkit.WebViewDatabaseClassic getInstance(android.content.Context)> 
<android.webkit.WebSettings: boolean getDisplayZoomControls()> 
<android.content.Intent: android.os.Bundle getExtras()> 
<android.view.ViewGroup: android.view.View getFocusedChild()> 
<java.text.Bidi: int getLength()> 
<android.view.LayoutInflater: void parseInclude(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet)> 
<android.renderscript.ScriptIntrinsicConvolve3x3: android.renderscript.Script$KernelID getKernelID()> 
<java.util.TimeZone: java.lang.String getDisplayName(boolean,int)> 
<android.text.Layout: int getOffsetAtStartOf(int)> 
<android.widget.AutoCompleteTextView: int getThreshold()> 
<android.drm.DrmInfo: java.lang.Object get(java.lang.String)> 
<android.text.style.TextAppearanceSpan: java.lang.String getFamily()> 
<org.apache.http.impl.cookie.RFC2965Spec: java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin)> 
<android.database.sqlite.SQLiteGlobal: java.lang.String getDefaultSyncMode()> 
<android.content.AsyncTaskLoader: void dispatchOnLoadComplete(android.content.AsyncTaskLoader$LoadTask,java.lang.Object)> 
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: java.security.SecureRandom getSecureRandom()> 
<android.net.VpnService: android.net.IConnectivityManager getService()> 
<android.security.AndroidKeyPairGeneratorSpec: javax.security.auth.x500.X500Principal getSubjectDN()> 
<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()> 
<android.widget.ViewAnimator: android.view.animation.Animation getOutAnimation()> 
<android.content.pm.LimitedLengthInputStream: int read(byte[],int,int)> 
<java.net.URLConnection: long getHeaderFieldDate(java.lang.String,long)> 
<android.test.mock.MockContext: java.io.File getExternalFilesDir(java.lang.String)> 
<org.apache.harmony.xnet.provider.jsse.SSLRecordProtocol: int getDataSize(int)> 
<org.jivesoftware.smackx.packet.MUCUser: org.jivesoftware.smackx.packet.MUCUser$Destroy getDestroy()> 
<android.app.ActivityManagerProxy: boolean getPackageAskScreenCompat(java.lang.String)> 
<gov.nist.javax.sip.stack.TLSMessageChannel: java.net.InetAddress getPeerPacketSourceAddress()> 
<android.text.style.BulletSpan: int getSpanTypeId()> 
<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(java.lang.String,android.content.res.CompatibilityInfo,int)> 
<jp.co.omronsoft.openwnn.TextCandidatesViewManager: int getCandidateMinimumHeight()> 
<org.apache.xalan.templates.ElemText: boolean getDisableOutputEscaping()> 
<android.widget.TextView: int getMaxLines()> 
<org.apache.commons.codec.language.Soundex: char[] getSoundexMapping()> 
<android.text.method.Touch: int getInitialScrollX(android.widget.TextView,android.text.Spannable)> 
<android.text.method.Touch: int getInitialScrollY(android.widget.TextView,android.text.Spannable)> 
<org.jivesoftware.smack.Chat: java.lang.String getThreadID()> 
<android.content.ContentService: int getIsSyncable(android.accounts.Account,java.lang.String)> 
<android.widget.TabWidget: int getTabCount()> 
<org.apache.xpath.functions.SecuritySupport12: java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader)> 
<android.graphics.drawable.InsetDrawable: int getOpacity()> 
<libcore.io.ForwardingOs: java.lang.String getenv(java.lang.String)> 
<org.apache.xml.serializer.dom3.DOMOutputImpl: java.lang.String getEncoding()> 
<org.kxml2.io.KXmlParser: java.lang.String readComment(boolean)> 
<android.test.mock.MockPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)> 
<android.telephony.gsm.SmsMessage: int getIndexOnSim()> 
<java.beans.PropertyChangeEvent: java.lang.Object getPropagationId()> 
<org.xml.sax.helpers.NamespaceSupport: java.util.Enumeration getPrefixes(java.lang.String)> 
<org.apache.commons.io.output.DeferredFileOutputStream: java.io.OutputStream getStream()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: java.lang.String getDocumentTypeDeclarationPublicIdentifier()> 
<jp.co.omronsoft.openwnn.Keyboard: int getHeight()> 
<gov.nist.javax.sip.parser.extensions.MinSEParser: gov.nist.javax.sip.header.SIPHeader parse()> 
<android.filterpacks.imageproc.CrossProcessFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<libcore.net.url.UrlUtils: java.lang.String getSchemePrefix(java.lang.String)> 
<android.graphics.Paint: void getTextBounds(java.lang.String,int,int,android.graphics.Rect)> 
<android.preference.RingtonePreference: int getRingtoneType()> 
<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address getLocalParty()> 
<android.telephony.CellSignalStrengthCdma: int getCdmaDbm()> 
<org.apache.harmony.security.utils.ObjectIdentifier: java.lang.Object getGroup()> 
<org.apache.harmony.xnet.provider.jsse.SSLEngineImpl: java.lang.String[] getSupportedCipherSuites()> 
<java.util.logging.LogManager: java.util.Enumeration getLoggerNames()> 
<android.view.textservice.SpellCheckerSession: com.android.internal.textservice.ITextServicesSessionListener getTextServicesSessionListener()> 
<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.dtm.DTMIterator getContextNodeList()> 
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.conn.routing.HttpRoute getRoute()> 
<android.os.UserHandle: int getUserId(int)> 
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: int getPort()> 
<android.telephony.SignalStrength: int getEvdoSnr()> 
<javax.crypto.KeyGenerator: java.security.Provider getProvider()> 
<org.apache.xalan.xslt.SecuritySupport: java.lang.String getSystemProperty(java.lang.String)> 
<android.app.ContextImpl: android.content.Context getApplicationContext()> 
<org.apache.harmony.security.asn1.BerInputStream: int getEndOffset()> 
<android.media.ExifInterface: long getDateTime()> 
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.routing.HttpRoutePlanner getRoutePlanner()> 
<gov.nist.javax.sip.parser.ContentLengthParser: gov.nist.javax.sip.header.SIPHeader parse()> 
<libcore.util.BasicLruCache: java.lang.Object get(java.lang.Object)> 
<org.apache.xalan.templates.Stylesheet: int getExtensionElementPrefixCount()> 
<android.filterfw.core.SerializedFrame: int[] getInts()> 
<org.apache.xpath.XPathContext: int getContextNode()> 
<android.media.AudioTrack: int reloadStaticData()> 
<org.apache.james.mime4j.field.address.Mailbox: java.lang.String getAddressString(boolean)> 
<android.view.accessibility.AccessibilityRecord: int getRemovedCount()> 
<java.lang.ref.Reference: java.lang.Object get()> 
<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getInterface()> 
<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.TransformSnapshot getSnapshot()> 
<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()> 
<org.apache.xml.utils.DOMHelper: org.w3c.dom.Node getRoot(org.w3c.dom.Node)> 
<org.apache.harmony.luni.lang.reflect.ImplForVariable: java.lang.String getName()> 
<org.apache.xalan.templates.ElemTemplate: org.apache.xalan.templates.Stylesheet getStylesheet()> 
<java.text.BreakIterator: short getShort(byte[],int)> 
<java.util.concurrent.locks.ReentrantReadWriteLock: java.util.Collection getQueuedWriterThreads()> 
<android.view.ViewPropertyAnimator: long getDuration()> 
<android.inputmethodservice.Keyboard: int getKeyHeight()> 
<java.net.ContentHandler: java.lang.Object getContent(java.net.URLConnection,java.lang.Class[])> 
<org.apache.xml.dtm.ref.dom2dtm.DOM2DTM: java.lang.String getNodeNameX(int)> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM: int getIdForNamespace(java.lang.String)> 
<android.net.sip.SimpleSessionDescription: java.lang.String getEncryptionMethod()> 
<libcore.icu.NativeDecimalFormat: int getMultiplier()> 
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.DOMImplementation getImplementation()> 
<org.apache.http.entity.HttpEntityWrapper: java.io.InputStream getContent()> 
<android.media.Ringtone: int getStreamType()> 
<org.apache.xpath.VariableStack: org.apache.xpath.objects.XObject getVariableOrParam(org.apache.xpath.XPathContext,org.apache.xml.utils.QName)> 
<java.net.CookieHandler: java.net.CookieHandler getDefault()> 
<org.apache.xml.utils.UnImplNode: org.w3c.dom.Node getParentNode()> 
<java.security.KeyPair: java.security.PublicKey getPublic()> 
<android.net.NetworkUtils: java.net.InetAddress getNetworkPart(java.net.InetAddress,int)> 
<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)> 
<android.widget.AbsListView: void getFocusedRect(android.graphics.Rect)> 
<android.media.videoeditor.MediaVideoItem: int getVolume()> 
<gov.nist.javax.sip.address.SipUri: java.lang.String getUserAtHostPort()> 
<android.renderscript.ProgramStore: android.renderscript.ProgramStore$BlendDstFunc getBlendDstFunc()> 
<android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)> 
<android.content.ClipDescription: java.lang.String getMimeType(int)> 
<org.apache.xml.dtm.ref.DTMManagerDefault: int getDTMIdentity(org.apache.xml.dtm.DTM)> 
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ToHeader getToHeader()> 
<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList getLinkTextColor()> 
<org.jivesoftware.smack.packet.BindAccountRequest: java.lang.String getAuthToken()> 
<java.security.Identity: java.security.PublicKey getPublicKey()> 
<android.widget.GridLayout: android.widget.GridLayout$Alignment getAlignment(int,boolean)> 
<android.webkit.BrowserFrame: int getFile(java.lang.String,byte[],int,int)> 
<android.os.CommonTimeConfig: int getPanicThreshold()> 
<android.widget.SimpleAdapter: int getCount()> 
<java.text.MessageFormat: java.text.Format[] getFormatsByArgumentIndex()> 
<org.apache.http.impl.cookie.BasicClientCookie: int[] getPorts()> 
<gov.nist.javax.sip.stack.SIPTransaction: java.security.cert.Certificate[] getPeerCertificates()> 
<android.view.SurfaceView: android.view.SurfaceHolder getHolder()> 
<android.hardware.SensorManager: boolean getRotationMatrix(float[],float[],float[],float[])> 
<android.nfc.tech.MifareClassic: int getType()> 
<android.text.Layout: float getDesiredWidth(java.lang.CharSequence,int,int,android.text.TextPaint)> 
<org.apache.commons.io.FileCleaner: int getTrackCount()> 
<android.view.ViewRootImpl: android.view.ViewParent getParentForAccessibility()> 
<android.widget.Scroller: int getSplineFlingDuration(float)> 
<android.location.GpsStatus: java.lang.Iterable getSatellites()> 
<android.net.DummyDataStateTracker: android.net.LinkCapabilities getLinkCapabilities()> 
<android.view.textservice.TextInfo: int getCookie()> 
<android.webkit.WebSettings: android.webkit.WebSettings$PluginState getPluginState()> 
<gov.nist.javax.sip.header.Accept: float getQValue()> 
<android.widget.AbsListView: int getSolidColor()> 
<android.text.method.HideReturnsTransformationMethod: char[] getOriginal()> 
<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpRequest createConnectRequest(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext)> 
<javax.xml.validation.SchemaFactory: java.lang.Object getProperty(java.lang.String)> 
<gov.nist.core.DuplicateNameValueList: java.lang.String getParameter(java.lang.String)> 
<android.app.LocalActivityManager: android.app.Activity getCurrentActivity()> 
<android.content.ContextWrapper: java.io.File getExternalFilesDir(java.lang.String)> 
<android.hardware.usb.UsbEndpoint: int getMaxPacketSize()> 
<android.view.View: int getRawLayoutDirection()> 
<org.apache.xpath.SourceTreeManager: int getSourceTree(javax.xml.transform.Source,javax.xml.transform.SourceLocator,org.apache.xpath.XPathContext)> 
<javax.sql.StatementEvent: java.sql.SQLException getSQLException()> 
<javax.crypto.spec.DHGenParameterSpec: int getPrimeSize()> 
<libcore.util.ZoneInfo: int getRawOffset()> 
<android.text.method.DateTimeKeyListener: char[] getAcceptedChars()> 
<java.security.cert.CertPathValidator: java.security.cert.CertPathValidator getInstance(java.lang.String)> 
<android.app.ActivityManagerProxy: int getProcessLimit()> 
<gov.nist.javax.sip.stack.SIPDialog: long getRemoteSeqNumber()> 
<android.widget.TextView: int getMinEms()> 
<android.app.AppGlobals: int getIntCoreSetting(java.lang.String,int)> 
<android.test.mock.MockPackageManager: android.content.Intent getLaunchIntentForPackage(java.lang.String)> 
<java.text.DecimalFormatSymbols: java.lang.String getInternationalCurrencySymbol()> 
<org.apache.xalan.templates.ElemTemplate: java.lang.String getSystemId()> 
<android.location.LocationManager: android.location.Location getLastLocation()> 
<org.apache.xpath.axes.AxesWalker: int getLastPos(org.apache.xpath.XPathContext)> 
<android.view.FocusFinder: android.view.View getNextFocusable(android.view.View,java.util.ArrayList,int)> 
<android.webkit.WebSettings: boolean getUseWideViewPort()> 
<android.net.http.Request: java.lang.String getHostPort()> 
<org.apache.james.mime4j.util.PartialInputStream: int read()> 
<java.text.Collator: java.util.Locale[] getAvailableLocales()> 
<org.apache.james.mime4j.message.Multipart: java.lang.String getCharset()> 
<android.view.textservice.SpellCheckerSubtype: java.lang.String getExtraValue()> 
<java.net.InetAddress: byte[] getAddress()> 
<android.widget.AppSecurityPermissions: android.view.View getPermissionsView()> 
<org.apache.harmony.security.asn1.ASN1Any: java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream)> 
<org.apache.xpath.axes.FilterExprIterator: org.apache.xpath.Expression getInnerExpression()> 
<org.jivesoftware.smack.sasl.SASLAnonymous: java.lang.String getAuthenticationText(java.lang.String,java.lang.String,java.lang.String)> 
<android.content.res.TypedArray: boolean getValueAt(int,android.util.TypedValue)> 
<org.apache.xalan.templates.ElemValueOf: int getXSLToken()> 
<android.webkit.WebViewClassic: int getViewHeightWithTitle()> 
<android.icu.text.ArabicShaping: int getLink(char)> 
<android.media.AudioManager: int getDevicesForStream(int)> 
<gov.nist.core.DuplicateNameValueList: java.util.Iterator getNames()> 
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int)> 
<android.webkit.WebHistoryItemClassic: byte[] getFlattenedData()> 
<org.apache.harmony.security.x509.tsp.TimeStampReq: org.apache.harmony.security.x509.tsp.MessageImprint getMessageImprint()> 
<gov.nist.javax.sip.address.UserInfo: java.lang.String getUser()> 
<android.webkit.WebViewClassic: android.webkit.WebViewClient getWebViewClient()> 
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script$KernelID getKernelIDSrcIn()> 
<android.widget.EditText: android.text.Editable getText()> 
<org.apache.james.mime4j.field.datetime.parser.DateTimeParser: int getMilitaryZoneOffset(char)> 
<android.database.CursorToBulkCursorAdaptor: android.database.BulkCursorDescriptor getBulkCursorDescriptor()> 
<org.apache.harmony.security.x509.tsp.TSTInfo: java.math.BigInteger getSerialNumber()> 
<android.test.suitebuilder.TestGrouping: java.lang.String getFirstIncludedPackage()> 
<android.app.PendingIntent: android.content.IIntentSender getTarget()> 
<java.util.zip.Inflater: int getRemaining()> 
<java.util.jar.JarEntry: java.util.jar.Attributes getAttributes()> 
<org.apache.xpath.compiler.Compiler: org.apache.xpath.Expression[] getCompiledPredicates(int)> 
<android.widget.Spinner: int getDropDownHorizontalOffset()> 
<gov.nist.javax.sip.header.Via: java.lang.String getComment()> 
<android.media.videoeditor.MediaItem: java.lang.String getGeneratedImageClip()> 
<org.apache.http.impl.cookie.AbstractCookieSpec: java.util.Collection getAttribHandlers()> 
<android.net.LocalSocketImpl: android.net.LocalSocketAddress getSockAddress()> 
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: int getMaxTotal()> 
<org.apache.harmony.security.utils.ObjectIdentifier: int[] getOid()> 
<org.apache.harmony.security.x501.Name: javax.security.auth.x500.X500Principal getX500Principal()> 
<org.apache.http.ProtocolVersion: int getMajor()> 
<android.widget.TextView: int getMinLines()> 
<javax.net.ssl.DefaultHostnameVerifier: java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int)> 
<android.view.KeyEvent: int getMetaState()> 
<android.renderscript.RenderScriptGL: int getHeight()> 
<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)> 
<android.media.AudioService: int getDeviceForStream(int)> 
<org.apache.http.client.methods.HttpPost: java.lang.String getMethod()> 
<android.os.LatencyTimer: long[] getArray(java.lang.String)> 
<org.apache.xalan.templates.Stylesheet: org.apache.xalan.templates.WhiteSpaceInfo getPreserveSpace(int)> 
<org.apache.xml.serializer.ToStream: java.io.Writer getWriter()> 
<android.net.sip.SipManager: android.net.sip.SipProfile[] getListOfProfiles()> 
<org.apache.http.conn.params.ConnRouteParams: org.apache.http.conn.routing.HttpRoute getForcedRoute(org.apache.http.params.HttpParams)> 
<android.text.format.DateUtils: java.lang.String getAMPMString(int)> 
<org.apache.xml.serializer.utils.SystemIDResolver: java.lang.String getAbsolutePathFromRelativePath(java.lang.String)> 
<android.test.mock.MockCursor: int getInt(int)> 
<java.lang.Character: int getType(int)> 
<org.apache.harmony.security.provider.cert.X509CertImpl: boolean[] getKeyUsage()> 
<org.apache.xalan.templates.ElemVariable: org.apache.xpath.XPath getSelect()> 
<android.speech.srec.WaveHeader: int readInt(java.io.InputStream)> 
<android.content.pm.FeatureInfo: java.lang.String getGlEsVersion()> 
<android.accounts.ChooseAccountActivity: void getAuthDescriptions()> 
<org.apache.xpath.axes.LocPathIterator: int getLastPos(org.apache.xpath.XPathContext)> 
<java.lang.reflect.Field: boolean getBoolean(java.lang.Object)> 
<android.webkit.WebSettings: int getMinimumLogicalFontSize()> 
<android.emoji.EmojiFactory: int getMaximumAndroidPua()> 
<java.net.URLConnection: java.lang.String getHeaderField(int)> 
<android.widget.TextView: android.text.method.KeyListener getKeyListener()> 
<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList getRouteList()> 
<android.webkit.WebSettingsClassic: boolean getBlockNetworkLoads()> 
<android.animation.AnimatorSet: long getDuration()> 
<android.view.ViewConfiguration: int getScrollDefaultDelay()> 
<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream,java.lang.String)> 
<gov.nist.javax.sip.stack.TLSMessageChannel: int getViaPort()> 
<android.media.AudioRecord: int getPositionNotificationPeriod()> 
<android.telephony.SmsMessage: long getTimestampMillis()> 
<java.io.RandomAccessFile: java.io.FileDescriptor getFD()> 
<android.widget.AbsListView: int getLeftPaddingOffset()> 
<org.apache.xalan.processor.XSLTElementDef: java.lang.Class getClassObject()> 
<android.widget.Toast: android.view.View getView()> 
<android.opengl.GLLogWrapper: int getFogParamCount(int)> 
<android.media.AudioTrack: float getMinVolume()> 
<android.util.XmlPullAttributes: int getAttributeUnsignedIntValue(java.lang.String,java.lang.String,int)> 
<android.database.MergeCursor: long getLong(int)> 
<android.telephony.TelephonyManager: int getVoiceMessageCount()> 
<android.util.XmlPullAttributes: float getAttributeFloatValue(int,float)> 
<javax.obex.ClientOperation: int getMaxPacketSize()> 
<org.apache.harmony.security.x509.tsp.PKIStatus: org.apache.harmony.security.x509.tsp.PKIStatus getInstance(int)> 
<org.apache.harmony.xml.dom.AttrImpl: java.lang.String getNamespaceURI()> 
<org.apache.xml.utils.Context2: java.util.Enumeration getPrefixes()> 
<java.security.cert.PKIXParameters: java.util.List getCertStores()> 
<java.nio.MappedByteBufferAdapter: long getLong(int)> 
<java.security.cert.X509CRLEntry: javax.security.auth.x500.X500Principal getCertificateIssuer()> 
<org.apache.http.message.BasicHeader: java.lang.String getName()> 
<android.graphics.drawable.ScaleDrawable: int getIntrinsicHeight()> 
<android.filterfw.core.FilterFunction: android.filterfw.core.FilterContext getContext()> 
<org.apache.http.impl.io.ContentLengthInputStream: int read()> 
<android.util.Singleton: java.lang.Object get()> 
<org.apache.james.mime4j.field.address.parser.AddressListParserTokenManager: org.apache.james.mime4j.field.address.parser.Token getNextToken()> 
<android.location.LocationManager: java.util.List getAllProviders()> 
<android.speech.srec.WaveHeader: short getFormat()> 
<android.net.sip.SipProfile: boolean getSendKeepAlive()> 
<android.preference.SeekBarDialogPreference: android.widget.SeekBar getSeekBar(android.view.View)> 
<org.jivesoftware.smack.packet.Presence: int getPriority()> 
<org.apache.harmony.security.x509.AlgorithmIdentifier: java.lang.String getAlgorithm()> 
<org.apache.xml.serializer.dom3.LSSerializerImpl: java.lang.String getXMLEncoding(org.w3c.dom.Node)> 
<android.graphics.drawable.GradientDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()> 
<android.gesture.GestureStore: int getOrientationStyle()> 
<android.view.InputEvent: int getSequenceNumber()> 
<android.database.CursorWindow: int getInt(int,int)> 
<android.app.LoadedApk: java.lang.String[] getLibrariesFor(java.lang.String)> 
<org.apache.xalan.templates.ElemTemplate: org.apache.xml.utils.QName getName()> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl: java.io.OutputStream getOutputStream()> 
<org.xmlpull.v1.sax2.Driver: java.lang.String getType(java.lang.String)> 
<android.media.AudioService: void unloadSoundEffects()> 
<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteDatabase getDatabase()> 
<org.apache.xml.serializer.ToTextSAXHandler: java.util.Properties getOutputFormat()> 
<android.view.View: int getVisibility()> 
<android.net.ConnectivityManager: boolean getBackgroundDataSetting()> 
<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)> 
<gov.nist.javax.sip.header.TimeStamp: int getTimeDelay()> 
<java.text.CollationElementIterator: int getOffset()> 
<java.util.jar.Attributes: java.lang.Object get(java.lang.Object)> 
<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator(java.text.AttributedCharacterIterator$Attribute[])> 
<android.view.LayoutInflater: android.view.LayoutInflater$Factory getFactory()> 
<org.jivesoftware.smackx.packet.DiscoverInfo: java.lang.String getChildElementXML()> 
<android.net.DnsPinger: android.net.LinkProperties getCurrentLinkProperties()> 
<android.webkit.ZoomManager: android.view.ScaleGestureDetector getScaleGestureDetector()> 
<java.util.LinkedList: java.lang.Object getLast()> 
<org.apache.harmony.security.asn1.BerOutputStream: void getSetOfLength(org.apache.harmony.security.asn1.ASN1SetOf)> 
<org.apache.commons.codec.language.Soundex: char getMappingCode(java.lang.String,int)> 
<javax.net.ssl.DefaultSSLSocketFactory: java.lang.String[] getSupportedCipherSuites()> 
<android.app.StatusBarManager: com.android.internal.statusbar.IStatusBarService getService()> 
<gov.nist.javax.sip.header.ims.PChargingFunctionAddresses: java.util.ListIterator getChargingCollectionFunctionAddresses()> 
<android.webkit.WebSettingsClassic: android.webkit.WebSettings$LayoutAlgorithm getLayoutAlgorithm()> 
<org.apache.xalan.templates.ElemTemplate: org.apache.xalan.templates.StylesheetRoot getStylesheetRoot()> 
<org.apache.harmony.xnet.provider.jsse.SSLServerSocketFactoryImpl: java.lang.String[] getSupportedCipherSuites()> 
<libcore.net.http.HttpURLConnectionImpl: java.io.InputStream getErrorStream()> 
<android.test.RenamingDelegatingContext: java.io.File getFileStreamPath(java.lang.String)> 
<android.view.Display: int getFlags()> 
<java.text.StringCharacterIterator: int getEndIndex()> 
<android.filterpacks.imageproc.TintFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)> 
<android.view.Choreographer: long getFrameTimeNanos()> 
<android.webkit.WebViewClassic: android.webkit.WebBackForwardListClient getWebBackForwardListClient()> 
<java.util.Calendar: int getActualMaximum(int)> 
<java.security.Provider: java.lang.String getProperty(java.lang.String)> 
<libcore.net.http.ResponseHeaders: java.util.Date getLastModified()> 
<org.apache.james.mime4j.field.ContentTransferEncodingField: java.lang.String getEncoding(org.apache.james.mime4j.field.ContentTransferEncodingField)> 
<java.net.Socks4Message: int getIP()> 
<android.os.Debug: int getGlobalFreedSize()> 
<java.sql.DriverManager: java.sql.Connection getConnection(java.lang.String)> 
<java.net.URISyntaxException: java.lang.String getMessage()> 
<org.apache.harmony.security.asn1.BerInputStream: int read()> 
<android.text.SpannableStringBuilder: int getTextWidths(int,int,float[],android.graphics.Paint)> 
<android.widget.LinearLayout: float getWeightSum()> 
<android.app.Fragment: int getTargetRequestCode()> 
<android.telephony.TelephonyManager: int getPhoneType()> 
<gov.nist.javax.sip.header.RetryAfter: int getDuration()> 
<android.widget.CursorTreeAdapter: long getGroupId(int)> 
<libcore.net.http.HttpsURLConnectionImpl: java.util.Map getHeaderFields()> 
<org.apache.harmony.security.PublicKeyImpl: java.lang.String getFormat()> 
<org.apache.xalan.templates.ElemForEach: org.apache.xalan.templates.ElemTemplateElement getTemplateMatch()> 
<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.FromHeader getFromHeader()> 
<dalvik.system.DexFile: java.lang.String getName()> 
<dalvik.system.profiler.SamplingProfiler: dalvik.system.profiler.HprofData getHprofData()> 
<android.media.audiofx.AudioEffect: int getParameter(int,byte[])> 
<android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat: android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo)> 
<java.net.URLConnection: java.lang.Object getContent()> 
<org.apache.xml.utils.URI: java.lang.String getFragment()> 
<android.content.ContentProvider: android.content.pm.PathPermission[] getPathPermissions()> 
<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams getOverrideParams()> 
<org.apache.harmony.xml.dom.AttrImpl: java.lang.String getNodeName()> 
<javax.obex.HeaderSet: java.lang.Object getHeader(int)> 
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: int getMaxForRoute(org.apache.http.conn.routing.HttpRoute)> 
<android.widget.AbsSeekBar: int getKeyProgressIncrement()> 
<org.apache.xalan.extensions.ExtensionNamespacesManager: java.util.Vector getExtensions()> 
<android.app.SearchableInfo: java.lang.String getSuggestPath()> 
<org.apache.xalan.templates.XUnresolvedVariable: java.lang.String getTypeString()> 
<android.webkit.BrowserFrame: void loadFinished(java.lang.String,int,boolean)> 
<android.gesture.GestureLibrary: java.util.ArrayList getGestures(java.lang.String)> 
<org.apache.xalan.templates.ElemSort: org.apache.xpath.XPath getSelect()> 
<org.apache.xml.serializer.ToSAXHandler: boolean getShouldOutputNSAttr()> 
<android.filterfw.core.VertexFrame: int[] getInts()> 
<org.apache.harmony.xnet.provider.jsse.DefaultSSLContextImpl: javax.net.ssl.TrustManager[] getTrustManagers()> 
<android.util.EventLog: java.lang.String getTagName(int)> 
<android.widget.RatingBar: float getStepSize()> 
<jp.co.omronsoft.openwnn.TextCandidatesViewManager: jp.co.omronsoft.openwnn.WnnWord getWnnWord(int)> 
<org.apache.xpath.objects.XString: void getChars(int,int,char[],int)> 
<android.widget.ImageView: boolean getBaselineAlignBottom()> 
<java.util.concurrent.CyclicBarrier: int getNumberWaiting()> 
<javax.crypto.spec.SecretKeySpec: java.lang.String getFormat()> 
<android.text.style.URLSpan: java.lang.String getURL()> 
<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String,java.lang.CharSequence)> 
<org.apache.xml.dtm.ref.SecuritySupport: java.lang.ClassLoader getSystemClassLoader()> 
<java.util.logging.Logger: java.util.logging.Level getLevel()> 
<org.apache.harmony.xnet.provider.jsse.SSLParametersImpl: boolean getEnableSessionCreation()> 
<android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getFragmentManager()> 
<android.content.Intent: char getCharExtra(java.lang.String,char)> 
<gov.nist.javax.sip.header.MaxForwards: int getMaxForwards()> 
<org.jivesoftware.smack.util.PacketParserUtils: java.lang.String getStringOrDefault(com.google.common.io.protocol.ProtoBuf,int,java.lang.String)> 
<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair getParameter(int)> 
<org.jivesoftware.smack.packet.DataMessage: java.lang.String getCategory()> 
<org.apache.harmony.xml.ExpatReader: org.xml.sax.ext.LexicalHandler getLexicalHandler()> 
<org.apache.xpath.axes.NodeSequence: int getWhatToShow()> 
<net.oauth.OAuthMessage: java.util.List getParameters()> 
<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.io.HttpMessageParser createResponseParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams)> 
<net.oauth.OAuthMessage: java.lang.String getAuthorizationHeader(java.lang.String)> 
<jp.co.omronsoft.openwnn.EN.OpenWnnEngineEN: jp.co.omronsoft.openwnn.WnnWord getCandidate(int)> 
<java.security.UnresolvedPermission: java.security.cert.Certificate[] getUnresolvedCerts()> 
<android.renderscript.ScriptIntrinsicConvolve3x3: android.renderscript.Script$FieldID getFieldID_Input()> 
<android.net.TrafficStats: int getThreadStatsTag()> 
<android.media.videoeditor.MediaImageItem: int getWidthByAspectRatioAndHeight(int,int)> 
<gov.nist.core.LexerCore: java.text.ParseException createParseException()> 
<org.apache.http.auth.NTUserPrincipal: java.lang.String getDomain()> 
<android.graphics.BitmapRegionDecoder: int getWidth()> 
<gov.nist.core.GenericObjectList: java.lang.String getIndentation()> 
<org.apache.xml.serializer.SerializerBase: java.lang.String getMediaType()> 
<android.webkit.WebViewCore: void stopLoading()> 
<org.apache.xalan.templates.ElemExtensionScript: int getXSLToken()> 
<gov.nist.javax.sip.message.SIPMessage: java.util.Iterator getHeaders()> 
<org.apache.harmony.security.x501.AttributeTypeAndValue: org.apache.harmony.security.utils.ObjectIdentifier getType()> 
<javax.crypto.spec.PBEKeySpec: char[] getPassword()> 
<android.content.res.CompatibilityInfo: android.content.res.CompatibilityInfo$Translator getTranslator()> 
<net.oauth.client.httpclient4.HttpMethodResponse: int getStatusCode()> 
<java.net.ResponseCache: java.net.ResponseCache getDefault()> 
<org.apache.harmony.xml.dom.InnerNodeImpl: org.w3c.dom.NodeList getChildNodes()> 
<java.util.UUID: long getLeastSignificantBits()> 
<android.os.Handler: android.os.Message getPostMessage(java.lang.Runnable,java.lang.Object)> 
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer$ValueSanitizer getSpaceLegal()> 
<org.apache.xpath.operations.UnaryOperation: org.apache.xpath.Expression getOperand()> 
<org.jivesoftware.smack.XMPPConnection: com.google.android.gsf.gtalkservice.rmq.Rmq2Manager getRmq2Manager()> 
<java.net.PlainDatagramSocketImpl: java.lang.Object getOption(int)> 
<android.database.CursorWrapper: int getPosition()> 
<android.widget.Editor: long getLastTouchOffsets()> 
<android.filterfw.core.FrameFormat: int getNumberOfDimensions()> 
<android.media.RingtoneManager: android.net.Uri getValidRingtoneUri(android.content.Context)> 
<gov.nist.javax.sip.header.Contact: boolean getWildCardFlag()> 
<android.test.ActivityUnitTestCase: android.app.Activity getActivity()> 
<org.apache.commons.io.FilenameUtils: java.lang.String getFullPath(java.lang.String)> 
<android.net.wifi.WifiStateMachine: int getMaxDhcpRetries()> 
<android.net.ProxyProperties: java.net.InetSocketAddress getSocketAddress()> 
<org.apache.harmony.security.asn1.ASN1UTCTime: org.apache.harmony.security.asn1.ASN1UTCTime getInstance()> 
<org.apache.harmony.security.provider.cert.X509CRLImpl: byte[] getSignature()> 
<android.net.http.ErrorStrings: java.lang.String getString(int,android.content.Context)> 
<android.preference.MultiSelectListPreference: boolean[] getSelectedItems()> 
<org.apache.xpath.axes.OneStepIterator: int getNextNode()> 
<android.opengl.GLLogWrapper: java.lang.String getShadeModel(int)> 
<android.view.KeyEvent: long getDownTime()> 
<android.opengl.GLLogWrapper: java.lang.String getHintTarget(int)> 
<android.bluetooth.BluetoothAdapter: java.lang.String getName()> 
<android.content.Intent: android.content.Intent getIntentOld(java.lang.String)> 
<org.apache.xpath.Expression: java.lang.String getPublicId()> 
<android.app.ApplicationPackageManager: java.lang.CharSequence getCachedString(android.app.ApplicationPackageManager$ResourceName)> 
<org.apache.xml.utils.SecuritySupport: org.apache.xml.utils.SecuritySupport getInstance()> 
<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme getScheme(org.apache.http.HttpHost)> 
<java.security.cert.CertStore: java.security.Provider getProvider()> 
<android.renderscript.Type: int getCount()> 
<org.apache.xalan.transformer.KeyTable: java.util.Hashtable getRefsTable()> 
<junit.runner.BaseTestRunner: boolean useReloadingTestSuiteLoader()> 
<android.renderscript.Type: int getZ()> 
<android.renderscript.Type: int getY()> 
<android.renderscript.Type: int getX()> 
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.UserTokenHandler getUserTokenHandler()> 
<org.apache.xpath.functions.SecuritySupport12: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)> 
<android.test.mock.MockResources: java.lang.CharSequence[] getTextArray(int)> 
<android.widget.TabWidget: android.view.View getChildTabViewAt(int)> 
<android.telephony.TelephonyManager: java.lang.String getCdmaEriText()> 
<jp.co.omronsoft.openwnn.TextCandidatesViewManager: int getCandidateMinimumWidth()> 
<android.text.SpannableStringBuilder: int getSpanFlags(java.lang.Object)> 
<android.webkit.AccessibilityInjectorFallback: int getAxisForGranularity(int)> 
<org.jivesoftware.smackx.provider.MUCUserProvider: org.jivesoftware.smackx.packet.MUCUser$Destroy parseDestroy(org.xmlpull.v1.XmlPullParser)> 
<android.inputmethodservice.Keyboard: int getShiftKeyIndex()> 
<java.text.NumberFormat: java.lang.Object parseObject(java.lang.String,java.text.ParsePosition)> 
<org.apache.xml.dtm.ref.DTMDefaultBase: java.lang.String getNodeNameX(int)> 
<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()> 
<android.hardware.Camera: android.hardware.Camera$Parameters getParameters()> 
<android.app.SearchableInfo: int getVoiceLanguageId()> 
<android.preference.PreferenceActivity: java.util.List getHeaders()> 
<java.lang.StackTraceElement: java.lang.String getMethodName()> 
<org.apache.xpath.compiler.Compiler: int getWhatToShow(int)> 
<android.os.Looper: android.os.Looper getMainLooper()> 
<gov.nist.javax.sip.stack.SIPDialogErrorEvent: int getErrorID()> 
<net.oauth.OAuthMessage: java.lang.String getSignatureMethod()> 
<android.net.http.AndroidHttpClient: org.apache.http.params.HttpParams getParams()> 
<android.support.v4.widget.ScrollerCompat: float getCurrVelocity()> 
<gov.nist.javax.sip.stack.SIPTransaction: int getRetransmitTimer()> 
<gov.nist.javax.sip.header.WWWAuthenticate: javax.sip.address.URI getURI()> 
<org.jivesoftware.smack.packet.Session: java.lang.String getChildElementXML()> 
<android.test.mock.MockContext: int getWallpaperDesiredMinimumWidth()> 
<android.support.v4.view.AccessibilityDelegateCompat: java.lang.Object getBridge()> 
<org.apache.harmony.xnet.provider.jsse.TrustedCertificateStore: java.security.cert.Certificate getCertificate(java.lang.String)> 
<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String,java.security.Provider)> 
<android.content.ContentService: java.util.List getCurrentSyncs()> 
<java.security.ProtectionDomain: java.lang.ClassLoader getClassLoader()> 
<org.apache.xalan.templates.ElemAttributeSet: java.lang.String getNodeName()> 
<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)> 
<java.net.ServerSocket: int getLocalPort()> 
<android.widget.Scroller: int getCurrY()> 
<android.widget.Scroller: int getCurrX()> 
<android.net.http.SslError: java.lang.String getUrl()> 
<org.apache.xalan.transformer.TransformerImpl: int getCurrentTemplateElementsCount()> 
<android.view.View: float getScaleY()> 
<android.view.View: float getScaleX()> 
<java.io.EmulatedFieldsForLoading: byte get(java.lang.String,byte)> 
<org.apache.harmony.xml.dom.InnerNodeImpl: org.w3c.dom.Node getFirstChild()> 
<android.support.v4.view.ViewCompat: int getOverScrollMode(android.view.View)> 
<javax.crypto.ExemptionMechanism: javax.crypto.ExemptionMechanism getInstance(java.lang.String)> 
<net.oauth.client.OAuthClient: void getRequestToken(net.oauth.OAuthAccessor,java.lang.String,java.util.Collection)> 
<gov.nist.javax.sip.header.StatusLine: int getStatusCode()> 
<android.webkit.ByteArrayBuilder: int getByteSize()> 
<android.widget.TextView: int getRightPaddingOffset()> 
<android.app.SearchableInfo: android.app.SearchableInfo getActivityMetaData(android.content.Context,android.content.pm.ActivityInfo,int)> 
<java.text.MessageFormat: java.text.Format[] getFormats()> 
<org.apache.xpath.axes.LocPathIterator: int getAxis()> 
<java.nio.HeapByteBuffer: short getShort()> 
<org.jivesoftware.smack.packet.Presence: org.jivesoftware.smack.packet.Presence$ClientType getClientType()> 
<android.widget.TextView: int getTotalPaddingRight()> 
<android.database.MatrixCursor: int getInt(int)> 
<android.webkit.BrowserFrame: int loadType()> 
<android.media.videoeditor.AudioTrack: long getTimelineDuration()> 
<android.nfc.tech.MifareUltralight: int getTimeout()> 
<android.content.Intent: java.util.Set getCategories()> 
<org.apache.xalan.templates.ElemApplyTemplates: int getXSLToken()> 
<android.app.AliasActivity: android.content.Intent parseAlias(org.xmlpull.v1.XmlPullParser)> 
<android.renderscript.Matrix4f: void loadPerspective(float,float,float,float)> 
<android.text.TextUtils: java.lang.CharSequence getReverse(java.lang.CharSequence,int,int)> 
<org.apache.http.impl.cookie.BasicClientCookie: java.lang.String getAttribute(java.lang.String)> 
<android.net.ConnectivityManager: android.net.LinkProperties getLinkProperties(int)> 
<android.filterpacks.imageproc.BrightnessFilter: android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)> 
<org.apache.xalan.templates.OutputProperties: java.lang.String getProperty(org.apache.xml.utils.QName)> 
<org.apache.http.util.EncodingUtils: byte[] getAsciiBytes(java.lang.String)> 
<android.net.Proxy: java.lang.String getDefaultHost()> 
<android.database.AbstractWindowedCursor: byte[] getBlob(int)> 
<android.database.CursorWindow: int getType(int,int)> 
<org.apache.harmony.security.x509.AccessDescription: byte[] getEncoded()> 
<java.net.Socks4Message: int getCommandOrResult()> 
<org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2: java.lang.String getNodeName(int)> 
<android.content.Intent: android.content.ComponentName getComponent()> 
<android.widget.CalendarView: boolean getShowWeekNumber()> 
<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()> 
<org.json.JSONTokener: org.json.JSONObject readObject()> 
<android.util.TypedValue: float getFloat()> 
<gov.nist.javax.sip.header.RAck: long getCSeqNumberLong()> 
<android.view.View: int getWindowAttachCount()> 
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)> 
<org.apache.http.entity.BufferedHttpEntity: java.io.InputStream getContent()> 
<javax.net.ssl.SSLServerSocketFactory: javax.net.ServerSocketFactory getDefault()> 
<java.util.prefs.NodeSet: int getLength()> 
<org.apache.xml.dtm.ref.DTMNodeProxy: org.w3c.dom.Element getElementById(java.lang.String)> 
<gov.nist.javax.sip.header.AcceptLanguage: java.util.Locale getAcceptLanguage()> 
<android.os.Looper: java.lang.Thread getThread()> 
<gov.nist.javax.sip.header.extensions.Replaces: java.lang.String getCallId()> 
<android.support.v4.util.LongSparseArray: java.lang.Object get(long,java.lang.Object)> 
<android.webkit.WebChromeClient: android.graphics.Bitmap getDefaultVideoPoster()> 
<android.preference.Preference: android.view.View getView(android.view.View,android.view.ViewGroup)> 
<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint getPaint()> 
<java.util.DuplicateFormatFlagsException: java.lang.String getFlags()> 
<libcore.net.http.HttpsURLConnectionImpl: int getContentLength()> 
<android.media.AudioService: int getMasterVolume()> 
<org.apache.xml.utils.DOMHelper: org.w3c.dom.Node getParentOfNode(org.w3c.dom.Node)> 
<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)> 
<android.util.XmlPullAttributes: int getAttributeNameResource(int)> 
<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getTextBeforeCursor(int,int)> 
<android.animation.ValueAnimator: java.lang.Object getAnimatedValue()> 
<org.apache.harmony.security.x509.tsp.TimeStampReq: java.lang.Boolean getCertReq()> 
<java.net.PlainSocketImpl: java.net.Socks4Message socksReadReply()> 
<android.text.style.LocaleSpan: java.util.Locale getLocale()> 
<android.os.ParcelFileDescriptor: int getFd()> 
<android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat: java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo)> 
<android.widget.RemoteViewsAdapter: int getViewTypeCount()> 
<org.apache.xml.serializer.Encodings: java.io.Writer getWriter(java.io.OutputStream,java.lang.String)> 
<android.webkit.WebViewClassic: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> 
<java.security.spec.ECPrivateKeySpec: java.math.BigInteger getS()> 
<org.apache.http.params.HttpConnectionParams: boolean getTcpNoDelay(org.apache.http.params.HttpParams)> 
<libcore.net.http.HttpsURLConnectionImpl: java.io.OutputStream getOutputStream()> 
<javax.sip.IOExceptionEvent: java.lang.String getTransport()> 
<java.nio.HeapByteBuffer: byte get()> 
<android.media.videoeditor.MediaProperties: int getSupportedMaxVolume()> 
<android.renderscript.Element: int getSubElementCount()> 
<org.jivesoftware.smack.util.Cache: long getCacheHits()> 
<java.security.Signature: java.security.AlgorithmParameters getParameters()> 
<android.database.CursorWrapper: int getCount()> 
<javax.crypto.Cipher: int getBlockSize()> 
<android.bluetooth.BluetoothAdapter: java.lang.String getAddress()> 
<android.view.textservice.SpellCheckerInfo: java.lang.String getPackageName()> 
<android.app.ActivityManagerProxy: java.util.List getRecentTasks(int,int,int)> 
<org.apache.xalan.templates.ElemParam: int getXSLToken()> 
<org.apache.commons.codec.net.QCodec: java.lang.String decode(java.lang.String)> 
<java.net.Authenticator: java.lang.String getRequestingScheme()> 
<org.apache.harmony.luni.lang.reflect.GenericSignatureParser: org.apache.harmony.luni.lang.reflect.ImplForVariable parseTypeVariableSignature()> 
<java.io.ObjectStreamField: char getTypeCode()> 
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: int getCurrentItemIndex(java.lang.Object)> 
<android.net.LocalSocketImpl: java.lang.Object getOption(int)> 
<android.preference.Preference: int getOrder()> 
<android.util.XmlPullAttributes: int getIdAttributeResourceValue(int)> 
<android.net.NetworkInfo: java.lang.String getReason()> 
<android.net.wifi.p2p.WifiP2pManager: android.os.Messenger getMessenger()> 
<android.support.v4.app.HCSparseArray: java.lang.Object get(int)> 
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.String getTarget()> 
<java.lang.Class: java.lang.reflect.Method[] getMethods()> 
<android.view.MotionEvent: int getEdgeFlags()> 
<dalvik.system.DexPathList: dalvik.system.DexFile loadDexFile(java.io.File,java.io.File)> 
<java.util.MissingFormatArgumentException: java.lang.String getFormatSpecifier()> 
<android.net.NetworkStatsHistory: int getIndexBefore(long)> 
<org.apache.harmony.security.asn1.BerInputStream: int getLength(byte[])> 
<android.app.LoadedApk: java.lang.String getAppDir()> 
<gov.nist.javax.sip.parser.SubscriptionStateParser: gov.nist.javax.sip.header.SIPHeader parse()> 
<java.util.Date: int getDay()> 
<android.graphics.Region: android.graphics.Rect getBounds()> 
<org.apache.xalan.transformer.TrAXFilter: org.apache.xalan.transformer.TransformerImpl getTransformer()> 
<gov.nist.javax.sip.header.MediaRange: java.lang.String getType()> 
<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler getResultTreeHandler()> 
<org.apache.http.message.AbstractHttpMessage: org.apache.http.params.HttpParams getParams()> 
<org.jivesoftware.smack.XMPPConnection: java.lang.String getServiceName()> 
<jp.co.omronsoft.openwnn.TextCandidatesViewManager: int getCandidateViewDivison()> 
<java.io.OutputStreamWriter: java.lang.String getEncoding()> 
<android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.Context,int)> 
<org.apache.harmony.security.asn1.ASN1Type: java.lang.Object decode(byte[])> 
<org.apache.xalan.templates.ElemElement: org.apache.xalan.templates.AVT getNamespace()> 
<android.text.BoringLayout: int getBottomPadding()> 
<java.io.EmulatedFields: byte get(java.lang.String,byte)> 
<org.apache.xalan.templates.StylesheetComposed: int getEndImportCountComposed()> 
<android.util.DisplayMetrics: int getDeviceDensity()> 
<java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)> 
<android.location.Location: long getElapsedRealtimeNanos()> 
<android.database.MatrixCursor: int getType(int)> 
<gov.nist.javax.sip.clientauthutils.AuthenticationHelperImpl: javax.sip.header.AuthorizationHeader getAuthorization(java.lang.String,java.lang.String,java.lang.String,javax.sip.header.WWWAuthenticateHeader,gov.nist.javax.sip.clientauthutils.UserCredentials)> 
<android.app.ListActivity: int getSelectedItemPosition()> 
<org.apache.commons.io.output.ThresholdingOutputStream: int getThreshold()> 
<org.apache.harmony.security.asn1.BerInputStream: int getTagOffset()> 
<android.widget.NumberPicker: android.widget.NumberPicker$Formatter getTwoDigitFormatter()> 
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: java.lang.String getInstanceName()> 
<android.webkit.WebBackForwardListClassic: android.webkit.WebHistoryItem getCurrentItem()> 
<android.net.LinkSocket: android.net.LinkCapabilities getCapabilities()> 
<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getPeerAddress()> 
<android.filterpacks.imageproc.AlphaBlendFilter: android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)> 
<org.apache.harmony.xml.dom.EntityImpl: java.lang.String getXmlEncoding()> 
<java.net.CookieStoreImpl: java.util.List getURIs()> 
<android.telephony.cdma.CdmaCellLocation: int getNetworkId()> 
<org.apache.xalan.templates.ElemExtensionDecl: java.lang.String getElement(int)> 
<java.util.concurrent.atomic.AtomicLong: long getAndIncrement()> 
<android.nfc.tech.MifareClassic: android.nfc.tech.MifareClassic get(android.nfc.Tag)> 
<android.graphics.Paint: int getTextRunCursor(java.lang.CharSequence,int,int,int,int,int)> 
<android.widget.ToggleButton: java.lang.CharSequence getTextOff()> 
<android.media.videoeditor.EffectKenBurns: void getKenBurnsSettings(android.graphics.Rect,android.graphics.Rect)> 
<android.media.AudioManager: int getMasterStreamType()> 
<android.app.SearchableInfo: boolean getVoiceSearchLaunchWebSearch()> 
<org.apache.http.auth.NTCredentials: java.lang.String getWorkstation()> 
<java.util.concurrent.ThreadPoolExecutor: long getTaskCount()> 
<org.xmlpull.v1.sax2.Driver: org.xml.sax.DTDHandler getDTDHandler()> 
<org.ccil.cowan.tagsoup.Schema: org.ccil.cowan.tagsoup.ElementType getElementType(java.lang.String)> 
<android.os.CommonTimeConfig: java.net.InetSocketAddress getMasterElectionEndpoint()> 
<android.os.UserHandle: int getAppId(int)> 
<android.app.SearchManager: android.content.ComponentName getWebSearchActivity()> 
<android.graphics.drawable.Drawable: int getLevel()> 
<android.app.Instrumentation: android.os.Bundle getBinderCounts()> 
<android.mtp.MtpDevice: java.lang.String getDeviceName()> 
<android.location.Country: long getTimestamp()> 
<android.webkit.WebViewClassic: int getVisibleTitleHeightImpl()> 
<android.graphics.Canvas: javax.microedition.khronos.opengles.GL getGL()> 
<android.test.AndroidTestRunner: java.lang.Class loadTestClass(java.lang.String)> 
<android.net.LinkCapabilities: java.lang.String get(int)> 
<org.xml.sax.SAXException: java.lang.Exception getException()> 
<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMergeId()> 
<org.apache.xpath.XPathContext: java.util.Stack getAxesIteratorStackStacks()> 
<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()> 
<org.jivesoftware.smack.packet.StreamError: java.lang.String getText()> 
<org.apache.xml.utils.AttList: java.lang.String getValue(java.lang.String)> 
<java.io.File: java.lang.String getCanonicalPath()> 
<android.content.pm.LabeledIntent: int getLabelResource()> 
<org.apache.harmony.xnet.provider.jsse.SSLSessionImpl: javax.security.cert.X509Certificate[] getPeerCertificateChain()> 
<org.kxml2.io.KXmlParser: java.lang.String readName()> 
<android.hardware.usb.UsbDevice: java.lang.String getDeviceName()> 
<android.net.NetworkInfo: java.lang.String getTypeName()> 
<org.apache.xml.utils.UnImplNode: java.lang.String getLocalName()> 
<android.graphics.drawable.Drawable: int getIntrinsicHeight()> 
<android.test.mock.MockPackageManager: java.lang.String[] getSystemSharedLibraryNames()> 
<android.content.res.TypedArray: float getFloat(int,float)> 
<android.test.mock.MockResources: java.lang.CharSequence getText(int)> 
<android.webkit.WebViewClassic: int getVisibleTitleHeight()> 
<org.apache.xalan.templates.ElemTemplate: java.lang.String getPublicId()> 
<java.util.GregorianCalendar: java.util.Date getGregorianChange()> 
<android.opengl.GLLogWrapper: java.lang.String getTextureEnvPName(int)> 
<java.lang.Package: java.lang.String getImplementationVendor()> 
<android.util.JsonReader: int getColumnNumber()> 
<android.webkit.WebViewClassic: int getTextScrollDelta(float,long)> 
<org.jivesoftware.smackx.packet.VCard: java.lang.String getFirstName()> 
<android.media.videoeditor.MediaItem: android.media.videoeditor.MediaArtistNativeHelper getNativeContext()> 
<org.apache.xml.dtm.ref.DTMDocumentImpl: org.apache.xml.utils.XMLString getStringValue(int)> 
<org.apache.xml.dtm.ref.DTMDefaultBase: java.lang.String getNamespaceFromExpandedNameID(int)> 
<android.text.Html: java.lang.String getOpenParaTagWithDirection(android.text.Spanned,int,int)> 
<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetRoot$ComposeState getComposeState()> 
<org.apache.xml.serializer.dom3.LSSerializerImpl: org.w3c.dom.DOMConfiguration getDomConfig()> 
<android.database.MergeCursor: float getFloat(int)> 
<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.templates.StylesheetRoot getStylesheetRoot()> 
<org.apache.harmony.security.pkcs10.CertificationRequestInfo: org.apache.harmony.security.x501.Name getSubject()> 
<org.apache.xml.dtm.ref.DTMNodeProxy: java.lang.Object getFeature(java.lang.String,java.lang.String)> 
<android.webkit.WebViewCore: android.webkit.WebViewCore$TextSelectionData createTextSelection(int,int,int)> 
<org.apache.xalan.processor.StylesheetHandler: org.apache.xalan.templates.ElemTemplateElement getElemTemplateElement()> 
<android.nfc.tech.NfcB: android.nfc.tech.NfcB get(android.nfc.Tag)> 
<android.nfc.tech.NfcA: android.nfc.tech.NfcA get(android.nfc.Tag)> 
<org.apache.harmony.security.x509.Extension: byte[] getEncoded()> 
<android.opengl.GLLogWrapper: int getMaterialParamCount(int)> 
<org.apache.harmony.xml.dom.InnerNodeImpl: java.lang.String getTextContent()> 
<android.text.SpannableStringBuilder: int getTextRunCursor(int,int,int,int,int,android.graphics.Paint)> 
<org.apache.xml.serializer.ToStream: int getIndentAmount()> 
<android.nfc.tech.NfcF: android.nfc.tech.NfcF get(android.nfc.Tag)> 
<android.media.videoeditor.Transition: android.media.videoeditor.MediaItem getBeforeMediaItem()> 
<android.net.LinkProperties: java.lang.String getInterfaceName()> 
<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()> 
<android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)> 
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: java.lang.String getSupplicantQuery()> 
<org.jivesoftware.smackx.packet.MUCUser: org.jivesoftware.smackx.packet.MUCUser$Invite getInvite()> 
<android.location.Geofence: double getLatitude()> 
<android.nfc.tech.NfcV: android.nfc.tech.NfcV get(android.nfc.Tag)> 
<libcore.icu.ICU: java.util.Locale[] getAvailableDateFormatLocales()> 
<org.apache.xalan.xslt.SecuritySupport: java.io.FileInputStream getFileInputStream(java.io.File)> 
<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.extensions.ExtensionsTable getExtensionsTable()> 
<android.graphics.YuvImage: int getYuvFormat()> 
<android.graphics.drawable.InsetDrawable: int getIntrinsicWidth()> 
<android.widget.AbsListView: int getListPaddingLeft()> 
<android.view.View: int getHorizontalFadingEdgeLength()> 
<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.ServerLogger getServerLogger()> 
<android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()> 
<android.webkit.HTML5VideoView: boolean getPauseDuringPreparing()> 
<java.io.StringReader: int read()> 
<java.nio.DoubleBuffer: java.nio.DoubleBuffer get(double[],int,int)> 
