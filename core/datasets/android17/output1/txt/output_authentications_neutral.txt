<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.AuthenticationHandler getTargetAuthenticationHandler()> 
<android.bluetooth.BluetoothInputDevice: java.util.List getConnectedDevices()> 
<android.filterfw.core.Filter: int getNumberOfConnectedInputs()> 
<java.sql.DriverManager: java.sql.Connection getConnection(java.lang.String,java.lang.String,java.lang.String)> 
<org.apache.harmony.xnet.provider.jsse.SSLSocketWrapper: boolean isConnected()> 
<android.nfc.tech.NfcV: boolean isConnected()> 
<android.nfc.tech.NfcF: boolean isConnected()> 
<android.bluetooth.BluetoothHeadset: boolean isAudioConnected(android.bluetooth.BluetoothDevice)> 
<android.nfc.tech.NfcB: boolean isConnected()> 
<android.nfc.tech.NfcA: boolean isConnected()> 
<java.net.Socket: boolean isConnected()> 
<org.jivesoftware.smack.XMPPConnection: boolean isConnected()> 
<android.speech.tts.TextToSpeech: boolean connectToEngine(java.lang.String)> 
<android.bluetooth.BluetoothHeadset: java.util.List getConnectedDevices()> 
<android.widget.AbsListView: boolean onRemoteAdapterConnected()> 
<android.net.http.AndroidHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()> 
<android.widget.ExpandableListView: int getFlatPositionForConnector(int)> 
<android.nfc.tech.Ndef: boolean isConnected()> 
<org.apache.http.impl.auth.NTLMScheme: boolean isConnectionBased()> 
<android.bluetooth.BluetoothPan: java.util.List getConnectedDevices()> 
<android.net.wifi.WifiNative: boolean p2pCancelConnect()> 
<android.bluetooth.BluetoothAdapter: boolean enableNoAutoConnect()> 
<android.widget.AdapterViewAnimator: boolean onRemoteAdapterConnected()> 
<android.filterfw.core.InputPort: boolean isConnected()> 
<java.nio.SelectionKeyImpl: boolean isConnected()> 
<android.nfc.tech.NdefFormatable: boolean isConnected()> ->_AUTHENTICATIONS_NEUTRAL_
<android.nfc.tech.MifareClassic: boolean isConnected()> 
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.AuthenticationHandler getProxyAuthenticationHandler()> 
<android.net.wifi.WifiNative: boolean reconnect()> 
<android.net.LocalSocket: boolean isConnected()> 
<android.view.inputmethod.InputBinding: android.os.IBinder getConnectionToken()> 
<libcore.net.http.ResponseHeaders: java.lang.String getConnection()> 
<org.jivesoftware.smack.XMPPConnection: boolean isSecureConnection()> 
<java.net.DatagramSocket: boolean isConnected()> 
<org.apache.harmony.security.pkcs7.SignerInfo: byte[] getEncodedAuthenticatedAttributes()> 
<org.jivesoftware.smack.XMPPConnection: int getLocalConnectionId()> 
<java.net.URLConnection: int getConnectTimeout()> 
<android.accounts.AccountManager: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes()> 
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()> 
<libcore.net.http.HttpEngine: java.net.HttpURLConnection getHttpConnectionToCache()> 
<android.view.inputmethod.InputBinding: android.view.inputmethod.InputConnection getConnection()> 
<android.bluetooth.BluetoothA2dp: java.util.List getConnectedDevices()> 
<java.sql.DriverManager: java.sql.Connection getConnection(java.lang.String,java.util.Properties)> 
<android.media.MediaScannerConnection: boolean isConnected()> 
<android.content.pm.ContainerEncryptionParams: long getAuthenticatedDataStart()> 
<android.bluetooth.BluetoothSocket: boolean isConnected()> 
<android.nfc.tech.MifareUltralight: boolean isConnected()> 
<android.nfc.Tag: int getConnectedTechnology()> 
<org.apache.http.conn.routing.RouteTracker: boolean isConnected()> 
<org.apache.harmony.security.pkcs7.SignerInfo: java.util.List getAuthenticatedAttributes()> 
<android.database.sqlite.SQLiteGlobal: int getWALConnectionPoolSize()> 
<android.accounts.AccountManagerService: boolean hasAuthenticatorUid(java.lang.String,int)> 
<org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImplWrapper: boolean isConnected()> 
<android.os.storage.StorageManager: boolean isUsbMassStorageConnected()> 
<org.jivesoftware.smack.sasl.SASLPlainMechanism: java.lang.String getAuthenticationText(java.lang.String,java.lang.String,java.lang.String)> 
<android.database.sqlite.SQLiteConnection: boolean isPrimaryConnection()> 
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.ConnectionReuseStrategy getConnectionReuseStrategy()> 
<android.bluetooth.BluetoothHealth: java.util.List getConnectedDevices()> 
<android.net.http.Headers: java.lang.String getWwwAuthenticate()> 
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()> 
<android.filterfw.core.OutputPort: boolean isConnected()> 
<android.bluetooth.BluetoothAdapter: int getConnectionState()> 
<org.apache.http.impl.auth.BasicScheme: boolean isConnectionBased()> 
<org.jivesoftware.smack.XMPPConnection: java.lang.String getConnectionID()> 
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int getMaxTotalConnections()> 
<android.database.sqlite.SQLiteConnection: int getConnectionId()> 
<java.nio.channels.SelectionKey: boolean isConnectable()> 
<libcore.net.http.HttpURLConnectionImpl: java.net.InetAddress getConnectToInetAddress()> 
<android.net.wifi.SupplicantState: boolean isConnecting(android.net.wifi.SupplicantState)> 
<java.net.Authenticator: java.net.PasswordAuthentication getPasswordAuthentication()> 
<org.apache.http.impl.auth.DigestScheme: boolean isConnectionBased()> 
<org.jivesoftware.smack.SSLXMPPConnection: boolean isSecureConnection()> 
<android.database.sqlite.SQLiteConnectionPool: boolean isSessionBlockingImportantConnectionWaitersLocked(boolean,int)> 
<android.database.sqlite.SQLiteProgram: int getConnectionFlags()> 
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int getConnectionsInPool()> 
<android.nfc.tech.IsoDep: boolean isConnected()> 
<android.net.NetworkInfo: boolean isConnectedOrConnecting()> 
<android.content.SyncManager: android.net.ConnectivityManager getConnectivityManager()> 
<android.os.Debug: boolean isDebuggerConnected()> 
<jp.co.omronsoft.openwnn.OpenWnnDictionaryImpl: byte[][] getConnectMatrix()> 
<javax.obex.ClientSession: long getConnectionID()> 
<android.net.NetworkInfo: boolean isConnected()> 
<android.accessibilityservice.UiTestAutomationBridge: boolean isConnected()> 
<java.net.ResponseSource: boolean requiresConnection()> 
<android.net.DummyDataStateTracker: boolean reconnect()> 
<org.apache.http.client.params.HttpClientParams: boolean isAuthenticating(org.apache.http.params.HttpParams)> 
<android.nfc.tech.NfcBarcode: boolean isConnected()> 
<libcore.net.http.HttpsURLConnectionImpl: int getConnectTimeout()> 
<libcore.net.http.HttpConnection: javax.net.ssl.SSLSocket getSecureSocketIfConnected()> 
<org.apache.http.impl.conn.AbstractClientConnAdapter: org.apache.http.conn.OperatedClientConnection getWrappedConnection()> 
<java.nio.SocketChannelImpl: boolean isConnected()> 
<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()> 
<android.net.http.Headers: int getConnectionType()> 
<org.jivesoftware.smack.sasl.SASLMechanism: org.jivesoftware.smack.SASLAuthentication getSASLAuthentication()> 
<libcore.net.http.HttpEngine: libcore.net.http.HttpConnection getConnection()> 
<android.database.sqlite.SQLiteDatabase: int getThreadDefaultConnectionFlags(boolean)> 
<javax.obex.ServerRequestHandler: long getConnectionId()> 
<android.bluetooth.BluetoothPbap: boolean isConnected(android.bluetooth.BluetoothDevice)> 
<org.jivesoftware.smack.XMPPConnection: org.jivesoftware.smack.ConnectionConfiguration getConnectionConfiguration()> 
<android.net.MobileDataStateTracker: boolean reconnect()> 
<android.content.SyncManager: boolean readDataConnectionState()> 
<android.bluetooth.BluetoothTetheringDataTracker: boolean reconnect()> 
<org.jivesoftware.smack.XMPPConnection: java.net.Socket getSocketConnection()> 
<org.jivesoftware.smack.SASLAuthentication: boolean isAuthenticated()> 
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ConnectionKeepAliveStrategy getConnectionKeepAliveStrategy()> 
<java.nio.SocketChannelImpl: boolean finishConnect()> 
<android.net.EthernetDataTracker: boolean reconnect()> 
<android.net.http.IdleCache: android.net.http.Connection getConnection(org.apache.http.HttpHost)> 
<org.jivesoftware.smack.ConnectionConfiguration: boolean isSASLAuthenticationEnabled()> 
<libcore.net.http.HttpURLConnectionImpl: java.lang.String getConnectToHost()> 
<android.net.http.Connection: android.net.http.Connection getConnection(android.content.Context,org.apache.http.HttpHost,org.apache.http.HttpHost,android.net.http.RequestFeeder)> 
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: int getConnectionsInPool()> 
<android.net.http.Headers: java.lang.String getProxyAuthenticate()> 
<libcore.net.http.RequestHeaders: java.lang.String getConnection()> 
<android.media.AudioService: boolean handleDeviceConnection(boolean,int,java.lang.String)> 
<android.nfc.tech.BasicTagTechnology: boolean isConnected()> 
<android.speech.SpeechRecognizer: boolean checkOpenConnection()> 
<android.accounts.AccountManagerService: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes()> 
<java.nio.SocketChannelImpl: boolean isConnectionPending()> 
<android.net.wifi.WifiStateTracker: boolean reconnect()> 
<android.filterfw.core.Filter: int getNumberOfConnectedOutputs()> 
<java.nio.DatagramChannelImpl: boolean isConnected()> 
<libcore.net.http.HttpURLConnectionImpl: int getConnectToPort()> 
<org.jivesoftware.smack.sasl.SASLAnonymous: java.lang.String getAuthenticationText(java.lang.String,java.lang.String,java.lang.String)> 
<java.sql.DriverManager: java.sql.Connection getConnection(java.lang.String)> 
<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()> 
<org.jivesoftware.smack.XMPPConnection: boolean isAuthenticated()> 
<libcore.io.IoBridge: boolean isConnected(java.io.FileDescriptor,java.net.InetAddress,int,int,int)> 
