<com.android.inputmethod.research.ResearchLogger: void richInputConnection_deleteSurroundingText(int,int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.systemui.usb.StorageNotification: void onUsbMassStorageConnectionChanged(boolean)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.gsm.GsmDataConnection: void onConnect(com.android.internal.telephony.DataConnection$ConnectionParams)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.phone.DeleteFdnContactScreen: void authenticatePin2()> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.RIL: void hangupConnection(int,android.os.Message)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.util.AsyncChannel: void connect(android.content.Context,android.os.Handler,android.os.Messenger)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gms.panorama.PanoramaClient: void unregisterConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.Endpoint: boolean connect()> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.gtalk.VCardMgr: void initConnection(org.jivesoftware.smack.XMPPConnection)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.ApnContext: void setDataConnectionAc(com.android.internal.telephony.DataConnectionAc)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.util.AsyncChannel: int fullyConnectSync(android.content.Context,android.os.Handler,android.os.Handler)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.ApnContext: void setDataConnection(com.android.internal.telephony.DataConnection)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.gmm.common.io.android.J2SeTcpConnectionFactory: com.google.gmm.common.io.GoogleTcpConnection createConnection(java.lang.String,int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.emailcommon.service.PolicyServiceProxy: void onConnected(android.os.IBinder)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.cdma.CDMALTEPhone: void requestIsimAuthentication(java.lang.String,android.os.Message)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onCleanUpAllConnections(java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.browser.DeviceAccountLogin: void displayLoginUi()> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.browser.Tab: void setDeviceAccountLogin(com.android.browser.DeviceAccountLogin)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.gtalk.GTalkConnection: java.lang.String doConnectDelegate(java.lang.String,int,java.lang.String,java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.settings.bluetooth.BluetoothPermissionActivity: java.lang.String createConnectionDisplayText()> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.Endpoint: void setConnectionStateAndError(int,int,boolean)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gms.common.internal.GmsClient: void registerConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void cleanUpAllConnections(boolean,java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gms.plus.plusone.PlusOneFragment: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.settings.bluetooth.CachedBluetoothDevice: void connect(boolean)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.providers.contacts.CallLogProvider: com.android.providers.contacts.CallLogInsertionHelper createCallLogInsertionHelper(android.content.Context)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.test.SimulatedCommands: void setAutoProgressConnectingCall(boolean)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.Endpoint: void doConnect()> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.AndroidEndpoint: void login()> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.extensions.ProxiedImServiceLogin: void setIsLogin(boolean)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.ReconnectManager: void cancelReconnectAlarm()> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.auth.GoogleAuthSession: java.lang.String authenticate(android.content.Context)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.DefaultPhoneNotifier: void notifyDataConnection(com.android.internal.telephony.Phone,java.lang.String,java.lang.String,com.android.internal.telephony.PhoneConstants$DataState)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gms.common.internal.GmsClient: void unregisterConnectionCallbacks(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.browser.PageDialogsHandler: void showHttpAuthentication(com.android.browser.Tab,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: com.android.internal.telephony.cdma.CdmaDataConnection findFreeDataConnection()> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.volley.elegant.ElegantThreadSafeConnManager: void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.ConnectionAuthErrorDialog: void loginSession()> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.phone.PhoneUtils: void initializeConnectionHandler(com.android.internal.telephony.CallManager)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.CallManager: void registerForUnknownConnection(android.os.Handler,int,java.lang.Object)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.common.collect.MapMakerInternalMap: void connectExpirables(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.ReconnectManager: void removeConnection(com.google.android.gsf.gtalkservice.Endpoint)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.emailcommon.provider.HostAuth: void setLogin(java.lang.String,java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.server.accessibility.AccessibilityManagerService: int addAccessibilityInteractionConnection(android.view.IWindow,android.view.accessibility.IAccessibilityInteractionConnection,int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.phone.EditFdnContactScreen: void authenticatePin2()> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gms.common.internal.GmsClient: void onConnectionFailure(com.google.android.gms.common.ConnectionResult)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.ReconnectManager: void addConnection(com.google.android.gsf.gtalkservice.Endpoint)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.widget.PointerLocationView: void logInputDeviceState(int,java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.ex.chips.RecipientEditTextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.settings.bluetooth.LocalBluetoothPreferences: boolean shouldShowDialogInForeground(android.content.Context,java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.contacts.model.AccountTypeManagerImpl: android.accounts.AuthenticatorDescription findAuthenticator(android.accounts.AuthenticatorDescription[],java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.browser.TitleBar: void showAutoLogin(boolean)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.PhoneBase: void unregisterForUnknownConnection(android.os.Handler)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.common.GoogleLogTags: void writeGlsAuthenticate(int,java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.gtalk.RosterManager: void initConnection(org.jivesoftware.smack.XMPPConnection)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.ApplicationEndpoint: void connectionEstablishedDelegate(org.jivesoftware.smack.XMPPConnection)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.settings.bluetooth.BluetoothPermissionActivity: android.view.View createConnectionDialogView()> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.Account: boolean connectionSettingsMatch(com.google.android.gsf.gtalkservice.Account)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.emailcommon.provider.HostAuth: void setLogin(java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.PhoneBase: void notifyDataConnection(java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.Endpoint: void logConnectionClosed(int,int,int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.mms.transaction.MmsSystemEventReceiver: void registerForConnectionStateChanges(android.content.Context)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.music.AlbumBrowserActivity: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.HttpResponseManager: void initConnection(org.jivesoftware.smack.XMPPConnection)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void cancelReconnectAlarm(com.android.internal.telephony.DataConnectionAc)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.phone.InCallScreen: void connectBluetoothAudio()> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.ReconnectManager: void setConnectionError(int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.development.AccountsTester: void initializeAuthenticatorsSpinner()> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.service.ImSessionWrapper: void addConnectionStateListener(com.google.android.gtalkservice.IConnectionStateListener)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.TelephonyCapabilities: boolean canDistinguishDialingAndConnected(int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.inputmethod.research.ResearchLogger: void richInputConnection_commitCompletion(android.view.inputmethod.CompletionInfo)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.phone.ManageConferenceUtils: void separateConferenceConnection(int,com.android.internal.telephony.Connection)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.util.AsyncChannel: int connectSrcHandlerToPackageSync(android.content.Context,android.os.Handler,java.lang.String,java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.policy.impl.keyguard.KeyguardHostView: void showAlmostAtAccountLoginDialog()> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.music.TrackBrowserActivity: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.gtalk.ChatMgr: void initConnection(org.jivesoftware.smack.XMPPConnection)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.test.ModelInterpreter: void setAutoProgressConnectingCall(boolean)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.server.display.WifiDisplayController: void requestConnect(java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.emailcommon.service.EmailServiceProxy: void onConnected(android.os.IBinder)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void reconnectAfterFail(com.android.internal.telephony.DataConnection$FailCause,com.android.internal.telephony.ApnContext,int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.quicksearchbox.util.JavaNetHttpHelper: java.net.HttpURLConnection createConnection(java.lang.String,java.util.Map)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.server.net.NetworkPolicyManagerService: void bindConnectivityManager(android.net.IConnectivityManager)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.systemui.statusbar.policy.BluetoothController: void handleConnectionStateChange(int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.inputmethod.research.ResearchLogger: void richInputConnection_sendKeyEvent(android.view.KeyEvent)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.development.PermissionDetails: void showDialogInner(int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.emailcommon.service.AccountServiceProxy: void notifyLoginSucceeded(long)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.gsm.GsmDataConnection: com.android.internal.telephony.gsm.GsmDataConnection makeDataConnection(com.android.internal.telephony.PhoneBase,int,com.android.internal.telephony.RetryManager,com.android.internal.telephony.DataConnectionTracker)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.phone.ManageConferenceUtils: void endConferenceConnection(int,com.android.internal.telephony.Connection)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.PhoneBase: void notifyDataConnection(java.lang.String,java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.server.am.BatteryStatsService: void notePhoneDataConnectionState(int,boolean)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.masf.AsyncHttpConnection: void setConnectionProperty(java.lang.String,java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.server.TelephonyRegistry: void broadcastDataConnectionStateChanged(int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.LinkCapabilities,boolean)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.Endpoint: void connectionClosed(int,int,boolean)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.util.AsyncChannel: void connect(android.content.Context,android.os.Handler,java.lang.Class)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.server.TelephonyRegistry: void broadcastDataConnectionFailed(java.lang.String,java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gms.auth.login.BaseAuthActivity: void accountAuthenticatorResult(android.os.Bundle,int,java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.contacts.vcard.CancelActivity: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.browser.Controller: void showAutoLogin(com.android.browser.Tab)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.LogTag: void logConnectionClosed(int,int,int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.server.ConnectivityService: void handleConnectivityChange(int,boolean)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.server.ConnectivityService: void handleConnect(android.net.NetworkInfo)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.systemui.usb.StorageNotification: void onUsbMassStorageConnectionChangedAsync(boolean)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.contacts.vcard.VCardService: void removeConnectionClient(com.android.contacts.vcard.VCardService$CustomMediaScannerConnectionClient)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.test.SimulatedCommands: void separateConnection(int,android.os.Message)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.PhoneProxy: void registerForUnknownConnection(android.os.Handler,int,java.lang.Object)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.settings.bluetooth.HeadsetProfile: boolean connect(android.bluetooth.BluetoothDevice)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.policy.impl.keyguard_obsolete.LockPatternKeyguardView: void showAlmostAtAccountLoginDialog()> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.server.accessibility.AccessibilityManagerService: void removeAccessibilityInteractionConnection(android.view.IWindow)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.inputmethod.research.ResearchLogger: void richInputConnection_setSelection(int,int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.server.display.WifiDisplayAdapter: void handleConnectLocked(android.hardware.display.WifiDisplay,android.view.Surface,int,int,int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.gtalk.GTalkConnection: void setConnection(org.jivesoftware.smack.XMPPConnection)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.server.sip.SipService: void onConnectivityChanged(android.net.NetworkInfo)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.contacts.vcard.ExportVCardActivity: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.packageinstaller.PackageInstallerActivity: void showDialogInner(int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.phone.CallNotifier: void onUnknownConnectionAppeared(android.os.AsyncResult)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gms.common.internal.GmsClient: void unregisterConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.Endpoint: void connectionClosedOnError(int,java.lang.Exception)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.browser.AutologinBar: void loginFailed()> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void startAlarmForReconnect(int,java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.server.InputMethodManagerService: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.Endpoint: void connectionEstablishedDelegate(org.jivesoftware.smack.XMPPConnection)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.settings.bluetooth.OppProfile: boolean connect(android.bluetooth.BluetoothDevice)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.inputmethod.research.ResearchLogger: void richInputConnection_performEditorAction(int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.PhoneProxy: void unregisterForUnknownConnection(android.os.Handler)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.browser.TitleBar: boolean inAutoLogin()> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.providers.contacts.VoicemailContentProvider: com.android.providers.contacts.CallLogInsertionHelper createCallLogInsertionHelper(android.content.Context)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.HeartbeatAlarm: void asyncResetConnection(org.jivesoftware.smack.XMPPConnection)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.gtalk.ImSession: boolean setConnectionError(int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gms.panorama.PanoramaClient: void registerConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.server.ConnectivityService: void handleConnectionFailure(android.net.NetworkInfo)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.emailcommon.utility.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.settings.bluetooth.HidProfile: boolean connect(android.bluetooth.BluetoothDevice)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.util.AsyncChannel: void connect(android.content.Context,android.os.Handler,android.os.Handler)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.common.cache.LocalCache: void connectAccessOrder(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.cdma.CDMAPhone: void notifyNewRingingConnection(com.android.internal.telephony.Connection)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.CallManager: void unregisterForUnknownConnection(android.os.Handler)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.settings.deviceinfo.Memory: void showDialogInner(int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.gtalk.SubscriptionManager: void initConnection(org.jivesoftware.smack.XMPPConnection)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.mms.transaction.TransactionBundle: void setConnectionSettings(com.android.mms.transaction.TransactionSettings)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.emulator.connectivity.test.ConnectivityTest: void testActiveConnectivity()> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.browser.PreloadController: void hideAutoLogin(com.android.browser.Tab)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.Endpoint: void retryConnection(boolean)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.login.BrowserActivity: void startWebLogin()> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.mms.transaction.MmsSystemEventReceiver: void unRegisterForConnectionStateChanges(android.content.Context)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.DefaultPhoneNotifier: void doNotifyDataConnection(com.android.internal.telephony.Phone,java.lang.String,java.lang.String,com.android.internal.telephony.PhoneConstants$DataState)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.server.EventLogTags: void writeConnectivityStateChanged(int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onCleanUpAllConnections(java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.DataConnectionAc: void reqGetReconnectIntent()> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.browser.DeviceAccountLogin: void login(int,com.android.browser.DeviceAccountLogin$AutoLoginCallback)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.settings.bluetooth.CachedBluetoothDevice: void connectWithoutResettingTimer(boolean)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.inputmethod.research.ResearchLogger: void richInputConnection_finishComposingText()> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.ReconnectManager: boolean checkThrottleReconnect(long,long)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.gtalk.GTalkConnection: void notifyConnectionListeners()> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.server.ConnectivityService: void sendConnectedBroadcast(android.net.NetworkInfo)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gms.auth.login.BaseAuthActivity: void accountAuthenticatorResultForAdd(java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.util.AsyncChannel: void replyHalfConnected(int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.ReconnectManager: void clearReconnectAlarm()> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gms.plus.activity.WriteMomentActivity: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.settings.bluetooth.DockService: void connectIfEnabled(android.bluetooth.BluetoothDevice)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.ex.editstyledtext.EditStyledText: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onDataConnectionDetached()> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.gtalk.GTalkConnection: void onConnectionClosed(int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.cdma.CdmaDataConnection: void onConnect(com.android.internal.telephony.DataConnection$ConnectionParams)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.server.ConnectivityService: void sendConnectedBroadcastDelayed(android.net.NetworkInfo,int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.gtalk.GTalkConnection: void connectionEstablishedDelegate(org.jivesoftware.smack.XMPPConnection)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.PhoneBase: void registerForUnknownConnection(android.os.Handler,int,java.lang.Object)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gms.plus.PlusClient: void registerConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.DataConnection: void notifyConnectCompleted(com.android.internal.telephony.DataConnection$ConnectionParams,com.android.internal.telephony.DataConnection$FailCause)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.gtalk.GTalkConnection: boolean setConnectionState(int,boolean)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.test.SimulatedCommands: void requestIsimAuthentication(java.lang.String,android.os.Message)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.test.SimulatedGsmCallState: void setAutoProgressConnectingCall(boolean)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.masf.MobileServiceMux: com.google.gmm.common.io.GoogleHttpConnection createConnection(java.lang.String,boolean)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gms.plus.PlusClient: void registerConnectionCallbacks(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.emailcommon.service.AccountServiceProxy: void notifyLoginFailed(long)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.Endpoint: void sendConnectionClosedMessage(int,int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.loginservice.BaseActivity: void accountAuthenticatorResult(android.os.Bundle)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gms.plus.PlusClient: void connect()> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.quicksearchbox.util.JavaNetHttpHelper: void setConnectTimeout(int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.gsm.GsmCallTracker: void hangupConnectionByIndex(com.android.internal.telephony.gsm.GsmCall,int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.settings.bluetooth.CachedBluetoothDevice: void connectProfile(com.android.settings.bluetooth.LocalBluetoothProfile)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gms.auth.login.BaseAuthActivity: void accountAuthenticatorRetryResult()> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.RawStanzaSendReceiveManager: void initConnection(org.jivesoftware.smack.XMPPConnection)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onCleanUpConnection(boolean,int,java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.server.display.DisplayManagerService: void connectWifiDisplay(java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.ApplicationEndpoint: void onConnectionClosed(int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gms.panorama.PanoramaClient: void connect()> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.login.BackendStub: com.google.android.gsf.loginservice.GLSUser$Status checkLoginNameSync(android.content.Context,com.google.android.gsf.loginservice.GLSUser$GLSSession,android.os.Message,java.util.concurrent.atomic.AtomicBoolean)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.Endpoint: void connectionClosed(int,int,boolean,boolean)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.browser.BaseUi: void hideAutoLogin(com.android.browser.Tab)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.settings.accounts.ManageAccountsSettings: void addAuthenticatorSettings()> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.server.am.ActiveServices: void removeConnectionLocked(com.android.server.am.ConnectionRecord,com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.server.net.NetworkStatsService: void bindConnectivityManager(android.net.IConnectivityManager)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.settings.bluetooth.PbapServerProfile: boolean connect(android.bluetooth.BluetoothDevice)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gms.auth.login.BaseAuthActivity: void accountAuthenticatorResultForSkip()> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.AndroidEndpoint: java.lang.String login(org.jivesoftware.smack.XMPPConnection,java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.browser.DeviceAccountLogin: void loginFailed()> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.BaseCommands: void registerForRilConnected(android.os.Handler,int,java.lang.Object)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.settings.bluetooth.A2dpProfile: boolean connect(android.bluetooth.BluetoothDevice)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.server.ServiceWatcher: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.server.EventLogTags: void writeLockdownVpnConnecting(int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: boolean dataConnectionNotInUse(com.android.internal.telephony.DataConnectionAc)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onCleanUpConnection(boolean,int,java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.server.EventLogTags: void writeLockdownVpnConnected(int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.gtalk.GTalkConnection: void ensurePresenceHandlerLoginState()> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.IQPacketManager: void initConnection(org.jivesoftware.smack.XMPPConnection)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.gtalk.ImSession: void setLastLoginState(boolean)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onDataConnectionAttached()> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.PhoneBase: void notifyDataConnectionFailed(java.lang.String,java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.util.AsyncChannel: void connect(android.content.Context,android.os.Handler,java.lang.String,java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.WebAddAccountView: void doLogin()> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.AndroidEndpoint: void connectionEstablishedDelegate(org.jivesoftware.smack.XMPPConnection)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.emailcommon.service.AccountServiceProxy: void onConnected(android.os.IBinder)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.AndroidEndpoint: org.jivesoftware.smack.XMPPConnection makeXmppConnection(java.lang.String,int,java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.settings.wifi.WifiSettingsForSetupWizardXL: void updateConnectionState(android.net.NetworkInfo$DetailedState)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.volley.toolbox.HurlStack: org.apache.http.HttpEntity entityFromConnection(java.net.HttpURLConnection)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.Endpoint: boolean setConnectionState(int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.Endpoint: void connectionClosed(int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.PhoneBase: void notifyDataConnection(java.lang.String,java.lang.String,com.android.internal.telephony.PhoneConstants$DataState)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.util.AsyncChannel: void connect(com.android.internal.util.AsyncService,android.os.Messenger)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.gmm.common.io.android.AndroidHttpConnectionFactory: com.google.gmm.common.io.GoogleHttpConnection createConnection(java.lang.String,boolean)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.settings.bluetooth.CachedBluetoothDevice: void connectInt(com.android.settings.bluetooth.LocalBluetoothProfile)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.browser.GoogleAccountLogin: void startLoginIfNeeded(android.app.Activity,java.lang.Runnable)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.browser.AutologinBar: void hideAutoLogin(boolean)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.contacts.util.DialogManager: void showDialogInView(android.view.View,android.os.Bundle)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gms.auth.login.BrowserActivity: void onWebLoginError(com.google.android.gms.auth.login.GLSUser$Status,int,java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.browser.TitleBar: void updateAutoLogin(com.android.browser.Tab,boolean)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.browser.PreloadController: void showAutoLogin(com.android.browser.Tab)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void reconnectAfterFail(com.android.internal.telephony.DataConnection$FailCause,java.lang.String,int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.service.GTalkService: void removeConnection(com.google.android.gsf.gtalkservice.service.EndpointWrapper)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.music.QueryBrowserActivity: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.service.ImSessionWrapper: void removeConnectionStateListener(com.google.android.gtalkservice.IConnectionStateListener)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.volley.elegant.ElegantPlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: com.android.internal.telephony.gsm.GsmDataConnection createDataConnection()> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.WebLoginView: void login(java.lang.String,java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.browser.Controller: void onPreloginFinished(android.os.Bundle,android.content.Intent,long,boolean)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.cdma.CdmaCallTracker: void hangupConnectionByIndex(com.android.internal.telephony.cdma.CdmaCall,int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.browser.GoogleAccountLogin: void startLogin()> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void startAlarmForReconnect(int,com.android.internal.telephony.ApnContext)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.sip.SipPhoneBase: void notifyNewRingingConnection(com.android.internal.telephony.Connection)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.RIL: void notifyRegistrantsRilConnectionChanged(int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.cdma.CdmaDataConnection: com.android.internal.telephony.cdma.CdmaDataConnection makeDataConnection(com.android.internal.telephony.cdma.CDMAPhone,int,com.android.internal.telephony.RetryManager,com.android.internal.telephony.DataConnectionTracker)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: com.android.internal.telephony.gsm.GsmDataConnection findReadyDataConnection(com.android.internal.telephony.ApnSetting)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.DataConnectionAc: android.app.PendingIntent rspReconnectIntent(android.os.Message)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.server.EventLogTags: void writeImfForceReconnectIme(java.lang.Object[],long,int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.inputmethod.research.ResearchLogger: void richInputConnection_commitCorrection(android.view.inputmethod.CorrectionInfo)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.DefaultPhoneNotifier: void notifyDataConnectionFailed(com.android.internal.telephony.Phone,java.lang.String,java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gms.plus.PlusClient: void unregisterConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.gsm.GSMPhone: void notifyNewRingingConnection(com.android.internal.telephony.Connection)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.loginservice.BaseActivity: void accountAuthenticatorResultForAdd(java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.service.ImSessionWrapper: void login(java.lang.String,boolean)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.loginservice.BaseActivity: void accountAuthenticatorRetryResult()> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.util.AsyncChannel: int connectSync(android.content.Context,android.os.Handler,android.os.Handler)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.browser.TitleBar: void inflateAutoLoginBar()> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gms.auth.login.BrowserActivity: void startWebLogin()> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.PhoneProxy: void unregisterForNewRingingConnection(android.os.Handler)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gms.plus.activity.AccountSignUpActivity: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.Endpoint: void setConnection(org.jivesoftware.smack.XMPPConnection)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.rmq.Rmq2Manager: void initConnection(org.jivesoftware.smack.XMPPConnection)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.settings.bluetooth.Utils: int getConnectionStateSummary(int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.browser.TitleBar: void hideAutoLogin(boolean)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.ServiceStateTracker: void unregisterForDataConnectionAttached(android.os.Handler)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.service.GTalkService: void maybeCreateMainEndpointAndLogin(com.google.android.gsf.gtalkservice.Account)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.gtalk.GTalkImSession: void hostSessionConnectionStateChanged(int,int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gms.auth.login.BaseAuthActivity: void accountAuthenticatorResult(android.os.Bundle)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.server.display.WifiDisplayController: void handleConnectionChanged(android.net.NetworkInfo)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.server.connectivity.Vpn: boolean reconnect()> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.login.BrowserActivity: void onWebLoginError(com.google.android.gsf.loginservice.GLSUser$Status,int,java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.gtalk.GTalkImSession: void login(java.lang.String,boolean)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.common.GoogleLogTags: void writeGtalkConnection(int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.AndroidEndpoint: void setConnection(org.jivesoftware.smack.XMPPConnection)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.ServiceStateTracker: void unregisterForDataConnectionDetached(android.os.Handler)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.browser.Controller: void hideAutoLogin(com.android.browser.Tab)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.sip.SipCommandInterface: void hangupConnection(int,android.os.Message)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.browser.DeviceAccountLogin: void handleLogin(java.lang.String,java.lang.String,java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void destroyDataConnections()> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.util.AsyncChannel: int connectSync(android.content.Context,android.os.Handler,android.os.Messenger)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.WebAddAccountView: void login(java.lang.String,java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.server.WifiService: void reconnect()> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void cleanUpConnection(boolean,com.android.internal.telephony.ApnContext)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.os.BatteryStatsImpl: void notePhoneDataConnectionStateLocked(int,boolean)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.Endpoint: void login()> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void gotoIdleAndNotifyDataConnection(java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.DataConnectionAc: void setReconnectIntentSync(android.app.PendingIntent)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.gsm.GsmCallTracker: void hangupAllConnections(com.android.internal.telephony.gsm.GsmCall)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onActionIntentReconnectAlarm(android.content.Intent)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.service.GTalkService: void handleConnectivityChanged(android.content.Intent)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.PhoneBase: void registerForNewRingingConnection(android.os.Handler,int,java.lang.Object)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.util.AsyncChannel: void connected(android.content.Context,android.os.Handler,android.os.Messenger)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.PhoneBase: void notifyNewRingingConnectionP(com.android.internal.telephony.Connection)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.CallManager: void unregisterForNewRingingConnection(android.os.Handler)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.ReconnectManager: void retryConnection(boolean)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.loginservice.BaseActivity: void accountAuthenticatorResultForSkip()> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.gmm.common.async.ClientLoginService: com.google.gmm.common.async.LoginRequest createLoginRequest()> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.mms.transaction.Transaction: void setConnectionSettings(com.android.mms.transaction.TransactionSettings)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.PhoneBase: void requestIsimAuthentication(java.lang.String,android.os.Message)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.Endpoint: void addConnectionEvent(com.google.android.gsf.gtalkservice.Endpoint$ConnectionEvent)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.RIL: void separateConnection(int,android.os.Message)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.volley.toolbox.HurlStack: java.net.HttpURLConnection openConnection(java.net.URL,com.android.volley.Request)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.DataConnectionTracker: void onActionIntentReconnectAlarm(android.content.Intent)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.ReconnectManager: void initConnectionState()> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.Endpoint: void logConnectionEvent(int,int,int,int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.Endpoint: boolean setConnectionError(int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.server.display.WifiDisplayController: void handleConnectionFailure(boolean)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gms.plus.internal.PlusOneButtonWithPopupContentView: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.ServiceStateTracker: void registerForDataConnectionDetached(android.os.Handler,int,java.lang.Object)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.phone.CallNotifier: void onNewRingingConnection(android.os.AsyncResult)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.gsm.GsmConnection: void onConnectedInOrOut()> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void initApnContextsAndDataConnection()> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.settings.wifi.WifiSettings: void updateConnectionState(android.net.NetworkInfo$DetailedState)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.packageinstaller.InstallAppProgress: void showDialogInner(int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.settings.wifi.WifiSettingsForSetupWizardXL: void onAuthenticationFailure()> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.music.ArtistAlbumBrowserActivity: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gms.common.account.AccountPickerActivity: void runAddAccountForAuthenticator(java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: com.android.internal.telephony.DataConnection checkForConnectionForApnContext(com.android.internal.telephony.ApnContext)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.Endpoint: void clearReconnectAlarm()> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.service.GTalkService: void createEndpointAndLogin(com.google.android.gsf.gtalkservice.Account)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.DataConnectionAc: void reqSetReconnectIntent(android.app.PendingIntent)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void notifyDataConnection(java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.volley.elegant.ElegantThreadSafeConnManager: org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gms.plus.PlusClient: void unregisterConnectionCallbacks(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.browser.AutologinBar: void showAutoLogin(boolean)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.gtalk.ImSession: void removeConnectionStateListener(com.google.android.gtalkservice.IConnectionStateListener)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.ServiceStateTracker: void registerForDataConnectionAttached(android.os.Handler,int,java.lang.Object)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.server.display.WifiDisplayController: void updateConnection()> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.service.GTalkService: void setXMPPConnection(org.jivesoftware.smack.XMPPConnection)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.server.display.WifiDisplayController: void connect(android.net.wifi.p2p.WifiP2pDevice)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void gotoIdleAndNotifyDataConnection(java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.volley.elegant.ElegantThreadSafeConnManager: org.apache.http.impl.conn.tsccm.AbstractConnPool createConnectionPool(org.apache.http.params.HttpParams)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.gtalk.ApplicationEndpointPacketManager: void initConnection(org.jivesoftware.smack.XMPPConnection)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.AndroidEndpoint: void asyncCloseConnection(org.jivesoftware.smack.XMPPConnection)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.server.accessibility.AccessibilityManagerService: int removeAccessibilityInteractionConnectionInternalLocked(android.os.IBinder,android.util.SparseArray,android.util.SparseArray)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.server.ConnectivityService: void enforceConnectivityInternalPermission()> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.exchange.ExchangeService: com.android.emailcommon.utility.EmailClientConnectionManager getClientConnectionManager(boolean,int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.DataMessageManager: void initConnection(org.jivesoftware.smack.XMPPConnection)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.cdma.CdmaCallTracker: void hangupAllConnections(com.android.internal.telephony.cdma.CdmaCall)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.Endpoint: boolean sendPacketOverMcsConnection(org.jivesoftware.smack.packet.Packet)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.Endpoint: void connectionEstablished(java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.HeartbeatAlarm: void setConnection(org.jivesoftware.smack.XMPPConnection)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.browser.BaseUi: void showAutoLogin(com.android.browser.Tab)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.DataConnectionTracker: void cleanUpAllConnections(java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gms.common.internal.GmsClient: void registerConnectionCallbacks(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.contacts.calllog.CallLogAdapter: boolean callLogInfoMatches(com.android.contacts.calllog.ContactInfo,com.android.contacts.calllog.ContactInfo)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.browser.AutologinBar: void updateAutoLogin(com.android.browser.Tab,boolean)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.settings.wifi.WifiSettingsForSetupWizardXL: void showDisconnectedState(java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.service.GTalkService: com.google.android.gtalkservice.IGTalkConnection blockingCreateGTalkConnection(java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.gtalk.ImSession: void addConnectionStateListener(com.google.android.gtalkservice.IConnectionStateListener)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: com.android.internal.telephony.gsm.GsmDataConnection findFreeDataConnection()> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.Endpoint: void addConnectionClosedEvent(int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.common.collect.MapMakerInternalMap: void connectEvictables(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.cdma.CdmaConnection: void onConnectedInOrOut()> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.LogTag: void logConnectionEvent(int,int,int,int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.service.GTalkService: com.google.android.gtalkservice.IGTalkConnection internalGetConnectionForUser(java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.RIL: void requestIsimAuthentication(java.lang.String,android.os.Message)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.AndroidEndpoint: void logConnectionEvent(int,int,int,int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.ReconnectManager: void resetReconnectionTimer(boolean)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.Endpoint: void handleDoConnectError(int,org.jivesoftware.smack.packet.XMPPError)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.settings.applications.InstalledAppDetails: void showDialogInner(int,int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.AndroidEndpoint: void onConnectionClosed(int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.contacts.vcard.NfcImportVCardActivity: void onServiceConnected(android.content.ComponentName,android.os.IBinder)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.sip.SipCommandInterface: void requestIsimAuthentication(java.lang.String,android.os.Message)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.gtalk.OtrManager: void initConnection(org.jivesoftware.smack.XMPPConnection)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.browser.GoogleAccountLogin: void saveLoginTime()> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.settings.bluetooth.CachedBluetoothDevice: void connectAutoConnectableProfiles()> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.DataConnection: com.android.internal.telephony.DataCallState$SetupResult onSetupConnectionCompleted(android.os.AsyncResult)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.Endpoint: void addConnectionEvent(int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.DataConnectionTracker: void notifyDataConnection(java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.browser.BaseUi: void updateAutoLogin(com.android.browser.Tab,boolean)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.location.os.real.RealOs: boolean reconnectWifi()> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.settings.bluetooth.PanProfile: boolean connect(android.bluetooth.BluetoothDevice)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.AndroidEndpoint: void logConnectionClosed(int,int,int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.BaseCommands: void unregisterForRilConnected(android.os.Handler)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gms.plus.plusone.PlusOneFragment: void onResolveConnectionResult(int,android.content.Intent)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.WebLoginView: void doLogin()> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.widget.PointerLocationView: void logInputDevices()> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.gtalk.GTalkImSession: void initConnection(org.jivesoftware.smack.XMPPConnection)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.PhoneProxy: void registerForNewRingingConnection(android.os.Handler,int,java.lang.Object)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.loginservice.BaseActivity: void accountAuthenticatorResult(android.os.Bundle,int,java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.Endpoint: void cancelReconnectAlarm()> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.Endpoint: java.lang.String doConnectDelegate(java.lang.String,int,java.lang.String,java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.server.BackupManagerService: void agentConnected(java.lang.String,android.os.IBinder)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.Account: boolean loginSettingsMatch(com.google.android.gsf.gtalkservice.Account)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.PhoneProxy: void requestIsimAuthentication(java.lang.String,android.os.Message)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.PhoneBase: void unregisterForNewRingingConnection(android.os.Handler)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.server.CommonTimeManagementService: void connectToTimeConfig()> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.rmq.RmqManager: void initConnection(org.jivesoftware.smack.XMPPConnection)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gms.plus.internal.PlusOneButtonContentView: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.exchange.EasSyncService: void setConnectionParameters(com.android.emailcommon.provider.HostAuth)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.AndroidEndpoint: java.lang.String doConnectDelegate(java.lang.String,int,java.lang.String,java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.settings.vpn2.VpnSettings: void connect(com.android.internal.net.VpnProfile)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void cleanUpConnection(boolean,java.lang.String,boolean)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.Endpoint: boolean internalSetConnectionState(int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gms.panorama.PanoramaClient: void unregisterConnectionCallbacks(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gms.panorama.PanoramaClient: void registerConnectionCallbacks(com.google.android.gms.common.GooglePlayServicesClient$ConnectionCallbacks)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.sip.SipCommandInterface: void separateConnection(int,android.os.Message)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.systemui.statusbar.policy.NetworkController: void updateConnectivity(android.content.Intent)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.SAMLUtils: java.lang.String makeWebLoginStartUrl(boolean,java.lang.String)> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.gtalk.VideoChatSessionManager: void initConnection(org.jivesoftware.smack.XMPPConnection)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.CallManager: void registerForNewRingingConnection(android.os.Handler,int,java.lang.Object)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.server.display.WifiDisplayAdapter: void requestConnectLocked(java.lang.String,boolean)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: com.android.internal.telephony.DataConnectionAc findDataConnectionAcByCid(int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.phone.PhoneGlobals: android.content.Intent createCallLogIntent()> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.settings.bluetooth.CachedBluetoothDevice: void onBondingDockConnect()> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.AndroidEndpoint: void doConnectSucceededDelegate()> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.android.gsf.gtalkservice.AndroidEndpoint: void doConnectFailedDelegate()> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void createAllDataConnectionList()> ->_AUTHENTICATIONS_TO_HIGH_
<com.google.common.cache.LocalCache: void connectWriteOrder(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.test.SimulatedCommands: void hangupConnection(int,android.os.Message)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.server.accessibility.AccessibilityManagerService: void removeAccessibilityInteractionConnectionLocked(int,int)> ->_AUTHENTICATIONS_TO_HIGH_
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void destroyAllDataConnectionList()> ->_AUTHENTICATIONS_TO_HIGH_
