<com.google.android.common.base.StringUtil: java.lang.String regexEscape(java.lang.String)> ->_SANITIZERS_
<com.android.internal.telephony.cdma.sms.BearerData: com.android.internal.telephony.cdma.sms.BearerData$Gsm7bitCodingResult encode7bitGsm(java.lang.String,int,boolean)> ->_SANITIZERS_
<com.google.android.common.base.CharEscaper: java.lang.String escapeSlow(java.lang.String,int)> ->_SANITIZERS_
<com.google.android.common.base.StringUtil: java.lang.String stripAndCollapse(java.lang.String)> ->_SANITIZERS_
<com.google.common.io.protocol.ProtoBuf: byte[] encodeUtf8(java.lang.String)> ->_SANITIZERS_
<com.android.emailcommon.utility.Utility: java.lang.String replaceBareLfWithCrlf(java.lang.String)> ->_SANITIZERS_
<com.android.emailcommon.utility.Utility: byte[] encode(java.nio.charset.Charset,java.lang.String)> ->_SANITIZERS_
<com.android.internal.telephony.cdma.sms.BearerData: void encodeUserData(com.android.internal.telephony.cdma.sms.BearerData,com.android.internal.util.BitwiseOutputStream)> ->_SANITIZERS_
<com.google.android.gms.common.util.Base64Utils: java.lang.String encodeUrlSafe(byte[])> ->_SANITIZERS_
<com.google.android.gsf.HelpUrl: java.lang.String replaceLocale(java.lang.String)> ->_SANITIZERS_
<com.android.inputmethod.latin.AutoCorrection: boolean shouldBlockAutoCorrectionBySafetyNet(java.lang.String,java.lang.CharSequence)> ->_SANITIZERS_
<com.android.org.bouncycastle.asn1.x509.X509Name: java.lang.String stripInternalSpaces(java.lang.String)> ->_SANITIZERS_
<com.google.common.primitives.Chars: java.lang.String join(java.lang.String,char[])> ->_SANITIZERS_
<com.google.android.common.base.StringUtil: void escapeStringBody(java.lang.CharSequence,boolean,com.google.android.common.base.StringUtil$JsEscapingMode,java.lang.Appendable)> ->_SANITIZERS_
<com.google.android.common.base.StringUtil: java.lang.String removeChars(java.lang.String,java.lang.CharSequence)> ->_SANITIZERS_
<com.google.android.common.base.CharMatcher: java.lang.String replaceFrom(java.lang.CharSequence,char)> ->_SANITIZERS_
<com.google.android.common.base.StringUtil: java.lang.String javaScriptEscape(java.lang.CharSequence)> ->_SANITIZERS_
<com.google.gmm.common.io.IoUtil: int encodeUtf8(java.lang.String,byte[],int)> ->_SANITIZERS_
<com.android.org.bouncycastle.jcajce.provider.asymmetric.dsa.AlgorithmParametersSpi: byte[] engineGetEncoded(java.lang.String)> ->_SANITIZERS_
<com.google.common.base.CharMatcher: java.lang.String replaceFrom(java.lang.CharSequence,char)> ->_SANITIZERS_
<com.android.volley.Request: byte[] encodePostParameters(java.util.Map,java.lang.String)> ->_SANITIZERS_
<com.android.internal.telephony.cdma.sms.BearerData: void encodeUserDataPayload(com.android.internal.telephony.cdma.sms.UserData)> ->_SANITIZERS_
<com.android.exchange.utility.UriCodec: void appendPartiallyEncoded(java.lang.StringBuilder,java.lang.String)> ->_SANITIZERS_
<com.adobe.xmp.XMPUtils: java.lang.String encodeBase64(byte[])> ->_SANITIZERS_
<com.android.org.bouncycastle.util.encoders.Hex: byte[] encode(byte[],int,int)> ->_SANITIZERS_
<com.android.org.bouncycastle.util.encoders.Base64: int encode(byte[],java.io.OutputStream)> ->_SANITIZERS_
<com.google.gmm.common.io.IoUtil: java.lang.String encodeURL(java.lang.String)> ->_SANITIZERS_
<com.google.android.common.base.StringUtil: java.lang.String stripHtmlTags(java.lang.String)> ->_SANITIZERS_
<com.google.common.base.Strings: java.lang.String commonPrefix(java.lang.CharSequence,java.lang.CharSequence)> ->_SANITIZERS_
<com.android.org.bouncycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters: byte[] engineGetEncoded(java.lang.String)> ->_SANITIZERS_
<com.google.android.volley.MicroProtoPrinter: java.lang.String escapeString(java.lang.String)> ->_SANITIZERS_
<com.google.android.common.base.StringUtil: java.lang.String stripSuffix(java.lang.String,java.lang.String)> ->_SANITIZERS_
<com.android.exchange.utility.UriCodec: java.lang.String encode(java.lang.String,java.nio.charset.Charset)> ->_SANITIZERS_
<com.android.vcard.VCardParserImpl_V30: java.lang.String encodeParamValue(java.lang.String)> ->_SANITIZERS_
<com.google.android.common.base.UnicodeEscaper: java.lang.String escape(java.lang.String)> ->_SANITIZERS_
<com.android.quicksearchbox.ui.QueryTextView: void replaceText(java.lang.CharSequence)> ->_SANITIZERS_
<com.google.common.base.CharMatcher: java.lang.String replaceFrom(java.lang.CharSequence,java.lang.CharSequence)> ->_SANITIZERS_
<com.google.android.common.gdata.AndroidGDataClient: java.lang.String encodeUri(java.lang.String)> ->_SANITIZERS_
<com.android.internal.telephony.cdma.sms.BearerData: byte[] encode(com.android.internal.telephony.cdma.sms.BearerData)> ->_SANITIZERS_
<com.android.internal.telephony.cdma.sms.BearerData: byte[] encodeDtmfSmsAddress(java.lang.String)> ->_SANITIZERS_
<com.android.org.bouncycastle.asn1.LazyEncodedSequence: int encodedLength()> ->_SANITIZERS_
<com.android.exchange.utility.UriCodec: void appendEncoded(java.lang.StringBuilder,java.lang.String,java.nio.charset.Charset,boolean)> ->_SANITIZERS_
<com.android.internal.telephony.cdma.sms.BearerData: void encodeLanguageIndicator(com.android.internal.telephony.cdma.sms.BearerData,com.android.internal.util.BitwiseOutputStream)> ->_SANITIZERS_
<com.android.mms.transaction.SmsReceiverService: java.lang.String replaceFormFeeds(java.lang.String)> ->_SANITIZERS_
<com.google.android.common.gdata2.AndroidGDataClient: java.lang.String encodeUri(java.lang.String)> ->_SANITIZERS_
<com.android.vcard.VCardBuilder: java.lang.String escapeCharacters(java.lang.String)> ->_SANITIZERS_
<com.android.internal.telephony.cdma.sms.BearerData: void encodeDisplayMode(com.android.internal.telephony.cdma.sms.BearerData,com.android.internal.util.BitwiseOutputStream)> ->_SANITIZERS_
<com.adobe.xmp.impl.Base64: java.lang.String encode(java.lang.String)> ->_SANITIZERS_
<com.google.android.common.base.StringUtil: java.lang.String javaScriptEscapeToAscii(java.lang.CharSequence)> ->_SANITIZERS_
<com.android.org.bouncycastle.util.encoders.Base64: int encode(byte[],int,int,java.io.OutputStream)> ->_SANITIZERS_
<com.google.gmm.common.io.util.ByteArrayDataInput: java.lang.String convertUTF8WithBuf(byte[],char[],int,int)> ->_SANITIZERS_
<com.android.providers.contacts.util.Hex: java.lang.String encodeHex(byte[],boolean)> ->_SANITIZERS_
<com.google.android.gsf.gtalkservice.Log: java.lang.String sanitizeUsername(java.lang.String)> ->_SANITIZERS_
<com.google.android.common.base.StringUtil: java.lang.String replaceSmartQuotes(java.lang.String)> ->_SANITIZERS_
<com.android.inputmethod.latin.LatinIME: void showSuggestionStrip(com.android.inputmethod.latin.SuggestedWords,java.lang.CharSequence)> ->_SANITIZERS_
<com.android.internal.telephony.cdma.sms.BearerData: java.lang.String decodeCharset(byte[],int,int,int,java.lang.String)> ->_SANITIZERS_
<com.android.calendar.DayView: java.lang.String drawTextSanitizer(java.lang.String,int)> ->_SANITIZERS_
<com.android.internal.telephony.cdma.sms.BearerData: void encodeReplyOption(com.android.internal.telephony.cdma.sms.BearerData,com.android.internal.util.BitwiseOutputStream)> ->_SANITIZERS_
<com.google.gmm.common.util.text.TextUtil: java.lang.String getStrippedPhoneNumber(java.lang.String)> ->_SANITIZERS_
<com.android.internal.telephony.cdma.sms.BearerData: void encodePriorityIndicator(com.android.internal.telephony.cdma.sms.BearerData,com.android.internal.util.BitwiseOutputStream)> ->_SANITIZERS_
<com.google.android.common.base.StringUtil: java.lang.String stripPrefix(java.lang.String,java.lang.String)> ->_SANITIZERS_
<com.android.org.bouncycastle.util.encoders.Base64: byte[] encode(byte[])> ->_SANITIZERS_
<com.android.internal.telephony.cdma.sms.BearerData: void encode7bitEms(com.android.internal.telephony.cdma.sms.UserData,byte[],boolean)> ->_SANITIZERS_
<com.android.org.bouncycastle.util.encoders.Hex: int encode(byte[],int,int,java.io.OutputStream)> ->_SANITIZERS_
<com.android.browser.UrlUtils: java.lang.String stripUrl(java.lang.String)> ->_SANITIZERS_
<com.android.org.bouncycastle.crypto.encodings.PKCS1Encoding: byte[] encodeBlock(byte[],int,int)> ->_SANITIZERS_
<com.android.org.bouncycastle.asn1.x509.X509NameEntryConverter: com.android.org.bouncycastle.asn1.ASN1Primitive convertHexEncoded(java.lang.String,int)> ->_SANITIZERS_
<com.android.org.bouncycastle.crypto.encodings.OAEPEncoding: byte[] encodeBlock(byte[],int,int)> ->_SANITIZERS_
<com.android.i18n.phonenumbers.PhoneNumberUtil: java.lang.String maybeStripExtension(java.lang.StringBuilder)> ->_SANITIZERS_
<com.android.emailcommon.internet.Rfc822Output: void writeEncodedHeader(java.io.Writer,java.lang.String,java.lang.String)> ->_SANITIZERS_
<com.google.android.gsf.loginservice.GoogleLoginService: java.lang.String stripAfterSemicolon(java.lang.String)> ->_SANITIZERS_
<com.android.internal.telephony.cdma.sms.BearerData: void encodeMsgCount(com.android.internal.telephony.cdma.sms.BearerData,com.android.internal.util.BitwiseOutputStream)> ->_SANITIZERS_
<com.android.mms.model.SmilHelper: java.lang.String escapeXML(java.lang.String)> ->_SANITIZERS_
<com.android.org.bouncycastle.asn1.ASN1OutputStream: void writeEncoded(int,byte[])> ->_SANITIZERS_
<com.android.ex.chips.RecipientEditTextView: void replaceText(java.lang.CharSequence)> ->_SANITIZERS_
<com.android.browser.DownloadHandler: java.lang.String encodePath(java.lang.String)> ->_SANITIZERS_
<com.android.internal.telephony.cdma.sms.BearerData: void encodeEmsUserDataPayload(com.android.internal.telephony.cdma.sms.UserData)> ->_SANITIZERS_
<com.android.commands.monkey.MonkeySourceNetwork: java.lang.String replaceQuotedChars(java.lang.String)> ->_SANITIZERS_
<com.android.calculator2.CalculatorEditable: android.text.Editable replace(int,int,java.lang.CharSequence,int,int)> ->_SANITIZERS_
<com.android.server.NativeDaemonConnector: void appendEscaped(java.lang.StringBuilder,java.lang.String)> ->_SANITIZERS_
<com.android.server.pm.Settings: void replacePackageLPw(java.lang.String,com.android.server.pm.PackageSetting)> ->_SANITIZERS_
<com.android.org.bouncycastle.jcajce.provider.asymmetric.dh.AlgorithmParametersSpi: byte[] engineGetEncoded(java.lang.String)> ->_SANITIZERS_
<com.android.internal.telephony.cdma.sms.BearerData: void encodeMessageId(com.android.internal.telephony.cdma.sms.BearerData,com.android.internal.util.BitwiseOutputStream)> ->_SANITIZERS_
<com.google.android.common.base.StringUtil: java.lang.String javaEscape(java.lang.String)> ->_SANITIZERS_
<com.android.inputmethod.latin.Suggest: void addOrReplaceDictionary(java.util.concurrent.ConcurrentHashMap,java.lang.String,com.android.inputmethod.latin.Dictionary)> ->_SANITIZERS_
<com.android.inputmethod.latin.StringUtils: boolean equalsIgnoreCase(java.lang.CharSequence,char[],int,int)> ->_SANITIZERS_
<com.google.gmm.common.io.IoUtil: java.lang.String encodeURLParameters(java.util.Vector)> ->_SANITIZERS_
<com.android.inputmethod.latin.BinaryDictionaryGetter: java.lang.String replaceFileNameDangerousCharacters(java.lang.String)> ->_SANITIZERS_
<com.android.internal.telephony.cdma.sms.BearerData: byte[] encodeUtf16(java.lang.String)> ->_SANITIZERS_
<com.android.emailcommon.utility.SSLUtils: java.lang.String escapeForSchemeName(java.lang.String)> ->_SANITIZERS_
<com.android.org.bouncycastle.util.encoders.Base64Encoder: int encode(byte[],int,int,java.io.OutputStream)> ->_SANITIZERS_
<com.android.org.bouncycastle.asn1.LazyEncodedSequence: void encode(com.android.org.bouncycastle.asn1.ASN1OutputStream)> ->_SANITIZERS_
<com.google.android.common.base.StringUtil: java.lang.String replaceChars(java.lang.String,java.lang.CharSequence,char)> ->_SANITIZERS_
<com.google.android.common.base.StringUtil: java.lang.String stripPrefixIgnoreCase(java.lang.String,java.lang.String)> ->_SANITIZERS_
<com.android.internal.telephony.cdma.sms.BearerData: void encodeCdmaSmsAddress(com.android.internal.telephony.cdma.sms.CdmaSmsAddress)> ->_SANITIZERS_
<com.android.org.bouncycastle.util.encoders.Hex: byte[] encode(byte[])> ->_SANITIZERS_
<com.google.android.gms.common.server.response.FastParser: java.lang.String parseString(java.io.BufferedReader,char[],java.lang.StringBuilder,char[])> ->_SANITIZERS_
<com.google.protobuf.micro.CodedOutputStreamMicro: int encodeZigZag32(int)> ->_SANITIZERS_
<com.android.certinstaller.Util: java.lang.String toHexString(byte[],java.lang.String)> ->_SANITIZERS_
<com.android.internal.telephony.CallerInfoAsyncQuery: java.lang.String sanitizeUriToString(android.net.Uri)> ->_SANITIZERS_
<com.android.org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi: byte[] derEncode(byte[])> ->_SANITIZERS_
<com.google.android.common.base.StringUtil: java.lang.String stripSuffixIgnoreCase(java.lang.String,java.lang.String)> ->_SANITIZERS_
<com.android.internal.telephony.cdma.sms.BearerData: void encodeMsgStatus(com.android.internal.telephony.cdma.sms.BearerData,com.android.internal.util.BitwiseOutputStream)> ->_SANITIZERS_
<com.android.internal.telephony.cdma.sms.BearerData: void encodeScpResults(com.android.internal.telephony.cdma.sms.BearerData,com.android.internal.util.BitwiseOutputStream)> ->_SANITIZERS_
<com.google.common.base.Strings: java.lang.String commonSuffix(java.lang.CharSequence,java.lang.CharSequence)> ->_SANITIZERS_
<com.google.android.common.base.UnicodeEscaper: java.lang.String escapeSlow(java.lang.String,int)> ->_SANITIZERS_
<com.android.internal.telephony.cdma.sms.BearerData: void encodePrivacyIndicator(com.android.internal.telephony.cdma.sms.BearerData,com.android.internal.util.BitwiseOutputStream)> ->_SANITIZERS_
<com.android.vending.util.Util: java.lang.String replaceLanguageAndRegion(java.lang.String)> ->_SANITIZERS_
<com.android.org.bouncycastle.util.io.pem.PemWriter: void writeEncoded(byte[])> ->_SANITIZERS_
<com.android.org.bouncycastle.crypto.engines.TwofishEngine: int RS_MDS_Encode(int,int)> ->_SANITIZERS_
<com.google.android.volley.MicroProtoPrinter: java.lang.String sanitizeString(java.lang.String)> ->_SANITIZERS_
<com.android.internal.telephony.cdma.sms.BearerData: void encodeValidityPeriodRel(com.android.internal.telephony.cdma.sms.BearerData,com.android.internal.util.BitwiseOutputStream)> ->_SANITIZERS_
<com.android.providers.downloads.Helpers: java.lang.String replaceInvalidVfatCharacters(java.lang.String)> ->_SANITIZERS_
<com.android.providers.contacts.ContactsProvider2: java.lang.String sanitizeMatch(java.lang.String)> ->_SANITIZERS_
<com.google.android.common.base.StringUtil: java.lang.String stripNonDigits(java.lang.String)> ->_SANITIZERS_
<com.android.calculator2.Logic: java.lang.String replaceTranslations(java.lang.String)> ->_SANITIZERS_
<com.android.internal.telephony.cdma.sms.BearerData: void encode16bitEms(com.android.internal.telephony.cdma.sms.UserData,byte[])> ->_SANITIZERS_
<com.android.emailcommon.utility.Utility: java.lang.String base64Encode(java.lang.String)> ->_SANITIZERS_
<com.google.gmm.common.io.IoUtil: byte[] encodeUtf8(java.lang.String)> ->_SANITIZERS_
<com.google.gmm.common.io.IoUtil: java.lang.String encodeURLParameters(java.lang.String[][])> ->_SANITIZERS_
<com.android.org.bouncycastle.asn1.x500.style.IETFUtils: java.lang.String stripInternalSpaces(java.lang.String)> ->_SANITIZERS_
<com.android.uiautomator.core.AccessibilityNodeInfoDumper: java.lang.String stripInvalidXMLChars(java.lang.CharSequence)> ->_SANITIZERS_
<com.android.internal.telephony.cdma.sms.BearerData: byte[] encode7bitAscii(java.lang.String,boolean)> ->_SANITIZERS_
<com.android.i18n.phonenumbers.PhoneNumberMatcher: void <init>(com.android.i18n.phonenumbers.PhoneNumberUtil,java.lang.CharSequence,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency,long)> ->_SANITIZERS_
<com.android.org.bouncycastle.util.encoders.Hex: int encode(byte[],java.io.OutputStream)> ->_SANITIZERS_
<com.android.browser.homepages.Template: java.lang.String replaceConsts(android.content.Context,java.lang.String)> ->_SANITIZERS_
<com.android.org.bouncycastle.util.encoders.HexEncoder: int encode(byte[],int,int,java.io.OutputStream)> ->_SANITIZERS_
<com.google.gmm.common.util.DebugUtil: java.lang.String escape(java.lang.String)> ->_SANITIZERS_
<com.google.android.gms.common.util.Base64Utils: java.lang.String encode(byte[])> ->_SANITIZERS_
<com.android.exchange.utility.SimpleIcsWriter: java.lang.String escapeTextValue(java.lang.String)> ->_SANITIZERS_
<com.google.android.common.base.PercentEscaper: java.lang.String escape(java.lang.String)> ->_SANITIZERS_
<com.google.common.io.protocol.ProtoBuf: int encodeUtf8(java.lang.String,byte[],int)> ->_SANITIZERS_
<com.android.vcard.VCardBuilder: java.lang.String encodeQuotedPrintable(java.lang.String)> ->_SANITIZERS_
<com.android.org.bouncycastle.asn1.DEROctetString: void encode(com.android.org.bouncycastle.asn1.DEROutputStream,byte[])> ->_SANITIZERS_
<com.android.browser.homepages.RequestHandler: byte[] htmlEncode(java.lang.String)> ->_SANITIZERS_
<com.google.android.gsf.gtalkservice.Log: java.lang.String sanitizeUsername(long,java.lang.String)> ->_SANITIZERS_
<com.android.exchange.utility.UriCodec: void appendEncoded(java.lang.StringBuilder,java.lang.String)> ->_SANITIZERS_
<com.google.common.primitives.SignedBytes: java.lang.String join(java.lang.String,byte[])> ->_SANITIZERS_
<com.android.internal.telephony.cdma.sms.BearerData: void encodeMsgDeliveryAlert(com.android.internal.telephony.cdma.sms.BearerData,com.android.internal.util.BitwiseOutputStream)> ->_SANITIZERS_
<com.android.org.bouncycastle.crypto.signers.RSADigestSigner: byte[] derEncode(byte[])> ->_SANITIZERS_
<com.google.android.common.base.StringUtil: java.lang.String megastrip(java.lang.String,boolean,boolean,java.lang.String)> ->_SANITIZERS_
<com.android.internal.telephony.cdma.sms.BearerData: void encodeCallbackNumber(com.android.internal.telephony.cdma.sms.BearerData,com.android.internal.util.BitwiseOutputStream)> ->_SANITIZERS_
<com.android.exchange.adapter.AttachmentLoader: java.lang.String encodeForExchange2003(java.lang.String)> ->_SANITIZERS_
<com.google.common.primitives.UnsignedBytes: java.lang.String join(java.lang.String,byte[])> ->_SANITIZERS_
<com.google.gmm.common.io.IoUtil: java.lang.String encodeMailto(java.lang.String[],java.lang.String,java.lang.String)> ->_SANITIZERS_
<com.android.org.bouncycastle.asn1.ASN1OutputStream: void writeEncoded(int,int,byte[])> ->_SANITIZERS_
<com.google.android.common.base.StringUtil: java.lang.String xmlCDataEscape(java.lang.String)> ->_SANITIZERS_
<com.adobe.xmp.impl.Base64: byte[] encode(byte[])> ->_SANITIZERS_
<com.android.browser.provider.BrowserProvider: java.lang.CharSequence replaceSystemPropertyInString(android.content.Context,java.lang.CharSequence)> ->_SANITIZERS_
<com.android.emailcommon.internet.MimeUtility: java.lang.String foldAndEncode(java.lang.String)> ->_SANITIZERS_
<com.android.internal.telephony.gsm.SmsMessage: byte[] encodeUCS2(java.lang.String,byte[])> ->_SANITIZERS_
<com.android.emailcommon.internet.MimeUtility: java.lang.String foldAndEncode2(java.lang.String,int)> ->_SANITIZERS_
<com.android.inputmethod.keyboard.internal.KeySpecParser: java.lang.String parseEscape(java.lang.String)> ->_SANITIZERS_
<com.adobe.xmp.impl.Base64: byte[] encode(byte[],int)> ->_SANITIZERS_
<com.google.protobuf.micro.CodedOutputStreamMicro: long encodeZigZag64(long)> ->_SANITIZERS_
<com.google.android.gms.common.server.response.FastParser: java.lang.String readString(java.io.BufferedReader,char[],java.lang.StringBuilder,char[])> ->_SANITIZERS_
<com.google.android.common.base.StringUtil: java.lang.String strip(java.lang.String)> ->_SANITIZERS_
<com.google.gmm.common.io.IoUtil: java.lang.String[] encodeURLs(java.lang.String[])> ->_SANITIZERS_
<com.android.server.wm.StartingData: void <init>(java.lang.String,int,android.content.res.CompatibilityInfo,java.lang.CharSequence,int,int,int)> ->_SANITIZERS_
<com.adobe.xmp.impl.Utils: java.lang.String escapeXML(java.lang.String,boolean,boolean)> ->_SANITIZERS_
<com.android.org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil: byte[] getEncodedSubjectPublicKeyInfo(com.android.org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[])> ->_SANITIZERS_
<com.google.android.common.base.StringUtil: java.lang.String xmlEscape(java.lang.String)> ->_SANITIZERS_
<com.google.android.common.base.CharEscaper: java.lang.String escape(java.lang.String)> ->_SANITIZERS_
<com.android.vending.cache.CacheManagerImpl: java.lang.String sanitizeFilename(java.lang.String)> ->_SANITIZERS_
<com.google.android.mms.pdu.EncodedStringValue: com.google.android.mms.pdu.EncodedStringValue[] encodeStrings(java.lang.String[])> ->_SANITIZERS_
<com.google.android.common.base.StringUtil: java.lang.String htmlEscape(java.lang.String)> ->_SANITIZERS_
<com.google.android.common.base.StringUtil: java.lang.String javaScriptEscapeHelper(java.lang.CharSequence,boolean)> ->_SANITIZERS_
<com.google.gmm.common.util.text.TextUtil: int replace(java.lang.String,java.lang.String,java.lang.StringBuffer)> ->_SANITIZERS_
<com.android.browser.provider.BrowserProvider: java.lang.String stripUrl(java.lang.String)> ->_SANITIZERS_
<com.google.android.common.base.CharMatcher: java.lang.String replaceFrom(java.lang.CharSequence,java.lang.CharSequence)> ->_SANITIZERS_
<com.android.vending.util.Util: java.lang.String replaceLocale(java.lang.String)> ->_SANITIZERS_
<com.google.android.common.base.StringUtil: java.lang.String replace(java.lang.String,java.lang.CharSequence,java.lang.CharSequence)> ->_SANITIZERS_
