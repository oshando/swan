<org.apache.log4j.jdbc.JDBCAppender: java.sql.Connection getConnection()> 
<org.apache.axis2.transport.xmpp.util.XMPPClientConnectionFactory: org.jivesoftware.smack.XMPPConnection getXmppConnection()> 
<org.apache.commons.httpclient.HttpClient: org.apache.commons.httpclient.HttpConnectionManager getHttpConnectionManager()> 
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.AuthenticationHandler getTargetAuthenticationHandler()> 
<org.apache.http.protocol.HttpCoreContext: org.apache.http.HttpConnection getConnection()> 
<org.apache.commons.httpclient.auth.DigestScheme: boolean isConnectionBased()> 
<org.apache.commons.ssl.SSL: int getConnectTimeout()> 
<org.apache.http.impl.client.FutureRequestExecutionMetrics: long getFailedConnectionAverageDuration()> 
<org.apache.commons.ssl.SSLServer: int getConnectTimeout()> 
<org.apache.http.impl.auth.NTLMScheme: boolean isConnectionBased()> ->_AUTHENTICATIONS_NEUTRAL_
<org.apache.http.impl.client.FutureRequestExecutionMetrics: java.util.concurrent.atomic.AtomicLong getActiveConnections()> 
<org.apache.commons.httpclient.HttpMethodBase: boolean getDoAuthentication()> 
<org.apache.axis2.transport.xmpp.XMPPSender: void getConnectionDetailsFromClientOptions(org.apache.axis2.context.MessageContext)> 
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.AuthenticationHandler getProxyAuthenticationHandler()> 
<org.apache.http.impl.conn.PoolingHttpClientConnectionManager: org.apache.http.config.ConnectionConfig getDefaultConnectionConfig()> 
<org.apache.commons.ssl.SSLSocketWrapper: boolean isConnected()> 
<org.apache.axis2.transport.xmpp.XMPPSender: void getConnectionDetailsFromAxisConfiguration(org.apache.axis2.description.TransportOutDescription)> 
<org.apache.commons.httpclient.HttpMethodDirector: org.apache.commons.httpclient.HttpConnectionManager getConnectionManager()> 
<org.apache.http.impl.conn.BasicHttpClientConnectionManager: org.apache.http.HttpClientConnection getConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object)> 
<org.apache.http.client.config.RequestConfig: int getConnectionRequestTimeout()> 
<org.apache.woden.internal.wsdl20.extensions.soap.SOAPEndpointExtensionsImpl: java.lang.String getHttpAuthenticationRealm()> 
<org.apache.http.impl.client.FutureRequestExecutionMetrics: org.apache.http.impl.client.FutureRequestExecutionMetrics$DurationCounter getFailedConnections()> 
<javax.mail.Authenticator: javax.mail.PasswordAuthentication getPasswordAuthentication()> 
<org.apache.commons.httpclient.MultiThreadedHttpConnectionManager: int getConnectionsInPool()> 
<org.apache.log4j.net.SocketAppender: int getReconnectionDelay()> 
<org.apache.http.impl.conn.ManagedClientConnectionImpl: org.apache.http.conn.OperatedClientConnection getConnection()> 
<org.apache.commons.httpclient.auth.BasicScheme: boolean isConnectionBased()> 
<org.apache.http.impl.client.FutureRequestExecutionMetrics: long getScheduledConnectionCount()> 
<org.apache.woden.internal.wsdl20.extensions.soap.SOAPEndpointExtensionsImpl: org.apache.woden.wsdl20.extensions.http.HTTPAuthenticationScheme getHttpAuthenticationScheme()> 
<org.apache.commons.httpclient.HttpConnection: org.apache.commons.httpclient.HttpConnectionManager getHttpConnectionManager()> 
<org.apache.commons.httpclient.MultiThreadedHttpConnectionManager: int getMaxTotalConnections()> 
<org.apache.axis2.transport.http.AbstractHTTPSender: boolean isAuthenticationEnabled(org.apache.axis2.context.MessageContext)> 
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()> 
<org.apache.log4j.net.JMSAppender: javax.jms.TopicConnection getTopicConnection()> 
<org.apache.http.impl.conn.BasicHttpClientConnectionManager: org.apache.http.config.ConnectionConfig getConnectionConfig()> 
<org.apache.http.conn.routing.RouteTracker: boolean isConnected()> 
<org.apache.http.impl.client.FutureRequestExecutionMetrics: long getActiveConnectionCount()> 
<org.apache.http.impl.client.FutureRequestExecutionMetrics: org.apache.http.impl.client.FutureRequestExecutionMetrics$DurationCounter getSuccessfulConnections()> 
<org.apache.commons.ssl.SSLClient: int getConnectTimeout()> 
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.ConnectionReuseStrategy getConnectionReuseStrategy()> 
<org.apache.woden.internal.wsdl20.extensions.http.HTTPEndpointExtensionsImpl: org.apache.woden.wsdl20.extensions.http.HTTPAuthenticationScheme getHttpAuthenticationScheme()> 
<org.apache.http.impl.conn.CPoolProxy: org.apache.http.HttpClientConnection getConnection()> 
<org.apache.http.impl.auth.BasicScheme: boolean isConnectionBased()> 
<org.apache.commons.httpclient.params.HttpClientParams: long getConnectionManagerTimeout()> 
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int getMaxTotalConnections()> 
<org.apache.http.impl.auth.DigestScheme: boolean isConnectionBased()> 
<org.apache.axis2.jaxws.util.WSDL4JWrapper: java.net.URLConnection getPrivilegedURLConnection(java.net.URL)> 
<org.apache.commons.httpclient.MultiThreadedHttpConnectionManager: boolean isConnectionStaleCheckingEnabled()> 
<org.apache.http.impl.auth.SPNegoScheme: boolean isConnectionBased()> 
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int getConnectionsInPool()> 
<org.apache.commons.httpclient.params.HttpClientParams: boolean isAuthenticationPreemptive()> 
<org.apache.http.client.config.RequestConfig: int getConnectTimeout()> 
<org.apache.http.impl.client.MinimalHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()> 
<org.apache.http.client.params.HttpClientParams: boolean isAuthenticating(org.apache.http.params.HttpParams)> 
<org.apache.woden.internal.wsdl20.extensions.http.HTTPEndpointExtensionsImpl: java.lang.String getHttpAuthenticationRealm()> 
<org.apache.http.impl.client.AutoRetryHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()> 
<org.apache.commons.httpclient.HttpMethodDirector: boolean isAuthenticationNeeded(org.apache.commons.httpclient.HttpMethod)> 
<org.apache.log4j.net.JMSAppender: java.lang.String getTopicConnectionFactoryBindingName()> 
<org.apache.http.impl.conn.AbstractClientConnAdapter: org.apache.http.conn.OperatedClientConnection getWrappedConnection()> 
<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()> 
<org.apache.axis2.transport.xmpp.util.XMPPOutTransportInfo: org.apache.axis2.transport.xmpp.util.XMPPConnectionFactory getConnectionFactory()> 
<javax.mail.Service: boolean isConnected()> 
<org.apache.http.impl.auth.NegotiateScheme: boolean isConnectionBased()> 
<org.apache.commons.httpclient.MultiThreadedHttpConnectionManager: int getMaxConnectionsPerHost()> 
<org.apache.commons.httpclient.params.HttpConnectionManagerParams: int getMaxTotalConnections()> 
<org.apache.http.impl.client.DecompressingHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()> 
<org.apache.http.impl.client.FutureRequestExecutionMetrics: long getSuccessfulConnectionAverageDuration()> 
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ConnectionKeepAliveStrategy getConnectionKeepAliveStrategy()> 
<org.apache.commons.httpclient.auth.NTLMScheme: boolean isConnectionBased()> 
<org.apache.commons.httpclient.MultiThreadedHttpConnectionManager: int getConnectionsInUse()> 
<org.apache.http.impl.client.InternalHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()> 
<org.apache.http.impl.client.FutureRequestExecutionMetrics: long getFailedConnectionCount()> 
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: int getConnectionsInPool()> 
<org.apache.commons.httpclient.HttpMethodBase: java.lang.String getAuthenticationRealm()> 
<javax.mail.Service: boolean protocolConnect(java.lang.String,int,java.lang.String,java.lang.String)> 
<org.apache.axis2.transport.mail.PollTableEntry: long getReconnectTimeout()> 
<org.apache.axis2.transport.xmpp.util.XMPPConnectionFactory: org.jivesoftware.smack.XMPPConnection getXmppConnection()> 
<org.apache.commons.httpclient.params.HttpConnectionManagerParams: int getDefaultMaxConnectionsPerHost()> 
<org.apache.commons.httpclient.HttpMethodBase: boolean isConnectionCloseForced()> 
<org.apache.commons.httpclient.params.HttpConnectionParams: int getConnectionTimeout()> 
<org.apache.http.impl.client.FutureRequestExecutionMetrics: long getSuccessfulConnectionCount()> 
<org.apache.http.pool.PoolEntry: java.lang.Object getConnection()> 
<org.apache.commons.httpclient.params.HttpClientParams: java.lang.Class getConnectionManagerClass()> 
<org.apache.http.impl.auth.KerberosScheme: boolean isConnectionBased()> 
<org.apache.commons.httpclient.HttpState: boolean isAuthenticationPreemptive()> 
<org.apache.http.impl.client.FutureRequestExecutionMetrics: java.util.concurrent.atomic.AtomicLong getScheduledConnections()> 
<org.apache.stratos.manager.stub.ApplicationManagementServiceStub: org.apache.stratos.manager.dto.RepositoryInformation getTestRepositoryConnectionResponse_return(org.apache.stratos.manager.service.TestRepositoryConnectionResponse)> 
<org.apache.commons.httpclient.SimpleHttpConnectionManager: boolean isConnectionStaleCheckingEnabled()> 
<org.apache.commons.httpclient.HttpMethodBase: java.lang.String getProxyAuthenticationRealm()> 
<org.apache.http.client.config.RequestConfig: boolean isAuthenticationEnabled()> 
<org.apache.http.client.config.RequestConfig: boolean isStaleConnectionCheckEnabled()> 
<org.apache.http.impl.conn.BasicClientConnectionManager: org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object)> 
