<org.apache.commons.ssl.Base64: byte[] encodeBase64Chunked(byte[])> 
<org.apache.geronimo.mail.util.Hex: byte[] encode(byte[],int,int)> 
<org.apache.commons.lang3.text.WordUtils: java.lang.String initials(java.lang.String,char[])> 
<javax.mail.internet.MimeUtility: java.lang.String encodeText(java.lang.String,java.lang.String,java.lang.String)> 
<org.apache.commons.codec.net.URLCodec: byte[] encode(byte[])> 
<org.apache.geronimo.mail.util.UUEncode: int encode(byte[],java.io.OutputStream)> 
<org.apache.commons.cli.Util: java.lang.String stripLeadingHyphens(java.lang.String)> 
<org.apache.geronimo.mail.util.UUEncode: int encode(byte[],int,int,java.io.OutputStream)> 
<org.apache.xmlbeans.impl.store.DomImpl: java.lang.String _node_lookupPrefix(org.apache.xmlbeans.impl.store.DomImpl$Dom,java.lang.String)> 
<org.apache.xmlbeans.impl.util.XsTypeConverter: java.lang.String lexString(java.lang.CharSequence,java.util.Collection)> 
<org.apache.http.impl.auth.NTLMEngineImpl: java.lang.String convertHost(java.lang.String)> 
<org.apache.axiom.util.base64.Base64Utils: void encode(byte[],int,int,java.lang.StringBuffer)> 
<com.ctc.wstx.evt.BaseStartElement: void writeAsEncodedUnicode(java.io.Writer)> 
<org.apache.commons.codec.language.Soundex: java.lang.String encode(java.lang.String)> 
<org.apache.xmlbeans.impl.store.DomImpl: java.lang.String _element_getAttribute(org.apache.xmlbeans.impl.store.DomImpl$Dom,java.lang.String)> 
<org.apache.commons.httpclient.util.URIUtil: java.lang.String encodeAll(java.lang.String)> 
<org.apache.http.client.utils.URLEncodedUtils: boolean isEncoded(org.apache.http.HttpEntity)> 
<org.apache.commons.codec.binary.Base64: byte[] encode(byte[])> 
<org.apache.xmlbeans.impl.store.DomImpl: org.apache.xmlbeans.impl.store.DomImpl$Dom node_replaceChild(org.apache.xmlbeans.impl.store.DomImpl$Dom,org.apache.xmlbeans.impl.store.DomImpl$Dom,org.apache.xmlbeans.impl.store.DomImpl$Dom)> 
<org.apache.http.impl.ConnSupport: java.nio.charset.CharsetEncoder createEncoder(org.apache.http.config.ConnectionConfig)> 
<org.apache.commons.httpclient.util.URIUtil: java.lang.String encodeQuery(java.lang.String,java.lang.String)> 
<org.apache.commons.lang3.StringUtils: java.lang.String replaceChars(java.lang.String,java.lang.String,java.lang.String)> 
<org.apache.commons.lang3.StringUtils: java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String)> 
<org.apache.commons.httpclient.util.URIUtil: java.lang.String encodeWithinQuery(java.lang.String,java.lang.String)> 
<org.apache.geronimo.mail.util.Base64Encoder: void encodeWordData(byte[],java.lang.StringBuffer)> 
<org.apache.commons.lang3.text.StrSubstitutor: java.lang.String replace(java.lang.String)> 
<org.apache.axis2.databinding.types.HexBinary: java.lang.String encode(byte[])> 
<org.apache.http.util.EncodingUtils: java.lang.String getString(byte[],int,int,java.lang.String)> 
<org.apache.http.client.utils.URIBuilder: java.lang.String encodeUric(java.lang.String)> 
<org.apache.commons.lang3.text.WordUtils: java.lang.String uncapitalize(java.lang.String,char[])> 
<org.apache.commons.httpclient.util.URIUtil: java.lang.String encodeWithinPath(java.lang.String)> 
<org.apache.commons.lang3.StringUtils: java.lang.String replacePattern(java.lang.String,java.lang.String,java.lang.String)> 
<org.apache.commons.lang3.StringUtils: java.lang.String replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)> 
<org.apache.geronimo.mail.util.Base64: byte[] encode(byte[])> 
<org.apache.commons.codec.net.QuotedPrintableCodec: byte[] encode(byte[])> 
<org.apache.xmlbeans.impl.tool.CodeGenUtil: java.lang.String quoteNoEscapeFilename(java.lang.String)> 
<org.apache.commons.httpclient.util.URIUtil: java.lang.String encodeWithinAuthority(java.lang.String,java.lang.String)> 
<org.apache.commons.lang3.StringUtils: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String,int)> 
<org.apache.commons.lang3.text.WordUtils: java.lang.String capitalize(java.lang.String,char[])> 
<org.apache.geronimo.mail.util.XText: byte[] encode(byte[],int,int)> 
<org.apache.commons.codec.binary.Base64: byte[] encodeBase64(byte[],boolean)> 
<org.apache.commons.codec.binary.Hex: byte[] encode(byte[])> 
<org.apache.commons.httpclient.URI: java.lang.String decode(char[],java.lang.String)> 
<org.apache.geronimo.mail.util.QuotedPrintable: int encode(byte[],java.io.OutputStream)> 
<org.apache.geronimo.mail.util.UUEncoder: int encode(byte[],int,int,java.io.OutputStream)> 
<javax.mail.internet.MimeUtility: java.lang.String quoteAndEscapeString(java.lang.String)> 
<org.apache.commons.lang3.StringEscapeUtils: java.lang.String escapeEcmaScript(java.lang.String)> 
<org.apache.axis2.deployment.ClusterBuilder: java.lang.String replaceVariables(java.lang.String)> 
<org.apache.xmlbeans.impl.store.DomImpl: java.lang.String _soapElement_getNamespaceURI(org.apache.xmlbeans.impl.store.DomImpl$Dom,java.lang.String)> 
<org.apache.xmlbeans.impl.regex.REUtil: java.lang.String stripExtendedComment(java.lang.String)> 
<org.apache.http.impl.auth.NTLMEngineImpl: java.lang.String stripDotSuffix(java.lang.String)> 
<org.apache.commons.lang3.StringUtils: java.lang.String appendIfMissing(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[])> 
<org.apache.commons.ssl.asn1.DERGenerator: void writeDEREncoded(int,byte[])> 
<org.apache.commons.codec.language.Metaphone: java.lang.String encode(java.lang.String)> 
<org.apache.xmlbeans.impl.store.DomImpl: java.lang.String _element_getAttributeNS(org.apache.xmlbeans.impl.store.DomImpl$Dom,java.lang.String,java.lang.String)> 
<org.apache.commons.lang3.text.StrSubstitutor: java.lang.String replace(java.lang.StringBuffer,int,int)> 
<org.apache.xmlbeans.impl.util.HexBin: java.lang.String encode(java.lang.String)> 
<org.apache.geronimo.mail.util.QuotedPrintableEncoder: void encodeWord(java.io.InputStream,java.lang.String,java.lang.String,java.io.OutputStream,boolean)> 
<org.apache.geronimo.mail.util.QuotedPrintableEncoder: int encode(java.io.PushbackInputStream,java.lang.StringBuffer,java.lang.String,int)> 
<org.apache.commons.httpclient.util.URIUtil: java.lang.String encodeWithinQuery(java.lang.String)> 
<org.apache.geronimo.mail.util.QuotedPrintableEncoder: int encode(byte[],int,int,java.io.OutputStream)> 
<org.apache.commons.lang3.StringUtils: java.lang.String stripEnd(java.lang.String,java.lang.String)> 
<org.apache.geronimo.mail.util.RFC2231Encoder: int encode(byte[],int,int,java.io.OutputStream)> 
<org.apache.commons.codec.language.RefinedSoundex: java.lang.String encode(java.lang.String)> 
<org.apache.geronimo.mail.util.Base64Encoder: void encodeWord(byte[],java.lang.StringBuffer,java.lang.String)> 
<org.apache.commons.lang3.text.StrSubstitutor: java.lang.String replace(java.lang.String,int,int)> 
<org.apache.axiom.util.base64.Base64Utils: java.lang.String encode(javax.activation.DataHandler)> 
<org.apache.commons.httpclient.auth.NTLM: java.lang.String getType3Message(java.lang.String,java.lang.String,java.lang.String,java.lang.String,byte[])> 
<org.apache.geronimo.mail.util.XText: byte[] encode(byte[])> 
<org.apache.http.client.utils.URIBuilder: java.lang.String encodeUserInfo(java.lang.String)> 
<org.apache.axiom.util.base64.Base64Utils: void encode(byte[],int,int,java.io.OutputStream)> 
<org.apache.commons.codec.language.SoundexUtils: java.lang.String clean(java.lang.String)> 
<org.apache.xmlbeans.impl.store.DomImpl: org.w3c.dom.Text _text_replaceWholeText(org.apache.xmlbeans.impl.store.DomImpl$Dom,java.lang.String)> 
<org.apache.geronimo.mail.util.Base64: int encode(byte[],java.io.OutputStream)> 
<org.apache.commons.httpclient.URI: char[] encode(java.lang.String,java.util.BitSet,java.lang.String)> 
<org.apache.commons.codec.language.DoubleMetaphone: java.lang.String encode(java.lang.String)> 
<org.apache.http.client.utils.URIBuilder: java.lang.String encodePath(java.lang.String)> 
<org.apache.commons.httpclient.util.URIUtil: java.lang.String encodeAll(java.lang.String,java.lang.String)> 
<org.apache.geronimo.mail.util.QuotedPrintableEncoder: void encodeWordData(byte[],java.lang.StringBuffer,java.lang.String)> 
<javax.mail.internet.MimeUtility: java.io.OutputStream encode(java.io.OutputStream,java.lang.String,java.lang.String)> 
<org.apache.http.impl.auth.NTLMEngineImpl: java.lang.String convertDomain(java.lang.String)> 
<org.apache.geronimo.mail.util.Base64Encoder: void encode(java.io.InputStream,java.lang.StringBuffer,int)> 
<org.apache.http.impl.auth.DigestScheme: java.lang.String encode(byte[])> 
<org.apache.xmlbeans.impl.store.DomImpl: java.lang.String validatePrefix(java.lang.String,java.lang.String,java.lang.String,boolean)> 
<org.apache.commons.ssl.Base64: byte[] encodeBase64(byte[])> 
<org.apache.commons.lang3.StringUtils: java.lang.String stripToEmpty(java.lang.String)> 
<org.apache.commons.lang3.text.StrSubstitutor: java.lang.String replace(java.lang.StringBuffer)> 
<org.apache.commons.lang3.StringUtils: java.lang.String prependIfMissingIgnoreCase(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[])> 
<org.apache.geronimo.mail.util.RFC2231Encoder: java.lang.String encode(java.lang.String,java.lang.String,java.lang.String)> 
<org.apache.geronimo.mail.util.QuotedPrintable: byte[] encode(byte[])> 
<org.apache.axis2.transport.http.util.URIEncoderDecoder: java.lang.String encodeOthers(java.lang.String)> 
<org.apache.commons.lang3.StringUtils: java.lang.String stripToNull(java.lang.String)> 
<org.apache.commons.codec.binary.BinaryCodec: byte[] encode(byte[])> 
<org.apache.commons.lang3.StringUtils: java.lang.String appendIfMissingIgnoreCase(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[])> 
<org.apache.commons.httpclient.util.URIUtil: java.lang.String encodeWithinAuthority(java.lang.String)> 
<org.apache.commons.httpclient.util.URIUtil: java.lang.String encode(java.lang.String,java.util.BitSet,java.lang.String)> 
<org.apache.http.util.EncodingUtils: java.lang.String getString(byte[],java.lang.String)> 
<org.apache.geronimo.mail.util.QuotedPrintable: int encode(byte[],int,int,java.io.OutputStream)> 
<org.apache.commons.httpclient.util.EncodingUtil: java.lang.String formUrlEncode(org.apache.commons.httpclient.NameValuePair[],java.lang.String)> 
<org.apache.axis2.description.WSDLToAxisServiceBuilder: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)> 
<org.apache.commons.lang3.StringUtils: java.lang.String toEncodedString(byte[],java.nio.charset.Charset)> 
<org.apache.commons.httpclient.util.URIUtil: java.lang.String encodePathQuery(java.lang.String,java.lang.String)> 
<org.apache.commons.lang3.StringEscapeUtils: java.lang.String escapeXml(java.lang.String)> 
<org.apache.commons.httpclient.util.URIUtil: java.lang.String encode(java.lang.String,java.util.BitSet)> 
<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String encodeString(java.lang.String)> 
<org.apache.xmlbeans.impl.regex.RangeToken: java.lang.String escapeCharInCharClass(int)> 
<org.apache.geronimo.mail.util.Hex: int encode(byte[],java.io.OutputStream)> 
<org.apache.axiom.util.base64.AbstractBase64EncodingOutputStream: void encode(byte[],int,int)> 
<org.apache.commons.codec.binary.Base64: byte[] encodeBase64(byte[])> 
<org.apache.geronimo.mail.util.UUEncode: byte[] encode(byte[],int,int)> 
<org.apache.geronimo.mail.util.QuotedPrintableEncoder: int encode(byte[],int,int,java.lang.String)> 
<org.apache.commons.lang3.StringUtils: java.lang.String prependIfMissing(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[])> 
<org.apache.commons.ssl.util.Hex: java.lang.String encode(byte[],int,int)> 
<org.apache.commons.lang3.text.StrSubstitutor: java.lang.String replace(char[],int,int)> 
<org.apache.axis2.util.JavaUtils: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)> 
<org.apache.geronimo.mail.util.Hex: int encode(byte[],int,int,java.io.OutputStream)> 
<org.apache.geronimo.mail.util.QuotedPrintableEncoder: void encodeWord(byte[],java.lang.StringBuffer,java.lang.String,java.lang.String)> 
<jline.console.history.MemoryHistory: void replace(java.lang.CharSequence)> 
<org.apache.commons.httpclient.util.URIUtil: java.lang.String encodeQuery(java.lang.String)> 
<org.apache.commons.lang3.StringUtils: java.lang.String strip(java.lang.String)> 
<org.wso2.securevault.EncodingHelper: byte[] encode(java.io.ByteArrayOutputStream,org.wso2.securevault.EncodingType)> 
<org.apache.commons.codec.net.URLCodec: java.lang.String encode(java.lang.String,java.lang.String)> 
<org.apache.log4j.chainsaw.DetailPanel: java.lang.String escape(java.lang.String)> 
<org.apache.xmlbeans.impl.util.HexBin: byte[] encode(byte[])> 
<org.apache.geronimo.mail.util.HexEncoder: int encode(byte[],int,int,java.io.OutputStream)> 
<javax.mail.internet.MimeUtility: java.lang.String encodeText(java.lang.String)> 
<org.apache.axis2.clustering.tribes.TribesClusteringAgent: java.lang.String replaceProperty(java.lang.String,java.util.Properties)> 
<org.apache.commons.codec.net.QCodec: java.lang.String encode(java.lang.String,java.lang.String)> 
<org.apache.commons.lang3.StringEscapeUtils: java.lang.String escapeJava(java.lang.String)> 
<org.apache.commons.lang3.text.WordUtils: java.lang.String capitalizeFully(java.lang.String,char[])> 
<org.apache.xmlbeans.impl.store.DomImpl: java.lang.String _node_lookupNamespaceURI(org.apache.xmlbeans.impl.store.DomImpl$Dom,java.lang.String)> 
<org.apache.commons.codec.net.BCodec: java.lang.String encode(java.lang.String,java.lang.String)> 
<org.apache.commons.lang3.StringUtils: java.lang.String prependIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])> 
<org.apache.commons.httpclient.auth.DigestScheme: java.lang.String encode(byte[])> 
<org.apache.xmlbeans.impl.util.XsTypeConverter: java.lang.String lexString(java.lang.CharSequence)> 
<org.apache.geronimo.mail.util.Base64Encoder: int estimateEncodedLength(byte[])> 
<org.apache.commons.httpclient.util.URIUtil: java.lang.String encodePath(java.lang.String,java.lang.String)> 
<org.apache.commons.httpclient.util.EncodingUtil: java.lang.String doFormUrlEncode(org.apache.commons.httpclient.NameValuePair[],java.lang.String)> 
<org.apache.axiom.util.base64.Base64Utils: void encode(byte[],int,int,java.io.Writer)> 
<org.apache.commons.lang3.StringUtils: java.lang.String stripAccents(java.lang.String)> 
<org.apache.commons.codec.net.QuotedPrintableCodec: java.lang.String encode(java.lang.String,java.lang.String)> 
<org.apache.commons.lang3.StringUtils: java.lang.String replaceChars(java.lang.String,char,char)> 
<org.apache.xmlbeans.impl.schema.SchemaTypeCodePrinter: java.lang.String javaStringEscape(java.lang.String)> 
<org.apache.http.impl.auth.NTLMEngineImpl: java.lang.String getType3Message(java.lang.String,java.lang.String,java.lang.String,java.lang.String,byte[],int,java.lang.String,byte[])> 
<org.apache.geronimo.mail.util.XText: int encode(byte[],java.io.OutputStream)> 
<org.apache.commons.ssl.asn1.ASN1Encodable: byte[] getEncoded(java.lang.String)> 
<org.apache.log4j.helpers.Transform: java.lang.String escapeTags(java.lang.String)> 
<org.apache.commons.lang3.StringEscapeUtils: java.lang.String escapeCsv(java.lang.String)> 
<org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer: void parseEncodedChar(char[],int,int,int)> 
<javax.mail.internet.MimeUtility: void encodeBase64(java.lang.String,java.lang.StringBuffer,int,java.lang.String,org.apache.geronimo.mail.util.Base64Encoder,boolean,boolean)> 
<org.apache.commons.lang3.StringUtils: java.lang.String stripStart(java.lang.String,java.lang.String)> 
<jline.console.ConsoleReader: java.lang.String stripAnsi(java.lang.String)> 
<org.apache.geronimo.mail.util.Base64: int encode(byte[],int,int,java.io.OutputStream)> 
<org.apache.commons.lang3.StringEscapeUtils: java.lang.String escapeJson(java.lang.String)> 
<org.apache.commons.ssl.Base64: byte[] encode(byte[])> 
<javax.mail.internet.MimeUtility: java.lang.String encodeWord(java.lang.String,java.lang.String,java.lang.String)> 
<org.apache.commons.codec.net.QuotedPrintableCodec: byte[] encodeQuotedPrintable(java.util.BitSet,byte[])> 
<org.apache.commons.codec.net.QuotedPrintableCodec: java.lang.String encode(java.lang.String)> 
<org.apache.commons.lang3.StringUtils: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)> 
<org.apache.commons.httpclient.util.URIUtil: java.lang.String encodePath(java.lang.String)> 
<org.apache.xmlbeans.impl.tool.CodeGenUtil: java.lang.String quoteAndEscapeFilename(java.lang.String)> 
<org.apache.commons.codec.net.RFC1522Codec: java.lang.String encodeText(java.lang.String,java.lang.String)> 
<org.apache.commons.codec.language.SoundexUtils: int differenceEncoded(java.lang.String,java.lang.String)> 
<org.apache.geronimo.mail.util.XText: int encode(byte[],int,int,java.io.OutputStream)> 
<org.apache.geronimo.mail.util.QuotedPrintable: byte[] encode(byte[],int,int)> 
<org.apache.commons.codec.net.QCodec: java.lang.String encode(java.lang.String)> 
<org.apache.http.client.utils.URIBuilder: java.lang.String encodeUrlForm(java.util.List)> 
<org.apache.geronimo.mail.util.QuotedPrintableEncoder: void encode(int,java.lang.String)> 
<org.apache.axis2.util.XMLUtils: java.lang.String base64encode(byte[])> 
<org.apache.geronimo.mail.util.UUEncoder: int encodeLine(byte[],int,int,java.io.OutputStream)> 
<org.apache.commons.codec.net.BCodec: java.lang.String encode(java.lang.String)> 
<org.apache.commons.lang3.text.StrSubstitutor: java.lang.String replace(java.lang.Object,java.util.Map,java.lang.String,java.lang.String)> 
<org.apache.xmlbeans.GDurationBuilder: java.lang.String stripTrailingZeros(java.lang.String)> 
<org.apache.geronimo.mail.util.Base64: byte[] encode(byte[],int,int)> 
<org.apache.commons.lang3.StringEscapeUtils: java.lang.String escapeHtml4(java.lang.String)> 
<org.apache.commons.lang3.StringEscapeUtils: java.lang.String escapeHtml3(java.lang.String)> 
<org.apache.commons.ssl.asn1.DERGenerator: void writeDEREncoded(java.io.OutputStream,int,byte[])> 
<org.apache.geronimo.mail.util.UUEncode: byte[] encode(byte[])> 
<org.apache.http.client.utils.URLEncodedUtils: java.lang.String encode(java.lang.String,java.lang.String)> 
<org.apache.geronimo.mail.util.Hex: byte[] encode(byte[])> 
<org.apache.commons.ssl.asn1.DEROutputStream: void writeEncoded(int,byte[])> 
<org.apache.axiom.util.base64.Base64Utils: java.lang.String encode(byte[])> 
<org.apache.geronimo.mail.util.QuotedPrintableEncoder: int estimateEncodedLength(byte[],java.lang.String)> 
<org.apache.commons.cli.Util: java.lang.String stripLeadingAndTrailingQuotes(java.lang.String)> 
<org.apache.commons.lang3.text.StrSubstitutor: java.lang.String replace(java.lang.Object,java.util.Properties)> 
<javax.mail.internet.MimeUtility: java.lang.String encodeWord(java.lang.String)> 
<org.apache.commons.codec.binary.Base64: byte[] encodeBase64Chunked(byte[])> 
<org.apache.axiom.util.base64.Base64Utils: java.lang.String encode(byte[],int,int)> 
<org.apache.commons.lang3.StringUtils: java.lang.String appendIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])> 
<org.apache.axiom.om.util.CommonUtils: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)> 
<org.apache.commons.lang3.StringUtils: java.lang.String strip(java.lang.String,java.lang.String)> 
<org.apache.xmlbeans.impl.store.DomImpl: void _characterData_replaceData(org.apache.xmlbeans.impl.store.DomImpl$Dom,int,int,java.lang.String)> 
<org.apache.commons.ssl.util.Hex: java.lang.String encode(byte[])> 
<org.apache.commons.lang3.StringUtils: java.lang.String replaceEachRepeatedly(java.lang.String,java.lang.String[],java.lang.String[])> 
<org.apache.xmlbeans.impl.util.Base64: byte[] encode(byte[])> 
<org.apache.commons.codec.net.URLCodec: java.lang.String encode(java.lang.String)> 
<org.apache.commons.ssl.Base64: byte[] encodeBase64(byte[],boolean)> 
<org.apache.geronimo.mail.util.Base64Encoder: int encode(byte[],int,int,java.io.OutputStream)> 
<org.apache.xmlbeans.impl.store.DomImpl: org.w3c.dom.Node _node_replaceChild(org.apache.xmlbeans.impl.store.DomImpl$Dom,org.w3c.dom.Node,org.w3c.dom.Node)> 
<org.apache.geronimo.mail.util.XTextEncoder: int encode(byte[],int,int,java.io.OutputStream)> 
<org.apache.geronimo.mail.util.Base64Encoder: void encodeWord(java.io.InputStream,java.lang.String,java.io.OutputStream,boolean)> 
<org.apache.commons.codec.net.URLCodec: byte[] encodeUrl(java.util.BitSet,byte[])> 
<org.apache.commons.httpclient.util.URIUtil: java.lang.String encodePathQuery(java.lang.String)> 
<javax.mail.URLName: java.lang.String encode(java.lang.String)> 
<org.apache.commons.codec.binary.Hex: char[] encodeHex(byte[])> 
<javax.mail.internet.MimeUtility: java.io.OutputStream encode(java.io.OutputStream,java.lang.String)> 
<org.apache.commons.httpclient.util.URIUtil: java.lang.String encodeWithinPath(java.lang.String,java.lang.String)> 
<org.apache.commons.lang3.StringEscapeUtils: java.lang.String escapeXml10(java.lang.String)> 
<org.apache.commons.lang3.StringEscapeUtils: java.lang.String escapeXml11(java.lang.String)> 
<org.apache.commons.validator.EmailValidator: java.lang.String stripComments(java.lang.String)> 
<org.apache.commons.lang3.StringUtils: java.lang.String replaceEach(java.lang.String,java.lang.String[],java.lang.String[])> 
<javax.mail.internet.MimeUtility: void encodeQuotedPrintable(java.lang.String,java.lang.StringBuffer,int,java.lang.String,org.apache.geronimo.mail.util.QuotedPrintableEncoder,boolean,boolean,java.lang.String)> 
<org.apache.geronimo.mail.util.QuotedPrintableEncoder: int encode(byte[],int,int)> 
<javax.mail.internet.MimeUtility: java.lang.String encodeWord(java.lang.String,java.lang.String,java.lang.String,boolean)> 
