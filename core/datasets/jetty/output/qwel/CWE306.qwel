methods CWE306_sources [ 
java.lang.String org.eclipse.jetty.server.Request.getMethod(); 
java.lang.String org.eclipse.jetty.server.Request.getServerName(); 
java.lang.String org.eclipse.jetty.server.ssl.SslSocketConnector.getKeystore(); 
org.eclipse.jetty.server.handler.ContextHandler$Context org.eclipse.jetty.server.Request.getContext(); 
java.lang.String org.eclipse.jetty.server.Request.getPathTranslated(); 
int org.eclipse.jetty.server.handler.StatisticsHandler.getResponses2xx(); 
int org.eclipse.jetty.server.handler.StatisticsHandler.getRequests(); 
java.util.Map org.eclipse.jetty.server.session.JDBCSessionManager.getSessionMap(); 
boolean org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getNeedClientAuth(); 
java.lang.String org.eclipse.jetty.server.AsyncContinuation.getStatusString(); 
org.eclipse.jetty.util.Attributes org.eclipse.jetty.server.handler.ContextHandler.getAttributes(); 
boolean org.eclipse.jetty.server.ssl.SslSocketConnector.getWantClientAuth(); 
org.eclipse.jetty.http.MimeTypes org.eclipse.jetty.server.handler.ResourceHandler.getMimeTypes(); 
java.lang.String[] org.eclipse.jetty.server.NCSARequestLog.getIgnorePaths(); 
org.eclipse.jetty.server.Request org.eclipse.jetty.server.HttpConnection.getRequest(); 
org.eclipse.jetty.util.Attributes org.eclipse.jetty.server.Request.getAttributes(); 
boolean org.eclipse.jetty.server.NCSARequestLog.getLogCookies(); 
javax.servlet.ServletInputStream org.eclipse.jetty.server.Request.getInputStream(); 
org.eclipse.jetty.server.HttpConnection org.eclipse.jetty.server.Request.getConnection(); 
long org.eclipse.jetty.server.handler.StatisticsHandler.getRequestTimeTotal(); 
java.util.EventListener[] org.eclipse.jetty.server.handler.ContextHandler.getEventListeners(); 
org.eclipse.jetty.http.MimeTypes org.eclipse.jetty.server.handler.ContextHandler.getMimeTypes(); 
java.lang.String org.eclipse.jetty.server.session.JDBCSessionIdManager.getDriverClassName(); 
java.util.Locale org.eclipse.jetty.server.NCSARequestLog.getLogLocale(); 
java.lang.String org.eclipse.jetty.server.Request.getRemoteHost(); 
int org.eclipse.jetty.server.AbstractConnector.getAcceptQueueSize(); 
org.eclipse.jetty.server.handler.ContextHandler$Context org.eclipse.jetty.server.handler.ContextHandler.getServletContext(); 
int org.eclipse.jetty.server.handler.StatisticsHandler.getResponses3xx(); 
java.lang.String org.eclipse.jetty.server.NCSARequestLog.getLogTimeZone(); 
org.eclipse.jetty.util.component.Container org.eclipse.jetty.server.Server.getContainer(); 
org.eclipse.jetty.server.Authentication org.eclipse.jetty.server.Request.getAuthentication(); 
org.eclipse.jetty.server.UserIdentity$Scope org.eclipse.jetty.server.Request.getUserIdentityScope(); 
org.eclipse.jetty.server.Handler[] org.eclipse.jetty.server.handler.AbstractHandlerContainer.getChildHandlersByClass(java.lang.Class); 
java.lang.Object org.eclipse.jetty.server.Server.getBean(java.lang.Class); 
boolean org.eclipse.jetty.server.AbstractConnector.getReuseAddress(); 
java.lang.String org.eclipse.jetty.server.Response.getReason(); 
org.eclipse.jetty.server.Server org.eclipse.jetty.server.handler.AbstractHandler.getServer(); 
java.lang.String org.eclipse.jetty.server.Request.getQueryString(); 
org.eclipse.jetty.server.HttpConnection org.eclipse.jetty.server.HttpConnection.getCurrentConnection(); 
javax.servlet.ServletRequest org.eclipse.jetty.server.AsyncContinuation.getRequest(); 
org.eclipse.jetty.server.AsyncContinuation org.eclipse.jetty.server.Request.getAsyncContinuation(); 
java.lang.String org.eclipse.jetty.server.AbstractConnector.getHost(); 
int org.eclipse.jetty.server.Server.getMaxCookieVersion(); 
org.eclipse.jetty.http.Generator org.eclipse.jetty.server.HttpConnection.getGenerator(); 
org.eclipse.jetty.server.session.JDBCSessionManager$Session org.eclipse.jetty.server.session.JDBCSessionManager.getSession(java.lang.String); 
java.lang.String org.eclipse.jetty.server.session.JDBCSessionIdManager.getNodeId(java.lang.String,javax.servlet.http.HttpServletRequest); 
java.lang.String org.eclipse.jetty.server.Request.getContentType(); 
java.lang.String org.eclipse.jetty.server.session.JDBCSessionIdManager.getBlobType(); 
java.security.Principal org.eclipse.jetty.server.Request.getUserPrincipal(); 
java.lang.String org.eclipse.jetty.server.AbstractConnector.getLeftMostValue(java.lang.String); 
java.lang.String org.eclipse.jetty.server.Request.getPathInfo(); 
org.eclipse.jetty.util.thread.ThreadPool org.eclipse.jetty.server.handler.ProxyHandler.getThreadPool(); 
int org.eclipse.jetty.server.handler.StatisticsHandler.getResponses4xx(); 
boolean org.eclipse.jetty.server.AbstractConnector.getStatsOn(); 
org.eclipse.jetty.server.handler.ContextHandler org.eclipse.jetty.server.AsyncContinuation.getContextHandler(); 
int org.eclipse.jetty.server.nio.SelectChannelConnector.getLocalPort(); 
java.lang.String org.eclipse.jetty.server.session.AbstractSessionManager.getSessionDomain(); 
org.eclipse.jetty.server.handler.ContextHandler$Context org.eclipse.jetty.server.handler.ContextHandler.getCurrentContext(); 
java.lang.String org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getSecureRandomAlgorithm(); 
int org.eclipse.jetty.server.nio.SelectChannelConnector.getLowResourcesConnections(); 
java.lang.String org.eclipse.jetty.server.NCSARequestLog.getDatedFilename(); 
org.eclipse.jetty.util.resource.Resource org.eclipse.jetty.server.handler.ContextHandler.getBaseResource(); 
java.lang.Object org.eclipse.jetty.server.HttpConnection.getAssociatedObject(); 
java.lang.String org.eclipse.jetty.server.Request.getRealPath(java.lang.String); 
java.lang.String org.eclipse.jetty.server.Response.getCharacterEncoding(); 
java.lang.Object org.eclipse.jetty.server.Server.getAttribute(java.lang.String); 
int org.eclipse.jetty.server.nio.SelectChannelConnector.getLowResourcesMaxIdleTime(); 
org.eclipse.jetty.server.Server org.eclipse.jetty.server.HttpConnection.getServer(); 
int org.eclipse.jetty.server.handler.StatisticsHandler.getResponses5xx(); 
java.lang.String org.eclipse.jetty.server.Request.getLocalAddr(); 
int org.eclipse.jetty.server.Response.getBufferSize(); 
org.eclipse.jetty.server.SessionManager org.eclipse.jetty.server.Request.getSessionManager(); 
java.util.Enumeration org.eclipse.jetty.server.Request.getLocales(); 
java.lang.String org.eclipse.jetty.server.Request.getProtocol(); 
javax.servlet.http.Cookie[] org.eclipse.jetty.server.Request.getCookies(); 
java.lang.String org.eclipse.jetty.server.handler.ContextHandler.getLocaleEncoding(java.util.Locale); 
java.lang.String org.eclipse.jetty.server.AbstractConnector.getConfidentialScheme(); 
java.lang.String org.eclipse.jetty.server.session.AbstractSessionManager.getClusterId(javax.servlet.http.HttpSession); 
java.lang.Object org.eclipse.jetty.server.LocalConnector.getConnection(); 
double org.eclipse.jetty.server.AbstractConnector.getConnectionsRequestsMean(); 
int org.eclipse.jetty.server.AbstractConnector.getMaxIdleTime(); 
boolean org.eclipse.jetty.server.handler.DefaultHandler.getShowContexts(); 
org.eclipse.jetty.util.resource.Resource org.eclipse.jetty.server.handler.ResourceHandler.getBaseResource(); 
org.eclipse.jetty.server.Server org.eclipse.jetty.server.AbstractConnector.getServer(); 
int org.eclipse.jetty.server.handler.StatisticsHandler.getRequestsActive(); 
java.lang.String[] org.eclipse.jetty.server.ssl.SslSocketConnector.getExcludeCipherSuites(); 
int org.eclipse.jetty.server.Request.getInputState(); 
int org.eclipse.jetty.server.session.HashSessionManager.getScavengePeriod(); 
java.lang.String org.eclipse.jetty.server.Response.getHeader(java.lang.String); 
java.io.PrintWriter org.eclipse.jetty.server.HttpConnection.getPrintWriter(java.lang.String); 
java.io.BufferedReader org.eclipse.jetty.server.Request.getReader(); 
java.lang.String[] org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getIncludeCipherSuites(); 
java.lang.String org.eclipse.jetty.server.Request.getServletName(); 
int org.eclipse.jetty.server.ResourceCache.getMaxCacheSize(); 
java.io.PrintWriter org.eclipse.jetty.server.Response.getWriter(); 
java.lang.String org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getProvider(); 
long org.eclipse.jetty.server.AbstractConnector.getConnectionsDurationMax(); 
java.lang.String[] org.eclipse.jetty.server.ssl.SslSocketConnector.getIncludeCipherSuites(); 
java.lang.String org.eclipse.jetty.server.AbstractConnector.getName(); 
java.lang.String[] org.eclipse.jetty.server.handler.ContextHandler.getVirtualHosts(); 
java.lang.String org.eclipse.jetty.server.AbstractConnector.getHostHeader(); 
org.eclipse.jetty.server.AsyncContext org.eclipse.jetty.server.Request.getAsyncContext(); 
boolean org.eclipse.jetty.server.HttpConnection.getResolveNames(); 
javax.net.ssl.TrustManager[] org.eclipse.jetty.server.ssl.SslSocketConnector.getTrustManagers(); 
java.lang.String org.eclipse.jetty.server.NCSARequestLog.getLogDateFormat(); 
java.lang.String org.eclipse.jetty.server.Request.getRequestURI(); 
java.lang.String org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeystoreType(); 
java.lang.StringBuffer org.eclipse.jetty.server.Request.getRequestURL(); 
boolean org.eclipse.jetty.server.session.AbstractSessionManager.getHttpOnly(); 
int org.eclipse.jetty.server.handler.StatisticsHandler.getDispatchedActiveMax(); 
java.util.Map org.eclipse.jetty.server.Request.getParameterMap(); 
int org.eclipse.jetty.server.session.HashSessionManager.getSessions(); 
int org.eclipse.jetty.server.AbstractConnector.getLowResourceMaxIdleTime(); 
java.lang.String org.eclipse.jetty.server.Server.getVersion(); 
java.lang.String org.eclipse.jetty.server.Response.getContentType(); 
org.eclipse.jetty.server.Handler[] org.eclipse.jetty.server.handler.HandlerWrapper.getHandlers(); 
java.util.Enumeration org.eclipse.jetty.server.Server.getAttributeNames(); 
java.lang.Object org.eclipse.jetty.server.nio.BlockingChannelConnector.getConnection(); 
org.eclipse.jetty.server.Handler org.eclipse.jetty.server.handler.HotSwapHandler.getHandler(); 
double org.eclipse.jetty.server.handler.StatisticsHandler.getRequestTimeStdDev(); 
int org.eclipse.jetty.server.Request.getLocalPort(); 
boolean org.eclipse.jetty.server.handler.DefaultHandler.getServeIcon(); 
int org.eclipse.jetty.server.LocalConnector.getLocalPort(); 
int org.eclipse.jetty.server.ResourceCache.getMaxCachedFiles(); 
java.lang.Class org.eclipse.jetty.server.handler.ContextHandlerCollection.getContextClass(); 
java.lang.Object org.eclipse.jetty.server.AsyncContinuation.getAttribute(java.lang.String); 
java.lang.Class org.eclipse.jetty.server.handler.ContextHandler.loadClass(java.lang.String); 
long org.eclipse.jetty.server.Request.getDispatchTime(); 
java.lang.String org.eclipse.jetty.server.session.JDBCSessionManager.getVirtualHost(org.eclipse.jetty.server.handler.ContextHandler$Context); 
java.lang.String org.eclipse.jetty.server.AbstractConnector.getIntegralScheme(); 
org.eclipse.jetty.http.HttpFields org.eclipse.jetty.server.HttpConnection.getRequestFields(); 
java.lang.String org.eclipse.jetty.server.session.JDBCSessionIdManager.getConnectionUrl(); 
java.lang.String org.eclipse.jetty.server.Request.getScheme(); 
java.lang.String org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getProtocol(); 
org.eclipse.jetty.util.resource.Resource org.eclipse.jetty.server.handler.ResourceHandler.getResource(javax.servlet.http.HttpServletRequest); 
org.eclipse.jetty.util.MultiMap org.eclipse.jetty.server.Request.getParameters(); 
java.lang.String org.eclipse.jetty.server.handler.ContextHandler.getClassPath(); 
java.lang.String org.eclipse.jetty.server.Response.getSetCharacterEncoding(); 
org.eclipse.jetty.server.DispatcherType org.eclipse.jetty.server.Request.getDispatcherType(); 
int org.eclipse.jetty.server.handler.StatisticsHandler.getSuspendsActive(); 
javax.servlet.RequestDispatcher org.eclipse.jetty.server.Request.getRequestDispatcher(java.lang.String); 
org.eclipse.jetty.server.SessionIdManager org.eclipse.jetty.server.session.AbstractSessionManager.getMetaManager(); 
int org.eclipse.jetty.server.session.AbstractSessionManager.getRefreshCookieAge(); 
java.lang.Object org.eclipse.jetty.server.Request.getAttribute(java.lang.String); 
javax.servlet.ServletResponse org.eclipse.jetty.server.AsyncContinuation.getServletResponse(); 
long org.eclipse.jetty.server.handler.StatisticsHandler.getRequestTimeMax(); 
java.util.Enumeration org.eclipse.jetty.server.Request.getAttributeNames(); 
java.lang.String[] org.eclipse.jetty.server.handler.ContextHandler.getHosts(); 
org.eclipse.jetty.http.HttpURI org.eclipse.jetty.server.Request.getUri(); 
int org.eclipse.jetty.server.handler.StatisticsHandler.getResumes(); 
int org.eclipse.jetty.server.ResourceCache.getCachedSize(); 
javax.net.ssl.SSLContext org.eclipse.jetty.server.ssl.SslSocketConnector.getSslContext(); 
long org.eclipse.jetty.server.session.AbstractSessionManager.getSessionTimeTotal(); 
java.util.Enumeration org.eclipse.jetty.server.Response.getHeaders(java.lang.String); 
javax.servlet.ServletResponse org.eclipse.jetty.server.Request.getServletResponse(); 
int org.eclipse.jetty.server.handler.StatisticsHandler.getRequestsActiveMax(); 
int org.eclipse.jetty.server.handler.StatisticsHandler.getDispatched(); 
int org.eclipse.jetty.server.Server.getGracefulShutdown(); 
int org.eclipse.jetty.server.nio.BlockingChannelConnector.getLocalPort(); 
java.util.Map org.eclipse.jetty.server.handler.ContextHandler.getInitParams(); 
java.lang.String org.eclipse.jetty.server.ssl.SslSocketConnector.getSslTrustManagerFactoryAlgorithm(); 
boolean org.eclipse.jetty.server.ssl.SslSocketConnector.getNeedClientAuth(); 
java.lang.String org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getSslKeyManagerFactoryAlgorithm(); 
int org.eclipse.jetty.server.Request.getIntHeader(java.lang.String); 
org.eclipse.jetty.util.resource.Resource org.eclipse.jetty.server.handler.ResourceHandler.getWelcome(org.eclipse.jetty.util.resource.Resource); 
java.util.Locale org.eclipse.jetty.server.Response.getLocale(); 
long org.eclipse.jetty.server.AbstractConnector.getStatsOnMs(); 
org.eclipse.jetty.http.HttpCookie org.eclipse.jetty.server.session.AbstractSessionManager.getSessionCookie(javax.servlet.http.HttpSession,java.lang.String,boolean); 
java.lang.String org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getTruststore(); 
java.security.KeyStore org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeyStore(java.lang.String,java.lang.String,java.lang.String); 
boolean org.eclipse.jetty.server.NCSARequestLog.getPreferProxiedForAddress(); 
java.lang.String org.eclipse.jetty.server.ssl.SslSocketConnector.getAlgorithm(); 
long org.eclipse.jetty.server.InclusiveByteRange.getFirst(long); 
javax.net.ssl.KeyManager[] org.eclipse.jetty.server.ssl.SslSocketConnector.getKeyManagers(); 
java.util.Enumeration org.eclipse.jetty.server.handler.ContextHandler.getInitParameterNames(); 
java.util.Map org.eclipse.jetty.server.session.HashSessionManager.getSessionMap(); 
java.util.Enumeration org.eclipse.jetty.server.Request.getHeaders(java.lang.String); 
double org.eclipse.jetty.server.handler.StatisticsHandler.getRequestTimeMean(); 
java.lang.String org.eclipse.jetty.server.Request.getRemoteAddr(); 
boolean org.eclipse.jetty.server.Server.getSendDateHeader(); 
org.eclipse.jetty.server.UserIdentity org.eclipse.jetty.server.Request.getUserIdentity(); 
long org.eclipse.jetty.server.session.JDBCSessionIdManager.getScavengeInterval(); 
java.lang.String org.eclipse.jetty.server.handler.ErrorHandler.getCacheControl(); 
org.eclipse.jetty.server.RequestLog org.eclipse.jetty.server.handler.RequestLogHandler.getRequestLog(); 
org.eclipse.jetty.server.SessionIdManager org.eclipse.jetty.server.Server.getSessionIdManager(); 
int org.eclipse.jetty.server.AbstractConnector.getConnectionsOpenMax(); 
org.eclipse.jetty.http.Parser org.eclipse.jetty.server.HttpConnection.getParser(); 
java.lang.String org.eclipse.jetty.server.Request.getServletPath(); 
java.lang.String org.eclipse.jetty.server.ssl.SslSocketConnector.getProvider(); 
org.eclipse.jetty.server.Handler[] org.eclipse.jetty.server.handler.AbstractHandlerContainer.getChildHandlers(); 
java.lang.String[] org.eclipse.jetty.server.handler.ContextHandler.getConnectorNames(); 
org.eclipse.jetty.util.log.Logger org.eclipse.jetty.server.handler.ContextHandler.getLogger(); 
int org.eclipse.jetty.server.AbstractConnector.getLowResourcesMaxIdleTime(); 
long org.eclipse.jetty.server.InclusiveByteRange.getLast(long); 
boolean org.eclipse.jetty.server.NCSARequestLog.getLogLatency(); 
int org.eclipse.jetty.server.NCSARequestLog.getRetainDays(); 
java.util.Enumeration org.eclipse.jetty.server.Request.getParameterNames(); 
int org.eclipse.jetty.server.session.HashSessionManager.getSavePeriod(); 
java.lang.Object org.eclipse.jetty.server.bio.SocketConnector.getConnection(); 
int org.eclipse.jetty.server.session.AbstractSessionManager.getSessions(); 
java.lang.String org.eclipse.jetty.server.handler.ResourceHandler.getResourceBase(); 
java.lang.Object org.eclipse.jetty.server.nio.SelectChannelConnector.getConnection(); 
boolean org.eclipse.jetty.server.Server.getSendServerVersion(); 
int org.eclipse.jetty.server.Request.getServerPort(); 
long org.eclipse.jetty.server.handler.StatisticsHandler.getDispatchedTimeMax(); 
javax.net.ssl.TrustManager[] org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getTrustManagers(); 
javax.servlet.ServletOutputStream org.eclipse.jetty.server.HttpConnection.getOutputStream(); 
java.lang.String[] org.eclipse.jetty.server.Request.getParameterValues(java.lang.String); 
java.lang.String org.eclipse.jetty.server.Request.getAuthType(); 
java.lang.String org.eclipse.jetty.server.NCSARequestLog.getFilenameDateFormat(); 
org.eclipse.jetty.util.resource.Resource org.eclipse.jetty.server.handler.ResourceHandler.getResource(java.lang.String); 
java.util.Random org.eclipse.jetty.server.session.AbstractSessionIdManager.getRandom(); 
javax.servlet.http.HttpSession org.eclipse.jetty.server.Request.getSession(boolean); 
boolean org.eclipse.jetty.server.NCSARequestLog.getLogServer(); 
long org.eclipse.jetty.server.AsyncContinuation.getTimeout(); 
org.eclipse.jetty.http.HttpFields org.eclipse.jetty.server.Response.getHttpFields(); 
int org.eclipse.jetty.server.AbstractConnector.getConnectionsRequestsMax(); 
org.eclipse.jetty.io.EndPoint org.eclipse.jetty.server.HttpConnection.getEndPoint(); 
boolean org.eclipse.jetty.server.handler.ContextHandler.getAllowNullPathInfo(); 
long org.eclipse.jetty.server.handler.StatisticsHandler.getStatsOnMs(); 
long org.eclipse.jetty.server.AbstractConnector.getConnectionsDurationTotal(); 
java.lang.String org.eclipse.jetty.server.session.AbstractSessionManager.getSessionIdPathParameterName(); 
org.eclipse.jetty.io.ByteArrayBuffer org.eclipse.jetty.server.LocalConnector.getResponses(org.eclipse.jetty.io.ByteArrayBuffer,boolean); 
long org.eclipse.jetty.server.InclusiveByteRange.getFirst(); 
java.lang.String org.eclipse.jetty.server.Request.getRemoteUser(); 
int org.eclipse.jetty.server.AbstractConnector.getRequests(); 
java.lang.String[] org.eclipse.jetty.server.handler.ContextHandler.getWelcomeFiles(); 
org.eclipse.jetty.server.Request org.eclipse.jetty.server.Request.getRequest(javax.servlet.http.HttpServletRequest); 
org.eclipse.jetty.server.session.JDBCSessionManager$SessionData org.eclipse.jetty.server.session.JDBCSessionManager.loadSession(java.lang.String,java.lang.String,java.lang.String); 
double org.eclipse.jetty.server.handler.StatisticsHandler.getDispatchedTimeMean(); 
java.lang.String org.eclipse.jetty.server.handler.ResourceHandler.getCacheControl(); 
java.lang.String org.eclipse.jetty.server.LocalConnector.getResponses(java.lang.String); 
org.eclipse.jetty.server.SessionManager org.eclipse.jetty.server.session.SessionHandler.getSessionManager(); 
long org.eclipse.jetty.server.handler.StatisticsHandler.getResponsesBytesTotal(); 
int org.eclipse.jetty.server.AbstractConnector.getAcceptors(); 
int org.eclipse.jetty.server.session.AbstractSessionManager.getMaxSessions(); 
java.io.Writer org.eclipse.jetty.server.HttpWriter.getConverter(); 
java.lang.String org.eclipse.jetty.server.Request.getContextPath(); 
java.lang.String org.eclipse.jetty.server.handler.ContextHandler.getContextPath(); 
org.eclipse.jetty.server.session.SessionHandler org.eclipse.jetty.server.session.AbstractSessionManager.getSessionHandler(); 
boolean org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getWantClientAuth(); 
double org.eclipse.jetty.server.handler.StatisticsHandler.getDispatchedTimeStdDev(); 
java.security.KeyStore org.eclipse.jetty.server.ssl.SslSocketConnector.getKeyStore(java.lang.String,java.lang.String,java.lang.String); 
long org.eclipse.jetty.server.Request.getTimeStamp(); 
org.eclipse.jetty.http.HttpFields org.eclipse.jetty.server.HttpConnection.getResponseFields(); 
java.lang.String org.eclipse.jetty.server.ssl.SslSocketConnector.getTruststoreType(); 
org.eclipse.jetty.server.handler.ErrorHandler org.eclipse.jetty.server.handler.ContextHandler.getErrorHandler(); 
java.lang.String[] org.eclipse.jetty.server.handler.ResourceHandler.getWelcomeFiles(); 
java.lang.String org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeystore(); 
java.lang.ClassLoader org.eclipse.jetty.server.handler.ContextHandler.getClassLoader(); 
org.eclipse.jetty.server.Response org.eclipse.jetty.server.HttpConnection.getResponse(); 
int org.eclipse.jetty.server.ssl.SslSocketConnector.getHandshakeTimeout(); 
java.lang.String org.eclipse.jetty.server.handler.ContextHandler.getInitParameter(java.lang.String); 
java.lang.String org.eclipse.jetty.server.handler.ContextHandler.getDisplayName(); 
int org.eclipse.jetty.server.handler.StatisticsHandler.getSuspendsActiveMax(); 
org.eclipse.jetty.server.SessionIdManager org.eclipse.jetty.server.session.AbstractSessionManager.getIdManager(); 
java.lang.String org.eclipse.jetty.server.session.HashSessionIdManager.getNodeId(java.lang.String,javax.servlet.http.HttpServletRequest); 
long org.eclipse.jetty.server.Request.getContentRead(); 
java.lang.String org.eclipse.jetty.server.session.AbstractSessionManager.getNodeId(javax.servlet.http.HttpSession); 
org.eclipse.jetty.util.resource.Resource org.eclipse.jetty.server.handler.ContextHandler.getResource(java.lang.String); 
java.util.Enumeration org.eclipse.jetty.server.Request.getHeaderNames(); 
double org.eclipse.jetty.server.session.AbstractSessionManager.getSessionTimeMean(); 
java.util.Locale org.eclipse.jetty.server.Request.getLocale(); 
long org.eclipse.jetty.server.HttpConnection.getTimeStamp(); 
java.lang.StringBuilder org.eclipse.jetty.server.Request.getRootURL(); 
int org.eclipse.jetty.server.AbstractConnector.getAcceptorPriorityOffset(); 
java.io.OutputStream org.eclipse.jetty.server.handler.DebugHandler.getOutputStream(); 
double org.eclipse.jetty.server.AbstractConnector.getConnectionsDurationStdDev(); 
java.lang.String org.eclipse.jetty.server.Request.getQueryEncoding(); 
int org.eclipse.jetty.server.AbstractConnector.getPort(); 
int org.eclipse.jetty.server.AbstractConnector.getConnections(); 
java.lang.String org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getTruststoreType(); 
java.lang.String org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getAlgorithm(); 
boolean org.eclipse.jetty.server.nio.AbstractNIOConnector.getUseDirectBuffers(); 
java.lang.String org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getSslTrustManagerFactoryAlgorithm(); 
int org.eclipse.jetty.server.ResourceCache.getCachedFiles(); 
java.lang.String org.eclipse.jetty.server.Request.getParameter(java.lang.String); 
long org.eclipse.jetty.server.InclusiveByteRange.getLast(); 
int org.eclipse.jetty.server.session.AbstractSessionManager.getSessionsMax(); 
java.lang.String org.eclipse.jetty.server.Request.getRequestedSessionId(); 
int org.eclipse.jetty.server.Request.getContentLength(); 
int org.eclipse.jetty.server.handler.ContextHandler.getMaxFormContentSize(); 
long org.eclipse.jetty.server.session.JDBCSessionManager.getSaveInterval(); 
boolean org.eclipse.jetty.server.Server.getStopAtShutdown(); 
java.lang.String org.eclipse.jetty.server.ssl.SslSocketConnector.getTruststore(); 
java.lang.String org.eclipse.jetty.server.session.AbstractSessionManager.getSessionCookie(); 
java.lang.String org.eclipse.jetty.server.NCSARequestLog.getFilename(); 
double org.eclipse.jetty.server.AbstractConnector.getConnectionsRequestsStdDev(); 
int org.eclipse.jetty.server.session.AbstractSessionManager.getMinSessions(); 
javax.net.ssl.KeyManager[] org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getKeyManagers(); 
javax.servlet.ServletResponse org.eclipse.jetty.server.AsyncContinuation.getResponse(); 
int org.eclipse.jetty.server.AbstractConnector.getSoLingerTime(); 
javax.servlet.http.Cookie[] org.eclipse.jetty.server.CookieCutter.getCookies(); 
org.eclipse.jetty.server.Response org.eclipse.jetty.server.Request.getResponse(); 
java.lang.String[] org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getExcludeCipherSuites(); 
java.lang.String org.eclipse.jetty.server.ssl.SslSocketConnector.getSslKeyManagerFactoryAlgorithm(); 
org.eclipse.jetty.server.Handler org.eclipse.jetty.server.handler.HandlerWrapper.getHandler(); 
org.eclipse.jetty.server.Connector org.eclipse.jetty.server.HttpConnection.getConnector(); 
java.util.Enumeration org.eclipse.jetty.server.handler.ContextHandler.getAttributeNames(); 
org.eclipse.jetty.server.Connector[] org.eclipse.jetty.server.Server.getConnectors(); 
double org.eclipse.jetty.server.AbstractConnector.getConnectionsDurationMean(); 
int org.eclipse.jetty.server.AbstractConnector.getIntegralPort(); 
org.eclipse.jetty.util.thread.ThreadPool org.eclipse.jetty.server.AbstractConnector.getThreadPool(); 
java.util.Set org.eclipse.jetty.server.handler.ContextHandler.getResourcePaths(java.lang.String); 
org.eclipse.jetty.server.Handler[] org.eclipse.jetty.server.handler.HandlerCollection.getHandlers(); 
long org.eclipse.jetty.server.InclusiveByteRange.getSize(long); 
int org.eclipse.jetty.server.session.JDBCSessionManager.getSessions(); 
long org.eclipse.jetty.server.Request.getDateHeader(java.lang.String); 
java.lang.String org.eclipse.jetty.server.session.HashSessionIdManager.getClusterId(java.lang.String); 
java.lang.String org.eclipse.jetty.server.ssl.SslSocketConnector.getSecureRandomAlgorithm(); 
java.lang.String org.eclipse.jetty.server.handler.MovedContextHandler.getExpires(); 
java.lang.String org.eclipse.jetty.server.Request.getLocalName(); 
java.sql.Connection org.eclipse.jetty.server.session.JDBCSessionManager.getConnection(); 
int org.eclipse.jetty.server.HttpConnection.getRequests(); 
org.eclipse.jetty.io.Buffer org.eclipse.jetty.server.Request.getTimeStampBuffer(); 
javax.servlet.http.HttpSession org.eclipse.jetty.server.Request.getSession(); 
long org.eclipse.jetty.server.Response.getContentCount(); 
javax.servlet.ServletOutputStream org.eclipse.jetty.server.Response.getOutputStream(); 
javax.net.ssl.SSLContext org.eclipse.jetty.server.ssl.SslSelectChannelConnector.getSslContext(); 
int org.eclipse.jetty.server.session.AbstractSessionManager.getSessionsTotal(); 
java.lang.String org.eclipse.jetty.server.handler.ContextHandler.getResourceBase(); 
java.sql.Connection org.eclipse.jetty.server.session.JDBCSessionIdManager.getConnection(); 
int org.eclipse.jetty.server.handler.StatisticsHandler.getExpires(); 
java.lang.String org.eclipse.jetty.server.session.AbstractSessionManager.getSessionPath(); 
org.eclipse.jetty.server.AsyncContinuation$AsyncEventState org.eclipse.jetty.server.AsyncContinuation.getAsyncEventState(); 
org.eclipse.jetty.server.ResourceCache$Content org.eclipse.jetty.server.ResourceCache.load(java.lang.String,org.eclipse.jetty.util.resource.Resource); 
int org.eclipse.jetty.server.Request.getRemotePort(); 
java.security.cert.X509Certificate[] org.eclipse.jetty.server.ssl.SslCertificates.getCertChain(javax.net.ssl.SSLSession); 
org.eclipse.jetty.server.session.AbstractSessionManager$Session org.eclipse.jetty.server.session.HashSessionManager.getSession(java.lang.String); 
java.io.File org.eclipse.jetty.server.session.HashSessionManager.getStoreDirectory(); 
java.lang.String org.eclipse.jetty.server.session.AbstractSessionIdManager.getWorkerName(); 
org.eclipse.jetty.server.Request org.eclipse.jetty.server.AsyncContinuation.getBaseRequest(); 
int org.eclipse.jetty.server.AbstractConnector.getConnectionsOpen(); 
int org.eclipse.jetty.server.ResourceCache.getMaxCachedFileSize(); 
org.eclipse.jetty.server.Handler[] org.eclipse.jetty.server.handler.HotSwapHandler.getHandlers(); 
java.lang.String org.eclipse.jetty.server.Request.getCharacterEncoding(); 
int org.eclipse.jetty.server.handler.StatisticsHandler.getSuspends(); 
org.eclipse.jetty.util.thread.ThreadPool org.eclipse.jetty.server.Server.getThreadPool(); 
int org.eclipse.jetty.server.handler.ProxyHandler.getWriteTimeout(); 
java.lang.String org.eclipse.jetty.server.ssl.SslSocketConnector.getProtocol(); 
java.lang.String org.eclipse.jetty.server.AbstractConnector.getForwardedServerHeader(); 
org.eclipse.jetty.server.Handler org.eclipse.jetty.server.handler.AbstractHandlerContainer.getChildHandlerByClass(java.lang.Class); 
org.eclipse.jetty.server.UserIdentity org.eclipse.jetty.server.Request.getResolvedUserIdentity(); 
long org.eclipse.jetty.server.session.AbstractSessionManager.getSessionTimeMax(); 
java.lang.String org.eclipse.jetty.server.LocalConnector.getResponses(java.lang.String,boolean); 
int org.eclipse.jetty.server.Response.getStatus(); 
int org.eclipse.jetty.server.handler.StatisticsHandler.getResponses1xx(); 
java.lang.String org.eclipse.jetty.server.handler.MovedContextHandler.getNewContextURL(); 
long org.eclipse.jetty.server.handler.StatisticsHandler.getDispatchedTimeTotal(); 
int org.eclipse.jetty.server.bio.SocketConnector.getLocalPort(); 
int org.eclipse.jetty.server.handler.ProxyHandler.getConnectTimeout(); 
javax.servlet.ServletInputStream org.eclipse.jetty.server.HttpConnection.getInputStream(); 
int org.eclipse.jetty.server.session.AbstractSessionManager.getMaxInactiveInterval(); 
boolean org.eclipse.jetty.server.AbstractConnector.getResolveNames(); 
javax.servlet.http.HttpSession org.eclipse.jetty.server.session.AbstractSessionManager.getHttpSession(java.lang.String); 
java.lang.String org.eclipse.jetty.server.AbstractConnector.getForwardedHostHeader(); 
java.lang.String org.eclipse.jetty.server.session.AbstractSessionManager.getSessionIdPathParameterNamePrefix(); 
java.lang.String org.eclipse.jetty.server.Request.getHeader(java.lang.String); 
int org.eclipse.jetty.server.handler.ProxyHandler.read(org.eclipse.jetty.io.EndPoint,org.eclipse.jetty.io.Buffer,java.util.concurrent.ConcurrentMap); 
int org.eclipse.jetty.server.AbstractConnector.getConfidentialPort(); 
java.lang.String org.eclipse.jetty.server.ssl.SslSocketConnector.getKeystoreType(); 
boolean org.eclipse.jetty.server.session.AbstractSessionManager.getSecureCookies(); 
int org.eclipse.jetty.server.session.AbstractSessionManager.getMaxCookieAge(); 
double org.eclipse.jetty.server.session.AbstractSessionManager.getSessionTimeStdDev(); 
int org.eclipse.jetty.server.handler.StatisticsHandler.getDispatchedActive(); 
java.lang.String org.eclipse.jetty.server.session.JDBCSessionIdManager.getClusterId(java.lang.String); 
java.lang.String org.eclipse.jetty.server.AbstractConnector.getForwardedForHeader(); 
java.lang.Object org.eclipse.jetty.server.handler.ContextHandler.getAttribute(java.lang.String); 
java.util.List org.eclipse.jetty.server.Server.getBeans(java.lang.Class); 
java.lang.String org.eclipse.jetty.server.session.JDBCSessionIdManager.getDatasourceName(); 
javax.servlet.ServletContext org.eclipse.jetty.server.Request.getServletContext(); 
]
methods CWE306_sinks [ 
void org.eclipse.jetty.server.HttpWriter.write(char[],int,int); 
void org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setTruststoreType(java.lang.String); 
void org.eclipse.jetty.server.NCSARequestLog.setFilenameDateFormat(java.lang.String); 
void org.eclipse.jetty.server.handler.RequestLogHandler.setServer(org.eclipse.jetty.server.Server); 
void org.eclipse.jetty.server.Request.setCharacterEncodingUnchecked(java.lang.String); 
void org.eclipse.jetty.server.NCSARequestLog.setLogLocale(java.util.Locale); 
void org.eclipse.jetty.server.Request.setCookies(javax.servlet.http.Cookie[]); 
void org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setKeyPassword(java.lang.String); 
void org.eclipse.jetty.server.session.AbstractSessionManager.setUsingCookies(boolean); 
void org.eclipse.jetty.server.handler.ProxyHandler.setConnectTimeout(int); 
void org.eclipse.jetty.server.ssl.SslSocketConnector.setTruststore(java.lang.String); 
void org.eclipse.jetty.server.handler.ContextHandler.setWelcomeFiles(java.lang.String[]); 
void org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setKeystore(java.lang.String); 
void org.eclipse.jetty.server.Request.setRequestedSessionIdFromCookie(boolean); 
void org.eclipse.jetty.server.Response.setStatus(int,java.lang.String); 
void org.eclipse.jetty.server.handler.DefaultHandler.setServeIcon(boolean); 
void org.eclipse.jetty.server.session.AbstractSessionManager.setIdManager(org.eclipse.jetty.server.SessionIdManager); 
void org.eclipse.jetty.server.nio.SelectChannelConnector.setLowResourcesConnections(int); 
void org.eclipse.jetty.server.handler.ContextHandler.setBaseResource(org.eclipse.jetty.util.resource.Resource); 
void org.eclipse.jetty.server.handler.ResourceHandler.handle(java.lang.String,org.eclipse.jetty.server.Request,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse); 
void org.eclipse.jetty.server.ssl.SslSocketConnector.setKeystoreType(java.lang.String); 
void org.eclipse.jetty.server.NCSARequestLog.setLogDispatch(boolean); 
void org.eclipse.jetty.server.NCSARequestLog.setExtended(boolean); 
void org.eclipse.jetty.server.AbstractConnector.setIntegralPort(int); 
void org.eclipse.jetty.server.ssl.SslSocketConnector.setProtocol(java.lang.String); 
void org.eclipse.jetty.server.handler.MovedContextHandler.setPermanent(boolean); 
void org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setSslTrustManagerFactoryAlgorithm(java.lang.String); 
void org.eclipse.jetty.server.handler.IPAccessHandler.setBlack(java.lang.String[]); 
void org.eclipse.jetty.server.AbstractConnector.setName(java.lang.String); 
void org.eclipse.jetty.server.AbstractConnector.setPort(int); 
void org.eclipse.jetty.server.Request.setQueryString(java.lang.String); 
void org.eclipse.jetty.server.session.JDBCSessionIdManager.setScavengeInterval(long); 
void org.eclipse.jetty.server.Request.setCharacterEncoding(java.lang.String); 
void org.eclipse.jetty.server.handler.ContextHandler.setMaxFormContentSize(int); 
void org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageHead(javax.servlet.http.HttpServletRequest,java.io.Writer,int,java.lang.String); 
void org.eclipse.jetty.server.handler.HandlerCollection.setServer(org.eclipse.jetty.server.Server); 
void org.eclipse.jetty.server.Request.setQueryEncoding(java.lang.String); 
void org.eclipse.jetty.server.Response.sendError(int,java.lang.String); 
void org.eclipse.jetty.server.handler.ContextHandler.setVirtualHosts(java.lang.String[]); 
void org.eclipse.jetty.server.ssl.SslSocketConnector.setTrustPassword(java.lang.String); 
void org.eclipse.jetty.server.Server.setThreadPool(org.eclipse.jetty.util.thread.ThreadPool); 
void org.eclipse.jetty.server.handler.ContextHandler.setAvailable(boolean); 
void org.eclipse.jetty.server.AbstractConnector.setForwarded(boolean); 
void org.eclipse.jetty.server.ResourceCache.setMaxCachedFileSize(int); 
void org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setAllowRenegotiate(boolean); 
void org.eclipse.jetty.server.NCSARequestLog.setAppend(boolean); 
void org.eclipse.jetty.server.Request.setContentType(java.lang.String); 
void org.eclipse.jetty.server.handler.DefaultHandler.setShowContexts(boolean); 
void org.eclipse.jetty.server.NCSARequestLog.setLogLatency(boolean); 
void org.eclipse.jetty.server.session.HashSessionManager.setLazyLoad(boolean); 
void org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageStacks(javax.servlet.http.HttpServletRequest,java.io.Writer); 
void org.eclipse.jetty.server.NCSARequestLog.setFilename(java.lang.String); 
void org.eclipse.jetty.server.Request.setRequestURI(java.lang.String); 
void org.eclipse.jetty.server.handler.RequestLogHandler.setRequestLog(org.eclipse.jetty.server.RequestLog); 
void org.eclipse.jetty.server.Request.setUri(org.eclipse.jetty.http.HttpURI); 
void org.eclipse.jetty.server.Server.main(java.lang.String[]); 
void org.eclipse.jetty.server.session.AbstractSessionManager.setNodeIdInSessionId(boolean); 
void org.eclipse.jetty.server.Server.setConnectors(org.eclipse.jetty.server.Connector[]); 
void org.eclipse.jetty.server.Response.sendError(int); 
void org.eclipse.jetty.server.handler.ResourceHandler.setWelcomeFiles(java.lang.String[]); 
void org.eclipse.jetty.server.session.HashSessionManager.setStoreDirectory(java.io.File); 
void org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setSslKeyManagerFactoryAlgorithm(java.lang.String); 
void org.eclipse.jetty.server.session.JDBCSessionIdManager.setBlobType(java.lang.String); 
void org.eclipse.jetty.server.ssl.SslSocketConnector.setAlgorithm(java.lang.String); 
void org.eclipse.jetty.server.ssl.SslSocketConnector.setNeedClientAuth(boolean); 
void org.eclipse.jetty.server.nio.SelectChannelConnector.setMaxIdleTime(int); 
void org.eclipse.jetty.server.handler.AbstractHandler.setServer(org.eclipse.jetty.server.Server); 
void org.eclipse.jetty.server.AbstractConnector.setSoLingerTime(int); 
void org.eclipse.jetty.server.handler.ContextHandler.setLogger(org.eclipse.jetty.util.log.Logger); 
void org.eclipse.jetty.server.nio.AbstractNIOConnector.setUseDirectBuffers(boolean); 
void org.eclipse.jetty.server.handler.HandlerWrapper.setServer(org.eclipse.jetty.server.Server); 
void org.eclipse.jetty.server.handler.IPAccessHandler.setWhite(java.lang.String[]); 
void org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setPassword(java.lang.String); 
void org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionAccessTime(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData); 
void org.eclipse.jetty.server.handler.ContextHandler.setAttributes(org.eclipse.jetty.util.Attributes); 
void org.eclipse.jetty.server.AbstractConnector.setThreadPool(org.eclipse.jetty.util.thread.ThreadPool); 
void org.eclipse.jetty.server.ResourceCache.setMaxCachedFiles(int); 
void org.eclipse.jetty.server.ssl.SslSocketConnector.setWantClientAuth(boolean); 
void org.eclipse.jetty.server.Request.setDispatchTime(long); 
void org.eclipse.jetty.server.Request.setContext(org.eclipse.jetty.server.handler.ContextHandler$Context); 
void org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setExcludeCipherSuites(java.lang.String[]); 
void org.eclipse.jetty.server.AbstractConnector.setServer(org.eclipse.jetty.server.Server); 
void org.eclipse.jetty.server.nio.SelectChannelConnector.setLowResourcesMaxIdleTime(int); 
void org.eclipse.jetty.server.NCSARequestLog.setLogServer(boolean); 
void org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setTrustPassword(java.lang.String); 
void org.eclipse.jetty.server.handler.ContextHandler.setServer(org.eclipse.jetty.server.Server); 
void org.eclipse.jetty.server.HttpWriter.write(java.lang.String,int,int); 
void org.eclipse.jetty.server.Request.setTimeStamp(long); 
void org.eclipse.jetty.server.ssl.SslSocketConnector.setKeystore(java.lang.String); 
void org.eclipse.jetty.server.AbstractConnector.setReuseAddress(boolean); 
void org.eclipse.jetty.server.ssl.SslSocketConnector.setSslTrustManagerFactoryAlgorithm(java.lang.String); 
void org.eclipse.jetty.server.Request.setRequestedSessionId(java.lang.String); 
void org.eclipse.jetty.server.session.JDBCSessionManager.setSaveInterval(long); 
void org.eclipse.jetty.server.HttpOutput.write(byte[]); 
void org.eclipse.jetty.server.handler.ContextHandlerCollection.setContextClass(java.lang.Class); 
void org.eclipse.jetty.server.NCSARequestLog.setPreferProxiedForAddress(boolean); 
void org.eclipse.jetty.server.handler.HandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[]); 
void org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setTruststore(java.lang.String); 
void org.eclipse.jetty.server.handler.ContextHandler.doHandle(java.lang.String,org.eclipse.jetty.server.Request,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse); 
void org.eclipse.jetty.server.HttpOutput.write(byte[],int,int); 
void org.eclipse.jetty.server.handler.ProxyHandler.setWriteTimeout(int); 
void org.eclipse.jetty.server.HttpConnection.setAssociatedObject(java.lang.Object); 
void org.eclipse.jetty.server.AbstractConnector.setForwardedForHeader(java.lang.String); 
void org.eclipse.jetty.server.ssl.SslSocketConnector.setKeyPassword(java.lang.String); 
void org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setProtocol(java.lang.String); 
void org.eclipse.jetty.server.AbstractConnector.setIntegralScheme(java.lang.String); 
void org.eclipse.jetty.server.handler.ResourceHandler.setBaseResource(org.eclipse.jetty.util.resource.Resource); 
void org.eclipse.jetty.server.AbstractConnector.setResolveNames(boolean); 
void org.eclipse.jetty.server.AbstractConnector.setAcceptorPriorityOffset(int); 
void org.eclipse.jetty.server.session.AbstractSessionManager.setSessionPath(java.lang.String); 
void org.eclipse.jetty.server.HttpWriter.setCharacterEncoding(java.lang.String); 
void org.eclipse.jetty.server.handler.IPAccessHandler.set(java.lang.String[],org.eclipse.jetty.util.IPAddressMap); 
void org.eclipse.jetty.server.handler.ProxyHandler.setWhite(java.lang.String[]); 
void org.eclipse.jetty.server.handler.AbstractHandlerContainer.dump(java.lang.StringBuilder,java.lang.String); 
void org.eclipse.jetty.server.Request.setMethod(java.lang.String); 
void org.eclipse.jetty.server.handler.MovedContextHandler.setNewContextURL(java.lang.String); 
void org.eclipse.jetty.server.Request.setRemoteHost(java.lang.String); 
void org.eclipse.jetty.server.session.AbstractSessionManager.setSecureCookies(boolean); 
void org.eclipse.jetty.server.session.AbstractSessionManager.setMaxCookieAge(int); 
void org.eclipse.jetty.server.NCSARequestLog.setLogTimeZone(java.lang.String); 
void org.eclipse.jetty.server.NCSARequestLog.setLogCookies(boolean); 
void org.eclipse.jetty.server.handler.MovedContextHandler.setDiscardQuery(boolean); 
void org.eclipse.jetty.server.AbstractConnector.setForwardedHostHeader(java.lang.String); 
void org.eclipse.jetty.server.Server.setMaxCookieVersion(int); 
void org.eclipse.jetty.server.handler.ContextHandler.setShutdown(boolean); 
void org.eclipse.jetty.server.Request.setHandled(boolean); 
void org.eclipse.jetty.server.session.JDBCSessionManager.storeSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData); 
void org.eclipse.jetty.server.handler.ContextHandler.setManagedAttribute(java.lang.String,java.lang.Object); 
void org.eclipse.jetty.server.handler.IPAccessHandler.handle(java.lang.String,org.eclipse.jetty.server.Request,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse); 
void org.eclipse.jetty.server.session.HashSessionManager.setMaxInactiveInterval(int); 
void org.eclipse.jetty.server.session.AbstractSessionManager.setMaxInactiveInterval(int); 
void org.eclipse.jetty.server.session.JDBCSessionManager.updateSession(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData); 
void org.eclipse.jetty.server.Response.setHeader(java.lang.String,java.lang.String); 
void org.eclipse.jetty.server.AbstractConnector.setConfidentialPort(int); 
void org.eclipse.jetty.server.Request.setUserIdentityScope(org.eclipse.jetty.server.UserIdentity$Scope); 
void org.eclipse.jetty.server.Response.setLocale(java.util.Locale); 
void org.eclipse.jetty.server.session.AbstractSessionManager.setSessionDomain(java.lang.String); 
void org.eclipse.jetty.server.handler.ContextHandler.setClassLoader(java.lang.ClassLoader); 
void org.eclipse.jetty.server.Request.setAttribute(java.lang.String,java.lang.Object); 
void org.eclipse.jetty.server.AbstractConnector.updateNotEqual(java.util.concurrent.atomic.AtomicLong,long,long); 
void org.eclipse.jetty.server.Request.setAsyncSupported(boolean); 
void org.eclipse.jetty.server.CookieCutter.setCookies(javax.servlet.http.Cookie[]); 
void org.eclipse.jetty.server.handler.ErrorHandler.write(java.io.Writer,java.lang.String); 
void org.eclipse.jetty.server.ssl.SslSocketConnector.setSslKeyManagerFactoryAlgorithm(java.lang.String); 
void org.eclipse.jetty.server.ssl.SslSocketConnector.setSecureRandomAlgorithm(java.lang.String); 
void org.eclipse.jetty.server.Request.setServletPath(java.lang.String); 
void org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setAlgorithm(java.lang.String); 
void org.eclipse.jetty.server.session.AbstractSessionManager.setCheckingRemoteSessionIdEncoding(boolean); 
void org.eclipse.jetty.server.Server.setAttribute(java.lang.String,java.lang.Object); 
void org.eclipse.jetty.server.handler.MovedContextHandler.setExpires(java.lang.String); 
void org.eclipse.jetty.server.AsyncContinuation.setAttribute(java.lang.String,java.lang.Object); 
void org.eclipse.jetty.server.handler.ResourceHandler.doDirectory(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.eclipse.jetty.util.resource.Resource); 
void org.eclipse.jetty.server.session.SessionHandler.setSessionManager(org.eclipse.jetty.server.SessionManager); 
void org.eclipse.jetty.server.Request.setSession(javax.servlet.http.HttpSession); 
void org.eclipse.jetty.server.Request.setServerPort(int); 
void org.eclipse.jetty.server.session.AbstractSessionIdManager.setWorkerName(java.lang.String); 
void org.eclipse.jetty.server.AbstractConnector.setHostHeader(java.lang.String); 
void org.eclipse.jetty.server.session.AbstractSessionManager.setSessionHandler(org.eclipse.jetty.server.session.SessionHandler); 
void org.eclipse.jetty.server.session.HashSessionManager.setSavePeriod(int); 
void org.eclipse.jetty.server.AbstractConnector.setMaxIdleTime(int); 
void org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setWantClientAuth(boolean); 
void org.eclipse.jetty.server.session.AbstractSessionManager.setHttpOnly(boolean); 
void org.eclipse.jetty.server.NCSARequestLog.setIgnorePaths(java.lang.String[]); 
void org.eclipse.jetty.server.handler.ErrorHandler.setCacheControl(java.lang.String); 
void org.eclipse.jetty.server.Request.setContextPath(java.lang.String); 
void org.eclipse.jetty.server.handler.ContextHandler.setContextPath(java.lang.String); 
void org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageBody(javax.servlet.http.HttpServletRequest,java.io.Writer,int,java.lang.String,boolean); 
void org.eclipse.jetty.server.handler.ContextHandler.setEventListeners(java.util.EventListener[]); 
void org.eclipse.jetty.server.AbstractConnector.setConfidentialScheme(java.lang.String); 
void org.eclipse.jetty.server.handler.HotSwapHandler.setServer(org.eclipse.jetty.server.Server); 
void org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageMessage(javax.servlet.http.HttpServletRequest,java.io.Writer,int,java.lang.String,java.lang.String); 
void org.eclipse.jetty.server.handler.ProxyHandler.setThreadPool(org.eclipse.jetty.util.thread.ThreadPool); 
void org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setKeystoreType(java.lang.String); 
void org.eclipse.jetty.server.session.AbstractSessionManager.setSessionCookie(java.lang.String); 
void org.eclipse.jetty.server.session.AbstractSessionManager.setMetaManager(org.eclipse.jetty.server.SessionIdManager); 
void org.eclipse.jetty.server.Request.setParameters(org.eclipse.jetty.util.MultiMap); 
void org.eclipse.jetty.server.session.SessionHandler.setServer(org.eclipse.jetty.server.Server); 
void org.eclipse.jetty.server.ResourceCache.setMaxCacheSize(int); 
void org.eclipse.jetty.server.session.JDBCSessionManager.updateSessionNode(org.eclipse.jetty.server.session.JDBCSessionManager$SessionData); 
void org.eclipse.jetty.server.handler.HotSwapHandler.setHandler(org.eclipse.jetty.server.Handler); 
void org.eclipse.jetty.server.handler.ResourceHandler.setAliases(boolean); 
void org.eclipse.jetty.server.AbstractConnector.setForwardedServerHeader(java.lang.String); 
void org.eclipse.jetty.server.AsyncContinuation.setTimeout(long); 
void org.eclipse.jetty.server.handler.HandlerWrapper.setHandler(org.eclipse.jetty.server.Handler); 
void org.eclipse.jetty.server.Request.setDispatcherType(org.eclipse.jetty.server.DispatcherType); 
void org.eclipse.jetty.server.handler.DefaultHandler.handle(java.lang.String,org.eclipse.jetty.server.Request,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse); 
void org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setIncludeCipherSuites(java.lang.String[]); 
void org.eclipse.jetty.server.Request.setProtocol(java.lang.String); 
void org.eclipse.jetty.server.handler.ContextHandler.setAttribute(java.lang.String,java.lang.Object); 
void org.eclipse.jetty.server.AbstractConnector.setAcceptQueueSize(int); 
void org.eclipse.jetty.server.Request.setScheme(java.lang.String); 
void org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setProvider(java.lang.String); 
void org.eclipse.jetty.server.handler.ContextHandlerCollection.setHandlers(org.eclipse.jetty.server.Handler[]); 
void org.eclipse.jetty.server.handler.ContextHandler.setConnectorNames(java.lang.String[]); 
void org.eclipse.jetty.server.ssl.SslSocketConnector.setExcludeCipherSuites(java.lang.String[]); 
void org.eclipse.jetty.server.handler.MovedContextHandler.setDiscardPathInfo(boolean); 
void org.eclipse.jetty.server.session.AbstractSessionManager.setRefreshCookieAge(int); 
void org.eclipse.jetty.server.handler.ContextHandler.setDisplayName(java.lang.String); 
void org.eclipse.jetty.server.ssl.SslSocketConnector.setSslContext(javax.net.ssl.SSLContext); 
void org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setSslContext(javax.net.ssl.SSLContext); 
void org.eclipse.jetty.server.Request.setConnection(org.eclipse.jetty.server.HttpConnection); 
void org.eclipse.jetty.server.Server.setSessionIdManager(org.eclipse.jetty.server.SessionIdManager); 
void org.eclipse.jetty.server.session.JDBCSessionIdManager.setDriverInfo(java.lang.String,java.lang.String); 
void org.eclipse.jetty.server.AbstractConnector.setAcceptors(int); 
void org.eclipse.jetty.server.handler.DebugHandler.handle(java.lang.String,org.eclipse.jetty.server.Request,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse); 
void org.eclipse.jetty.server.ssl.SslSocketConnector.setHandshakeTimeout(int); 
void org.eclipse.jetty.server.ssl.SslSocketConnector.setIncludeCipherSuites(java.lang.String[]); 
void org.eclipse.jetty.server.ssl.SslSocketConnector.setProvider(java.lang.String); 
void org.eclipse.jetty.server.Server.setSendDateHeader(boolean); 
void org.eclipse.jetty.server.NCSARequestLog.log(org.eclipse.jetty.server.Request,org.eclipse.jetty.server.Response); 
void org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setNeedClientAuth(boolean); 
void org.eclipse.jetty.server.Request.setServerName(java.lang.String); 
void org.eclipse.jetty.server.Request.setPathInfo(java.lang.String); 
void org.eclipse.jetty.server.Response.setDateHeader(java.lang.String,long); 
void org.eclipse.jetty.server.handler.ContextHandler.setCompactPath(boolean); 
void org.eclipse.jetty.server.AbstractConnector.setHost(java.lang.String); 
void org.eclipse.jetty.server.handler.ContextHandler.setHosts(java.lang.String[]); 
void org.eclipse.jetty.server.Server.setGracefulShutdown(int); 
void org.eclipse.jetty.server.session.HashSessionManager.setScavengePeriod(int); 
void org.eclipse.jetty.server.ssl.SslSelectChannelConnector.setSecureRandomAlgorithm(java.lang.String); 
void org.eclipse.jetty.server.handler.ResourceHandler.setDirectoriesListed(boolean); 
void org.eclipse.jetty.server.AsyncContinuation.setConnection(org.eclipse.jetty.server.HttpConnection); 
void org.eclipse.jetty.server.Request.setAttributes(org.eclipse.jetty.util.Attributes); 
void org.eclipse.jetty.server.handler.ContextHandler.setAliases(boolean); 
void org.eclipse.jetty.server.handler.ContextHandler.setAllowNullPathInfo(boolean); 
void org.eclipse.jetty.server.session.AbstractSessionManager.setSessionIdPathParameterName(java.lang.String); 
void org.eclipse.jetty.server.Response.setCharacterEncoding(java.lang.String); 
void org.eclipse.jetty.server.session.AbstractSessionIdManager.setRandom(java.util.Random); 
void org.eclipse.jetty.server.ssl.SslSocketConnector.setTruststoreType(java.lang.String); 
void org.eclipse.jetty.server.handler.ContextHandler.setMimeTypes(org.eclipse.jetty.http.MimeTypes); 
void org.eclipse.jetty.server.AbstractConnector.setLowResourcesMaxIdleTime(int); 
void org.eclipse.jetty.server.handler.ContextHandler.setErrorHandler(org.eclipse.jetty.server.handler.ErrorHandler); 
void org.eclipse.jetty.server.handler.ProxyHandler.setServer(org.eclipse.jetty.server.Server); 
void org.eclipse.jetty.server.handler.ProxyHandler.set(java.lang.String[],org.eclipse.jetty.util.HostMap); 
void org.eclipse.jetty.server.handler.ProxyHandler.setBlack(java.lang.String[]); 
void org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPage(javax.servlet.http.HttpServletRequest,java.io.Writer,int,java.lang.String,boolean); 
void org.eclipse.jetty.server.handler.ErrorHandler.setShowStacks(boolean); 
void org.eclipse.jetty.server.handler.ResourceHandler.setCacheControl(java.lang.String); 
void org.eclipse.jetty.server.handler.ResourceHandler.setMimeTypes(org.eclipse.jetty.http.MimeTypes); 
void org.eclipse.jetty.server.session.JDBCSessionIdManager.setDatasourceName(java.lang.String); 
void org.eclipse.jetty.server.NCSARequestLog.setRetainDays(int); 
void org.eclipse.jetty.server.Server.setSendServerVersion(boolean); 
void org.eclipse.jetty.server.Request.setSessionManager(org.eclipse.jetty.server.SessionManager); 
void org.eclipse.jetty.server.ssl.SslSocketConnector.setPassword(java.lang.String); 
void org.eclipse.jetty.server.Request.setAuthentication(org.eclipse.jetty.server.Authentication); 
void org.eclipse.jetty.server.ssl.SslSocketConnector.setAllowRenegotiate(boolean); 
void org.eclipse.jetty.server.Response.setContentType(java.lang.String); 
void org.eclipse.jetty.server.handler.DebugHandler.setOutputStream(java.io.OutputStream); 
void org.eclipse.jetty.server.handler.ErrorHandler.handleErrorPage(javax.servlet.http.HttpServletRequest,java.io.Writer,int,java.lang.String); 
void org.eclipse.jetty.server.Server.setStopAtShutdown(boolean); 
void org.eclipse.jetty.server.AbstractConnector.setLowResourceMaxIdleTime(int); 
void org.eclipse.jetty.server.LocalConnector.executeRequest(java.lang.String); 
void org.eclipse.jetty.server.NCSARequestLog.setLogDateFormat(java.lang.String); 
void org.eclipse.jetty.server.HttpOutput.print(java.lang.String); 
void org.eclipse.jetty.server.Request.setRemoteAddr(java.lang.String); 
]
methods CWE306_authentications_to_high [ 
void org.eclipse.jetty.server.HttpConnection.setCurrentConnection(org.eclipse.jetty.server.HttpConnection); 
void org.eclipse.jetty.server.handler.ProxyHandler.setConnectTimeout(int); 
void org.eclipse.jetty.server.handler.ProxyHandler.handleConnect(org.eclipse.jetty.server.Request,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String); 
org.eclipse.jetty.io.Connection org.eclipse.jetty.server.nio.SelectChannelConnector.newConnection(java.nio.channels.SocketChannel,org.eclipse.jetty.io.nio.SelectChannelEndPoint); 
void org.eclipse.jetty.server.nio.SelectChannelConnector.setLowResourcesConnections(int); 
void org.eclipse.jetty.server.Server.setConnectors(org.eclipse.jetty.server.Connector[]); 
void org.eclipse.jetty.server.AbstractConnector.connectionClosed(org.eclipse.jetty.io.Connection); 
org.eclipse.jetty.server.handler.ProxyHandler$ClientToProxyConnection org.eclipse.jetty.server.handler.ProxyHandler.prepareConnections(java.util.concurrent.ConcurrentMap,java.nio.channels.SocketChannel,org.eclipse.jetty.io.Buffer); 
org.eclipse.jetty.io.Connection org.eclipse.jetty.server.bio.SocketConnector.newConnection(org.eclipse.jetty.io.EndPoint); 
org.eclipse.jetty.server.handler.ProxyHandler$ProxyToServerConnection org.eclipse.jetty.server.handler.ProxyHandler.newProxyToServerConnection(java.util.concurrent.ConcurrentMap,org.eclipse.jetty.io.Buffer); 
void org.eclipse.jetty.server.Server.addConnector(org.eclipse.jetty.server.Connector); 
void org.eclipse.jetty.server.handler.ProxyHandler.upgradeConnection(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.eclipse.jetty.io.Connection); 
java.nio.channels.SocketChannel org.eclipse.jetty.server.handler.ProxyHandler.connect(javax.servlet.http.HttpServletRequest,java.lang.String,int); 
void org.eclipse.jetty.server.AbstractConnector.connectionOpened(org.eclipse.jetty.io.Connection); 
org.eclipse.jetty.server.handler.ProxyHandler$ClientToProxyConnection org.eclipse.jetty.server.handler.ProxyHandler.newClientToProxyConnection(java.util.concurrent.ConcurrentMap,java.nio.channels.SocketChannel,org.eclipse.jetty.io.EndPoint,long); 
void org.eclipse.jetty.server.AbstractConnector.connectionUpgraded(org.eclipse.jetty.io.Connection,org.eclipse.jetty.io.Connection); 
void org.eclipse.jetty.server.Request.setConnection(org.eclipse.jetty.server.HttpConnection); 
org.eclipse.jetty.io.Connection org.eclipse.jetty.server.ssl.SslSelectChannelConnector.newConnection(java.nio.channels.SocketChannel,org.eclipse.jetty.io.nio.SelectChannelEndPoint); 
void org.eclipse.jetty.server.AsyncContinuation.setConnection(org.eclipse.jetty.server.HttpConnection); 
void org.eclipse.jetty.server.Server.removeConnector(org.eclipse.jetty.server.Connector); 
void org.eclipse.jetty.server.Request.setAuthentication(org.eclipse.jetty.server.Authentication); 
java.nio.channels.SocketChannel org.eclipse.jetty.server.handler.ProxyHandler.connectToServer(javax.servlet.http.HttpServletRequest,java.lang.String,int); 
]
methods CWE306_authentications_to_low [ 
org.eclipse.jetty.server.HttpConnection org.eclipse.jetty.server.HttpConnection.getCurrentConnection(); 
void org.eclipse.jetty.server.LocalConnector.close(); 
void org.eclipse.jetty.server.nio.BlockingChannelConnector.close(); 
void org.eclipse.jetty.server.bio.SocketConnector.close(); 
]
methods CWE306_authentications_neutral [ 
boolean org.eclipse.jetty.server.handler.ProxyHandler.handleAuthentication(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String); 
org.eclipse.jetty.server.HttpConnection org.eclipse.jetty.server.Request.getConnection(); 
org.eclipse.jetty.server.Authentication org.eclipse.jetty.server.Request.getAuthentication(); 
int org.eclipse.jetty.server.nio.SelectChannelConnector.getLowResourcesConnections(); 
java.lang.Object org.eclipse.jetty.server.LocalConnector.getConnection(); 
double org.eclipse.jetty.server.AbstractConnector.getConnectionsRequestsMean(); 
long org.eclipse.jetty.server.AbstractConnector.getConnectionsDurationMax(); 
java.lang.Object org.eclipse.jetty.server.nio.BlockingChannelConnector.getConnection(); 
java.lang.String org.eclipse.jetty.server.session.JDBCSessionIdManager.getConnectionUrl(); 
int org.eclipse.jetty.server.AbstractConnector.getConnectionsOpenMax(); 
java.lang.String[] org.eclipse.jetty.server.handler.ContextHandler.getConnectorNames(); 
java.lang.Object org.eclipse.jetty.server.bio.SocketConnector.getConnection(); 
java.lang.Object org.eclipse.jetty.server.nio.SelectChannelConnector.getConnection(); 
int org.eclipse.jetty.server.AbstractConnector.getConnectionsRequestsMax(); 
long org.eclipse.jetty.server.AbstractConnector.getConnectionsDurationTotal(); 
double org.eclipse.jetty.server.AbstractConnector.getConnectionsDurationStdDev(); 
int org.eclipse.jetty.server.AbstractConnector.getConnections(); 
double org.eclipse.jetty.server.AbstractConnector.getConnectionsRequestsStdDev(); 
org.eclipse.jetty.server.Connector org.eclipse.jetty.server.HttpConnection.getConnector(); 
org.eclipse.jetty.server.Connector[] org.eclipse.jetty.server.Server.getConnectors(); 
double org.eclipse.jetty.server.AbstractConnector.getConnectionsDurationMean(); 
java.sql.Connection org.eclipse.jetty.server.session.JDBCSessionManager.getConnection(); 
java.sql.Connection org.eclipse.jetty.server.session.JDBCSessionIdManager.getConnection(); 
int org.eclipse.jetty.server.AbstractConnector.getConnectionsOpen(); 
int org.eclipse.jetty.server.handler.ProxyHandler.getConnectTimeout(); 
]
methods CWE306_sanitizers [ 
java.lang.String org.eclipse.jetty.server.Response.encodeURL(java.lang.String); 
java.lang.String org.eclipse.jetty.server.Response.encodeUrl(java.lang.String); 
java.lang.String org.eclipse.jetty.server.Response.encodeRedirectURL(java.lang.String); 
java.lang.String org.eclipse.jetty.server.Response.encodeRedirectUrl(java.lang.String); 
]
methods CWE306_none [ 
]
